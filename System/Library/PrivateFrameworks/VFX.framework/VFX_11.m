uint64_t sub_1B1D88638(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v1 + 256))(a1 & 1);
}

uint64_t sub_1B1D88648()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t sub_1B1D88654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  sub_1B1792854(0, (unint64_t *)&qword_1ED4B7B50, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(uint64_t **)(v13 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw);
  v15 = swift_conformsToProtocol2();
  if (v15)
    v16 = v15;
  else
    v16 = 0;
  if (v15)
    v17 = v14;
  else
    v17 = 0;
  if (v17)
  {
    v30 = v4;
    v18 = *v17;
    swift_retain();
    v19 = sub_1B1BCE288(1);
    v29 = a4;
    v20 = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(a2, a3, v18, v16);
    v21 = *(_QWORD *)(v13 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs);
    v22 = v13 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    v23 = sub_1B222826C();
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v12, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v23);
    v25 = *(_QWORD *)(v13 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
    v26 = *(_QWORD *)(v13 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
    type metadata accessor for AuthoringNode();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1B1AEB720(v25, v26);
    v13 = sub_1B20E4E94(v20, v21, (uint64_t)v12, v25, v26);
    swift_release();
    a4 = v29;
    result = swift_release();
  }
  else
  {
    result = swift_retain();
  }
  *a4 = v13;
  return result;
}

uint64_t sub_1B1D88840()
{
  return 1701669204;
}

double sub_1B1D88850@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B1D8DCC0((unint64_t)&unk_1E63C2E10, a1);
}

unint64_t sub_1B1D88860(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0xD00000000000002DLL;
}

uint64_t sub_1B1D8889C()
{
  return type metadata accessor for TimeNode(0);
}

uint64_t type metadata accessor for TimeNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E478);
}

uint64_t sub_1B1D888BC()
{
  return 0x6D695461746C6544;
}

double sub_1B1D888D8@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B1D8DCC0((unint64_t)&unk_1E6379C00, a1);
}

unint64_t sub_1B1D888E8(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0xD00000000000002CLL;
}

uint64_t sub_1B1D88924()
{
  return type metadata accessor for DeltaTimeNode(0);
}

uint64_t type metadata accessor for DeltaTimeNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E488);
}

uint64_t sub_1B1D88940()
{
  return 0x4674737269467349;
}

double sub_1B1D88960@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B1D8DCC0((unint64_t)&unk_1E6387D70, a1);
}

unint64_t sub_1B1D88970(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD00000000000001CLL;
  else
    return 0xD000000000000030;
}

uint64_t sub_1B1D889AC()
{
  return type metadata accessor for IsFirstFrameNode(0);
}

uint64_t type metadata accessor for IsFirstFrameNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E498);
}

uint64_t sub_1B1D889C8@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1B1D8EB78(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B1D889F0()
{
  sub_1B1D8EB8C();
  return sub_1B2228A7C();
}

uint64_t sub_1B1D88A4C()
{
  sub_1B1D8EB8C();
  return sub_1B2228A04();
}

void sub_1B1D88A98(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E63C2EC8;
}

uint64_t sub_1B1D88AA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1D88AD0 + 4 * byte_1B2293600[*v0]))(1852399981, 0xE400000000000000);
}

uint64_t sub_1B1D88AD0()
{
  return 0x6E77617073;
}

uint64_t sub_1B1D88AE4()
{
  return 0x696C616974696E69;
}

uint64_t sub_1B1D88B00()
{
  return 0x656C636974726170;
}

uint64_t sub_1B1D88B48()
{
  return 0x7265646E6572;
}

uint64_t sub_1B1D88B5C()
{
  return 0x72656767697274;
}

unint64_t sub_1B1D88B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 32);
  if (swift_conformsToProtocol2())
    v2 = v1;
  else
    v2 = 0;
  if (v2)
    return 0x8000000000000020;
  result = sub_1B1D76F30(v1);
  if ((~result & 0xF000000000000007) == 0)
  {
    sub_1B2229430();
    sub_1B222A210();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

_QWORD *sub_1B1D88C78(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int16 v8;
  uint64_t v9;

  v2 = swift_allocObject();
  v3 = (char *)a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
  v5 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 8);
  v4 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 16);
  v6 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 40);
  v7 = *((_BYTE *)a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 48);
  v8 = *(_WORD *)((char *)a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 50);
  v9 = v2 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
  *(_QWORD *)v9 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath);
  *(_QWORD *)(v9 + 8) = v5;
  *(_QWORD *)(v9 + 16) = v4;
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(v9 + 40) = v6;
  *(_BYTE *)(v9 + 48) = v7;
  *(_WORD *)(v9 + 50) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D88D0C()
{
  uint64_t v1;

  v1 = sub_1B1BC3C70();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B2229304();
  sub_1B222A210();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_release();
  swift_bridgeObjectRelease_n();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B1D88DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRetain();
  swift_retain();
  v0 = sub_1B2229304();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = swift_conformsToProtocol2();
  if (v1)
    v2 = v1;
  else
    v2 = 0;
  if (v1)
    v3 = v0;
  else
    v3 = 0;
  if (v3)
    return (*(uint64_t (**)(void))(v2 + 16))();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B2229304();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B1B9CCA4();
  return sub_1B22287AC();
}

uint64_t sub_1B1D88EBC()
{
  type metadata accessor for SetECSValueNode(0);
  swift_dynamicCastClass();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1D88DE0();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B1D88FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t result;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
  result = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath);
  sub_1B1F02EF0(result, 0, ObjectType, a2);
  *(_QWORD *)(v3 + v6) = result;
  return result;
}

uint64_t sub_1B1D89050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int16 v7;
  char v8;
  uint64_t v9;

  sub_1B1A02758(0, &qword_1ED4BAD88, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B226D240;
  v2 = v0 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 8);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 16);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 40);
  v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 48);
  v7 = *(_WORD *)(v0 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 50);
  type metadata accessor for SetECSValueNode(0);
  if (swift_dynamicCastClass())
    v8 = 2;
  else
    v8 = 1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)v2;
  *(_QWORD *)(v9 + 24) = v4;
  *(_QWORD *)(v9 + 32) = v3;
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(v9 + 56) = v5;
  *(_BYTE *)(v9 + 64) = v6;
  *(_WORD *)(v9 + 66) = v7;
  *(_QWORD *)(v1 + 32) = v9 | 0x3000000000000000;
  *(_BYTE *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  swift_bridgeObjectRetain();
  swift_retain();
  return v1;
}

uint64_t sub_1B1D8916C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int16 v11;
  _QWORD v12[4];

  sub_1B19FA070(a1, a1[3]);
  result = sub_1B222A138();
  if (!v2)
  {
    sub_1B19FA070(v12, v12[3]);
    sub_1B1D8EEF4();
    sub_1B2229D6C();
    v4 = v1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath;
    *(_QWORD *)v4 = v5;
    *(_QWORD *)(v4 + 8) = v6;
    *(_OWORD *)(v4 + 16) = v7;
    *(_QWORD *)(v4 + 32) = v8;
    *(_QWORD *)(v4 + 40) = v9;
    *(_BYTE *)(v4 + 48) = v10;
    *(_WORD *)(v4 + 50) = v11;
    swift_release();
    swift_bridgeObjectRelease();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
  }
  return result;
}

void sub_1B1D8926C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B1D89298()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D892C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1D89348()
{
  return type metadata accessor for _ECSValueNode(0);
}

uint64_t type metadata accessor for _ECSValueNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E4A8);
}

uint64_t sub_1B1D89364()
{
  return sub_1B1D8C2D4();
}

uint64_t sub_1B1D89370(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  sub_1B19FA070(a1, a1[3]);
  sub_1B222A168();
  sub_1B19FC264((uint64_t)v2, v3);
  sub_1B1D8E624();
  sub_1B2229DF0();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B1D8944C(_QWORD *a1)
{
  return sub_1B1D8916C(a1);
}

uint64_t sub_1B1D89460@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B226CD10;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0x8000000000000008;
  *(_QWORD *)(v3 + 32) = v4 | 0x6000000000000000;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1B1D88B74();
  *(_QWORD *)(v3 + 40) = v5 | 0x6000000000000000;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0x8000000000000008;
  *(_QWORD *)(v6 + 32) = v7 | 0x6000000000000000;
  sub_1B1D8EDDC(0, (unint64_t *)&qword_1EEF5CB80, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226CD10;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = 0;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 16);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 8);
  *(_QWORD *)(v8 + 56) = v9;
  *a1 = v3;
  a1[1] = v6;
  a1[2] = (uint64_t)&unk_1E63856E8;
  a1[3] = v8;
  v10 = MEMORY[0x1E0DEE9D8];
  a1[4] = MEMORY[0x1E0DEE9D8];
  a1[5] = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1D895E0()
{
  return sub_1B2076020();
}

uint64_t sub_1B1D895F4()
{
  return type metadata accessor for SetECSValueNode(0);
}

uint64_t type metadata accessor for SetECSValueNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E4B8);
}

uint64_t sub_1B1D89614()
{
  return type metadata accessor for InspectorSetECSValueNode(0);
}

uint64_t type metadata accessor for InspectorSetECSValueNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E4C8);
}

double sub_1B1D89630@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1B1A02758(0, &qword_1EEF5E8F0, (uint64_t)&type metadata for AnyType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = sub_1B1D88B74();
  sub_1B1BCF75C(inited, v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_1B1D8EDDC(0, (unint64_t *)&qword_1EEF5CB80, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 16);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 8);
  *(_QWORD *)(v4 + 40) = v5;
  v6 = v11;
  v12 = v10;
  swift_bridgeObjectRetain();
  sub_1B1B28C6C((uint64_t)&v12);
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_1B1D89748(char a1)
{
  return sub_1B1D52AE0(0, 0, a1 & 1);
}

uint64_t sub_1B1D89758()
{
  return type metadata accessor for GetECSValueNode(0);
}

uint64_t type metadata accessor for GetECSValueNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E4D8);
}

uint64_t sub_1B1D89774()
{
  return swift_updateClassMetadata2();
}

_QWORD *sub_1B1D897A8(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int16 v7;
  uint64_t v8;

  v2 = swift_allocObject();
  v3 = (char *)a1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath;
  v4 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 8);
  v5 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 32);
  v6 = *((_BYTE *)a1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 40);
  v7 = *(_WORD *)((char *)a1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 42);
  v8 = v2 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath;
  *(_QWORD *)v8 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath);
  *(_QWORD *)(v8 + 8) = v4;
  *(_OWORD *)(v8 + 16) = *((_OWORD *)v3 + 1);
  *(_QWORD *)(v8 + 32) = v5;
  *(_BYTE *)(v8 + 40) = v6;
  *(_WORD *)(v8 + 42) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D89834()
{
  __objc2_class **v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int16 v7;
  char v8;
  uint64_t v9;

  sub_1B1A02758(0, &qword_1ED4BAD88, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B226D240;
  v2 = (char *)v0 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath;
  v4 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath);
  v3 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 8);
  v5 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 32);
  v6 = *((_BYTE *)v0 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 40);
  v7 = *(_WORD *)((char *)v0 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 42);
  if (*v0 == _TtC3VFX20SetParticleValueNode)
    v8 = 2;
  else
    v8 = 1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v3;
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v2 + 1);
  *(_QWORD *)(v9 + 48) = v5;
  *(_BYTE *)(v9 + 56) = v6;
  *(_WORD *)(v9 + 58) = v7;
  *(_BYTE *)(v9 + 60) = 5;
  *(_QWORD *)(v1 + 32) = v9 | 0x9000000000000000;
  *(_BYTE *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  swift_bridgeObjectRetain();
  swift_retain();
  return v1;
}

void sub_1B1D8994C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B1D89978()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D899A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1D89A28()
{
  return type metadata accessor for _ParticleValueNode(0);
}

uint64_t type metadata accessor for _ParticleValueNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E4E8);
}

uint64_t sub_1B1D89A44()
{
  return sub_1B1D8C2D4();
}

uint64_t sub_1B1D89A50(_QWORD *a1)
{
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAD980();
  return sub_1B1FF5998();
}

uint64_t sub_1B1D89AF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int16 v10;

  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAD7DC();
  result = sub_1B1FF5A30();
  if (!v2)
  {
    v4 = v1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath;
    *(_QWORD *)v4 = v5;
    *(_OWORD *)(v4 + 8) = v6;
    *(_QWORD *)(v4 + 24) = v7;
    *(_QWORD *)(v4 + 32) = v8;
    *(_BYTE *)(v4 + 40) = v9;
    *(_WORD *)(v4 + 42) = v10;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1D89BB4()
{
  return sub_1B1D89D3C(0x6974726150746553);
}

uint64_t sub_1B1D89BC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B226CD10;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0x8000000000000008;
  *(_QWORD *)(v3 + 32) = v4 | 0x6000000000000000;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1B1D778A0(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 24));
  *(_QWORD *)(v3 + 40) = v5 | 0x6000000000000000;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x8000000000000008;
  *(_QWORD *)(v6 + 32) = result | 0x6000000000000000;
  *a1 = v3;
  a1[1] = v6;
  v8 = MEMORY[0x1E0DEE9D8];
  a1[2] = (uint64_t)&unk_1E639F330;
  a1[3] = v8;
  a1[4] = v8;
  a1[5] = v8;
  return result;
}

uint64_t sub_1B1D89CF8()
{
  return sub_1B2076330();
}

uint64_t sub_1B1D89D08()
{
  return type metadata accessor for SetParticleValueNode(0);
}

uint64_t type metadata accessor for SetParticleValueNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E4F8);
}

uint64_t sub_1B1D89D28()
{
  return sub_1B1D89D3C(0x6974726150746547);
}

uint64_t sub_1B1D89D3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = sub_1B2229304();
  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(result + 16))(v1, result);
    sub_1B2228890();
    swift_bridgeObjectRelease();
    return a1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1B1D89DC4@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t inited;
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;

  sub_1B1A02758(0, &qword_1EEF5E8F0, (uint64_t)&type metadata for AnyType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = sub_1B1D778A0(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX18_ParticleValueNode_keyPath + 24));
  sub_1B1BCF75C(inited, v6);
  swift_setDeallocating();
  swift_arrayDestroy();
  v4 = v6[1];
  *a1 = v6[0];
  a1[1] = v4;
  result = *(double *)&v7;
  a1[2] = v7;
  return result;
}

uint64_t sub_1B1D89E7C()
{
  return type metadata accessor for GetParticleValueNode(0);
}

uint64_t type metadata accessor for GetParticleValueNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E508);
}

uint64_t sub_1B1D89E98()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D89ECC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B226D240;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x8000000000000008;
  *(_QWORD *)(v2 + 32) = result | 0x6000000000000000;
  v4 = MEMORY[0x1E0DEE9D8];
  *a1 = v2;
  a1[1] = v4;
  a1[2] = (uint64_t)&unk_1E63BE290;
  a1[3] = v4;
  a1[4] = v4;
  a1[5] = v4;
  return result;
}

uint64_t sub_1B1D89F68()
{
  return type metadata accessor for _OnNode(0);
}

uint64_t type metadata accessor for _OnNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E518);
}

uint64_t sub_1B1D89F84()
{
  return 0x6574616470556E4FLL;
}

uint64_t sub_1B1D89F9C()
{
  return type metadata accessor for OnUpdateNode(0);
}

uint64_t type metadata accessor for OnUpdateNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E528);
}

uint64_t sub_1B1D89FB8()
{
  return 0x4674737269466E4FLL;
}

uint64_t sub_1B1D89FD8()
{
  return type metadata accessor for OnFirstFrameNode(0);
}

uint64_t type metadata accessor for OnFirstFrameNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E538);
}

uint64_t sub_1B1D89FF4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8A028()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX19OnParticleStageNode_stage);
  if (v1 == 3)
    return 0x6369747261506E4FLL;
  if (v1 == 5)
    return 0xD000000000000010;
  result = sub_1B2229688();
  __break(1u);
  return result;
}

_QWORD *sub_1B1D8A0E8(_QWORD *a1)
{
  *(_BYTE *)(swift_allocObject() + OBJC_IVAR____TtC3VFX19OnParticleStageNode_stage) = *((_BYTE *)a1
                                                                                      + OBJC_IVAR____TtC3VFX19OnParticleStageNode_stage);
  return sub_1B1BCE388(a1);
}

void sub_1B1D8A130()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B1D8A15C()
{
  return type metadata accessor for OnParticleStageNode(0);
}

uint64_t type metadata accessor for OnParticleStageNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E548);
}

uint64_t sub_1B1D8A178()
{
  return sub_1B1D8C2D4();
}

uint64_t sub_1B1D8A184(_QWORD *a1)
{
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D8E6AC();
  return sub_1B1FF5998();
}

uint64_t sub_1B1D8A1F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;

  sub_1B19FA070(a1, a1[3]);
  sub_1B1D8E668();
  result = sub_1B1FF5A30();
  if (!v2)
    *(_BYTE *)(v1 + OBJC_IVAR____TtC3VFX19OnParticleStageNode_stage) = v4;
  return result;
}

unint64_t sub_1B1D8A278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  char v14[16];
  unint64_t v15;
  unint64_t v16;

  sub_1B1792854(0, (unint64_t *)&qword_1ED4B7B60, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = &v14[-v2];
  v4 = sub_1B222874C();
  v6 = v5;
  v15 = v4;
  v16 = v5;
  strcpy(v14, "VFXTriggerType");
  v14[15] = -18;
  v7 = sub_1B2228278();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_1B1A06460();
  v8 = sub_1B222925C();
  v10 = v9;
  v12 = v11;
  sub_1B1BB9EF0((uint64_t)v3);
  if ((v12 & 1) == 0)
  {
    v4 = sub_1B1D8E6F0(v8, v10, 28239, 0xE200000000000000, v4, v6);
    swift_bridgeObjectRelease();
  }
  return v4;
}

_QWORD *sub_1B1D8A3D4(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = swift_allocObject();
  v3 = *(void **)((char *)a1 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = v3;
  v4 = v3;
  return sub_1B1BCE388(a1);
}

_QWORD *sub_1B1D8A420()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];

  v1 = v0[4];
  sub_1B1BCCD2C(v0[3]);
  v2 = swift_bridgeObjectRelease();
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*v0 + 152))(v21, v2);
  v3 = v22;
  v28 = v21[0];
  v29[0] = v22;
  swift_bridgeObjectRetain();
  sub_1B1B28C6C((uint64_t)&v28);
  v27 = v21[1];
  sub_1B1B28C6C((uint64_t)&v27);
  v26 = v21[2];
  sub_1B1B28C6C((uint64_t)&v26);
  v25 = v21[3];
  sub_1B1B28C6C((uint64_t)&v25);
  sub_1B1B28C6C((uint64_t)v29);
  v24 = v23;
  sub_1B1B28C6C((uint64_t)&v24);
  v4 = *(_QWORD *)(v1 + 16);
  if (v4 != *(_QWORD *)(v3 + 16))
    goto LABEL_18;
  if (v4 >= 2)
  {
    v7 = 0;
    v20 = v4 - 1;
    v8 = (unint64_t *)(v3 + 56);
    v9 = v1 + 40;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v10 = *(_QWORD *)(v9 + 8 * v7);
      v11 = *v8;
      if (*v8)
      {
        v12 = *(v8 - 1);
        sub_1B1B632F0(*(_QWORD *)(v9 + 8 * v7));
        v13 = v11;
      }
      else
      {
        sub_1B1B632F0(v10);
        sub_1B2229A0C();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        v12 = 0x6D61726170;
        v13 = 0xE500000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1B1D77964(v10);
      if (!v14)
      {
        sub_1B2229430();
        sub_1B2228890();
        sub_1B22295EC();
        while (1)
        {
          sub_1B2229688();
          __break(1u);
LABEL_18:
          sub_1B2229430();
          swift_bridgeObjectRelease();
          sub_1B2229A0C();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          sub_1B2229A0C();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
        }
      }
      v15 = sub_1B1A0D3D0();
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v12;
      *(_QWORD *)(v16 + 24) = v13;
      *(_QWORD *)(v16 + 32) = v15;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1B1C638E4(0, v5[2] + 1, 1, v5);
      v18 = v5[2];
      v17 = v5[3];
      if (v18 >= v17 >> 1)
        v5 = sub_1B1C638E4(v17 > 1, v18 + 1, 1, v5);
      v5[2] = v18 + 1;
      v19 = &v5[4 * v18];
      v19[4] = v16 | 0xE000000000000000;
      *((_BYTE *)v19 + 40) = 1;
      v19[6] = 0;
      *((_BYTE *)v19 + 56) = 1;
      swift_release();
      sub_1B1B28D2C(v10);
      ++v7;
      v8 += 2;
    }
    while (v20 != v7);
  }
  else
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  sub_1B1B28C6C((uint64_t)v29);
  return v5;
}

uint64_t sub_1B1D8A82C(char a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1 & 1;
  v2 = swift_retain();
  v3 = sub_1B214F4E0(v2, v1);
  swift_release();
  return v3;
}

uint64_t sub_1B1D8A878(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t inited;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v34 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  if (v34 >= 2)
  {
    v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v20 = 1;
    v21 = &qword_1EEF5AFE0;
    do
    {
      sub_1B2229430();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2229A0C();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      v22 = v20 - 1;
      sub_1B2229A0C();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B1A02758(0, &qword_1EEF5CC20, (uint64_t)&type metadata for CodeEmitter.Code, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1B226D240;
      *(_QWORD *)(v23 + 32) = 0;
      v24 = v23 + 32;
      *(_QWORD *)(v23 + 40) = 0xE000000000000000;
      v25 = v21;
      sub_1B1D8EDDC(0, (unint64_t *)&qword_1EEF5CC10, v21, (uint64_t)&type metadata for CodeEmitter.Code, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      *(_QWORD *)(v23 + 48) = 0;
      *(_QWORD *)(v23 + 56) = 0;
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B226D240;
      *(_QWORD *)(inited + 32) = v23;
      v27 = *(_QWORD *)(v23 + 16);
      swift_bridgeObjectRetain();
      v28 = sub_1B1C65D70(0, v27, 1, MEMORY[0x1E0DEE9D8]);
      v29 = v28;
      if (*(_QWORD *)(v23 + 16))
      {
        v30 = (unint64_t)&v28[4 * v28[2] + 4];
        if (v24 < v30 + 32 * v27 && v30 < v24 + 32 * v27)
        {
          swift_release();
          goto LABEL_45;
        }
        swift_arrayInitWithCopy();
        if (v27)
          v29[2] += v27;
      }
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      v21 = v25;
      sub_1B1A02758(0, v25, (uint64_t)&type metadata for CodeEmitter.Code, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_arrayDestroy();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v1 = sub_1B1C65E78(0, v1[2] + 1, 1, v1);
      v33 = v1[2];
      v32 = v1[3];
      v2 = v33 + 1;
      if (v33 >= v32 >> 1)
        v1 = sub_1B1C65E78(v32 > 1, v33 + 1, 1, v1);
      v1[2] = v2;
      v1[v33 + 4] = v29;
      ++v20;
    }
    while (v22 + 2 != v34);
  }
  else
  {
    v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v2 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v2)
      goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v4 = 0;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = v1[v4 + 4];
    v6 = *(_QWORD *)(v5 + 16);
    v7 = v3[2];
    v8 = v7 + v6;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= v3[3] >> 1)
    {
      if (!*(_QWORD *)(v5 + 16))
        goto LABEL_4;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v3 = sub_1B1C65D70(isUniquelyReferenced_nonNull_native, v10, 1, v3);
      if (!*(_QWORD *)(v5 + 16))
        goto LABEL_4;
    }
    v11 = (unint64_t)&v3[4 * v3[2] + 4];
    if (v5 + 32 < v11 + 32 * v6 && v11 < v5 + 32 + 32 * v6)
      goto LABEL_45;
    swift_arrayInitWithCopy();
    if (v6)
      v3[2] += v6;
LABEL_4:
    swift_bridgeObjectRelease();
    ++v4;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  sub_1B1D8EDDC(0, (unint64_t *)&qword_1EEF5CC10, &qword_1EEF5AFE0, (uint64_t)&type metadata for CodeEmitter.Code, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v13 + 32) = v3;
  v14 = v3[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1B1C65D70(0, v14, 1, MEMORY[0x1E0DEE9D8]);
  v16 = v15;
  if (!v3[2])
    goto LABEL_29;
  v17 = (unint64_t)&v15[4 * v15[2] + 4];
  if ((unint64_t)(v3 + 4) >= v17 + 32 * v14 || v17 >= (unint64_t)&v3[4 * v14 + 4])
  {
    swift_arrayInitWithCopy();
    if (v14)
      v16[2] += v14;
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B1A02758(0, &qword_1EEF5AFE0, (uint64_t)&type metadata for CodeEmitter.Code, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_arrayDestroy();
    return (uint64_t)v16;
  }
LABEL_45:
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1D8AE10()
{
  sub_1B222A06C();
  sub_1B2228824();
  return sub_1B222A0C0();
}

uint64_t sub_1B1D8AE64()
{
  return sub_1B2228824();
}

uint64_t sub_1B1D8AE80()
{
  sub_1B222A06C();
  sub_1B2228824();
  return sub_1B222A0C0();
}

uint64_t sub_1B1D8AED0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B2229730();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B1D8AF20(_QWORD *a1@<X8>)
{
  *a1 = 0x707954746E657665;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_1B1D8AF40()
{
  return 0x707954746E657665;
}

uint64_t sub_1B1D8AF5C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B2229730();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B1D8AFB0()
{
  sub_1B1D8EE58();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D8AFD8()
{
  sub_1B1D8EE58();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D8B000(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = v1;
  sub_1B19F8E54(0, &qword_1EEF5E6C8, (uint64_t (*)(void))sub_1B1D8EE58, (uint64_t)&type metadata for OnTriggerNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)v11 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D8EE58();
  sub_1B222A180();
  v11[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType);
  type metadata accessor for VFXTriggerType(0);
  sub_1B19E52CC(&qword_1EEF5E6D0, (uint64_t (*)(uint64_t))type metadata accessor for VFXTriggerType, (uint64_t)&protocol conformance descriptor for VFXTriggerType);
  sub_1B2229958();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1B1D8B140(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5E6B8, (uint64_t (*)(void))sub_1B1D8EE58, (uint64_t)&type metadata for OnTriggerNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D8EE58();
  sub_1B222A150();
  if (!v2)
  {
    type metadata accessor for VFXTriggerType(0);
    sub_1B19E52CC(&qword_1EEF5D330, (uint64_t (*)(uint64_t))type metadata accessor for VFXTriggerType, (uint64_t)&protocol conformance descriptor for VFXTriggerType);
    sub_1B2229814();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v11 = *(void **)(v3 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13OnTriggerNode_eventType) = v12[1];

  }
}

void sub_1B1D8B2B0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1B1D8B2DC()
{
  uint64_t v0;

}

uint64_t sub_1B1D8B2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1B1D8B360()
{
  return type metadata accessor for OnTriggerNode(0);
}

uint64_t type metadata accessor for OnTriggerNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E558);
}

uint64_t sub_1B1D8B37C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8B3BC(_QWORD *a1)
{
  return sub_1B1D8B000(a1);
}

void sub_1B1D8B3D0(_QWORD *a1)
{
  sub_1B1D8B140(a1);
}

uint64_t sub_1B1D8B3E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B226CD10;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0x8000000000000008;
  *(_QWORD *)(v2 + 32) = v3 | 0x6000000000000000;
  v4 = swift_allocObject();
  v5 = swift_allocObject();
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 1;
  *(_QWORD *)(v5 + 16) = v6 | 0x5000000000000000;
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v2 + 40) = v4 | 0x6000000000000000;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B227BE30;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0x8000000000000008;
  *(_QWORD *)(v7 + 32) = v8 | 0x6000000000000000;
  v9 = swift_allocObject();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B2286450;
  *(_QWORD *)(v9 + 16) = v10 | 0x1000000000000000;
  *(_QWORD *)(v7 + 40) = v9 | 0x6000000000000000;
  v11 = swift_allocObject();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B2286450;
  *(_QWORD *)(v11 + 16) = v12 | 0x1000000000000000;
  *(_QWORD *)(v7 + 48) = v11 | 0x6000000000000000;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x8000000000000050;
  *(_QWORD *)(v7 + 56) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v7;
  a1[2] = (uint64_t)&unk_1E6393AB8;
  a1[3] = (uint64_t)&unk_1E6393A18;
  v14 = MEMORY[0x1E0DEE9D8];
  a1[4] = (uint64_t)&unk_1E6393A58;
  a1[5] = v14;
  return result;
}

uint64_t sub_1B1D8B600()
{
  return type metadata accessor for OnMouseTriggerNode(0);
}

uint64_t type metadata accessor for OnMouseTriggerNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E568);
}

uint64_t sub_1B1D8B61C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B226D240;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0x8000000000000008;
  *(_QWORD *)(v2 + 32) = v3 | 0x6000000000000000;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226CD10;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0x8000000000000008;
  *(_QWORD *)(v4 + 32) = v5 | 0x6000000000000000;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x8000000000000030;
  *(_QWORD *)(v4 + 40) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v4;
  v7 = MEMORY[0x1E0DEE9D8];
  a1[2] = (uint64_t)&unk_1E6388138;
  a1[3] = v7;
  a1[4] = (uint64_t)&unk_1E63880F8;
  a1[5] = v7;
  return result;
}

uint64_t sub_1B1D8B734()
{
  return type metadata accessor for OnKeyTriggerNode(0);
}

uint64_t type metadata accessor for OnKeyTriggerNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E578);
}

uint64_t sub_1B1D8B750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B226CD10;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0x8000000000000008;
  *(_QWORD *)(v2 + 32) = v3 | 0x6000000000000000;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0x8000000000000030;
  *(_QWORD *)(v2 + 40) = v4 | 0x6000000000000000;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B226D240;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x8000000000000008;
  *(_QWORD *)(v5 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v5;
  a1[2] = (uint64_t)&unk_1E638D668;
  a1[3] = (uint64_t)&unk_1E638D5F8;
  v7 = MEMORY[0x1E0DEE9D8];
  a1[4] = (uint64_t)&unk_1E638D638;
  a1[5] = v7;
  return result;
}

uint64_t sub_1B1D8B870()
{
  return type metadata accessor for OnTickTriggerNode(0);
}

uint64_t type metadata accessor for OnTickTriggerNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E588);
}

uint64_t sub_1B1D8B88C()
{
  return 6778700;
}

uint64_t sub_1B1D8B89C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B226D240;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v2 + 32) = v3 | 0x4000000000000000;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(v4 + 32) = result | 0x4000000000000000;
  *a1 = v2;
  a1[1] = v4;
  v6 = MEMORY[0x1E0DEE9D8];
  a1[2] = (uint64_t)&unk_1E63C4ED8;
  a1[3] = v6;
  a1[4] = v6;
  a1[5] = v6;
  return result;
}

uint64_t sub_1B1D8B984()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 32);
  sub_1B1BCCD2C(v1);
  sub_1B1B632F0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2229430();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B201E8B0(v2);
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1B28D2C(v2);
  return 0;
}

_QWORD *sub_1B1D8BAC8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0 = (_QWORD *)swift_allocObject();
  v1 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC3VFX23LogDebugPassthroughNode_message);
  *v1 = 0x65756C6156796DLL;
  v1[1] = 0xE700000000000000;
  v0[2] = MEMORY[0x1E0DEE9D8];
  v0[3] = 0;
  v0[4] = 0;
  sub_1B2228260();
  return v0;
}

_QWORD *sub_1B1D8BB40(_QWORD *a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)(swift_allocObject() + OBJC_IVAR____TtC3VFX23LogDebugPassthroughNode_message);
  *v2 = 0x65756C6156796DLL;
  v2[1] = 0xE700000000000000;
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D8BB9C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D8BBB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1D8BC28()
{
  return type metadata accessor for LogDebugPassthroughNode(0);
}

uint64_t type metadata accessor for LogDebugPassthroughNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E598);
}

uint64_t sub_1B1D8BC44()
{
  return sub_1B1D8C2D4();
}

uint64_t sub_1B1D8BC50(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  sub_1B19FA070(a1, a1[3]);
  sub_1B222A168();
  sub_1B19FC264((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_1B2229DB4();
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B1D8BD08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD v7[4];

  sub_1B19FA070(a1, a1[3]);
  result = sub_1B222A138();
  if (!v2)
  {
    sub_1B19FA070(v7, v7[3]);
    v4 = sub_1B2229D30();
    v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX23LogDebugPassthroughNode_message);
    *v5 = v4;
    v5[1] = v6;
    swift_bridgeObjectRelease();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1B1D8BDC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B226CD10;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0x8000000000000008;
  *(_QWORD *)(v2 + 32) = v3 | 0x6000000000000000;
  *(_QWORD *)(v2 + 40) = 0x8000000000000000;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x8000000000000008;
  *(_QWORD *)(v4 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v4;
  v6 = MEMORY[0x1E0DEE9D8];
  a1[2] = (uint64_t)&unk_1E6375DB0;
  a1[3] = v6;
  a1[4] = v6;
  a1[5] = v6;
  return result;
}

uint64_t sub_1B1D8BEB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 40);
  sub_1B1BCCD2C(v1);
  sub_1B1B632F0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2229430();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B201E8B0(v2);
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1B28D2C(v2);
  return 0;
}

uint64_t sub_1B1D8BFF8()
{
  return type metadata accessor for LogDebugNode(0);
}

uint64_t type metadata accessor for LogDebugNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E5A8);
}

uint64_t sub_1B1D8C014()
{
  sub_1B1D8F260();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D8C03C()
{
  sub_1B1D8F260();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D8C064(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1B19F8E54(0, &qword_1EEF5E710, (uint64_t (*)(void))sub_1B1D8F260, (uint64_t)&type metadata for GraphSideStorage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v5);
  v7 = (char *)&v9 - v6;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D8F260();
  sub_1B222A180();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

_QWORD *sub_1B1D8C140()
{
  _QWORD *v0;
  uint64_t v1;

  v0 = (_QWORD *)swift_allocObject();
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = 0xFFFFFFFFLL;
  v1 = MEMORY[0x1E0DEE9D8];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B2228260();
  return v0;
}

_QWORD *sub_1B1D8C1A4(_QWORD *a1)
{
  *(_QWORD *)(swift_allocObject() + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = *(_QWORD *)((char *)a1
                                                                                             + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity);
  return sub_1B1BCE388(a1);
}

unint64_t sub_1B1D8C1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;

  ObjectType = swift_getObjectType();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  v6 = v2 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity;
  if ((v5 & 1) != 0)
  {
    LODWORD(v7) = 0;
    result = 0xFFFFFFFFLL;
  }
  else
  {
    result = *(_QWORD *)v6;
    sub_1B1F02EF0(*(_QWORD *)v6, 0, ObjectType, a2);
    v7 = HIDWORD(result);
  }
  *(_DWORD *)v6 = result;
  *(_DWORD *)(v6 + 4) = v7;
  return result;
}

void sub_1B1D8C264()
{
  sub_1B2229688();
  __break(1u);
}

uint64_t sub_1B1D8C2AC()
{
  return type metadata accessor for ECSStorageNode(0);
}

uint64_t type metadata accessor for ECSStorageNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E5B8);
}

uint64_t sub_1B1D8C2C8()
{
  return sub_1B1D8C2D4();
}

uint64_t sub_1B1D8C2D4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8C30C()
{
  return 0x7865546576727543;
}

double sub_1B1D8C32C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B1D8DCC0((unint64_t)&unk_1E6386D80, a1);
}

uint64_t sub_1B1D8C33C()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1B1D8C370();
  return v0;
}

_QWORD *sub_1B1D8C370()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (char *)v0 + OBJC_IVAR____TtC3VFX16CurveTextureNode_curve;
  swift_retain();
  *(_QWORD *)v1 = sub_1B21451EC((uint64_t)&unk_1E6386DC0);
  *((_QWORD *)v1 + 1) = v2;
  *((_QWORD *)v1 + 2) = 0;
  v1[24] = 1;
  swift_release();
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = 0xFFFFFFFFLL;
  v3 = MEMORY[0x1E0DEE9D8];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v3;
  sub_1B2228260();
  return v0;
}

_QWORD *sub_1B1D8C3F8(_QWORD *a1)
{
  swift_allocObject();
  return sub_1B1D8C430(a1);
}

_QWORD *sub_1B1D8C430(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC3VFX16CurveTextureNode_curve;
  swift_retain();
  *(_QWORD *)v3 = sub_1B21451EC((uint64_t)&unk_1E6386D50);
  *(_QWORD *)(v3 + 8) = v4;
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 1;
  v5 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX16CurveTextureNode_curve + 8);
  v6 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX16CurveTextureNode_curve + 16);
  v7 = *((_BYTE *)a1 + OBJC_IVAR____TtC3VFX16CurveTextureNode_curve + 24);
  *(_QWORD *)v3 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX16CurveTextureNode_curve);
  *(_QWORD *)(v3 + 8) = v5;
  *(_QWORD *)(v3 + 16) = v6;
  *(_BYTE *)(v3 + 24) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = OBJC_IVAR____TtC3VFX14ECSStorageNode_entity;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + v8) = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity);
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D8C50C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D8C548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1D8C5DC()
{
  return type metadata accessor for CurveTextureNode(0);
}

uint64_t type metadata accessor for CurveTextureNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E5C8);
}

uint64_t sub_1B1D8C5F8()
{
  return sub_1B1D8CA68();
}

uint64_t sub_1B1D8C604(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1B19FA070(a1, a1[3]);
  sub_1B1A0DBF0(0, v1, v2, v3);
  sub_1B19E52CC((unint64_t *)&qword_1EEF63460, (uint64_t (*)(uint64_t))sub_1B1A0DBF0, (uint64_t)&unk_1B22B9C6C);
  return sub_1B1FF5998();
}

uint64_t sub_1B1D8C6B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char v10;

  sub_1B19FA070(a1, a1[3]);
  sub_1B1A0DBF0(0, v3, v4, v5);
  sub_1B19E52CC((unint64_t *)&qword_1ED4B9F30, (uint64_t (*)(uint64_t))sub_1B1A0DBF0, (uint64_t)&unk_1B22B9C94);
  result = sub_1B1FF5A30();
  if (!v2)
  {
    v7 = v1 + OBJC_IVAR____TtC3VFX16CurveTextureNode_curve;
    *(_OWORD *)v7 = v8;
    *(_QWORD *)(v7 + 16) = v9;
    *(_BYTE *)(v7 + 24) = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B1D8C794()
{
  return 0xD000000000000010;
}

double sub_1B1D8C7B0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B1D8DCC0((unint64_t)&unk_1E639B248, a1);
}

_QWORD *sub_1B1D8C7C0()
{
  _QWORD *v0;
  char *v1;
  _OWORD *v2;

  v0 = (_QWORD *)swift_allocObject();
  v1 = (char *)v0 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp;
  sub_1B1AE11F4();
  v2 = (_OWORD *)swift_allocObject();
  __asm { FMOV            V1.4S, #1.0 }
  v2[1] = xmmword_1B226CD10;
  v2[2] = _Q1;
  v2[3] = xmmword_1B2244E20;
  *(_QWORD *)v1 = v2;
  *((_QWORD *)v1 + 1) = &unk_1E63C3890;
  v1[16] = 1;
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = 0xFFFFFFFFLL;
  v0[2] = MEMORY[0x1E0DEE9D8];
  v0[3] = 0;
  v0[4] = 0;
  sub_1B2228260();
  return v0;
}

_QWORD *sub_1B1D8C874(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp;
  v4 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp + 8);
  v5 = *((_BYTE *)a1 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp + 16);
  *(_QWORD *)v3 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp);
  *(_QWORD *)(v3 + 8) = v4;
  *(_BYTE *)(v3 + 16) = v5;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity) = *(_QWORD *)((char *)a1
                                                                            + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D8C8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B1A02758(0, &qword_1ED4BAD88, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B226D240;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX14ECSStorageNode_entity);
  *(_QWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 32) = 16908288;
  *(_QWORD *)(v1 + 32) = v2 | 0x7000000000000000;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  return v1;
}

uint64_t sub_1B1D8C990()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D8C9C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1D8CA40()
{
  return type metadata accessor for ColorRampTextureNode(0);
}

uint64_t type metadata accessor for ColorRampTextureNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E5D8);
}

uint64_t sub_1B1D8CA5C()
{
  return sub_1B1D8CA68();
}

uint64_t sub_1B1D8CA68()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8CAA0(_QWORD *a1)
{
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D3DBB0();
  return sub_1B1FF5998();
}

uint64_t sub_1B1D8CB28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  char v6;

  sub_1B19FA070(a1, a1[3]);
  sub_1B1D3DB38();
  result = sub_1B1FF5A30();
  if (!v2)
  {
    v4 = v1 + OBJC_IVAR____TtC3VFX20ColorRampTextureNode_colorRamp;
    *(_OWORD *)v4 = v5;
    *(_BYTE *)(v4 + 16) = v6;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B1D8CBD4()
{
  __asm { BR              X10 }
}

__n128 sub_1B1D8CC14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t inited;
  uint64_t v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  sub_1B1A02758(0, &qword_1EEF5E8F0, (uint64_t)&type metadata for AnyType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(inited + 32) = v3 | 0x4000000000000000;
  sub_1B1BCF75C(inited, (_QWORD *)(v1 - 96));
  swift_setDeallocating();
  swift_arrayDestroy();
  result = *(__n128 *)(v1 - 96);
  v5 = *(_OWORD *)(v1 - 80);
  v6 = *(_OWORD *)(v1 - 64);
  *(__n128 *)v0 = result;
  *(_OWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 32) = v6;
  return result;
}

uint64_t sub_1B1D8CDC4()
{
  return 0x7341797469746E45;
}

_QWORD *sub_1B1D8CDE4(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC3VFX15EntityAssetNode_kind) = *((_BYTE *)a1
                                                                + OBJC_IVAR____TtC3VFX15EntityAssetNode_kind);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX15EntityAssetNode_entity) = *(_QWORD *)((char *)a1
                                                                             + OBJC_IVAR____TtC3VFX15EntityAssetNode_entity);
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D8CE3C()
{
  sub_1B1BC3C70();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  return 0x3A797469746E65;
}

uint64_t sub_1B1D8CE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t result;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = OBJC_IVAR____TtC3VFX15EntityAssetNode_entity;
  result = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX15EntityAssetNode_entity);
  sub_1B1F02EF0(result, 0, ObjectType, a2);
  *(_QWORD *)(v3 + v6) = result;
  return result;
}

uint64_t sub_1B1D8CEF0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC3VFX15EntityAssetNode_kind))
    return 0;
  else
    return 3;
}

uint64_t sub_1B1D8CF0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  sub_1B19FA070(a1, a1[3]);
  sub_1B222A15C();
  LOBYTE(v6) = *(_BYTE *)(v1 + OBJC_IVAR____TtC3VFX15EntityAssetNode_kind);
  sub_1B19FC264((uint64_t)v4, v5);
  sub_1B1D8ED3C();
  sub_1B2229BA4();
  if (!v2)
  {
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15EntityAssetNode_entity);
    sub_1B19FC264((uint64_t)v4, v5);
    sub_1B1A0895C();
    sub_1B2229BA4();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B1D8D00C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  sub_1B19FA070(a1, a1[3]);
  result = sub_1B222A12C();
  if (!v2)
  {
    sub_1B19FC264((uint64_t)v4, v5);
    sub_1B1D8ECF8();
    sub_1B2229AA8();
    *(_BYTE *)(v1 + OBJC_IVAR____TtC3VFX15EntityAssetNode_kind) = v6;
    sub_1B19FC264((uint64_t)v4, v5);
    sub_1B1A08878();
    sub_1B2229AA8();
    *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15EntityAssetNode_entity) = v6;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
  }
  return result;
}

void sub_1B1D8D124()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B1D8D150()
{
  return type metadata accessor for EntityAssetNode(0);
}

uint64_t type metadata accessor for EntityAssetNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E5E8);
}

uint64_t sub_1B1D8D16C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8D1B4(_QWORD *a1)
{
  return sub_1B1D8CF0C(a1);
}

uint64_t sub_1B1D8D1C8(_QWORD *a1)
{
  return sub_1B1D8D00C(a1);
}

unint64_t sub_1B1D8D1DC()
{
  return 0xD000000000000013;
}

uint64_t sub_1B1D8D1F8()
{
  return type metadata accessor for ImplicitEntityAssetNode(0);
}

uint64_t type metadata accessor for ImplicitEntityAssetNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E5F8);
}

uint64_t sub_1B1D8D214()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8D248()
{
  _QWORD v1[2];

  strcpy((char *)v1, "ImportError: ");
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1B1D8D2C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = sub_1B19F3C4C(0x8000000000000000, *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15ImportErrorNode_inputCount));
  result = sub_1B2228B0C();
  *(_QWORD *)(result + 16) = 1;
  *(_QWORD *)(result + 32) = 0x8000000000000000;
  *a1 = v3;
  a1[1] = result;
  v5 = MEMORY[0x1E0DEE9D8];
  a1[2] = (uint64_t)&unk_1E6383E18;
  a1[3] = v5;
  a1[4] = v5;
  a1[5] = v5;
  return result;
}

_QWORD *sub_1B1D8D340(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = swift_allocObject();
  v3 = OBJC_IVAR____TtC3VFX15ImportErrorNode_message;
  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC3VFX15ImportErrorNode_message);
  v5 = OBJC_IVAR____TtC3VFX15ImportErrorNode_inputCount;
  v6 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX15ImportErrorNode_name + 8);
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC3VFX15ImportErrorNode_name);
  *v7 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX15ImportErrorNode_name);
  v7[1] = v6;
  v8 = (_QWORD *)((char *)a1 + v3);
  v9 = v8[1];
  *v4 = *v8;
  v4[1] = v9;
  *(_QWORD *)(v2 + v5) = *(_QWORD *)((char *)a1 + v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D8D3CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15ImportErrorNode_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B1D8D404(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F91158(*a1, *a2);
}

uint64_t sub_1B1D8D410()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1D8D4AC()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D8D524()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1D8D5BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1D8E9D4();
  *a1 = result;
  return result;
}

void sub_1B1D8D5E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xEA0000000000746ELL;
  v5 = 0x756F437475706E69;
  if (v2 != 1)
  {
    v5 = 0x6567617373656DLL;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701667182;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B1D8D644()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x756F437475706E69;
  if (*v0 != 1)
    v1 = 0x6567617373656DLL;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_1B1D8D69C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1D8E9D4();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D8D6C0()
{
  sub_1B1D8EC30();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D8D6E8()
{
  sub_1B1D8EC30();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D8D710(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v12;
  char v13;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5E6A0, (uint64_t (*)(void))sub_1B1D8EC30, (uint64_t)&type metadata for ImportErrorNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D8EC30();
  sub_1B222A180();
  LOBYTE(v12) = 0;
  swift_bridgeObjectRetain();
  sub_1B2229910();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    LOBYTE(v12) = 1;
    sub_1B2229940();
    v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC3VFX15ImportErrorNode_message);
    v13 = 2;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1B1D8EC74(&qword_1EEF5D590, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    sub_1B2229958();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1B1D8D90C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  __int128 v15;
  char v16;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5E690, (uint64_t (*)(void))sub_1B1D8EC30, (uint64_t)&type metadata for ImportErrorNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v15 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D8EC30();
  result = sub_1B222A150();
  if (!v2)
  {
    LOBYTE(v15) = 0;
    v12 = sub_1B22297CC();
    v13 = (uint64_t *)(v3 + OBJC_IVAR____TtC3VFX15ImportErrorNode_name);
    *v13 = v12;
    v13[1] = v14;
    swift_bridgeObjectRelease();
    LOBYTE(v15) = 1;
    *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX15ImportErrorNode_inputCount) = sub_1B22297FC();
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v16 = 2;
    sub_1B1D8EC74(&qword_1ED4BA2B8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEE9A0]);
    sub_1B2229814();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    *(_OWORD *)(v3 + OBJC_IVAR____TtC3VFX15ImportErrorNode_message) = v15;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B1D8DB14()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B1D8DB40()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D8DB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1D8DC00()
{
  return type metadata accessor for ImportErrorNode(0);
}

uint64_t type metadata accessor for ImportErrorNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E608);
}

uint64_t sub_1B1D8DC1C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8DC74(_QWORD *a1)
{
  return sub_1B1D8D710(a1);
}

uint64_t sub_1B1D8DC88(_QWORD *a1)
{
  return sub_1B1D8D90C(a1);
}

uint64_t sub_1B1D8DC9C()
{
  return 0x6574617453;
}

double sub_1B1D8DCB0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1B1D8DCC0((unint64_t)&unk_1E63C5348, a1);
}

double sub_1B1D8DCC0@<D0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;

  sub_1B1BCF75C(a1, v5);
  swift_arrayDestroy();
  v3 = v5[1];
  *a2 = v5[0];
  a2[1] = v3;
  result = *(double *)&v6;
  a2[2] = v6;
  return result;
}

_QWORD *sub_1B1D8DD14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v0 = (_QWORD *)swift_allocObject();
  v1 = (uint64_t)v0 + OBJC_IVAR____TtC3VFX9StateNode_stateRef;
  swift_unknownObjectWeakInit();
  v4[1] = 0;
  swift_unknownObjectWeakAssign();
  v4[2] = 0x3E6C6C756E3CLL;
  v4[3] = 0xE600000000000000;
  sub_1B19FC2D0((uint64_t)v4, v1);
  v2 = MEMORY[0x1E0DEE9D8];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v2;
  sub_1B2228260();
  return v0;
}

_QWORD *sub_1B1D8DDBC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD v4[4];

  v2 = swift_allocObject() + OBJC_IVAR____TtC3VFX9StateNode_stateRef;
  swift_unknownObjectWeakInit();
  v4[1] = 0;
  swift_unknownObjectWeakAssign();
  v4[2] = 0x3E6C6C756E3CLL;
  v4[3] = 0xE600000000000000;
  sub_1B19FC2D0((uint64_t)v4, v2);
  sub_1B1D8EBF4((uint64_t)a1 + OBJC_IVAR____TtC3VFX9StateNode_stateRef, v2);
  return sub_1B1BCE388(a1);
}

uint64_t sub_1B1D8DE60()
{
  uint64_t v0;

  return sub_1B19FC350(v0 + OBJC_IVAR____TtC3VFX9StateNode_stateRef);
}

uint64_t sub_1B1D8DE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1B1B28F18(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  v2 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1B19FC350(v0 + OBJC_IVAR____TtC3VFX9StateNode_stateRef);
  return swift_deallocClassInstance();
}

uint64_t sub_1B1D8DEE4()
{
  return type metadata accessor for StateNode(0);
}

uint64_t type metadata accessor for StateNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E618);
}

uint64_t sub_1B1D8DF00()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B1D8DF44(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[32];

  sub_1B19FA070(a1, a1[3]);
  sub_1B1A00060(v1 + OBJC_IVAR____TtC3VFX9StateNode_stateRef, (uint64_t)v3);
  sub_1B19FC3E4();
  sub_1B1FF5998();
  return sub_1B19FC350((uint64_t)v3);
}

uint64_t sub_1B1D8DFD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1B19FA070(a1, a1[3]);
  sub_1B19FC28C();
  result = sub_1B1FF5A30();
  if (!v2)
    return sub_1B1D8EB3C((uint64_t)&v4, v1 + OBJC_IVAR____TtC3VFX9StateNode_stateRef);
  return result;
}

uint64_t sub_1B1D8E068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  _BYTE v7[32];
  _BYTE v8[32];

  ObjectType = swift_getObjectType();
  v5 = v2 + OBJC_IVAR____TtC3VFX9StateNode_stateRef;
  sub_1B1A00060(v2 + OBJC_IVAR____TtC3VFX9StateNode_stateRef, (uint64_t)v7);
  sub_1B1F02EAC((uint64_t)v7, ObjectType, a2, (uint64_t)v8);
  sub_1B19FC350((uint64_t)v7);
  return sub_1B1D8EB3C((uint64_t)v8, v5);
}

uint64_t sub_1B1D8E0EC()
{
  return 0x746963696C706D49;
}

uint64_t sub_1B1D8E110()
{
  return type metadata accessor for ImplicitStateNode(0);
}

uint64_t type metadata accessor for ImplicitStateNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E628);
}

uint64_t sub_1B1D8E12C()
{
  return 0x6574617453746553;
}

uint64_t sub_1B1D8E144@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B1D8E1D4(0x8000000000000090, (uint64_t)&unk_1E63772C0, (uint64_t)&unk_1E6377270, a1, 0.1);
}

uint64_t sub_1B1D8E16C()
{
  return type metadata accessor for SetStateNode(0);
}

uint64_t type metadata accessor for SetStateNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E638);
}

unint64_t sub_1B1D8E188()
{
  return 0xD000000000000036;
}

uint64_t sub_1B1D8E1A4()
{
  return 1801677140;
}

uint64_t sub_1B1D8E1B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B1D8E1D4(0x8000000000000030, (uint64_t)&unk_1E63C2DB0, (uint64_t)&unk_1E63C2D60, a1, 0.0);
}

uint64_t sub_1B1D8E1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, float a5@<S0>)
{
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DynamicType;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[4];

  v10 = MEMORY[0x1E0DED1E8];
  sub_1B1A02758(0, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B226E100;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x8000000000000008;
  *(_QWORD *)(v11 + 32) = v12 | 0x6000000000000000;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v11 + 40) = v13 | 0x6000000000000000;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0x8000000000000050;
  *(_QWORD *)(v11 + 48) = v14 | 0x6000000000000000;
  sub_1B1A02758(0, (unint64_t *)&unk_1EEF5C7D0, (uint64_t)&type metadata for AnyValue, (uint64_t (*)(_QWORD, uint64_t))v10);
  v15 = swift_allocObject();
  v16 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v15 + 64) = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v15 + 16) = xmmword_1B226E100;
  *(_OWORD *)(v15 + 32) = xmmword_1B22847F0;
  *(_QWORD *)(v15 + 104) = v16;
  *(_OWORD *)(v15 + 72) = xmmword_1B22847E0;
  v22[3] = MEMORY[0x1E0DEB188];
  *(float *)v22 = a5;
  sub_1B19FA070(v22, MEMORY[0x1E0DEB188]);
  DynamicType = swift_getDynamicType();
  v18 = sub_1B1D76F30(DynamicType);
  if ((~v18 & 0xF000000000000007) != 0)
  {
    v19 = v18;
    sub_1B1A02864((uint64_t)v22, v15 + 120);
    *(_QWORD *)(v15 + 112) = v19;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v22);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B226D240;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0x8000000000000008;
    *(_QWORD *)(v20 + 32) = result | 0x6000000000000000;
    *a4 = v11;
    a4[1] = v20;
    a4[2] = a2;
    a4[3] = a3;
    a4[4] = MEMORY[0x1E0DEE9D8];
    a4[5] = v15;
  }
  else
  {
    sub_1B2229430();
    swift_bridgeObjectRelease();
    sub_1B222A210();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1D8E474()
{
  return type metadata accessor for TickNode(0);
}

uint64_t type metadata accessor for TickNode(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1EEF5E648);
}

uint64_t storeEnumTagSinglePayload for VFXStage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1B1D8E4DC + 4 * byte_1B2293611[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1B1D8E510 + 4 * byte_1B229360C[v4]))();
}

uint64_t sub_1B1D8E510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D8E518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1D8E520);
  return result;
}

uint64_t sub_1B1D8E52C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1D8E534);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1B1D8E538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D8E540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VFXStage()
{
  return &type metadata for VFXStage;
}

unint64_t sub_1B1D8E560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5E658;
  if (!qword_1EEF5E658)
  {
    sub_1B1A02758(255, &qword_1EEF5E660, (uint64_t)&type metadata for VFXStage, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5E658);
  }
  return result;
}

unint64_t sub_1B1D8E5C4()
{
  unint64_t result;

  result = qword_1EEF5E668;
  if (!qword_1EEF5E668)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293B0C, &type metadata for VFXStage);
    atomic_store(result, (unint64_t *)&qword_1EEF5E668);
  }
  return result;
}

unint64_t sub_1B1D8E608()
{
  return 0xD000000000000029;
}

unint64_t sub_1B1D8E624()
{
  unint64_t result;

  result = qword_1EEF5E670;
  if (!qword_1EEF5E670)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2297A8C, &type metadata for EntityKeyPath);
    atomic_store(result, (unint64_t *)&qword_1EEF5E670);
  }
  return result;
}

unint64_t sub_1B1D8E668()
{
  unint64_t result;

  result = qword_1EEF5E678;
  if (!qword_1EEF5E678)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293A6C, &type metadata for VFXStage);
    atomic_store(result, (unint64_t *)&qword_1EEF5E678);
  }
  return result;
}

unint64_t sub_1B1D8E6AC()
{
  unint64_t result;

  result = qword_1EEF5E680;
  if (!qword_1EEF5E680)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293A44, &type metadata for VFXStage);
    atomic_store(result, (unint64_t *)&qword_1EEF5E680);
  }
  return result;
}

uint64_t sub_1B1D8E6F0(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  swift_bridgeObjectRetain();
  sub_1B22291CC();
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 0x1000000000000000) != 0)
    goto LABEL_28;
  swift_bridgeObjectRetain();
  sub_1B22291CC();
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 0x1000000000000000) != 0)
    goto LABEL_28;
  v15 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v15) = 1;
  v16 = 4 << v15;
  v17 = a1;
  if ((a1 & 0xC) == 4 << v15)
  {
    v17 = sub_1B1DCCCD0(a1, a5, a6);
    v18 = a5 & 0x800000000000000;
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_7;
  }
  else
  {
    v18 = a5 & 0x800000000000000;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_7:
      v19 = v17 >> 16;
      v20 = 7;
      goto LABEL_8;
    }
  }
  v19 = sub_1B22288F0();
  if (v18)
    v20 = 7;
  else
    v20 = 11;
LABEL_8:
  v21 = HIBYTE(a6) & 0xF;
  v22 = a2;
  if ((a6 & 0x2000000000000000) == 0)
    v21 = a5;
  v23 = 4 << (v18 >> 59);
  v24 = v20 | (v21 << 16);
  if ((a6 & 0x1000000000000000) == 0)
    v23 = 8;
  if ((a2 & 0xC) == v23)
    v22 = sub_1B1DCCCD0(a2, a5, a6);
  if ((v20 & 0xC) == v16)
  {
    v24 = sub_1B1DCCCD0(v24, a5, a6);
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_16;
LABEL_22:
    v25 = sub_1B22288F0();
    goto LABEL_23;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_22;
LABEL_16:
  v25 = (v24 >> 16) - (v22 >> 16);
LABEL_23:
  if ((a4 & 0x1000000000000000) != 0)
  {
    v26 = sub_1B22288CC();
  }
  else if ((a4 & 0x2000000000000000) != 0)
  {
    v26 = HIBYTE(a4) & 0xF;
  }
  else
  {
    v26 = a3 & 0xFFFFFFFFFFFFLL;
  }
  MEMORY[0x1B5E203AC](v25 + v19 + v26);
LABEL_28:
  sub_1B2228974();
  sub_1B1B25B50();
  sub_1B2228878();
  swift_bridgeObjectRelease();
  sub_1B2228878();
  sub_1B2228974();
  sub_1B2228878();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B1D8E9D4()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1B1D8EA1C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = 0;
  v6 = 0xE000000000000000;
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v7 = 0xD00000000000002DLL;
  v8 = 0x80000001B233B300;
  sub_1B1A00060(v0 + OBJC_IVAR____TtC3VFX9StateNode_stateRef, (uint64_t)&v5);
  v1 = MEMORY[0x1B5E240CC](&v5);
  sub_1B19FC350((uint64_t)&v5);
  if (v1)
  {
    objc_opt_self();
    v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      v3 = objc_msgSend(v2, sel_identifier, v5, v6);
      swift_unknownObjectRelease();
      sub_1B222874C();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  return v7;
}

uint64_t sub_1B1D8EB3C(uint64_t a1, uint64_t a2)
{
  assignWithTake for VFXBridgeableReference(a2, a1);
  return a2;
}

uint64_t sub_1B1D8EB78(uint64_t result)
{
  if ((result & 0xF8) != 0)
    return 8;
  else
    return result;
}

unint64_t sub_1B1D8EB8C()
{
  unint64_t result;

  result = qword_1EEF5E688;
  if (!qword_1EEF5E688)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293AD4, &type metadata for VFXStage);
    atomic_store(result, (unint64_t *)&qword_1EEF5E688);
  }
  return result;
}

uint64_t sub_1B1D8EBD0()
{
  uint64_t v0;

  sub_1B1B28D2C(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B1D8EBF4(uint64_t a1, uint64_t a2)
{
  assignWithCopy for VFXBridgeableReference(a2, a1);
  return a2;
}

unint64_t sub_1B1D8EC30()
{
  unint64_t result;

  result = qword_1EEF5E698;
  if (!qword_1EEF5E698)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293F1C, &type metadata for ImportErrorNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E698);
  }
  return result;
}

uint64_t sub_1B1D8EC74(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = a2;
    result = MEMORY[0x1B5E23E74](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B1D8ECE8()
{
  return swift_deallocObject();
}

unint64_t sub_1B1D8ECF8()
{
  unint64_t result;

  result = qword_1EEF5E6A8;
  if (!qword_1EEF5E6A8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291F50, &type metadata for AnyType.AssetReferenceKind);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6A8);
  }
  return result;
}

unint64_t sub_1B1D8ED3C()
{
  unint64_t result;

  result = qword_1EEF5E6B0;
  if (!qword_1EEF5E6B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291F28, &type metadata for AnyType.AssetReferenceKind);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6B0);
  }
  return result;
}

uint64_t sub_1B1D8ED80()
{
  uint64_t v0;

  sub_1B1A05648(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1B1D8EDA8()
{
  return swift_deallocObject();
}

uint64_t sub_1B1D8EDB8()
{
  uint64_t v0;

  sub_1B1B28D2C(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

void sub_1B1D8EDDC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1B1A02758(255, a3, a4, a5);
    v6 = sub_1B2229A18();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1B1D8EE34()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1B1D8EE58()
{
  unint64_t result;

  result = qword_1EEF5E6C0;
  if (!qword_1EEF5E6C0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293ECC, &type metadata for OnTriggerNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6C0);
  }
  return result;
}

uint64_t sub_1B1D8EE9C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1D8EEC8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1B1D8EEF4()
{
  unint64_t result;

  result = qword_1EEF5E6D8;
  if (!qword_1EEF5E6D8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2297AB4, &type metadata for EntityKeyPath);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphSideStorage()
{
  return &type metadata for GraphSideStorage;
}

uint64_t storeEnumTagSinglePayload for OnTriggerNode.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1D8EF88 + 4 * byte_1B2293616[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1D8EFA8 + 4 * byte_1B229361B[v4]))();
}

_BYTE *sub_1B1D8EF88(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1D8EFA8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1D8EFB0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1D8EFB8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1D8EFC0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1D8EFC8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OnTriggerNode.CodingKeys()
{
  return &type metadata for OnTriggerNode.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ImportErrorNode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1D8F030 + 4 * byte_1B2293625[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1D8F064 + 4 * byte_1B2293620[v4]))();
}

uint64_t sub_1B1D8F064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D8F06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1D8F074);
  return result;
}

uint64_t sub_1B1D8F080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1D8F088);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1D8F08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D8F094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImportErrorNode.CodingKeys()
{
  return &type metadata for ImportErrorNode.CodingKeys;
}

unint64_t sub_1B1D8F0B4()
{
  unint64_t result;

  result = qword_1EEF5E6E0;
  if (!qword_1EEF5E6E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293D34, &type metadata for ImportErrorNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6E0);
  }
  return result;
}

unint64_t sub_1B1D8F0FC()
{
  unint64_t result;

  result = qword_1EEF5E6E8;
  if (!qword_1EEF5E6E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293E24, &type metadata for OnTriggerNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6E8);
  }
  return result;
}

unint64_t sub_1B1D8F144()
{
  unint64_t result;

  result = qword_1EEF5E6F0;
  if (!qword_1EEF5E6F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293D5C, &type metadata for OnTriggerNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6F0);
  }
  return result;
}

unint64_t sub_1B1D8F18C()
{
  unint64_t result;

  result = qword_1EEF5E6F8;
  if (!qword_1EEF5E6F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293D84, &type metadata for OnTriggerNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E6F8);
  }
  return result;
}

unint64_t sub_1B1D8F1D4()
{
  unint64_t result;

  result = qword_1EEF5E700;
  if (!qword_1EEF5E700)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293C6C, &type metadata for ImportErrorNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E700);
  }
  return result;
}

unint64_t sub_1B1D8F21C()
{
  unint64_t result;

  result = qword_1EEF5E708;
  if (!qword_1EEF5E708)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293C94, &type metadata for ImportErrorNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E708);
  }
  return result;
}

unint64_t sub_1B1D8F260()
{
  unint64_t result;

  result = qword_1EEF5E718;
  if (!qword_1EEF5E718)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293FBC, &type metadata for GraphSideStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E718);
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphSideStorage.CodingKeys()
{
  return &type metadata for GraphSideStorage.CodingKeys;
}

unint64_t sub_1B1D8F2B8()
{
  unint64_t result;

  result = qword_1EEF5E720;
  if (!qword_1EEF5E720)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293F6C, &type metadata for GraphSideStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E720);
  }
  return result;
}

unint64_t sub_1B1D8F300()
{
  unint64_t result;

  result = qword_1EEF5E728;
  if (!qword_1EEF5E728)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2293F94, &type metadata for GraphSideStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E728);
  }
  return result;
}

uint64_t *sub_1B1D8F348(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t *result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51[12];
  _OWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _OWORD v62[2];
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;
  _BYTE v66[40];
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;

  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v77 = qword_1ED4D09F8;
  v78 = 0;
  v79 = 2;
  v80 = 0;
  v81 = 2;
  v82 = 0;
  swift_retain();
  sub_1B1D90D2C((uint64_t)v49);
  swift_release();
  v64[0] = v49[0];
  v64[1] = v49[1];
  v65 = v50;
  sub_1B1E8FCE4(a1, (uint64_t)v64, 0x200000000, v51);
  sub_1B19F66A0((uint64_t)v51, (uint64_t)v52, (unint64_t *)&qword_1ED4B7DE0);
  if (!*(_QWORD *)&v52[0])
    return (uint64_t *)sub_1B19ED720((uint64_t)v49);
  v59 = v52[0];
  v60 = v52[1];
  v61 = v53;
  if (v58 <= 0 || (v40 = v55) == 0)
  {
    sub_1B19ED720((uint64_t)v49);
    return sub_1B19ED748(v51);
  }
  v45 = a1;
  v39 = v54;
  v3 = v57;
  v46 = v56;
  v4 = v57[4];
  v44 = *(unsigned __int8 *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v37 = (uint64_t)(v57 + 6);
  sub_1B1D98F80(v51);
  swift_retain();
  swift_retain();
  swift_retain();
  v5 = 0;
  v6 = 0;
  v38 = v4;
  while (1)
  {
    v48 = v6;
    v7 = (unsigned int *)(v39 + 48 * v5);
    v8 = *v7;
    v9 = v7[2];
    v10 = (uint64_t *)*((_QWORD *)v7 + 2);
    v12 = *((_QWORD *)v7 + 4);
    v11 = *((_QWORD *)v7 + 5);
    v43 = v5;
    v41 = v7[1];
    v42 = *((_QWORD *)v7 + 3);
    if (v44)
    {
      v13 = *(os_unfair_lock_s **)(v11 + 376);
      swift_retain();
      os_unfair_lock_lock(v13);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v4);
    sub_1B19F66A0(v37, (uint64_t)v66, &qword_1ED4B7FB0);
    v14 = v3[4];
    v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v3[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
    v3[7] = v15;
    v3[9] = 0;
    v3[10] = 0;
    v3[8] = 0;
    swift_release();
    sub_1B1A12038((uint64_t)&type metadata for DirectionalLight, (uint64_t)&off_1E6387098, v10, v42, v12, (uint64_t)v3);
    sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v10, v42, v12, (uint64_t)v3);
    sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v10, v42, v12, (uint64_t)v3);
    sub_1B1A12038((uint64_t)&type metadata for Shadow, (uint64_t)&off_1E63BCD78, v10, v42, v12, (uint64_t)v3);
    if (v10)
    {
      v16 = v46;
      if (v12)
      {
        while (1)
        {
          v18 = *v10++;
          v17 = v18;
          v67 = v16;
          v68 = v11;
          v69 = v3;
          v70 = v9;
          v71 = v18;
          if (v9 <= 7)
          {
            v19 = *(_BYTE *)(v11 + 184);
            v20 = swift_retain();
            if ((v19 & 1) != 0)
              goto LABEL_39;
            v21 = *(_DWORD *)(*(_QWORD *)(v11 + 168) + 4 * v17);
            v22 = *(_DWORD *)(*(_QWORD *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v21 + 8);
            v23 = swift_release();
            if (v21 == (_DWORD)a2 && v22 == HIDWORD(a2))
            {
              MEMORY[0x1E0C80A78](v23, v24);
              v26 = *(_QWORD **)(v45 + 176);
              swift_retain();
              sub_1B1F21F8C((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1E637F8B8, v26, sub_1B1D98FD0);
              v16 = v46;
              swift_release();
            }
          }
          ++v9;
          if (!--v12)
            goto LABEL_24;
        }
      }
      goto LABEL_24;
    }
    v27 = v46;
    if ((_DWORD)v8 != (_DWORD)v41)
      break;
LABEL_24:
    v62[0] = v59;
    v62[1] = v60;
    v63 = v61;
    v6 = v48;
    sub_1B1F05D48(v3, (unsigned __int16 **)v62, (uint64_t)v66);
    sub_1B1F03804((char *)v11);
    v4 = v38;
    ecs_stack_allocator_pop_snapshot(v38);
    if ((v44 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
    }
    swift_release();
    v5 = v43 + 1;
    if (v43 + 1 == v40)
    {
      sub_1B19ED748(v51);
      sub_1B19ED720((uint64_t)v49);
      sub_1B19ED748(v51);
      return sub_1B19ED748(v51);
    }
  }
  while (1)
  {
    v72 = v27;
    v73 = v11;
    v74 = v3;
    v75 = v9;
    v76 = v8;
    if (v9 > 7)
      goto LABEL_26;
    v28 = *(_BYTE *)(v11 + 184);
    v29 = swift_retain();
    if ((v28 & 1) != 0)
      break;
    v30 = *(_DWORD *)(*(_QWORD *)(v11 + 168) + 4 * v8);
    v31 = *(_DWORD *)(*(_QWORD *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v30 + 8);
    v32 = swift_release();
    if (v30 == (_DWORD)a2 && v31 == HIDWORD(a2))
    {
      MEMORY[0x1E0C80A78](v32, v33);
      v35 = *(_QWORD **)(v45 + 176);
      swift_retain();
      sub_1B1F21F8C((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1E637F8B8, v35, sub_1B1D98FD0);
      v27 = v46;
      swift_release();
    }
LABEL_26:
    ++v8;
    ++v9;
    if (v41 == v8)
      goto LABEL_24;
  }
LABEL_39:
  result = (uint64_t *)sub_1B2229688();
  __break(1u);
  return result;
}

double sub_1B1D8F9C0@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 524288.135;
  *a1 = xmmword_1B2294020;
  return result;
}

void sub_1B1D8F9D0(char *a1)
{
  sub_1B1F91830(*a1);
}

void sub_1B1D8F9DC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B222A06C();
  __asm { BR              X9 }
}

uint64_t sub_1B1D8FA2C()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1D8FA98()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1D8FAD8()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1D8FB30()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B222A06C();
  __asm { BR              X9 }
}

uint64_t sub_1B1D8FB7C()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1D8FBE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1BB2C74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D8FC1C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1D8FC50 + 4 * byte_1B229406C[*v0]))();
}

void sub_1B1D8FC50(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "shadowRadius");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1B1D8FC74(_QWORD *a1@<X8>)
{
  *a1 = 0x7261654E7ALL;
  a1[1] = 0xE500000000000000;
}

void sub_1B1D8FC8C(_QWORD *a1@<X8>)
{
  *a1 = 1918977658;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1B1D8FCA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1D8FCD4 + 4 * byte_1B2294070[*v0]))(0x7469736E65746E69, 0xE900000000000079);
}

uint64_t sub_1B1D8FCD4()
{
  return 0x6152776F64616873;
}

uint64_t sub_1B1D8FCF4()
{
  return 0x7261654E7ALL;
}

uint64_t sub_1B1D8FD08()
{
  return 1918977658;
}

uint64_t sub_1B1D8FD18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1BB2C74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D8FD44()
{
  sub_1B1D983E8();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D8FD6C()
{
  sub_1B1D983E8();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D8FD94@<X0>(_DWORD *a1@<X8>)
{
  return sub_1B1D901F0((uint64_t (*)(void))sub_1B1D981B4, a1);
}

uint64_t sub_1B1D8FDB0(_QWORD *a1)
{
  return sub_1B1D90048(a1, &qword_1EEF5E730, (uint64_t (*)(void))sub_1B1D983E8, (uint64_t)&type metadata for DirectionalLight.CodingKeys);
}

double sub_1B1D8FDE4@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 524288.138;
  *a1 = xmmword_1B2294030;
  return result;
}

void sub_1B1D8FDF4(char *a1)
{
  sub_1B1F8DC38(*a1);
}

void sub_1B1D8FE00()
{
  char *v0;

  sub_1B1FB23C8(*v0);
}

void sub_1B1D8FE08()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1D8FE48()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1D8FE9C(uint64_t a1)
{
  char *v1;

  sub_1B1DB6534(a1, *v1);
}

uint64_t sub_1B1D8FEA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1BB2C74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D8FED8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1D8FF0C + 4 * byte_1B2294078[*v0]))();
}

void sub_1B1D8FF0C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001B2328200;
}

void sub_1B1D8FF2C(_QWORD *a1@<X8>)
{
  *a1 = 0x7261654E7ALL;
  a1[1] = 0xE500000000000000;
}

void sub_1B1D8FF44(_QWORD *a1@<X8>)
{
  *a1 = 1918977658;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1B1D8FF58()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1D8FF8C + 4 * byte_1B229407C[*v0]))(0x7469736E65746E69, 0xE900000000000079);
}

unint64_t sub_1B1D8FF8C()
{
  return 0xD000000000000011;
}

uint64_t sub_1B1D8FFA8()
{
  return 0x7261654E7ALL;
}

uint64_t sub_1B1D8FFBC()
{
  return 1918977658;
}

uint64_t sub_1B1D8FFCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1BB2C74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D8FFF8()
{
  sub_1B1D98644();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D90020()
{
  sub_1B1D98644();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D90048(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;

  sub_1B19F8E54(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v10);
  v12 = (char *)&v14 - v11;
  sub_1B19FA070(a1, a1[3]);
  a3();
  sub_1B222A180();
  v18 = 0;
  sub_1B2229934();
  if (!v4)
  {
    v17 = 1;
    sub_1B2229934();
    v16 = 2;
    sub_1B2229934();
    v15 = 3;
    sub_1B2229934();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B1D901D4@<X0>(_DWORD *a1@<X8>)
{
  return sub_1B1D901F0((uint64_t (*)(void))sub_1B1D9842C, a1);
}

uint64_t sub_1B1D901F0@<X0>(uint64_t (*a1)(void)@<X3>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  int v5;
  int v6;
  int v7;
  int v8;

  result = a1();
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_1B1D9021C(_QWORD *a1)
{
  return sub_1B1D90048(a1, &qword_1EEF5E738, (uint64_t (*)(void))sub_1B1D98644, (uint64_t)&type metadata for PointLight.CodingKeys);
}

uint64_t sub_1B1D90250()
{
  return 0x7469736E65746E69;
}

uint64_t sub_1B1D9026C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7469736E65746E69 && a2 == 0xE900000000000079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1B2229D24();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B1D9030C()
{
  sub_1B1D98F3C();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D90334()
{
  sub_1B1D98F3C();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D9035C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _DWORD *v10;
  int v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  _DWORD *v15;

  v15 = a2;
  sub_1B19F8E54(0, &qword_1ED4BAA68, (uint64_t (*)(void))sub_1B1D98F3C, (uint64_t)&type metadata for AmbientLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v14 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D98F3C();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v15;
  sub_1B22297F0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *v10 = v12;
  return result;
}

uint64_t sub_1B1D904A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1B19F8E54(0, &qword_1EEF5E758, (uint64_t (*)(void))sub_1B1D98F3C, (uint64_t)&type metadata for AmbientLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v5);
  v7 = (char *)&v9 - v6;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D98F3C();
  sub_1B222A180();
  sub_1B2229934();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_1B1D905B0(_DWORD *a1@<X8>)
{
  *a1 = 1045220557;
}

double sub_1B1D905C0@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_1B2294040;
  result = 524288.117;
  *(_QWORD *)(a1 + 16) = 0x412000003C23D70ALL;
  return result;
}

void sub_1B1D905DC(char *a1)
{
  sub_1B1F9A1CC(*a1);
}

void sub_1B1D905E8()
{
  char *v0;

  sub_1B1FB3404(*v0);
}

void sub_1B1D905F0(uint64_t a1)
{
  char *v1;

  sub_1B1DB3A10(a1, *v1);
}

void sub_1B1D905F8(uint64_t a1)
{
  char *v1;

  sub_1B1DB4A2C(a1, *v1);
}

uint64_t sub_1B1D90600@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1D9816C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D9062C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1D90660 + 4 * byte_1B2294080[*v0]))();
}

void sub_1B1D90660(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001B2328200;
}

void sub_1B1D90680(_QWORD *a1@<X8>)
{
  *a1 = 0x676E41726574756FLL;
  a1[1] = 0xEA0000000000656CLL;
}

void sub_1B1D906AC(_QWORD *a1@<X8>)
{
  *a1 = 0x7261654E7ALL;
  a1[1] = 0xE500000000000000;
}

void sub_1B1D906C4(_QWORD *a1@<X8>)
{
  *a1 = 1918977658;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1B1D906D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1D9070C + 4 * byte_1B2294086[*v0]))(0x7469736E65746E69, 0xE900000000000079);
}

unint64_t sub_1B1D9070C()
{
  return 0xD000000000000011;
}

uint64_t sub_1B1D90728()
{
  return 0x676E41726574756FLL;
}

uint64_t sub_1B1D90750()
{
  return 0x7261654E7ALL;
}

uint64_t sub_1B1D90764()
{
  return 1918977658;
}

uint64_t sub_1B1D90774@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1D9816C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D90798()
{
  sub_1B1D9892C();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D907C0()
{
  sub_1B1D9892C();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D907E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1B19F8E54(0, &qword_1EEF5E750, (uint64_t (*)(void))sub_1B1D9892C, (uint64_t)&type metadata for SpotLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v10 - v7;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D9892C();
  sub_1B222A180();
  v16 = 0;
  sub_1B2229934();
  if (!v1)
  {
    v15 = 1;
    sub_1B2229934();
    v14 = 2;
    sub_1B2229934();
    v13 = 3;
    sub_1B2229934();
    v12 = 4;
    sub_1B2229934();
    v11 = 5;
    sub_1B2229934();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

double sub_1B1D909B8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_1B1D98688(a1, (float *)&v5);
  if (!v2)
  {
    result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B1D909F8(_QWORD *a1)
{
  return sub_1B1D907E8(a1);
}

uint64_t sub_1B1D90A0C(_QWORD *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;
  char v16;

  sub_1B19F8E54(0, &qword_1EEF5E7A0, (uint64_t (*)(void))sub_1B1D99AA8, (uint64_t)&type metadata for RectAreaLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = (char *)v13 - v10;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D99AA8();
  sub_1B222A180();
  v16 = 0;
  sub_1B2229934();
  if (!v3)
  {
    *(double *)&v13[1] = a3;
    v15 = 1;
    sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    sub_1B1B7283C((unint64_t *)&qword_1ED4B72D8, MEMORY[0x1E0DEDD30]);
    sub_1B2229958();
    v14 = 2;
    sub_1B222991C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B1D90BC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F8FF48(*a1, *a2);
}

uint64_t sub_1B1D90BD0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x73746E65747865;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x7469736E65746E69;
}

uint64_t sub_1B1D90C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1D98010(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1D90C58()
{
  sub_1B1D99AA8();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D90C80()
{
  sub_1B1D99AA8();
  return sub_1B222A1E0();
}

void sub_1B1D90CA8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  float v5;
  uint64_t v6;

  v5 = sub_1B1D998B4(a1);
  if (!v2)
  {
    *(float *)a2 = v5;
    *(_QWORD *)(a2 + 8) = v6;
    *(_BYTE *)(a2 + 16) = v4 & 1;
  }
}

uint64_t sub_1B1D90CDC(_QWORD *a1, double a2)
{
  uint64_t v2;

  LODWORD(a2) = *(_DWORD *)v2;
  return sub_1B1D90A0C(a1, a2, *(double *)(v2 + 8));
}

double sub_1B1D90CFC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_DWORD *)a1 = 1143652352;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

double sub_1B1D90D18@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_DWORD *)(a1 + 47) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1B1D90D2C@<X0>(uint64_t a1@<X8>)
{
  unsigned __int16 **v1;
  unsigned __int16 **v2;
  unsigned __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t inited;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  char v19;
  unsigned __int16 *v20;
  unsigned __int16 *v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int16 v26;
  char v27;

  v2 = v1;
  v4 = *v1;
  v5 = (uint64_t)*v1 + 41;
  v6 = (*v1)[8];
  v7 = v4[9];
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B227BE30;
  *(_QWORD *)(inited + 32) = &type metadata for DirectionalLight;
  *(_QWORD *)(inited + 40) = &off_1E6387110;
  *(_QWORD *)(inited + 48) = &type metadata for WorldTransform;
  *(_QWORD *)(inited + 56) = &off_1E6382C78;
  *(_QWORD *)(inited + 64) = &type metadata for Color;
  *(_QWORD *)(inited + 72) = &off_1E63BA208;
  *(_QWORD *)(inited + 80) = &type metadata for Shadow;
  *(_QWORD *)(inited + 88) = &off_1E63BCDF0;
  if (v7 > 0xF)
  {
    v25 = sub_1B1DC8944((char *)(v5 + v6), v7 >> 4);
    sub_1B19F4A48(inited);
    inited = v25;
  }
  v9 = v4[10];
  v10 = v4[11];
  v11 = 4;
  v12 = sub_1B2228B0C();
  *(_QWORD *)(v12 + 16) = 4;
  *(_DWORD *)(v12 + 32) = 50529027;
  if (v10)
  {
    v25 = sub_1B1DC8810((char *)(v5 + v9), v10);
    sub_1B19F499C(v12);
    v12 = v25;
    v11 = *(_QWORD *)(v25 + 16);
  }
  v13 = (uint64_t)*v2 + 41;
  v14 = (char *)(v13 + (*v2)[12]);
  v15 = (unint64_t)(*v2)[13] >> 4;
  v16 = (char *)(v13 + (*v2)[14]);
  v17 = (*v2)[15] / 0x18u;
  v18 = *((_DWORD *)v2 + 2);
  v19 = *((_BYTE *)v2 + 12);
  v20 = v2[4];
  v21 = v2[2];
  v22 = *((_BYTE *)v2 + 24);
  v23 = sub_1B1CC8DA4((char *)(inited + 32), *(_QWORD *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(_BYTE *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(_BYTE *)(a1 + 15) = v27;
  *(_QWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(_QWORD *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B1D90F58@<X0>(uint64_t a1@<X8>)
{
  unsigned __int16 **v1;
  unsigned __int16 **v2;
  unsigned __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t inited;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  char v19;
  unsigned __int16 *v20;
  unsigned __int16 *v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int16 v26;
  char v27;

  v2 = v1;
  v4 = *v1;
  v5 = (uint64_t)*v1 + 41;
  v6 = (*v1)[8];
  v7 = v4[9];
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B227BE30;
  *(_QWORD *)(inited + 32) = &type metadata for PointLight;
  *(_QWORD *)(inited + 40) = &off_1E636EBB8;
  *(_QWORD *)(inited + 48) = &type metadata for WorldTransform;
  *(_QWORD *)(inited + 56) = &off_1E6382C78;
  *(_QWORD *)(inited + 64) = &type metadata for Color;
  *(_QWORD *)(inited + 72) = &off_1E63BA208;
  *(_QWORD *)(inited + 80) = &type metadata for Shadow;
  *(_QWORD *)(inited + 88) = &off_1E63BCDF0;
  if (v7 > 0xF)
  {
    v25 = sub_1B1DC8944((char *)(v5 + v6), v7 >> 4);
    sub_1B19F4A48(inited);
    inited = v25;
  }
  v9 = v4[10];
  v10 = v4[11];
  v11 = 4;
  v12 = sub_1B2228B0C();
  *(_QWORD *)(v12 + 16) = 4;
  *(_DWORD *)(v12 + 32) = 50529027;
  if (v10)
  {
    v25 = sub_1B1DC8810((char *)(v5 + v9), v10);
    sub_1B19F499C(v12);
    v12 = v25;
    v11 = *(_QWORD *)(v25 + 16);
  }
  v13 = (uint64_t)*v2 + 41;
  v14 = (char *)(v13 + (*v2)[12]);
  v15 = (unint64_t)(*v2)[13] >> 4;
  v16 = (char *)(v13 + (*v2)[14]);
  v17 = (*v2)[15] / 0x18u;
  v18 = *((_DWORD *)v2 + 2);
  v19 = *((_BYTE *)v2 + 12);
  v20 = v2[4];
  v21 = v2[2];
  v22 = *((_BYTE *)v2 + 24);
  v23 = sub_1B1CC8DA4((char *)(inited + 32), *(_QWORD *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(_BYTE *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(_BYTE *)(a1 + 15) = v27;
  *(_QWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(_QWORD *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B1D91184@<X0>(uint64_t a1@<X8>)
{
  unsigned __int16 **v1;
  unsigned __int16 **v2;
  unsigned __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t inited;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  char v19;
  unsigned __int16 *v20;
  unsigned __int16 *v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int16 v26;
  char v27;

  v2 = v1;
  v4 = *v1;
  v5 = (uint64_t)*v1 + 41;
  v6 = (*v1)[8];
  v7 = v4[9];
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B227BE30;
  *(_QWORD *)(inited + 32) = &type metadata for SpotLight;
  *(_QWORD *)(inited + 40) = &off_1E63C5208;
  *(_QWORD *)(inited + 48) = &type metadata for WorldTransform;
  *(_QWORD *)(inited + 56) = &off_1E6382C78;
  *(_QWORD *)(inited + 64) = &type metadata for Color;
  *(_QWORD *)(inited + 72) = &off_1E63BA208;
  *(_QWORD *)(inited + 80) = &type metadata for Shadow;
  *(_QWORD *)(inited + 88) = &off_1E63BCDF0;
  if (v7 > 0xF)
  {
    v25 = sub_1B1DC8944((char *)(v5 + v6), v7 >> 4);
    sub_1B19F4A48(inited);
    inited = v25;
  }
  v9 = v4[10];
  v10 = v4[11];
  v11 = 4;
  v12 = sub_1B2228B0C();
  *(_QWORD *)(v12 + 16) = 4;
  *(_DWORD *)(v12 + 32) = 50529027;
  if (v10)
  {
    v25 = sub_1B1DC8810((char *)(v5 + v9), v10);
    sub_1B19F499C(v12);
    v12 = v25;
    v11 = *(_QWORD *)(v25 + 16);
  }
  v13 = (uint64_t)*v2 + 41;
  v14 = (char *)(v13 + (*v2)[12]);
  v15 = (unint64_t)(*v2)[13] >> 4;
  v16 = (char *)(v13 + (*v2)[14]);
  v17 = (*v2)[15] / 0x18u;
  v18 = *((_DWORD *)v2 + 2);
  v19 = *((_BYTE *)v2 + 12);
  v20 = v2[4];
  v21 = v2[2];
  v22 = *((_BYTE *)v2 + 24);
  v23 = sub_1B1CC8DA4((char *)(inited + 32), *(_QWORD *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(_BYTE *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(_BYTE *)(a1 + 15) = v27;
  *(_QWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(_QWORD *)(a1 + 32) = v20;
  return result;
}

void sub_1B1D913B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  float32x4_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  int v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int v78;
  float32x4_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int v90;
  float32x4_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  int v112;
  uint64_t v113;
  int8x16_t v114;
  float32x4_t v115;
  int8x16_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  _OWORD v120[2];
  uint64_t v121;
  _OWORD v122[2];
  uint64_t v123;
  _OWORD v124[2];
  uint64_t v125;
  _OWORD v126[2];
  uint64_t v127;
  _OWORD v128[2];
  uint64_t v129;
  _OWORD v130[2];
  uint64_t v131;
  _OWORD v132[2];
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  _BYTE v138[176];
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  uint64_t v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  _BYTE v256[176];
  uint64_t v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  uint64_t v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  uint64_t v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  uint64_t v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  uint64_t v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  uint64_t v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  uint64_t v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  uint64_t v369;
  uint64_t v370;
  _BYTE v371[624];
  _BYTE v372[624];
  _BYTE v373[624];
  _BYTE v374[624];
  _BYTE v375[624];
  _BYTE v376[624];
  _BYTE v377[624];
  _BYTE v378[624];
  _BYTE v379[624];
  _BYTE v380[2304];
  _BYTE v381[2304];
  _BYTE v382[128];
  _BYTE v383[96];
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  char v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  char v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  char v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  char v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  char v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  char v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  char v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  uint64_t v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  _BYTE v458[4352];
  _QWORD v459[75];
  _QWORD v460[3];
  _QWORD v461[75];
  _QWORD v462[3];
  _QWORD v463[75];
  _QWORD v464[3];
  _QWORD v465[75];
  _QWORD v466[3];
  _QWORD v467[75];
  _QWORD v468[3];
  _QWORD v469[75];
  _QWORD v470[3];
  _QWORD v471[75];
  _QWORD v472[3];
  _QWORD v473[75];
  _QWORD v474[3];
  _QWORD v475[75];
  _QWORD v476[3];
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  uint64_t v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  _BYTE v495[160];
  uint64_t v496[21];
  uint64_t v497[12];
  uint64_t v498[12];
  uint64_t v499[12];
  uint64_t v500[12];
  uint64_t v501[12];
  uint64_t v502[12];
  uint64_t v503[12];
  uint64_t v504;
  unsigned int v505;
  unsigned __int8 v506;
  uint64_t v507;
  unsigned __int8 v508;
  uint64_t v509;
  uint64_t v510;
  __int128 v511;
  __int128 v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  unsigned int v516;
  unsigned __int8 v517;
  uint64_t v518;
  unsigned __int8 v519;
  uint64_t v520;
  uint64_t v521;
  __int128 v522;
  __int128 v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  unsigned int v527;
  unsigned __int8 v528;
  uint64_t v529;
  unsigned __int8 v530;
  uint64_t v531;
  uint64_t v532;
  __int128 v533;
  __int128 v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  unsigned int v538;
  unsigned __int8 v539;
  uint64_t v540;
  unsigned __int8 v541;
  uint64_t v542;
  uint64_t v543;
  __int128 v544;
  __int128 v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  unsigned int v549;
  unsigned __int8 v550;
  uint64_t v551;
  unsigned __int8 v552;
  uint64_t v553;
  uint64_t v554;
  __int128 v555;
  __int128 v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  unsigned int v560;
  unsigned __int8 v561;
  uint64_t v562;
  unsigned __int8 v563;
  uint64_t v564;
  uint64_t v565;
  __int128 v566;
  __int128 v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  unsigned int v571;
  unsigned __int8 v572;
  uint64_t v573;
  unsigned __int8 v574;
  uint64_t v575;
  uint64_t v576;
  __int128 v577;
  __int128 v578;
  uint64_t v579;
  uint64_t v580;
  _QWORD v581[6];
  __int128 v582;
  __int128 v583;
  uint64_t v584;
  uint64_t v585;
  _QWORD v586[6];
  __int128 v587;
  __int128 v588;
  uint64_t v589;
  uint64_t v590;
  _QWORD v591[6];
  __int128 v592;
  __int128 v593;
  uint64_t v594;
  uint64_t v595;
  _QWORD v596[6];
  __int128 v597;
  __int128 v598;
  uint64_t v599;
  uint64_t v600;
  _QWORD v601[6];
  __int128 v602;
  __int128 v603;
  uint64_t v604;
  uint64_t v605;
  _QWORD v606[6];
  __int128 v607;
  __int128 v608;
  uint64_t v609;
  uint64_t v610;
  _QWORD v611[6];
  __int128 v612;
  __int128 v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;

  MEMORY[0x1E0C80A78](a1, a2);
  v616 = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v4)
  {
    v5 = v2;
    v6 = v3;
    v7 = *(_QWORD *)(v3 + 176);
    swift_retain();
    swift_retain();
    v8 = sub_1B1F21904(v7);
    v10 = v9;
    v12 = v11;
    swift_release();
    sub_1B19F66A0(v4 + 624, (uint64_t)v495, &qword_1ED4BF400);
    sub_1B19F66A0((uint64_t)v495, (uint64_t)v496, &qword_1ED4BF400);
    v113 = v6;
    if (sub_1B1B3C438(v496) == 1)
    {
      sub_1B2229688();
      __break(1u);
    }
    else
    {
      v13.i32[0] = 0;
      v14.i32[0] = v12 & 1;
      v15 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v14, v13), 0);
      v16.i64[0] = v8;
      v16.i64[1] = v10;
      v114 = v16;
      v116 = v15;
      v17 = v496[1];
      ObjectType = swift_getObjectType();
      v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 144);
      swift_unknownObjectRetain();
      v20 = v19(ObjectType, v17);
      swift_unknownObjectRelease();
      v135 = 0u;
      v136 = 0u;
      v134 = 0u;
      memset(v138, 0, sizeof(v138));
      v137 = 0;
      v139 = 0;
      v140 = 0u;
      v141 = 0u;
      v142 = 0u;
      v143 = 0u;
      v144 = 0u;
      v145 = 0u;
      v146 = 0u;
      v147 = 0u;
      v148 = 0u;
      v149 = 0u;
      v150 = 0u;
      v151 = 0u;
      v152 = 0u;
      v153 = 0u;
      v154 = 0u;
      v155 = 0;
      v171 = 0;
      v169 = 0u;
      v170 = 0u;
      v167 = 0u;
      v168 = 0u;
      v165 = 0u;
      v166 = 0u;
      v163 = 0u;
      v164 = 0u;
      v161 = 0u;
      v162 = 0u;
      v159 = 0u;
      v160 = 0u;
      v157 = 0u;
      v158 = 0u;
      v156 = 0u;
      v172 = 0u;
      v173 = 0u;
      v174 = 0u;
      v175 = 0u;
      v176 = 0u;
      v177 = 0u;
      v178 = 0u;
      v179 = 0u;
      v180 = 0u;
      v181 = 0u;
      v182 = 0u;
      v183 = 0u;
      v184 = 0u;
      v185 = 0u;
      v186 = 0u;
      v187 = 0;
      v203 = 0;
      v202 = 0u;
      v201 = 0u;
      v200 = 0u;
      v199 = 0u;
      v198 = 0u;
      v197 = 0u;
      v196 = 0u;
      v195 = 0u;
      v194 = 0u;
      v193 = 0u;
      v192 = 0u;
      v191 = 0u;
      v190 = 0u;
      v189 = 0u;
      v188 = 0u;
      v219 = 0;
      v218 = 0u;
      v217 = 0u;
      v216 = 0u;
      v215 = 0u;
      v214 = 0u;
      v213 = 0u;
      v212 = 0u;
      v211 = 0u;
      v210 = 0u;
      v209 = 0u;
      v208 = 0u;
      v207 = 0u;
      v206 = 0u;
      v205 = 0u;
      v204 = 0u;
      v235 = 0;
      v234 = 0u;
      v233 = 0u;
      v232 = 0u;
      v231 = 0u;
      v230 = 0u;
      v229 = 0u;
      v228 = 0u;
      v227 = 0u;
      v226 = 0u;
      v225 = 0u;
      v224 = 0u;
      v223 = 0u;
      v222 = 0u;
      v221 = 0u;
      v220 = 0u;
      v251 = 0;
      v250 = 0u;
      v249 = 0u;
      v248 = 0u;
      v247 = 0u;
      v246 = 0u;
      v245 = 0u;
      v244 = 0u;
      v243 = 0u;
      v242 = 0u;
      v241 = 0u;
      v240 = 0u;
      v239 = 0u;
      v238 = 0u;
      v237 = 0u;
      v236 = 0u;
      v257 = 0;
      memset(v256, 0, sizeof(v256));
      v255 = 0u;
      v254 = 0u;
      v253 = 0u;
      v252 = 0u;
      v273 = 0;
      v272 = 0u;
      v271 = 0u;
      v270 = 0u;
      v269 = 0u;
      v268 = 0u;
      v267 = 0u;
      v266 = 0u;
      v265 = 0u;
      v264 = 0u;
      v263 = 0u;
      v262 = 0u;
      v261 = 0u;
      v260 = 0u;
      v259 = 0u;
      v258 = 0u;
      v289 = 0;
      v288 = 0u;
      v287 = 0u;
      v286 = 0u;
      v285 = 0u;
      v284 = 0u;
      v283 = 0u;
      v282 = 0u;
      v281 = 0u;
      v280 = 0u;
      v279 = 0u;
      v278 = 0u;
      v277 = 0u;
      v276 = 0u;
      v275 = 0u;
      v274 = 0u;
      v305 = 0;
      v304 = 0u;
      v303 = 0u;
      v302 = 0u;
      v301 = 0u;
      v300 = 0u;
      v299 = 0u;
      v298 = 0u;
      v297 = 0u;
      v296 = 0u;
      v295 = 0u;
      v294 = 0u;
      v293 = 0u;
      v292 = 0u;
      v291 = 0u;
      v290 = 0u;
      v321 = 0;
      v320 = 0u;
      v319 = 0u;
      v318 = 0u;
      v317 = 0u;
      v316 = 0u;
      v315 = 0u;
      v314 = 0u;
      v313 = 0u;
      v312 = 0u;
      v311 = 0u;
      v310 = 0u;
      v309 = 0u;
      v308 = 0u;
      v307 = 0u;
      v306 = 0u;
      v337 = 0;
      v336 = 0u;
      v335 = 0u;
      v334 = 0u;
      v333 = 0u;
      v332 = 0u;
      v331 = 0u;
      v330 = 0u;
      v329 = 0u;
      v328 = 0u;
      v327 = 0u;
      v326 = 0u;
      v325 = 0u;
      v324 = 0u;
      v323 = 0u;
      v322 = 0u;
      v353 = 0;
      v352 = 0u;
      v351 = 0u;
      v350 = 0u;
      v349 = 0u;
      v348 = 0u;
      v347 = 0u;
      v346 = 0u;
      v345 = 0u;
      v344 = 0u;
      v343 = 0u;
      v342 = 0u;
      v341 = 0u;
      v340 = 0u;
      v339 = 0u;
      v338 = 0u;
      v369 = 0;
      v368 = 0u;
      v367 = 0u;
      v366 = 0u;
      v365 = 0u;
      v364 = 0u;
      v363 = 0u;
      v362 = 0u;
      v361 = 0u;
      v360 = 0u;
      v359 = 0u;
      v358 = 0u;
      v357 = 0u;
      v356 = 0u;
      v355 = 0u;
      v354 = 0u;
      bzero(&v370, 0x288uLL);
      memset(&v371[592], 0, 21);
      bzero(v372, 0x248uLL);
      memset(&v372[592], 0, 21);
      bzero(v373, 0x248uLL);
      memset(&v373[592], 0, 21);
      bzero(v374, 0x248uLL);
      memset(&v374[592], 0, 21);
      bzero(v375, 0x248uLL);
      memset(&v375[592], 0, 21);
      bzero(v376, 0x248uLL);
      memset(&v376[592], 0, 21);
      bzero(v377, 0x248uLL);
      memset(&v377[592], 0, 21);
      bzero(v378, 0x248uLL);
      memset(&v378[592], 0, 21);
      bzero(v379, 0x248uLL);
      memset(&v379[592], 0, 21);
      memset(v380, 0, 277);
      memset(&v380[288], 0, 277);
      memset(&v380[576], 0, 277);
      memset(&v380[864], 0, 277);
      memset(&v380[1152], 0, 277);
      memset(&v380[1440], 0, 277);
      memset(&v380[1728], 0, 277);
      memset(&v380[2016], 0, 277);
      memset(v381, 0, 277);
      memset(&v381[288], 0, 277);
      memset(&v381[576], 0, 277);
      memset(&v381[864], 0, 277);
      memset(&v381[1152], 0, 277);
      memset(&v381[1440], 0, 277);
      v441 = 0u;
      v440 = 0u;
      v439 = 0u;
      v438 = 0u;
      v447 = 0u;
      v446 = 0u;
      v445 = 0u;
      v444 = 0u;
      v443 = 0u;
      v442 = 0u;
      v452 = 0u;
      v451 = 0u;
      v450 = 0u;
      v449 = 0u;
      v448 = 0u;
      memset(v458, 0, 21);
      v457 = 0u;
      v456 = 0u;
      v455 = 0u;
      v454 = 0u;
      v453 = 0u;
      v431 = 0u;
      v430 = 0u;
      v429 = 0u;
      v428 = 0u;
      v427 = 0u;
      v426 = 0u;
      v437 = 0;
      v436 = 0u;
      v435 = 0u;
      v434 = 0u;
      v433 = 0u;
      v432 = 0u;
      v408 = 0u;
      v423 = 0u;
      v422 = 0u;
      v421 = 0u;
      v420 = 0u;
      v415 = 0u;
      v414 = 0u;
      v425 = 0;
      v424 = 0u;
      v419 = 0;
      v418 = 0u;
      v417 = 0u;
      v416 = 0u;
      v412 = 0u;
      v411 = 0u;
      v410 = 0u;
      v409 = 0u;
      v404 = 0u;
      v405 = 0u;
      v406 = 0u;
      v413 = 0;
      v400 = 0u;
      v407 = 0;
      v402 = 0u;
      v403 = 0u;
      v401 = 0;
      v396 = 0u;
      v397 = 0u;
      v398 = 0u;
      v399 = 0u;
      v395 = 0;
      v394 = 0u;
      v393 = 0u;
      v392 = 0u;
      v391 = 0u;
      v390 = 0u;
      v385 = 0u;
      v386 = 0u;
      v387 = 0u;
      v388 = 0u;
      memset(v382, 0, sizeof(v382));
      v389 = 0;
      v384 = 0u;
      memset(v383, 0, 81);
      memset(&v381[2016], 0, 277);
      memset(&v381[1728], 0, 277);
      memset(&v458[32], 0, 277);
      memset(&v458[320], 0, 277);
      memset(&v458[608], 0, 277);
      memset(&v458[896], 0, 277);
      memset(&v458[1184], 0, 277);
      memset(&v458[1472], 0, 277);
      memset(&v458[1760], 0, 277);
      memset(&v458[2048], 0, 277);
      memset(&v458[2336], 0, 277);
      memset(&v458[2624], 0, 277);
      memset(&v458[2912], 0, 277);
      memset(&v458[3200], 0, 277);
      memset(&v458[3488], 0, 277);
      memset(&v458[3776], 0, 277);
      memset(&v458[4064], 0, 277);
      bzero(v459, 0x248uLL);
      *(_QWORD *)((char *)v460 + 5) = 0;
      v460[0] = 0;
      v459[74] = 0;
      bzero(v461, 0x248uLL);
      *(_QWORD *)((char *)v462 + 5) = 0;
      v462[0] = 0;
      v461[74] = 0;
      bzero(v463, 0x248uLL);
      *(_QWORD *)((char *)v464 + 5) = 0;
      v464[0] = 0;
      v463[74] = 0;
      bzero(v465, 0x248uLL);
      *(_QWORD *)((char *)v466 + 5) = 0;
      v466[0] = 0;
      v465[74] = 0;
      bzero(v467, 0x248uLL);
      *(_QWORD *)((char *)v468 + 5) = 0;
      v468[0] = 0;
      v467[74] = 0;
      bzero(v469, 0x248uLL);
      *(_QWORD *)((char *)v470 + 5) = 0;
      v470[0] = 0;
      v469[74] = 0;
      bzero(v471, 0x248uLL);
      *(_QWORD *)((char *)v472 + 5) = 0;
      v472[0] = 0;
      v471[74] = 0;
      bzero(v473, 0x248uLL);
      *(_QWORD *)((char *)v474 + 5) = 0;
      v474[0] = 0;
      v473[74] = 0;
      bzero(v475, 0x248uLL);
      *(_QWORD *)((char *)v476 + 5) = 0;
      v476[0] = 0;
      v475[74] = 0;
      v477 = 0u;
      v478 = 0u;
      v479 = 0u;
      v480 = 0u;
      v481 = 0u;
      v482 = 0u;
      v483 = 0u;
      v484 = 0u;
      v485 = 0u;
      v486 = 0u;
      v487 = 0u;
      v488 = 0;
      v489 = 0u;
      v490 = 0u;
      v491 = 0u;
      v492 = 0u;
      v493 = 0u;
      v494 = 0u;
      v21 = *(_OWORD *)(v5 + 32);
      v132[0] = *(_OWORD *)(v5 + 16);
      v132[1] = v21;
      v133 = *(_QWORD *)(v5 + 48);
      v22 = v20 & 0xFFFFFFFFFFLL;
      sub_1B1E8FCE4(v113, (uint64_t)v132, v20 & 0xFFFFFFFFFFLL, v497);
      sub_1B19F66A0((uint64_t)v497, (uint64_t)&v570, (unint64_t *)&qword_1ED4B7DE0);
      v23 = v570;
      if (v570)
      {
        v24 = v574;
        v25 = v573;
        v26 = v575;
        v27 = v576;
        v28 = v577;
        v29 = v578;
        v30 = v579;
        v31 = v580;
        v32 = v571 | ((unint64_t)v572 << 32);
      }
      else
      {
        v32 = 0;
        v25 = 0;
        v24 = 0;
        v26 = 0;
        v27 = 0;
        v30 = 0;
        v31 = 0;
        v28 = 0uLL;
        v29 = 0uLL;
      }
      v115 = (float32x4_t)vandq_s8(v114, v116);
      v611[0] = v570;
      v611[1] = v32;
      v611[2] = v25;
      v611[3] = v24;
      v611[4] = v26;
      v611[5] = v27;
      v612 = v28;
      v613 = v29;
      v614 = v30;
      v615 = v31;
      v33 = *(_OWORD *)(v5 + 72);
      v130[0] = *(_OWORD *)(v5 + 56);
      v130[1] = v33;
      v131 = *(_QWORD *)(v5 + 88);
      sub_1B1E8FCE4(v113, (uint64_t)v130, v22, v498);
      sub_1B19F66A0((uint64_t)v498, (uint64_t)&v559, (unint64_t *)&qword_1ED4B7DE0);
      if (v559)
      {
        v34 = v563;
        v35 = v562;
        v36 = v564;
        v37 = v565;
        v38 = v566;
        v39 = v567;
        v40 = v568;
        v41 = v569;
        v42 = v560 | ((unint64_t)v561 << 32);
      }
      else
      {
        v40 = 0;
        v42 = 0;
        v35 = 0;
        v34 = 0;
        v36 = 0;
        v37 = 0;
        v41 = 0;
        v39 = 0uLL;
        v38 = 0uLL;
      }
      v606[0] = v559;
      v606[1] = v42;
      v606[2] = v35;
      v606[3] = v34;
      v606[4] = v36;
      v606[5] = v37;
      v607 = v38;
      v608 = v39;
      v609 = v40;
      v610 = v41;
      if ((int)v40 >= 8)
        LODWORD(v40) = 8;
      if ((int)v30 >= 8)
        v43 = 8;
      else
        v43 = v30;
      if (!v23)
        v43 = 0;
      v112 = v40;
      *(_QWORD *)&v134 = __PAIR64__(v40, v43);
      v44 = *(_OWORD *)(v5 + 112);
      v128[0] = *(_OWORD *)(v5 + 96);
      v128[1] = v44;
      v129 = *(_QWORD *)(v5 + 128);
      sub_1B1E8FCE4(v113, (uint64_t)v128, v22, v499);
      sub_1B19F66A0((uint64_t)v499, (uint64_t)&v548, (unint64_t *)&qword_1ED4B7DE0);
      if (v548)
      {
        v45 = v552;
        v46 = v551;
        v47 = v553;
        v48 = v554;
        v49 = v555;
        v50 = v556;
        v51 = v557;
        v52 = v558;
        v53 = v549 | ((unint64_t)v550 << 32);
        if ((int)v557 >= 8)
          v54 = 8;
        else
          v54 = v557;
      }
      else
      {
        v54 = 0;
        v53 = 0;
        v46 = 0;
        v45 = 0;
        v47 = 0;
        v48 = 0;
        v51 = 0;
        v52 = 0;
        v49 = 0uLL;
        v50 = 0uLL;
      }
      v55.i64[1] = v115.i64[1];
      *(float32x2_t *)v55.f32 = vsub_f32(0, *(float32x2_t *)v115.f32);
      v117 = v55;
      v601[0] = v548;
      v601[1] = v53;
      v601[2] = v46;
      v601[3] = v45;
      v601[4] = v47;
      v601[5] = v48;
      v602 = v49;
      v603 = v50;
      v604 = v51;
      v605 = v52;
      DWORD2(v134) = v54;
      v56 = *(_OWORD *)(v5 + 152);
      v126[0] = *(_OWORD *)(v5 + 136);
      v126[1] = v56;
      v127 = *(_QWORD *)(v5 + 168);
      sub_1B1E8FCE4(v113, (uint64_t)v126, v22, v500);
      sub_1B19F66A0((uint64_t)v500, (uint64_t)&v537, (unint64_t *)&qword_1ED4B7DE0);
      if (v537)
      {
        v57 = v541;
        v58 = v540;
        v59 = v542;
        v60 = v543;
        v61 = v544;
        v62 = v545;
        v63 = v546;
        v64 = v547;
        v65 = v538 | ((unint64_t)v539 << 32);
      }
      else
      {
        v63 = 0;
        v65 = 0;
        v58 = 0;
        v57 = 0;
        v59 = 0;
        v60 = 0;
        v64 = 0;
        v62 = 0uLL;
        v61 = 0uLL;
      }
      v596[0] = v537;
      v596[1] = v65;
      v596[2] = v58;
      v596[3] = v57;
      v596[4] = v59;
      v596[5] = v60;
      v597 = v61;
      v598 = v62;
      v599 = v63;
      v600 = v64;
      if ((int)v63 >= 1)
        v66 = 1;
      else
        v66 = v63;
      v67 = v66;
      HIDWORD(v134) = v66;
      v68 = *(_OWORD *)(v5 + 272);
      v124[0] = *(_OWORD *)(v5 + 256);
      v124[1] = v68;
      v125 = *(_QWORD *)(v5 + 288);
      sub_1B1E8FCE4(v113, (uint64_t)v124, v22, v501);
      sub_1B19F66A0((uint64_t)v501, (uint64_t)&v526, (unint64_t *)&qword_1ED4B7DE0);
      if (v526)
      {
        v69 = v530;
        v70 = v529;
        v71 = v531;
        v72 = v532;
        v73 = v533;
        v74 = v534;
        v75 = v535;
        v76 = v536;
        v77 = v527 | ((unint64_t)v528 << 32);
        if ((int)v535 >= 8)
          v78 = 8;
        else
          v78 = v535;
      }
      else
      {
        v78 = 0;
        v77 = 0;
        v70 = 0;
        v69 = 0;
        v71 = 0;
        v72 = 0;
        v75 = 0;
        v76 = 0;
        v73 = 0uLL;
        v74 = 0uLL;
      }
      v79 = v117;
      v79.f32[2] = 0.0 - v115.f32[2];
      v118 = v79;
      v591[0] = v526;
      v591[1] = v77;
      v591[2] = v70;
      v591[3] = v69;
      v591[4] = v71;
      v591[5] = v72;
      v592 = v73;
      v593 = v74;
      v594 = v75;
      v595 = v76;
      DWORD2(v135) = v78;
      v80 = *(_OWORD *)(v5 + 192);
      v122[0] = *(_OWORD *)(v5 + 176);
      v122[1] = v80;
      v123 = *(_QWORD *)(v5 + 208);
      sub_1B1E8FCE4(v113, (uint64_t)v122, v22, v502);
      sub_1B19F66A0((uint64_t)v502, (uint64_t)&v515, (unint64_t *)&qword_1ED4B7DE0);
      if (v515)
      {
        v81 = v519;
        v82 = v518;
        v83 = v520;
        v84 = v521;
        v85 = v522;
        v86 = v523;
        v87 = v524;
        v88 = v525;
        v89 = v516 | ((unint64_t)v517 << 32);
        if ((int)v524 >= 8)
          v90 = 8;
        else
          v90 = v524;
      }
      else
      {
        v90 = 0;
        v89 = 0;
        v82 = 0;
        v81 = 0;
        v83 = 0;
        v84 = 0;
        v87 = 0;
        v88 = 0;
        v86 = 0uLL;
        v85 = 0uLL;
      }
      v91 = v118;
      v91.i32[3] = 1.0;
      v119 = v91;
      v586[0] = v515;
      v586[1] = v89;
      v586[2] = v82;
      v586[3] = v81;
      v586[4] = v83;
      v586[5] = v84;
      v587 = v85;
      v588 = v86;
      v589 = v87;
      v590 = v88;
      LODWORD(v135) = v90;
      v92 = *(_OWORD *)(v5 + 232);
      v120[0] = *(_OWORD *)(v5 + 216);
      v120[1] = v92;
      v121 = *(_QWORD *)(v5 + 248);
      sub_1B1E8FCE4(v113, (uint64_t)v120, v22, v503);
      sub_1B19F66A0((uint64_t)v503, (uint64_t)&v504, (unint64_t *)&qword_1ED4B7DE0);
      if (v504)
      {
        v93 = v508;
        v94 = v507;
        v95 = v509;
        v96 = v510;
        v97 = v511;
        v98 = v512;
        v99 = v513;
        v100 = v514;
        v101 = v505 | ((unint64_t)v506 << 32);
        if ((int)v513 >= 8)
          v102 = 8;
        else
          v102 = v513;
      }
      else
      {
        v102 = 0;
        v101 = 0;
        v94 = 0;
        v93 = 0;
        v95 = 0;
        v96 = 0;
        v99 = 0;
        v100 = 0;
        v97 = 0uLL;
        v98 = 0uLL;
      }
      v581[0] = v504;
      v581[1] = v101;
      v581[2] = v94;
      v581[3] = v93;
      v581[4] = v95;
      v581[5] = v96;
      v582 = v97;
      v583 = v98;
      v584 = v99;
      v585 = v100;
      DWORD1(v135) = v102;
      v103 = swift_allocObject();
      *(_QWORD *)(v103 + 16) = MEMORY[0x1E0DEE9D8];
      v104 = swift_allocObject();
      *(_QWORD *)&v105 = 0;
      *((float *)&v105 + 2) = 1.0 / ceilf(sqrtf((float)(v112 + 6 * v67 + v102)));
      *((float *)&v105 + 3) = *((float *)&v105 + 2);
      *(_OWORD *)(v104 + 16) = v105;
      sub_1B1D93204((uint64_t)v138, (float32x4_t)xmmword_1B2244DB0, (float32x4_t)xmmword_1B2244DD0, (float32x4_t)xmmword_1B2244D90, v119, (uint64_t)v256, (uint64_t)v611);
      sub_1B1D93980((uint64_t)v256, (float32x4_t)xmmword_1B2244DB0, (float32x4_t)xmmword_1B2244DD0, (float32x4_t)xmmword_1B2244D90, v119, (uint64_t)v371, (uint64_t)v606, v103, v104);
      sub_1B1D957A4((uint64_t)v371, v115, (uint64_t)v379, (uint64_t)v601);
      sub_1B1D95C58((uint64_t)v379, v115, (float32x4_t)xmmword_1B2244DB0, (float32x4_t)xmmword_1B2244DD0, (float32x4_t)xmmword_1B2244D90, v119, (uint64_t)v380, (uint64_t)v596, v103, (float32x4_t *)v104);
      sub_1B1D960E0((uint64_t)v382, (uint64_t)v383, (uint64_t)v591);
      sub_1B1D967A0((uint64_t)v380, v115, (float32x4_t)xmmword_1B2244DB0, (float32x4_t)xmmword_1B2244DD0, (float32x4_t)xmmword_1B2244D90, v119, (uint64_t)v381, (uint64_t)v586);
      v106 = sub_1B1D97110((uint64_t)v381, v115, (float32x4_t)xmmword_1B2244DB0, (float32x4_t)xmmword_1B2244DD0, (float32x4_t)xmmword_1B2244D90, v119, (uint64_t)v382, (uint64_t)v581, v103, v104);
      MEMORY[0x1E0C80A78](v106, v107);
      v108 = *(_QWORD **)(v113 + 176);
      swift_retain();
      sub_1B1F21F8C((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1E637F8B8, v108, (void (*)(uint64_t))sub_1B1D989A4);
      v109 = swift_release();
      MEMORY[0x1E0C80A78](v109, v110);
      v111 = *(_QWORD **)(v113 + 176);
      swift_retain();
      sub_1B1F22244((uint64_t)&type metadata for ShadowState, (uint64_t)&off_1E6373900, v111, (void (*)(uint64_t))sub_1B1D989C8);
      swift_release();
      sub_1B19ED748(v498);
      sub_1B19ED748(v497);
      sub_1B19ED748(v499);
      sub_1B19ED748(v500);
      sub_1B19ED748(v501);
      sub_1B19ED748(v502);
      sub_1B19ED748(v503);
      swift_release();
      swift_release();
      swift_release();
    }
  }
}

uint64_t *sub_1B1D93204(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *result;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float32x4_t *v29;
  uint64_t v30;
  float *v31;
  uint64_t v32;
  int32x4_t v33;
  float32x2_t v34;
  float32x2_t v35;
  float32x4_t v36;
  float v37;
  float v38;
  float v39;
  int32x2_t v40;
  float v41;
  int32x4_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int32x4_t v45;
  float32x4_t v46;
  int v47;
  __int32 v48;
  float *v49;
  float32x2x2_t v50;
  int32x4_t v51;
  float *v52;
  float32x4_t v53;
  int8x16_t v54;
  uint64_t v55;
  float *v56;
  float32x4_t *v57;
  uint64_t v58;
  uint64_t v59;
  int32x4_t v60;
  float32x2_t v61;
  float32x2_t v62;
  float32x4_t v63;
  float v64;
  float v65;
  float v66;
  int32x2_t v67;
  float v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int32x4_t v72;
  float32x4_t v73;
  int v74;
  __int32 v75;
  float *v76;
  float32x2x2_t v77;
  int32x4_t v78;
  float *v79;
  float32x4_t v80;
  int8x16_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  _QWORD *v91;
  __int32 v92;
  __int32 v93;
  __int32 v94;
  unsigned int v95;
  float32x4_t v96;
  uint64_t v101;
  float32x4_t v102;
  float32x4_t v103;
  uint64_t v104;
  float v105;
  float v106;
  float32x4_t v107;
  float32x4_t v108;
  __int32 v109;
  _QWORD v110[8];
  _OWORD v111[2];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  _OWORD v118[2];
  uint64_t v119;
  _BYTE v120[48];
  simd_float4x4 v121;
  simd_float4x4 v122;
  simd_float4x4 v123;
  simd_float4x4 v124;

  sub_1B1A025EC(a7, (uint64_t)v110, (uint64_t (*)(_QWORD))sub_1B1D98E58);
  v82 = (uint64_t *)a7;
  result = (uint64_t *)sub_1B1A025EC(a7, (uint64_t)v111, (uint64_t (*)(_QWORD))sub_1B1D98E58);
  if (*(_QWORD *)&v111[0])
  {
    if (v117 >= 1)
    {
      v88 = v114;
      if (v114)
      {
        v10 = v116[4];
        v90 = *(unsigned __int8 *)(v115 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v118[0] = v111[0];
        v118[1] = v111[1];
        v119 = v112;
        v86 = (uint64_t)(v116 + 6);
        v87 = v113;
        v91 = v116;
        v85 = v116 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v11 = 0;
        v83 = a1 + 96;
        v96 = (float32x4_t)vdupq_n_s32(0x3ABFE803u);
        __asm { FMOV            V0.2S, #1.0 }
        v95 = _D0;
        v84 = v10;
        do
        {
          v89 = v11;
          v17 = (unsigned int *)(v87 + 48 * v11);
          v104 = *v17;
          v18 = v17[2];
          v101 = v17[1];
          v20 = (uint64_t *)*((_QWORD *)v17 + 2);
          v19 = *((_QWORD *)v17 + 3);
          v22 = *((_QWORD *)v17 + 4);
          v21 = *((_QWORD *)v17 + 5);
          if (v90)
          {
            v23 = *(os_unfair_lock_s **)(v21 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v23);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v10);
          sub_1B19F66A0(v86, (uint64_t)v120, &qword_1ED4B7FB0);
          v24 = v91[4];
          v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v91[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
          v91[7] = v25;
          v85[1] = 0;
          v85[2] = 0;
          *v85 = 0;
          swift_release();
          v26 = sub_1B1A12038((uint64_t)&type metadata for DirectionalLight, (uint64_t)&off_1E6387098, v20, v19, v22, (uint64_t)v91);
          v27 = sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v20, v19, v22, (uint64_t)v91);
          v28 = sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v20, v19, v22, (uint64_t)v91);
          v29 = (float32x4_t *)v28;
          if (v20)
          {
            if (v22)
            {
              v30 = v27 + 32;
              v31 = (float *)(v26 + 8);
              v32 = v83 + (v18 << 8);
              do
              {
                if (v18 <= 7)
                {
                  v53 = *(float32x4_t *)v30;
                  v54 = (int8x16_t)vabsq_f32(*(float32x4_t *)v30);
                  if (*(float *)v54.i32 <= 0.00000011921
                    && (v54.i32[0] = vextq_s8(v54, v54, 8uLL).u32[0],
                        *(int32x2_t *)v54.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v54.i8),
                        (v54.i8[4] & 1) != 0)
                    && (v54.i8[0] & 1) != 0)
                  {
                    v107 = 0u;
                  }
                  else
                  {
                    v33 = (int32x4_t)vmulq_f32(v53, v53);
                    v33.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v33, 2), vadd_f32(*(float32x2_t *)v33.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v33.i8, 1))).u32[0];
                    v34 = vrsqrte_f32((float32x2_t)v33.u32[0]);
                    v35 = vmul_f32(v34, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v34, v34)));
                    v36 = vmulq_n_f32(v53, vmul_f32(v35, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v35, v35))).f32[0]);
                    v36.i32[3] = v94;
                    v107 = v36;
                  }
                  v37 = *(v31 - 1);
                  v38 = *v31;
                  v39 = v31[1];
                  v102 = *v29;
                  v105 = *(v31 - 2);
                  v121.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v30 - 32))), a3, *(float32x2_t *)(v30 - 32), 1), a4, *(float32x4_t *)(v30 - 32), 2), a5, *(float32x4_t *)(v30 - 32), 3);
                  v121.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v30 - 16))), a3, *(float32x2_t *)(v30 - 16), 1), a4, *(float32x4_t *)(v30 - 16), 2), a5, *(float32x4_t *)(v30 - 16), 3);
                  v121.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v53.f32[0]), a3, *(float32x2_t *)v53.f32, 1), a4, v53, 2), a5, v53, 3);
                  v121.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v30 + 16))), a3, *(float32x2_t *)(v30 + 16), 1), a4, *(float32x4_t *)(v30 + 16), 2), a5, *(float32x4_t *)(v30 + 16), 3);
                  v122 = __invert_f4(v121);
                  v41 = v38 + 0.0001;
                  if (v38 < -100000.0)
                    v41 = -100000.0;
                  *(float *)v40.i32 = fmaxf(v38, -100000.0);
                  if (v39 > v41)
                    v41 = v39;
                  *(float *)v40.i32 = v41 - *(float *)v40.i32;
                  *(float32x2_t *)v42.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v41), v95), (float32x2_t)vdup_lane_s32(v40, 0));
                  v43.i64[0] = 0;
                  v43.i32[2] = 0;
                  *(float *)&v43.i32[3] = (float)(v37 - v37) / (float)((float)-v37 - v37);
                  v44.i32[0] = 0;
                  v44.i32[2] = 0;
                  *(float *)&v44.i32[1] = 2.0 / (float)(v37 + v37);
                  v42.i64[1] = v42.i64[0];
                  v45 = vzip1q_s32((int32x4_t)v44.u64[0], (int32x4_t)0);
                  v46 = vmulq_f32(vmulq_n_f32(v102, v105), v96);
                  v46.i32[3] = v109;
                  *(float32x4_t *)(v32 - 96) = v46;
                  *(float32x4_t *)(v32 - 80) = v107;
                  *(simd_float4x4 *)(v32 - 64) = v122;
                  v47 = 0;
                  v48 = v44.i32[1];
                  v49 = (float *)v32;
                  vst2_f32(v49, *(float32x2x2_t *)((char *)&v45 - 8));
                  v49 += 4;
                  v44.i32[3] = v43.i32[3];
                  v50 = (float32x2x2_t)vzip2q_s32(v43, v42);
                  *(int32x4_t *)v49 = vzip2q_s32((int32x4_t)0, v45);
                  v51 = vzip2q_s32(v44, (int32x4_t)xmmword_1B2244E20);
                  v52 = (float *)(v32 + 32);
                  vst2_f32(v52, v50);
                  *(int32x4_t *)(v32 + 48) = vzip2q_s32((int32x4_t)v50, v51);
                  *(_QWORD *)(v32 + 72) = 0;
                  *(_QWORD *)(v32 + 80) = 0;
                  *(_QWORD *)(v32 + 64) = 0;
                  *(_OWORD *)(v32 + 96) = 0u;
                  *(_OWORD *)(v32 + 112) = 0u;
                  *(_OWORD *)(v32 + 128) = 0u;
                  *(_OWORD *)(v32 + 144) = 0u;
                }
                v30 += 64;
                v31 += 4;
                ++v29;
                ++v18;
                v32 += 256;
                --v22;
              }
              while (v22);
            }
          }
          else if ((_DWORD)v104 != (_DWORD)v101)
          {
            v55 = v27 + (v104 << 6) + 32;
            v56 = (float *)(v26 + 16 * v104 + 8);
            v57 = (float32x4_t *)(v28 + 16 * v104);
            v58 = v83 + (v18 << 8);
            v59 = v101 - v104;
            do
            {
              if (v18 <= 7)
              {
                v80 = *(float32x4_t *)v55;
                v81 = (int8x16_t)vabsq_f32(*(float32x4_t *)v55);
                if (*(float *)v81.i32 <= 0.00000011921
                  && (v81.i32[0] = vextq_s8(v81, v81, 8uLL).u32[0],
                      *(int32x2_t *)v81.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v81.i8),
                      (v81.i8[4] & 1) != 0)
                  && (v81.i8[0] & 1) != 0)
                {
                  v108 = 0u;
                }
                else
                {
                  v60 = (int32x4_t)vmulq_f32(v80, v80);
                  v60.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v60, 2), vadd_f32(*(float32x2_t *)v60.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v60.i8, 1))).u32[0];
                  v61 = vrsqrte_f32((float32x2_t)v60.u32[0]);
                  v62 = vmul_f32(v61, vrsqrts_f32((float32x2_t)v60.u32[0], vmul_f32(v61, v61)));
                  v63 = vmulq_n_f32(v80, vmul_f32(v62, vrsqrts_f32((float32x2_t)v60.u32[0], vmul_f32(v62, v62))).f32[0]);
                  v63.i32[3] = v92;
                  v108 = v63;
                }
                v64 = *(v56 - 1);
                v65 = *v56;
                v66 = v56[1];
                v103 = *v57;
                v106 = *(v56 - 2);
                v123.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v55 - 32))), a3, *(float32x2_t *)(v55 - 32), 1), a4, *(float32x4_t *)(v55 - 32), 2), a5, *(float32x4_t *)(v55 - 32), 3);
                v123.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v55 - 16))), a3, *(float32x2_t *)(v55 - 16), 1), a4, *(float32x4_t *)(v55 - 16), 2), a5, *(float32x4_t *)(v55 - 16), 3);
                v123.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v80.f32[0]), a3, *(float32x2_t *)v80.f32, 1), a4, v80, 2), a5, v80, 3);
                v123.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v55 + 16))), a3, *(float32x2_t *)(v55 + 16), 1), a4, *(float32x4_t *)(v55 + 16), 2), a5, *(float32x4_t *)(v55 + 16), 3);
                v124 = __invert_f4(v123);
                v68 = v65 + 0.0001;
                if (v65 < -100000.0)
                  v68 = -100000.0;
                *(float *)v67.i32 = fmaxf(v65, -100000.0);
                if (v66 > v68)
                  v68 = v66;
                *(float *)v67.i32 = v68 - *(float *)v67.i32;
                *(float32x2_t *)v69.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v68), v95), (float32x2_t)vdup_lane_s32(v67, 0));
                v70.i64[0] = 0;
                v70.i32[2] = 0;
                *(float *)&v70.i32[3] = (float)(v64 - v64) / (float)((float)-v64 - v64);
                v71.i32[0] = 0;
                v71.i32[2] = 0;
                *(float *)&v71.i32[1] = 2.0 / (float)(v64 + v64);
                v69.i64[1] = v69.i64[0];
                v72 = vzip1q_s32((int32x4_t)v71.u64[0], (int32x4_t)0);
                v73 = vmulq_f32(vmulq_n_f32(v103, v106), v96);
                v73.i32[3] = v93;
                *(float32x4_t *)(v58 - 96) = v73;
                *(float32x4_t *)(v58 - 80) = v108;
                *(simd_float4x4 *)(v58 - 64) = v124;
                v74 = 0;
                v75 = v71.i32[1];
                v76 = (float *)v58;
                vst2_f32(v76, *(float32x2x2_t *)((char *)&v72 - 8));
                v76 += 4;
                v71.i32[3] = v70.i32[3];
                v77 = (float32x2x2_t)vzip2q_s32(v70, v69);
                *(int32x4_t *)v76 = vzip2q_s32((int32x4_t)0, v72);
                v78 = vzip2q_s32(v71, (int32x4_t)xmmword_1B2244E20);
                v79 = (float *)(v58 + 32);
                vst2_f32(v79, v77);
                *(int32x4_t *)(v58 + 48) = vzip2q_s32((int32x4_t)v77, v78);
                *(_QWORD *)(v58 + 72) = 0;
                *(_QWORD *)(v58 + 80) = 0;
                *(_QWORD *)(v58 + 64) = 0;
                *(_OWORD *)(v58 + 96) = 0u;
                *(_OWORD *)(v58 + 112) = 0u;
                *(_OWORD *)(v58 + 128) = 0u;
                *(_OWORD *)(v58 + 144) = 0u;
              }
              v55 += 64;
              v56 += 4;
              ++v57;
              ++v18;
              v58 += 256;
              --v59;
            }
            while (v59);
          }
          v10 = v84;
          sub_1B1F05D48(v91, (unsigned __int16 **)v118, (uint64_t)v120);
          sub_1B1F03804((char *)v21);
          ecs_stack_allocator_pop_snapshot(v84);
          if ((v90 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
          }
          swift_release();
          v11 = v89 + 1;
        }
        while (v89 + 1 != v88);
        return sub_1B19ED748(v82);
      }
    }
  }
  return result;
}

uint64_t *sub_1B1D93980(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *result;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  float32x4_t *v37;
  int32x2_t v38;
  int32x4_t v39;
  int32x4_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int32x4_t v43;
  float32x4_t v44;
  char *v45;
  float32x4_t v46;
  int8x16_t v47;
  int32x4_t v48;
  float32x2_t v49;
  float32x2_t v50;
  float32x4_t v51;
  float v52;
  int v53;
  uint64_t v54;
  float v55;
  char *v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int32x2_t v65;
  int32x4_t v66;
  int32x4_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  float32x4_t v71;
  char *v72;
  float32x4_t v73;
  int8x16_t v74;
  int32x4_t v75;
  float32x2_t v76;
  float32x2_t v77;
  float32x4_t v78;
  uint64_t v79;
  float v80;
  int v81;
  uint64_t v82;
  float v83;
  char *v84;
  char v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  _QWORD *v99;
  __int32 v100;
  uint64_t v101;
  __int32 v102;
  __int32 v103;
  uint64_t v104;
  float32x4_t v105;
  unsigned int v106;
  uint64_t v107;
  __int128 v113;
  __int128 v114;
  int32x4_t v115;
  int32x4_t v116;
  int32x4_t v117;
  int32x4_t v118;
  int32x4_t v119;
  float v120;
  int32x4_t v121;
  float v122;
  __int128 v123;
  __int128 v124;
  simd_float4 v125;
  simd_float4 v126;
  simd_float4 v127;
  simd_float4 v128;
  simd_float4 v129;
  simd_float4 v130;
  simd_float4 v131;
  simd_float4 v132;
  float32x4_t v133;
  float32x4_t v134;
  float v135;
  float32x4_t v136;
  float v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  uint64_t v146;
  simd_float4 v147;
  simd_float4 v148;
  float32x4_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157[8];
  _OWORD v158[2];
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  _OWORD v165[2];
  uint64_t v166;
  _BYTE v167[48];
  simd_float4x4 v168;
  simd_float4x4 v169;
  simd_float4x4 v170;
  simd_float4x4 v171;
  simd_float4x4 v172;
  simd_float4x4 v173;
  simd_float4x4 v174;
  simd_float4x4 v175;

  v10 = v9;
  sub_1B1A025EC(a7, (uint64_t)v157, (uint64_t (*)(_QWORD))sub_1B1D98D60);
  v88 = (uint64_t *)a7;
  result = (uint64_t *)sub_1B1A025EC(a7, (uint64_t)v158, (uint64_t (*)(_QWORD))sub_1B1D98D60);
  if (*(_QWORD *)&v158[0])
  {
    if (v164 >= 1)
    {
      v94 = v161;
      if (v161)
      {
        v15 = v163[4];
        v98 = *(unsigned __int8 *)(v162 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v165[0] = v158[0];
        v165[1] = v158[1];
        v166 = v159;
        v92 = (uint64_t)(v163 + 6);
        v93 = v160;
        v99 = v163;
        v91 = v163 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v16 = 0;
        v89 = a1 + 192;
        __asm { FMOV            V0.2S, #1.0 }
        v106 = _D0;
        v105 = (float32x4_t)vdupq_n_s32(0x3ABFE803u);
        v107 = a8;
        v90 = v15;
        do
        {
          v95 = v16;
          v96 = v10;
          v22 = (unsigned int *)(v93 + 48 * v16);
          v154 = *v22;
          v23 = v22[2];
          v146 = v22[1];
          v24 = (uint64_t *)*((_QWORD *)v22 + 2);
          v25 = *((_QWORD *)v22 + 3);
          v27 = *((_QWORD *)v22 + 4);
          v26 = *((_QWORD *)v22 + 5);
          if (v98)
          {
            v28 = *(os_unfair_lock_s **)(v26 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v28);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v15);
          sub_1B19F66A0(v92, (uint64_t)v167, &qword_1ED4B7FB0);
          v29 = v99[4];
          v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v99[6] = ecs_stack_allocator_allocate(v29, 48 * v30, 8);
          v99[7] = v30;
          v91[1] = 0;
          v91[2] = 0;
          *v91 = 0;
          swift_release();
          v152 = sub_1B1A12038((uint64_t)&type metadata for DirectionalLight, (uint64_t)&off_1E6387098, v24, v25, v27, (uint64_t)v99);
          v31 = sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v24, v25, v27, (uint64_t)v99);
          v150 = sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v24, v25, v27, (uint64_t)v99);
          v97 = v26;
          v32 = sub_1B1A12038((uint64_t)&type metadata for Shadow, (uint64_t)&off_1E63BCD78, v24, v25, v27, (uint64_t)v99);
          v33 = v32;
          if (v24)
          {
            if (v27)
            {
              v34 = v31;
              v35 = 0;
              v36 = (_OWORD *)(v89 + (v23 << 8));
              v37 = (float32x4_t *)(v34 + 32);
              v104 = v32;
              do
              {
                if (v23 <= 7)
                {
                  v46 = *v37;
                  v47 = (int8x16_t)vabsq_f32(*v37);
                  if (*(float *)v47.i32 <= 0.00000011921
                    && (v47.i32[0] = vextq_s8(v47, v47, 8uLL).u32[0],
                        *(int32x2_t *)v47.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v47.i8),
                        (v47.i8[4] & 1) != 0)
                    && (v47.i8[0] & 1) != 0)
                  {
                    v144 = 0u;
                  }
                  else
                  {
                    v48 = (int32x4_t)vmulq_f32(v46, v46);
                    v48.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v48, 2), vadd_f32(*(float32x2_t *)v48.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v48.i8, 1))).u32[0];
                    v49 = vrsqrte_f32((float32x2_t)v48.u32[0]);
                    v50 = vmul_f32(v49, vrsqrts_f32((float32x2_t)v48.u32[0], vmul_f32(v49, v49)));
                    v51 = vmulq_n_f32(v46, vmul_f32(v50, vrsqrts_f32((float32x2_t)v48.u32[0], vmul_f32(v50, v50))).f32[0]);
                    v51.i32[3] = v103;
                    v144 = v51;
                  }
                  v52 = *(float *)(v152 + v35 + 4);
                  v155 = *(_QWORD *)(v152 + v35 + 8);
                  v133 = *(float32x4_t *)(v150 + v35);
                  v135 = *(float *)(v152 + v35);
                  v53 = *(_DWORD *)(v33 + v35);
                  v54 = *(_QWORD *)(v33 + v35 + 8);
                  v138 = v37[-1];
                  v140 = v37[-2];
                  v170.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v140.f32[0]), a3, *(float32x2_t *)v37[-2].f32, 1), a4, v140, 2), a5, v140, 3);
                  v170.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v138.f32[0]), a3, *(float32x2_t *)v138.f32, 1), a4, v138, 2), a5, v138, 3);
                  v147 = *(simd_float4 *)v37;
                  v170.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v46.f32[0]), a3, *(float32x2_t *)v46.f32, 1), a4, v46, 2), a5, v46, 3);
                  v142 = v37[1];
                  v170.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v142.f32[0]), a3, *(float32x2_t *)v37[1].f32, 1), a4, v142, 2), a5, v142, 3);
                  v171 = __invert_f4(v170);
                  v129 = v171.columns[1];
                  v131 = v171.columns[0];
                  v125 = v171.columns[3];
                  v127 = v171.columns[2];
                  v55 = *(float *)&v155 + 0.0001;
                  if (*(float *)&v155 < -100000.0)
                    v55 = -100000.0;
                  if (*((float *)&v155 + 1) > v55)
                    v55 = *((float *)&v155 + 1);
                  v120 = v55;
                  v123 = *(_OWORD *)(a9 + 16);
                  v56 = *(char **)(a8 + 16);
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *(_QWORD *)(a8 + 16) = v56;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    v56 = sub_1B1C68ADC(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
                    *(_QWORD *)(a8 + 16) = v56;
                  }
                  v59 = *((_QWORD *)v56 + 2);
                  v58 = *((_QWORD *)v56 + 3);
                  if (v59 >= v58 >> 1)
                    v56 = sub_1B1C68ADC(v58 > 1, v59 + 1, 1, v56);
                  v38.i32[1] = HIDWORD(v155);
                  *(float *)v38.i32 = v120 - fmaxf(*(float *)&v155, -100000.0);
                  v39.i64[0] = 0;
                  v39.i32[2] = 0;
                  *(float *)&v39.i32[3] = (float)(v52 - v52) / (float)((float)-v52 - v52);
                  v40.i32[0] = 0;
                  v40.i32[2] = 0;
                  *(float *)&v40.i32[1] = 2.0 / (float)(v52 + v52);
                  *(float32x2_t *)v41.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v120), v106), (float32x2_t)vdup_lane_s32(v38, 0));
                  v41.i64[1] = v41.i64[0];
                  v40.i32[3] = v39.i32[3];
                  v42 = vzip2q_s32(v39, v41);
                  v43 = vzip2q_s32(v40, (int32x4_t)xmmword_1B2244E20);
                  v117 = vzip1q_s32(v42, v43);
                  v119 = vzip2q_s32((int32x4_t)v40.u32[1], vzip1q_s32((int32x4_t)v40.u64[0], (int32x4_t)0));
                  v113 = v40.u32[1];
                  v115 = vzip2q_s32(v42, v43);
                  v44 = vmulq_f32(vmulq_n_f32(v133, v135), v105);
                  v168.columns[2] = v147;
                  v44.i32[3] = v149.i32[3];
                  v149 = v44;
                  v168.columns[1] = (simd_float4)v138;
                  v168.columns[0] = (simd_float4)v140;
                  v168.columns[3] = (simd_float4)v142;
                  v169 = __invert_f4(v168);
                  *((_QWORD *)v56 + 2) = v59 + 1;
                  v45 = &v56[160 * v59];
                  *(simd_float4x4 *)(v45 + 32) = v169;
                  *((_OWORD *)v45 + 6) = v113;
                  *((int32x4_t *)v45 + 7) = v119;
                  *((int32x4_t *)v45 + 8) = v117;
                  *((int32x4_t *)v45 + 9) = v115;
                  *((_QWORD *)v45 + 20) = v155;
                  *((_OWORD *)v45 + 11) = v123;
                  a8 = v107;
                  *(_QWORD *)(v107 + 16) = v56;
                  v169.columns[0] = *(simd_float4 *)(v54 + 32);
                  *(v36 - 12) = v149;
                  *(v36 - 11) = v144;
                  *(v36 - 10) = v131;
                  *(v36 - 9) = v129;
                  *(v36 - 8) = v127;
                  *(v36 - 7) = v125;
                  *(v36 - 6) = v113;
                  *(v36 - 5) = v119;
                  *(v36 - 4) = v117;
                  *(v36 - 3) = v115;
                  *(v36 - 2) = v169.columns[0];
                  *((_DWORD *)v36 - 4) = v53;
                  *((_DWORD *)v36 - 3) = 0;
                  v36[2] = 0u;
                  v36[3] = 0u;
                  *v36 = 0u;
                  v36[1] = 0u;
                  v33 = v104;
                }
                v35 += 16;
                ++v23;
                v36 += 16;
                v37 += 4;
                --v27;
              }
              while (v27);
            }
          }
          else if ((_DWORD)v154 != (_DWORD)v146)
          {
            v101 = 16 * v154;
            v60 = (_OWORD *)(v89 + (v23 << 8));
            v61 = v31 + (v154 << 6) + 32;
            v62 = v146 - v154;
            v63 = v152;
            v64 = v150;
            do
            {
              if (v23 <= 7)
              {
                v73 = *(float32x4_t *)v61;
                v74 = (int8x16_t)vabsq_f32(*(float32x4_t *)v61);
                if (*(float *)v74.i32 <= 0.00000011921
                  && (v74.i32[0] = vextq_s8(v74, v74, 8uLL).u32[0],
                      *(int32x2_t *)v74.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v74.i8),
                      (v74.i8[4] & 1) != 0)
                  && (v74.i8[0] & 1) != 0)
                {
                  v145 = 0u;
                }
                else
                {
                  v75 = (int32x4_t)vmulq_f32(v73, v73);
                  v75.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v75, 2), vadd_f32(*(float32x2_t *)v75.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v75.i8, 1))).u32[0];
                  v76 = vrsqrte_f32((float32x2_t)v75.u32[0]);
                  v77 = vmul_f32(v76, vrsqrts_f32((float32x2_t)v75.u32[0], vmul_f32(v76, v76)));
                  v78 = vmulq_n_f32(v73, vmul_f32(v77, vrsqrts_f32((float32x2_t)v75.u32[0], vmul_f32(v77, v77))).f32[0]);
                  v78.i32[3] = v100;
                  v145 = v78;
                }
                v153 = v63;
                v79 = v63 + v101;
                v80 = *(float *)(v79 + 4);
                v156 = *(_QWORD *)(v79 + 8);
                v151 = v64;
                v134 = *(float32x4_t *)(v64 + v101);
                v137 = *(float *)v79;
                v81 = *(_DWORD *)(v33 + v101);
                v82 = *(_QWORD *)(v33 + v101 + 8);
                v139 = *(float32x4_t *)(v61 - 16);
                v141 = *(float32x4_t *)(v61 - 32);
                v174.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v141.f32[0]), a3, *(float32x2_t *)(v61 - 32), 1), a4, v141, 2), a5, v141, 3);
                v174.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v139.f32[0]), a3, *(float32x2_t *)v139.f32, 1), a4, v139, 2), a5, v139, 3);
                v148 = *(simd_float4 *)v61;
                v174.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v73.f32[0]), a3, *(float32x2_t *)v73.f32, 1), a4, v73, 2), a5, v73, 3);
                v143 = *(float32x4_t *)(v61 + 16);
                v174.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v143.f32[0]), a3, *(float32x2_t *)(v61 + 16), 1), a4, v143, 2), a5, v143, 3);
                v175 = __invert_f4(v174);
                v130 = v175.columns[1];
                v132 = v175.columns[0];
                v126 = v175.columns[3];
                v128 = v175.columns[2];
                v83 = *(float *)&v156 + 0.0001;
                if (*(float *)&v156 < -100000.0)
                  v83 = -100000.0;
                if (*((float *)&v156 + 1) > v83)
                  v83 = *((float *)&v156 + 1);
                v122 = v83;
                v124 = *(_OWORD *)(a9 + 16);
                v84 = *(char **)(a8 + 16);
                v85 = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)(a8 + 16) = v84;
                if ((v85 & 1) == 0)
                {
                  v84 = sub_1B1C68ADC(0, *((_QWORD *)v84 + 2) + 1, 1, v84);
                  *(_QWORD *)(a8 + 16) = v84;
                }
                v87 = *((_QWORD *)v84 + 2);
                v86 = *((_QWORD *)v84 + 3);
                if (v87 >= v86 >> 1)
                  v84 = sub_1B1C68ADC(v86 > 1, v87 + 1, 1, v84);
                v65.i32[1] = HIDWORD(v156);
                *(float *)v65.i32 = v122 - fmaxf(*(float *)&v156, -100000.0);
                v66.i64[0] = 0;
                v66.i32[2] = 0;
                *(float *)&v66.i32[3] = (float)(v80 - v80) / (float)((float)-v80 - v80);
                v67.i32[0] = 0;
                v67.i32[2] = 0;
                *(float *)&v67.i32[1] = 2.0 / (float)(v80 + v80);
                *(float32x2_t *)v68.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v122), v106), (float32x2_t)vdup_lane_s32(v65, 0));
                v68.i64[1] = v68.i64[0];
                v67.i32[3] = v66.i32[3];
                v69 = vzip2q_s32(v66, v68);
                v70 = vzip2q_s32(v67, (int32x4_t)xmmword_1B2244E20);
                v118 = vzip1q_s32(v69, v70);
                v121 = vzip2q_s32((int32x4_t)v67.u32[1], vzip1q_s32((int32x4_t)v67.u64[0], (int32x4_t)0));
                v114 = v67.u32[1];
                v116 = vzip2q_s32(v69, v70);
                v71 = vmulq_f32(vmulq_n_f32(v134, v137), v105);
                v71.i32[3] = v102;
                v136 = v71;
                v172.columns[1] = (simd_float4)v139;
                v172.columns[0] = (simd_float4)v141;
                v172.columns[2] = v148;
                v172.columns[3] = (simd_float4)v143;
                v173 = __invert_f4(v172);
                *((_QWORD *)v84 + 2) = v87 + 1;
                v72 = &v84[160 * v87];
                *(simd_float4x4 *)(v72 + 32) = v173;
                *((_OWORD *)v72 + 6) = v114;
                *((int32x4_t *)v72 + 7) = v121;
                *((int32x4_t *)v72 + 8) = v118;
                *((int32x4_t *)v72 + 9) = v116;
                *((_QWORD *)v72 + 20) = v156;
                *((_OWORD *)v72 + 11) = v124;
                a8 = v107;
                *(_QWORD *)(v107 + 16) = v84;
                v173.columns[0] = *(simd_float4 *)(v82 + 32);
                *(v60 - 12) = v136;
                *(v60 - 11) = v145;
                *(v60 - 10) = v132;
                *(v60 - 9) = v130;
                *(v60 - 8) = v128;
                *(v60 - 7) = v126;
                *(v60 - 6) = v114;
                *(v60 - 5) = v121;
                *(v60 - 4) = v118;
                *(v60 - 3) = v116;
                *(v60 - 2) = v173.columns[0];
                *((_DWORD *)v60 - 4) = v81;
                *((_DWORD *)v60 - 3) = 0;
                v60[2] = 0u;
                v60[3] = 0u;
                v102 = v136.i32[3];
                *v60 = 0u;
                v60[1] = 0u;
                v63 = v153;
                v64 = v151;
              }
              v33 += 16;
              v63 += 16;
              ++v23;
              v60 += 16;
              v61 += 64;
              v64 += 16;
              --v62;
            }
            while (v62);
          }
          v15 = v90;
          sub_1B1F05D48(v99, (unsigned __int16 **)v165, (uint64_t)v167);
          v10 = v96;
          sub_1B1F03804((char *)v97);
          ecs_stack_allocator_pop_snapshot(v90);
          if ((v98 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 376));
          }
          swift_release();
          v16 = v95 + 1;
        }
        while (v95 + 1 != v94);
        return sub_1B19ED748(v88);
      }
    }
  }
  return result;
}

void *sub_1B1D94378@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, float32x4_t *a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>, float a8@<S2>, float a9@<S3>, float32x4_t a10@<Q4>, float32x4_t a11@<Q5>, float32x4_t a12@<Q6>, float32x4_t a13@<Q7>, float32x4_t a14, float32x4_t a15, float32x4_t a16, float32x4_t a17, float32x4_t a18, float32x4_t a19)
{
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  int32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  int32x4_t v47;
  float32x2_t v48;
  float32x2_t v49;
  int32x4_t v50;
  float v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  char v59;
  int v60;
  int v61;
  float v62;
  float32x2_t v63;
  float32x2_t v64;
  float32x2_t v65;
  float32x2_t v66;
  float32x2_t v67;
  uint64_t v68;
  int8x16_t v69;
  float32x2_t v70;
  float32x2_t v71;
  float32_t v72;
  float32x2_t v73;
  float32x2_t v74;
  float32x2_t v75;
  int32x2_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  int32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t v88;
  int32x4_t v89;
  float32x2_t v90;
  float32x2_t v91;
  int32x4_t v92;
  float v93;
  float32x4_t v94;
  float v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float v100;
  float32x2_t v101;
  float32x2_t v102;
  float32x2_t v103;
  uint64_t v104;
  int8x16_t v105;
  float32x2_t v106;
  float32x2_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  int32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  int32x4_t v120;
  float32x2_t v121;
  float32x2_t v122;
  int32x4_t v123;
  float v124;
  float32x4_t v125;
  float32x4_t v126;
  float32x4_t v127;
  float32x4_t v128;
  float v129;
  float32x2_t v130;
  float32x2_t v131;
  float32x2_t v132;
  float32x2_t v133;
  float32x2_t v134;
  uint64_t v135;
  int8x16_t v136;
  float32x2_t v137;
  float32x2_t v138;
  float32_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  float32x4_t v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  int32x4_t v152;
  float32x4_t v153;
  float32x4_t v154;
  float32x4_t v155;
  int32x4_t v156;
  float32x2_t v157;
  float32x2_t v158;
  int32x4_t v159;
  float v160;
  float32x4_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float v165;
  float32x2_t v166;
  float32x2_t v167;
  float32x2_t v168;
  float32x2_t v169;
  float32x2_t v170;
  uint64_t v171;
  int8x16_t v172;
  float32x2_t v173;
  float32x2_t v174;
  float32_t v175;
  float32x4_t v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x4_t v184;
  float32x4_t v185;
  float32x4_t v186;
  float32x4_t v187;
  int32x4_t v188;
  float32x4_t v189;
  float32x4_t v190;
  float32x4_t v191;
  int32x4_t v192;
  float32x2_t v193;
  float32x2_t v194;
  int32x4_t v195;
  float v196;
  float32x4_t v197;
  float32x4_t v198;
  float32x4_t v199;
  float32x4_t v200;
  float v201;
  float32x2_t v202;
  float32x2_t v203;
  float32x2_t v204;
  float32x2_t v205;
  float32x2_t v206;
  uint64_t v207;
  int8x16_t v208;
  float32x2_t v209;
  float32x2_t v210;
  float32_t v211;
  float32x4_t v212;
  float32x4_t v213;
  float32x4_t v214;
  float32x4_t v215;
  float32x4_t v216;
  float32x4_t v217;
  float32x4_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  float32x4_t v222;
  float32x4_t v223;
  int32x4_t v224;
  float32x4_t v225;
  float32x4_t v226;
  float32x4_t v227;
  int32x4_t v228;
  float32x2_t v229;
  float32x2_t v230;
  int32x4_t v231;
  float v232;
  float32x4_t v233;
  float v234;
  float32x4_t v235;
  float32x4_t v236;
  float32x4_t v237;
  float32x4_t v238;
  float v239;
  float32x2_t v240;
  float32x2_t v241;
  float32x2_t v242;
  float32x2_t v243;
  float32x2_t v244;
  uint64_t v245;
  int8x16_t v246;
  float32x2_t v247;
  float32x2_t v248;
  float32_t v249;
  _BYTE *v250;
  uint64_t i;
  float32x4_t v252;
  float32x4_t v253;
  float32x4_t v254;
  float32x4_t v255;
  uint64_t v256;
  float32x4_t v257;
  uint64_t v258;
  BOOL v259;
  char *v260;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v262;
  unint64_t v263;
  float32x4_t v264;
  float32x4_t v265;
  float32x4_t v266;
  float v267;
  float v268;
  float v269;
  float32_t v270;
  float32x4_t v271;
  float32x4_t v272;
  float32x4_t v273;
  char *v274;
  float32x4_t v275;
  float v276;
  float32x4_t v277;
  void *result;
  float32x2_t v279;
  float32x2_t v280;
  float32x2_t v281;
  float32x2_t v282;
  float32x2_t v283;
  float32x2_t v284;
  float32x2_t v285;
  float32x2_t v286;
  float32x2_t v287;
  float32x2_t v288;
  float32x2_t v289;
  float32x2_t v290;
  float32x2_t v291;
  float32x2_t v292;
  float32x2_t v293;
  float32x2_t v294;
  uint64_t v295;
  int v296;
  __int128 v298;
  __int128 v300;
  __int128 v302;
  float32x4_t v303;
  __int128 v305;
  float32x4_t v306;
  __int128 v308;
  unint64_t v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v315;
  simd_float4 v316;
  __int128 v318;
  float32x4_t v319;
  float32x4_t v320;
  float32x4_t v321;
  float32x4_t v322;
  float32x4_t v323;
  float32x4_t v324;
  float32x4_t v325;
  float32x4_t v326;
  _BYTE v327[448];
  _OWORD v328[6];
  float v329;
  _OWORD v330[2];
  uint64_t v331;
  simd_float4x4 v332;
  simd_float4x4 v333;
  simd_float4x4 v334;

  v331 = *MEMORY[0x1E0C80C00];
  sub_1B1C31954(1, 1, 1.5708, 1.0, a8, a9, 0, 0, 1);
  v312 = v26;
  v313 = v25;
  v310 = v28;
  v311 = v27;
  v322 = vsubq_f32(a13, a15);
  v319 = vmulq_n_f32(a14, a6 * 0.00011651);
  bzero(v327, 0x224uLL);
  memset(v330, 0, 21);
  v325 = v319;
  v326 = v322;
  v29 = 1.0 / (float)(a7 * a7);
  v329 = v29;
  if (!a2)
  {
    v59 = 0;
    v60 = 0;
    v61 = 0;
    v315 = 0u;
    v318 = 0u;
    v305 = 0u;
    v308 = 0u;
    v300 = 0u;
    v302 = 0u;
    v312 = 0u;
    v313 = 0u;
    v310 = 0u;
    v311 = 0u;
    v298 = 0u;
    goto LABEL_72;
  }
  sub_1B1791524(0, (unint64_t *)&unk_1EEF5AB30, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v30 = swift_allocObject();
  v31 = v30;
  *(_OWORD *)(v30 + 16) = xmmword_1B2280B20;
  v32 = vrsqrteq_f32((float32x4_t)xmmword_1B2244F70);
  v33 = vmulq_f32(v32, vrsqrtsq_f32((float32x4_t)xmmword_1B2244F70, vmulq_f32(v32, v32)));
  v34 = vmulq_f32(v33, vrsqrtsq_f32((float32x4_t)xmmword_1B2244F70, vmulq_f32(v33, v33)));
  v35 = vmulq_f32(v34, (float32x4_t)xmmword_1B2244DC0);
  v36 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v35, (int32x4_t)v35), (int8x16_t)v35, 0xCuLL);
  v37 = vmlaq_f32(vmulq_f32(v36, (float32x4_t)xmmword_1B2244F00), (float32x4_t)xmmword_1B2244D90, v35);
  v38 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v37, (int32x4_t)v37), (int8x16_t)v37, 0xCuLL);
  v39 = vmulq_f32(v37, v37);
  v39.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v39, 2), v39)).u64[0];
  v40 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 0);
  v40.i32[3] = 0;
  v41 = vrsqrteq_f32(v40);
  v42 = vmulq_f32(v41, vrsqrtsq_f32(v40, vmulq_f32(v41, v41)));
  v43 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v39.f32[0] != 0.0)), 0x1FuLL));
  v43.i32[3] = 0;
  v44 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v43), (int8x16_t)vmulq_f32(vmulq_f32(v42, vrsqrtsq_f32(v40, vmulq_f32(v42, v42))), v38), vextq_s8(vextq_s8((int8x16_t)v35, (int8x16_t)v35, 0xCuLL), (int8x16_t)v35, 8uLL));
  v45 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v44, (int32x4_t)v44), (int8x16_t)v44, 0xCuLL), vnegq_f32(v35)), v44, v36);
  v46 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45), (int8x16_t)v45, 0xCuLL);
  v47 = (int32x4_t)vmulq_f32(v45, v45);
  v47.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v47.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v47, 2), *(float32x2_t *)v47.i8)).u32[0];
  v48 = vrsqrte_f32((float32x2_t)v47.u32[0]);
  v49 = vmul_f32(v48, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v48, v48)));
  v50 = (int32x4_t)vmulq_n_f32(v46, vmul_f32(v49, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v49, v49))).f32[0]);
  v51 = v35.f32[2] + (float)(v44.f32[0] + *(float *)&v50.i32[1]);
  if (v51 > 0.0)
  {
    v52 = (float32x4_t)vzip2q_s32(v50, vuzp1q_s32(v50, (int32x4_t)v35));
    v52.i32[2] = v44.i32[1];
    v53 = (float32x4_t)vuzp2q_s32((int32x4_t)v35, vzip1q_s32((int32x4_t)v35, v50));
    v53.i32[1] = v44.i32[2];
    v55 = vsubq_f32(v52, v53);
    v52.i32[3] = sqrtf(v51 + 1.0);
    v53.i32[3] = v52.i32[3];
    v54 = vmulq_f32(v52, v53);
    v55.i32[3] = v54.i32[3];
    v54.f32[0] = 0.5 / v52.f32[3];
    v56 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v54.f32, 0);
    v58 = a10;
    v57 = a11;
    goto LABEL_12;
  }
  v58 = a10;
  v57 = a11;
  if (v44.f32[0] >= v35.f32[2] && v44.f32[0] >= *(float *)&v50.i32[1])
  {
    v62 = sqrtf((float)((float)(v44.f32[0] + 1.0) - *(float *)&v50.i32[1]) - v35.f32[2]);
    v63 = (float32x2_t)vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL).u64[0];
    v64 = (float32x2_t)__PAIR64__(v35.u32[1], v63.u32[0]);
    v65 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v50.i8, 0);
    v66 = (float32x2_t)__PAIR64__(v65.u32[1], LODWORD(v62));
    v67 = vadd_f32(*(float32x2_t *)v44.f32, v65);
    v56.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v44.u32[1], LODWORD(v62)), v66).u32[0];
    v56.i32[1] = v67.i32[1];
    v35.i32[1] = v50.i32[2];
    LODWORD(v68) = vadd_f32(*(float32x2_t *)v35.f32, v63).u32[0];
    *(float32x2_t *)v35.f32 = vsub_f32(*(float32x2_t *)v35.f32, v64);
    HIDWORD(v68) = v35.i32[1];
    v56.i64[1] = v68;
LABEL_10:
    v35.f32[0] = 0.5 / v62;
    v55 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v35.f32, 0);
    goto LABEL_12;
  }
  if (*(float *)&v50.i32[1] > v35.f32[2])
  {
    v62 = sqrtf((float)((float)(*(float *)&v50.i32[1] + 1.0) - v44.f32[0]) - v35.f32[2]);
    v69 = (int8x16_t)v35;
    *(float *)v69.i32 = v62;
    v70 = (float32x2_t)vdup_laneq_s32(v50, 2);
    *(float *)v50.i32 = v44.f32[1] + *(float *)v50.i32;
    v71 = vadd_f32(*(float32x2_t *)v35.f32, v70);
    v70.f32[0] = v62;
    v69.i32[0] = vmul_f32(*(float32x2_t *)v69.i8, v70).u32[0];
    v69.i32[1] = v71.i32[1];
    v72 = v35.f32[0] - v44.f32[2];
    v56 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v50, (int8x16_t)v50, 4uLL), v69, 0xCuLL);
    v56.f32[3] = v72;
    goto LABEL_10;
  }
  v73.i32[0] = vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL).u32[0];
  v73.i32[1] = v50.i32[2];
  *(float32x2_t *)v35.f32 = vadd_f32(*(float32x2_t *)v35.f32, v73);
  v74 = (float32x2_t)__PAIR64__(v44.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v35.f32[2] + 1.0) - v44.f32[0]) - *(float *)&v50.i32[1])));
  v75 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v50.i8, 0);
  v76 = (int32x2_t)vsub_f32(*(float32x2_t *)v44.f32, v75);
  v75.i32[0] = v74.i32[0];
  v75.i32[0] = vmul_f32(v74, v75).u32[0];
  v75.i32[1] = v76.i32[1];
  *(float32x2_t *)&v55.u32[2] = v75;
  *(float *)v76.i32 = 0.5 / v74.f32[0];
  v56 = (float32x4_t)vdupq_lane_s32(v76, 0);
LABEL_12:
  *(float32x4_t *)(v30 + 32) = vmulq_f32(v55, v56);
  v77 = vmulq_f32(v34, (float32x4_t)xmmword_1B2244DB0);
  v78 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v77, (int32x4_t)v77), (int8x16_t)v77, 0xCuLL);
  v79 = vmlaq_f32(vmulq_f32(v78, (float32x4_t)xmmword_1B2244F00), (float32x4_t)xmmword_1B2244D90, v77);
  v80 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v79, (int32x4_t)v79), (int8x16_t)v79, 0xCuLL);
  v81 = vmulq_f32(v79, v79);
  v81.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v81.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v81, 2), v81)).u64[0];
  v82 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v81.f32, 0);
  v82.i32[3] = 0;
  v83 = vrsqrteq_f32(v82);
  v84 = vmulq_f32(v83, vrsqrtsq_f32(v82, vmulq_f32(v83, v83)));
  v85 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v81.f32[0] != 0.0)), 0x1FuLL));
  v85.i32[3] = 0;
  v86 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v85), (int8x16_t)vmulq_f32(v80, vmulq_f32(v84, vrsqrtsq_f32(v82, vmulq_f32(v84, v84)))), vextq_s8(vextq_s8((int8x16_t)v77, (int8x16_t)v77, 0xCuLL), (int8x16_t)v77, 8uLL));
  v87 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v86, (int32x4_t)v86), (int8x16_t)v86, 0xCuLL), vnegq_f32(v77)), v86, v78);
  v88 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v87, (int32x4_t)v87), (int8x16_t)v87, 0xCuLL);
  v89 = (int32x4_t)vmulq_f32(v87, v87);
  v89.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v89.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v89, 2), *(float32x2_t *)v89.i8)).u32[0];
  v90 = vrsqrte_f32((float32x2_t)v89.u32[0]);
  v91 = vmul_f32(v90, vrsqrts_f32((float32x2_t)v89.u32[0], vmul_f32(v90, v90)));
  v92 = (int32x4_t)vmulq_n_f32(v88, vmul_f32(v91, vrsqrts_f32((float32x2_t)v89.u32[0], vmul_f32(v91, v91))).f32[0]);
  v93 = v77.f32[2] + (float)(v86.f32[0] + *(float *)&v92.i32[1]);
  if (v93 > 0.0)
  {
    v94 = (float32x4_t)vzip2q_s32(v92, vuzp1q_s32(v92, (int32x4_t)v77));
    v94.i32[2] = v86.i32[1];
    v95 = sqrtf(v93 + 1.0);
    v96 = (float32x4_t)vuzp2q_s32((int32x4_t)v77, vzip1q_s32((int32x4_t)v77, v92));
    v96.i32[1] = v86.i32[2];
    v98 = vsubq_f32(v94, v96);
    v94.f32[3] = v95;
    v96.f32[3] = v95;
    v97 = vmulq_f32(v94, v96);
    v98.i32[3] = v97.i32[3];
LABEL_14:
    v97.f32[0] = 0.5 / v95;
    v99 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v97.f32, 0);
    goto LABEL_21;
  }
  if (v86.f32[0] < v77.f32[2] || v86.f32[0] < *(float *)&v92.i32[1])
  {
    if (*(float *)&v92.i32[1] <= v77.f32[2])
    {
      v95 = sqrtf((float)((float)(v77.f32[2] + 1.0) - v86.f32[0]) - *(float *)&v92.i32[1]);
      v279.i32[0] = vextq_s8((int8x16_t)v86, (int8x16_t)v86, 8uLL).u32[0];
      v279.i32[1] = v92.i32[2];
      *(float32x2_t *)v98.f32 = vadd_f32(*(float32x2_t *)v77.f32, v279);
      v280 = (float32x2_t)__PAIR64__(v86.u32[1], LODWORD(v95));
      v281 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v92.i8, 0);
      *(float32x2_t *)v97.f32 = vsub_f32(*(float32x2_t *)v86.f32, v281);
      v281.f32[0] = v95;
      v281.i32[0] = vmul_f32(v280, v281).u32[0];
      v281.i32[1] = v97.i32[1];
      *(float32x2_t *)&v98.u32[2] = v281;
      goto LABEL_14;
    }
    v100 = sqrtf((float)((float)(*(float *)&v92.i32[1] + 1.0) - v86.f32[0]) - v77.f32[2]);
    v105 = (int8x16_t)v77;
    *(float *)v105.i32 = v100;
    v106 = (float32x2_t)vdup_laneq_s32(v92, 2);
    *(float *)v92.i32 = v86.f32[1] + *(float *)v92.i32;
    v107 = vadd_f32(*(float32x2_t *)v77.f32, v106);
    v106.f32[0] = v100;
    v105.i32[0] = vmul_f32(*(float32x2_t *)v105.i8, v106).u32[0];
    v105.i32[1] = v107.i32[1];
    v99 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v92, (int8x16_t)v92, 4uLL), v105, 0xCuLL);
    v99.f32[3] = v77.f32[0] - v86.f32[2];
  }
  else
  {
    v100 = sqrtf((float)((float)(v86.f32[0] + 1.0) - *(float *)&v92.i32[1]) - v77.f32[2]);
    v101 = (float32x2_t)vextq_s8((int8x16_t)v86, (int8x16_t)v86, 8uLL).u64[0];
    v102 = (float32x2_t)__PAIR64__(v77.u32[1], v101.u32[0]);
    v103 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v92.i8, 0);
    v99.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v86.u32[1], LODWORD(v100)), (float32x2_t)__PAIR64__(v103.u32[1], LODWORD(v100))).u32[0];
    v99.i32[1] = vadd_f32(*(float32x2_t *)&v86, v103).i32[1];
    v77.i32[1] = v92.i32[2];
    LODWORD(v104) = vadd_f32(*(float32x2_t *)v77.f32, v101).u32[0];
    *(float32x2_t *)v77.f32 = vsub_f32(*(float32x2_t *)v77.f32, v102);
    HIDWORD(v104) = v77.i32[1];
    v99.i64[1] = v104;
  }
  v77.f32[0] = 0.5 / v100;
  v98 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v77.f32, 0);
LABEL_21:
  *(float32x4_t *)(v30 + 48) = vmulq_f32(v98, v99);
  v108 = vmulq_f32(v34, (float32x4_t)xmmword_1B2244DE0);
  v109 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v108, (int32x4_t)v108), (int8x16_t)v108, 0xCuLL);
  v110 = vmlaq_f32(vmulq_f32(v109, (float32x4_t)xmmword_1B2244F20), (float32x4_t)xmmword_1B2244DB0, v108);
  v111 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v110, (int32x4_t)v110), (int8x16_t)v110, 0xCuLL);
  v112 = vmulq_f32(v110, v110);
  v112.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v112.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v112, 2), v112)).u64[0];
  v113 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v112.f32, 0);
  v113.i32[3] = 0;
  v114 = vrsqrteq_f32(v113);
  v115 = vmulq_f32(v114, vrsqrtsq_f32(v113, vmulq_f32(v114, v114)));
  v116 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v112.f32[0] != 0.0)), 0x1FuLL));
  v116.i32[3] = 0;
  v117 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v116), (int8x16_t)vmulq_f32(v111, vmulq_f32(v115, vrsqrtsq_f32(v113, vmulq_f32(v115, v115)))), vextq_s8(vextq_s8((int8x16_t)v108, (int8x16_t)v108, 0xCuLL), (int8x16_t)v108, 8uLL));
  v118 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v117, (int32x4_t)v117), (int8x16_t)v117, 0xCuLL), vnegq_f32(v108)), v117, v109);
  v119 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v118, (int32x4_t)v118), (int8x16_t)v118, 0xCuLL);
  v120 = (int32x4_t)vmulq_f32(v118, v118);
  v120.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v120.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v120, 2), *(float32x2_t *)v120.i8)).u32[0];
  v121 = vrsqrte_f32((float32x2_t)v120.u32[0]);
  v122 = vmul_f32(v121, vrsqrts_f32((float32x2_t)v120.u32[0], vmul_f32(v121, v121)));
  v123 = (int32x4_t)vmulq_n_f32(v119, vmul_f32(v122, vrsqrts_f32((float32x2_t)v120.u32[0], vmul_f32(v122, v122))).f32[0]);
  v124 = v108.f32[2] + (float)(v117.f32[0] + *(float *)&v123.i32[1]);
  if (v124 > 0.0)
  {
    v125 = (float32x4_t)vzip2q_s32(v123, vuzp1q_s32(v123, (int32x4_t)v108));
    v125.i32[2] = v117.i32[1];
    v126 = (float32x4_t)vuzp2q_s32((int32x4_t)v108, vzip1q_s32((int32x4_t)v108, v123));
    v126.i32[1] = v117.i32[2];
    v127 = vsubq_f32(v125, v126);
    v125.i32[3] = sqrtf(v124 + 1.0);
    v126.i32[3] = v125.i32[3];
    v117 = vmulq_f32(v125, v126);
    v127.i32[3] = v117.i32[3];
    v117.f32[0] = 0.5 / v125.f32[3];
LABEL_23:
    v128 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v117.f32, 0);
    goto LABEL_30;
  }
  if (v117.f32[0] < v108.f32[2] || v117.f32[0] < *(float *)&v123.i32[1])
  {
    if (*(float *)&v123.i32[1] <= v108.f32[2])
    {
      v282.i32[0] = vextq_s8((int8x16_t)v117, (int8x16_t)v117, 8uLL).u32[0];
      v282.i32[1] = v123.i32[2];
      *(float32x2_t *)v127.f32 = vadd_f32(*(float32x2_t *)v108.f32, v282);
      v283 = (float32x2_t)__PAIR64__(v117.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v108.f32[2] + 1.0) - v117.f32[0]) - *(float *)&v123.i32[1])));
      v284 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v123.i8, 0);
      *(float32x2_t *)v117.f32 = vsub_f32(*(float32x2_t *)v117.f32, v284);
      v284.i32[0] = v283.i32[0];
      v284.i32[0] = vmul_f32(v283, v284).u32[0];
      v284.i32[1] = v117.i32[1];
      *(float32x2_t *)&v127.u32[2] = v284;
      v117.f32[0] = 0.5 / v283.f32[0];
      goto LABEL_23;
    }
    v129 = sqrtf((float)((float)(*(float *)&v123.i32[1] + 1.0) - v117.f32[0]) - v108.f32[2]);
    v136 = (int8x16_t)v108;
    *(float *)v136.i32 = v129;
    v137 = (float32x2_t)vdup_laneq_s32(v123, 2);
    *(float *)v123.i32 = v117.f32[1] + *(float *)v123.i32;
    v138 = vadd_f32(*(float32x2_t *)v108.f32, v137);
    v137.f32[0] = v129;
    v136.i32[0] = vmul_f32(*(float32x2_t *)v136.i8, v137).u32[0];
    v136.i32[1] = v138.i32[1];
    v139 = v108.f32[0] - v117.f32[2];
    v128 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v123, (int8x16_t)v123, 4uLL), v136, 0xCuLL);
    v128.f32[3] = v139;
  }
  else
  {
    v129 = sqrtf((float)((float)(v117.f32[0] + 1.0) - *(float *)&v123.i32[1]) - v108.f32[2]);
    v130 = (float32x2_t)vextq_s8((int8x16_t)v117, (int8x16_t)v117, 8uLL).u64[0];
    v131 = (float32x2_t)__PAIR64__(v108.u32[1], v130.u32[0]);
    v132 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v123.i8, 0);
    v133 = (float32x2_t)__PAIR64__(v132.u32[1], LODWORD(v129));
    v134 = vadd_f32(*(float32x2_t *)v117.f32, v132);
    v128.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v117.u32[1], LODWORD(v129)), v133).u32[0];
    v128.i32[1] = v134.i32[1];
    v108.i32[1] = v123.i32[2];
    LODWORD(v135) = vadd_f32(*(float32x2_t *)v108.f32, v130).u32[0];
    *(float32x2_t *)v108.f32 = vsub_f32(*(float32x2_t *)v108.f32, v131);
    HIDWORD(v135) = v108.i32[1];
    v128.i64[1] = v135;
  }
  v108.f32[0] = 0.5 / v129;
  v127 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v108.f32, 0);
LABEL_30:
  v140 = vmulq_n_f32(a16, v58.f32[0]);
  v141 = vmulq_n_f32(a16, v57.f32[0]);
  v142 = vmulq_n_f32(a16, a12.f32[0]);
  v143 = vmulq_n_f32(a16, a13.f32[0]);
  *(float32x4_t *)(v30 + 64) = vmulq_f32(v127, v128);
  v144 = vmulq_f32(v34, (float32x4_t)xmmword_1B2244DD0);
  v145 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v144, (int32x4_t)v144), (int8x16_t)v144, 0xCuLL);
  v146 = vmlaq_f32(vmulq_f32(v145, (float32x4_t)xmmword_1B2294050), (float32x4_t)xmmword_1B2244DC0, v144);
  v147 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v146, (int32x4_t)v146), (int8x16_t)v146, 0xCuLL);
  v148 = vmulq_f32(v146, v146);
  v148.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v148.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v148, 2), v148)).u64[0];
  v149 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v148.f32, 0);
  v149.i32[3] = 0;
  v150 = vrsqrteq_f32(v149);
  v151 = vmulq_f32(v150, vrsqrtsq_f32(v149, vmulq_f32(v150, v150)));
  v152 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v148.f32[0] != 0.0)), 0x1FuLL));
  v152.i32[3] = 0;
  v153 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v152), (int8x16_t)vmulq_f32(v147, vmulq_f32(v151, vrsqrtsq_f32(v149, vmulq_f32(v151, v151)))), vextq_s8(vextq_s8((int8x16_t)v144, (int8x16_t)v144, 0xCuLL), (int8x16_t)v144, 8uLL));
  v154 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v153, (int32x4_t)v153), (int8x16_t)v153, 0xCuLL), vnegq_f32(v144)), v153, v145);
  v155 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v154, (int32x4_t)v154), (int8x16_t)v154, 0xCuLL);
  v156 = (int32x4_t)vmulq_f32(v154, v154);
  v156.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v156.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v156, 2), *(float32x2_t *)v156.i8)).u32[0];
  v157 = vrsqrte_f32((float32x2_t)v156.u32[0]);
  v158 = vmul_f32(v157, vrsqrts_f32((float32x2_t)v156.u32[0], vmul_f32(v157, v157)));
  v159 = (int32x4_t)vmulq_n_f32(v155, vmul_f32(v158, vrsqrts_f32((float32x2_t)v156.u32[0], vmul_f32(v158, v158))).f32[0]);
  v160 = v144.f32[2] + (float)(v153.f32[0] + *(float *)&v159.i32[1]);
  if (v160 > 0.0)
  {
    v161 = (float32x4_t)vzip2q_s32(v159, vuzp1q_s32(v159, (int32x4_t)v144));
    v161.i32[2] = v153.i32[1];
    v162 = (float32x4_t)vuzp2q_s32((int32x4_t)v144, vzip1q_s32((int32x4_t)v144, v159));
    v162.i32[1] = v153.i32[2];
    v163 = vsubq_f32(v161, v162);
    v161.i32[3] = sqrtf(v160 + 1.0);
    v162.i32[3] = v161.i32[3];
    v153 = vmulq_f32(v161, v162);
    v163.i32[3] = v153.i32[3];
    v153.f32[0] = 0.5 / v161.f32[3];
LABEL_32:
    v164 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v153.f32, 0);
    goto LABEL_39;
  }
  if (v153.f32[0] < v144.f32[2] || v153.f32[0] < *(float *)&v159.i32[1])
  {
    if (*(float *)&v159.i32[1] <= v144.f32[2])
    {
      v285.i32[0] = vextq_s8((int8x16_t)v153, (int8x16_t)v153, 8uLL).u32[0];
      v285.i32[1] = v159.i32[2];
      *(float32x2_t *)v163.f32 = vadd_f32(*(float32x2_t *)v144.f32, v285);
      v286 = (float32x2_t)__PAIR64__(v153.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v144.f32[2] + 1.0) - v153.f32[0]) - *(float *)&v159.i32[1])));
      v287 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v159.i8, 0);
      *(float32x2_t *)v153.f32 = vsub_f32(*(float32x2_t *)v153.f32, v287);
      v287.i32[0] = v286.i32[0];
      v287.i32[0] = vmul_f32(v286, v287).u32[0];
      v287.i32[1] = v153.i32[1];
      *(float32x2_t *)&v163.u32[2] = v287;
      v153.f32[0] = 0.5 / v286.f32[0];
      goto LABEL_32;
    }
    v165 = sqrtf((float)((float)(*(float *)&v159.i32[1] + 1.0) - v153.f32[0]) - v144.f32[2]);
    v172 = (int8x16_t)v144;
    *(float *)v172.i32 = v165;
    v173 = (float32x2_t)vdup_laneq_s32(v159, 2);
    *(float *)v159.i32 = v153.f32[1] + *(float *)v159.i32;
    v174 = vadd_f32(*(float32x2_t *)v144.f32, v173);
    v173.f32[0] = v165;
    v172.i32[0] = vmul_f32(*(float32x2_t *)v172.i8, v173).u32[0];
    v172.i32[1] = v174.i32[1];
    v175 = v144.f32[0] - v153.f32[2];
    v164 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v159, (int8x16_t)v159, 4uLL), v172, 0xCuLL);
    v164.f32[3] = v175;
  }
  else
  {
    v165 = sqrtf((float)((float)(v153.f32[0] + 1.0) - *(float *)&v159.i32[1]) - v144.f32[2]);
    v166 = (float32x2_t)vextq_s8((int8x16_t)v153, (int8x16_t)v153, 8uLL).u64[0];
    v167 = (float32x2_t)__PAIR64__(v144.u32[1], v166.u32[0]);
    v168 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v159.i8, 0);
    v169 = (float32x2_t)__PAIR64__(v168.u32[1], LODWORD(v165));
    v170 = vadd_f32(*(float32x2_t *)v153.f32, v168);
    v164.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v153.u32[1], LODWORD(v165)), v169).u32[0];
    v164.i32[1] = v170.i32[1];
    v144.i32[1] = v159.i32[2];
    LODWORD(v171) = vadd_f32(*(float32x2_t *)v144.f32, v166).u32[0];
    *(float32x2_t *)v144.f32 = vsub_f32(*(float32x2_t *)v144.f32, v167);
    HIDWORD(v171) = v144.i32[1];
    v164.i64[1] = v171;
  }
  v144.f32[0] = 0.5 / v165;
  v163 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v144.f32, 0);
LABEL_39:
  v176 = vmlaq_lane_f32(v140, a17, *(float32x2_t *)v58.f32, 1);
  v177 = vmlaq_lane_f32(v141, a17, *(float32x2_t *)v57.f32, 1);
  v178 = vmlaq_lane_f32(v142, a17, *(float32x2_t *)a12.f32, 1);
  v179 = vmlaq_lane_f32(v143, a17, *(float32x2_t *)a13.f32, 1);
  *(float32x4_t *)(v30 + 80) = vmulq_f32(v163, v164);
  v180 = vmulq_f32(v34, (float32x4_t)xmmword_1B2244DF0);
  v181 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v180, (int32x4_t)v180), (int8x16_t)v180, 0xCuLL);
  v182 = vmlaq_f32(vmulq_f32(v181, (float32x4_t)xmmword_1B2244F00), (float32x4_t)xmmword_1B2244D90, v180);
  v183 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v182, (int32x4_t)v182), (int8x16_t)v182, 0xCuLL);
  v184 = vmulq_f32(v182, v182);
  v184.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v184.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v184, 2), v184)).u64[0];
  v185 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v184.f32, 0);
  v185.i32[3] = 0;
  v186 = vrsqrteq_f32(v185);
  v187 = vmulq_f32(v186, vrsqrtsq_f32(v185, vmulq_f32(v186, v186)));
  v188 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v184.f32[0] != 0.0)), 0x1FuLL));
  v188.i32[3] = 0;
  v189 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v188), (int8x16_t)vmulq_f32(v183, vmulq_f32(v187, vrsqrtsq_f32(v185, vmulq_f32(v187, v187)))), vextq_s8(vextq_s8((int8x16_t)v180, (int8x16_t)v180, 0xCuLL), (int8x16_t)v180, 8uLL));
  v190 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v189, (int32x4_t)v189), (int8x16_t)v189, 0xCuLL), vnegq_f32(v180)), v189, v181);
  v191 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v190, (int32x4_t)v190), (int8x16_t)v190, 0xCuLL);
  v192 = (int32x4_t)vmulq_f32(v190, v190);
  v192.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v192.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v192, 2), *(float32x2_t *)v192.i8)).u32[0];
  v193 = vrsqrte_f32((float32x2_t)v192.u32[0]);
  v194 = vmul_f32(v193, vrsqrts_f32((float32x2_t)v192.u32[0], vmul_f32(v193, v193)));
  v195 = (int32x4_t)vmulq_n_f32(v191, vmul_f32(v194, vrsqrts_f32((float32x2_t)v192.u32[0], vmul_f32(v194, v194))).f32[0]);
  v196 = v180.f32[2] + (float)(v189.f32[0] + *(float *)&v195.i32[1]);
  if (v196 > 0.0)
  {
    v197 = (float32x4_t)vzip2q_s32(v195, vuzp1q_s32(v195, (int32x4_t)v180));
    v197.i32[2] = v189.i32[1];
    v198 = (float32x4_t)vuzp2q_s32((int32x4_t)v180, vzip1q_s32((int32x4_t)v180, v195));
    v198.i32[1] = v189.i32[2];
    v199 = vsubq_f32(v197, v198);
    v197.i32[3] = sqrtf(v196 + 1.0);
    v198.i32[3] = v197.i32[3];
    v180 = vmulq_f32(v197, v198);
    v199.i32[3] = v180.i32[3];
    v180.f32[0] = 0.5 / v197.f32[3];
LABEL_41:
    v200 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v180.f32, 0);
    goto LABEL_48;
  }
  if (v189.f32[0] < v180.f32[2] || v189.f32[0] < *(float *)&v195.i32[1])
  {
    if (*(float *)&v195.i32[1] <= v180.f32[2])
    {
      v288.i32[0] = vextq_s8((int8x16_t)v189, (int8x16_t)v189, 8uLL).u32[0];
      v288.i32[1] = v195.i32[2];
      *(float32x2_t *)v199.f32 = vadd_f32(*(float32x2_t *)v180.f32, v288);
      v289 = (float32x2_t)__PAIR64__(v189.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v180.f32[2] + 1.0) - v189.f32[0]) - *(float *)&v195.i32[1])));
      v290 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v195.i8, 0);
      v291 = vsub_f32(*(float32x2_t *)v189.f32, v290);
      v290.i32[0] = v289.i32[0];
      v290.i32[0] = vmul_f32(v289, v290).u32[0];
      v180.i32[1] = v291.i32[1];
      v199.i64[1] = v180.i64[0];
      v180.f32[0] = 0.5 / v289.f32[0];
      goto LABEL_41;
    }
    v201 = sqrtf((float)((float)(*(float *)&v195.i32[1] + 1.0) - v189.f32[0]) - v180.f32[2]);
    v208 = (int8x16_t)v180;
    *(float *)v208.i32 = v201;
    v209 = (float32x2_t)vdup_laneq_s32(v195, 2);
    *(float *)v195.i32 = v189.f32[1] + *(float *)v195.i32;
    v210 = vadd_f32(*(float32x2_t *)v180.f32, v209);
    v209.f32[0] = v201;
    v208.i32[0] = vmul_f32(*(float32x2_t *)v208.i8, v209).u32[0];
    v208.i32[1] = v210.i32[1];
    v211 = v180.f32[0] - v189.f32[2];
    v200 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v195, (int8x16_t)v195, 4uLL), v208, 0xCuLL);
    v200.f32[3] = v211;
  }
  else
  {
    v201 = sqrtf((float)((float)(v189.f32[0] + 1.0) - *(float *)&v195.i32[1]) - v180.f32[2]);
    v202 = (float32x2_t)vextq_s8((int8x16_t)v189, (int8x16_t)v189, 8uLL).u64[0];
    v203 = (float32x2_t)__PAIR64__(v180.u32[1], v202.u32[0]);
    v204 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v195.i8, 0);
    v205 = (float32x2_t)__PAIR64__(v204.u32[1], LODWORD(v201));
    v206 = vadd_f32(*(float32x2_t *)v189.f32, v204);
    v200.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v189.u32[1], LODWORD(v201)), v205).u32[0];
    v200.i32[1] = v206.i32[1];
    v180.i32[1] = v195.i32[2];
    LODWORD(v207) = vadd_f32(*(float32x2_t *)v180.f32, v202).u32[0];
    *(float32x2_t *)v180.f32 = vsub_f32(*(float32x2_t *)v180.f32, v203);
    HIDWORD(v207) = v180.i32[1];
    v200.i64[1] = v207;
  }
  v180.f32[0] = 0.5 / v201;
  v199 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v180.f32, 0);
LABEL_48:
  v212 = vmlaq_laneq_f32(v176, a18, v58, 2);
  v213 = vmlaq_laneq_f32(v177, a18, v57, 2);
  v214 = vmlaq_laneq_f32(v178, a18, a12, 2);
  v215 = vmlaq_laneq_f32(v179, a18, a13, 2);
  *(float32x4_t *)(v30 + 96) = vmulq_f32(v199, v200);
  v216 = vmulq_f32(v34, (float32x4_t)xmmword_1B2244D90);
  v217 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v216, (int32x4_t)v216), (int8x16_t)v216, 0xCuLL);
  v218 = vmlaq_f32(vmulq_f32(v217, (float32x4_t)xmmword_1B2244F00), (float32x4_t)xmmword_1B2244D90, v216);
  v219 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v218, (int32x4_t)v218), (int8x16_t)v218, 0xCuLL);
  v220 = vmulq_f32(v218, v218);
  v220.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v220.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v220, 2), v220)).u64[0];
  v221 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v220.f32, 0);
  v221.i32[3] = 0;
  v222 = vrsqrteq_f32(v221);
  v223 = vmulq_f32(v222, vrsqrtsq_f32(v221, vmulq_f32(v222, v222)));
  v224 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v220.f32[0] != 0.0)), 0x1FuLL));
  v224.i32[3] = 0;
  v225 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v224), (int8x16_t)vmulq_f32(v219, vmulq_f32(v223, vrsqrtsq_f32(v221, vmulq_f32(v223, v223)))), vextq_s8(vextq_s8((int8x16_t)v216, (int8x16_t)v216, 0xCuLL), (int8x16_t)v216, 8uLL));
  v226 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v225, (int32x4_t)v225), (int8x16_t)v225, 0xCuLL), vnegq_f32(v216)), v225, v217);
  v227 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v226, (int32x4_t)v226), (int8x16_t)v226, 0xCuLL);
  v228 = (int32x4_t)vmulq_f32(v226, v226);
  v228.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v228.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v228, 2), *(float32x2_t *)v228.i8)).u32[0];
  v229 = vrsqrte_f32((float32x2_t)v228.u32[0]);
  v230 = vmul_f32(v229, vrsqrts_f32((float32x2_t)v228.u32[0], vmul_f32(v229, v229)));
  v231 = (int32x4_t)vmulq_n_f32(v227, vmul_f32(v230, vrsqrts_f32((float32x2_t)v228.u32[0], vmul_f32(v230, v230))).f32[0]);
  v232 = v216.f32[2] + (float)(v225.f32[0] + *(float *)&v231.i32[1]);
  v296 = a1;
  if (v232 <= 0.0)
  {
    if (v225.f32[0] < v216.f32[2] || v225.f32[0] < *(float *)&v231.i32[1])
    {
      if (*(float *)&v231.i32[1] <= v216.f32[2])
      {
        v234 = sqrtf((float)((float)(v216.f32[2] + 1.0) - v225.f32[0]) - *(float *)&v231.i32[1]);
        v292.i32[0] = vextq_s8((int8x16_t)v225, (int8x16_t)v225, 8uLL).u32[0];
        v292.i32[1] = v231.i32[2];
        *(float32x2_t *)v237.f32 = vadd_f32(*(float32x2_t *)v216.f32, v292);
        v293 = (float32x2_t)__PAIR64__(v225.u32[1], LODWORD(v234));
        v294 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v231.i8, 0);
        *(float32x2_t *)v236.f32 = vsub_f32(*(float32x2_t *)v225.f32, v294);
        v294.f32[0] = v234;
        v294.i32[0] = vmul_f32(v293, v294).u32[0];
        v294.i32[1] = v236.i32[1];
        *(float32x2_t *)&v237.u32[2] = v294;
        goto LABEL_50;
      }
      v239 = sqrtf((float)((float)(*(float *)&v231.i32[1] + 1.0) - v225.f32[0]) - v216.f32[2]);
      v246 = (int8x16_t)v216;
      *(float *)v246.i32 = v239;
      v247 = (float32x2_t)vdup_laneq_s32(v231, 2);
      *(float *)v231.i32 = v225.f32[1] + *(float *)v231.i32;
      v248 = vadd_f32(*(float32x2_t *)v216.f32, v247);
      v247.f32[0] = v239;
      v246.i32[0] = vmul_f32(*(float32x2_t *)v246.i8, v247).u32[0];
      v246.i32[1] = v248.i32[1];
      v249 = v216.f32[0] - v225.f32[2];
      v238 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v231, (int8x16_t)v231, 4uLL), v246, 0xCuLL);
      v238.f32[3] = v249;
    }
    else
    {
      v239 = sqrtf((float)((float)(v225.f32[0] + 1.0) - *(float *)&v231.i32[1]) - v216.f32[2]);
      v240 = (float32x2_t)vextq_s8((int8x16_t)v225, (int8x16_t)v225, 8uLL).u64[0];
      v241 = (float32x2_t)__PAIR64__(v216.u32[1], v240.u32[0]);
      v242 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v231.i8, 0);
      v243 = (float32x2_t)__PAIR64__(v242.u32[1], LODWORD(v239));
      v244 = vadd_f32(*(float32x2_t *)v225.f32, v242);
      v238.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v225.u32[1], LODWORD(v239)), v243).u32[0];
      v238.i32[1] = v244.i32[1];
      v216.i32[1] = v231.i32[2];
      LODWORD(v245) = vadd_f32(*(float32x2_t *)v216.f32, v240).u32[0];
      *(float32x2_t *)v216.f32 = vsub_f32(*(float32x2_t *)v216.f32, v241);
      HIDWORD(v245) = v216.i32[1];
      v238.i64[1] = v245;
    }
    v216.f32[0] = 0.5 / v239;
    v237 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v216.f32, 0);
    goto LABEL_57;
  }
  v233 = (float32x4_t)vzip2q_s32(v231, vuzp1q_s32(v231, (int32x4_t)v216));
  v233.i32[2] = v225.i32[1];
  v234 = sqrtf(v232 + 1.0);
  v235 = (float32x4_t)vuzp2q_s32((int32x4_t)v216, vzip1q_s32((int32x4_t)v216, v231));
  v235.i32[1] = v225.i32[2];
  v237 = vsubq_f32(v233, v235);
  v233.f32[3] = v234;
  v235.f32[3] = v234;
  v236 = vmulq_f32(v233, v235);
  v237.i32[3] = v236.i32[3];
LABEL_50:
  v236.f32[0] = 0.5 / v234;
  v238 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v236.f32, 0);
LABEL_57:
  v295 = a5;
  v320 = vmlaq_laneq_f32(v213, a19, v57, 3);
  v323 = vmlaq_laneq_f32(v212, a19, v58, 3);
  v303 = vmlaq_laneq_f32(v215, a19, a13, 3);
  v306 = vmlaq_laneq_f32(v214, a19, a12, 3);
  *(float32x4_t *)(v30 + 112) = vmulq_f32(v237, v238);
  v250 = &v327[48];
  for (i = 32; i != 128; i += 16)
  {
    *(double *)v252.i64 = sub_1B1D98C28(*(float32x4_t *)(v31 + i));
    v332.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v323, v252.f32[0]), v320, *(float32x2_t *)v252.f32, 1), v306, v252, 2), v303, v252, 3);
    v332.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v323, v253.f32[0]), v320, *(float32x2_t *)v253.f32, 1), v306, v253, 2), v303, v253, 3);
    v332.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v323, v254.f32[0]), v320, *(float32x2_t *)v254.f32, 1), v306, v254, 2), v303, v254, 3);
    v332.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v323, v255.f32[0]), v320, *(float32x2_t *)v255.f32, 1), v306, v255, 2), v303, v255, 3);
    *(simd_float4x4 *)(v250 - 48) = __invert_f4(v332);
    v250 += 64;
  }
  v256 = 0;
  v257 = a13;
  v257.i32[3] = 1.0;
  v316 = (simd_float4)v257;
  v309 = __PAIR64__(LODWORD(a9), LODWORD(a8));
  v258 = a2 + 32;
  v259 = *(float *)(a2 + 44) == 1.0 && *(float *)(a2 + 40) == 1.0;
  do
  {
    v321 = *(float32x4_t *)(v31 + v256 * 16 + 32);
    v324 = a4[1];
    v260 = *(char **)(a3 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a3 + 16) = v260;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v260 = sub_1B1C68ADC(0, *((_QWORD *)v260 + 2) + 1, 1, v260);
      *(_QWORD *)(a3 + 16) = v260;
    }
    v263 = *((_QWORD *)v260 + 2);
    v262 = *((_QWORD *)v260 + 3);
    if (v263 >= v262 >> 1)
      v260 = sub_1B1C68ADC(v262 > 1, v263 + 1, 1, v260);
    v264 = v321;
    v265 = vmulq_f32(v264, v264);
    v266 = vmulq_laneq_f32(v264, v264, 3);
    v267 = vmulq_lane_f32(v264, *(float32x2_t *)v264.f32, 1).f32[0];
    v268 = v265.f32[1];
    v269 = 0.5 - v265.f32[0];
    v270 = (float)(0.5 - v265.f32[0]) - v265.f32[2];
    *(float32x2_t *)v264.f32 = vmul_laneq_f32(*(float32x2_t *)v264.f32, v264, 2);
    v271.i32[3] = 0;
    v271.f32[0] = (float)(0.5 - v265.f32[1]) - v265.f32[2];
    v271.f32[1] = v267 + v266.f32[2];
    v271.f32[2] = v264.f32[0] - v266.f32[1];
    v333.columns[0] = (simd_float4)vaddq_f32(v271, v271);
    v272.i32[3] = 0;
    v272.f32[0] = v267 - v266.f32[2];
    v272.f32[1] = v270;
    v272.f32[2] = v264.f32[1] + v266.f32[0];
    v333.columns[1] = (simd_float4)vaddq_f32(v272, v272);
    *(int32x2_t *)v266.f32 = vrev64_s32(*(int32x2_t *)v266.f32);
    v273.i32[0] = vadd_f32(*(float32x2_t *)v264.f32, *(float32x2_t *)v266.f32).u32[0];
    v273.i32[1] = vsub_f32(*(float32x2_t *)&v264, *(float32x2_t *)&v266).i32[1];
    v273.f32[2] = v269 - v268;
    v273.i32[3] = 0;
    v333.columns[2] = (simd_float4)vaddq_f32(v273, v273);
    v333.columns[3] = v316;
    v334 = __invert_f4(v333);
    *((_QWORD *)v260 + 2) = v263 + 1;
    v274 = &v260[160 * v263];
    *(simd_float4x4 *)(v274 + 32) = v334;
    *((_OWORD *)v274 + 6) = v313;
    *((_OWORD *)v274 + 7) = v312;
    *((_OWORD *)v274 + 8) = v311;
    *((_OWORD *)v274 + 9) = v310;
    *((_QWORD *)v274 + 20) = v309;
    *((float32x4_t *)v274 + 11) = v324;
    *(_QWORD *)(a3 + 16) = v260;
    if (v259)
    {
      v275 = a4[1];
      v328[v256] = v275;
      v276 = vaddq_f32(v275, (float32x4_t)vdupq_laneq_s32((int32x4_t)v275, 2)).f32[0];
      a4[1].f32[0] = v276;
      if (v276 >= 1.0)
      {
        v277.i64[1] = v275.i64[1];
        v277.i32[0] = 0;
        v277.i32[1] = vaddq_f32(v275, (float32x4_t)vdupq_laneq_s32(*(int32x4_t *)&v275, 3)).i32[1];
        a4[1] = v277;
      }
    }
    else
    {
      v328[v256] = *(_OWORD *)(v258 + v256 * 16);
    }
    ++v256;
  }
  while (v256 != 6);
  swift_setDeallocating();
  swift_deallocClassInstance();
  v319 = v325;
  v322 = v326;
  v300 = v328[0];
  v302 = v328[1];
  v305 = v328[2];
  v308 = v328[3];
  v315 = v328[4];
  v318 = v328[5];
  v29 = v329;
  v298 = v330[0];
  v61 = v330[1];
  v59 = BYTE4(v330[1]);
  a5 = v295;
  v60 = v296;
LABEL_72:
  result = memcpy((void *)(a5 + 32), v327, 0x180uLL);
  *(float32x4_t *)a5 = v319;
  *(float32x4_t *)(a5 + 16) = v322;
  *(_OWORD *)(a5 + 416) = v313;
  *(_OWORD *)(a5 + 432) = v312;
  *(_OWORD *)(a5 + 448) = v311;
  *(_OWORD *)(a5 + 464) = v310;
  *(_OWORD *)(a5 + 480) = v300;
  *(_OWORD *)(a5 + 496) = v302;
  *(_OWORD *)(a5 + 512) = v305;
  *(_OWORD *)(a5 + 528) = v308;
  *(_OWORD *)(a5 + 544) = v315;
  *(_OWORD *)(a5 + 560) = v318;
  *(_DWORD *)(a5 + 576) = v60;
  *(float *)(a5 + 580) = v29;
  *(_OWORD *)(a5 + 592) = v298;
  *(_DWORD *)(a5 + 608) = v61;
  *(_BYTE *)(a5 + 612) = v59;
  return result;
}

uint64_t *sub_1B1D957A4(uint64_t a1, float32x4_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *result;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  float32x4_t *v24;
  float32x4_t *v25;
  float *v26;
  uint64_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float v34;
  uint64_t v35;
  float32x4_t *v36;
  float *v37;
  uint64_t v38;
  float32x4_t *v39;
  uint64_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float v47;
  uint64_t *v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  int v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  float32x4_t v65;
  float32x4_t v66;
  uint64_t v67;
  float32x4_t v68;
  float32x4_t v69;
  uint64_t v70;
  float32x4_t v71;
  float32x4_t v72;
  uint64_t v73[8];
  _OWORD v74[2];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _OWORD v81[2];
  uint64_t v82;
  _BYTE v83[48];
  _QWORD *v84;

  v5 = v4;
  sub_1B1A025EC(a4, (uint64_t)v73, (uint64_t (*)(_QWORD))sub_1B1D98CF4);
  result = (uint64_t *)sub_1B1A025EC(a4, (uint64_t)v74, (uint64_t (*)(_QWORD))sub_1B1D98CF4);
  if (*(_QWORD *)&v74[0])
  {
    if (v80 >= 1)
    {
      v61 = v77;
      if (v77)
      {
        v48 = (uint64_t *)a4;
        v8 = v79[4];
        v9 = *(unsigned __int8 *)(v78 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v81[0] = v74[0];
        v81[1] = v74[1];
        v82 = v75;
        v59 = (uint64_t)(v79 + 6);
        v60 = v76;
        v84 = v79;
        v58 = v79 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v10 = 0;
        v56 = v9;
        v57 = v8;
        while (1)
        {
          v62 = v10;
          v63 = v5;
          v11 = (unsigned int *)(v60 + 48 * v10);
          v70 = *v11;
          v12 = v11[2];
          v67 = v11[1];
          v14 = (uint64_t *)*((_QWORD *)v11 + 2);
          v13 = *((_QWORD *)v11 + 3);
          v16 = *((_QWORD *)v11 + 4);
          v15 = *((_QWORD *)v11 + 5);
          if (v9)
          {
            v17 = *(os_unfair_lock_s **)(v15 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v17);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v8);
          sub_1B19F66A0(v59, (uint64_t)v83, &qword_1ED4B7FB0);
          v18 = v84;
          v19 = v84[4];
          v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v18[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
          v18[7] = v20;
          v58[1] = 0;
          v58[2] = 0;
          *v58 = 0;
          swift_release();
          v21 = sub_1B1A12038((uint64_t)&type metadata for PointLight, (uint64_t)&off_1E636EB40, v14, v13, v16, (uint64_t)v18);
          v22 = sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v14, v13, v16, (uint64_t)v18);
          v23 = sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v14, v13, v16, (uint64_t)v18);
          v24 = (float32x4_t *)v23;
          if (v14)
          {
            if (v16)
            {
              v25 = (float32x4_t *)(v22 + 48);
              v26 = (float *)(v21 + 4);
              v27 = a1 + 624 * v12;
              v8 = v57;
              v28 = v54;
              v29 = v55;
              v30 = v53;
              do
              {
                if (v12 <= 7)
                {
                  v31 = *v25;
                  v31.i32[3] = v28.i32[3];
                  v71 = v31;
                  v32 = vsubq_f32(*v25, a2);
                  v32.i32[3] = v30.i32[3];
                  v33 = vmulq_n_f32(*v24, *(v26 - 1) * 0.00011651);
                  v33.i32[3] = v29.i32[3];
                  v65 = v32;
                  v68 = v33;
                  v34 = 1.0 / (float)(*v26 * *v26);
                  *(float32x4_t *)v27 = v33;
                  *(float32x4_t *)(v27 + 16) = v32;
                  bzero((void *)(v27 + 32), 0x224uLL);
                  *(float *)(v27 + 580) = v34;
                  *(_OWORD *)(v27 + 592) = 0u;
                  *(_QWORD *)(v27 + 605) = 0;
                  v29 = v68;
                  v28 = v71;
                  v30 = v65;
                }
                v25 += 4;
                v26 += 4;
                ++v12;
                v27 += 624;
                ++v24;
                --v16;
              }
              while (v16);
              v53 = v30;
              v54 = v28;
              v55 = v29;
LABEL_23:
              v35 = v63;
              goto LABEL_24;
            }
          }
          else if ((_DWORD)v70 != (_DWORD)v67)
          {
            v36 = (float32x4_t *)(v22 + (v70 << 6) + 48);
            v37 = (float *)(v21 + 16 * v70 + 4);
            v38 = a1 + 624 * v12;
            v39 = (float32x4_t *)(v23 + 16 * v70);
            v40 = v67 - v70;
            v8 = v57;
            v41 = v50;
            v42 = v51;
            v43 = v49;
            do
            {
              if (v12 <= 7)
              {
                v44 = *v36;
                v44.i32[3] = v43.i32[3];
                v45 = vsubq_f32(*v36, a2);
                v45.i32[3] = v41.i32[3];
                v69 = v45;
                v72 = v44;
                v46 = vmulq_n_f32(*v39, *(v37 - 1) * 0.00011651);
                v46.i32[3] = v42.i32[3];
                v66 = v46;
                v47 = 1.0 / (float)(*v37 * *v37);
                *(float32x4_t *)v38 = v46;
                *(float32x4_t *)(v38 + 16) = v45;
                bzero((void *)(v38 + 32), 0x224uLL);
                *(float *)(v38 + 580) = v47;
                *(_OWORD *)(v38 + 592) = 0u;
                *(_QWORD *)(v38 + 605) = 0;
                v42 = v66;
                v41 = v69;
                v43 = v72;
              }
              v36 += 4;
              v37 += 4;
              ++v12;
              v38 += 624;
              ++v39;
              --v40;
            }
            while (v40);
            v49 = v43;
            v50 = v41;
            v51 = v42;
            goto LABEL_23;
          }
          v35 = v63;
          v8 = v57;
LABEL_24:
          v9 = v56;
          sub_1B1F05D48(v84, (unsigned __int16 **)v81, (uint64_t)v83);
          v5 = v35;
          sub_1B1F03804((char *)v15);
          ecs_stack_allocator_pop_snapshot(v8);
          if ((v56 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
          }
          swift_release();
          v10 = v62 + 1;
          if (v62 + 1 == v61)
            return sub_1B19ED748(v48);
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1B1D95C58(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8, uint64_t a9, float32x4_t *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *result;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float32x4_t *v28;
  uint64_t v29;
  uint64_t *v30;
  float32x4_t *v31;
  float *v32;
  char *v33;
  uint64_t *v34;
  float32x4_t *v35;
  float *v36;
  float32x4_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE __src[624];
  _BYTE v60[624];
  _QWORD v61[8];
  _OWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;
  _BYTE v71[48];
  float32x4_t *v72;

  v11 = v10;
  v72 = a10;
  sub_1B1A025EC(a8, (uint64_t)v61, (uint64_t (*)(_QWORD))sub_1B1D98BBC);
  result = (uint64_t *)sub_1B1A025EC(a8, (uint64_t)v62, (uint64_t (*)(_QWORD))sub_1B1D98BBC);
  if (*(_QWORD *)&v62[0])
  {
    if (v68 >= 1)
    {
      v47 = v65;
      if (v65)
      {
        v40 = (uint64_t *)a8;
        v14 = v67;
        v15 = v67[4];
        v16 = *(unsigned __int8 *)(v66 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v69[0] = v62[0];
        v69[1] = v62[1];
        v70 = v63;
        v43 = (uint64_t)(v67 + 6);
        v44 = v64;
        v42 = v67 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v17 = 0;
        v45 = v16;
        v46 = v15;
        do
        {
          v51 = v17;
          v52 = v11;
          v18 = (unsigned int *)(v44 + 48 * v17);
          v49 = *v18;
          v19 = v18[2];
          v48 = v18[1];
          v20 = (uint64_t *)*((_QWORD *)v18 + 2);
          v21 = *((_QWORD *)v18 + 3);
          v23 = *((_QWORD *)v18 + 4);
          v22 = *((_QWORD *)v18 + 5);
          if (v16)
          {
            v24 = *(os_unfair_lock_s **)(v22 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v24);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v15);
          sub_1B19F66A0(v43, (uint64_t)v71, &qword_1ED4B7FB0);
          v25 = v14[4];
          v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v14[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
          v14[7] = v26;
          v42[1] = 0;
          v42[2] = 0;
          *v42 = 0;
          swift_release();
          v50 = sub_1B1A12038((uint64_t)&type metadata for PointLight, (uint64_t)&off_1E636EB40, v20, v21, v23, (uint64_t)v14);
          v27 = sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v20, v21, v23, (uint64_t)v14);
          v28 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v20, v21, v23, (uint64_t)v14);
          v29 = sub_1B1A12038((uint64_t)&type metadata for Shadow, (uint64_t)&off_1E63BCD78, v20, v21, v23, (uint64_t)v14);
          if (v20)
          {
            if (v23)
            {
              v30 = (uint64_t *)(v29 + 8);
              v31 = (float32x4_t *)(v27 + 32);
              v32 = (float *)(v50 + 8);
              v33 = (char *)(a1 + 624 * v19);
              do
              {
                if (v19 <= 0)
                {
                  sub_1B1D94378(*((_DWORD *)v30 - 2), *v30, a9, v72, (uint64_t)__src, *(v32 - 2), *(v32 - 1), *v32, v32[1], v31[-2], v31[-1], *v31, v31[1], *v28, a2, a3, a4, a5, a6);
                  memcpy(v33, __src, 0x270uLL);
                }
                v30 += 2;
                v31 += 4;
                v32 += 4;
                ++v28;
                ++v19;
                v33 += 624;
                --v23;
              }
              while (v23);
            }
          }
          else if ((_DWORD)v49 != (_DWORD)v48)
          {
            v34 = (uint64_t *)(v29 + 16 * v49 + 8);
            v35 = (float32x4_t *)(v27 + (v49 << 6) + 32);
            v36 = (float *)(v50 + 16 * v49 + 8);
            v37 = &v28[v49];
            v38 = (char *)(a1 + 624 * v19);
            v39 = v48 - v49;
            do
            {
              if (v19 <= 0)
              {
                sub_1B1D94378(*((_DWORD *)v34 - 2), *v34, a9, v72, (uint64_t)v60, *(v36 - 2), *(v36 - 1), *v36, v36[1], v35[-2], v35[-1], *v35, v35[1], *v37, a2, a3, a4, a5, a6);
                memcpy(v38, v60, 0x270uLL);
              }
              v34 += 2;
              v35 += 4;
              v36 += 4;
              ++v37;
              ++v19;
              v38 += 624;
              --v39;
            }
            while (v39);
          }
          sub_1B1F05D48(v14, (unsigned __int16 **)v69, (uint64_t)v71);
          v11 = v52;
          sub_1B1F03804((char *)v22);
          v15 = v46;
          ecs_stack_allocator_pop_snapshot(v46);
          v16 = v45;
          if ((v45 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
          }
          swift_release();
          v17 = v51 + 1;
        }
        while (v51 + 1 != v47);
        return sub_1B19ED748(v40);
      }
    }
  }
  return result;
}

uint64_t *sub_1B1D960E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *result;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  float *v19;
  float32x4_t *v20;
  float32x4_t v21;
  float32x4_t v22;
  uint64_t v23;
  uint64_t v24;
  float32x4_t *v25;
  float *v26;
  float32x4_t v27;
  float32x4_t v28;
  uint64_t *v29;
  float32x4_t v30;
  float32x4_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42[8];
  _OWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _OWORD v50[2];
  uint64_t v51;
  _BYTE v52[48];
  _QWORD *v53;

  v4 = v3;
  sub_1B1D98AEC(a3, (uint64_t)v42);
  result = (uint64_t *)sub_1B1D98AEC(a3, (uint64_t)v43);
  if (*(_QWORD *)&v43[0])
  {
    if (v49 >= 1)
    {
      v37 = v46;
      if (v46)
      {
        v29 = (uint64_t *)a3;
        v7 = v48[4];
        v41 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v50[0] = v43[0];
        v50[1] = v43[1];
        v51 = v44;
        v35 = (uint64_t)(v48 + 6);
        v36 = v45;
        v53 = v48;
        v34 = v48 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v8 = 0;
        v33 = v7;
        while (1)
        {
          v9 = (unsigned int *)(v36 + 48 * v8);
          v39 = *v9;
          v40 = v4;
          v10 = v9[2];
          v38 = v9[1];
          v11 = (uint64_t *)*((_QWORD *)v9 + 2);
          v12 = *((_QWORD *)v9 + 3);
          v14 = *((_QWORD *)v9 + 4);
          v13 = *((_QWORD *)v9 + 5);
          if (v41)
          {
            v15 = *(os_unfair_lock_s **)(v13 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v7);
          sub_1B19F66A0(v35, (uint64_t)v52, &qword_1ED4B7FB0);
          v16 = v53;
          v17 = v53[4];
          v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v16[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v16[7] = v18;
          v34[1] = 0;
          v34[2] = 0;
          *v34 = 0;
          swift_release();
          v19 = (float *)sub_1B1A12038((uint64_t)&type metadata for AmbientLight, (uint64_t)&off_1E6374380, v11, v12, v14, (uint64_t)v16);
          v20 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v11, v12, v14, (uint64_t)v16);
          if (v11)
          {
            if (v14)
            {
              v7 = v33;
              v21 = v32;
              do
              {
                if (v10 <= 7)
                {
                  v22 = vmulq_n_f32(*v20, *v19);
                  v22.i32[3] = v21.i32[3];
                  *(float32x4_t *)(a1 + 16 * v10) = v22;
                  v21 = v22;
                }
                ++v10;
                ++v20;
                ++v19;
                --v14;
              }
              while (v14);
              v32 = v21;
LABEL_23:
              v23 = v40;
              goto LABEL_24;
            }
          }
          else if ((_DWORD)v39 != (_DWORD)v38)
          {
            v24 = v38 - v39;
            v25 = &v20[v39];
            v26 = &v19[v39];
            v7 = v33;
            v27 = v30;
            do
            {
              if (v10 <= 7)
              {
                v28 = vmulq_n_f32(*v25, *v26);
                v28.i32[3] = v27.i32[3];
                *(float32x4_t *)(a1 + 16 * v10) = v28;
                v27 = v28;
              }
              ++v10;
              ++v25;
              ++v26;
              --v24;
            }
            while (v24);
            v30 = v27;
            goto LABEL_23;
          }
          v23 = v40;
          v7 = v33;
LABEL_24:
          sub_1B1F05D48(v53, (unsigned __int16 **)v50, (uint64_t)v52);
          v4 = v23;
          sub_1B1F03804((char *)v13);
          ecs_stack_allocator_pop_snapshot(v7);
          if ((v41 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
          }
          swift_release();
          if (++v8 == v37)
            return sub_1B19ED748(v29);
        }
      }
    }
  }
  return result;
}

float sub_1B1D96438@<S0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, simd_float4 a7@<Q0>, simd_float4 a8@<Q1>, simd_float4 a9@<Q2>, float32x4_t a10@<Q3>, float32x4_t a11@<Q4>, float32x4_t a12@<Q5>, float32x4_t a13@<Q6>, float32x4_t a14@<Q7>, float32x4_t a15, float32x4_t a16)
{
  float v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  char *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  simd_float4x4 v31;
  char *v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float result;
  char *v41;
  uint64_t v42;
  simd_float4 v43;
  simd_float4 v44;
  float32x4_t v45;
  simd_float4 v47;
  float32x4_t v49;
  float v50;
  __int128 v53;
  __int128 v54;
  simd_float4 v56;
  simd_float4 v57;
  float32x4_t v58;
  float32x4_t v60;
  float32x4_t v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  simd_float4x4 v67;
  simd_float4x4 v68;
  simd_float4x4 v69;

  v57 = a8;
  a8.i64[0] = *(_QWORD *)a1;
  a8.i32[2] = *(_DWORD *)(a1 + 8);
  v61 = (float32x4_t)a8;
  v53 = 0u;
  v50 = a8.f32[2];
  v42 = *(_QWORD *)(a1 + 16);
  sub_1B1C31954(1, 1, a8.f32[2], 1.0, *(float *)&v42, *((float *)&v42 + 1), 0, 0, 1);
  v22 = *(float *)(a1 + 12);
  v64 = v24;
  v65 = v23;
  v62 = v26;
  v63 = v25;
  if (a3)
  {
    v54 = *(_OWORD *)(a5 + 16);
    v27 = *(char **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27 = sub_1B1C68ADC(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
      *(_QWORD *)(a4 + 16) = v27;
    }
    v30 = *((_QWORD *)v27 + 2);
    v29 = *((_QWORD *)v27 + 3);
    v31.columns[3] = (simd_float4)a10;
    v31.columns[1] = v57;
    v31.columns[2] = a9;
    v31.columns[0] = a7;
    if (v30 >= v29 >> 1)
    {
      v41 = sub_1B1C68ADC(v29 > 1, v30 + 1, 1, v27);
      v31.columns[0] = a7;
      v31.columns[1] = v57;
      v31.columns[2] = a9;
      v31.columns[3] = (simd_float4)a10;
      v27 = v41;
    }
    v67 = __invert_f4(v31);
    *((_QWORD *)v27 + 2) = v30 + 1;
    v32 = &v27[160 * v30];
    *(simd_float4x4 *)(v32 + 32) = v67;
    v33 = (float32x4_t)v57;
    v34 = (float32x4_t)a9;
    *((float32x4_t *)v32 + 6) = v65;
    *((float32x4_t *)v32 + 7) = v64;
    *((float32x4_t *)v32 + 8) = v63;
    *((float32x4_t *)v32 + 9) = v62;
    *((_QWORD *)v32 + 20) = v42;
    v35 = (float32x4_t)a7;
    *((_OWORD *)v32 + 11) = v54;
    *(_QWORD *)(a4 + 16) = v27;
    v53 = *(_OWORD *)(a3 + 32);
  }
  else
  {
    a2 = 0;
    v33 = (float32x4_t)v57;
    v34 = (float32x4_t)a9;
    v35 = (float32x4_t)a7;
  }
  v68.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, v35.f32[0]), a14, *(float32x2_t *)v35.f32, 1), a15, v35, 2), a16, v35, 3);
  v68.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, v33.f32[0]), a14, *(float32x2_t *)v33.f32, 1), a15, v33, 2), a16, v33, 3);
  v68.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, v34.f32[0]), a14, *(float32x2_t *)v34.f32, 1), a15, v34, 2), a16, v34, 3);
  v68.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, a10.f32[0]), a14, *(float32x2_t *)a10.f32, 1), a15, a10, 2), a16, a10, 3);
  v69 = __invert_f4(v68);
  v56 = v69.columns[0];
  v60 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v65, v69.columns[0].f32[0]), v64, *(float32x2_t *)v69.columns[0].f32, 1), v63, (float32x4_t)v69.columns[0], 2), v62, (float32x4_t)v69.columns[0], 3);
  v58 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v65, v69.columns[1].f32[0]), v64, *(float32x2_t *)v69.columns[1].f32, 1), v63, (float32x4_t)v69.columns[1], 2), v62, (float32x4_t)v69.columns[1], 3);
  v43 = v69.columns[3];
  v44 = v69.columns[2];
  v47 = v69.columns[1];
  v49 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v65, v69.columns[2].f32[0]), v64, *(float32x2_t *)v69.columns[2].f32, 1), v63, (float32x4_t)v69.columns[2], 2), v62, (float32x4_t)v69.columns[2], 3);
  v45 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v65, v69.columns[3].f32[0]), v64, *(float32x2_t *)v69.columns[3].f32, 1), v63, (float32x4_t)v69.columns[3], 2), v62, (float32x4_t)v69.columns[3], 3);
  v36 = 1.0 / COERCE_FLOAT(vmulq_f32(v61, v61).i32[1]);
  v37 = cosf(v22 * 0.5);
  v38 = cosf(v50 * 0.5);
  *(float32x4_t *)a6 = vdivq_f32(vmulq_f32(vmulq_n_f32(a11, v61.f32[0]), (float32x4_t)vdupq_n_s32(0x3ABFE803u)), (float32x4_t)vdupq_n_s32(0x40490FDAu));
  *(float32x4_t *)(a6 + 16) = vsubq_f32(a10, a12);
  *(simd_float4 *)(a6 + 32) = v56;
  *(simd_float4 *)(a6 + 48) = v47;
  *(simd_float4 *)(a6 + 64) = v44;
  *(simd_float4 *)(a6 + 80) = v43;
  *(float32x4_t *)(a6 + 96) = v65;
  *(float32x4_t *)(a6 + 112) = v64;
  v39 = 8388600.0;
  *(float32x4_t *)(a6 + 128) = v63;
  *(float32x4_t *)(a6 + 144) = v62;
  *(float32x4_t *)(a6 + 160) = v60;
  *(float32x4_t *)(a6 + 176) = v58;
  if ((float)(v37 - v38) >= 0.00000011921)
    v39 = 1.0 / (float)(v37 - v38);
  *(float32x4_t *)(a6 + 192) = v49;
  *(float32x4_t *)(a6 + 208) = v45;
  *(_OWORD *)(a6 + 224) = v53;
  result = -(float)(v38 * v39);
  *(_DWORD *)(a6 + 240) = a2;
  *(float *)(a6 + 244) = v36;
  *(float *)(a6 + 248) = v39;
  *(float *)(a6 + 252) = result;
  *(_QWORD *)(a6 + 256) = 0;
  *(_QWORD *)(a6 + 264) = 0;
  *(_QWORD *)(a6 + 269) = 0;
  return result;
}

uint64_t *sub_1B1D967A0(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *result;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float32x4_t *v28;
  float32x2_t *v29;
  float *v30;
  _QWORD *v31;
  float32x4_t v32;
  float v33;
  float32x4_t v34;
  float32x4_t v35;
  float v36;
  float v37;
  float v38;
  float v39;
  BOOL v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  float v51;
  float32x2_t *v52;
  float32x4_t *v53;
  float *v54;
  uint64_t v55;
  _QWORD *v56;
  float32x4_t v57;
  float v58;
  float32x4_t v59;
  float32x4_t v60;
  float v61;
  float v62;
  float v63;
  float v64;
  float v65;
  float v66;
  float v67;
  float v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  float v74;
  float v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  float32x4_t v85;
  __int32 v86;
  float32x4_t v87;
  int v88;
  float32x4_t v89;
  __int32 v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float v110;
  float32x4_t v111;
  float v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  uint64_t v119;
  float32x4_t v120;
  float32x4_t v121;
  uint64_t v122;
  float32x4_t v123;
  float32x4_t v124;
  uint64_t v125;
  float32x4_t v126;
  float32x4_t v127;
  int v128;
  _QWORD v129[8];
  _OWORD v130[2];
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _OWORD v137[2];
  uint64_t v138;
  _BYTE v139[48];
  _QWORD *v140;
  simd_float4x4 v141;
  simd_float4x4 v142;
  simd_float4x4 v143;
  simd_float4x4 v144;

  v9 = v8;
  sub_1B1A025EC(a8, (uint64_t)v129, (uint64_t (*)(_QWORD))sub_1B1D98A80);
  v76 = (uint64_t *)a8;
  result = (uint64_t *)sub_1B1A025EC(a8, (uint64_t)v130, (uint64_t (*)(_QWORD))sub_1B1D98A80);
  if (*(_QWORD *)&v130[0])
  {
    if (v136 >= 1)
    {
      v82 = v133;
      if (v133)
      {
        v13 = v135[4];
        v84 = *(unsigned __int8 *)(v134 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v137[0] = v130[0];
        v137[1] = v130[1];
        v138 = v131;
        v80 = (uint64_t)(v135 + 6);
        v81 = v132;
        v140 = v135;
        v79 = v135 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v14 = 0;
        v77 = a1 + 256;
        v91 = (float32x4_t)vdupq_n_s32(0x40490FDAu);
        v92 = (float32x4_t)vdupq_n_s32(0x3ABFE803u);
        v78 = v13;
        while (1)
        {
          v125 = v9;
          v83 = v14;
          v15 = (unsigned int *)(v81 + 48 * v14);
          v122 = *v15;
          v16 = v15[2];
          v119 = v15[1];
          v18 = (uint64_t *)*((_QWORD *)v15 + 2);
          v17 = *((_QWORD *)v15 + 3);
          v20 = *((_QWORD *)v15 + 4);
          v19 = *((_QWORD *)v15 + 5);
          if (v84)
          {
            v21 = *(os_unfair_lock_s **)(v19 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v21);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v13);
          sub_1B19F66A0(v80, (uint64_t)v139, &qword_1ED4B7FB0);
          v22 = v140;
          v23 = v140[4];
          v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v22[6] = ecs_stack_allocator_allocate(v23, 48 * v24, 8);
          v22[7] = v24;
          v79[1] = 0;
          v79[2] = 0;
          *v79 = 0;
          swift_release();
          v25 = sub_1B1A12038((uint64_t)&type metadata for SpotLight, (uint64_t)&off_1E63C5190, v18, v17, v20, (uint64_t)v22);
          v26 = sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v18, v17, v20, (uint64_t)v22);
          v27 = sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v18, v17, v20, (uint64_t)v22);
          v28 = (float32x4_t *)v27;
          if (v18)
          {
            if (v20)
            {
              v29 = (float32x2_t *)(v26 + 32);
              v30 = (float *)(v25 + 12);
              v31 = (_QWORD *)(v77 + 288 * v16);
              v9 = v125;
              do
              {
                if (v16 <= 7)
                {
                  v42 = *(v30 - 2);
                  v43 = *(v30 - 1);
                  v44 = *v30;
                  v45 = v30[1];
                  v46 = v30[2];
                  v107 = *v28;
                  v110 = *(v30 - 3);
                  v141.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v29[-4].f32)), a4, v29[-4], 1), a5, *(float32x4_t *)v29[-4].f32, 2), a6, *(float32x4_t *)v29[-4].f32, 3);
                  v141.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v29[-2].f32)), a4, v29[-2], 1), a5, *(float32x4_t *)v29[-2].f32, 2), a6, *(float32x4_t *)v29[-2].f32, 3);
                  v141.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v29->f32)), a4, *v29, 1), a5, *(float32x4_t *)v29->f32, 2), a6, *(float32x4_t *)v29->f32, 3);
                  v126 = *(float32x4_t *)v29[2].f32;
                  v141.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, v126.f32[0]), a4, v29[2], 1), a5, v126, 2), a6, v126, 3);
                  v142 = __invert_f4(v141);
                  v120 = (float32x4_t)v142.columns[1];
                  v123 = (float32x4_t)v142.columns[0];
                  v115 = (float32x4_t)v142.columns[3];
                  v117 = (float32x4_t)v142.columns[2];
                  v47 = v45 + 0.0001;
                  if (v45 < 0.0001)
                    v47 = 0.0002;
                  v48 = fmaxf(v45, 0.0001);
                  if (v46 > v47)
                    v49 = v46;
                  else
                    v49 = v47;
                  v50 = v43 * 0.5;
                  v51 = tanf(v50);
                  if ((LODWORD(v49) & 0x7FFFFFFF) == 0x7F800000)
                  {
                    v33 = -v48;
                    v32 = (float32x4_t)xmmword_1B2284DE0;
                  }
                  else
                  {
                    v32.i64[0] = 0;
                    v32.f32[2] = v49 / (float)(v48 - v49);
                    v32.i32[3] = -1.0;
                    v33 = (float)(v49 * v48) / (float)(v48 - v49);
                  }
                  v34 = vdivq_f32(vmulq_f32(vmulq_n_f32(v107, v110), v92), v91);
                  v35 = vsubq_f32(v126, a2);
                  v34.i32[3] = v113.i32[3];
                  v113 = v34;
                  v35.i32[3] = v114.i32[3];
                  v114 = v35;
                  v36 = 1.0 / v51;
                  v98 = vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B2244DF0, v33), (float32x4_t)0);
                  v100 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, v32.f32[0]), (float32x4_t)xmmword_1B2244DD0, *(float32x2_t *)v32.f32, 1), (float32x4_t)xmmword_1B2244DF0, v32, 2), (float32x4_t)xmmword_1B2244E10, v32, 3);
                  v102 = vaddq_f32(vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B2244DD0, v36), (float32x4_t)xmmword_1B22458F0), (float32x4_t)0);
                  v104 = vaddq_f32(vaddq_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, v36), (float32x4_t)0), (float32x4_t)xmmword_1B22458F0);
                  v106 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v117.f32[0]), v102, *(float32x2_t *)v117.f32, 1), v100, v117, 2), v98, v117, 3);
                  v105 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v115.f32[0]), v102, *(float32x2_t *)v115.f32, 1), v100, v115, 2), v98, v115, 3);
                  v37 = cosf(v50);
                  v38 = cosf(v44 * 0.5) - v37;
                  v39 = 1.0 / v38;
                  *((float32x4_t *)v31 - 16) = v113;
                  *((float32x4_t *)v31 - 15) = v114;
                  *((float32x4_t *)v31 - 14) = v123;
                  *((float32x4_t *)v31 - 13) = v120;
                  *((float32x4_t *)v31 - 12) = v117;
                  *((float32x4_t *)v31 - 11) = v115;
                  *((float32x4_t *)v31 - 10) = v104;
                  *((float32x4_t *)v31 - 9) = v102;
                  v40 = v38 < 0.00000011921;
                  *((float32x4_t *)v31 - 8) = v100;
                  *((float32x4_t *)v31 - 7) = v98;
                  *((float32x4_t *)v31 - 6) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v123.f32[0]), v102, *(float32x2_t *)v123.f32, 1), v100, v123, 2), v98, v123, 3);
                  *((float32x4_t *)v31 - 5) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v120.f32[0]), v102, *(float32x2_t *)v120.f32, 1), v100, v120, 2), v98, v120, 3);
                  v41 = 8388600.0;
                  if (!v40)
                    v41 = v39;
                  *((float32x4_t *)v31 - 4) = v106;
                  *((float32x4_t *)v31 - 3) = v105;
                  *(v31 - 4) = 0;
                  *(v31 - 3) = 0;
                  *((_DWORD *)v31 - 4) = 0;
                  *((float *)v31 - 3) = 1.0 / (float)(v42 * v42);
                  *((float *)v31 - 2) = v41;
                  *((float *)v31 - 1) = -(float)(v37 * v41);
                  *v31 = 0;
                  v31[1] = 0;
                  *(_QWORD *)((char *)v31 + 13) = 0;
                }
                v29 += 8;
                ++v28;
                v30 += 6;
                v31 += 36;
                ++v16;
                --v20;
              }
              while (v20);
              goto LABEL_27;
            }
          }
          else if ((_DWORD)v122 != (_DWORD)v119)
          {
            v52 = (float32x2_t *)(v26 + (v122 << 6) + 32);
            v53 = (float32x4_t *)(v27 + 16 * v122);
            v54 = (float *)(v25 + 24 * v122 + 12);
            v55 = v119 - v122;
            v56 = (_QWORD *)(v77 + 288 * v16);
            v9 = v125;
            do
            {
              if (v16 <= 7)
              {
                v66 = *(v54 - 2);
                v67 = *(v54 - 1);
                v68 = *v54;
                v69 = v54[1];
                v70 = v54[2];
                v109 = *v53;
                v112 = *(v54 - 3);
                v143.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v52[-4].f32)), a4, v52[-4], 1), a5, *(float32x4_t *)v52[-4].f32, 2), a6, *(float32x4_t *)v52[-4].f32, 3);
                v143.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v52[-2].f32)), a4, v52[-2], 1), a5, *(float32x4_t *)v52[-2].f32, 2), a6, *(float32x4_t *)v52[-2].f32, 3);
                v143.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v52->f32)), a4, *v52, 1), a5, *(float32x4_t *)v52->f32, 2), a6, *(float32x4_t *)v52->f32, 3);
                v127 = *(float32x4_t *)v52[2].f32;
                v143.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, v127.f32[0]), a4, v52[2], 1), a5, v127, 2), a6, v127, 3);
                v144 = __invert_f4(v143);
                v121 = (float32x4_t)v144.columns[1];
                v124 = (float32x4_t)v144.columns[0];
                v116 = (float32x4_t)v144.columns[3];
                v118 = (float32x4_t)v144.columns[2];
                v71 = v69 + 0.0001;
                if (v69 < 0.0001)
                  v71 = 0.0002;
                v72 = fmaxf(v69, 0.0001);
                if (v70 > v71)
                  v73 = v70;
                else
                  v73 = v71;
                v74 = v67 * 0.5;
                v75 = tanf(v74);
                if ((LODWORD(v73) & 0x7FFFFFFF) == 0x7F800000)
                {
                  v58 = -v72;
                  v57 = (float32x4_t)xmmword_1B2284DE0;
                }
                else
                {
                  v57.i64[0] = 0;
                  v57.f32[2] = v73 / (float)(v72 - v73);
                  v57.i32[3] = -1.0;
                  v58 = (float)(v73 * v72) / (float)(v72 - v73);
                }
                v59 = vdivq_f32(vmulq_f32(vmulq_n_f32(v109, v112), v92), v91);
                v60 = vsubq_f32(v127, a2);
                v128 = v88;
                v59.i32[3] = v86;
                v60.i32[3] = v90;
                v108 = v60;
                v111 = v59;
                v61 = 1.0 / v75;
                v85 = vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B2244DF0, v58), (float32x4_t)0);
                v87 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, v57.f32[0]), (float32x4_t)xmmword_1B2244DD0, *(float32x2_t *)v57.f32, 1), (float32x4_t)xmmword_1B2244DF0, v57, 2), (float32x4_t)xmmword_1B2244E10, v57, 3);
                v99 = vaddq_f32(vaddq_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, v61), (float32x4_t)0), (float32x4_t)xmmword_1B22458F0);
                v89 = vaddq_f32(vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B2244DD0, v61), (float32x4_t)xmmword_1B22458F0), (float32x4_t)0);
                v103 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v118.f32[0]), v89, *(float32x2_t *)v118.f32, 1), v87, v118, 2), v85, v118, 3);
                v101 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v116.f32[0]), v89, *(float32x2_t *)v116.f32, 1), v87, v116, 2), v85, v116, 3);
                v62 = cosf(v74);
                v63 = cosf(v68 * 0.5) - v62;
                v64 = 1.0 / v63;
                *((float32x4_t *)v56 - 16) = v111;
                *((float32x4_t *)v56 - 15) = v108;
                *((float32x4_t *)v56 - 14) = v124;
                *((float32x4_t *)v56 - 13) = v121;
                *((float32x4_t *)v56 - 12) = v118;
                *((float32x4_t *)v56 - 11) = v116;
                *((float32x4_t *)v56 - 10) = v99;
                *((float32x4_t *)v56 - 9) = v89;
                v40 = v63 < 0.00000011921;
                *((float32x4_t *)v56 - 8) = v87;
                *((float32x4_t *)v56 - 7) = v85;
                *((float32x4_t *)v56 - 6) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v124.f32[0]), v89, *(float32x2_t *)v124.f32, 1), v87, v124, 2), v85, v124, 3);
                *((float32x4_t *)v56 - 5) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v121.f32[0]), v89, *(float32x2_t *)v121.f32, 1), v87, v121, 2), v85, v121, 3);
                v65 = 8388600.0;
                if (!v40)
                  v65 = v64;
                *((float32x4_t *)v56 - 4) = v103;
                *((float32x4_t *)v56 - 3) = v101;
                *(v56 - 4) = 0;
                *(v56 - 3) = 0;
                *((_DWORD *)v56 - 4) = 0;
                *((float *)v56 - 3) = 1.0 / (float)(v66 * v66);
                *((float *)v56 - 2) = v65;
                *((float *)v56 - 1) = -(float)(v62 * v65);
                *v56 = 0;
                v56[1] = 0;
                *(_QWORD *)((char *)v56 + 13) = 0;
                v88 = v128;
                v90 = v108.i32[3];
                v86 = v111.i32[3];
              }
              v52 += 8;
              ++v53;
              v54 += 6;
              v56 += 36;
              ++v16;
              --v55;
            }
            while (v55);
            goto LABEL_27;
          }
          v9 = v125;
LABEL_27:
          v13 = v78;
          sub_1B1F05D48(v140, (unsigned __int16 **)v137, (uint64_t)v139);
          sub_1B1F03804((char *)v19);
          ecs_stack_allocator_pop_snapshot(v78);
          if ((v84 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
          }
          swift_release();
          v14 = v83 + 1;
          if (v83 + 1 == v82)
            return sub_1B19ED748(v76);
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1B1D97110(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *result;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float32x4_t *v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  float32x4_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  _BYTE __src[288];
  _BYTE v58[288];
  _QWORD v59[8];
  _OWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _OWORD v67[2];
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;

  v11 = v10;
  v74 = a10;
  sub_1B1A025EC(a8, (uint64_t)v59, (uint64_t (*)(_QWORD))sub_1B1D98A14);
  result = (uint64_t *)sub_1B1A025EC(a8, (uint64_t)v60, (uint64_t (*)(_QWORD))sub_1B1D98A14);
  if (*(_QWORD *)&v60[0])
  {
    if (v66 >= 1)
    {
      v44 = v63;
      if (v63)
      {
        v38 = (uint64_t *)a8;
        v14 = v65;
        v15 = v65[4];
        v50 = *(unsigned __int8 *)(v64 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v67[0] = v60[0];
        v67[1] = v60[1];
        v68 = v61;
        v41 = (uint64_t)(v65 + 6);
        v42 = v62;
        v40 = v65 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v16 = 0;
        v43 = v15;
        do
        {
          v48 = v16;
          v49 = v11;
          v17 = (unsigned int *)(v42 + 48 * v16);
          v46 = *v17;
          v18 = v17[2];
          v45 = v17[1];
          v20 = (uint64_t *)*((_QWORD *)v17 + 2);
          v19 = *((_QWORD *)v17 + 3);
          v22 = *((_QWORD *)v17 + 4);
          v21 = *((_QWORD *)v17 + 5);
          if (v50)
          {
            v23 = *(os_unfair_lock_s **)(v21 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v23);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v15);
          sub_1B19F66A0(v41, (uint64_t)v69, &qword_1ED4B7FB0);
          v24 = v14[4];
          v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v14[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
          v14[7] = v25;
          v40[1] = 0;
          v40[2] = 0;
          *v40 = 0;
          swift_release();
          v26 = sub_1B1A12038((uint64_t)&type metadata for SpotLight, (uint64_t)&off_1E63C5190, v20, v19, v22, (uint64_t)v14);
          v47 = sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v20, v19, v22, (uint64_t)v14);
          v27 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, v20, v19, v22, (uint64_t)v14);
          v28 = sub_1B1A12038((uint64_t)&type metadata for Shadow, (uint64_t)&off_1E63BCD78, v20, v19, v22, (uint64_t)v14);
          if (v20)
          {
            if (v22)
            {
              v29 = (uint64_t *)(v28 + 8);
              v30 = (char *)(a1 + 288 * v18);
              v31 = v47 + 32;
              do
              {
                if (v18 <= 7)
                {
                  v70 = *(_OWORD *)v26;
                  v71 = *(_QWORD *)(v26 + 16);
                  sub_1B1D96438((uint64_t)&v70, *((_DWORD *)v29 - 2), *v29, a9, v74, (uint64_t)__src, *(simd_float4 *)(v31 - 32), *(simd_float4 *)(v31 - 16), *(simd_float4 *)v31, *(float32x4_t *)(v31 + 16), *v27, a2, a3, a4, a5, a6);
                  memcpy(v30, __src, 0x120uLL);
                }
                v29 += 2;
                ++v18;
                v30 += 288;
                ++v27;
                v26 += 24;
                v31 += 64;
                --v22;
              }
              while (v22);
            }
          }
          else if ((_DWORD)v46 != (_DWORD)v45)
          {
            v32 = (uint64_t *)(v28 + 16 * v46 + 8);
            v33 = (char *)(a1 + 288 * v18);
            v34 = v45 - v46;
            v35 = &v27[v46];
            v36 = v26 + 24 * v46;
            v37 = v47 + (v46 << 6) + 32;
            do
            {
              if (v18 <= 7)
              {
                v72 = *(_OWORD *)v36;
                v73 = *(_QWORD *)(v36 + 16);
                sub_1B1D96438((uint64_t)&v72, *((_DWORD *)v32 - 2), *v32, a9, v74, (uint64_t)v58, *(simd_float4 *)(v37 - 32), *(simd_float4 *)(v37 - 16), *(simd_float4 *)v37, *(float32x4_t *)(v37 + 16), *v35, a2, a3, a4, a5, a6);
                memcpy(v33, v58, 0x120uLL);
              }
              v32 += 2;
              ++v18;
              v33 += 288;
              ++v35;
              v36 += 24;
              v37 += 64;
              --v34;
            }
            while (v34);
          }
          sub_1B1F05D48(v14, (unsigned __int16 **)v67, (uint64_t)v69);
          v11 = v49;
          sub_1B1F03804((char *)v21);
          v15 = v43;
          ecs_stack_allocator_pop_snapshot(v43);
          if ((v50 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
          }
          swift_release();
          v16 = v48 + 1;
        }
        while (v48 + 1 != v44);
        return sub_1B19ED748(v38);
      }
    }
  }
  return result;
}

uint64_t sub_1B1D9758C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  const void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char *v22;
  id v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t result;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  _OWORD __dst[1628];
  uint64_t v38;

  MEMORY[0x1E0C80A78](a1, a2);
  v33 = v2;
  v34 = v3;
  v32 = v4;
  v6 = v5;
  v38 = *MEMORY[0x1E0C80C00];
  memcpy(__dst, v7, sizeof(__dst));
  swift_retain();
  v8 = (void *)sub_1B1D22DA8(0, 26048);
  v10 = v9;
  v12 = v11;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v35 = 0;
    v36 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    swift_bridgeObjectRelease();
    v13 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v35 = 0;
    swift_retain();
    sub_1B1F1AD70(v13, &v35, 0xD000000000000040, 0x80000001B233B7D0);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    v14 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    v15 = v8;
    memcpy(&v14[v10], __dst, 0x65C0uLL);
    swift_release();
  }
  swift_unknownObjectRelease();
  *(_QWORD *)v6 = v8;
  *(_QWORD *)(v6 + 8) = v10;
  *(_QWORD *)(v6 + 16) = v12;
  *(_BYTE *)(v6 + 50) = v32 > 0;
  *(_BYTE *)(v6 + 49) = v33 > 0;
  *(_BYTE *)(v6 + 48) = v34 > 0;
  sub_1B2164F54((uint64_t)__dst);
  swift_retain();
  v16 = (void *)sub_1B1D22DA8(0, 208);
  v18 = v17;
  v20 = v19;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v35 = 0;
    v36 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    swift_bridgeObjectRelease();
    v21 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v35 = 0;
    swift_retain();
    sub_1B1F1AD70(v21, &v35, 0xD000000000000039, 0x80000001B233B790);
    swift_release();
    swift_release();
  }
  else
  {
    v22 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    v23 = v16;
    v24 = &v22[v18];
    v25 = __dst[11];
    *((_OWORD *)v24 + 10) = __dst[10];
    *((_OWORD *)v24 + 11) = v25;
    *((_OWORD *)v24 + 12) = __dst[12];
    v26 = __dst[7];
    *((_OWORD *)v24 + 6) = __dst[6];
    *((_OWORD *)v24 + 7) = v26;
    v27 = __dst[9];
    *((_OWORD *)v24 + 8) = __dst[8];
    *((_OWORD *)v24 + 9) = v27;
    v28 = __dst[3];
    *((_OWORD *)v24 + 2) = __dst[2];
    *((_OWORD *)v24 + 3) = v28;
    v29 = __dst[5];
    *((_OWORD *)v24 + 4) = __dst[4];
    *((_OWORD *)v24 + 5) = v29;
    v30 = __dst[1];
    *(_OWORD *)v24 = __dst[0];
    *((_OWORD *)v24 + 1) = v30;
  }
  swift_release();
  result = swift_unknownObjectRelease();
  *(_QWORD *)(v6 + 24) = v16;
  *(_QWORD *)(v6 + 32) = v18;
  *(_QWORD *)(v6 + 40) = v20;
  return result;
}

uint64_t sub_1B1D97970()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B1D979BC()
{
  sub_1B1D97970();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PrepareLightsSystem()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for AmbientLight()
{
  return &type metadata for AmbientLight;
}

ValueMetadata *type metadata accessor for SpotLight()
{
  return &type metadata for SpotLight;
}

ValueMetadata *type metadata accessor for PointLight()
{
  return &type metadata for PointLight;
}

ValueMetadata *type metadata accessor for DirectionalLight()
{
  return &type metadata for DirectionalLight;
}

uint64_t sub_1B1D97A3C()
{
  uint64_t v0;
  uint64_t inited;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v12[40];
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  _BYTE v17[40];
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[2];
  uint64_t v21;
  _BYTE v22[40];
  _OWORD v23[2];
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v65 = qword_1ED4D09F8;
  v66 = 0;
  v67 = 2;
  v68 = 0;
  v69 = 2;
  v70 = 0;
  swift_retain();
  sub_1B1B45E74((uint64_t)v12);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = &type metadata for Shadow;
  *(_QWORD *)(inited + 40) = &off_1E63BCDF0;
  sub_1B1B44110(v13, inited);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v12);
  v2 = v13[1];
  *(_OWORD *)(v0 + 16) = v13[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 48) = v14;
  v59 = qword_1ED4D09F8;
  v60 = 0;
  v61 = 2;
  v62 = 0;
  v63 = 2;
  v64 = 0;
  swift_retain();
  sub_1B1D90D2C((uint64_t)v15);
  swift_release();
  v3 = v15[1];
  *(_OWORD *)(v0 + 56) = v15[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 88) = v16;
  v53 = qword_1ED4D09F8;
  v54 = 0;
  v55 = 2;
  v56 = 0;
  v57 = 2;
  v58 = 0;
  swift_retain();
  sub_1B1B46090((uint64_t)v17);
  swift_release();
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v4 + 32) = &type metadata for Shadow;
  *(_QWORD *)(v4 + 40) = &off_1E63BCDF0;
  sub_1B1B44110(v18, v4);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v17);
  v5 = v18[1];
  *(_OWORD *)(v0 + 96) = v18[0];
  *(_OWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 128) = v19;
  v47 = qword_1ED4D09F8;
  v48 = 0;
  v49 = 2;
  v50 = 0;
  v51 = 2;
  v52 = 0;
  swift_retain();
  sub_1B1D90F58((uint64_t)v20);
  swift_release();
  v6 = v20[1];
  *(_OWORD *)(v0 + 136) = v20[0];
  *(_OWORD *)(v0 + 152) = v6;
  *(_QWORD *)(v0 + 168) = v21;
  v41 = qword_1ED4D09F8;
  v42 = 0;
  v43 = 2;
  v44 = 0;
  v45 = 2;
  v46 = 0;
  swift_retain();
  sub_1B1B462AC((uint64_t)v22);
  swift_release();
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = &type metadata for Shadow;
  *(_QWORD *)(v7 + 40) = &off_1E63BCDF0;
  sub_1B1B44110(v23, v7);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v22);
  v8 = v23[1];
  *(_OWORD *)(v0 + 176) = v23[0];
  *(_OWORD *)(v0 + 192) = v8;
  *(_QWORD *)(v0 + 208) = v24;
  v35 = qword_1ED4D09F8;
  v36 = 0;
  v37 = 2;
  v38 = 0;
  v39 = 2;
  v40 = 0;
  swift_retain();
  sub_1B1D91184((uint64_t)v25);
  swift_release();
  v9 = v25[1];
  *(_OWORD *)(v0 + 216) = v25[0];
  *(_OWORD *)(v0 + 232) = v9;
  *(_QWORD *)(v0 + 248) = v26;
  v29 = qword_1ED4D09F8;
  v30 = 0;
  v31 = 2;
  v32 = 0;
  v33 = 2;
  v34 = 0;
  swift_retain();
  sub_1B19EE164((uint64_t)v27);
  swift_release();
  v10 = v27[1];
  *(_OWORD *)(v0 + 256) = v27[0];
  *(_OWORD *)(v0 + 272) = v10;
  *(_QWORD *)(v0 + 288) = v28;
  return v0;
}

uint64_t sub_1B1D97DD0()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1B1D97A3C();
  return v0;
}

const char *sub_1B1D97E04()
{
  return "PrepareLights";
}

uint64_t sub_1B1D97E18()
{
  return qword_1EEF5DE30 - 1;
}

uint64_t sub_1B1D97E28(uint64_t a1)
{
  _QWORD *v1;

  v1 = *(_QWORD **)(a1 + 176);
  swift_retain();
  sub_1B1F22258((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1E637F8B8, v1);
  return swift_release();
}

void sub_1B1D97E7C(uint64_t a1, uint64_t a2, uint64_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, __n128 a8, __n128 a9, __n128 a10, __n128 a11)
{
  void *v11;
  uint64_t v14;
  char *v15;
  id v16;
  _QWORD *v17;
  __int128 v18;
  float32x4_t v19;
  char *v20;
  __int128 v21;
  simd_float4x4 v30;

  v11 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v14 = *(_QWORD *)(a1 + 8);
    if (objc_msgSend(v11, sel_storageMode) != (id)2)
    {
      v15 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      v16 = v11;
      v17 = *(_QWORD **)(a2 + 176);
      swift_retain();
      sub_1B1F23AB8((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1E63A0688, v17);
      v21 = v18;
      swift_release();
      *(float32x2_t *)v19.f32 = vsub_f32(0, *(float32x2_t *)&v21);
      v19.f32[2] = 0.0 - *((float *)&v21 + 2);
      v19.i32[3] = 1.0;
      v30.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, a4.f32[0]), (float32x4_t)xmmword_1B2244DD0, *(float32x2_t *)a4.f32, 1), (float32x4_t)xmmword_1B2244D90, a4, 2), v19, a4, 3);
      v30.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, a5.f32[0]), (float32x4_t)xmmword_1B2244DD0, *(float32x2_t *)a5.f32, 1), (float32x4_t)xmmword_1B2244D90, a5, 2), v19, a5, 3);
      v30.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, a6.f32[0]), (float32x4_t)xmmword_1B2244DD0, *(float32x2_t *)a6.f32, 1), (float32x4_t)xmmword_1B2244D90, a6, 2), v19, a6, 3);
      v30.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B2244DB0, a7.f32[0]), (float32x4_t)xmmword_1B2244DD0, *(float32x2_t *)a7.f32, 1), (float32x4_t)xmmword_1B2244D90, a7, 2), v19, a7, 3);
      v20 = &v15[256 * *(_QWORD *)(a3 + 24) + v14];
      *(simd_float4x4 *)(v20 + 2144) = __invert_f4(v30);
      *((__n128 *)v20 + 138) = a8;
      *((__n128 *)v20 + 139) = a9;
      *((__n128 *)v20 + 140) = a10;
      *((__n128 *)v20 + 141) = a11;
    }
  }
}

uint64_t sub_1B1D98010(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7469736E65746E69 && a2 == 0xE900000000000079;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E65747865 && a2 == 0xE700000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B233B820)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1B1D9816C()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

float sub_1B1D981B4(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;

  sub_1B19F8E54(0, &qword_1ED4BAB00, (uint64_t (*)(void))sub_1B1D983E8, (uint64_t)&type metadata for DirectionalLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v14 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D983E8();
  sub_1B222A150();
  if (!v1)
  {
    v18 = 0;
    v10 = sub_1B222979C();
    if ((v10 & 0x100000000) != 0)
      v2 = 2145.7;
    else
      v2 = *(float *)&v10;
    v11 = a1[3];
    v12 = a1[4];
    sub_1B19FA070(a1, v11);
    if (sub_1B2067BAC(1047, v11, v12))
    {
      v15 = 1;
      sub_1B22297F0();
    }
    v17 = 2;
    sub_1B222979C();
    v16 = 3;
    sub_1B222979C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B1D983E8()
{
  unint64_t result;

  result = qword_1ED4B8D98;
  if (!qword_1ED4B8D98)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22948B4, &type metadata for DirectionalLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8D98);
  }
  return result;
}

float sub_1B1D9842C(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1B19F8E54(0, &qword_1ED4BAA40, (uint64_t (*)(void))sub_1B1D98644, (uint64_t)&type metadata for PointLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v12 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D98644();
  sub_1B222A150();
  if (!v1)
  {
    v16 = 0;
    v10 = sub_1B222979C();
    if ((v10 & 0x100000000) != 0)
      v2 = 2145.7;
    else
      v2 = *(float *)&v10;
    v15 = 1;
    sub_1B222979C();
    v14 = 2;
    sub_1B222979C();
    v13 = 3;
    sub_1B222979C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B1D98644()
{
  unint64_t result;

  result = qword_1ED4B7BE8;
  if (!qword_1ED4B7BE8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294864, &type metadata for PointLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B7BE8);
  }
  return result;
}

uint64_t sub_1B1D98688@<X0>(_QWORD *a1@<X0>, float *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float *v10;
  uint64_t v11;
  float v12;
  uint64_t v13;
  float v14;
  uint64_t v15;
  float v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  float *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v25 = a2;
  sub_1B19F8E54(0, &qword_1EEF5E740, (uint64_t (*)(void))sub_1B1D9892C, (uint64_t)&type metadata for SpotLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v24 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D9892C();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v25;
  v31 = 0;
  v11 = sub_1B222979C();
  if ((v11 & 0x100000000) != 0)
    v12 = 2145.7;
  else
    v12 = *(float *)&v11;
  v30 = 1;
  v13 = sub_1B222979C();
  if ((v13 & 0x100000000) != 0)
    v14 = 10.0;
  else
    v14 = *(float *)&v13;
  v29 = 2;
  v15 = sub_1B222979C();
  if ((v15 & 0x100000000) != 0)
    v16 = 1.0472;
  else
    v16 = *(float *)&v15;
  v28 = 3;
  v17 = sub_1B222979C();
  if ((v17 & 0x100000000) != 0)
    v18 = 0.7854;
  else
    v18 = *(float *)&v17;
  v27 = 4;
  v19 = sub_1B222979C();
  v26 = 5;
  v21 = sub_1B222979C();
  if ((v19 & 0x100000000) != 0)
    v22 = 0.01;
  else
    v22 = *(float *)&v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if ((v21 & 0x100000000) != 0)
    v23 = 10.0;
  else
    v23 = *(float *)&v21;
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *v10 = v12;
  v10[1] = v14;
  v10[2] = v16;
  v10[3] = v18;
  v10[4] = v22;
  v10[5] = v23;
  return result;
}

unint64_t sub_1B1D9892C()
{
  unint64_t result;

  result = qword_1EEF5E748;
  if (!qword_1EEF5E748)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294814, &type metadata for SpotLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E748);
  }
  return result;
}

uint64_t sub_1B1D98970()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1D98994()
{
  return swift_deallocObject();
}

uint64_t sub_1B1D989A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1D9758C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B1D989C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = **(_QWORD **)(v1 + 16);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

void sub_1B1D98A14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B83F8)
  {
    sub_1B1D98DCC(255, &qword_1ED4B83F0);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B83F8);
  }
}

void sub_1B1D98A80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B8348[0])
  {
    sub_1B1D98EC4(255, &qword_1ED4B8340);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, qword_1ED4B8348);
  }
}

uint64_t sub_1B1D98AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1791524(0, &qword_1ED4B8268, (uint64_t (*)(uint64_t))sub_1B1D98B48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B1D98B48()
{
  uint64_t result;

  result = qword_1ED4B8260;
  if (!qword_1ED4B8260)
    type metadata accessor for QueryResult2();
  return result;
}

void sub_1B1D98BBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B83D8)
  {
    sub_1B1D98DCC(255, &qword_1ED4B83D0);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B83D8);
  }
}

double sub_1B1D98C28(float32x4_t _Q0)
{
  float v10;
  double v11;

  _S3 = _Q0.u32[1];
  _S5 = _Q0.u32[2];
  __asm { FMLS            S1, S5, V0.S[2] }
  _S7 = _Q0.u32[3];
  __asm { FMLA            S1, S7, V0.S[3] }
  v10 = vmlas_n_f32(vmuls_lane_f32(_Q0.f32[2], _Q0, 3), _Q0.f32[1], _Q0.f32[0]);
  LODWORD(v11) = _S1;
  *((float *)&v11 + 1) = v10 + v10;
  __asm
  {
    FMLA            S6, S3, V0.S[1]
    FMLA            S6, S7, V0.S[3]
    FMLS            S6, S0, V0.S[0]
    FMLA            S18, S5, V0.S[1]
    FMLA            S17, S0, V0.S[2]
    FMLA            S16, S5, V0.S[1]
    FMLA            S7, S5, V0.S[2]
    FMLS            S7, S0, V0.S[0]
    FMLS            S7, S3, V0.S[1]
  }
  return v11;
}

void sub_1B1D98CF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B8328)
  {
    sub_1B1D98EC4(255, &qword_1ED4B8320);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B8328);
  }
}

void sub_1B1D98D60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B83E8)
  {
    sub_1B1D98DCC(255, &qword_1ED4B83E0);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B83E8);
  }
}

uint64_t sub_1B1D98DCC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    type metadata accessor for QueryResult4();
  return result;
}

void sub_1B1D98E58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B8338)
  {
    sub_1B1D98EC4(255, &qword_1ED4B8330);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B8338);
  }
}

uint64_t sub_1B1D98EC4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    type metadata accessor for QueryResult3();
  return result;
}

unint64_t sub_1B1D98F3C()
{
  unint64_t result;

  result = qword_1ED4B7F60;
  if (!qword_1ED4B7F60)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22947C4, &type metadata for AmbientLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B7F60);
  }
  return result;
}

uint64_t *sub_1B1D98F80(uint64_t *a1)
{
  sub_1B1A086A4(*a1);
  return a1;
}

void sub_1B1D98FD0(uint64_t a1)
{
  sub_1B1D98FE4(a1);
}

void sub_1B1D98FE4(uint64_t a1)
{
  uint64_t v1;

  sub_1B1D97E7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(float32x4_t *)(v1 + 32), *(float32x4_t *)(v1 + 48), *(float32x4_t *)(v1 + 64), *(float32x4_t *)(v1 + 80), *(__n128 *)(v1 + 96), *(__n128 *)(v1 + 112), *(__n128 *)(v1 + 128), *(__n128 *)(v1 + 144));
}

uint64_t getEnumTagSinglePayload for ShaderArgument.TextureDesc(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderArgument.TextureDesc(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RectAreaLight()
{
  return &type metadata for RectAreaLight;
}

uint64_t storeEnumTagSinglePayload for AmbientLight.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1D990F4 + 4 * byte_1B229408C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1D99114 + 4 * byte_1B2294091[v4]))();
}

_BYTE *sub_1B1D990F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1D99114(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1D9911C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1D99124(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1D9912C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1D99134(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AmbientLight.CodingKeys()
{
  return &type metadata for AmbientLight.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SpotLight.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B1D9919C + 4 * byte_1B229409B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B1D991D0 + 4 * byte_1B2294096[v4]))();
}

uint64_t sub_1B1D991D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D991D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1D991E0);
  return result;
}

uint64_t sub_1B1D991EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1D991F4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B1D991F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D99200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpotLight.CodingKeys()
{
  return &type metadata for SpotLight.CodingKeys;
}

ValueMetadata *type metadata accessor for PointLight.CodingKeys()
{
  return &type metadata for PointLight.CodingKeys;
}

uint64_t _s3VFX10PointLightV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B1D9927C + 4 * byte_1B22940A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B1D992B0 + 4 * byte_1B22940A0[v4]))();
}

uint64_t sub_1B1D992B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D992B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1D992C0);
  return result;
}

uint64_t sub_1B1D992CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1D992D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B1D992D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D992E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirectionalLight.CodingKeys()
{
  return &type metadata for DirectionalLight.CodingKeys;
}

uint64_t destroy for LightsUniforms()
{
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for LightsUniforms(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LightsUniforms(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t assignWithTake for LightsUniforms(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for LightsUniforms(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 51))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LightsUniforms(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LightsUniforms()
{
  return &type metadata for LightsUniforms;
}

unint64_t sub_1B1D99558()
{
  unint64_t result;

  result = qword_1EEF5E760;
  if (!qword_1EEF5E760)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294484, &type metadata for DirectionalLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E760);
  }
  return result;
}

unint64_t sub_1B1D995A0()
{
  unint64_t result;

  result = qword_1EEF5E768;
  if (!qword_1EEF5E768)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294574, &type metadata for PointLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E768);
  }
  return result;
}

unint64_t sub_1B1D995E8()
{
  unint64_t result;

  result = qword_1EEF5E770;
  if (!qword_1EEF5E770)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294664, &type metadata for SpotLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E770);
  }
  return result;
}

unint64_t sub_1B1D99630()
{
  unint64_t result;

  result = qword_1EEF5E778;
  if (!qword_1EEF5E778)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229471C, &type metadata for AmbientLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E778);
  }
  return result;
}

unint64_t sub_1B1D99678()
{
  unint64_t result;

  result = qword_1ED4B7F70;
  if (!qword_1ED4B7F70)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229468C, &type metadata for AmbientLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B7F70);
  }
  return result;
}

unint64_t sub_1B1D996C0()
{
  unint64_t result;

  result = qword_1ED4B7F68;
  if (!qword_1ED4B7F68)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22946B4, &type metadata for AmbientLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B7F68);
  }
  return result;
}

unint64_t sub_1B1D99708()
{
  unint64_t result;

  result = qword_1EEF5E780;
  if (!qword_1EEF5E780)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229459C, &type metadata for SpotLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E780);
  }
  return result;
}

unint64_t sub_1B1D99750()
{
  unint64_t result;

  result = qword_1EEF5E788;
  if (!qword_1EEF5E788)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22945C4, &type metadata for SpotLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E788);
  }
  return result;
}

unint64_t sub_1B1D99798()
{
  unint64_t result;

  result = qword_1ED4B7BF8;
  if (!qword_1ED4B7BF8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22944AC, &type metadata for PointLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B7BF8);
  }
  return result;
}

unint64_t sub_1B1D997E0()
{
  unint64_t result;

  result = qword_1ED4B7BF0;
  if (!qword_1ED4B7BF0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22944D4, &type metadata for PointLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B7BF0);
  }
  return result;
}

unint64_t sub_1B1D99828()
{
  unint64_t result;

  result = qword_1ED4B8DA8;
  if (!qword_1ED4B8DA8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22943BC, &type metadata for DirectionalLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8DA8);
  }
  return result;
}

unint64_t sub_1B1D99870()
{
  unint64_t result;

  result = qword_1ED4B8DA0;
  if (!qword_1ED4B8DA0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22943E4, &type metadata for DirectionalLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8DA0);
  }
  return result;
}

float sub_1B1D998B4(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  float v10;
  _BYTE v12[48];

  sub_1B19F8E54(0, &qword_1EEF5E790, (uint64_t (*)(void))sub_1B1D99AA8, (uint64_t)&type metadata for RectAreaLight.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = &v12[-v8];
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D99AA8();
  sub_1B222A150();
  if (!v1)
  {
    v12[47] = 0;
    sub_1B22297F0();
    v2 = v10;
    sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    v12[46] = 1;
    sub_1B1B7283C((unint64_t *)&qword_1ED4B72F0, MEMORY[0x1E0DEDD40]);
    sub_1B2229814();
    v12[45] = 2;
    sub_1B22297D8();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B1D99AA8()
{
  unint64_t result;

  result = qword_1EEF5E798;
  if (!qword_1EEF5E798)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22949CC, &type metadata for RectAreaLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E798);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RectAreaLight.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1D99B38 + 4 * byte_1B22940AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1D99B6C + 4 * byte_1B22940AA[v4]))();
}

uint64_t sub_1B1D99B6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D99B74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1D99B7CLL);
  return result;
}

uint64_t sub_1B1D99B88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1D99B90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1D99B94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D99B9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RectAreaLight.CodingKeys()
{
  return &type metadata for RectAreaLight.CodingKeys;
}

unint64_t sub_1B1D99BBC()
{
  unint64_t result;

  result = qword_1EEF5E7A8;
  if (!qword_1EEF5E7A8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22949A4, &type metadata for RectAreaLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E7A8);
  }
  return result;
}

unint64_t sub_1B1D99C04()
{
  unint64_t result;

  result = qword_1EEF5E7B0;
  if (!qword_1EEF5E7B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294914, &type metadata for RectAreaLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E7B0);
  }
  return result;
}

unint64_t sub_1B1D99C4C()
{
  unint64_t result;

  result = qword_1EEF5E7B8;
  if (!qword_1EEF5E7B8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229493C, &type metadata for RectAreaLight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E7B8);
  }
  return result;
}

uint64_t sub_1B1D99C90()
{
  return type metadata accessor for ParticleNoiseSystem();
}

void sub_1B1D99CAC(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1036831949;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 1042536202;
  *(_BYTE *)(a1 + 36) = 0;
  *(_QWORD *)(a1 + 40) = 3;
  *(_BYTE *)(a1 + 48) = 0;
}

void sub_1B1D99CDC(char *a1)
{
  sub_1B1F8FD88(*a1);
}

void sub_1B1D99CE8()
{
  char *v0;

  sub_1B1FB2904(*v0);
}

void sub_1B1D99CF0()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1D99D28()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1D99DB4(uint64_t a1)
{
  char *v1;

  sub_1B1DB5E98(a1, *v1);
}

uint64_t sub_1B1D99DBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1D9CE80();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D99DE8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1D99E14 + 4 * byte_1B2294A36[*v0]))();
}

void sub_1B1D99E14(_QWORD *a1@<X8>)
{
  *a1 = 1935763810;
  a1[1] = 0xE400000000000000;
}

void sub_1B1D99E28(_QWORD *a1@<X8>)
{
  *a1 = 0x7469736E65746E69;
  a1[1] = 0xE900000000000079;
}

void sub_1B1D99E4C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6573696F6ELL;
  a1[1] = v1;
}

void sub_1B1D99E60(_QWORD *a1@<X8>)
{
  *a1 = 0x657A6974726F6D61;
  a1[1] = 0xE900000000000064;
}

void sub_1B1D99E80(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69736E656D6964;
  a1[1] = 0xEA0000000000736ELL;
}

uint64_t sub_1B1D99EA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1D99ECC + 4 * byte_1B2294A3C[*v0]))(0x656C616373, 0xE500000000000000);
}

uint64_t sub_1B1D99ECC()
{
  return 1935763810;
}

uint64_t sub_1B1D99EDC()
{
  return 0x7469736E65746E69;
}

uint64_t sub_1B1D99EFC()
{
  return 0x6573696F6ELL;
}

uint64_t sub_1B1D99F0C()
{
  return 0x657A6974726F6D61;
}

uint64_t sub_1B1D99F28()
{
  return 0x6F69736E656D6964;
}

uint64_t sub_1B1D99F44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1D9CE80();
  *a1 = result;
  return result;
}

uint64_t sub_1B1D99F68()
{
  sub_1B1D9D774();
  return sub_1B222A1D4();
}

uint64_t sub_1B1D99F90()
{
  sub_1B1D9D774();
  return sub_1B222A1E0();
}

uint64_t sub_1B1D99FB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v12;
  char v13;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5E7C8, (uint64_t (*)(void))sub_1B1D9D774, (uint64_t)&type metadata for ParticleNoise.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D9D774();
  sub_1B222A180();
  LOBYTE(v12) = 0;
  sub_1B2229934();
  if (!v2)
  {
    v12 = *(_OWORD *)(v3 + 16);
    v13 = 1;
    sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    sub_1B1B49FDC((unint64_t *)&qword_1ED4B72F8, MEMORY[0x1E0DEDD60]);
    sub_1B2229958();
    LOBYTE(v12) = 2;
    sub_1B2229934();
    LOBYTE(v12) = *(_BYTE *)(v3 + 36);
    v13 = 3;
    sub_1B1A7144C();
    sub_1B2229958();
    LOBYTE(v12) = 4;
    sub_1B222991C();
    LOBYTE(v12) = 5;
    sub_1B2229940();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B1D9A1F4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  char v8;

  sub_1B1D9D430(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_BYTE *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1B1D9A23C(_QWORD *a1)
{
  return sub_1B1D99FB8(a1);
}

uint64_t type metadata accessor for ParticleNoise.GPUSystem()
{
  return objc_opt_self();
}

const char *sub_1B1D9A274()
{
  return "ParticleNoise.GPU";
}

uint64_t sub_1B1D9A288()
{
  return type metadata accessor for ParticleNoise.GPUSystem();
}

__n128 sub_1B1D9A2A4@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;

  result.n128_u64[0] = 0xFFFFFFFFLL;
  result.n128_u64[1] = 0xFFFFFFFFLL;
  *a1 = result;
  a1[1] = result;
  a1[2] = result;
  return result;
}

uint64_t sub_1B1D9A2B4()
{
  sub_1B222A06C();
  sub_1B222A084();
  sub_1B222A078();
  return sub_1B222A0C0();
}

uint64_t sub_1B1D9A310()
{
  sub_1B222A084();
  return sub_1B222A078();
}

uint64_t sub_1B1D9A34C()
{
  sub_1B222A06C();
  sub_1B222A084();
  sub_1B222A078();
  return sub_1B222A0C0();
}

BOOL sub_1B1D9A3A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
}

uint64_t sub_1B1D9A3D0@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  double Default;
  char v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  char *v25;
  unint64_t v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t result;
  uint64_t v34;
  __int16 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  int16x8_t v44;
  void *v45;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  __int16 v57;
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  int v63;
  _QWORD v64[7];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v6 = a2;
  v7 = 0x80000001B233B990;
  v8 = 0x80000001B233B950;
  if (a3 == 2)
    v8 = 0x80000001B233B970;
  if (a3 != 1)
    v7 = v8;
  v9 = 0x62665F44316E6567;
  v10 = 0x62665F44336E6567;
  if (a3 == 2)
    v10 = 0x62665F44326E6567;
  if (a3 != 1)
    v9 = v10;
  if (a2 == 1)
    v11 = v9;
  else
    v11 = 0xD000000000000010;
  if (a2 == 1)
    v12 = 0xEF6573696F6E5F6DLL;
  else
    v12 = v7;
  sub_1B222A0CC();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  v67 = v49;
  v68 = v50;
  v69 = v51;
  v65 = v47;
  v66 = v48;
  v13 = sub_1B222A0B4();
  v64[0] = v11;
  v64[1] = v12;
  v64[2] = 0;
  v64[3] = 0;
  v64[4] = MEMORY[0x1E0DEE9D8];
  v64[5] = 0;
  v64[6] = v13;
  v14 = sub_1B1B3947C((uint64_t)v64, 0, 0);
  v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  v45 = v14;
  if (!v14)
    goto LABEL_38;
  v17 = 7;
  if (a3 == 2)
    v17 = 2;
  v18 = a3 == 1 ? 0 : v17;
  Default = RGTextureDescriptorMakeDefault((uint64_t)&v47);
  v20 = BYTE10(v47);
  v21 = v50;
  v22 = v51;
  LODWORD(Default) = DWORD2(v51);
  v44 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&Default);
  if (v6 == 1)
  {
    v23 = 0xEF6573696F6E5F6DLL;
    if (a3 == 1)
      v24 = 829318503;
    else
      v24 = a3 == 2 ? 846095719 : 862872935;
    v26 = v24 | 0x62665F4400000000;
  }
  else
  {
    if (a3 == 1)
      v25 = "gen2D_curl_noise";
    else
      v25 = a3 == 2 ? "gen3D_curl_noise" : "ShaderTexture : texture type ";
    v23 = (unint64_t)v25 | 0x8000000000000000;
    v26 = 0xD000000000000010;
  }
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC6BB0]), sel_init);
  *(_QWORD *)&v47 = 0x1004000400040;
  WORD4(v47) = 257;
  BYTE10(v47) = v20;
  *(_QWORD *)&v48 = 125;
  *((_QWORD *)&v48 + 1) = v18;
  v49 = xmmword_1B2294DB0;
  v50 = v21;
  *(_QWORD *)&v51 = v22;
  DWORD2(v51) = vmovn_s16(v44).u32[0];
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v47, v27);
  v28 = sub_1B1F328F4(v27, v26, v23);
  swift_bridgeObjectRelease();

  if (v28)
  {
    v29 = objc_msgSend(*(id *)(a1 + 312), sel_commandBuffer);
    if (v29)
    {
      sub_1B2229454();
      v30 = (void *)sub_1B2228728();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_setLabel_, v30);

      sub_1B1BA11D0(v29);
    }
    swift_unknownObjectRetain();
    v31 = (void *)sub_1B1BA669C(0x657475706D6F43, 0xE700000000000000, v29);
    v32 = (void *)sub_1B2228728();
    objc_msgSend(v31, sel_pushDebugGroup_, v32);

    sub_1B1D9A974(v31, v28, v45);
    objc_msgSend(v31, sel_endEncoding);
    objc_msgSend(v31, sel_popDebugGroup);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    RGTextureDescriptor.init()((uint64_t)&v56);
    *(_QWORD *)&v48 = 0;
    v47 = 0uLL;
    BYTE8(v48) = 0;
    *(_QWORD *)&v49 = v56;
    WORD4(v49) = v57;
    BYTE10(v49) = v58;
    v50 = v59;
    v51 = v60;
    v52 = v61;
    v53 = v62;
    v54 = v63;
    v55 = MEMORY[0x1E0DEE9D8];
    swift_unknownObjectRetain();
    sub_1B210A53C(a1, v28, (uint64_t)&v47, v29, 0, 0);
    swift_unknownObjectRelease();
    objc_msgSend(v29, sel_commit);
    objc_msgSend(v29, sel_waitUntilCompleted);
    swift_unknownObjectRelease();
    result = swift_unknownObjectRelease();
    v34 = v48;
    v35 = WORD4(v49);
    v36 = BYTE10(v49);
    v37 = v53;
    v38 = v55;
    v39 = v49;
    v40 = v50;
    v41 = v51;
    v42 = v52;
    v43 = v54;
    *(_OWORD *)a4 = v47;
    *(_QWORD *)(a4 + 16) = v34;
    *(_BYTE *)(a4 + 24) = 1;
    *(_QWORD *)(a4 + 32) = v39;
    *(_WORD *)(a4 + 40) = v35;
    *(_BYTE *)(a4 + 42) = v36;
    *(_OWORD *)(a4 + 48) = v40;
    *(_OWORD *)(a4 + 64) = v41;
    *(_OWORD *)(a4 + 80) = v42;
    *(_QWORD *)(a4 + 96) = v37;
    *(_DWORD *)(a4 + 104) = v43;
    *(_QWORD *)(a4 + 112) = v38;
    *(_QWORD *)(a4 + 120) = v28;
  }
  else
  {
LABEL_38:
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1D9A974(void *a1, void *a2, void *a3)
{
  id v6;
  uint64_t v8;

  swift_getObjectType();
  objc_msgSend(a1, sel_setTexture_atIndex_, a2, 0);
  v6 = objc_msgSend(a2, sel_textureType);
  if (v6 == (id)7)
    return sub_1B1F40FDC(a3, (uint64_t)a2, 0);
  if (v6 == (id)2)
    return sub_1B1F40F48(a3, (uint64_t)a2, 0);
  if (!v6)
    return sub_1B1F40EF8(a3, (uint64_t)a2, 0);
  sub_1B1A02758(0, &qword_1ED4BAFF0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  sub_1B2229430();
  sub_1B2228890();
  objc_msgSend(a2, sel_textureType);
  type metadata accessor for MTLTextureType(0);
  sub_1B22295EC();
  sub_1B2228890();
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = 0xE000000000000000;
  sub_1B222A048();
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1B1D9AB4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  int32x2_t v12;
  float v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  __int16 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int32x4_t v25;
  int32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  int32x2_t v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  float v36;
  float v37;
  float v38;
  __int128 v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unsigned int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  os_unfair_lock_s *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  float32x4_t *v59;
  int v60;
  int v61;
  float32x4_t v62;
  double v63;
  float64x2_t v64;
  float32x4_t v65;
  float32_t v66;
  float32x4_t v67;
  float32x4_t v68;
  uint64_t v69;
  uint64_t v70;
  float32x4_t *v71;
  int v72;
  int v73;
  float32x4_t v74;
  double v75;
  float64x2_t v76;
  float32x4_t v77;
  float32_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float v82;
  float v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  float32x4_t v87;
  float32x4_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  float32x4_t v101;
  float32x4_t v102;
  char v103;
  float32x4_t v104;
  uint64_t v105;
  __int128 v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int *v111;
  unsigned int v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  os_unfair_lock_s *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  float32x4_t *v121;
  uint64_t v122;
  float32x4_t *v123;
  float32x4_t v124;
  uint64_t v125;
  float32x4_t *v126;
  float32x4_t *v127;
  float32x4_t v128;
  __int128 v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int *v134;
  unsigned int v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  os_unfair_lock_s *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  float32x4_t *v144;
  uint64_t v145;
  float32x4_t *v146;
  float32x4_t v147;
  uint64_t v148;
  float32x4_t *v149;
  float32x4_t *v150;
  float32x4_t v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int *v155;
  unsigned int v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  os_unfair_lock_s *v161;
  uint64_t v162;
  uint64_t v163;
  float32x4_t *v164;
  uint64_t v165;
  float32x4_t *v166;
  uint64_t v167;
  float32x4_t v168;
  uint64_t v169;
  float32x4_t v170;
  float32x4_t v171;
  uint64_t v172;
  float32x4_t *v173;
  float32x4_t *v174;
  float32x4_t v175;
  float32x4_t v176;
  float32x4_t v177;
  __int128 v178;
  float32x4_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  unsigned int *v183;
  unsigned int v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  os_unfair_lock_s *v189;
  uint64_t v190;
  uint64_t v191;
  float32x4_t *v192;
  uint64_t v193;
  float32x4_t *v194;
  uint64_t j;
  float32x4_t v196;
  float32x4_t v197;
  uint64_t v198;
  float32x4_t *v199;
  float32x4_t *v200;
  float32x4_t v201;
  float32x4_t v202;
  __int128 v203;
  float32x4_t v204;
  uint64_t v205;
  char v206;
  uint64_t v207;
  unsigned int *v208;
  unsigned int v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  os_unfair_lock_s *v214;
  uint64_t v215;
  uint64_t v216;
  float32x4_t *v217;
  uint64_t v218;
  float32x4_t *v219;
  uint64_t i;
  float32x4_t v221;
  float32x4_t v222;
  uint64_t v223;
  float32x4_t *v224;
  float32x4_t *v225;
  float32x4_t v226;
  float32x4_t v227;
  __int128 v228;
  float32x4_t v229;
  uint64_t v230;
  char v231;
  uint64_t v232;
  unsigned int *v233;
  unsigned int v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  os_unfair_lock_s *v239;
  uint64_t v240;
  uint64_t v241;
  float32x4_t *v242;
  uint64_t v243;
  float32x4_t *v244;
  uint64_t v245;
  __n128 v246;
  uint64_t v247;
  float32x4_t v248;
  __n128 v249;
  float32x4_t v250;
  uint64_t v251;
  float32x4_t *v252;
  float32x4_t *v253;
  __n128 v254;
  float32x4_t v255;
  __n128 v256;
  float32x4_t v257;
  uint64_t *v258;
  __n128 v259;
  __n128 v260;
  _QWORD *v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  float32x4_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  float32x4_t v271;
  char v272;
  char v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  uint64_t v277;
  char v278;
  int v279;
  _QWORD *v280;
  _QWORD *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  __int32 v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  _QWORD *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  __int128 v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  __int128 v313;
  char v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  _QWORD *v320;
  float32x4_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  float32x4_t v328;
  float32x4_t v329;
  float32x4_t v330;
  float32x4_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char v336;
  float32x4_t v337;
  float32x4_t v338;
  float32x4_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  float32x4_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  float32x4_t v350;
  float32x4_t v351;
  float32x4_t v352;
  uint64_t v353;
  float v354;
  char v355;
  char v356;
  uint64_t v357;
  float32x4_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  uint64_t v362;
  __n128 v363;
  __n128 v364;
  unsigned __int8 v365;
  double v366;
  float32x4_t v367;
  double v368;
  float32x4_t v369;
  __int128 v370;
  float32x4_t v371;
  int v372;
  int v373;
  int32x2_t v374;
  float32x4_t v375;
  int v376;
  int v377;
  int32x4_t v378;
  uint64_t v379;
  float32x4_t v380;
  __int32 v381;
  __int32 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  uint64_t v393;
  uint64_t v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  uint64_t v398;
  int v399;
  uint64_t v400;
  _QWORD v401[6];
  char v402;
  _QWORD v403[8];
  char v404;
  _OWORD v405[2];
  uint64_t v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  uint64_t v410;
  __int128 v411;
  __int128 v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  _QWORD *v417;
  uint64_t v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  _BYTE v425[64];
  __int128 v426;
  __int128 v427;
  uint64_t v428;
  _BYTE v429[40];
  __int128 v430;
  __int128 v431;
  uint64_t v432;
  uint64_t v433;

  v2 = v1;
  v433 = *MEMORY[0x1E0C80C00];
  v4 = *a1;
  v3 = (_QWORD *)a1[1];
  swift_retain_n();
  v344 = (unint64_t)v3;
  sub_1B1D170C0(v3, (uint64_t)v401);
  v5 = v401[0];
  v6 = v401[2];
  v7 = v401[3];
  v8 = v401[4];
  v9 = v401[5];
  v10 = v402;
  swift_release();
  sub_1B1A18378((uint64_t)v401, (uint64_t)v425, &qword_1EEF5E7D0, (uint64_t)&type metadata for ParticleNoise);
  if (v425[48] == 2)
  {
    sub_1B1E5267C();
    v365 = 0;
    LOBYTE(v11) = 0;
    v12.i32[0] = 1036831949;
    LODWORD(v14) = vdup_lane_s32(v12, 0).u32[0];
    *((float *)&v14 + 1) = v13 * 0.16;
    v331 = 0u;
    v353 = 3;
    goto LABEL_3;
  }
  if (*(float *)&v8 == 0.0)
    return (uint64_t *)swift_release();
  v353 = v9;
  sub_1B1E5267C();
  v365 = v10 & 1;
  v37 = 1.0;
  if ((v10 & 1) != 0)
    v37 = 4.0;
  v38 = v37 * (float)(v36 * *(float *)&v8);
  if (BYTE4(v8) == 2)
  {
    v354 = v38;
    v341 = 0;
    v39 = *(_OWORD *)(v2 + 32);
    v411 = *(_OWORD *)(v2 + 16);
    v412 = v39;
    v413 = *(_QWORD *)(v2 + 48);
    sub_1B1E8FCE4(v4, (uint64_t)&v411, 0x200000000, &v419);
    sub_1B1A18378((uint64_t)&v419, (uint64_t)&v391, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (!(_QWORD)v391)
      return (uint64_t *)swift_release();
    if ((uint64_t)v397 <= 0)
    {
      swift_release();
    }
    else
    {
      v332 = *((_QWORD *)&v395 + 1);
      if (*((_QWORD *)&v395 + 1))
      {
        v40 = (_QWORD *)*((_QWORD *)&v396 + 1);
        v41 = *(_QWORD *)(*((_QWORD *)&v396 + 1) + 32);
        v42 = *(_BYTE *)(v396 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v405[0] = v391;
        v405[1] = v392;
        v311 = v394;
        v406 = v393;
        v296 = (_QWORD *)(*((_QWORD *)&v396 + 1) + 64);
        v304 = *((_QWORD *)&v396 + 1) + 48;
        swift_retain();
        swift_retain();
        swift_retain();
        v43 = 0;
        __asm { FMOV            V0.4S, #-1.0 }
        v345 = _Q0;
        v314 = v42;
        v323 = v41;
        while (1)
        {
          v49 = (unsigned int *)(v311 + 48 * v43);
          v50 = *v49;
          v379 = v49[1];
          v52 = (uint64_t *)*((_QWORD *)v49 + 2);
          v51 = *((_QWORD *)v49 + 3);
          v54 = *((_QWORD *)v49 + 4);
          v53 = *((_QWORD *)v49 + 5);
          if ((v42 & 1) != 0)
          {
            v55 = *(os_unfair_lock_s **)(v53 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v55);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v53 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v41);
          sub_1B1A18378(v304, (uint64_t)&v407, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v56 = v40[4];
          v57 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v53 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v40[6] = ecs_stack_allocator_allocate(v56, 48 * v57, 8);
          v40[7] = v57;
          v296[1] = 0;
          v296[2] = 0;
          *v296 = 0;
          swift_release();
          v58 = sub_1B1A12038((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, v52, v51, v54, (uint64_t)v40);
          v59 = (float32x4_t *)v58;
          if (v52)
          {
            v42 = v314;
            if (v54)
            {
              v41 = v323;
              v61 = v287;
              v60 = v294;
              v62.i32[3] = v286;
              do
              {
                v376 = v60;
                v381 = v62.i32[3];
                v372 = v61;
                v366 = drand48();
                v63 = drand48();
                v64.f64[0] = v366;
                v64.f64[1] = v63;
                *(float32x2_t *)v65.f32 = vcvt_f32_f64(v64);
                v367 = v65;
                v66 = drand48();
                v67 = v367;
                v67.f32[2] = v66;
                v62 = vaddq_f32(*v59, vmulq_n_f32(vaddq_f32(vaddq_f32(v67, v67), v345), v354));
                v61 = v372;
                v60 = v376;
                v62.i32[3] = v381;
                v68 = v62;
                v68.i32[3] = 0;
                *v59++ = v68;
                --v54;
              }
              while (v54);
              v286 = v381;
              v287 = v372;
              v294 = v376;
              v69 = v341;
              goto LABEL_32;
            }
          }
          else
          {
            v42 = v314;
            if ((_DWORD)v50 != (_DWORD)v379)
            {
              v70 = v379 - v50;
              v71 = (float32x4_t *)(v58 + 16 * v50);
              v69 = v341;
              v73 = v271.i32[3];
              v72 = v279;
              v74.i32[3] = v267.i32[3];
              do
              {
                v377 = v72;
                v382 = v74.i32[3];
                v373 = v73;
                v368 = drand48();
                v75 = drand48();
                v76.f64[0] = v368;
                v76.f64[1] = v75;
                *(float32x2_t *)v77.f32 = vcvt_f32_f64(v76);
                v369 = v77;
                v78 = drand48();
                v79 = v369;
                v79.f32[2] = v78;
                v74 = vaddq_f32(*v71, vmulq_n_f32(vaddq_f32(vaddq_f32(v79, v79), v345), v354));
                v73 = v373;
                v72 = v377;
                v74.i32[3] = v382;
                v80 = v74;
                v80.i32[3] = 0;
                *v71++ = v80;
                --v70;
              }
              while (v70);
              v267.i32[3] = v382;
              v271.i32[3] = v373;
              v279 = v377;
              goto LABEL_31;
            }
          }
          v69 = v341;
LABEL_31:
          v41 = v323;
LABEL_32:
          sub_1B1F05D48(v40, (unsigned __int16 **)v405, (uint64_t)&v407);
          v341 = v69;
          sub_1B1F03804((char *)v53);
          ecs_stack_allocator_pop_snapshot(v41);
          if ((v42 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 376));
          }
          swift_release();
          if (++v43 == v332)
            goto LABEL_38;
        }
      }
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_38:
      swift_release();
      sub_1B19ED748((uint64_t *)&v419);
    }
    return sub_1B19ED748((uint64_t *)&v419);
  }
  v11 = HIDWORD(v8);
  v81.i64[0] = v6;
  v81.i64[1] = v7;
  v331 = v81;
  v14 = __PAIR64__(LODWORD(v38), v5);
LABEL_3:
  v15 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v15)
    return (uint64_t *)swift_release();
  v322 = v2;
  v340 = 0;
  v16 = *(_QWORD *)(v15 + 240);
  v374 = (int32x2_t)v14;
  swift_retain();
  swift_retain();
  sub_1B1FAE1BC(v11, v353, v16, v15, v11, v353, (uint64_t)&v391);
  v17 = v391;
  v18 = v392;
  v19 = BYTE8(v392);
  v20 = v394;
  v312 = v4;
  v21 = BYTE2(v394);
  v370 = v395;
  v313 = v396;
  v303 = v397;
  v295 = v398;
  v22 = v400;
  v23 = v393;
  v24 = v399;
  swift_release();
  swift_release();
  v391 = v17;
  *(_QWORD *)&v392 = v18;
  BYTE8(v392) = v19;
  v393 = v23;
  LOWORD(v394) = v20;
  BYTE2(v394) = v21;
  v395 = v370;
  v396 = v313;
  v397 = v303;
  v398 = v295;
  v399 = v24;
  v400 = v22;
  swift_unknownObjectRelease();
  v25 = vdupq_lane_s32(v374, 1);
  v26 = vdupq_lane_s32(v374, 0);
  v26.i32[3] = 1.0;
  v375 = (float32x4_t)v26;
  v378 = v25;
  v27 = v331;
  v27.i32[3] = 0;
  v371 = v27;
  v28 = *(_QWORD *)(v312 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  v29 = (int32x2_t)sub_1B1D15930(v344);
  if ((v32 & 1) != 0)
    goto LABEL_44;
  v33 = 0;
  *(int32x2_t *)&v31 = v29;
  *((_QWORD *)&v31 + 1) = v30;
  while (1)
  {
    v383 = v31;
    v82 = *(float *)((unint64_t)&v383 & 0xFFFFFFFFFFFFFFF3 | (4 * (v33 & 3)));
    v384 = xmmword_1B2244E20;
    v83 = *(float *)((unint64_t)&v384 & 0xFFFFFFFFFFFFFFF3 | (4 * (v33 & 3)));
    v34 = v82 == v83;
    if (v33 == 3)
      break;
    while (1)
    {
      ++v33;
      if (v34)
        break;
      if (v33 == 3)
        goto LABEL_48;
      v34 = 0;
    }
  }
  if (v82 == v83)
  {
LABEL_44:
    sub_1B1E8611C(v344, *(int32x2_t *)&v31);
    if ((v86 & 1) == 0)
    {
      v87.i64[0] = v84;
      v87.i64[1] = v85;
      v88 = vmulq_f32(v375, v87);
      v88.i32[3] = 1.0;
      v375 = v88;
    }
    v89 = v322;
    v90 = sub_1B1D15838(v344);
    v92 = 0;
    v93 = 0;
    v94 = 0;
    v95 = 0;
    v96 = 0;
    v97 = 0;
    v98 = 0;
    v99 = 0;
    v340 = 0;
    if ((v100 & 1) == 0)
    {
      v101.i64[0] = v90;
      v101.i64[1] = v91;
      v102 = vaddq_f32(v331, v101);
      v102.i32[3] = 0;
      v371 = v102;
    }
    v103 = 1;
  }
  else
  {
LABEL_48:
    sub_1B1E85B04(v344, 0, 0, 1, *(_QWORD *)&v29, v30, 0, 0, (uint64_t)v403, v29, 0, 1);
    v92 = v403[0];
    v93 = v403[1];
    v94 = v403[2];
    v95 = v403[3];
    v96 = v403[4];
    v97 = v403[5];
    v98 = v403[6];
    v99 = v403[7];
    v103 = v404;
    v89 = v322;
  }
  v104 = (float32x4_t)v378;
  v104.i32[3] = 0;
  v380 = v104;
  v105 = v28 & 3;
  v324 = v96;
  v346 = v93;
  v333 = v94;
  v315 = v92;
  if (v353 == 2)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1EDFCF8((uint64_t)&v391, 2, 1, (uint64_t)v405);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1B1D72448((uint64_t)v405, (uint64_t)&v407, (unint64_t *)&qword_1EEF61C50, type metadata accessor for __vfx_sampler2d);
    if (*((_QWORD *)&v409 + 1) == 1)
      goto LABEL_99;
    v385 = v407;
    v386 = v408;
    v387 = v409;
    *(_QWORD *)&v388 = v410;
    if ((v103 & 1) == 0)
    {
      v203 = *(_OWORD *)(v89 + 72);
      v430 = *(_OWORD *)(v89 + 56);
      v431 = v203;
      v432 = *(_QWORD *)(v89 + 88);
      sub_1B1E8FCE4(v312, (uint64_t)&v430, 0x200000000, &v411);
      sub_1B1A18378((uint64_t)&v411, (uint64_t)&v419, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
      if ((_QWORD)v419)
      {
        if ((uint64_t)v424 > 0)
        {
          v284 = *((_QWORD *)&v422 + 1);
          if (*((_QWORD *)&v422 + 1))
          {
            v204.i64[0] = v315;
            v204.i64[1] = v346;
            v361 = v204;
            v204.i64[0] = v333;
            v204.i64[1] = v95;
            v351 = v204;
            v204.i64[0] = v324;
            v204.i64[1] = v97;
            v338 = v204;
            v204.i64[0] = v98;
            v204.i64[1] = v99;
            v329 = v204;
            v205 = *(_QWORD *)(*((_QWORD *)&v423 + 1) + 32);
            v206 = *(_BYTE *)(v423 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            v426 = v419;
            v427 = v420;
            v428 = v421;
            v265 = *((_QWORD *)&v423 + 1) + 48;
            v269 = *((_QWORD *)&v421 + 1);
            v320 = (_QWORD *)*((_QWORD *)&v423 + 1);
            v262 = (_QWORD *)(*((_QWORD *)&v423 + 1) + 64);
            swift_retain();
            swift_retain();
            swift_retain();
            v207 = 0;
            v273 = v206;
            v277 = v205;
            do
            {
              v309 = v207;
              v208 = (unsigned int *)(v269 + 48 * v207);
              v301 = *v208;
              v209 = v208[2];
              v292 = v208[1];
              v210 = (uint64_t *)*((_QWORD *)v208 + 2);
              v211 = *((_QWORD *)v208 + 3);
              v213 = *((_QWORD *)v208 + 4);
              v212 = *((_QWORD *)v208 + 5);
              if ((v206 & 1) != 0)
              {
                v214 = *(os_unfair_lock_s **)(v212 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v214);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v212 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v205);
              sub_1B1A18378(v265, (uint64_t)v429, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
              v215 = v320[4];
              v216 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v212 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v320[6] = ecs_stack_allocator_allocate(v215, 48 * v216, 8);
              v320[7] = v216;
              v262[1] = 0;
              v262[2] = 0;
              *v262 = 0;
              swift_release();
              v217 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v210, v211, v213, (uint64_t)v320);
              v218 = sub_1B1A12038((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, v210, v211, v213, (uint64_t)v320);
              v219 = (float32x4_t *)v218;
              if (v210)
              {
                for (i = v340; v213; --v213)
                {
                  if ((v365 & ((v209 & 3) != v105)) == 0)
                  {
                    v221 = vmlaq_f32(v371, v375, *v217);
                    *(double *)v222.i64 = (*((double (**)(__int128 *, float32x4_t))&v387 + 1))(&v385, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v361, v221.f32[0]), v351, *(float32x2_t *)v221.f32, 1), v338, v221, 2), v329, v221, 3));
                    *v219 = vmlaq_f32(*v219, v380, v222);
                  }
                  LOBYTE(v209) = v209 + 1;
                  ++v219;
                  ++v217;
                }
              }
              else
              {
                i = v340;
                if ((_DWORD)v301 != (_DWORD)v292)
                {
                  v223 = v292 - v301;
                  v224 = (float32x4_t *)(v218 + 16 * v301);
                  v225 = &v217[v301];
                  do
                  {
                    if ((v365 & ((v209 & 3) != v105)) == 0)
                    {
                      v226 = vmlaq_f32(v371, v375, *v225);
                      *(double *)v227.i64 = (*((double (**)(__int128 *, float32x4_t))&v387 + 1))(&v385, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v361, v226.f32[0]), v351, *(float32x2_t *)v226.f32, 1), v338, v226, 2), v329, v226, 3));
                      *v224 = vmlaq_f32(*v224, v380, v227);
                    }
                    LOBYTE(v209) = v209 + 1;
                    ++v224;
                    ++v225;
                    --v223;
                  }
                  while (v223);
                }
              }
              sub_1B1F05D48(v320, (unsigned __int16 **)&v426, (uint64_t)v429);
              v340 = i;
              sub_1B1F03804((char *)v212);
              v205 = v277;
              ecs_stack_allocator_pop_snapshot(v277);
              v206 = v273;
              if ((v273 & 1) != 0)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v212 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v212 + 376));
              }
              swift_release();
              v207 = v309 + 1;
            }
            while (v309 + 1 != v284);
            goto LABEL_195;
          }
          goto LABEL_194;
        }
        goto LABEL_193;
      }
      goto LABEL_99;
    }
    v129 = *(_OWORD *)(v89 + 72);
    v430 = *(_OWORD *)(v89 + 56);
    v431 = v129;
    v432 = *(_QWORD *)(v89 + 88);
    sub_1B1E8FCE4(v312, (uint64_t)&v430, 0x200000000, &v411);
    sub_1B1A18378((uint64_t)&v411, (uint64_t)&v419, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (!(_QWORD)v419)
      goto LABEL_99;
    if ((uint64_t)v424 > 0)
    {
      v317 = *((_QWORD *)&v422 + 1);
      if (*((_QWORD *)&v422 + 1))
      {
        v130 = (_QWORD *)*((_QWORD *)&v423 + 1);
        v131 = *(_QWORD *)(*((_QWORD *)&v423 + 1) + 32);
        v356 = *(_BYTE *)(v423 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v426 = v419;
        v427 = v420;
        v298 = *((_QWORD *)&v421 + 1);
        v428 = v421;
        v289 = *((_QWORD *)&v423 + 1) + 48;
        v281 = (_QWORD *)(*((_QWORD *)&v423 + 1) + 64);
        swift_retain();
        swift_retain();
        swift_retain();
        v132 = 0;
        v133 = 0;
        v306 = v131;
        do
        {
          v343 = v133;
          v348 = v132;
          v134 = (unsigned int *)(v298 + 48 * v132);
          v335 = *v134;
          v135 = v134[2];
          v326 = v134[1];
          v136 = (uint64_t *)*((_QWORD *)v134 + 2);
          v137 = *((_QWORD *)v134 + 3);
          v139 = *((_QWORD *)v134 + 4);
          v138 = *((_QWORD *)v134 + 5);
          if ((v356 & 1) != 0)
          {
            v140 = *(os_unfair_lock_s **)(v138 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v140);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v138 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v131);
          sub_1B1A18378(v289, (uint64_t)v429, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v141 = v130[4];
          v142 = (uint64_t)v130;
          v143 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v138 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          *(_QWORD *)(v142 + 48) = ecs_stack_allocator_allocate(v141, 48 * v143, 8);
          *(_QWORD *)(v142 + 56) = v143;
          v130 = (_QWORD *)v142;
          v281[1] = 0;
          v281[2] = 0;
          *v281 = 0;
          swift_release();
          v144 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v136, v137, v139, v142);
          v145 = sub_1B1A12038((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, v136, v137, v139, v142);
          v146 = (float32x4_t *)v145;
          if (v136)
          {
            for (; v139; --v139)
            {
              if ((v365 & ((v135 & 3) != v105)) == 0)
              {
                *(double *)v147.i64 = (*((double (**)(__int128 *, float32x4_t))&v387 + 1))(&v385, vmlaq_f32(v371, v375, *v144));
                *v146 = vmlaq_f32(*v146, v380, v147);
              }
              LOBYTE(v135) = v135 + 1;
              ++v146;
              ++v144;
            }
          }
          else if ((_DWORD)v335 != (_DWORD)v326)
          {
            v148 = v326 - v335;
            v149 = (float32x4_t *)(v145 + 16 * v335);
            v150 = &v144[v335];
            do
            {
              if ((v365 & ((v135 & 3) != v105)) == 0)
              {
                *(double *)v151.i64 = (*((double (**)(__int128 *, float32x4_t))&v387 + 1))(&v385, vmlaq_f32(v371, v375, *v150));
                *v149 = vmlaq_f32(*v149, v380, v151);
              }
              LOBYTE(v135) = v135 + 1;
              ++v149;
              ++v150;
              --v148;
            }
            while (v148);
          }
          v133 = v343;
          sub_1B1F05D48(v130, (unsigned __int16 **)&v426, (uint64_t)v429);
          sub_1B1F03804((char *)v138);
          v131 = v306;
          ecs_stack_allocator_pop_snapshot(v306);
          if ((v356 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v138 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v138 + 376));
          }
          swift_release();
          v132 = v348 + 1;
        }
        while (v348 + 1 != v317);
        goto LABEL_195;
      }
      goto LABEL_194;
    }
LABEL_193:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v258 = (uint64_t *)&v411;
LABEL_201:
    sub_1B19ED748(v258);
    return (uint64_t *)swift_release();
  }
  if (v353 == 1)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1EDFE20((uint64_t)&v391, 2, 1, (uint64_t)v429);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1B1D72448((uint64_t)v429, (uint64_t)&v430, &qword_1ED4BB3F0, type metadata accessor for __vfx_sampler1d);
    if (*((_QWORD *)&v431 + 1) == 1)
      goto LABEL_99;
    v426 = v430;
    v427 = v431;
    v428 = v432;
    if ((v103 & 1) != 0)
    {
      v106 = *(_OWORD *)(v89 + 72);
      v407 = *(_OWORD *)(v89 + 56);
      v408 = v106;
      *(_QWORD *)&v409 = *(_QWORD *)(v89 + 88);
      sub_1B1E8FCE4(v312, (uint64_t)&v407, 0x200000000, &v411);
      sub_1B1A18378((uint64_t)&v411, (uint64_t)&v419, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
      if ((_QWORD)v419)
      {
        if ((uint64_t)v424 > 0)
        {
          v316 = *((_QWORD *)&v422 + 1);
          if (*((_QWORD *)&v422 + 1))
          {
            v107 = (_QWORD *)*((_QWORD *)&v423 + 1);
            v108 = *(_QWORD *)(*((_QWORD *)&v423 + 1) + 32);
            v355 = *(_BYTE *)(v423 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            v385 = v419;
            v386 = v420;
            v297 = *((_QWORD *)&v421 + 1);
            *(_QWORD *)&v387 = v421;
            v288 = *((_QWORD *)&v423 + 1) + 48;
            v280 = (_QWORD *)(*((_QWORD *)&v423 + 1) + 64);
            swift_retain();
            swift_retain();
            swift_retain();
            v109 = 0;
            v110 = 0;
            v305 = v108;
            do
            {
              v342 = v110;
              v347 = v109;
              v111 = (unsigned int *)(v297 + 48 * v109);
              v334 = *v111;
              v112 = v111[2];
              v325 = v111[1];
              v113 = (uint64_t *)*((_QWORD *)v111 + 2);
              v114 = *((_QWORD *)v111 + 3);
              v116 = *((_QWORD *)v111 + 4);
              v115 = *((_QWORD *)v111 + 5);
              if ((v355 & 1) != 0)
              {
                v117 = *(os_unfair_lock_s **)(v115 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v117);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v115 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v108);
              sub_1B1A18378(v288, (uint64_t)v405, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
              v118 = v107[4];
              v119 = (uint64_t)v107;
              v120 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v115 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              *(_QWORD *)(v119 + 48) = ecs_stack_allocator_allocate(v118, 48 * v120, 8);
              *(_QWORD *)(v119 + 56) = v120;
              v107 = (_QWORD *)v119;
              v280[1] = 0;
              v280[2] = 0;
              *v280 = 0;
              swift_release();
              v121 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v113, v114, v116, v119);
              v122 = sub_1B1A12038((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, v113, v114, v116, v119);
              v123 = (float32x4_t *)v122;
              if (v113)
              {
                for (; v116; --v116)
                {
                  if ((v365 & ((v112 & 3) != v105)) == 0)
                  {
                    *(double *)v124.i64 = (*((double (**)(__int128 *, float32x4_t))&v427 + 1))(&v426, vmlaq_f32(v371, v375, *v121));
                    *v123 = vmlaq_f32(*v123, v380, v124);
                  }
                  LOBYTE(v112) = v112 + 1;
                  ++v123;
                  ++v121;
                }
              }
              else if ((_DWORD)v334 != (_DWORD)v325)
              {
                v125 = v325 - v334;
                v126 = (float32x4_t *)(v122 + 16 * v334);
                v127 = &v121[v334];
                do
                {
                  if ((v365 & ((v112 & 3) != v105)) == 0)
                  {
                    *(double *)v128.i64 = (*((double (**)(__int128 *, float32x4_t))&v427 + 1))(&v426, vmlaq_f32(v371, v375, *v127));
                    *v126 = vmlaq_f32(*v126, v380, v128);
                  }
                  LOBYTE(v112) = v112 + 1;
                  ++v126;
                  ++v127;
                  --v125;
                }
                while (v125);
              }
              v110 = v342;
              sub_1B1F05D48(v107, (unsigned __int16 **)&v385, (uint64_t)v405);
              sub_1B1F03804((char *)v115);
              v108 = v305;
              ecs_stack_allocator_pop_snapshot(v305);
              if ((v355 & 1) != 0)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v115 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v115 + 376));
              }
              swift_release();
              v109 = v347 + 1;
            }
            while (v347 + 1 != v316);
            goto LABEL_195;
          }
LABEL_194:
          swift_retain();
          swift_retain();
          swift_retain();
LABEL_195:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_1B19ED748((uint64_t *)&v411);
          sub_1B19ED748((uint64_t *)&v411);
          return (uint64_t *)swift_release();
        }
        goto LABEL_193;
      }
LABEL_99:
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_unknownObjectRelease();
    }
    v178 = *(_OWORD *)(v89 + 72);
    v407 = *(_OWORD *)(v89 + 56);
    v408 = v178;
    *(_QWORD *)&v409 = *(_QWORD *)(v89 + 88);
    sub_1B1E8FCE4(v312, (uint64_t)&v407, 0x200000000, &v411);
    sub_1B1A18378((uint64_t)&v411, (uint64_t)&v419, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (!(_QWORD)v419)
      goto LABEL_99;
    if ((uint64_t)v424 > 0)
    {
      v283 = *((_QWORD *)&v422 + 1);
      if (*((_QWORD *)&v422 + 1))
      {
        v179.i64[0] = v315;
        v179.i64[1] = v346;
        v360 = v179;
        v179.i64[0] = v333;
        v179.i64[1] = v95;
        v350 = v179;
        v179.i64[0] = v324;
        v179.i64[1] = v97;
        v337 = v179;
        v179.i64[0] = v98;
        v179.i64[1] = v99;
        v328 = v179;
        v180 = *(_QWORD *)(*((_QWORD *)&v423 + 1) + 32);
        v181 = *(_BYTE *)(v423 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v385 = v419;
        v386 = v420;
        *(_QWORD *)&v387 = v421;
        v264 = *((_QWORD *)&v423 + 1) + 48;
        v268 = *((_QWORD *)&v421 + 1);
        v319 = (_QWORD *)*((_QWORD *)&v423 + 1);
        v261 = (_QWORD *)(*((_QWORD *)&v423 + 1) + 64);
        swift_retain();
        swift_retain();
        swift_retain();
        v182 = 0;
        v272 = v181;
        v276 = v180;
        do
        {
          v308 = v182;
          v183 = (unsigned int *)(v268 + 48 * v182);
          v300 = *v183;
          v184 = v183[2];
          v291 = v183[1];
          v185 = (uint64_t *)*((_QWORD *)v183 + 2);
          v186 = *((_QWORD *)v183 + 3);
          v188 = *((_QWORD *)v183 + 4);
          v187 = *((_QWORD *)v183 + 5);
          if ((v181 & 1) != 0)
          {
            v189 = *(os_unfair_lock_s **)(v187 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v189);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v187 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v180);
          sub_1B1A18378(v264, (uint64_t)v405, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v190 = v319[4];
          v191 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v187 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v319[6] = ecs_stack_allocator_allocate(v190, 48 * v191, 8);
          v319[7] = v191;
          v261[1] = 0;
          v261[2] = 0;
          *v261 = 0;
          swift_release();
          v192 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v185, v186, v188, (uint64_t)v319);
          v193 = sub_1B1A12038((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, v185, v186, v188, (uint64_t)v319);
          v194 = (float32x4_t *)v193;
          if (v185)
          {
            for (j = v340; v188; --v188)
            {
              if ((v365 & ((v184 & 3) != v105)) == 0)
              {
                v196 = vmlaq_f32(v371, v375, *v192);
                *(double *)v197.i64 = (*((double (**)(__int128 *, float32x4_t))&v427 + 1))(&v426, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v360, v196.f32[0]), v350, *(float32x2_t *)v196.f32, 1), v337, v196, 2), v328, v196, 3));
                *v194 = vmlaq_f32(*v194, v380, v197);
              }
              LOBYTE(v184) = v184 + 1;
              ++v194;
              ++v192;
            }
          }
          else
          {
            j = v340;
            if ((_DWORD)v300 != (_DWORD)v291)
            {
              v198 = v291 - v300;
              v199 = (float32x4_t *)(v193 + 16 * v300);
              v200 = &v192[v300];
              do
              {
                if ((v365 & ((v184 & 3) != v105)) == 0)
                {
                  v201 = vmlaq_f32(v371, v375, *v200);
                  *(double *)v202.i64 = (*((double (**)(__int128 *, float32x4_t))&v427 + 1))(&v426, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v360, v201.f32[0]), v350, *(float32x2_t *)v201.f32, 1), v337, v201, 2), v328, v201, 3));
                  *v199 = vmlaq_f32(*v199, v380, v202);
                }
                LOBYTE(v184) = v184 + 1;
                ++v199;
                ++v200;
                --v198;
              }
              while (v198);
            }
          }
          sub_1B1F05D48(v319, (unsigned __int16 **)&v385, (uint64_t)v405);
          v340 = j;
          sub_1B1F03804((char *)v187);
          v180 = v276;
          ecs_stack_allocator_pop_snapshot(v276);
          v181 = v272;
          if ((v272 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v187 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v187 + 376));
          }
          swift_release();
          v182 = v308 + 1;
        }
        while (v308 + 1 != v283);
        goto LABEL_195;
      }
      goto LABEL_194;
    }
    goto LABEL_193;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1EDFF30((uint64_t)&v391, 2, 1, (uint64_t)v405);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1B1D72448((uint64_t)v405, (uint64_t)&v419, &qword_1EEF5AEF8, type metadata accessor for __vfx_sampler3d);
  if (*((_QWORD *)&v423 + 1) == 1)
    goto LABEL_99;
  v387 = v421;
  v388 = v422;
  v389 = v423;
  v390 = v424;
  v385 = v419;
  v386 = v420;
  if ((v103 & 1) != 0)
  {
    v152 = *(_OWORD *)(v89 + 72);
    v430 = *(_OWORD *)(v89 + 56);
    v431 = v152;
    v432 = *(_QWORD *)(v89 + 88);
    sub_1B1E8FCE4(v312, (uint64_t)&v430, 0x200000000, &v407);
    sub_1B1A18378((uint64_t)&v407, (uint64_t)&v411, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (!(_QWORD)v411)
      goto LABEL_99;
    if (v418 <= 0)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      v307 = v415;
      if (v415)
      {
        v153 = v417[4];
        v336 = *(_BYTE *)(v416 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v426 = v411;
        v427 = v412;
        v290 = v414;
        v428 = v413;
        v282 = (uint64_t)(v417 + 6);
        v349 = v417;
        v275 = v417 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v154 = 0;
        v299 = v153;
        while (1)
        {
          v327 = v154;
          v155 = (unsigned int *)(v290 + 48 * v154);
          v357 = *v155;
          v156 = v155[2];
          v318 = v155[1];
          v157 = (uint64_t *)*((_QWORD *)v155 + 2);
          v158 = *((_QWORD *)v155 + 3);
          v160 = *((_QWORD *)v155 + 4);
          v159 = *((_QWORD *)v155 + 5);
          if ((v336 & 1) != 0)
          {
            v161 = *(os_unfair_lock_s **)(v159 + 376);
            swift_retain();
            os_unfair_lock_lock(v161);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v159 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v153);
          sub_1B1A18378(v282, (uint64_t)v429, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v162 = v349[4];
          v163 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v159 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v349[6] = ecs_stack_allocator_allocate(v162, 48 * v163, 8);
          v349[7] = v163;
          v275[1] = 0;
          v275[2] = 0;
          *v275 = 0;
          swift_release();
          v164 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v157, v158, v160, (uint64_t)v349);
          v165 = sub_1B1A12038((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, v157, v158, v160, (uint64_t)v349);
          v166 = (float32x4_t *)v165;
          if (v157)
          {
            v167 = v340;
            v168 = v271;
            if (v160)
            {
              v169 = v327;
              do
              {
                if ((v365 & ((v156 & 3) != v105)) == 0)
                {
                  v170 = vmlaq_f32(v371, v375, *v164);
                  v170.i32[3] = v168.i32[3];
                  v358 = v170;
                  *(double *)v171.i64 = (*((double (**)(__int128 *))&v389 + 1))(&v385);
                  *v166 = vmlaq_f32(*v166, v380, v171);
                  v168 = v358;
                }
                LOBYTE(v156) = v156 + 1;
                ++v166;
                ++v164;
                --v160;
              }
              while (v160);
              v271 = v168;
              goto LABEL_123;
            }
          }
          else
          {
            v167 = v340;
            if ((_DWORD)v357 != (_DWORD)v318)
            {
              v172 = v318 - v357;
              v173 = (float32x4_t *)(v165 + 16 * v357);
              v174 = &v164[v357];
              v175 = v267;
              do
              {
                if ((v365 & ((v156 & 3) != v105)) == 0)
                {
                  v176 = vmlaq_f32(v371, v375, *v174);
                  v176.i32[3] = v175.i32[3];
                  v359 = v176;
                  *(double *)v177.i64 = (*((double (**)(__int128 *))&v389 + 1))(&v385);
                  *v173 = vmlaq_f32(*v173, v380, v177);
                  v175 = v359;
                }
                LOBYTE(v156) = v156 + 1;
                ++v173;
                ++v174;
                --v172;
              }
              while (v172);
              v267 = v175;
            }
          }
          v169 = v327;
LABEL_123:
          sub_1B1F05D48(v349, (unsigned __int16 **)&v426, (uint64_t)v429);
          sub_1B1F03804((char *)v159);
          v153 = v299;
          ecs_stack_allocator_pop_snapshot(v299);
          if ((v336 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v159 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v159 + 376));
          }
          v340 = v167;
          swift_release();
          v154 = v169 + 1;
          if (v154 == v307)
            goto LABEL_199;
        }
      }
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_199:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_1B19ED748((uint64_t *)&v407);
    }
    v258 = (uint64_t *)&v407;
    goto LABEL_201;
  }
  v228 = *(_OWORD *)(v89 + 72);
  v430 = *(_OWORD *)(v89 + 56);
  v431 = v228;
  v432 = *(_QWORD *)(v89 + 88);
  sub_1B1E8FCE4(v312, (uint64_t)&v430, 0x200000000, &v407);
  sub_1B1A18378((uint64_t)&v407, (uint64_t)&v411, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!(_QWORD)v411)
    goto LABEL_99;
  if (v418 <= 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    v285 = v415;
    if (v415)
    {
      v229.i64[0] = v315;
      v229.i64[1] = v346;
      v352 = v229;
      v229.i64[0] = v333;
      v229.i64[1] = v95;
      v339 = v229;
      v229.i64[0] = v324;
      v229.i64[1] = v97;
      v330 = v229;
      v229.i64[0] = v98;
      v229.i64[1] = v99;
      v321 = v229;
      v230 = v417[4];
      v231 = *(_BYTE *)(v416 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v426 = v411;
      v427 = v412;
      v274 = v414;
      v428 = v413;
      v310 = v417;
      v266 = v417 + 8;
      v270 = (uint64_t)(v417 + 6);
      swift_retain();
      swift_retain();
      swift_retain();
      v232 = 0;
      v278 = v231;
      v263 = v230;
      while (1)
      {
        v302 = v232;
        v233 = (unsigned int *)(v274 + 48 * v232);
        v362 = *v233;
        v234 = v233[2];
        v293 = v233[1];
        v235 = (uint64_t *)*((_QWORD *)v233 + 2);
        v236 = *((_QWORD *)v233 + 3);
        v238 = *((_QWORD *)v233 + 4);
        v237 = *((_QWORD *)v233 + 5);
        if ((v231 & 1) != 0)
        {
          v239 = *(os_unfair_lock_s **)(v237 + 376);
          swift_retain();
          os_unfair_lock_lock(v239);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v237 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v230);
        sub_1B1A18378(v270, (uint64_t)v429, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
        v240 = v310[4];
        v241 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v237 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v310[6] = ecs_stack_allocator_allocate(v240, 48 * v241, 8);
        v310[7] = v241;
        v266[1] = 0;
        v266[2] = 0;
        *v266 = 0;
        swift_release();
        v242 = (float32x4_t *)sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v235, v236, v238, (uint64_t)v310);
        v243 = sub_1B1A12038((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, v235, v236, v238, (uint64_t)v310);
        v244 = (float32x4_t *)v243;
        if (v235)
        {
          v245 = v340;
          v246 = v260;
          if (v238)
          {
            v247 = v302;
            do
            {
              if ((v365 & ((v234 & 3) != v105)) == 0)
              {
                v248 = vmlaq_f32(v371, v375, *v242);
                v249 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v352, v248.f32[0]), v339, *(float32x2_t *)v248.f32, 1), v330, v248, 2), v321, v248, 3);
                v249.n128_u32[3] = v246.n128_u32[3];
                v363 = v249;
                *(double *)v250.i64 = (*((double (**)(__int128 *, __n128))&v389 + 1))(&v385, v249);
                *v244 = vmlaq_f32(*v244, v380, v250);
                v246 = v363;
              }
              LOBYTE(v234) = v234 + 1;
              ++v244;
              ++v242;
              --v238;
            }
            while (v238);
            v260 = v246;
            v230 = v263;
            goto LABEL_190;
          }
        }
        else
        {
          v245 = v340;
          if ((_DWORD)v362 != (_DWORD)v293)
          {
            v251 = v293 - v362;
            v252 = (float32x4_t *)(v243 + 16 * v362);
            v253 = &v242[v362];
            v230 = v263;
            v254 = v259;
            do
            {
              if ((v365 & ((v234 & 3) != v105)) == 0)
              {
                v255 = vmlaq_f32(v371, v375, *v253);
                v256 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v352, v255.f32[0]), v339, *(float32x2_t *)v255.f32, 1), v330, v255, 2), v321, v255, 3);
                v256.n128_u32[3] = v254.n128_u32[3];
                v364 = v256;
                *(double *)v257.i64 = (*((double (**)(__int128 *, __n128))&v389 + 1))(&v385, v256);
                *v252 = vmlaq_f32(*v252, v380, v257);
                v254 = v364;
              }
              LOBYTE(v234) = v234 + 1;
              ++v252;
              ++v253;
              --v251;
            }
            while (v251);
            v259 = v254;
            goto LABEL_189;
          }
        }
        v230 = v263;
LABEL_189:
        v247 = v302;
LABEL_190:
        sub_1B1F05D48(v310, (unsigned __int16 **)&v426, (uint64_t)v429);
        v340 = v245;
        sub_1B1F03804((char *)v237);
        ecs_stack_allocator_pop_snapshot(v230);
        v231 = v278;
        if ((v278 & 1) != 0)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v237 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v237 + 376));
        }
        swift_release();
        v232 = v247 + 1;
        if (v232 == v285)
          goto LABEL_203;
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_203:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1B19ED748((uint64_t *)&v407);
    swift_release();
  }
  return sub_1B19ED748((uint64_t *)&v407);
}

uint64_t type metadata accessor for ParticleNoiseSystem()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for NoiseParameters(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoiseParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoiseParameters()
{
  return &type metadata for NoiseParameters;
}

unint64_t sub_1B1D9CD84()
{
  unint64_t result;

  result = qword_1EEF5E7C0;
  if (!qword_1EEF5E7C0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294AA4, &type metadata for NoiseParameters);
    atomic_store(result, (unint64_t *)&qword_1EEF5E7C0);
  }
  return result;
}

uint64_t sub_1B1D9CDC8(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[2];
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = swift_allocObject();
  v3 = *(_OWORD *)(a1 + 104);
  v11 = *(_OWORD *)(a1 + 88);
  v12 = v3;
  v13 = *(_QWORD *)(a1 + 120);
  sub_1B1B7038C((uint64_t)v7);
  v4 = v7[1];
  *(_OWORD *)(v2 + 16) = v7[0];
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = v8;
  sub_1B19EFB98((uint64_t)v9);
  sub_1B1B4F21C(a1);
  v5 = v9[1];
  *(_OWORD *)(v2 + 56) = v9[0];
  *(_OWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 88) = v10;
  return v2;
}

const char *sub_1B1D9CE6C()
{
  return "ParticleNoise";
}

uint64_t sub_1B1D9CE80()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1B1D9CEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  float v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  float v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  int v49;
  unint64_t v50;
  float v52[4];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  _QWORD v59[8];
  _QWORD v60[8];
  unsigned __int8 v61;
  _BYTE v62[80];
  _BYTE v63[64];
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(unsigned int *)(a1 + 28);
  v3 = *(int *)(a1 + 24);
  v47 = *(unsigned int *)(a1 + 48);
  v46 = *(unsigned int *)(a1 + 52);
  swift_retain_n();
  v4 = (_DWORD)v3 == -1 && (_DWORD)v2 == 0;
  if (v4
    || (v3 & 0x80000000) != 0
    || *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v3
    || ((v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries), (_DWORD)v2 != -1)
      ? (v6 = *(_DWORD *)(v5 + 12 * (int)v3 + 8) == (_DWORD)v2)
      : (v6 = 1),
        !v6))
  {
    swift_release();
LABEL_15:
    v49 = 1036831949;
    LOBYTE(v50) = 0;
    *(_QWORD *)&v12 = 0;
    v48 = 0u;
    v13 = 0.16;
    v45 = 3;
    goto LABEL_16;
  }
  sub_1B1D1F83C(*(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)v3) + 32), *(_DWORD *)(v5 + 12 * (int)v3), *(_WORD *)(v5 + 12 * (int)v3 + 4), 64, v1, (uint64_t)v59);
  v7 = v59[0];
  v9 = v59[2];
  v8 = v59[3];
  v11 = v59[4];
  v10 = v59[5];
  swift_release();
  sub_1B1A18378((uint64_t)v59, (uint64_t)v63, &qword_1EEF5E7D0, (uint64_t)&type metadata for ParticleNoise);
  if (v63[48] == 2)
    goto LABEL_15;
  v13 = *(float *)&v11;
  if (*(float *)&v11 == 0.0)
    return swift_release();
  v45 = v10;
  *(_QWORD *)&v12 = v9;
  *((_QWORD *)&v12 + 1) = v8;
  v48 = v12;
  v49 = v7;
  v50 = HIDWORD(v11);
LABEL_16:
  v14 = v1;
  sub_1B1E85B04(v3 | (unint64_t)(v2 << 32), 0, 0, 1, 0, 0, 1, 0, (uint64_t)v60, *(int32x2_t *)&v12, 0, 1);
  v15 = v60[0];
  v16 = v60[1];
  v18 = v60[2];
  v17 = v60[3];
  v19 = v60[4];
  v20 = v60[5];
  v22 = v60[6];
  v21 = v60[7];
  v44 = v61;
  sub_1B1E52E10();
  v24 = v13 * v23;
  sub_1B1D72448((uint64_t)v60, (uint64_t)v62, (unint64_t *)&qword_1ED4B79B0, type metadata accessor for simd_float4x4);
  if ((v62[64] & 1) != 0)
  {
    v25 = xmmword_1B2244E20;
    v26 = xmmword_1B2244D90;
    v27 = xmmword_1B2244DD0;
    v28 = xmmword_1B2244DB0;
  }
  else
  {
    *(_QWORD *)&v28 = v15;
    *((_QWORD *)&v28 + 1) = v16;
    *(_QWORD *)&v27 = v18;
    *((_QWORD *)&v27 + 1) = v17;
    *(_QWORD *)&v26 = v19;
    *((_QWORD *)&v26 + 1) = v20;
    *(_QWORD *)&v25 = v22;
    *((_QWORD *)&v25 + 1) = v21;
  }
  v52[0] = v24;
  LODWORD(v52[1]) = v49;
  v53 = v48;
  v54 = v28;
  v55 = v27;
  v56 = v26;
  v57 = v25;
  v29 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    ObjectType = swift_getObjectType();
    type metadata accessor for particle_noise_uniforms(0);
    sub_1B1F40E1C((uint64_t)v52, 1, ObjectType, v31, v32, v33, v34, v35);
  }
  if (v50 == 2)
  {
    swift_retain();
    sub_1B1B1FC34(a1);
    sub_1B1FE6FB8(v47 | (v46 << 32), v14, v29 == 0, 0, a1, 0xD000000000000014, 0x80000001B233BA10, 0);
    sub_1B1B1FC88(a1);
    return swift_release_n();
  }
  v37 = *(_QWORD *)(v14 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v37)
    return swift_release();
  v38 = *(_QWORD *)(v37 + 240);
  swift_retain();
  swift_retain();
  sub_1B1FAE1BC(v50, v45, v38, v37, v50, v45, (uint64_t)v52);
  v39 = v58;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  if (v29)
    objc_msgSend(v29, sel_setTexture_atIndex_, v39, 0);
  if (v45 == 1)
  {
    v40 = "particle_noise_1d";
  }
  else if (v45 == 2)
  {
    v40 = "particle_noise_2d";
  }
  else
  {
    v40 = "particle_noise_3d";
  }
  v41 = (unint64_t)(v40 - 32) | 0x8000000000000000;
  v42 = v29 == 0;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BF6E0, (uint64_t)&type metadata for FunctionConstant, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1B226D240;
  *(_OWORD *)(v43 + 32) = xmmword_1B2294DC0;
  *(_BYTE *)(v43 + 48) = 0;
  *(_QWORD *)(v43 + 64) = v44 ^ 1u;
  *(_OWORD *)(v43 + 72) = 0u;
  *(_OWORD *)(v43 + 88) = 0u;
  *(_OWORD *)(v43 + 104) = 0u;
  *(_QWORD *)(v43 + 120) = 0;
  *(_BYTE *)(v43 + 128) = 13;
  swift_retain();
  sub_1B1B1FC34(a1);
  swift_bridgeObjectRetain();
  sub_1B1FE6FB8(v47 | (v46 << 32), v14, v42, v43, a1, 0xD000000000000011, v41, 0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B1B1FC88(a1);
  swift_unknownObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1D9D430@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t result;
  char *v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  int v30;
  char v31;

  v27 = a2;
  sub_1B19F8E54(0, &qword_1ED4BAA88, (uint64_t (*)(void))sub_1B1D9D774, (uint64_t)&type metadata for ParticleNoise.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v26 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1D9D774();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v6;
  v11 = v27;
  LOBYTE(v28) = 0;
  sub_1B22297F0();
  v12 = v5;
  v14 = v13;
  LOBYTE(v28) = 2;
  sub_1B22297F0();
  v16 = v15;
  v31 = 3;
  sub_1B1A71408();
  sub_1B2229814();
  v18 = v9;
  v19 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = 1;
  sub_1B1B49FDC((unint64_t *)&qword_1ED4B7310, MEMORY[0x1E0DEDD70]);
  sub_1B22297B4();
  v20 = 0uLL;
  if ((v29 & 1) == 0)
    v20 = v28;
  v26 = v20;
  LOBYTE(v28) = 4;
  v30 = sub_1B2229784();
  v21 = a1[3];
  v22 = a1[4];
  sub_1B19FA070(a1, v21);
  if (sub_1B2067BAC(1100, v21, v22))
  {
    LOBYTE(v28) = 5;
    v23 = sub_1B22297FC();
    v24 = v11;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v12);
    v23 = 3;
    v24 = v11;
  }
  v25 = v30 & 1;
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(_DWORD *)v24 = v14;
  *(_OWORD *)(v24 + 16) = v26;
  *(_DWORD *)(v24 + 32) = v16;
  *(_BYTE *)(v24 + 36) = v19;
  *(_QWORD *)(v24 + 40) = v23;
  *(_BYTE *)(v24 + 48) = v25;
  return result;
}

unint64_t sub_1B1D9D774()
{
  unint64_t result;

  result = qword_1ED4B8830;
  if (!qword_1ED4B8830)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294D30, &type metadata for ParticleNoise.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8830);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoiseGlobalTexture()
{
  return &type metadata for NoiseGlobalTexture;
}

uint64_t storeEnumTagSinglePayload for ParticleNoise.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B1D9D814 + 4 * byte_1B2294A47[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B1D9D848 + 4 * byte_1B2294A42[v4]))();
}

uint64_t sub_1B1D9D848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D9D850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1D9D858);
  return result;
}

uint64_t sub_1B1D9D864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1D9D86CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B1D9D870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1D9D878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticleNoise.CodingKeys()
{
  return &type metadata for ParticleNoise.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleNoise()
{
  return &type metadata for ParticleNoise;
}

unint64_t sub_1B1D9D8A8()
{
  unint64_t result;

  result = qword_1EEF5E7D8;
  if (!qword_1EEF5E7D8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294CC8, &type metadata for ParticleNoise.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5E7D8);
  }
  return result;
}

unint64_t sub_1B1D9D8F0()
{
  unint64_t result;

  result = qword_1ED4B8840;
  if (!qword_1ED4B8840)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294C00, &type metadata for ParticleNoise.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8840);
  }
  return result;
}

unint64_t sub_1B1D9D938()
{
  unint64_t result;

  result = qword_1ED4B8838;
  if (!qword_1ED4B8838)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2294C28, &type metadata for ParticleNoise.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8838);
  }
  return result;
}

uint64_t sub_1B1D9D97C(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  return sub_1B1D9F704(a1, a2, a3, (void (*)(uint64_t, void (*)(void), uint64_t))sub_1B1E609E0, (void (*)(uint64_t, void (*)(void), uint64_t))sub_1B1D9D97C);
}

void sub_1B1D9D9A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  id v9;
  _opaque_pthread_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    v9 = a3;
    swift_retain();
    v10 = pthread_self();
    if (pthread_equal(v8, v10))
    {
      sub_1B1DAAED0();
      sub_1B19E974C(a2);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v14 = v9;
      sub_1B1E609F4(v7, a2, v14);

    }
    swift_release();
  }
  else
  {
    v11 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v12 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v13 = a3;
    objc_msgSend(v12, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      v13 = v13;
      sub_1B1D9D9A0(a1, a2, v13);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B19E974C(a2);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v11), sel_unlock);

  }
}

void sub_1B1D9DB34(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  _opaque_pthread_t *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  uint64_t v24;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v9 = *(_opaque_pthread_t **)(v8 + 144);
    v10 = a3;
    v11 = a4;
    v12 = (char *)v10;
    v13 = v11;
    swift_retain();
    v14 = pthread_self();
    if (pthread_equal(v9, v14))
    {
      sub_1B1DAAED0();
      sub_1B19E9EB4(a2, v12, (uint64_t)v13);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v22 = v12;
      v23 = v13;
      sub_1B1E60AE0(v8, a2, v22, v23);

    }
    swift_release();
  }
  else
  {
    v24 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a3;
    v17 = a4;
    v18 = v16;
    v19 = v17;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v20 = v18;
      v21 = v19;
      sub_1B1D9DB34(a1, a2, v20, v21);
      objc_msgSend(*(id *)(a1 + v24), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B19E9EB4(a2, (char *)v18, (uint64_t)v19);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v24), sel_unlock);

    }
  }

}

void sub_1B1D9DD54(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, float a7)
{
  uint64_t v11;
  uint64_t v12;
  _opaque_pthread_t *v15;
  id v16;
  _opaque_pthread_t *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  v11 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v12)
  {
    v15 = *(_opaque_pthread_t **)(v12 + 144);
    v16 = a3;
    swift_retain();
    v17 = pthread_self();
    if (pthread_equal(v15, v17))
    {
      sub_1B1DAAED0();
      sub_1B19EA4E8(a2, (uint64_t)v16, a4 & 1, a5, a7);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v21 = v16;
      sub_1B1E60BD8(v12, a2, v21, a4 & 1, a5, a7);

    }
    swift_release();
  }
  else
  {
    v22 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v18 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v19 = a3;
    objc_msgSend(v18, sel_lock);
    if (*(_QWORD *)(a1 + v11))
    {
      v20 = v19;
      sub_1B1D9DD54(a1, a2, v20, a4 & 1, a5, a6, a7);
      objc_msgSend(*(id *)(a1 + v22), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B19EA4E8(a2, (uint64_t)v19, a4 & 1, a5, a7);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v22), sel_unlock);

    }
  }

}

void sub_1B1D9DF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  _opaque_pthread_t *v11;
  id v12;
  _opaque_pthread_t *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;

  v9 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v10)
  {
    v11 = *(_opaque_pthread_t **)(v10 + 144);
    v12 = a5;
    swift_retain();
    v13 = pthread_self();
    if (pthread_equal(v11, v13))
    {
      sub_1B1DAAED0();
      sub_1B19EA77C(a2, a3, a4, (uint64_t)v12);
      sub_1B1DACAE0(a1);
    }
    else
    {
      v12 = v12;
      sub_1B1E60D00(v10, a2, a3, a4, v12);
    }

    swift_release();
  }
  else
  {
    v17 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v15 = a5;
    objc_msgSend(v14, sel_lock);
    if (*(_QWORD *)(a1 + v9))
    {
      v16 = v15;
      sub_1B1D9DF6C(a1, a2, a3, a4, v16);
      objc_msgSend(*(id *)(a1 + v17), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B19EA77C(a2, a3, a4, (uint64_t)v15);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v17), sel_unlock);

    }
  }

}

void sub_1B1D9E14C(uint64_t a1, void *a2)
{
  sub_1B1DA0E98(a1, a2, sub_1B1E60E04, (void (*)(id))sub_1B19EABB8, (void (*)(uint64_t, id))sub_1B1D9E14C);
}

void sub_1B1D9E178(uint64_t a1, void *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  id v9;
  _opaque_pthread_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    v9 = a2;
    swift_retain();
    v10 = pthread_self();
    if (pthread_equal(v8, v10))
    {
      sub_1B1DAAED0();
      sub_1B1DA645C(0, 1, a3);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v14 = v9;
      sub_1B1E60E20(v7, v14, a3);

    }
    swift_release();
  }
  else
  {
    v11 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v12 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v13 = a2;
    objc_msgSend(v12, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      v13 = v13;
      sub_1B1D9E178(a1, v13, a3);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1DA645C(0, 1, a3);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v11), sel_unlock);

  }
}

void sub_1B1D9E31C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  id v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      sub_1B1E711EC(0x200000000);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v12 = v7;
      sub_1B1E60F10(v5, v12);

    }
    swift_release();
  }
  else
  {
    v9 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v11 = a2;
    objc_msgSend(v10, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v11 = v11;
      sub_1B1D9E31C(a1, v11);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1E711EC(0x200000000);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v9), sel_unlock);

  }
}

void sub_1B1D9E49C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  _BYTE *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  _BYTE *v12;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      sub_1B179207C();
      sub_1B1E7192C();
      if (*(_BYTE *)(*(_QWORD *)&v7[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions]
                    + OBJC_IVAR___VFXSceneLoadOptions_setupAsTemplate) == 1)
      {
        v7[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 1;
        sub_1B1E71CBC();
      }
      sub_1B1DACAE0(a1);

    }
    else
    {
      v12 = v7;
      sub_1B1E60FEC(v5, v12);

    }
    swift_release();
  }
  else
  {
    v9 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v11 = a2;
    objc_msgSend(v10, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v11 = v11;
      sub_1B1D9E49C(a1, v11);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B179207C();
      sub_1B1E7192C();
      if (*(_BYTE *)(*(_QWORD *)&v11[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions]
                    + OBJC_IVAR___VFXSceneLoadOptions_setupAsTemplate) == 1)
      {
        v11[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 1;
        sub_1B1E71CBC();
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v9), sel_unlock);

  }
}

void sub_1B1D9E6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  _opaque_pthread_t *v8;
  _opaque_pthread_t *v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v3 = v2;
  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v7)
  {
    v11 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v12 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    objc_msgSend(v12, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      swift_retain();
      sub_1B1D9E6A4(a1, a2);
    }
    else
    {
      sub_1B1DAAED0();
      v7 = (_QWORD *)MEMORY[0x1B5E22F20]();
      sub_1B1E73664(a2);
      if (v3)
        goto LABEL_14;
      objc_autoreleasePoolPop(v7);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v11), sel_unlock);
    swift_release_n();
    goto LABEL_12;
  }
  v8 = (_opaque_pthread_t *)v7[18];
  swift_retain_n();
  swift_retain();
  v9 = pthread_self();
  if (!pthread_equal(v8, v9))
  {
    swift_retain();
    sub_1B1E6110C((uint64_t)v7, a2);
    goto LABEL_8;
  }
  sub_1B1DAAED0();
  v10 = (void *)MEMORY[0x1B5E22F20]();
  sub_1B1E73664(a2);
  if (!v2)
  {
    objc_autoreleasePoolPop(v10);
    sub_1B1DACAE0(a1);
LABEL_8:
    swift_release_n();
    swift_release();
LABEL_12:
    swift_release();
    return;
  }
  objc_autoreleasePoolPop(v10);
  __break(1u);
LABEL_14:
  objc_autoreleasePoolPop(v7);
  __break(1u);
}

void sub_1B1D9E858(uint64_t a1, void *a2)
{
  sub_1B1DA3C48(a1, a2, sub_1B1E6120C, (void (*)(void))sub_1B1E71CBC, (void (*)(uint64_t, id))sub_1B1D9E858);
}

uint64_t sub_1B1D9E884(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _opaque_pthread_t *v11;
  _opaque_pthread_t *v12;
  uint64_t v13;
  void *v14;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v9 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  swift_retain();
  swift_retain();
  if (v10)
  {
    v11 = *(_opaque_pthread_t **)(v10 + 144);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    v12 = pthread_self();
    if (pthread_equal(v11, v12))
    {
      sub_1B1DAAED0();
      sub_1B1790CB8(a2, a3, a4);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      swift_retain();
      sub_1B1E61228(v10, a2, a3, a4);
    }
    swift_release();
    swift_release();
  }
  else
  {
    v13 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_retain_n();
    objc_msgSend(v14, sel_lock);
    if (*(_QWORD *)(a1 + v9))
    {
      swift_retain();
      swift_retain();
      sub_1B1D9E884(a1, a2, a3, a4);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1790CB8(a2, a3, a4);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v13), sel_unlock);
    swift_release();
  }
  swift_release();
  swift_release_n();
  return swift_release_n();
}

uint64_t sub_1B1D9EA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  _opaque_pthread_t *v13;
  _opaque_pthread_t *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v11 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v12)
  {
    v13 = *(_opaque_pthread_t **)(v12 + 144);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v14 = pthread_self();
    if (pthread_equal(v13, v14))
    {
      sub_1B1DAAED0();
      v15 = sub_1B1FF36E8(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
      if ((v16 & 1) == 0)
      {
        v17 = v15;
        if ((a6 & 1) != 0)
          sub_1B1FE1E1C((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1E636CB80, v15, 0);
        else
          sub_1B1FE16DC((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1E636CB80, v15);
        sub_1B1DA8680(v17, a6 & 1);
      }
      sub_1B1DACAE0(a1);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_18:
      swift_release();
      goto LABEL_19;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B1E61354(v12, a2, a3, a4, a5 & 0xFFFFFFFFFFLL, a6 & 1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v19, sel_lock);
    if (!*(_QWORD *)(a1 + v11))
    {
      sub_1B1DAAED0();
      v20 = sub_1B1FF36E8(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
      if ((v21 & 1) == 0)
      {
        v22 = v20;
        if ((a6 & 1) != 0)
          sub_1B1FE1E1C((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1E636CB80, v20, 0);
        else
          sub_1B1FE16DC((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1E636CB80, v20);
        sub_1B1DA8680(v22, a6 & 1);
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v18), sel_unlock);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B1D9EA90(a1, a2, a3, a4, a5 & 0xFFFFFFFFFFLL, a6 & 1);
    objc_msgSend(*(id *)(a1 + v18), sel_unlock);
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

void sub_1B1D9ED98(uint64_t a1, id *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  _opaque_pthread_t *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v9 = *(_opaque_pthread_t **)(v8 + 144);
    v10 = a3;
    swift_retain();
    v11 = pthread_self();
    if (pthread_equal(v9, v11))
    {
      sub_1B1DAAED0();
      sub_1B1C2C874(a2, v10, a4);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v15 = v10;
      sub_1B1E6149C(v8, a2, v15, a4);

    }
    swift_release();
  }
  else
  {
    v12 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v13 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v14 = a3;
    objc_msgSend(v13, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v14 = v14;
      sub_1B1D9ED98(a1, a2, v14, a4);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1C2C874(a2, v14, a4);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v12), sel_unlock);

  }
}

void sub_1B1D9EF44(uint64_t a1, void *a2, void *a3, id *a4)
{
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  id v11;
  id v12;
  char *v13;
  _opaque_pthread_t *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v9 = *(_opaque_pthread_t **)(v8 + 144);
    v10 = a2;
    v11 = a3;
    v12 = v10;
    v13 = (char *)v11;
    swift_retain();
    v14 = pthread_self();
    if (pthread_equal(v9, v14))
    {
      sub_1B1DAAED0();
      sub_1B1C2CA08((uint64_t)v12, v13, a4);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v22 = v12;
      v23 = v13;
      sub_1B1E61590(v8, v22, v23, a4);

    }
    swift_release();
  }
  else
  {
    v24 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    v17 = a3;
    v18 = v16;
    v19 = v17;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v20 = v18;
      v21 = v19;
      sub_1B1D9EF44(a1, v20, v21, a4);
      objc_msgSend(*(id *)(a1 + v24), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1C2CA08((uint64_t)v18, (char *)v19, a4);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v24), sel_unlock);

    }
  }

}

void sub_1B1D9F164(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  id v8;
  id v9;
  char *v10;
  char *v11;
  _opaque_pthread_t *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  v29 = a3;
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    v9 = a3;
    v10 = (char *)v8;
    v11 = (char *)v9;
    swift_retain();
    v12 = pthread_self();
    if (pthread_equal(v7, v12))
    {
      sub_1B1DAAED0();
      sub_1B1B688C8(*(unsigned int *)&v11[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)v11[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] << 32), 0, 1);
      v13 = &v10[OBJC_IVAR____TtC3VFX8VFXScene_effects];
      v14 = v11;
      v15 = sub_1B1DADDD8(v13, (uint64_t)v14);

      if (*(_QWORD *)v13 >> 62)
      {
        swift_bridgeObjectRetain();
        v16 = sub_1B22296AC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = *(_QWORD *)((*(_QWORD *)v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      sub_1B1C9301C(v15, v16);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v24 = v10;
      v25 = v11;
      sub_1B1E61688(v6, v24, v25);

    }
    swift_release();
  }
  else
  {
    v17 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v18 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v19 = a2;
    v20 = a3;
    v21 = (char *)v19;
    v22 = (char *)v20;
    objc_msgSend(v18, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v21 = v21;
      v23 = v22;
      sub_1B1D9F164(a1, v21, v23);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1B688C8(*(unsigned int *)&v22[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)v22[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] << 32), 0, 1);
      v26 = &v21[OBJC_IVAR____TtC3VFX8VFXScene_effects];
      v23 = v22;
      v27 = sub_1B1DADDD8(v26, (uint64_t)v23);

      if (*(_QWORD *)v26 >> 62)
      {
        swift_bridgeObjectRetain();
        v28 = sub_1B22296AC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = *(_QWORD *)((*(_QWORD *)v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      sub_1B1C9301C(v27, v28);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v17), sel_unlock, v29);

  }
}

void sub_1B1D9F49C(uint64_t a1, void *a2)
{
  sub_1B1DA0E98(a1, a2, sub_1B1E6182C, (void (*)(id))sub_1B1C2CD40, (void (*)(uint64_t, id))sub_1B1D9F49C);
}

void sub_1B1D9F4C8(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _opaque_pthread_t *v12;
  id v13;
  id v14;
  _opaque_pthread_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;

  v10 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v11)
  {
    v12 = *(_opaque_pthread_t **)(v11 + 144);
    v13 = a3;
    swift_bridgeObjectRetain_n();
    v14 = v13;
    swift_retain();
    v15 = pthread_self();
    if (pthread_equal(v12, v15))
    {
      sub_1B1DAAED0();
      *a2 = sub_1B1FF9A8C(a4, a5);
      sub_1B1DACAE0(a1);
      swift_bridgeObjectRelease();

    }
    else
    {
      v20 = v14;
      swift_bridgeObjectRetain();
      sub_1B1E61848(v11, a2, v20, a4, a5);
      swift_bridgeObjectRelease();

    }
    swift_release();
  }
  else
  {
    v16 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v18 = a3;
    swift_bridgeObjectRetain_n();
    v19 = v18;
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v10))
    {
      v19 = v19;
      swift_bridgeObjectRetain();
      sub_1B1D9F4C8(a1, a2, v19, a4, a5);
    }
    else
    {
      sub_1B1DAAED0();
      *a2 = sub_1B1FF9A8C(a4, a5);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v16), sel_unlock);
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease_n();

}

uint64_t sub_1B1D9F704(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t, void (*)(void), uint64_t), void (*a5)(uint64_t, void (*)(void), uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v11;
  _opaque_pthread_t *v12;
  uint64_t v14;
  void *v15;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v9)
  {
    v11 = *(_opaque_pthread_t **)(v9 + 144);
    swift_retain_n();
    swift_retain();
    v12 = pthread_self();
    if (pthread_equal(v11, v12))
    {
      sub_1B1DAAED0();
      a2();
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      a4(v9, a2, a3);
    }
    swift_release_n();
    swift_release();
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      swift_retain();
      a5(a1, a2, a3);
    }
    else
    {
      sub_1B1DAAED0();
      a2();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    swift_release_n();
  }
  return swift_release();
}

void sub_1B1D9F884(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, id *a5)
{
  uint64_t v9;
  uint64_t v10;
  _opaque_pthread_t *v11;
  id v12;
  id v13;
  _opaque_pthread_t *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;

  v9 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v10)
  {
    v11 = *(_opaque_pthread_t **)(v10 + 144);
    v12 = a2;
    swift_bridgeObjectRetain_n();
    v13 = v12;
    swift_retain();
    v14 = pthread_self();
    if (pthread_equal(v11, v14))
    {
      sub_1B1DAAED0();
      sub_1B1DBBA1C((uint64_t)v13, a3, a4, a5);
      sub_1B1DACAE0(a1);
    }
    else
    {
      v13 = v13;
      swift_bridgeObjectRetain();
      sub_1B1E61A1C(v10, v13, a3, a4, a5);
    }
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    swift_bridgeObjectRetain_n();
    v18 = v17;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v9))
    {
      v19 = v18;
      swift_bridgeObjectRetain();
      sub_1B1D9F884(a1, v19, a3, a4, a5);
    }
    else
    {
      v19 = v18;
      sub_1B1DAAED0();
      sub_1B1DBBA1C((uint64_t)v18, a3, a4, a5);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock);
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease_n();

}

void sub_1B1D9FAB0(uint64_t a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  _opaque_pthread_t *v13;
  char *v14;
  _opaque_pthread_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v11 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v12)
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v20 = a2;
    objc_msgSend(v19, sel_lock);
    if (*(_QWORD *)(a1 + v11))
    {
      v20 = v20;
      sub_1B1D9FAB0(a1, v20, a3, a4, a5);
    }
    else
    {
      sub_1B1DAAED0();
      v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
      v17 = (void *)MEMORY[0x1B5E22F20]();
      sub_1B1E733F4(v22, a3, a5, a4);
      if (v5)
        goto LABEL_13;
      objc_autoreleasePoolPop(v17);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v18), sel_unlock);

    goto LABEL_12;
  }
  v13 = *(_opaque_pthread_t **)(v12 + 144);
  v14 = a2;
  swift_retain();
  v15 = pthread_self();
  if (!pthread_equal(v13, v15))
  {
    v21 = v14;
    sub_1B1E61B2C(v12, v21, a3, a4, a5);

    goto LABEL_8;
  }
  sub_1B1DAAED0();
  v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  v17 = (void *)MEMORY[0x1B5E22F20]();
  sub_1B1E733F4(v16, a3, a5, a4);
  if (!v5)
  {
    objc_autoreleasePoolPop(v17);
    sub_1B1DACAE0(a1);

LABEL_8:
    swift_release();
LABEL_12:

    return;
  }
LABEL_13:
  objc_autoreleasePoolPop(v17);
  __break(1u);
}

uint64_t sub_1B1D9FCB8(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _opaque_pthread_t *v12;
  id v13;
  _opaque_pthread_t *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v19;

  v10 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v11)
  {
    v12 = *(_opaque_pthread_t **)(v11 + 144);
    swift_retain_n();
    v13 = a3;
    swift_retain();
    v14 = pthread_self();
    if (pthread_equal(v12, v14))
    {
      sub_1B1DAAED0();
      sub_1B1F4DF00(a2, (uint64_t)v13, a4);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      v13 = v13;
      sub_1B1E61C58(v11, a2, v13, a4);
    }

    swift_release();
  }
  else
  {
    v19 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    v16 = a3;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v10))
    {
      swift_retain();
      v17 = v16;
      sub_1B1D9FCB8(a1, a2, v17, a4, a5);
      objc_msgSend(*(id *)(a1 + v19), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F4DF00(a2, (uint64_t)v16, a4);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v19), sel_unlock);

    }
  }
  swift_release();

  return swift_release_n();
}

void sub_1B1D9FED8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  char *v11;
  _opaque_pthread_t *v12;
  uint64_t Strong;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  pthread_mutex_t *v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  _DWORD *is_locked;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  _DWORD *v26;
  char *v27;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v9 = *(_opaque_pthread_t **)(v8 + 144);
    swift_unknownObjectRetain_n();
    v10 = a2;
    swift_retain();
    v11 = (char *)v10;
    v12 = pthread_self();
    if (pthread_equal(v9, v12))
    {
      sub_1B1DAAED0();
      Strong = swift_weakLoadStrong();
      if (!Strong)
      {
        Strong = *(_QWORD *)&v11[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (Strong)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          Strong = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v24 = v11;
      swift_unknownObjectRetain();
      sub_1B1E2C9F8(0, Strong, a3, v24);
      swift_release();
      sub_1B1DACAE0(a1);
      swift_unknownObjectRelease();

      swift_release();
    }
    else
    {
      v18 = *(pthread_mutex_t **)(v8 + 64);
      v19 = v11;
      swift_unknownObjectRetain();
      pthread_mutex_lock(v18);
      v20 = runtime_thread_is_locked;
      is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
      ++*is_locked;
      if (swift_weakLoadStrong())
      {
        sub_1B1DAAED0();
        swift_release();
      }
      v22 = swift_weakLoadStrong();
      if (!v22)
      {
        v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (v22)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          v22 = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v25 = v19;
      swift_unknownObjectRetain();
      sub_1B1E2C9F8(0, v22, a3, v25);
      swift_release();
      if (swift_weakLoadStrong())
      {
        sub_1B1DAAE5C();
        swift_release();
      }
      v26 = (_DWORD *)v20(&runtime_thread_is_locked);
      --*v26;
      pthread_mutex_unlock(*(pthread_mutex_t **)(v8 + 64));
      swift_release();
      swift_unknownObjectRelease_n();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_unknownObjectRetain_n();
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v17 = v16;
      swift_unknownObjectRetain();
      sub_1B1D9FED8(a1, v17, a3);
      if (v3)
      {
        objc_msgSend(*(id *)(a1 + v14), sel_unlock);
        swift_unknownObjectRelease_n();

        return;
      }
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
      swift_unknownObjectRelease();

    }
    else
    {
      sub_1B1DAAED0();
      v23 = swift_weakLoadStrong();
      if (!v23)
      {
        v23 = *(_QWORD *)&v16[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (v23)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          v23 = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v27 = v16;
      swift_unknownObjectRetain();
      sub_1B1E2C9F8(0, v23, a3, v27);
      swift_release();
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
      swift_unknownObjectRelease();

    }
  }
  swift_unknownObjectRelease_n();

}

void sub_1B1DA0358(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  id v11;
  id v12;
  char *v13;
  _opaque_pthread_t *v14;
  uint64_t Strong;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  char *v22;
  id v23;
  pthread_mutex_t *v24;
  char *v25;
  id v26;
  uint64_t (*v27)(_QWORD);
  _DWORD *is_locked;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  char *v33;
  id v34;
  _DWORD *v35;
  char *v36;
  id v37;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v9 = *(_opaque_pthread_t **)(v8 + 144);
    v10 = a3;
    v11 = a2;
    v12 = v10;
    swift_retain();
    v13 = (char *)v11;
    v14 = pthread_self();
    if (pthread_equal(v9, v14))
    {
      sub_1B1DAAED0();
      Strong = swift_weakLoadStrong();
      if (!Strong)
      {
        Strong = *(_QWORD *)&v13[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (Strong)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          Strong = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v31 = v13;
      v32 = v12;
      sub_1B1E2CB34(0, Strong, a3, v31);
      swift_release();
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v24 = *(pthread_mutex_t **)(v8 + 64);
      v25 = v13;
      v26 = v12;
      pthread_mutex_lock(v24);
      v27 = runtime_thread_is_locked;
      is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
      ++*is_locked;
      if (swift_weakLoadStrong())
      {
        sub_1B1DAAED0();
        swift_release();
      }
      v29 = swift_weakLoadStrong();
      if (!v29)
      {
        v29 = *(_QWORD *)&v25[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (v29)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          v29 = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v33 = v25;
      v34 = v26;
      sub_1B1E2CB34(0, v29, a3, v33);
      swift_release();
      if (swift_weakLoadStrong())
      {
        sub_1B1DAAE5C();
        swift_release();
      }
      v35 = (_DWORD *)v27(&runtime_thread_is_locked);
      --*v35;
      pthread_mutex_unlock(*(pthread_mutex_t **)(v8 + 64));
      swift_release();

    }
  }
  else
  {
    v16 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v18 = a3;
    v19 = a2;
    v20 = v18;
    v21 = (char *)v19;
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v22 = v21;
      v23 = v20;
      sub_1B1DA0358(a1, v22, a3);
      if (v3)
      {
        objc_msgSend(*(id *)(a1 + v16), sel_unlock);

        return;
      }
      objc_msgSend(*(id *)(a1 + v16), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      v30 = swift_weakLoadStrong();
      if (!v30)
      {
        v30 = *(_QWORD *)&v21[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (v30)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          v30 = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v36 = v21;
      v37 = v20;
      sub_1B1E2CB34(0, v30, a3, v36);
      swift_release();
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v16), sel_unlock);

    }
  }

}

void sub_1B1DA07DC(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  id v9;
  _opaque_pthread_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    v9 = a2;
    swift_retain();
    v10 = pthread_self();
    if (pthread_equal(v8, v10))
    {
      sub_1B1DAAED0();
      sub_1B1DC1640((uint64_t)v9, a3 & 1);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v14 = v9;
      sub_1B1E61D68(v7, v14, a3 & 1);

    }
    swift_release();
  }
  else
  {
    v11 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v12 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v13 = a2;
    objc_msgSend(v12, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      v13 = v13;
      sub_1B1DA07DC(a1, v13, a3 & 1);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1DC1640((uint64_t)v13, a3 & 1);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v11), sel_unlock);

  }
}

void sub_1B1DA0970(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  char *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  char v36;
  _BYTE v37[32];
  void *v38;

  v2 = a2;
  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
      v9 = *(unsigned int *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4];
      Strong = swift_weakLoadStrong();
      if (!Strong)
      {
        Strong = *(_QWORD *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (Strong)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          Strong = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v38 = v2;
      v20 = swift_release();
      MEMORY[0x1E0C80A78](v20, v21);
      if ((_DWORD)v10 != -1 || (_DWORD)v9 != 0)
      {
        v32 = v10;
        v23 = *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        v30 = v9;
        if (v23)
        {
          v24 = *(_BYTE *)(v23 + 80);
          MEMORY[0x1B5E240CC](v23 + 48);
          v23 = *(_QWORD *)(v23 + 56);
        }
        else
        {
          v24 = 0;
        }
        swift_unknownObjectUnownedInit();
        v34[0] = Strong;
        v35 = v23;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        v36 = v24;
        sub_1B1A02530((uint64_t)v34, (uint64_t)v37);
        sub_1B1DA5868((uint64_t *)(v32 | (v30 << 32)));
        sub_1B1A0256C((uint64_t)v37);
        sub_1B1E31340(1);
        swift_release();
      }
      sub_1B1DACAE0(a1);

      swift_release();
LABEL_32:
      v2 = v38;
      goto LABEL_33;
    }
    v16 = v7;
    sub_1B1E61E54(v5, v16);

    swift_release();
  }
  else
  {
    v12 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v13 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v14 = a2;
    objc_msgSend(v13, sel_lock);
    if (!*(_QWORD *)(a1 + v4))
    {
      sub_1B1DAAED0();
      v18 = *(unsigned int *)&v14[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
      v17 = *(unsigned int *)&v14[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4];
      v19 = swift_weakLoadStrong();
      if (!v19)
      {
        v19 = *(_QWORD *)&v14[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
        if (v19)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          v19 = swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      v38 = v2;
      v25 = swift_release();
      MEMORY[0x1E0C80A78](v25, v26);
      if ((_DWORD)v18 != -1 || (_DWORD)v17 != 0)
      {
        v33 = v18;
        v28 = *(_QWORD *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
        swift_retain();
        v31 = v17;
        if (v28)
        {
          v29 = *(_BYTE *)(v28 + 80);
          MEMORY[0x1B5E240CC](v28 + 48);
          v28 = *(_QWORD *)(v28 + 56);
        }
        else
        {
          v29 = 0;
        }
        swift_unknownObjectUnownedInit();
        v34[0] = v19;
        v35 = v28;
        swift_unknownObjectUnownedAssign();
        swift_unownedRetain();
        swift_unknownObjectRelease();
        v36 = v29;
        sub_1B1A02530((uint64_t)v34, (uint64_t)v37);
        sub_1B1DA5868((uint64_t *)(v33 | (v31 << 32)));
        sub_1B1A0256C((uint64_t)v37);
        sub_1B1E31340(1);
        swift_release();
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v12), sel_unlock);

      goto LABEL_32;
    }
    v15 = v14;
    sub_1B1DA0970(a1, v15);
    objc_msgSend(*(id *)(a1 + v12), sel_unlock);

  }
LABEL_33:

}

void sub_1B1DA0E14(uint64_t a1, void *a2)
{
  sub_1B1DA0E98(a1, a2, sub_1B1E620B4, (void (*)(id))sub_1B1DC1E10, (void (*)(uint64_t, id))sub_1B1DA0E14);
}

void sub_1B1DA0E40(uint64_t a1, void *a2)
{
  sub_1B1DA0E98(a1, a2, sub_1B1E620D0, (void (*)(id))sub_1B1E45E78, (void (*)(uint64_t, id))sub_1B1DA0E40);
}

void sub_1B1DA0E6C(uint64_t a1, void *a2)
{
  sub_1B1DA0E98(a1, a2, sub_1B1E620EC, (void (*)(id))sub_1B1E46BD0, (void (*)(uint64_t, id))sub_1B1DA0E6C);
}

void sub_1B1DA0E98(uint64_t a1, void *a2, void (*a3)(uint64_t, id), void (*a4)(id), void (*a5)(uint64_t, id))
{
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v10;
  id v11;
  _opaque_pthread_t *v12;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v10 = *(_opaque_pthread_t **)(v8 + 144);
    v11 = a2;
    swift_retain();
    v12 = pthread_self();
    if (pthread_equal(v10, v12))
    {
      sub_1B1DAAED0();
      a4(v11);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v17 = v11;
      a3(v8, v17);

    }
    swift_release();
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v16 = v16;
      a5(a1, v16);
    }
    else
    {
      sub_1B1DAAED0();
      a4(v16);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v14), sel_unlock);

  }
}

uint64_t sub_1B1DA1028(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  _opaque_pthread_t *v15;
  id v16;
  id v17;
  _opaque_pthread_t *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;

  v12 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v13)
  {
    v15 = *(_opaque_pthread_t **)(v13 + 144);
    v16 = a2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v17 = v16;
    swift_retain();
    v18 = pthread_self();
    if (pthread_equal(v15, v18))
    {
      sub_1B1DAAED0();
      sub_1B1E48BA4((uint64_t)v17, a3, a4, a5, a6, a7, a8, a9);
      sub_1B1DACAE0(a1);
      swift_bridgeObjectRelease();

    }
    else
    {
      v22 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B1E621F0(v13, v22, a3, a4, a5, a6, a7, a8, a9);
      swift_bridgeObjectRelease();

    }
    swift_release();
  }
  else
  {
    v24 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v20 = a2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v21 = v20;
    objc_msgSend(v19, sel_lock);
    if (*(_QWORD *)(a1 + v12))
    {
      v21 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B1DA1028(a1, v21, a3, a4, a5, a6, a7, a8, a9);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1E48BA4((uint64_t)v21, a3, a4, a5, a6, a7, a8, a9);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v24), sel_unlock);
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease_n();

  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

void sub_1B1DA12D8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v6)
  {
    v13 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v15 = a2;
    objc_msgSend(v14, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v15 = v15;
      sub_1B1DA12D8(a1, v15);
    }
    else
    {
      sub_1B1DAAED0();
      v17 = *(_QWORD *)(*(_QWORD *)&v15[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
      v18 = swift_retain();
      v8 = (char *)MEMORY[0x1B5E22F20](v18);
      sub_1B1E73530(v17);
      if (v2)
        goto LABEL_14;
      objc_autoreleasePoolPop(v8);
      swift_release();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v13), sel_unlock);

    goto LABEL_12;
  }
  v7 = *(_opaque_pthread_t **)(v6 + 144);
  v8 = a2;
  swift_retain();
  v9 = pthread_self();
  if (!pthread_equal(v7, v9))
  {
    v16 = v8;
    sub_1B1E62330(v6, v16);

    goto LABEL_8;
  }
  sub_1B1DAAED0();
  v10 = *(_QWORD *)(*(_QWORD *)&v8[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  v11 = swift_retain();
  v12 = (void *)MEMORY[0x1B5E22F20](v11);
  sub_1B1E73530(v10);
  if (!v2)
  {
    objc_autoreleasePoolPop(v12);
    swift_release();
    sub_1B1DACAE0(a1);

LABEL_8:
    swift_release();
LABEL_12:

    return;
  }
  objc_autoreleasePoolPop(v12);
  __break(1u);
LABEL_14:
  objc_autoreleasePoolPop(v8);
  __break(1u);
}

void sub_1B1DA14E0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  id v9;
  id v10;
  _opaque_pthread_t *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    v9 = a2;
    swift_unknownObjectRetain_n();
    v10 = v9;
    swift_retain();
    v11 = pthread_self();
    if (pthread_equal(v8, v11))
    {
      sub_1B1DAAED0();
      sub_1B1E49448((uint64_t)v10, a3);
      sub_1B1DACAE0(a1);
      swift_unknownObjectRelease();

    }
    else
    {
      v16 = v10;
      swift_unknownObjectRetain();
      sub_1B1E62454(v7, v16, a3);
      swift_unknownObjectRelease();

    }
    swift_release();
  }
  else
  {
    v12 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v13 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v14 = a2;
    swift_unknownObjectRetain_n();
    v15 = v14;
    objc_msgSend(v13, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      v15 = v15;
      swift_unknownObjectRetain();
      sub_1B1DA14E0(a1, v15, a3);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1E49448((uint64_t)v15, a3);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v12), sel_unlock);
    swift_unknownObjectRelease();

  }
  swift_unknownObjectRelease_n();

}

void sub_1B1DA16C0(uint64_t a1, void *a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  char *v10;
  _opaque_pthread_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v8)
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v17 = v17;
      sub_1B1DA16C0(a1, v17, a3);
    }
    else
    {
      sub_1B1DAAED0();
      v19 = *(_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
      v20 = swift_retain();
      v10 = (char *)MEMORY[0x1B5E22F20](v20);
      sub_1B1E73530(v19);
      if (v3)
        goto LABEL_14;
      objc_autoreleasePoolPop(v10);
      swift_release();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock);

    goto LABEL_12;
  }
  v9 = *(_opaque_pthread_t **)(v8 + 144);
  v10 = a2;
  swift_retain();
  v11 = pthread_self();
  if (!pthread_equal(v9, v11))
  {
    v18 = v10;
    sub_1B1E62330(v8, v18);

    goto LABEL_8;
  }
  sub_1B1DAAED0();
  v12 = *(_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  v13 = swift_retain();
  v14 = (void *)MEMORY[0x1B5E22F20](v13);
  sub_1B1E73530(v12);
  if (!v3)
  {
    objc_autoreleasePoolPop(v14);
    swift_release();
    sub_1B1DACAE0(a1);

LABEL_8:
    swift_release();
LABEL_12:

    return;
  }
  objc_autoreleasePoolPop(v14);
  __break(1u);
LABEL_14:
  objc_autoreleasePoolPop(v10);
  __break(1u);
}

void sub_1B1DA18DC(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v10;
  id v11;
  id v12;
  _opaque_pthread_t *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v9)
  {
    v10 = *(_opaque_pthread_t **)(v9 + 144);
    v11 = a2;
    swift_unknownObjectRetain_n();
    v12 = v11;
    swift_retain();
    v13 = pthread_self();
    if (pthread_equal(v10, v13))
    {
      sub_1B1DAAED0();
      sub_1B1E49448((uint64_t)v12, a3);
      sub_1B1DACAE0(a1);
      swift_unknownObjectRelease();

    }
    else
    {
      v18 = v12;
      swift_unknownObjectRetain();
      sub_1B1E62548(v9, v18, a3);
      swift_unknownObjectRelease();

    }
    swift_release();
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    swift_unknownObjectRetain_n();
    v17 = v16;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      v17 = v17;
      swift_unknownObjectRetain();
      sub_1B1DA18DC(a1, v17, a3, a4);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1E49448((uint64_t)v17, a3);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    swift_unknownObjectRelease();

  }
  swift_unknownObjectRelease_n();

}

void sub_1B1DA1AD8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  char *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      v9 = *(_QWORD *)(*(_QWORD *)&v7[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
      MEMORY[0x1E0C80A78](v10, v11);
      v12 = *(_QWORD **)(v9 + 176);
      swift_retain();
      swift_retain();
      sub_1B1F21F8C((uint64_t)&type metadata for WorldFromScene, (uint64_t)&off_1E6382A80, v12, (void (*)(uint64_t))sub_1B1DB39FC);
      swift_release();
      swift_release();
      sub_1B1DACAE0(a1);

    }
    else
    {
      v16 = v7;
      sub_1B1E6264C(v5, v16);

    }
    swift_release();
  }
  else
  {
    v13 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v15 = a2;
    objc_msgSend(v14, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v15 = v15;
      sub_1B1DA1AD8(a1, v15);
    }
    else
    {
      sub_1B1DAAED0();
      v17 = *(_QWORD *)(*(_QWORD *)&v15[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
      MEMORY[0x1E0C80A78](v18, v19);
      v20 = *(_QWORD **)(v17 + 176);
      swift_retain();
      swift_retain();
      sub_1B1F21F8C((uint64_t)&type metadata for WorldFromScene, (uint64_t)&off_1E6382A80, v20, (void (*)(uint64_t))sub_1B1DB35EC);
      swift_release();
      swift_release();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v13), sel_unlock);

  }
}

void sub_1B1DA1D64(uint64_t a1, void *a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, __n128 a6)
{
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v10;
  _BYTE *v11;
  _opaque_pthread_t *v12;
  float32x4_t v13;
  float v14;
  float32x4_t v15;
  float32x4_t v16;
  int32x4_t v17;
  float32x4_t v18;
  float v19;
  __n128 v20;
  int32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  int32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  int32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int32x4_t v35;
  int32x4_t v36;
  int8x16_t v37;
  float32x4_t v38;
  float v39;
  int32x4_t v40;
  float v41;
  float32x4_t v42;
  float v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  __n128 v48;
  uint64_t v49;
  void *v50;
  char *v51;
  _BYTE *v52;
  float v54;
  int8x16_t v55;
  int8x16_t v56;
  int32x2_t v57;
  float32x4_t v58;
  float v59;
  float32x4_t v60;
  float32x4_t v61;
  int32x4_t v62;
  float32x4_t v63;
  float v64;
  __n128 v65;
  int32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  int32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  int32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int32x4_t v80;
  int32x4_t v81;
  int8x16_t v82;
  float32x4_t v83;
  float v84;
  int32x4_t v85;
  float v86;
  float32x4_t v87;
  float v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  __n128 v93;
  float v94;
  float32x2_t v95;
  float32x2_t v96;
  float32x2_t v97;
  uint64_t v98;
  int32x2_t v99;
  float v101;
  int8x16_t v102;
  int8x16_t v103;
  int32x2_t v104;
  float32x2_t v105;
  float32x2_t v106;
  int32x2_t v107;
  float v108;
  float32x2_t v109;
  float32x2_t v110;
  float32x2_t v111;
  uint64_t v112;
  int32x2_t v113;
  float32x2_t v114;
  float32x2_t v115;
  int32x2_t v116;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v9)
  {
    v10 = *(_opaque_pthread_t **)(v9 + 144);
    v11 = a2;
    swift_retain();
    v12 = pthread_self();
    if (pthread_equal(v10, v12))
    {
      sub_1B1DAAED0();
      v13 = vmulq_f32(a3, a3);
      v14 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]);
      v15 = vmulq_f32(a4, a4);
      v16 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2);
      *(float *)v17.i32 = sqrtf(vaddq_f32(v16, vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))).f32[0]);
      v18 = vmulq_f32(a5, a5);
      LODWORD(v19) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v18, 2), vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v18.f32, 1))).u32[0];
      v20.n128_u32[3] = 0;
      v21 = vzip2q_s32((int32x4_t)v13, (int32x4_t)v18);
      v22 = (float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)v13, (int32x4_t)v18), (int32x4_t)v15);
      v23 = (float32x4_t)vtrn2q_s32((int32x4_t)v13, (int32x4_t)v15);
      v23.i32[2] = v18.i32[1];
      v24 = vaddq_f32((float32x4_t)vzip1q_s32(v21, (int32x4_t)v16), vaddq_f32(v22, v23));
      v15.i64[0] = 0x80000000800000;
      v15.i64[1] = 0x80000000800000;
      v25 = vcgeq_f32(v15, v24);
      v24.i32[3] = 0;
      v26 = vrsqrteq_f32(v24);
      v27 = vmulq_f32(v26, vrsqrtsq_f32(v24, vmulq_f32(v26, v26)));
      v28 = v25;
      v28.i32[3] = 0;
      v29 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v28), (int8x16_t)v24, (int8x16_t)vmulq_f32(v27, vrsqrtsq_f32(v24, vmulq_f32(v27, v27))));
      v30 = vmulq_n_f32(a3, v29.f32[0]);
      v31 = vmulq_lane_f32(a4, *(float32x2_t *)v29.f32, 1);
      v32 = vmulq_laneq_f32(a5, v29, 2);
      v33 = (int8x16_t)vuzp1q_s32((int32x4_t)v32, (int32x4_t)v32);
      v34 = (int8x16_t)vuzp1q_s32((int32x4_t)v31, (int32x4_t)v31);
      v35 = (int32x4_t)v30;
      if (v25.i32[0])
      {
        v36 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v33, (int8x16_t)v32, 0xCuLL), vnegq_f32(v31)), v32, (float32x4_t)vextq_s8(v34, (int8x16_t)v31, 0xCuLL));
        v35 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v36, v36), (int8x16_t)v36, 0xCuLL);
      }
      v20.n128_f32[0] = v14;
      v37 = (int8x16_t)vuzp1q_s32((int32x4_t)v30, (int32x4_t)v30);
      v38 = v31;
      v39 = sqrtf(v19);
      if (v25.i32[1])
      {
        v40 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v37, (int8x16_t)v30, 0xCuLL), vnegq_f32(v32)), v30, (float32x4_t)vextq_s8(v33, (int8x16_t)v32, 0xCuLL));
        v38 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v40, v40), (int8x16_t)v40, 0xCuLL);
      }
      v20.n128_u32[1] = v17.i32[0];
      if (v25.i32[2])
      {
        v17 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v34, (int8x16_t)v31, 0xCuLL), vnegq_f32(v30)), v31, (float32x4_t)vextq_s8(v37, (int8x16_t)v30, 0xCuLL));
        v32 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v17, v17), (int8x16_t)v17, 0xCuLL);
      }
      v20.n128_f32[2] = v39;
      v41 = (float)(*(float *)v35.i32 + v38.f32[1]) + v32.f32[2];
      if (v41 <= 0.0)
      {
        if (*(float *)v35.i32 < v38.f32[1] || *(float *)v35.i32 < v32.f32[2])
        {
          v48 = a6;
          if (v38.f32[1] <= v32.f32[2])
          {
            *(float32x2_t *)v46.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v35, (int32x4_t)v38), *(float32x2_t *)v32.f32);
            v105 = (float32x2_t)__PAIR64__(v35.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v32.f32[2] + 1.0) - *(float *)v35.i32) - v38.f32[1])));
            v106 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v38.f32, 0);
            v107 = (int32x2_t)vsub_f32(*(float32x2_t *)v35.i8, v106);
            v106.i32[0] = v105.i32[0];
            v106.i32[0] = vmul_f32(v105, v106).u32[0];
            v106.i32[1] = v107.i32[1];
            *(float32x2_t *)&v46.u32[2] = v106;
            *(float *)v107.i32 = 0.5 / v105.f32[0];
            v47 = (float32x4_t)vdupq_lane_s32(v107, 0);
          }
          else
          {
            v54 = sqrtf((float)((float)(v38.f32[1] + 1.0) - *(float *)v35.i32) - v32.f32[2]);
            *(int32x2_t *)v17.i8 = vdup_laneq_s32((int32x4_t)v38, 2);
            v55 = (int8x16_t)v17;
            *(float *)v55.i32 = v54;
            v55.i32[0] = vmul_f32(*(float32x2_t *)v55.i8, (float32x2_t)__PAIR64__(v32.u32[1], LODWORD(v54))).u32[0];
            v55.i32[1] = vadd_f32(*(float32x2_t *)&v17, *(float32x2_t *)&v32).i32[1];
            v56 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v35.i8, 1), v38);
            v57 = (int32x2_t)vsubq_f32(v32, (float32x4_t)vdupq_laneq_s32(v35, 2)).u64[0];
            v47 = (float32x4_t)vextq_s8(vextq_s8(v56, v56, 4uLL), v55, 0xCuLL);
            v47.i32[3] = v57.i32[0];
            *(float *)v57.i32 = 0.5 / v54;
            v46 = (float32x4_t)vdupq_lane_s32(v57, 0);
          }
        }
        else
        {
          v94 = sqrtf((float)((float)(*(float *)v35.i32 + 1.0) - v38.f32[1]) - v32.f32[2]);
          v95 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v38.f32, 0);
          v96 = vadd_f32(*(float32x2_t *)v35.i8, v95);
          v95.f32[0] = v94;
          v47.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v35.u32[1], LODWORD(v94)), v95).u32[0];
          v47.i32[1] = v96.i32[1];
          v97 = (float32x2_t)vzip2q_s32(v35, (int32x4_t)v38).u64[0];
          LODWORD(v98) = vadd_f32(v97, *(float32x2_t *)v32.f32).u32[0];
          v99 = (int32x2_t)vsub_f32(v97, *(float32x2_t *)v32.f32);
          HIDWORD(v98) = v99.i32[1];
          v47.i64[1] = v98;
          *(float *)v99.i32 = 0.5 / v94;
          v46 = (float32x4_t)vdupq_lane_s32(v99, 0);
          v48 = a6;
        }
      }
      else
      {
        v42 = (float32x4_t)vzip2q_s32((int32x4_t)v38, vuzp1q_s32((int32x4_t)v38, (int32x4_t)v32));
        v42.i32[2] = v35.i32[1];
        v43 = sqrtf(v41 + 1.0);
        v44 = (float32x4_t)vtrn2q_s32((int32x4_t)v32, vzip2q_s32((int32x4_t)v32, v35));
        v44.i32[2] = v38.i32[0];
        v46 = vsubq_f32(v42, v44);
        v42.f32[3] = v43;
        v44.f32[3] = v43;
        v45 = vmulq_f32(v42, v44);
        v46.i32[3] = v45.i32[3];
        v45.f32[0] = 0.5 / v43;
        v47 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v45.f32, 0);
        v48 = a6;
      }
      sub_1B1E49928(*(_QWORD *)&v11[OBJC_IVAR___VFXREScene_rootEntity], v11[OBJC_IVAR___VFXREScene_rootEntity + 8], v20, (__n128)vmulq_f32(v46, v47), v48);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v52 = v11;
      sub_1B1E627BC(v9, v52, a3, a4, a5, a6);

    }
    swift_release();
  }
  else
  {
    v49 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v50 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v51 = a2;
    objc_msgSend(v50, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      v51 = v51;
      sub_1B1DA1D64(a1, v51, (__n128)a3, (__n128)a4, (__n128)a5, a6);
    }
    else
    {
      sub_1B1DAAED0();
      v58 = vmulq_f32(a3, a3);
      v59 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v58, 2), vaddq_f32(v58, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v58.f32, 1))).f32[0]);
      v60 = vmulq_f32(a4, a4);
      v61 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v60, 2);
      *(float *)v62.i32 = sqrtf(vaddq_f32(v61, vaddq_f32(v60, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v60.f32, 1))).f32[0]);
      v63 = vmulq_f32(a5, a5);
      LODWORD(v64) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v63, 2), vaddq_f32(v63, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v63.f32, 1))).u32[0];
      v65.n128_u32[3] = 0;
      v66 = vzip2q_s32((int32x4_t)v58, (int32x4_t)v63);
      v67 = (float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)v58, (int32x4_t)v63), (int32x4_t)v60);
      v68 = (float32x4_t)vtrn2q_s32((int32x4_t)v58, (int32x4_t)v60);
      v68.i32[2] = v63.i32[1];
      v69 = vaddq_f32((float32x4_t)vzip1q_s32(v66, (int32x4_t)v61), vaddq_f32(v67, v68));
      v60.i64[0] = 0x80000000800000;
      v60.i64[1] = 0x80000000800000;
      v70 = vcgeq_f32(v60, v69);
      v69.i32[3] = 0;
      v71 = vrsqrteq_f32(v69);
      v72 = vmulq_f32(v71, vrsqrtsq_f32(v69, vmulq_f32(v71, v71)));
      v73 = v70;
      v73.i32[3] = 0;
      v74 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v73), (int8x16_t)v69, (int8x16_t)vmulq_f32(v72, vrsqrtsq_f32(v69, vmulq_f32(v72, v72))));
      v75 = vmulq_n_f32(a3, v74.f32[0]);
      v76 = vmulq_lane_f32(a4, *(float32x2_t *)v74.f32, 1);
      v77 = vmulq_laneq_f32(a5, v74, 2);
      v78 = (int8x16_t)vuzp1q_s32((int32x4_t)v77, (int32x4_t)v77);
      v79 = (int8x16_t)vuzp1q_s32((int32x4_t)v76, (int32x4_t)v76);
      v80 = (int32x4_t)v75;
      if (v70.i32[0])
      {
        v81 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v78, (int8x16_t)v77, 0xCuLL), vnegq_f32(v76)), v77, (float32x4_t)vextq_s8(v79, (int8x16_t)v76, 0xCuLL));
        v80 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v81, v81), (int8x16_t)v81, 0xCuLL);
      }
      v65.n128_f32[0] = v59;
      v82 = (int8x16_t)vuzp1q_s32((int32x4_t)v75, (int32x4_t)v75);
      v83 = v76;
      v84 = sqrtf(v64);
      if (v70.i32[1])
      {
        v85 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v82, (int8x16_t)v75, 0xCuLL), vnegq_f32(v77)), v75, (float32x4_t)vextq_s8(v78, (int8x16_t)v77, 0xCuLL));
        v83 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v85, v85), (int8x16_t)v85, 0xCuLL);
      }
      v65.n128_u32[1] = v62.i32[0];
      if (v70.i32[2])
      {
        v62 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v79, (int8x16_t)v76, 0xCuLL), vnegq_f32(v75)), v76, (float32x4_t)vextq_s8(v82, (int8x16_t)v75, 0xCuLL));
        v77 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v62, v62), (int8x16_t)v62, 0xCuLL);
      }
      v65.n128_f32[2] = v84;
      v86 = (float)(*(float *)v80.i32 + v83.f32[1]) + v77.f32[2];
      if (v86 <= 0.0)
      {
        if (*(float *)v80.i32 < v83.f32[1] || *(float *)v80.i32 < v77.f32[2])
        {
          v93 = a6;
          if (v83.f32[1] <= v77.f32[2])
          {
            *(float32x2_t *)v91.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v80, (int32x4_t)v83), *(float32x2_t *)v77.f32);
            v114 = (float32x2_t)__PAIR64__(v80.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)((float)(v77.f32[2] + 1.0) - *(float *)v80.i32) - v83.f32[1])));
            v115 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v83.f32, 0);
            v116 = (int32x2_t)vsub_f32(*(float32x2_t *)v80.i8, v115);
            v115.i32[0] = v114.i32[0];
            v115.i32[0] = vmul_f32(v114, v115).u32[0];
            v115.i32[1] = v116.i32[1];
            *(float32x2_t *)&v91.u32[2] = v115;
            *(float *)v116.i32 = 0.5 / v114.f32[0];
            v92 = (float32x4_t)vdupq_lane_s32(v116, 0);
          }
          else
          {
            v101 = sqrtf((float)((float)(v83.f32[1] + 1.0) - *(float *)v80.i32) - v77.f32[2]);
            *(int32x2_t *)v62.i8 = vdup_laneq_s32((int32x4_t)v83, 2);
            v102 = (int8x16_t)v62;
            *(float *)v102.i32 = v101;
            v102.i32[0] = vmul_f32(*(float32x2_t *)v102.i8, (float32x2_t)__PAIR64__(v77.u32[1], LODWORD(v101))).u32[0];
            v102.i32[1] = vadd_f32(*(float32x2_t *)&v62, *(float32x2_t *)&v77).i32[1];
            v103 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v80.i8, 1), v83);
            v104 = (int32x2_t)vsubq_f32(v77, (float32x4_t)vdupq_laneq_s32(v80, 2)).u64[0];
            v92 = (float32x4_t)vextq_s8(vextq_s8(v103, v103, 4uLL), v102, 0xCuLL);
            v92.i32[3] = v104.i32[0];
            *(float *)v104.i32 = 0.5 / v101;
            v91 = (float32x4_t)vdupq_lane_s32(v104, 0);
          }
        }
        else
        {
          v108 = sqrtf((float)((float)(*(float *)v80.i32 + 1.0) - v83.f32[1]) - v77.f32[2]);
          v109 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v83.f32, 0);
          v110 = vadd_f32(*(float32x2_t *)v80.i8, v109);
          v109.f32[0] = v108;
          v92.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v80.u32[1], LODWORD(v108)), v109).u32[0];
          v92.i32[1] = v110.i32[1];
          v111 = (float32x2_t)vzip2q_s32(v80, (int32x4_t)v83).u64[0];
          LODWORD(v112) = vadd_f32(v111, *(float32x2_t *)v77.f32).u32[0];
          v113 = (int32x2_t)vsub_f32(v111, *(float32x2_t *)v77.f32);
          HIDWORD(v112) = v113.i32[1];
          v92.i64[1] = v112;
          *(float *)v113.i32 = 0.5 / v108;
          v91 = (float32x4_t)vdupq_lane_s32(v113, 0);
          v93 = a6;
        }
      }
      else
      {
        v87 = (float32x4_t)vzip2q_s32((int32x4_t)v83, vuzp1q_s32((int32x4_t)v83, (int32x4_t)v77));
        v87.i32[2] = v80.i32[1];
        v88 = sqrtf(v86 + 1.0);
        v89 = (float32x4_t)vtrn2q_s32((int32x4_t)v77, vzip2q_s32((int32x4_t)v77, v80));
        v89.i32[2] = v83.i32[0];
        v91 = vsubq_f32(v87, v89);
        v87.f32[3] = v88;
        v89.f32[3] = v88;
        v90 = vmulq_f32(v87, v89);
        v91.i32[3] = v90.i32[3];
        v90.f32[0] = 0.5 / v88;
        v92 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v90.f32, 0);
        v93 = a6;
      }
      sub_1B1E49928(*(_QWORD *)&v51[OBJC_IVAR___VFXREScene_rootEntity], v51[OBJC_IVAR___VFXREScene_rootEntity + 8], v65, (__n128)vmulq_f32(v91, v92), v93);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v49), sel_unlock, *(_OWORD *)&a6);

  }
}

void sub_1B1DA249C(uint64_t a1, void *a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10)
{
  uint64_t v13;
  uint64_t v14;
  _opaque_pthread_t *v15;
  id v16;
  _opaque_pthread_t *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;

  v13 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v14)
  {
    v15 = *(_opaque_pthread_t **)(v14 + 144);
    v16 = a2;
    swift_retain();
    v17 = pthread_self();
    if (pthread_equal(v15, v17))
    {
      sub_1B1DAAED0();
      sub_1B1E4A1B8((uint64_t)v16, a3, a4, a5, a6, a7, a8, a9, a10);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v21 = v16;
      sub_1B1E62B70(v14, v21, a3, a4, a5, a6, a7, a8, a9, a10);

    }
    swift_release();
  }
  else
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v20 = a2;
    objc_msgSend(v19, sel_lock);
    if (*(_QWORD *)(a1 + v13))
    {
      v20 = v20;
      sub_1B1DA249C(a1, v20, a3, a4, a5, a6, a7, a8, a9, a10);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1E4A1B8((uint64_t)v20, a3, a4, a5, a6, a7, a8, a9, a10);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v18), sel_unlock, *(_OWORD *)&a4, *(_OWORD *)&a5, *(_OWORD *)&a6, *(_OWORD *)&a7, *(_OWORD *)&a8, *(_OWORD *)&a9, *(_OWORD *)&a10);

  }
}

void sub_1B1DA2680(uint64_t a1, void *a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(_QWORD *)(*(_QWORD *)&v8[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
      MEMORY[0x1E0C80A78](v11, v12);
      v13 = *(_QWORD **)(v10 + 176);
      swift_retain();
      swift_retain();
      sub_1B1F21F8C((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1E63A0688, v13, (void (*)(uint64_t))sub_1B1DB35A8);
      swift_release();
      swift_release();
      sub_1B1DACAE0(a1);

    }
    else
    {
      v17 = v8;
      sub_1B1E62C84(v6, v17);

    }
    swift_release();
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v16 = v16;
      sub_1B1DA2680(a1, v16, a3);
    }
    else
    {
      sub_1B1DAAED0();
      v18 = *(_QWORD *)(*(_QWORD *)&v16[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
      MEMORY[0x1E0C80A78](v19, v20);
      v21 = *(_QWORD **)(v18 + 176);
      swift_retain();
      swift_retain();
      sub_1B1F21F8C((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1E63A0688, v21, (void (*)(uint64_t))sub_1B1DB35A8);
      swift_release();
      swift_release();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v14), sel_unlock, a3.n128_u64[0]);

  }
}

uint64_t sub_1B1DA2934(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  void *v11;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    swift_retain_n();
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v8, v9))
    {
      sub_1B1DAAED0();
      sub_1B1DAC06C(a2, a3);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      sub_1B1E62E08(v7, a2, a3);
    }
    swift_release_n();
    swift_release();
  }
  else
  {
    v10 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v11 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    objc_msgSend(v11, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      swift_retain();
      sub_1B1DA2934(a1, a2, a3);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1DAC06C(a2, a3);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v10), sel_unlock);
    swift_release_n();
  }
  return swift_release();
}

void sub_1B1DA2AC4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  _BYTE *v7;
  _opaque_pthread_t *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _BYTE *v13;
  unint64_t v14;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      sub_1B1F43C48();
      if ((v7[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] & 1) != 0)
        v9 = 0x200000000;
      else
        v9 = *(unsigned int *)&v7[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)(*(_DWORD *)&v7[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] == 0) << 33);
      sub_1B1E711EC(v9);
      swift_release();
      sub_1B1DACAE0(a1);

    }
    else
    {
      v13 = v7;
      sub_1B1E62EF8(v5, v13);

    }
    swift_release();
  }
  else
  {
    v10 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v11 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v12 = a2;
    objc_msgSend(v11, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v12 = v12;
      sub_1B1DA2AC4(a1, v12);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F43C48();
      if ((v12[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] & 1) != 0)
        v14 = 0x200000000;
      else
        v14 = *(unsigned int *)&v12[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)(*(_DWORD *)&v12[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] == 0) << 33);
      sub_1B1E711EC(v14);
      swift_release();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v10), sel_unlock);

  }
}

uint64_t sub_1B1DA2CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t), uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  _opaque_pthread_t *v16;
  _opaque_pthread_t *v17;
  uint64_t v18;
  void *v19;

  v11 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v12)
  {
    v16 = *(_opaque_pthread_t **)(v12 + 144);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v17 = pthread_self();
    if (pthread_equal(v16, v17))
    {
      sub_1B1DAAED0();
      sub_1B1F4AFE8(a2, a3, a4, a5, a6, a7);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E63004(v12, a2, a3, a4, a5, a6, a7);
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v19, sel_lock);
    if (*(_QWORD *)(a1 + v11))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1DA2CA4(a1, a2, a3, a4, a5, a6, a7, a8);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F4AFE8(a2, a3, a4, a5, a6, a7);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v18), sel_unlock);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

uint64_t sub_1B1DA2ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t), uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  _opaque_pthread_t *v16;
  _opaque_pthread_t *v17;
  uint64_t v20;
  void *v21;

  v12 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v13)
  {
    v16 = *(_opaque_pthread_t **)(v13 + 144);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v17 = pthread_self();
    if (pthread_equal(v16, v17))
    {
      sub_1B1DAAED0();
      sub_1B1F4B120(a2, a3, a4, a5, a6, a7, a8, a9);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E6312C(v13, a2, a3, a4, a5, a6, a7, a8, a9);
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v20 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v21 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v21, sel_lock);
    if (*(_QWORD *)(a1 + v12))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1DA2ED0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F4B120(a2, a3, a4, a5, a6, a7, a8, a9);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v20), sel_unlock);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

void sub_1B1DA311C(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v10;
  id v11;
  id v12;
  _opaque_pthread_t *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v9)
  {
    v10 = *(_opaque_pthread_t **)(v9 + 144);
    swift_unknownObjectRetain_n();
    v11 = a2;
    swift_retain();
    v12 = v11;
    v13 = pthread_self();
    if (pthread_equal(v10, v13))
    {
      sub_1B1DAAED0();
      sub_1B1F46E08((uint64_t)v12, a3, a4);
      sub_1B1DACAE0(a1);
      swift_unknownObjectRelease();

    }
    else
    {
      v17 = v12;
      swift_unknownObjectRetain();
      sub_1B1E63258(v9, v17, a3, a4);
      swift_unknownObjectRelease();

    }
    swift_release();
  }
  else
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_unknownObjectRetain_n();
    v15 = a2;
    objc_msgSend(v14, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      v16 = v15;
      swift_unknownObjectRetain();
      sub_1B1DA311C(a1, v16, a3, a4);
      objc_msgSend(*(id *)(a1 + v18), sel_unlock);
      swift_unknownObjectRelease();

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F46E08((uint64_t)v15, a3, a4);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v18), sel_unlock);
      swift_unknownObjectRelease();

    }
  }
  swift_unknownObjectRelease_n();

}

void sub_1B1DA3344(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  _BYTE *v9;
  _opaque_pthread_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  _BYTE *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    v9 = a2;
    swift_retain();
    v10 = pthread_self();
    if (pthread_equal(v8, v10))
    {
      sub_1B1DAAED0();
      v11 = sub_1B1F4388C();
      if (v12)
      {
        sub_1B211DC90((a3 & 1) == 0, v11, v12);
      }
      else
      {
        v17 = a3 & 1;
        v9[OBJC_IVAR____TtC3VFX9VFXEffect__enabled] = v17;
        if (v9[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] != 1)
        {
          v18 = *(unsigned int *)&v9[OBJC_IVAR____TtC3VFX9VFXEffect_effectID];
          sub_1B1F43C48();
          v19 = swift_retain();
          sub_1B1DA35C8(v19, v17, v19, v18);
          swift_release();
        }
      }
      sub_1B1DACAE0(a1);

    }
    else
    {
      v16 = v9;
      sub_1B1E63354(v7, v16, a3 & 1);

    }
    swift_release();
  }
  else
  {
    v13 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v15 = a2;
    objc_msgSend(v14, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      v15 = v15;
      sub_1B1DA3344(a1, v15, a3 & 1);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = sub_1B1F4388C();
      if (v21)
      {
        sub_1B211DC90((a3 & 1) == 0, v20, v21);
      }
      else
      {
        v22 = a3 & 1;
        v15[OBJC_IVAR____TtC3VFX9VFXEffect__enabled] = v22;
        if (v15[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] != 1)
        {
          v23 = *(unsigned int *)&v15[OBJC_IVAR____TtC3VFX9VFXEffect_effectID];
          sub_1B1F43C48();
          v24 = swift_retain();
          sub_1B1DA35C8(v24, v22, v24, v23);
          swift_release();
        }
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v13), sel_unlock);

  }
}

uint64_t sub_1B1DA35C8(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v10;
  _opaque_pthread_t *v11;
  uint64_t v12;
  void *v13;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v9)
  {
    v10 = *(_opaque_pthread_t **)(v9 + 144);
    swift_retain_n();
    swift_retain();
    v11 = pthread_self();
    if (pthread_equal(v10, v11))
    {
      sub_1B1DAAED0();
      sub_1B1F4B254(a2 & 1, a3, a4);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      sub_1B1E634B4(v9, a2 & 1, a3, a4);
    }
    swift_release_n();
    swift_release();
  }
  else
  {
    v12 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v13 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    objc_msgSend(v13, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      swift_retain();
      sub_1B1DA35C8(a1, a2 & 1, a3, a4);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F4B254(a2 & 1, a3, a4);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v12), sel_unlock);
    swift_release_n();
  }
  return swift_release();
}

void sub_1B1DA376C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  _BYTE *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  _BYTE *v12;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      sub_1B1F43C48();
      sub_1B1B680B8(*(unsigned int *)&v7[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)v7[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] << 32), *(_QWORD *)&v7[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity], v7[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity + 8], v7[OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned]);
      swift_release();
      sub_1B1DACAE0(a1);

    }
    else
    {
      v12 = v7;
      sub_1B1E635AC(v5, v12);

    }
    swift_release();
  }
  else
  {
    v9 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v11 = a2;
    objc_msgSend(v10, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v11 = v11;
      sub_1B1DA376C(a1, v11);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F43C48();
      sub_1B1B680B8(*(unsigned int *)&v11[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)v11[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] << 32), *(_QWORD *)&v11[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity], v11[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity + 8], v11[OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned]);
      swift_release();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v9), sel_unlock);

  }
}

uint64_t sub_1B1DA3984(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  _opaque_pthread_t *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _opaque_pthread_t *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v26;

  v9 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v10)
  {
    v11 = *(_opaque_pthread_t **)(v10 + 144);
    v12 = a2;
    v13 = a3;
    swift_retain_n();
    swift_unknownObjectRetain_n();
    v14 = v12;
    v15 = v13;
    swift_retain();
    v16 = pthread_self();
    if (pthread_equal(v11, v16))
    {
      sub_1B1DAAED0();
      sub_1B20C1028((uint64_t)v14, (uint64_t)v15, a4, a5);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v23 = v14;
      v24 = v15;
      swift_retain();
      swift_unknownObjectRetain();
      sub_1B1E636D0(v10, v23, v24, a4, a5);

    }
    swift_release();
  }
  else
  {
    v26 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v18 = a2;
    v19 = a3;
    swift_retain_n();
    swift_unknownObjectRetain_n();
    v20 = v18;
    v21 = v19;
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v9))
    {
      v20 = v20;
      v22 = v21;
      swift_retain();
      swift_unknownObjectRetain();
      sub_1B1DA3984(a1, v20, v22, a4, a5);
      objc_msgSend(*(id *)(a1 + v26), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B20C1028((uint64_t)v20, (uint64_t)v21, a4, a5);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v26), sel_unlock);

    }
  }

  swift_unknownObjectRelease_n();
  return swift_release_n();
}

void sub_1B1DA3C1C(uint64_t a1, void *a2)
{
  sub_1B1DA3C48(a1, a2, sub_1B1E637F4, (void (*)(void))sub_1B1DABD7C, (void (*)(uint64_t, id))sub_1B1DA3C1C);
}

void sub_1B1DA3C48(uint64_t a1, void *a2, void (*a3)(uint64_t, id), void (*a4)(void), void (*a5)(uint64_t, id))
{
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v10;
  void *v11;
  id v12;
  _opaque_pthread_t *v13;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v10 = *(_opaque_pthread_t **)(v8 + 144);
    v11 = a2;
    v12 = a2;
    swift_retain();
    v13 = pthread_self();
    if (pthread_equal(v10, v13))
    {
      sub_1B1DAAED0();
      a4();
      sub_1B1DACAE0(a1);

    }
    else
    {
      v19 = v12;
      a3(v8, v19);

    }
    swift_release();
  }
  else
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v18 = v17;
      a5(a1, v18);
      objc_msgSend(*(id *)(a1 + v15), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      a4();
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v15), sel_unlock);

    }
    v11 = a2;
  }

}

uint64_t sub_1B1DA3DF8(uint64_t a1, void *a2, void *a3, void *a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  _opaque_pthread_t *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _opaque_pthread_t *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v29;

  v9 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v10)
  {
    v11 = *(_opaque_pthread_t **)(v10 + 144);
    v12 = a2;
    v13 = a3;
    swift_unknownObjectRetain_n();
    v14 = v12;
    v15 = v13;
    swift_retain();
    v16 = pthread_self();
    if (pthread_equal(v11, v16))
    {
      sub_1B1DAAED0();
      sub_1B20C195C((uint64_t)v14, (uint64_t)v15, a4, a5);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v26 = v14;
      v27 = v15;
      swift_unknownObjectRetain();
      sub_1B1E638EC(v10, v26, v27, a4, a5);

    }
    swift_release();
  }
  else
  {
    v29 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v18 = a2;
    v19 = a3;
    v20 = v18;
    v21 = v19;
    swift_unknownObjectRetain_n();
    v22 = v20;
    v23 = v21;
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v9))
    {
      v24 = v22;
      v25 = v23;
      swift_unknownObjectRetain();
      sub_1B1DA3DF8(a1, v24, v25, a4, a5);
      objc_msgSend(*(id *)(a1 + v29), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      sub_1B20C195C((uint64_t)v22, (uint64_t)v23, a4, a5);
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v29), sel_unlock);

    }
  }

  return swift_unknownObjectRelease_n();
}

void sub_1B1DA406C(uint64_t a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  id v9;
  _opaque_pthread_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    v9 = a3;
    swift_retain();
    v10 = pthread_self();
    if (pthread_equal(v8, v10))
    {
      sub_1B1DAAED0();
      sub_1B216808C(a2 & 1, (uint64_t)v9);
      sub_1B1DACAE0(a1);

    }
    else
    {
      v14 = v9;
      sub_1B1E639FC(v7, a2 & 1, v14);

    }
    swift_release();
  }
  else
  {
    v11 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v12 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v13 = a3;
    objc_msgSend(v12, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      v13 = v13;
      sub_1B1DA406C(a1, a2 & 1, v13);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B216808C(a2 & 1, (uint64_t)v13);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v11), sel_unlock);

  }
}

uint64_t sub_1B1DA4200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _opaque_pthread_t *v14;
  _opaque_pthread_t *v15;
  uint64_t v16;
  void *v17;

  v12 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v13)
  {
    v14 = *(_opaque_pthread_t **)(v13 + 144);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    v15 = pthread_self();
    if (pthread_equal(v14, v15))
    {
      sub_1B1DAAED0();
      sub_1B1A0A11C(a3, a4, a6);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      swift_retain();
      sub_1B1E63AE8(v13, a3, a4, a6);
    }
    swift_release();
    swift_release();
  }
  else
  {
    v16 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_retain_n();
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v12))
    {
      swift_retain();
      swift_retain();
      sub_1B1DA4200(a1, a2, a3, a4, a5);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1A0A11C(a3, a4, a6);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v16), sel_unlock);
    swift_release();
  }
  swift_release();
  swift_release_n();
  return swift_release_n();
}

uint64_t sub_1B1DA43FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  _opaque_pthread_t *v16;
  _opaque_pthread_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _OWORD v29[2];

  v14 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v15)
  {
    v16 = *(_opaque_pthread_t **)(v15 + 144);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v17 = pthread_self();
    if (pthread_equal(v16, v17))
    {
      sub_1B1DAAED0();
      v18 = sub_1B1FF36E8(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
      if ((v19 & 1) != 0)
      {
        *(_OWORD *)a8 = 0u;
        *(_OWORD *)(a8 + 16) = 0u;
      }
      else
      {
        v20 = v18;
        swift_bridgeObjectRetain();
        sub_1B1FDFBF0(v20, a2, a6, a7, v29);
        sub_1B1F4A59C((uint64_t)v29, (_QWORD *)a8);
        sub_1B1A0DD70((uint64_t)v29);
      }
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E63BFC(v15, a2, a3, a4, a5 & 0xFFFFFFFFFFLL, a6, a7, a8);
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v21 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v22 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v22, sel_lock);
    if (*(_QWORD *)(a1 + v14))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DA43FC(a1, a2, a3, a4, a5 & 0xFFFFFFFFFFLL, a6, a7);
    }
    else
    {
      sub_1B1DAAED0();
      v23 = sub_1B1FF36E8(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
      if ((v24 & 1) != 0)
      {
        *(_OWORD *)a8 = 0u;
        *(_OWORD *)(a8 + 16) = 0u;
      }
      else
      {
        v25 = v23;
        swift_bridgeObjectRetain();
        sub_1B1FDFBF0(v25, a2, a6, a7, v29);
        sub_1B1F4A59C((uint64_t)v29, (_QWORD *)a8);
        sub_1B1A0DD70((uint64_t)v29);
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v21), sel_unlock, a6);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

void sub_1B1DA46EC(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _opaque_pthread_t *v12;
  id v13;
  id v14;
  _opaque_pthread_t *v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  double v21;
  uint64_t v22;

  v10 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v11)
  {
    v12 = *(_opaque_pthread_t **)(v11 + 144);
    v13 = a2;
    swift_bridgeObjectRetain_n();
    v14 = v13;
    swift_retain();
    v15 = pthread_self();
    if (pthread_equal(v12, v15))
    {
      sub_1B1DAAED0();
      sub_1B1C2BDB0((uint64_t)v14, a3, a4, a5, v16);
      sub_1B1DACAE0(a1);
      swift_bridgeObjectRelease();

    }
    else
    {
      v20 = v14;
      swift_bridgeObjectRetain();
      sub_1B1E63D70(v11, v20, a3, a4, a5);
      swift_bridgeObjectRelease();

    }
    swift_release();
  }
  else
  {
    v22 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v18 = a2;
    swift_bridgeObjectRetain_n();
    v19 = v18;
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v10))
    {
      v19 = v19;
      swift_bridgeObjectRetain();
      sub_1B1DA46EC(a1, v19, a3, a4);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1C2BDB0((uint64_t)v19, a3, a4, a5, v21);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v22), sel_unlock);
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease_n();

}

uint64_t sub_1B1DA48E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _opaque_pthread_t *v14;
  _opaque_pthread_t *v15;
  uint64_t v16;
  void *v17;

  v12 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v13)
  {
    v14 = *(_opaque_pthread_t **)(v13 + 144);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v15 = pthread_self();
    if (pthread_equal(v14, v15))
    {
      sub_1B1DAAED0();
      sub_1B1F4AE94(a2, a3, a4, a5, a6);
      sub_1B1DACAE0(a1);
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E63E6C(v13, a2, a3, a4, a5, a6);
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v16 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v12))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1DA48E8(a1, a2, a3, a4, a5);
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F4AE94(a2, a3, a4, a5, a6);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v16), sel_unlock);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

uint64_t sub_1B1DA4AE8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_1B1DB0284(a1, a2, a3);

  return v4;
}

uint64_t sub_1B1DA4B24(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _OWORD v10[2];
  uint64_t v11;
  char v12;

  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v2 + 12 * (int)result + 8) == HIDWORD(result))
    {
      v3 = (int *)(v2 + 12 * (int)result);
      v4 = *((__int16 *)v3 + 2);
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * *v3 + 32);
      if (*(_QWORD *)(v5 + 232) <= v4 && *(_QWORD *)(v5 + 240) > v4)
      {
        v7 = **(_QWORD **)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        v8 = *(os_unfair_lock_s **)(v5 + 344);
        swift_retain();
        os_unfair_lock_lock(v8);
        ecs_stack_allocator_push_snapshot(*(_QWORD *)(v7 + 32));
        if (*(_QWORD *)(v5 + 256) > v4 || *(_QWORD *)(v5 + 232) <= v4)
        {
          v11 = 0;
          memset(v10, 0, sizeof(v10));
          v12 = 5;
          swift_retain();
          sub_1B1F05960((uint64_t *)(v7 + 104), (uint64_t)v10, v4, 0, v5, v7);
          sub_1B1B68F14((uint64_t)v10);
        }
        else
        {
          swift_retain();
        }
        sub_1B1F03804((char *)v5);
        swift_release();
        ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v7 + 32));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B1DA4C88(uint64_t a1)
{
  return sub_1B1DA4CA0(a1, (uint64_t (*)(void))sub_1B1C62F18);
}

uint64_t sub_1B1DA4C94(uint64_t a1)
{
  return sub_1B1DA4CA0(a1, (uint64_t (*)(void))sub_1B1C6899C);
}

uint64_t sub_1B1DA4CA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || a1 > *(_QWORD *)(v5 + 24) >> 1)
  {
    result = a2();
    v5 = result;
  }
  *v2 = v5;
  return result;
}

uint64_t sub_1B1DA4D04(uint64_t a1)
{
  return a1 >> 48;
}

uint64_t sub_1B1DA4D0C(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14[2];
  __int128 v15[2];
  uint64_t v16;

  v4 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v8 = a3 + 32;
    v9 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1B19FA198(v8, (uint64_t)v15);
      v4 = a2;
      v10 = a1(v15);
      if (v3)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v15);
        swift_release();
        swift_bridgeObjectRelease();
        return v4;
      }
      if ((v10 & 1) != 0)
      {
        sub_1B1A02518(v15, (uint64_t)v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1B202A198(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v16;
        v12 = *(_QWORD *)(v16 + 16);
        v11 = *(_QWORD *)(v16 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1B202A198(v11 > 1, v12 + 1, 1);
          v9 = v16;
        }
        *(_QWORD *)(v9 + 16) = v12 + 1;
        sub_1B1A02518(v14, v9 + 40 * v12 + 32);
      }
      else
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v15);
      }
      v8 += 40;
      --v5;
    }
    while (v5);
    v4 = v16;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B1DA4E70(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  int v4;

  v2 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001)
    return 0;
  v4 = a1;
  if ((int)a1 >= *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    return 0;
  result = 1;
  if ((_DWORD)v2 != -1
    && *(_DWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v4 + 8) != (_DWORD)v2)
  {
    return 0;
  }
  return result;
}

unint64_t sub_1B1DA4ED8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD v80[4];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  __int128 v89[2];
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[2];
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;

  v84 = a6;
  v100 = *MEMORY[0x1E0C80C00];
  v86 = v7 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24));
  v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 80) + 8 * a1 + 32) + 16);
  v15 = *(_QWORD *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 144);
  *(_QWORD *)&v85 = *(_QWORD *)(*(_QWORD *)(v7 + 80) + 8 * a1 + 32);
  swift_retain();
  swift_retain();
  v82 = a3;
  v17 = a5;
  v18 = v84;
  v83 = a7;
  v19 = sub_1B1C23F2C(a2, a3, a4, v17, v84, a7, v16);
  v21 = v20;
  v22 = sub_1B1DA8760(v19);
  if ((v23 & 1) == 0)
  {
    v24 = sub_1B1DA87D4(v21, v22);
    if ((v24 & 0x100000000) == 0)
    {
      v25 = v24;
      swift_release();
      goto LABEL_41;
    }
  }
  v88 = v15;
  if (a2)
  {
    v88 = v15;
    v26 = v85;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B202A1B4(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v88;
    }
    v28 = *(_QWORD *)(v15 + 16);
    v27 = *(_QWORD *)(v15 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1B202A1B4(v27 > 1, v28 + 1, 1);
      v15 = v88;
    }
    *(_QWORD *)(v15 + 16) = v28 + 1;
    v29 = v15 + 16 * v28;
    v30 = v82;
    *(_QWORD *)(v29 + 32) = a2;
    *(_QWORD *)(v29 + 40) = v30;
    if (!a4)
      goto LABEL_20;
LABEL_12:
    v31 = *(_QWORD *)(v15 + 16);
    if (v31)
    {
      v32 = 0;
      v33 = 32;
      while (1)
      {
        v34 = v32 + 1;
        if (*(_QWORD *)(v15 + v33) == a4)
          break;
        v33 += 16;
        ++v32;
        if (v31 == v34)
        {
          v32 = *(_QWORD *)(v15 + 16);
          goto LABEL_19;
        }
      }
      if (v31 - 1 != v32)
      {
        v70 = v33 - 32;
        v31 = v32 + 1;
        do
        {
          v72 = *(_QWORD *)(v15 + v70 + 48);
          if (v72 != a4)
          {
            if (v31 != v32)
            {
              v85 = *(_OWORD *)(v15 + 32 + 16 * v32);
              v73 = *(_QWORD *)(v15 + v70 + 56);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v15 = sub_1B216D574(v15);
              v71 = v15 + 16 * v32;
              *(_QWORD *)(v71 + 32) = v72;
              *(_QWORD *)(v71 + 40) = v73;
              *(_OWORD *)(v15 + v70 + 48) = v85;
              v88 = v15;
            }
            ++v32;
          }
          ++v31;
          v70 += 16;
        }
        while (v31 != *(_QWORD *)(v15 + 16));
      }
    }
    else
    {
      v32 = 0;
    }
LABEL_19:
    sub_1B1DACEFC(v32, v31);
    goto LABEL_20;
  }
  v26 = v85;
  if (a4)
    goto LABEL_12;
LABEL_20:
  v35 = *(_QWORD *)(v26 + 128);
  v36 = *(_QWORD *)(v26 + 168);
  v37 = *(_BYTE *)(v26 + 176);
  v38 = *(_QWORD *)(v26 + 184);
  v39 = *(_OWORD *)(v26 + 112);
  v93[0] = *(_OWORD *)(v26 + 96);
  v93[1] = v39;
  v95 = *(_OWORD *)(v26 + 136);
  v96 = *(_OWORD *)(v26 + 152);
  v94 = v35;
  v97 = v36;
  v98 = v37;
  v99 = v38;
  v40 = sub_1B1C95414();
  v87 = v40;
  sub_1B1792810(v18, (uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1B19FFFFC);
  if (v91)
  {
    v41 = sub_1B1A02518(&v90, (uint64_t)v93);
    MEMORY[0x1E0C80A78](v41, v42);
    v80[2] = v93;
    swift_bridgeObjectRetain();
    v43 = (_QWORD *)sub_1B1DA4D0C((uint64_t (*)(__int128 *))sub_1B1DB3434, (uint64_t)v80, (uint64_t)v40);
    swift_bridgeObjectRelease();
    sub_1B19FA198((uint64_t)v93, (uint64_t)&v90);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v87 = v43;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v43 = sub_1B1C63184(0, v43[2] + 1, 1, v43);
      v87 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
      v87 = sub_1B1C63184(v45 > 1, v46 + 1, 1, v43);
    v47 = v91;
    v48 = v92;
    v49 = sub_1B19FC264((uint64_t)&v90, v91);
    v50 = MEMORY[0x1E0C80A78](v49, v49);
    v52 = (char *)&v81 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v53 + 16))(v52, v50);
    sub_1B1DACB58(v46, (uint64_t)v52, (uint64_t *)&v87, v47, v48);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v90);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v93);
  }
  else
  {
    sub_1B1A04628((uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1B19FFFFC);
  }
  sub_1B1792810(v83, (uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1B19FFFFC);
  if (v91)
  {
    sub_1B1A02518(&v90, (uint64_t)v93);
    v54 = v87;
    v55 = v87[2];
    if (v55)
    {
      swift_bridgeObjectRetain();
      v56 = 0;
      v57 = 0;
      while (1)
      {
        v58 = v54[v56 + 7];
        v59 = v54[v56 + 8];
        sub_1B19FA070(&v54[v56 + 4], v58);
        if (sub_1B1F266C4(v93, v58, v59))
          break;
        ++v57;
        v56 += 5;
        if (v55 == v57)
        {
          swift_bridgeObjectRelease();
          v60 = v54[2];
          v57 = v60;
          goto LABEL_36;
        }
      }
      swift_bridgeObjectRelease();
      v60 = v57 + 1;
      if (v54[2] - 1 != v57)
      {
        v74 = v56 * 8 + 72;
        do
        {
          sub_1B19FA198((uint64_t)v54 + v74, (uint64_t)&v90);
          v77 = v91;
          v78 = v92;
          sub_1B19FA070(&v90, v91);
          LOBYTE(v77) = sub_1B1F266C4(v93, v77, v78);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v90);
          if ((v77 & 1) == 0)
          {
            if (v60 != v57)
            {
              v79 = v87;
              sub_1B19FA198((uint64_t)&v87[5 * v57 + 4], (uint64_t)&v90);
              sub_1B19FA198((uint64_t)v79 + v74, (uint64_t)v89);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                v79 = sub_1B1FFED18(v79);
                v87 = v79;
              }
              v75 = (uint64_t)&v79[5 * v57 + 4];
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v75);
              sub_1B1A02518(v89, v75);
              v76 = (uint64_t)v87 + v74;
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v87 + v74);
              sub_1B1A02518(&v90, v76);
            }
            ++v57;
          }
          ++v60;
          v54 = v87;
          v74 += 40;
        }
        while (v60 != v87[2]);
      }
    }
    else
    {
      v60 = 0;
      v57 = 0;
    }
LABEL_36:
    sub_1B1C91F98(v57, v60);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v93);
  }
  else
  {
    sub_1B1A04628((uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1B19FFFFC);
  }
  v61 = v88;
  v62 = (uint64_t)v87;
  swift_retain();
  swift_bridgeObjectRetain();
  v63 = sub_1B1DAD004(v61, v62);
  v65 = v64;
  swift_release();
  swift_bridgeObjectRelease();
  v66 = sub_1B1DA8760(v63);
  if ((v67 & 1) != 0 || (v68 = sub_1B1DA87D4(v65, v66), (v68 & 0x100000000) != 0))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v25 = sub_1B1DA8838(v63, v65, v61, v62);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v25 = v68;
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_41:
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v86 + 24));
  return v25;
}

uint64_t sub_1B1DA5684(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 1;
  result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == (_DWORD)v3)
      return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32) + 120);
  }
  return result;
}

unint64_t sub_1B1DA5710(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v5;
  uint64_t v6;

  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v2 = 0;
    v3 = 1;
    return v2 | ((unint64_t)v3 << 32);
  }
  v2 = 0;
  v3 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32);
      v2 = *(unsigned int *)(v6 + 28);
      v3 = *(_BYTE *)(v6 + 32);
      return v2 | ((unint64_t)v3 << 32);
    }
    goto LABEL_2;
  }
  return v2 | ((unint64_t)v3 << 32);
}

uint64_t sub_1B1DA57B4(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == (_DWORD)v3)
      return *(_QWORD *)(v5 + 12 * (int)a1);
    else
      return 0;
  }
  return result;
}

uint64_t *sub_1B1DA5868(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[83];
  char v5;
  _BYTE v6[656];
  _BYTE v7[656];

  v1 = (uint64_t)result;
  if (result != (uint64_t *)0xFFFFFFFFLL)
  {
    sub_1B1D2004C(v7);
    sub_1B1A18378((uint64_t)v7, (uint64_t)v6, &qword_1ED4B8A80, (uint64_t)&type metadata for EmitterRuntime);
    v5 = 0;
    v2 = swift_unownedRetainStrong();
    MEMORY[0x1E0C80A78](v2, v3);
    sub_1B1A72840(v1, (void (*)(uint64_t))sub_1B1DB3700);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    sub_1B1A18378((uint64_t)v6, (uint64_t)v4, &qword_1ED4B8A80, (uint64_t)&type metadata for EmitterRuntime);
    return sub_1B1C1F7D0(v4);
  }
  return result;
}

unint64_t sub_1B1DA5AB0(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v23;
  _QWORD *v24;

  v3 = HIDWORD(a1);
  if ((sub_1B1DA4E70(a1) & 1) == 0)
  {
    sub_1B2229430();
    swift_bridgeObjectRelease();
    sub_1B2229A0C();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2229A0C();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    return 0xD000000000000010;
  }
  v23 = v3;
  v24 = (_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 80)
                 + 8
                 * *(__int16 *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)a1 + 6)
                 + 32);
  swift_retain();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2229430();
  sub_1B2228890();
  sub_1B1BC3C70();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1DA5710(a1);
  sub_1B22295EC();
  sub_1B2228890();
  sub_1B2094F98(a1);
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1DA5684(a1);
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1FD568C((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1E63C5608, a1);
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  type metadata accessor for EntityClass();
  sub_1B22295EC();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 32);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    goto LABEL_27;
  v7 = v5 + 32;
  v9 = (_DWORD)a1 == -1 && v23 == 0;
  swift_retain();
  v10 = 0;
  do
  {
    v12 = *(_QWORD *)(v7 + 16 * v10);
    if (v9)
    {
LABEL_10:
      v11 = 0;
      goto LABEL_11;
    }
    v11 = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001 && (int)a1 < v24[1])
    {
      v13 = *v24 + 12 * (int)a1;
      v14 = *(__int16 *)(v13 + 4);
      if (v23 != -1 && *(_DWORD *)(v13 + 8) != v23)
        goto LABEL_10;
      v15 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * *(int *)(*v24 + 12 * (int)a1) + 32);
      v16 = *(_QWORD *)(v15 + 48);
      v17 = *(_QWORD *)(v16 + 16);
      if (!v17)
        goto LABEL_10;
      v18 = v16 + 56;
      while (*(_QWORD *)(v18 - 24) != v12)
      {
        v18 += 40;
        if (!--v17)
          goto LABEL_10;
      }
      v21 = v18 - 8;
      v20 = *(_QWORD *)(v18 - 8);
      v19 = *(_QWORD *)(v21 + 8);
      if (v20 <= 1)
        v20 = 1;
      v11 = *(_QWORD *)(v15 + 128) + v19 + v20 * v14;
    }
LABEL_11:
    ++v10;
    sub_1B1F276FC(v11, 0, v12);
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    swift_bridgeObjectRelease();
  }
  while (v10 != v6);
  swift_release();
LABEL_27:
  swift_release();
  return 0;
}

uint64_t sub_1B1DA6018(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4294967294;
  result = 4294967294;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == (_DWORD)v3)
      return *(__int16 *)(v5 + 12 * (int)a1 + 6);
  }
  return result;
}

uint64_t sub_1B1DA6094(uint64_t result, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  os_unfair_lock_s *v12;

  v4 = v3;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v6 + 12 * (int)result + 8) == HIDWORD(result))
    {
      v7 = (int *)(v6 + 12 * (int)result);
      v8 = *((__int16 *)v7 + 2);
      v9 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *v7 + 32);
      if (*(_QWORD *)(v9 + 232) <= v8 && *(_QWORD *)(v9 + 240) > v8)
      {
        v11 = **(_QWORD **)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        v12 = *(os_unfair_lock_s **)(v9 + 344);
        swift_retain();
        os_unfair_lock_lock(v12);
        ecs_stack_allocator_push_snapshot(*(_QWORD *)(v11 + 32));
        swift_retain();
        a2(v11, v9, v8);
        swift_release();
        if (!v4)
          ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v11 + 32));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B1DA61CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v2 + 12 * (int)a1 + 8) == HIDWORD(a1))
      return *(_QWORD *)(v2 + 12 * (int)a1);
  }
  result = sub_1B2229688();
  __break(1u);
  return result;
}

void sub_1B1DA6294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  id v6;
  void *v7;
  _QWORD *v8;
  id v9;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    swift_retain();
    sub_1B1E608D4(a1, a2);
  }
  else
  {
    v5 = *(_BYTE *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated);
    v6 = *(id *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated + 8);
    objc_msgSend(v6, sel_lock);
    objc_msgSend(v6, sel_unlock);

    if ((v5 & 1) != 0)
      return;
    v7 = *(void **)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_asyncQueue);
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v2;
    v8[3] = a1;
    v8[4] = a2;
    v9 = v7;
    swift_retain();
    swift_retain();
    sub_1B1E8CB90((uint64_t)sub_1B1D1EA88, (uint64_t)v8);

  }
  swift_release();
}

id sub_1B1DA63A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v2)
  {
    swift_retain();
    os_unfair_recursive_lock_lock_with_options();
    if ((*(_BYTE *)(v2 + 120) & 1) == 0)
    {
      *(_BYTE *)(v2 + 120) = 1;
      os_unfair_recursive_lock_unlock();
      sub_1B1E64B50();
      os_unfair_recursive_lock_lock_with_options();
    }
    os_unfair_recursive_lock_unlock();
    swift_release();
  }
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated + 8);
  objc_msgSend(v4, sel_lock);
  *v3 = 1;
  return objc_msgSend(v4, sel_unlock);
}

uint64_t sub_1B1DA645C(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  int v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  int v16;
  void (*v17)(uint64_t);

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  v8 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 1;
  if (v8 != 1)
  {
    v9 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v9)
    {
      swift_retain();
      v9(v3);
      sub_1B19E5A18((uint64_t)v9);
    }
  }
  v10 = v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  v11 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 80);
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 88);
  v13 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 80) = 1;
  if ((a2 & 1) != 0)
    v14 = v12;
  else
    v14 = a1;
  *(_QWORD *)(v10 + 88) = v14;
  *(_BYTE *)(v10 + 96) = 1;
  sub_1B1F4CC3C(a3);
  swift_retain();
  sub_1B204D228(3);
  result = swift_release();
  *(_BYTE *)(v10 + 80) = v11;
  *(_QWORD *)(v10 + 88) = v12;
  *(_BYTE *)(v10 + 96) = v13;
  v16 = *(unsigned __int8 *)(v3 + v7);
  *(_BYTE *)(v3 + v7) = 4;
  if (v16 != 4)
  {
    v17 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v17)
    {
      swift_retain();
      v17(v3);
      return sub_1B19E5A18((uint64_t)v17);
    }
  }
  return result;
}

uint64_t sub_1B1DA65C8(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = result;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 16);
  if (v6)
  {
    v7 = (_QWORD *)(v5 + 32);
    v8 = *(_QWORD *)(*v2 + 16);
    while (*v7 != result)
    {
      v7 += 2;
      if (!--v8)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B1C62F18(0, v6 + 1, 1, (char *)v5);
      v5 = result;
    }
    v10 = *(_QWORD *)(v5 + 16);
    v9 = *(_QWORD *)(v5 + 24);
    if (v10 >= v9 >> 1)
    {
      result = (uint64_t)sub_1B1C62F18(v9 > 1, v10 + 1, 1, (char *)v5);
      v5 = result;
    }
    *(_QWORD *)(v5 + 16) = v10 + 1;
    v11 = v5 + 16 * v10;
    *(_QWORD *)(v11 + 32) = v4;
    *(_QWORD *)(v11 + 40) = a2;
    *v2 = v5;
  }
  return result;
}

uint64_t sub_1B1DA668C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (result)
  {
    v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    if (v2 >= result)
      v3 = result;
    else
      v3 = 0;
    if (v2)
      v4 = result;
    else
      v4 = 0;
    if (result <= 0)
      v5 = v4;
    else
      v5 = v3;
    return sub_1B1C91E84(0, v5);
  }
  return result;
}

uint64_t sub_1B1DA66BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  os_unfair_lock_s *v15;

  v5 = v2 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24));
  v6 = sub_1B1DADA68(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B1DAD004((uint64_t)v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = sub_1B1DA8760(v7);
  if ((v11 & 1) != 0 || (v12 = sub_1B1DA87D4(v9, v10), (v12 & 0x100000000) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1B1DA8838(v7, v9, (uint64_t)v6, a2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = v12;
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + 8 * v13 + 32);
  v15 = *(os_unfair_lock_s **)(v5 + 24);
  swift_retain();
  os_unfair_lock_unlock(v15);
  return v14;
}

unint64_t sub_1B1DA67D0(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[5];
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v4 = result;
  if (result != 0xFFFFFFFF && (uint64_t)(result << 32) >= (uint64_t)0xFFFFFFFF00000001)
  {
    v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v6 = result;
    if ((int)result < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
      && (HIDWORD(result) == -1 || *(_DWORD *)(*v5 + 12 * (int)result + 8) == HIDWORD(result)))
    {
      if ((sub_1B1DA4E70(result) & 1) != 0)
      {
        if (*(_QWORD *)(*(_QWORD *)(a2 + 24) + 16))
        {
          result = sub_1B1DC3CA4(v4);
          if ((v7 & 1) != 0)
            return result;
          v8 = a2;
        }
        else
        {
          v8 = a2;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v47[0] = *(_QWORD *)(v8 + 24);
        *(_QWORD *)(v8 + 24) = 0x8000000000000000;
        sub_1B1B853AC(0xFFFFFFFFLL, v4, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v8 + 24) = v47[0];
        swift_bridgeObjectRelease();
        type metadata accessor for CollectReferencesContext();
        v12 = swift_allocObject();
        v13 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v12 + 16) = 1;
        *(_QWORD *)(v12 + 24) = v13;
        v14 = sub_1B1FE162C(v4);
        v44 = *(_QWORD *)(v14 + 16);
        if (v44)
        {
          v15 = 0;
          v43 = v14 + 32;
          do
          {
            v30 = *(_OWORD *)(v43 + 16 * v15);
            v31 = (int *)(*v5 + 12 * v6);
            v32 = *(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *v31 + 32);
            v33 = *(_QWORD *)(v32 + 48);
            v34 = v33 + 32;
            v35 = *(_QWORD *)(v43 + 16 * v15);
            if (*(_QWORD *)(v33 + 32) == v35)
            {
              v16 = 0;
            }
            else
            {
              v16 = 0;
              v36 = *(_QWORD *)(v33 + 16);
              v37 = v33 + 72;
              v38 = v36 - 1;
              do
              {
                v39 = *(_QWORD *)(v37 + v16);
                v16 += 40;
                --v38;
              }
              while (v39 != v35);
            }
            ++v15;
            v17 = *((__int16 *)v31 + 2);
            v18 = *((_QWORD *)&v30 + 1);
            v21 = (uint64_t *)(v34 + v16 + 16);
            v19 = *v21;
            v20 = v21[1];
            if (*v21 <= 1)
              v19 = 1;
            v22 = *(_QWORD *)(v32 + 128) + v20 + v19 * v17;
            *(_OWORD *)&v46[3] = v30;
            v23 = sub_1B1A137F4(v46);
            v24 = *(_QWORD *)(v18 + 8);
            sub_1B1F28148(v22, v35, (uint64_t)v23);
            sub_1B1A02518((__int128 *)v46, (uint64_t)v47);
            v26 = v48;
            v25 = v49;
            sub_1B19FC264((uint64_t)v47, v48);
            v27 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v24 + 96);
            v28 = *(_QWORD *)(v25 + 8);
            v29 = swift_retain();
            v27(v29, &off_1E63AD318, v26, v28);
            swift_release();
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v47);
          }
          while (v15 != v44);
        }
        swift_bridgeObjectRelease();
        v40 = *(_QWORD *)(v12 + 24);
        v41 = *(_QWORD *)(v40 + 16);
        if (v41)
        {
          swift_bridgeObjectRetain();
          v42 = v40 + 36;
          do
          {
            sub_1B1DA67D0(*(_QWORD *)(v42 - 4), a2);
            v42 += 8;
            --v41;
          }
          while (v41);
          swift_release();
          return swift_bridgeObjectRelease();
        }
        else
        {
          return swift_release();
        }
      }
      else
      {
        v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
        swift_retain();
        sub_1B2229430();
        swift_bridgeObjectRelease();
        v47[1] = 0x80000001B233BF70;
        sub_1B1BC3C70();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        v10 = sub_1B2228E90();
        v47[0] = 0;
        (*(void (**)(uint64_t, _QWORD *, unint64_t, unint64_t))(*(_QWORD *)v9 + 88))(v10, v47, 0xD00000000000002FLL, 0x80000001B233BF70);
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1B1DA6B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1C8F23C(*(_DWORD *)(v3 + 12 * (int)a1), *(__int16 *)(v3 + 12 * (int)a1 + 4), *(__int16 *)(v3 + 12 * (int)a1 + 6), a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1DA6BCC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1DA6BF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  sub_1B19E52CC(&qword_1EEF5E7E8, (uint64_t (*)(uint64_t))type metadata accessor for RuntimeThread, (uint64_t)&unk_1B229AB14);
  return v1;
}

void sub_1B1DA6C3C()
{
  qword_1ED4D0A78 = MEMORY[0x1E0DEE9D8];
}

id sub_1B1DA6C50()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  qword_1ED4D0940 = (uint64_t)result;
  return result;
}

BOOL sub_1B1DA6C80(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(a2 + 4)
      && *(unsigned __int16 *)(a1 + 6) == *(unsigned __int16 *)(a2 + 6)
      && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8);
}

uint64_t sub_1B1DA6CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  int64x2_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  CFTimeInterval v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v81;
  unint64_t v82;
  id v83;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  _QWORD v97[2];

  v5 = v4;
  v94 = a4;
  v91 = a2;
  v92 = a3;
  v90 = a1;
  v96 = sub_1B2228380();
  *(_QWORD *)&v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96, v6);
  v93 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B2228F38();
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v89 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B2228F14();
  MEMORY[0x1E0C80A78](v11, v12);
  v85 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B22284AC();
  MEMORY[0x1E0C80A78](v14, v15);
  v16 = sub_1B2228488();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0xE000000000000000;
  *(_BYTE *)(v4 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + 64) = 0;
  v21 = MEMORY[0x1E0DEE9D8];
  v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
    v22 = sub_1B1DC8CE8(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v4 + 72) = v22;
  *(_QWORD *)(v4 + 80) = v21;
  *(_QWORD *)(v4 + 88) = v21;
  *(_QWORD *)(v4 + 96) = v21;
  v23 = (_DWORD *)swift_slowAlloc();
  *v23 = 0;
  *(_QWORD *)(v4 + 104) = "ChunksStorage";
  *(_QWORD *)(v4 + 112) = 13;
  *(_BYTE *)(v4 + 120) = 2;
  *(_QWORD *)(v4 + 128) = v23;
  *(_QWORD *)(v4 + 136) = v21;
  *(_QWORD *)(v4 + 144) = v21;
  *(_QWORD *)(v4 + 152) = v21;
  v24 = sub_1B2228B0C();
  v25 = vdupq_n_s64(0x2710uLL);
  *(_QWORD *)(v24 + 16) = 32;
  *(int64x2_t *)(v24 + 32) = v25;
  *(int64x2_t *)(v24 + 48) = v25;
  *(int64x2_t *)(v24 + 64) = v25;
  *(int64x2_t *)(v24 + 80) = v25;
  *(int64x2_t *)(v24 + 96) = v25;
  *(int64x2_t *)(v24 + 112) = v25;
  *(int64x2_t *)(v24 + 128) = v25;
  *(int64x2_t *)(v24 + 144) = v25;
  *(int64x2_t *)(v24 + 160) = v25;
  *(int64x2_t *)(v24 + 176) = v25;
  *(int64x2_t *)(v24 + 192) = v25;
  *(int64x2_t *)(v24 + 208) = v25;
  *(int64x2_t *)(v24 + 224) = v25;
  *(int64x2_t *)(v24 + 240) = v25;
  *(int64x2_t *)(v24 + 256) = v25;
  *(int64x2_t *)(v24 + 272) = v25;
  *(_QWORD *)(v4 + 160) = v24;
  type metadata accessor for WorkerComponentStorage();
  v26 = (_QWORD *)swift_allocObject();
  sub_1B216B51C(v21, 0, 256, 0, (uint64_t)(v26 + 2));
  v26[11] = 0;
  v27 = swift_slowAlloc();
  v26[12] = v27;
  v26[13] = v27 + 4096;
  v26[14] = 4096;
  *(_QWORD *)(v5 + 168) = v26;
  *(_QWORD *)(v5 + 184) = 0;
  sub_1B17914E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v20, *MEMORY[0x1E0DEF538], v16);
  v28 = sub_1B2228F68();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  *(_QWORD *)(v5 + 192) = v28;
  *(_QWORD *)(v5 + 200) = dispatch_group_create();
  *(_QWORD *)(v5 + 208) = sub_1B1B96060(v21);
  *(_QWORD *)(v5 + 216) = 0;
  *(_WORD *)(v5 + 224) = 0;
  v29 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  *(_QWORD *)(v29 + 96) = 0;
  *(_OWORD *)(v29 + 64) = 0u;
  *(_OWORD *)(v29 + 80) = 0u;
  *(_OWORD *)(v29 + 32) = 0u;
  *(_OWORD *)(v29 + 48) = 0u;
  *(_OWORD *)v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  v86 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = 1024;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount) = 0;
  v30 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
  *(_DWORD *)(v5 + v30) = sub_1B1CBD028(0x7FFFFFFEu) + 1;
  v31 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  v32 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)v31 = "lock EntityManager";
  *(_QWORD *)(v31 + 8) = 18;
  *(_BYTE *)(v31 + 16) = 2;
  *(_QWORD *)(v31 + 24) = v32;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) = 0;
  *(_DWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex) = -1;
  *v32 = 0;
  v33 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
  if (qword_1ED4B7960 != -1)
    swift_once();
  type metadata accessor for Scheduler();
  swift_allocObject();
  *(_QWORD *)(v5 + v33) = sub_1B204D6EC();
  v34 = OBJC_IVAR____TtC3VFX13EntityManager_queryManager;
  type metadata accessor for QueryManager();
  v35 = swift_allocObject();
  v36 = (_DWORD *)swift_slowAlloc();
  *v36 = 0;
  *(_QWORD *)(v35 + 16) = "QueryManagerLock";
  *(_QWORD *)(v35 + 24) = 16;
  *(_BYTE *)(v35 + 32) = 2;
  *(_QWORD *)(v35 + 40) = v36;
  *(_QWORD *)(v35 + 48) = sub_1B1B96244(v21);
  *(_QWORD *)(v35 + 56) = sub_1B1B96340(v21);
  *(_QWORD *)(v5 + v34) = v35;
  v37 = OBJC_IVAR____TtC3VFX13EntityManager_updateQueue;
  sub_1B2228494();
  v97[0] = v21;
  sub_1B19E52CC((unint64_t *)&unk_1ED4B72C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1B1DB38D4(0);
  sub_1B19E52CC(&qword_1ED4B72B8, (uint64_t (*)(uint64_t))sub_1B1DB38D4, MEMORY[0x1E0DEAF38]);
  sub_1B2229364();
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v89, *MEMORY[0x1E0DEF8D0], v88);
  *(_QWORD *)(v5 + v37) = sub_1B2228F5C();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks) = v21;
  v38 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock;
  v39 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)v38 = "nextFrameBlocks";
  *(_QWORD *)(v38 + 8) = 15;
  *(_BYTE *)(v38 + 16) = 2;
  *(_QWORD *)(v38 + 24) = v39;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread) = 0;
  *v39 = 0;
  v40 = v5 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated;
  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  *(_BYTE *)v40 = 0;
  *(_QWORD *)(v40 + 8) = v41;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_canUseImGUI) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_imGUIEnabled) = 1;
  v42 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
  *(_QWORD *)(v5 + v42) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38E0]), sel_init);
  v43 = OBJC_IVAR____TtC3VFX13EntityManager_asyncQueue;
  *(_QWORD *)(v5 + v43) = sub_1B2228F44();
  v44 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
  v45 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)v44 = "backgroundingSignalLock";
  *(_QWORD *)(v44 + 8) = 23;
  *(_BYTE *)(v44 + 16) = 2;
  *(_QWORD *)(v44 + 24) = v45;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach) = 1;
  *v45 = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 0;
  v46 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
  *v46 = 0;
  v46[1] = 0;
  v47 = OBJC_IVAR____TtC3VFX13EntityManager_mainGraphScriptGroup;
  type metadata accessor for MainGraphScriptGroup();
  v48 = swift_allocObject();
  *(_QWORD *)(v5 + v47) = v48;
  *(_QWORD *)(v48 + 16) = v21;
  v49 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  if (qword_1ED4BF658 != -1)
    swift_once();
  *(_QWORD *)(v5 + v49) = qword_1ED4D0FD0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream) = 0;
  v50 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  *(_WORD *)v50 = 0;
  *(_BYTE *)(v50 + 2) = 1;
  v51 = (int *)type metadata accessor for ScriptingConfiguration();
  v52 = v50 + v51[7];
  v53 = sub_1B2228110();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
  *(_QWORD *)(v50 + v51[8]) = 0;
  *(_QWORD *)(v50 + v51[9]) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_world) = 0;
  v54 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  swift_retain();
  v55 = CACurrentMediaTime();
  *(_QWORD *)v54 = 1;
  *(_QWORD *)(v54 + 8) = 0;
  *(_QWORD *)(v54 + 16) = 0;
  *(_QWORD *)(v54 + 24) = 0;
  *(CFTimeInterval *)(v54 + 32) = v55;
  *(_QWORD *)(v54 + 40) = 0;
  *(_QWORD *)(v54 + 48) = 0;
  *(_QWORD *)(v54 + 56) = 0;
  *(_QWORD *)(v54 + 64) = 0x3C88888900000000;
  *(_QWORD *)(v54 + 72) = 1;
  *(_BYTE *)(v54 + 80) = 0;
  *(_QWORD *)(v54 + 88) = 60;
  *(_BYTE *)(v54 + 96) = 1;
  *(_DWORD *)(v54 + 97) = 0;
  v56 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_updateHandlerIndex;
  *(_QWORD *)v56 = 0;
  *(_BYTE *)(v56 + 8) = 1;
  v57 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_activeStatesPerEffects) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 4;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare) = 0;
  *(_DWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_peerPid) = -1;
  *(_DWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity) = 0;
  v58 = v91;
  *(_QWORD *)(v5 + 16) = v90;
  *(_QWORD *)(v5 + 24) = v58;
  v59 = v94;
  *(_QWORD *)(v5 + 64) = v94;
  swift_retain();
  swift_release();
  if (v59)
  {
    swift_retain();
    v60 = sub_1B1A05AC0();
    type metadata accessor for SceneComponentStorage();
    swift_allocObject();
    v61 = sub_1B1F21BB4((uint64_t)v60);
    swift_release();
  }
  else
  {
    type metadata accessor for SceneComponentStorage();
    swift_allocObject();
    v61 = sub_1B1F21A9C();
  }
  *(_QWORD *)(v5 + 176) = v61;
  v62 = *(_QWORD *)(v5 + v86);
  v63 = swift_slowAlloc();
  v64 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  *v64 = v63;
  v64[1] = v62;
  v65 = v92 + 1;
  v66 = swift_slowAlloc();
  v67 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  *v67 = v66;
  v67[1] = v65;
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v68 = sub_1B22283B0();
  sub_1B1B40EC8(v68, (uint64_t)qword_1ED4D0E48);
  sub_1B2228398();
  v69 = v93;
  sub_1B2228368();
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v5 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v69, v96);
  v70 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v70)
  {
    v71 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v71)
    {
      v96 = type metadata accessor for PrivateCommandQueue();
      swift_retain();
      v72 = 0;
      v95 = xmmword_1B2246910;
      do
      {
        v73 = swift_allocObject();
        swift_retain();
        *(_QWORD *)(v73 + 32) = ecs_stack_allocator_create(0x10000);
        type metadata accessor for FrameAllocator();
        v74 = v5;
        v75 = v57;
        v76 = (_QWORD *)swift_allocObject();
        v76[4] = 0;
        v76[5] = v21;
        v77 = swift_slowAlloc();
        v76[2] = v77;
        v76[3] = v77 + 0x10000;
        v76[4] = 0;
        *(_QWORD *)(v73 + 40) = v76;
        *(_QWORD *)(v73 + 48) = 0;
        v57 = v75;
        v5 = v74;
        *(_QWORD *)(v73 + 56) = 0;
        *(_QWORD *)(v73 + 64) = 0;
        *(_OWORD *)(v73 + 72) = v95;
        *(_QWORD *)(v73 + 88) = MEMORY[0x1E0DEE9E8];
        *(_QWORD *)(v73 + 96) = v57;
        *(_QWORD *)(v73 + 104) = v21;
        *(_BYTE *)(v73 + 112) = 0;
        *(_OWORD *)(v73 + 120) = 0u;
        *(_OWORD *)(v73 + 136) = 0u;
        *(_OWORD *)(v73 + 152) = 0u;
        *(_QWORD *)(v73 + 16) = v74;
        swift_release();
        *(_QWORD *)(v73 + 24) = v72 - 1;
        *(_QWORD *)(v70 + 8 * v72++) = v73;
      }
      while (v71 != v72);
      swift_release();
    }
  }
  *(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 24) = v5;
  sub_1B1DA7860(0);
  if (qword_1ED4B7780 != -1)
    swift_once();
  objc_msgSend((id)qword_1ED4D0940, sel_lock);
  if (qword_1ED4B8588 != -1)
    swift_once();
  swift_weakInit();
  v78 = swift_weakAssign();
  sub_1B1DB38F0(v78, (uint64_t)v97);
  v79 = (_QWORD *)qword_1ED4D0A78;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  qword_1ED4D0A78 = (uint64_t)v79;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v79 = sub_1B1C62DA8(0, v79[2] + 1, 1, (unint64_t)v79);
    qword_1ED4D0A78 = (uint64_t)v79;
  }
  v82 = v79[2];
  v81 = v79[3];
  if (v82 >= v81 >> 1)
  {
    v79 = sub_1B1C62DA8(v81 > 1, v82 + 1, 1, (unint64_t)v79);
    qword_1ED4D0A78 = (uint64_t)v79;
  }
  v79[2] = v82 + 1;
  sub_1B1DB38F0((uint64_t)v97, (uint64_t)&v79[v82 + 4]);
  v83 = (id)qword_1ED4D0940;
  objc_msgSend(v83, sel_unlock);

  swift_release();
  return v5;
}

uint64_t sub_1B1DA7860(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if ((_DWORD)v2 - 1 != (_DWORD)result)
  {
    v4 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
    v5 = result + 1;
    do
    {
      v6 = *(_DWORD *)(v1 + v4);
      v7 = (_DWORD *)(v3 + 12 * (v5 - 1));
      *v7 = v5;
      v7[1] = -1;
      v7[2] = v6;
      ++v5;
    }
    while ((_DWORD)v2 != v5);
  }
  v8 = v3 + 12 * v2;
  v9 = *(_DWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
  *(_QWORD *)(v8 - 12) = -1;
  *(_DWORD *)(v8 - 4) = v9;
  *(_DWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex) = result;
  return result;
}

uint64_t sub_1B1DA78E4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;

  v2 = v1;
  sub_1B1DA79DC(a1);
  v4 = (uint64_t *)(v1 + 72);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v4;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      sub_1B1DACCD4(0, *(_QWORD *)(v6 + 16));
      goto LABEL_7;
    }
    *v4 = (uint64_t)sub_1B1B1C804(0, *(_QWORD *)(v6 + 24) >> 1);
  }
  else
  {
    *v4 = MEMORY[0x1E0DEE9D8];
  }
  swift_release();
LABEL_7:
  v7 = *(_QWORD *)(v2 + 80);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_retain();
    swift_retain();
    for (i = 0; i != v8; ++i)
    {
      if (*(_QWORD *)(v7 + 8 * i + 32))
        swift_release();
    }
    swift_release();
    swift_release();
  }
  return sub_1B1DA7B90(a1 & 1, (uint64_t (*)(void))sub_1B202A060, sub_1B1DB3500);
}

uint64_t sub_1B1DA79DC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char **v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char *v20;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_retain();
    swift_retain();
    for (i = 0; i != v5; ++i)
    {
      v7 = v4 + 8 * i;
      v8 = *(_QWORD **)(v7 + 32);
      if (v8)
      {
        vfx_swift_deimmortalize(*(_QWORD *)(v7 + 32));
        vfx_swift_release_dealloc(v8);
      }
    }
    swift_release();
    swift_release();
  }
  sub_1B1DA7B90(a1 & 1, (uint64_t (*)(void))sub_1B202A034, sub_1B1DB3554);
  v9 = (uint64_t *)(v1 + 96);
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v9;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      sub_1B1C91D60(0, *(_QWORD *)(v12 + 16));
      goto LABEL_13;
    }
    *v9 = (uint64_t)sub_1B1B1C75C(0, *(_QWORD *)(v12 + 24) >> 1);
  }
  else
  {
    *v9 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
LABEL_13:
  v15 = *(_QWORD *)(v2 + 152);
  v13 = (char **)(v2 + 152);
  v14 = (char *)v15;
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = 32;
    do
    {
      v18 = swift_isUniquelyReferenced_nonNull_native();
      *v13 = v14;
      if ((v18 & 1) == 0)
      {
        v14 = sub_1B1FFECC8((uint64_t)v14);
        *v13 = v14;
      }
      vfx_deallocate_memory_entry((uint64_t)&v14[v17]);
      v14 = *v13;
      v17 += 24;
      --v16;
    }
    while (v16);
  }
  if ((a1 & 1) != 0)
  {
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v13;
    if ((v19 & 1) != 0)
      return sub_1B1C91E84(0, *((_QWORD *)v20 + 2));
    *v13 = (char *)sub_1B1B1C6C4(0, *((_QWORD *)v20 + 3) >> 1);
  }
  else
  {
    *v13 = v10;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DA7B90(char a1, uint64_t (*a2)(void), void (*a3)(_QWORD))
{
  uint64_t *v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;
  _QWORD *v16;
  int64_t v17;
  uint64_t v18;

  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *v3;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_1B1DACDEC(0, *(_QWORD *)(v7 + 16), a2);
    }
    else
    {
      if (*(_QWORD *)(v7 + 24) >= 2uLL)
      {
        a3(0);
        v9 = (_QWORD *)swift_allocObject();
        v10 = j__malloc_size(v9);
        v11 = v10 - 32;
        if (v10 < 32)
          v11 = v10 - 25;
        v9[2] = 0;
        v9[3] = 2 * (v11 >> 3);
      }
      else
      {
        v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      *v3 = (uint64_t)v9;
      swift_release();
    }
    v12 = v3 + 1;
    v13 = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v12;
    if ((v13 & 1) != 0)
      return sub_1B1DACBD0(0, *(_QWORD *)(v14 + 16));
    if (*(_QWORD *)(v14 + 24) >= 2uLL)
    {
      sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAF70, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v16 = (_QWORD *)swift_allocObject();
      v17 = j__malloc_size(v16);
      v18 = v17 - 32;
      if (v17 < 32)
        v18 = v17 - 29;
      v16[2] = 0;
      v16[3] = 2 * (v18 >> 2);
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    *v12 = (uint64_t)v16;
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
    *v3 = MEMORY[0x1E0DEE9D8];
    swift_release();
    v3[1] = v8;
  }
  return swift_release();
}

uint64_t sub_1B1DA7D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  _BYTE v21[8];
  _BYTE v22[8];
  uint64_t v23;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v2)
  {
    *(_BYTE *)(v2 + 120) = 1;
    v3 = *(_QWORD *)(v2 + 16);
    v4 = *(void **)(v3 + 16);
    swift_retain();
    objc_msgSend(v4, sel_lock);
    *(_BYTE *)(v3 + 24) = 1;
    objc_msgSend(*(id *)(v3 + 16), sel_signal);
    objc_msgSend(*(id *)(v3 + 16), sel_unlock);
    swift_release();
  }
  if (qword_1ED4B7780 != -1)
    swift_once();
  objc_msgSend((id)qword_1ED4D0940, sel_lock);
  if (qword_1ED4B8588 != -1)
    swift_once();
  v5 = qword_1ED4D0A78;
  v23 = qword_1ED4D0A78;
  v6 = *(_QWORD *)(qword_1ED4D0A78 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    v7 = 0;
    v8 = 5;
    while (1)
    {
      sub_1B1792810(v5 + v8 * 8 - 8, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1B1C79110);
      Strong = swift_weakLoadStrong();
      swift_release();
      sub_1B1A04628((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1B1C79110);
      if (!Strong)
        break;
      ++v7;
      ++v8;
      if (v6 == v7)
      {
        swift_bridgeObjectRelease();
        v10 = *(_QWORD *)(v5 + 16);
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    v10 = v7 + 1;
    if (*(_QWORD *)(v5 + 16) - 1 == v7)
    {
      v6 = v7;
    }
    else
    {
      v6 = v7;
      do
      {
        sub_1B1792810(v5 + v8 * 8, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1B1C79110);
        v19 = swift_weakLoadStrong();
        swift_release();
        sub_1B1A04628((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1B1C79110);
        if (v19)
        {
          if (v10 != v6)
          {
            v20 = (_QWORD *)v23;
            sub_1B1792810(v23 + 8 * v6 + 32, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1B1C79110);
            sub_1B1792810((uint64_t)&v20[v8], (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1B1C79110);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v20 = sub_1B1FFED04((unint64_t)v20);
              v23 = (uint64_t)v20;
            }
            sub_1B1DB34BC((uint64_t)v21, (uint64_t)&v20[v6 + 4]);
            sub_1B1DB34BC((uint64_t)v22, v23 + v8 * 8);
          }
          ++v6;
        }
        ++v10;
        v5 = v23;
        ++v8;
      }
      while (v10 != *(_QWORD *)(v23 + 16));
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = 0;
  }
LABEL_15:
  sub_1B1C91C20(v6, v10);
  qword_1ED4D0A78 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  objc_msgSend((id)qword_1ED4D0940, sel_unlock);
  sub_1B1DA78E4(0);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v11)
    MEMORY[0x1B5E23F88](v11, -1, -1);
  v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v13)
  {
    v14 = v12[1];
    if (v14)
    {
      v15 = 8 * v14;
      do
      {
        v13 += 8;
        swift_release();
        v15 -= 8;
      }
      while (v15);
    }
  }
  swift_bridgeObjectRelease();
  if (*v12)
    MEMORY[0x1B5E23F88](*v12, -1, -1);
  MEMORY[0x1B5E23F88](*(_QWORD *)(v1 + 128), -1, -1);
  MEMORY[0x1B5E23F88](*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24), -1, -1);
  MEMORY[0x1B5E23F88](*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock + 24), -1, -1);
  MEMORY[0x1B5E23F88](*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock + 24), -1, -1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B0D8D0(v1 + 56);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  v16 = v1 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID;
  v17 = sub_1B2228380();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  sub_1B19E5A18(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B1A04628(v1 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig, (uint64_t (*)(_QWORD))type metadata accessor for ScriptingConfiguration);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B1DA8248()
{
  sub_1B1DA7D00();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1DA826C(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  if (*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_counters))
    vfx_counters.add(_:_:)(*(_DWORD *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 36), 1);
  sub_1B1F4CBCC();
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount) = 0;
  if ((a1 & 1) != 0)
  {
    sub_1B1DA78E4(1);
    ++*(_DWORD *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
    sub_1B1DA7860(0);
    *(_DWORD *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex) = 0;
    if (*(_QWORD *)(v1[26] + 16))
    {
      swift_isUniquelyReferenced_nonNull_native();
      v17 = v1[26];
      v1[26] = 0x8000000000000000;
      sub_1B1DB3694();
      sub_1B2229634();
      v1[26] = v17;
      swift_bridgeObjectRelease();
    }
  }
  if ((a1 & 8) != 0)
  {
    if (v1[8])
    {
      swift_retain();
      v4 = sub_1B1A05AC0();
      type metadata accessor for SceneComponentStorage();
      swift_allocObject();
      v5 = sub_1B1F21BB4((uint64_t)v4);
      swift_release();
      v2[22] = v5;
    }
    else
    {
      type metadata accessor for SceneComponentStorage();
      swift_allocObject();
      v1[22] = sub_1B1F21A9C();
    }
    swift_release();
  }
  if ((a1 & 2) != 0)
  {
    type metadata accessor for WorkerComponentStorage();
    v6 = (_QWORD *)swift_allocObject();
    sub_1B216B51C(MEMORY[0x1E0DEE9D8], 0, 256, 0, (uint64_t)(v6 + 2));
    v6[11] = 0;
    v7 = swift_slowAlloc();
    v6[12] = v7;
    v6[13] = v7 + 4096;
    v6[14] = 4096;
    v2[21] = v6;
    swift_release();
  }
  if (qword_1ED4B7960 != -1)
    swift_once();
  type metadata accessor for Scheduler();
  swift_allocObject();
  v8 = sub_1B204D6EC();
  v9 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) = v8;
  swift_release();
  *(_QWORD *)(*(_QWORD *)((char *)v2 + v9) + 24) = v2;
  v10 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v10 + 48) = sub_1B1B96244(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 56) = sub_1B1B96340(v11);
  result = swift_bridgeObjectRelease();
  v13 = *(uint64_t **)((char *)v2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v13)
  {
    v14 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v14)
    {
      v15 = 8 * v14;
      do
      {
        v16 = *v13;
        result = *(_QWORD *)(*v13 + 88);
        if (*(_QWORD *)(result + 16))
        {
          swift_isUniquelyReferenced_nonNull_native();
          v18 = *(_QWORD *)(v16 + 88);
          *(_QWORD *)(v16 + 88) = 0x8000000000000000;
          sub_1B1DB363C();
          sub_1B2229388();
          *(_QWORD *)(v16 + 88) = v18;
          result = swift_bridgeObjectRelease();
        }
        ++v13;
        v15 -= 8;
      }
      while (v15);
    }
  }
  return result;
}

uint64_t sub_1B1DA857C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v2;
  v5 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v6 + 12 * (int)result + 8) == HIDWORD(result))
    {
      v7 = *(__int16 *)(v6 + 12 * (int)result + 4);
      swift_retain();
      sub_1B1F02BB8(a2 & 1, v7, 0);
      swift_release();
      return sub_1B20948BC(v5);
    }
  }
  return result;
}

uint64_t sub_1B1DA8680(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v4 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v5 + 12 * (int)result + 8) == HIDWORD(result))
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v5 + 12 * (int)result) + 32);
      v7 = *(os_unfair_lock_s **)(v6 + 344);
      swift_retain();
      os_unfair_lock_lock(v7);
      sub_1B1DA857C(v4, a2 & 1);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 344));
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B1DA8760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  if (*(_QWORD *)(*(_QWORD *)(v2 + 32) + 144) == a1)
    return 0;
  v5 = v3 - 1;
  if (!v5)
    return 0;
  v6 = 0;
  v7 = v2 + 40;
  while (*(_QWORD *)(*(_QWORD *)(v7 + 8 * v6) + 144) != a1)
  {
    if (v5 == ++v6)
      return 0;
  }
  return v6 + 1;
}

unint64_t sub_1B1DA87D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 72) + 8 * a2 + 32) + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    goto LABEL_5;
  v5 = sub_1B1DC3AC8(a1);
  if ((v6 & 1) == 0)
  {
    v4 = 0;
LABEL_5:
    v7 = 1;
    return v4 | ((unint64_t)v7 << 32);
  }
  v7 = 0;
  v4 = *(unsigned int *)(*(_QWORD *)(v3 + 56) + 4 * v5);
  return v4 | ((unint64_t)v7 << 32);
}

unint64_t sub_1B1DA8838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DynamicType;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30;

  v5 = v4;
  v9 = a1;
  v10 = sub_1B1DA8760(a1);
  if ((v11 & 1) != 0)
  {
    v28 = a3;
    v13 = *(_QWORD *)(v4 + 72);
    v12 = *(_QWORD *)(v13 + 16);
    v14 = *(_QWORD *)(a4 + 16);
    v15 = MEMORY[0x1E0DEE9D8];
    if (v14)
    {
      v25 = *(_QWORD *)(v13 + 16);
      v26 = v9;
      v27 = a2;
      v30 = MEMORY[0x1E0DEE9D8];
      sub_1B202A0E8(0, v14, 0);
      v16 = a4 + 32;
      v15 = v30;
      do
      {
        sub_1B19FA198(v16, (uint64_t)v29);
        sub_1B19FA070(v29, v29[3]);
        DynamicType = swift_getDynamicType();
        v18 = v29[4];
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B202A0E8(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v30;
        }
        v20 = *(_QWORD *)(v15 + 16);
        v19 = *(_QWORD *)(v15 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1B202A0E8(v19 > 1, v20 + 1, 1);
          v15 = v30;
        }
        *(_QWORD *)(v15 + 16) = v20 + 1;
        v21 = v15 + 16 * v20;
        *(_QWORD *)(v21 + 32) = DynamicType;
        *(_QWORD *)(v21 + 40) = v18;
        v16 += 40;
        --v14;
      }
      while (v14);
      v9 = v26;
      a2 = v27;
      v12 = v25;
    }
    type metadata accessor for EntityFamily();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1B2162A58(v12, v28, v15);
    swift_retain();
    sub_1B2229520();
    sub_1B2229568();
    sub_1B2229574();
    sub_1B2229538();
    swift_release();
  }
  else
  {
    v12 = v10;
  }
  v22 = *(_QWORD *)(*(_QWORD *)(v5 + 72) + 8 * v12 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v23 = sub_1B1E5B0D8((uint64_t *)(v5 + 80), v22, v9, a2, a4, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v23;
}

uint64_t sub_1B1DA8A6C@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  int v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v11 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0x8000000000000000;
  sub_1B1B893FC(v11, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 16) = v21;
  swift_bridgeObjectRelease();
  type metadata accessor for EntityClass();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = sub_1B1E36C3C(a2, v11, a4);
  result = swift_release();
  v15 = v11;
  v16 = *(_QWORD **)(a5 + 96);
  if (v16[2] <= (int64_t)v15)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    do
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a5 + 96) = v16;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1B1C62C78(0, v16[2] + 1, 1, v16);
        v16 = (_QWORD *)result;
        *(_QWORD *)(a5 + 96) = result;
      }
      v19 = v16[2];
      v18 = v16[3];
      if (v19 >= v18 >> 1)
      {
        result = (uint64_t)sub_1B1C62C78(v18 > 1, v19 + 1, 1, v16);
        v16 = (_QWORD *)result;
        *(_QWORD *)(a5 + 96) = result;
      }
      v16[2] = v19 + 1;
      v20 = &v16[5 * v19];
      v20[4] = v17;
      v20[5] = 0;
      v20[6] = v17;
      *((_BYTE *)v20 + 56) = 0;
      *(_QWORD *)((char *)v20 + 60) = 0xFFFFFFFF00000000;
      *((_DWORD *)v20 + 17) = -1;
      v16 = *(_QWORD **)(a5 + 96);
    }
    while (v16[2] <= v15);
  }
  *a6 = v13;
  return result;
}

BOOL sub_1B1DA8C10(_QWORD *a1, _QWORD *a2)
{
  uint64_t DynamicType;

  sub_1B19FA070(a2, a2[3]);
  DynamicType = swift_getDynamicType();
  sub_1B19FA070(a1, a1[3]);
  return DynamicType != swift_getDynamicType();
}

unint64_t sub_1B1DA8C80(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = *(_QWORD *)result;
  v5 = *(_QWORD *)(*(_QWORD *)result + 184);
  if (*(_QWORD *)(v5 + 16))
  {
    result = sub_1B1DC3AC8(a2);
    if ((v8 & 1) != 0 && *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * result) == a3)
    {
      v9 = *(_QWORD *)(v4 + 16);
      v10 = sub_1B1DC3AC8(*(_QWORD *)(v4 + 192));
      v12 = v11;
      swift_retain();
      if ((v12 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v14 = *(_QWORD *)(v9 + 16);
        *(_QWORD *)(v9 + 16) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1B1EB0B64();
        sub_1B1EA6C80(v10, v14);
        *(_QWORD *)(v9 + 16) = v14;
        swift_bridgeObjectRelease();
      }
      v15 = *(unsigned int *)(v4 + 204);
      swift_retain();
      sub_1B1C92F50(v15, (uint64_t)a4, a4);
      swift_release();
      swift_release();
      v16 = a4[10];
      v17 = swift_isUniquelyReferenced_nonNull_native();
      a4[10] = v16;
      if ((v17 & 1) == 0)
        v16 = sub_1B216D54C(v16);
      *(_QWORD *)(v16 + 8 * (int)v15 + 32) = 0;
      v18 = a4 + 11;
      v19 = a4[11];
      a4[10] = v16;
      v20 = swift_isUniquelyReferenced_nonNull_native();
      a4[11] = v19;
      if ((v20 & 1) == 0)
      {
        sub_1B202A018(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = *v18;
      }
      v21 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v19 + 24);
      v23 = v21 + 1;
      if (v21 >= v22 >> 1)
      {
        v24 = *(_QWORD *)(v19 + 16);
        sub_1B202A018(v22 > 1, v21 + 1, 1);
        v21 = v24;
        v19 = *v18;
      }
      *(_QWORD *)(v19 + 16) = v23;
      *(_DWORD *)(v19 + 4 * v21 + 32) = v15;
      a4[11] = v19;
      sub_1B1E8E658((uint64_t)a4, v15);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B1DA8E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  char **v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t result;

  v1 = v0 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24));
  ++*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
  v2 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
  v3 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
  if (v3 != -1)
  {
LABEL_12:
    v10 = (_DWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v3);
    *(_DWORD *)(v0 + v2) = *v10;
    v11 = v10[2];
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 24));
    return v3 | (unint64_t)(v11 << 32);
  }
  v4 = (char **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v6 = *(char **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
  v7 = 2 * *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v7;
  v8 = (char *)swift_slowAlloc();
  *v4 = v8;
  v4[1] = (char *)v7;
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (v8 != v6 || v8 >= &v6[12 * v5])
      memmove(v8, v6, 12 * v5);
    if (v6)
      MEMORY[0x1B5E23F88](v6, -1, -1);
    sub_1B1DA7860(v5);
    v3 = *(_DWORD *)(v0 + v2);
    goto LABEL_12;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

void sub_1B1DA8FBC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  _QWORD *v33;
  unint64_t v34;
  int8x16_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v40;
  int8x16_t *v41;
  int8x16_t *v42;
  unint64_t v43;
  int8x16_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  _QWORD *v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  int v52;
  uint64_t *v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  int64_t v59;
  uint64_t v60;
  os_unfair_lock_s *v61;

  v1 = v0;
  sub_1B1DA947C(0);
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (!v2 || (v3 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8)) == 0)
  {
LABEL_23:
    sub_1B2094974();
    v20 = (os_unfair_lock_s *)v1[16];
    os_unfair_lock_lock(v20);
    v21 = v1[10];
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v61 = v20;
      v23 = v21 + 32;
      swift_retain();
      swift_retain();
      for (i = 0; i != v22; ++i)
      {
        if (*(_QWORD *)(v23 + 8 * i))
        {
          v25 = (_QWORD *)v1[12];
          v26 = v25[5 * (int)i + 4];
          v27 = *(_QWORD *)(v26 + 16);
          if (v27)
          {
            v28 = 0;
            v29 = v26 + 32;
            v30 = v1[17] + 32;
            while (1)
            {
              v33 = *(_QWORD **)(v30 + 8 * *(int *)(v29 + 4 * v28));
              v34 = v33[24];
              if (v34)
                break;
LABEL_34:
              if (++v28 == v27)
                goto LABEL_52;
            }
            v35 = (int8x16_t *)v33[26];
            v36 = v33[27];
            v37 = v33[25] + 63;
            if (v37 <= 127)
              v38 = 1;
            else
              v38 = v37 >> 6;
            if (v38 >= 4 && ((unint64_t)v35 + 8 * v38 <= v34 || v34 + 8 * v38 <= (unint64_t)v35))
            {
              v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
              v41 = (int8x16_t *)(v34 + 16);
              v42 = v35 + 1;
              v43 = v38 & 0xFFFFFFFFFFFFFFFCLL;
              do
              {
                v44 = vbicq_s8(*v41, *v42);
                v41[-1] = vbicq_s8(v41[-1], v42[-1]);
                *v41 = v44;
                v41 += 2;
                v42 += 2;
                v43 -= 4;
              }
              while (v43);
              if (v38 != v40)
              {
LABEL_49:
                v45 = v38 - v40;
                v46 = 8 * v40;
                v47 = &v35->i64[v40];
                v48 = (_QWORD *)(v34 + v46);
                do
                {
                  v49 = *v47++;
                  *v48++ &= ~v49;
                  --v45;
                }
                while (v45);
              }
              v31 = v36 + 63;
              if (v31 <= 127)
                v32 = 8;
              else
                v32 = (v31 >> 3) & 0xFFFFFFFFFFFFFFF8;
              bzero(v35, v32);
              goto LABEL_34;
            }
            v40 = 0;
            goto LABEL_49;
          }
LABEL_52:
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v1[12] = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v25 = sub_1B1FFECDC(v25);
            v1[12] = v25;
          }
          v51 = (uint64_t)&v25[5 * (int)i + 6];
          v52 = swift_isUniquelyReferenced_nonNull_native();
          v53 = *(uint64_t **)v51;
          if (v52)
          {
            v54 = v53[2];
            v55 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v51 = v53;
            if ((v55 & 1) == 0)
            {
              MEMORY[0x1B5E21108](0, v54 & ~(v54 >> 63), 1);
              v53 = *(uint64_t **)v51;
            }
            v56 = (char *)(v53 + 4);
            sub_1B1A02758(0, &qword_1ED4B7A18, (uint64_t)&type metadata for ChunksStorage.FilteredChunk, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEC708]);
            swift_arrayDestroy();
            if (v54)
            {
              v57 = *(_QWORD *)(*(_QWORD *)v51 + 16) - v54;
              if (v57 < 0)
                goto LABEL_67;
              memmove(v56, &v56[8 * v54], 8 * v57);
              *(_QWORD *)(*(_QWORD *)v51 + 16) -= v54;
            }
            sub_1B2229538();
          }
          else
          {
            v58 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            if ((unint64_t)v53[3] >= 2)
            {
              sub_1B1DB3450();
              v58 = (_QWORD *)swift_allocObject();
              v59 = j__malloc_size(v58);
              v60 = v59 - 32;
              if (v59 < 32)
                v60 = v59 - 25;
              v58[2] = 0;
              v58[3] = 2 * (v60 >> 3);
            }
            *(_QWORD *)v51 = v58;
            swift_release();
          }
        }
      }
      swift_release();
      swift_release();
      v20 = v61;
    }
    os_unfair_lock_unlock(v20);
    return;
  }
  v4 = v2 + 8 * v3;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DED1E8];
  while (1)
  {
    v7 = *(_QWORD *)(*(_QWORD *)v2 + 40);
    v8 = *(_QWORD *)(v7 + 40);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      v10 = 32;
      do
      {
        v11 = *(_QWORD *)(v8 + v10);
        if (v11)
          MEMORY[0x1B5E23F88](v11, -1, -1);
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    v12 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *(char **)(v7 + 40);
    if (!v12)
    {
      v17 = v5;
      if (*((_QWORD *)v13 + 3) >= 2uLL)
      {
        sub_1B1A02758(0, &qword_1ED4842E0, MEMORY[0x1E0DEBC70], (uint64_t (*)(_QWORD, uint64_t))v6);
        v17 = (_QWORD *)swift_allocObject();
        v18 = j__malloc_size(v17);
        v19 = v18 - 32;
        if (v18 < 32)
          v19 = v18 - 17;
        v17[2] = 0;
        v17[3] = 2 * (v19 >> 4);
      }
      *(_QWORD *)(v7 + 40) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    v14 = *((_QWORD *)v13 + 2);
    v15 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v7 + 40) = v13;
    if ((v15 & 1) == 0)
    {
      v13 = sub_1B1C62B70(0, v14, 1, v13);
      *(_QWORD *)(v7 + 40) = v13;
    }
    if (v14)
      break;
LABEL_18:
    *(_QWORD *)(v7 + 40) = v13;
LABEL_5:
    v2 += 8;
    *(_QWORD *)(v7 + 32) = 0;
    if (v2 == v4)
      goto LABEL_23;
  }
  v16 = *((_QWORD *)v13 + 2) - v14;
  if (v16 >= 0)
  {
    memmove(v13 + 32, &v13[16 * v14 + 32], 16 * v16);
    *((_QWORD *)v13 + 2) = v16;
    goto LABEL_18;
  }
LABEL_67:
  sub_1B2229700();
  __break(1u);
}

void sub_1B1DA947C(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char **v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64x2_t v13;
  int64x2_t *v14;
  unint64_t v15;
  int64x2_t v16;
  int8x16_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int *v55;
  int v56;
  _DWORD *v57;
  os_unfair_lock_s *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  _QWORD *v64;
  char v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  _QWORD *v80;
  _DWORD *v81;
  int v82;
  uint64_t v83;
  int v84;
  char v85;
  uint64_t v86;
  _QWORD *v87;
  int v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  int v96;
  _QWORD *v97;
  char v98;
  int v99;
  uint64_t v100;
  double (*v101)(_QWORD);
  int v102;
  BOOL v103;
  int v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  os_unfair_lock_s *lock;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;

  v2 = (_QWORD *)v1;
  if ((a1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
    v4 = *(char **)(v1 + 160);
    v5 = *((_QWORD *)v4 + 2);
    v6 = (char **)(v1 + 152);
    v7 = *(_QWORD *)(v2[19] + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v2[20] = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v4 = sub_1B1FFECF0((uint64_t)v4);
    *(_QWORD *)&v4[8 * (v3 % v5) + 32] = v7;
    v2[20] = v4;
    v9 = *((_QWORD *)v4 + 2);
    if (v9)
    {
      v10 = *((_QWORD *)v4 + 4);
      v11 = v9 - 1;
      if (v9 != 1)
      {
        if (v9 < 5)
        {
          v12 = 1;
          goto LABEL_11;
        }
        v12 = v11 & 0xFFFFFFFFFFFFFFFCLL | 1;
        v13 = vdupq_n_s64(v10);
        v14 = (int64x2_t *)(v4 + 56);
        v15 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        v16 = v13;
        do
        {
          v13 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v13, v14[-1]), (int8x16_t)v14[-1], (int8x16_t)v13);
          v16 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v16, *v14), *(int8x16_t *)v14, (int8x16_t)v16);
          v14 += 2;
          v15 -= 4;
        }
        while (v15);
        v17 = vbslq_s8((int8x16_t)vcgtq_s64(v16, v13), (int8x16_t)v13, (int8x16_t)v16);
        v18 = vextq_s8(v17, v17, 8uLL).u64[0];
        v10 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v18, v17.i64[0]), *(int8x8_t *)v17.i8, (int8x8_t)v18);
        if (v11 != (v11 & 0xFFFFFFFFFFFFFFFCLL))
        {
LABEL_11:
          v19 = v9 - v12;
          v20 = &v4[8 * v12 + 32];
          do
          {
            v22 = *(_QWORD *)v20;
            v20 += 8;
            v21 = v22;
            if (v22 < v10)
              v10 = v21;
            --v19;
          }
          while (v19);
        }
      }
      if (v10 >= 4)
      {
        v23 = v10 - 3;
        v24 = 32;
        v25 = v10 - 3;
        do
        {
          v26 = *v6;
          v27 = swift_isUniquelyReferenced_nonNull_native();
          *v6 = v26;
          if ((v27 & 1) == 0)
          {
            v26 = sub_1B1FFECC8((uint64_t)v26);
            *v6 = v26;
          }
          vfx_deallocate_memory_entry((uint64_t)&v26[v24]);
          v24 += 24;
          --v25;
        }
        while (v25);
        sub_1B1DA668C(v23);
      }
    }
  }
  sub_1B1DA9F0C();
  sub_1B1DA9F70();
  v2[23] = 0;
  lock = (os_unfair_lock_s *)v2[16];
  os_unfair_lock_lock(lock);
  v28 = v2[10];
  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
    goto LABEL_103;
  v30 = v28 + 32;
  v124 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  v131 = v2 + 12;
  v132 = v2 + 18;
  swift_retain();
  swift_retain();
  v31 = 0;
  v133 = v2;
  v126 = v30;
  v127 = v29;
  while (2)
  {
    if (!*(_QWORD *)(v30 + 8 * v31))
      goto LABEL_27;
    v34 = v31;
    v35 = *v131 + 32;
    v36 = *(_QWORD *)(v35 + 40 * (int)v31);
    v135 = *(_QWORD *)(v36 + 16);
    if (!v135)
    {
      if (*(_BYTE *)(v35 + 40 * (int)v31 + 24) == 1)
        goto LABEL_85;
LABEL_88:
      sub_1B1A02758(0, &qword_1ED4BA370, (uint64_t)&type metadata for ChunksStorage, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1B1C947F0();
      v99 = v34;
      v101 = sub_1B1C91BC0();
      v102 = *(_DWORD *)(v100 + 28);
      v103 = __OFSUB__(v102, 1);
      v104 = v102 - 1;
      if (v104 < 0 != v103 || (*(_DWORD *)(v100 + 28) = v104) != 0)
      {
        ((void (*)(uint64_t *, _QWORD))v101)(&v139, 0);
        goto LABEL_24;
      }
      ((void (*)(uint64_t *, _QWORD))v101)(&v139, 0);
      v105 = *(_QWORD *)(*v131 + 40 * v34 + 32);
      v106 = *(_QWORD *)(v105 + 16);
      if (!v106)
      {
LABEL_101:
        sub_1B1E8E658((uint64_t)v2, v31);
        goto LABEL_24;
      }
      v107 = v2[17] + 32;
      if (v106 == 1)
      {
        v108 = 0;
        v109 = 0;
      }
      else
      {
        v110 = 0;
        v111 = 0;
        v108 = v106 & 0x7FFFFFFFFFFFFFFELL;
        v112 = (int *)(v105 + 36);
        v113 = v106 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v114 = *(_QWORD *)(v107 + 8 * *(v112 - 1));
          v115 = *(_QWORD *)(v107 + 8 * *v112);
          v110 += *(_QWORD *)(v114 + 240) - *(_QWORD *)(v114 + 232);
          v111 += *(_QWORD *)(v115 + 240) - *(_QWORD *)(v115 + 232);
          v112 += 2;
          v113 -= 2;
        }
        while (v113);
        v109 = v111 + v110;
        if (v106 == v108)
          goto LABEL_98;
      }
      v116 = v106 - v108;
      v117 = (int *)(v105 + 4 * v108 + 32);
      do
      {
        v118 = *v117++;
        v109 += *(_QWORD *)(*(_QWORD *)(v107 + 8 * v118) + 240) - *(_QWORD *)(*(_QWORD *)(v107 + 8 * v118) + 232);
        --v116;
      }
      while (v116);
LABEL_98:
      if (v109 > 0)
        goto LABEL_24;
      if (v106 >= 2)
      {
        v119 = *(_QWORD *)((char *)v2 + v124);
        v139 = 0;
        v140 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        sub_1B2228890();
        sub_1B2229A0C();
        v120 = v31;
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        sub_1B22295EC();
        v121 = v139;
        v122 = v140;
        v123 = sub_1B2228E90();
        v139 = 0;
        (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(_QWORD *)v119 + 88))(v123, &v139, v121, v122);
        v34 = v99;
        swift_release();
        v31 = v120;
        swift_bridgeObjectRelease();
      }
      goto LABEL_101;
    }
    v128 = v31;
    v129 = v31;
    v134 = v36 + 32;
    swift_bridgeObjectRetain();
    v37 = 0;
    v38 = 1;
    do
    {
      while (1)
      {
        v136 = v38;
        v39 = *(_QWORD *)(v2[17] + 8 * *(int *)(v134 + 4 * v37) + 32);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 376));
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 344));
        v40 = *(_QWORD *)(v39 + 256);
        v41 = *(_QWORD *)(v39 + 232);
        v42 = v41 - v40;
        if (v41 == v40)
        {
          v43 = *(_QWORD *)(v39 + 240);
        }
        else
        {
          v137 = v37;
          v44 = *(_QWORD *)(v39 + 56);
          v45 = *(_QWORD *)(v44 + 16);
          if (v45)
          {
            swift_retain();
            v46 = v44 + 56;
            do
            {
              sub_1B1F24B64();
              v46 += 40;
              --v45;
            }
            while (v45);
            swift_release();
          }
          if ((*(_BYTE *)(v39 + 184) & 1) == 0)
          {
            v47 = *(_QWORD *)(v39 + 168);
            v48 = *(os_unfair_lock_s **)(*(_QWORD *)(v39 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_lock(v48);
            swift_release();
            v49 = *(_QWORD *)(v39 + 16);
            v50 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
            v51 = OBJC_IVAR____TtC3VFX13EntityManager_entityCount;
            v52 = *(_QWORD *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            v130 = v40 + *(_QWORD *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
            v53 = *(_DWORD *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
            v54 = swift_retain();
            v55 = (int *)(v47 + 4 * v40);
            do
            {
              v56 = *v55++;
              v57 = (_DWORD *)(v52 + 12 * v56);
              *v57 = v53;
              v57[1] = -1;
              ++v57[2];
              *(_DWORD *)(v54 + v50) = v56;
              v53 = v56;
              --v42;
            }
            while (v42);
            *(_QWORD *)(v54 + v51) = v130 - v41;
            swift_release();
            v58 = *(os_unfair_lock_s **)(*(_QWORD *)(v39 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_unlock(v58);
            swift_release();
          }
          v59 = *(_QWORD *)(v39 + 192);
          if (v59)
          {
            v60 = *(_QWORD *)(v39 + 208);
            sub_1B19FA6EC(v40, v41, v59);
            sub_1B19FA6EC(v40, v41, v60);
          }
          v40 = *(_QWORD *)(v39 + 232);
          v43 = *(_QWORD *)(v39 + 240);
          v2 = v133;
          v37 = v137;
          if (v43 == v40)
          {
            v43 = 0;
            v40 = 0;
            *(_QWORD *)(v39 + 232) = 0;
            *(_QWORD *)(v39 + 240) = 0;
          }
        }
        ++v37;
        *(_QWORD *)(v39 + 248) = v43;
        *(_QWORD *)(v39 + 256) = v40;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 376));
        if (*(_QWORD *)(v39 + 240) == *(_QWORD *)(v39 + 232))
          break;
        v38 = 0;
        if (v37 == v135)
        {
          swift_bridgeObjectRelease();
          v30 = v126;
          v29 = v127;
          v34 = v128;
          v31 = v129;
          goto LABEL_24;
        }
      }
      v61 = *(_DWORD *)(v39 + 24);
      v62 = *(_DWORD *)(v39 + 188);
      v63 = *(unsigned __int8 *)(v39 + 120);
      v64 = (_QWORD *)*v131;
      v65 = swift_isUniquelyReferenced_nonNull_native();
      *v131 = v64;
      v138 = v37;
      if ((v65 & 1) == 0)
      {
        v64 = sub_1B1FFECDC(v64);
        *v131 = v64;
      }
      v66 = v64 + 4;
      v67 = (uint64_t)&v64[5 * v61 + 4];
      if (v63)
      {
        v68 = *(char **)v67;
        v69 = v66[5 * v61 + 1];
        v70 = *(_QWORD *)(*(_QWORD *)v67 + 16);
        if (v69 != v70)
        {
          if (*(_DWORD *)&v68[4 * v69 + 32] == v62)
          {
LABEL_64:
            v85 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v67 = v68;
            if ((v85 & 1) == 0)
            {
              v68 = sub_1B1FFED2C((uint64_t)v68);
              *(_QWORD *)v67 = v68;
            }
            v86 = *((_QWORD *)v68 + 2) - 1;
            if (v86 - v69 < 0)
              goto LABEL_104;
            memmove(&v68[4 * v69 + 32], &v68[4 * v69 + 36], 4 * (v86 - v69));
            *((_QWORD *)v68 + 2) = v86;
            *(_QWORD *)v67 = v68;
            v87 = &v66[5 * v61];
            v88 = *((_DWORD *)v87 + 8);
            v81 = v87 + 4;
            if (v88 == v62)
              goto LABEL_68;
            goto LABEL_69;
          }
          v83 = v70 - 1;
          while (v83 != v69)
          {
            v84 = *(_DWORD *)&v68[4 * v69++ + 36];
            if (v84 == v62)
              goto LABEL_64;
          }
        }
        v69 = 0;
        goto LABEL_64;
      }
      v71 = &v66[5 * v61];
      v74 = v71[1];
      v73 = v71 + 1;
      v72 = v74;
      v75 = *(char **)v67;
      v76 = v74 & 0x7FFFFFFFFFFFFFFFLL;
      if ((v74 & 0x7FFFFFFFFFFFFFFFLL) != 0 && *((_DWORD *)v75 + 8) != v62)
      {
        v77 = 0;
        v95 = v76 - 1;
        while (v95 != v77)
        {
          v96 = *(_DWORD *)&v75[4 * v77++ + 36];
          if (v96 == v62)
            goto LABEL_55;
        }
      }
      v77 = 0;
LABEL_55:
      v78 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v67 = v75;
      if ((v78 & 1) == 0)
      {
        v75 = sub_1B1FFED2C((uint64_t)v75);
        *(_QWORD *)v67 = v75;
      }
      v79 = *((_QWORD *)v75 + 2) - 1;
      if (v79 - v77 < 0)
      {
LABEL_104:
        sub_1B2229700();
        __break(1u);
        return;
      }
      memmove(&v75[4 * v77 + 32], &v75[4 * v77 + 36], 4 * (v79 - v77));
      *((_QWORD *)v75 + 2) = v79;
      *(_QWORD *)v67 = v75;
      *v73 = v72 - 1;
      v80 = &v66[5 * v61];
      v82 = *((_DWORD *)v80 + 9);
      v81 = (_DWORD *)v80 + 9;
      if (v82 == v62)
LABEL_68:
        *v81 = -1;
LABEL_69:
      LOBYTE(v66[5 * v61 + 3]) = 1;
      v2 = v133;
      v89 = v133[17];
      v90 = swift_isUniquelyReferenced_nonNull_native();
      v133[17] = v89;
      v37 = v138;
      if ((v90 & 1) == 0)
        v89 = sub_1B216D524(v89);
      *(_QWORD *)(v89 + 8 * v62 + 32) = 0;
      v133[17] = v89;
      v91 = v133[18];
      v92 = swift_isUniquelyReferenced_nonNull_native();
      v133[18] = v91;
      if ((v92 & 1) == 0)
      {
        sub_1B202A018(0, *(_QWORD *)(v91 + 16) + 1, 1);
        v91 = *v132;
      }
      v94 = *(_QWORD *)(v91 + 16);
      v93 = *(_QWORD *)(v91 + 24);
      if (v94 >= v93 >> 1)
      {
        sub_1B202A018(v93 > 1, v94 + 1, 1);
        v91 = *v132;
      }
      *(_QWORD *)(v91 + 16) = v94 + 1;
      *(_DWORD *)(v91 + 4 * v94 + 32) = v62;
      *v132 = v91;
      v38 = (*(_QWORD *)(v39 + 240) == *(_QWORD *)(v39 + 232)) & v136;
      vfx_swift_deimmortalize(v39);
      vfx_swift_release_dealloc((_QWORD *)v39);
    }
    while (v138 != v135);
    swift_bridgeObjectRelease();
    v30 = v126;
    v29 = v127;
    v34 = v128;
    v31 = v129;
    if ((v38 & 1) != 0)
    {
LABEL_85:
      v97 = (_QWORD *)*v131;
      v98 = swift_isUniquelyReferenced_nonNull_native();
      *v131 = v97;
      if ((v98 & 1) == 0)
        v97 = sub_1B1FFECDC(v97);
      HIDWORD(v97[5 * v34 + 7]) = 15;
      *v131 = v97;
      goto LABEL_88;
    }
LABEL_24:
    v32 = (_QWORD *)*v131;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    *v131 = v32;
    if ((v33 & 1) == 0)
      v32 = sub_1B1FFECDC(v32);
    LOBYTE(v32[5 * v34 + 7]) = 0;
    *v131 = v32;
LABEL_27:
    if (++v31 != v29)
      continue;
    break;
  }
  swift_release();
  swift_release();
LABEL_103:
  os_unfair_lock_unlock(lock);
}

double sub_1B1DA9F0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = *(uint64_t **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v2)
    {
      v3 = 8 * v2;
      do
      {
        v4 = *v1++;
        sub_1B1F05424((uint64_t *)(v4 + 96));
        result = 0.0;
        *(_OWORD *)(v4 + 152) = 0u;
        *(_OWORD *)(v4 + 136) = 0u;
        *(_OWORD *)(v4 + 120) = 0u;
        v3 -= 8;
      }
      while (v3);
    }
  }
  return result;
}

uint64_t sub_1B1DA9F70()
{
  _QWORD *v0;
  _QWORD *v1;
  os_unfair_lock_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int *v40;
  int v41;
  _DWORD *v42;
  os_unfair_lock_s *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  _QWORD *v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  _DWORD *v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  char v72;
  uint64_t v73;
  _QWORD *v74;
  int v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  char v83;
  int v84;
  uint64_t v85;
  double (*v86)(_QWORD);
  int v87;
  BOOL v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *i;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int isUniquelyReferenced_nonNull_native;
  char *v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  _QWORD *v119;
  int64_t v120;
  uint64_t v121;
  os_unfair_lock_s *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t j;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  size_t v133;
  _QWORD *v134;
  unint64_t v135;
  int8x16_t *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v141;
  int8x16_t *v142;
  int8x16_t *v143;
  unint64_t v144;
  int8x16_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  _QWORD *v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  int v153;
  uint64_t *v154;
  uint64_t v155;
  char v156;
  char *v157;
  uint64_t v158;
  _QWORD *v159;
  int64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t result;
  uint64_t v165;
  os_unfair_lock_s *lock;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  void (*v170)(uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  _QWORD **v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;

  v1 = v0;
  v2 = (os_unfair_lock_t *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock + 24));
  v3 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks) = MEMORY[0x1E0DEE9D8];
  os_unfair_lock_unlock(v2[3]);
  v169 = *(_QWORD *)(v3 + 16);
  if (!v169)
    return swift_bridgeObjectRelease();
  v4 = 0;
  v168 = (char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  v180 = (_QWORD **)(v1 + 12);
  v167 = v3 + 32;
  v165 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  v179 = v1 + 18;
  v182 = v1;
  while (1)
  {
    v171 = v4;
    v170 = *(void (**)(uint64_t))(v167 + 16 * v4);
    v6 = *(uint64_t **)v168;
    v5 = *((_QWORD *)v168 + 1);
    v172 = v5;
    if (*(_QWORD *)v168)
    {
      v7 = swift_retain();
      if (v5)
      {
        v8 = 8 * v5;
        v9 = v6;
        do
        {
          v10 = *v9++;
          v7 = ecs_stack_allocator_push_snapshot(*(_QWORD *)(v10 + 32));
          v8 -= 8;
        }
        while (v8);
      }
    }
    else
    {
      v7 = swift_retain();
    }
    v11 = v1[27];
    v1[27] = v11 + 1;
    if (v11)
      goto LABEL_161;
    v12 = sub_1B1DA9F0C();
    sub_1B1DA9F70(v12);
    v1[23] = 0;
    lock = (os_unfair_lock_s *)v1[16];
    os_unfair_lock_lock(lock);
    v13 = v1[10];
    v14 = *(_QWORD *)(v13 + 16);
    v175 = v6;
    if (v14)
      break;
LABEL_95:
    os_unfair_lock_unlock(lock);
    if (v6 && v172)
    {
      for (i = v6; i != &v6[v172]; ++i)
      {
        v109 = *(_QWORD *)(*i + 40);
        v110 = *(_QWORD *)(v109 + 40);
        v111 = *(_QWORD *)(v110 + 16);
        if (v111)
        {
          swift_bridgeObjectRetain();
          v112 = 32;
          do
          {
            v113 = *(_QWORD *)(v110 + v112);
            if (v113)
              MEMORY[0x1B5E23F88](v113, -1, -1);
            v112 += 16;
            --v111;
          }
          while (v111);
          swift_bridgeObjectRelease();
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v115 = *(char **)(v109 + 40);
        if (isUniquelyReferenced_nonNull_native)
        {
          v116 = *((_QWORD *)v115 + 2);
          v117 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v109 + 40) = v115;
          if ((v117 & 1) == 0)
          {
            v115 = sub_1B1C62B70(0, v116, 1, v115);
            *(_QWORD *)(v109 + 40) = v115;
          }
          if (v116)
          {
            v118 = *((_QWORD *)v115 + 2) - v116;
            if (v118 < 0)
              goto LABEL_170;
            memmove(v115 + 32, &v115[16 * v116 + 32], 16 * v118);
            *((_QWORD *)v115 + 2) = v118;
          }
          *(_QWORD *)(v109 + 40) = v115;
        }
        else
        {
          v119 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          if (*((_QWORD *)v115 + 3) >= 2uLL)
          {
            sub_1B1A02758(0, &qword_1ED4842E0, MEMORY[0x1E0DEBC70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
            v119 = (_QWORD *)swift_allocObject();
            v120 = j__malloc_size(v119);
            v121 = v120 - 32;
            if (v120 < 32)
              v121 = v120 - 17;
            v119[2] = 0;
            v119[3] = 2 * (v121 >> 4);
          }
          *(_QWORD *)(v109 + 40) = v119;
          swift_bridgeObjectRelease();
        }
        *(_QWORD *)(v109 + 32) = 0;
      }
    }
    v1 = v182;
    sub_1B2094974();
    v122 = (os_unfair_lock_s *)v182[16];
    os_unfair_lock_lock(v122);
    v123 = v182[10];
    v124 = *(_QWORD *)(v123 + 16);
    if (v124)
    {
      swift_retain();
      swift_retain();
      for (j = 0; j != v124; ++j)
      {
        if (*(_QWORD *)(v123 + 32 + 8 * j))
        {
          v126 = *v180;
          v127 = (*v180)[5 * (int)j + 4];
          v128 = *(_QWORD *)(v127 + 16);
          if (v128)
          {
            v129 = 0;
            v130 = v127 + 32;
            v131 = v182[17] + 32;
            while (1)
            {
              v134 = *(_QWORD **)(v131 + 8 * *(int *)(v130 + 4 * v129));
              v135 = v134[24];
              if (v135)
                break;
LABEL_128:
              if (++v129 == v128)
                goto LABEL_146;
            }
            v136 = (int8x16_t *)v134[26];
            v137 = v134[27];
            v138 = v134[25] + 63;
            if (v138 <= 127)
              v139 = 1;
            else
              v139 = v138 >> 6;
            if (v139 >= 4 && ((unint64_t)v136 + 8 * v139 <= v135 || v135 + 8 * v139 <= (unint64_t)v136))
            {
              v141 = v139 & 0xFFFFFFFFFFFFFFFCLL;
              v142 = (int8x16_t *)(v135 + 16);
              v143 = v136 + 1;
              v144 = v139 & 0xFFFFFFFFFFFFFFFCLL;
              do
              {
                v145 = vbicq_s8(*v142, *v143);
                v142[-1] = vbicq_s8(v142[-1], v143[-1]);
                *v142 = v145;
                v142 += 2;
                v143 += 2;
                v144 -= 4;
              }
              while (v144);
              if (v139 != v141)
              {
LABEL_143:
                v146 = v139 - v141;
                v147 = 8 * v141;
                v148 = &v136->i64[v141];
                v149 = (_QWORD *)(v135 + v147);
                do
                {
                  v150 = *v148++;
                  *v149++ &= ~v150;
                  --v146;
                }
                while (v146);
              }
              v132 = v137 + 63;
              if (v132 <= 127)
                v133 = 8;
              else
                v133 = (v132 >> 3) & 0xFFFFFFFFFFFFFFF8;
              bzero(v136, v133);
              goto LABEL_128;
            }
            v141 = 0;
            goto LABEL_143;
          }
LABEL_146:
          v151 = swift_isUniquelyReferenced_nonNull_native();
          *v180 = v126;
          if ((v151 & 1) == 0)
          {
            v126 = sub_1B1FFECDC(v126);
            *v180 = v126;
          }
          v152 = (uint64_t)&v126[5 * (int)j + 6];
          v153 = swift_isUniquelyReferenced_nonNull_native();
          v154 = *(uint64_t **)v152;
          if (v153)
          {
            v155 = v154[2];
            v156 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v152 = v154;
            if ((v156 & 1) == 0)
            {
              MEMORY[0x1B5E21108](0, v155 & ~(v155 >> 63), 1);
              v154 = *(uint64_t **)v152;
            }
            v157 = (char *)(v154 + 4);
            sub_1B1A02758(0, &qword_1ED4B7A18, (uint64_t)&type metadata for ChunksStorage.FilteredChunk, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEC708]);
            swift_arrayDestroy();
            if (v155)
            {
              v158 = *(_QWORD *)(*(_QWORD *)v152 + 16) - v155;
              if (v158 < 0)
                goto LABEL_170;
              memmove(v157, &v157[8 * v155], 8 * v158);
              *(_QWORD *)(*(_QWORD *)v152 + 16) -= v155;
            }
            sub_1B2229538();
          }
          else
          {
            v159 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            if ((unint64_t)v154[3] >= 2)
            {
              sub_1B1DB3450();
              v159 = (_QWORD *)swift_allocObject();
              v160 = j__malloc_size(v159);
              v161 = v160 - 32;
              if (v160 < 32)
                v161 = v160 - 25;
              v159[2] = 0;
              v159[3] = 2 * (v161 >> 3);
            }
            *(_QWORD *)v152 = v159;
            swift_release();
          }
        }
      }
      swift_release();
      swift_release();
      v1 = v182;
      v6 = v175;
    }
    os_unfair_lock_unlock(v122);
LABEL_161:
    v170(v7);
    swift_release();
    if (v1[27] == 1)
      sub_1B1DA947C(1);
    if (v6 && v172)
    {
      v162 = 8 * v172;
      do
      {
        v163 = *v6++;
        ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v163 + 32));
        v162 -= 8;
      }
      while (v162);
    }
    v4 = v171 + 1;
    --v1[27];
    if (v171 + 1 == v169)
      return swift_bridgeObjectRelease();
  }
  v15 = v13 + 32;
  swift_retain();
  swift_retain();
  v16 = 0;
  v173 = v15;
  v174 = v14;
  while (!*(_QWORD *)(v15 + 8 * v16))
  {
LABEL_17:
    if (++v16 == v14)
    {
      swift_release();
      swift_release();
      goto LABEL_95;
    }
  }
  v19 = v16;
  v20 = (uint64_t)(*v180 + 4);
  v21 = *(_QWORD *)(v20 + 40 * (int)v16);
  v183 = *(_QWORD *)(v21 + 16);
  if (!v183)
  {
    if (*(_BYTE *)(v20 + 40 * (int)v16 + 24) == 1)
    {
LABEL_77:
      v82 = *v180;
      v83 = swift_isUniquelyReferenced_nonNull_native();
      *v180 = v82;
      if ((v83 & 1) == 0)
        v82 = sub_1B1FFECDC(v82);
      HIDWORD(v82[5 * v19 + 7]) = 15;
      *v180 = v82;
    }
    sub_1B1A02758(0, &qword_1ED4BA370, (uint64_t)&type metadata for ChunksStorage, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1C947F0();
    v84 = v19;
    v86 = sub_1B1C91BC0();
    v87 = *(_DWORD *)(v85 + 28);
    v88 = __OFSUB__(v87, 1);
    v89 = v87 - 1;
    if (v89 < 0 != v88 || (*(_DWORD *)(v85 + 28) = v89) != 0)
    {
      ((void (*)(uint64_t *, _QWORD))v86)(&v187, 0);
      goto LABEL_14;
    }
    ((void (*)(uint64_t *, _QWORD))v86)(&v187, 0);
    v90 = (*v180)[5 * v19 + 4];
    v91 = *(_QWORD *)(v90 + 16);
    if (!v91)
    {
LABEL_93:
      sub_1B1E8E658((uint64_t)v1, v16);
      goto LABEL_14;
    }
    v92 = v1[17] + 32;
    if (v91 == 1)
    {
      v93 = 0;
      v94 = 0;
    }
    else
    {
      v95 = 0;
      v96 = 0;
      v93 = v91 & 0x7FFFFFFFFFFFFFFELL;
      v97 = (int *)(v90 + 36);
      v98 = v91 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v99 = *(_QWORD *)(v92 + 8 * *(v97 - 1));
        v100 = *(_QWORD *)(v92 + 8 * *v97);
        v95 += *(_QWORD *)(v99 + 240) - *(_QWORD *)(v99 + 232);
        v96 += *(_QWORD *)(v100 + 240) - *(_QWORD *)(v100 + 232);
        v97 += 2;
        v98 -= 2;
      }
      while (v98);
      v94 = v96 + v95;
      if (v91 == v93)
      {
LABEL_90:
        if (v94 <= 0)
        {
          if (v91 >= 2)
          {
            v104 = *(_QWORD *)((char *)v1 + v165);
            v187 = 0;
            v188 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            sub_1B2228890();
            sub_1B2229A0C();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
            sub_1B22295EC();
            v106 = v187;
            v105 = v188;
            v107 = sub_1B2228E90();
            v187 = 0;
            (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(_QWORD *)v104 + 88))(v107, &v187, v106, v105);
            v19 = v84;
            swift_release();
            swift_bridgeObjectRelease();
          }
          goto LABEL_93;
        }
LABEL_14:
        v17 = *v180;
        v18 = swift_isUniquelyReferenced_nonNull_native();
        *v180 = v17;
        if ((v18 & 1) == 0)
          v17 = sub_1B1FFECDC(v17);
        LOBYTE(v17[5 * v19 + 7]) = 0;
        *v180 = v17;
        goto LABEL_17;
      }
    }
    v101 = v91 - v93;
    v102 = (int *)(v90 + 4 * v93 + 32);
    do
    {
      v103 = *v102++;
      v94 += *(_QWORD *)(*(_QWORD *)(v92 + 8 * v103) + 240) - *(_QWORD *)(*(_QWORD *)(v92 + 8 * v103) + 232);
      --v101;
    }
    while (v101);
    goto LABEL_90;
  }
  v176 = v16;
  v177 = v16;
  v181 = v21 + 32;
  swift_bridgeObjectRetain();
  v22 = 0;
  v23 = 1;
  while (1)
  {
    while (1)
    {
      v184 = v23;
      v24 = *(_QWORD *)(v1[17] + 8 * *(int *)(v181 + 4 * v22) + 32);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 376));
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
      v25 = *(_QWORD *)(v24 + 256);
      v26 = *(_QWORD *)(v24 + 232);
      v27 = v26 - v25;
      if (v26 == v25)
      {
        v28 = *(_QWORD *)(v24 + 240);
      }
      else
      {
        v185 = v22;
        v29 = *(_QWORD *)(v24 + 56);
        v30 = *(_QWORD *)(v29 + 16);
        if (v30)
        {
          swift_retain();
          v31 = v29 + 56;
          do
          {
            sub_1B1F24B64();
            v31 += 40;
            --v30;
          }
          while (v30);
          swift_release();
        }
        if ((*(_BYTE *)(v24 + 184) & 1) == 0)
        {
          v32 = *(_QWORD *)(v24 + 168);
          v33 = *(os_unfair_lock_s **)(*(_QWORD *)(v24 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
          swift_retain();
          os_unfair_lock_lock(v33);
          swift_release();
          v34 = *(_QWORD *)(v24 + 16);
          v35 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
          v36 = OBJC_IVAR____TtC3VFX13EntityManager_entityCount;
          v37 = *(_QWORD *)(v34 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          v178 = v25 + *(_QWORD *)(v34 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
          v38 = *(_DWORD *)(v34 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
          v39 = swift_retain();
          v40 = (int *)(v32 + 4 * v25);
          do
          {
            v41 = *v40++;
            v42 = (_DWORD *)(v37 + 12 * v41);
            *v42 = v38;
            v42[1] = -1;
            ++v42[2];
            *(_DWORD *)(v39 + v35) = v41;
            v38 = v41;
            --v27;
          }
          while (v27);
          *(_QWORD *)(v39 + v36) = v178 - v26;
          swift_release();
          v43 = *(os_unfair_lock_s **)(*(_QWORD *)(v24 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
          swift_retain();
          os_unfair_lock_unlock(v43);
          swift_release();
        }
        v44 = *(_QWORD *)(v24 + 192);
        if (v44)
        {
          v45 = *(_QWORD *)(v24 + 208);
          sub_1B19FA6EC(v25, v26, v44);
          sub_1B19FA6EC(v25, v26, v45);
        }
        v25 = *(_QWORD *)(v24 + 232);
        v28 = *(_QWORD *)(v24 + 240);
        v1 = v182;
        v22 = v185;
        if (v28 == v25)
        {
          v28 = 0;
          v25 = 0;
          *(_QWORD *)(v24 + 232) = 0;
          *(_QWORD *)(v24 + 240) = 0;
        }
      }
      ++v22;
      *(_QWORD *)(v24 + 248) = v28;
      *(_QWORD *)(v24 + 256) = v25;
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
      if (*(_QWORD *)(v24 + 240) == *(_QWORD *)(v24 + 232))
        break;
      v23 = 0;
      if (v22 == v183)
      {
        swift_bridgeObjectRelease();
        v14 = v174;
        v6 = v175;
        v15 = v173;
        v19 = v176;
        v16 = v177;
        goto LABEL_14;
      }
    }
    v186 = v22;
    v46 = *(_DWORD *)(v24 + 24);
    v47 = *(_DWORD *)(v24 + 188);
    v48 = *(unsigned __int8 *)(v24 + 120);
    v49 = *v180;
    v50 = swift_isUniquelyReferenced_nonNull_native();
    *v180 = v49;
    if ((v50 & 1) == 0)
    {
      v49 = sub_1B1FFECDC(v49);
      *v180 = v49;
    }
    v51 = v49 + 4;
    v52 = (uint64_t)&v49[5 * v46 + 4];
    if (!v48)
      break;
    v53 = *(char **)v52;
    v54 = v51[5 * v46 + 1];
    v55 = *(_QWORD *)(*(_QWORD *)v52 + 16);
    if (v54 == v55)
    {
      v54 = 0;
      v1 = v182;
    }
    else
    {
      v1 = v182;
      if (*(_DWORD *)&v53[4 * v54 + 32] != v47)
      {
        v68 = v55 - 1;
        while (v68 != v54)
        {
          v69 = *(_DWORD *)&v53[4 * v54++ + 36];
          if (v69 == v47)
            goto LABEL_60;
        }
        v54 = 0;
      }
    }
LABEL_60:
    v72 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v52 = v53;
    if ((v72 & 1) == 0)
    {
      v53 = sub_1B1FFED2C((uint64_t)v53);
      *(_QWORD *)v52 = v53;
    }
    v73 = *((_QWORD *)v53 + 2) - 1;
    if (v73 - v54 < 0)
      goto LABEL_170;
    memmove(&v53[4 * v54 + 32], &v53[4 * v54 + 36], 4 * (v73 - v54));
    *((_QWORD *)v53 + 2) = v73;
    *(_QWORD *)v52 = v53;
    v74 = &v51[5 * v46];
    v75 = *((_DWORD *)v74 + 8);
    v66 = v74 + 4;
    if (v75 != v47)
      goto LABEL_65;
LABEL_64:
    *v66 = -1;
LABEL_65:
    LOBYTE(v51[5 * v46 + 3]) = 1;
    v76 = v1[17];
    v77 = swift_isUniquelyReferenced_nonNull_native();
    v1[17] = v76;
    if ((v77 & 1) == 0)
      v76 = sub_1B216D524(v76);
    *(_QWORD *)(v76 + 8 * v47 + 32) = 0;
    v1[17] = v76;
    v78 = v1[18];
    v79 = swift_isUniquelyReferenced_nonNull_native();
    v1[18] = v78;
    if ((v79 & 1) == 0)
    {
      sub_1B202A018(0, *(_QWORD *)(v78 + 16) + 1, 1);
      v78 = *v179;
    }
    v81 = *(_QWORD *)(v78 + 16);
    v80 = *(_QWORD *)(v78 + 24);
    if (v81 >= v80 >> 1)
    {
      sub_1B202A018(v80 > 1, v81 + 1, 1);
      v78 = *v179;
    }
    *(_QWORD *)(v78 + 16) = v81 + 1;
    *(_DWORD *)(v78 + 4 * v81 + 32) = v47;
    *v179 = v78;
    v23 = (*(_QWORD *)(v24 + 240) == *(_QWORD *)(v24 + 232)) & v184;
    vfx_swift_deimmortalize(v24);
    vfx_swift_release_dealloc((_QWORD *)v24);
    v22 = v186;
    if (v186 == v183)
    {
      swift_bridgeObjectRelease();
      v14 = v174;
      v6 = v175;
      v15 = v173;
      v19 = v176;
      v16 = v177;
      if ((v23 & 1) == 0)
        goto LABEL_14;
      goto LABEL_77;
    }
  }
  v56 = &v51[5 * v46];
  v59 = v56[1];
  v58 = v56 + 1;
  v57 = v59;
  v60 = *(char **)v52;
  v61 = v59 & 0x7FFFFFFFFFFFFFFFLL;
  if ((v59 & 0x7FFFFFFFFFFFFFFFLL) != 0 && *((_DWORD *)v60 + 8) != v47)
  {
    v62 = 0;
    v70 = v61 - 1;
    while (v70 != v62)
    {
      v71 = *(_DWORD *)&v60[4 * v62++ + 36];
      if (v71 == v47)
        goto LABEL_45;
    }
  }
  v62 = 0;
LABEL_45:
  v63 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v52 = v60;
  if ((v63 & 1) == 0)
  {
    v60 = sub_1B1FFED2C((uint64_t)v60);
    *(_QWORD *)v52 = v60;
  }
  v64 = *((_QWORD *)v60 + 2) - 1;
  if (v64 - v62 >= 0)
  {
    memmove(&v60[4 * v62 + 32], &v60[4 * v62 + 36], 4 * (v64 - v62));
    *((_QWORD *)v60 + 2) = v64;
    *(_QWORD *)v52 = v60;
    *v58 = v57 - 1;
    v65 = &v51[5 * v46];
    v67 = *((_DWORD *)v65 + 9);
    v66 = (_DWORD *)v65 + 9;
    v1 = v182;
    if (v67 != v47)
      goto LABEL_65;
    goto LABEL_64;
  }
LABEL_170:
  result = sub_1B2229700();
  __break(1u);
  return result;
}

void sub_1B1DAAE5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + 216) == 1)
    sub_1B1DA947C(1);
  v1 = *(uint64_t **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v2)
    {
      v3 = 8 * v2;
      do
      {
        v4 = *v1++;
        ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v4 + 32));
        v3 -= 8;
      }
      while (v3);
    }
  }
  --*(_QWORD *)(v0 + 216);
}

void sub_1B1DAAED0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(uint64_t **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v2)
    {
      v3 = 8 * v2;
      do
      {
        v4 = *v1++;
        ecs_stack_allocator_push_snapshot(*(_QWORD *)(v4 + 32));
        v3 -= 8;
      }
      while (v3);
    }
  }
  v5 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 216) = v5 + 1;
  if (!v5)
    sub_1B1DA8FBC();
}

uint64_t sub_1B1DAAF44(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v5;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  size_t v50;
  char *v51;
  char *v52;
  char *v53;
  char isUniquelyReferenced_nonNull_native;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72[12];
  _OWORD v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  _OWORD v83[2];
  uint64_t v84;
  _BYTE v85[48];

  v3 = a2;
  v5 = OBJC_IVAR____TtC3VFX13EntityManager_activeStatesPerEffects;
  if (*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_activeStatesPerEffects) + 16))
  {
    result = sub_1B1DC3B14(a2);
    v3 = a2;
    if ((v8 & 1) != 0)
      return result;
  }
  v55 = v3;
  sub_1B1E8FCE4(v2, a1, 0x200000000, v72);
  sub_1B1A18378((uint64_t)v72, (uint64_t)v73, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  v56 = v5;
  v57 = v2;
  if (!*(_QWORD *)&v73[0])
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_56;
  }
  v80 = v73[0];
  v81 = v73[1];
  v82 = v74;
  if (v79 < 1 || (v63 = v76) == 0)
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_54:
    sub_1B19ED748(v72);
LABEL_56:
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71 = *(_QWORD *)(v57 + v56);
    *(_QWORD *)(v57 + v56) = 0x8000000000000000;
    sub_1B1B894F8((uint64_t)v12, v55, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v57 + v56) = v71;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v9 = 0;
  v10 = 0;
  v62 = v75;
  v11 = *(unsigned __int8 *)(v77 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v66 = v78[4];
  v67 = v78;
  v58 = v78 + 13;
  v59 = v78 + 8;
  v60 = (uint64_t)(v78 + 6);
  v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v61 = v11;
  while (1)
  {
    v64 = v10;
    v65 = v9;
    v13 = (unsigned int *)(v62 + 48 * v9);
    v14 = *v13;
    v69 = v13[1];
    v15 = (uint64_t *)*((_QWORD *)v13 + 2);
    v16 = *((_QWORD *)v13 + 4);
    v17 = *((_QWORD *)v13 + 5);
    if (v11)
    {
      v18 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v66);
    sub_1B1A18378(v60, (uint64_t)v85, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v19 = v67[4];
    v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v67[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v67[7] = v20;
    v59[1] = 0;
    v59[2] = 0;
    *v59 = 0;
    swift_release();
    v68 = v17;
    if (v15)
    {
      if (!v16)
        goto LABEL_27;
      while (1)
      {
        v23 = *v15++;
        v22 = v23;
        v24 = swift_retain();
        if ((*(_BYTE *)(v17 + 184) & 1) != 0)
          goto LABEL_58;
        v25 = *(unsigned int *)(*(_QWORD *)(v17 + 168) + 4 * v22);
        v26 = *(unsigned int *)(*(_QWORD *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v25 + 8);
        swift_release();
        v70 = *(_BYTE *)(v17 + 120);
        v27 = swift_isUniquelyReferenced_nonNull_native();
        v29 = sub_1B1DC3CA4(v25 | (v26 << 32));
        v30 = v28;
        v31 = v12[2] + ((v28 & 1) == 0);
        if (v12[3] >= v31)
        {
          if ((v27 & 1) != 0)
          {
            if ((v28 & 1) != 0)
              goto LABEL_23;
          }
          else
          {
            sub_1B1EB0EB8();
            if ((v30 & 1) != 0)
              goto LABEL_23;
          }
        }
        else
        {
          sub_1B1EA0344(v31, v27);
          v32 = sub_1B1DC3CA4(v25 | (v26 << 32));
          if ((v30 & 1) != (v33 & 1))
            goto LABEL_59;
          v29 = v32;
          if ((v30 & 1) != 0)
          {
LABEL_23:
            *(_BYTE *)(v12[7] + v29) = v70;
            goto LABEL_15;
          }
        }
        v12[(v29 >> 6) + 8] |= 1 << v29;
        v21 = (_DWORD *)(v12[6] + 8 * v29);
        *v21 = v25;
        v21[1] = v26;
        *(_BYTE *)(v12[7] + v29) = v70;
        ++v12[2];
LABEL_15:
        swift_bridgeObjectRelease();
        --v16;
        v17 = v68;
        if (!v16)
          goto LABEL_27;
      }
    }
    if ((_DWORD)v14 != (_DWORD)v69)
      break;
LABEL_27:
    v83[0] = v80;
    v83[1] = v81;
    v84 = v82;
    v10 = v64;
    sub_1B1F05D48(v67, (unsigned __int16 **)v83, (uint64_t)v85);
    if (*(_QWORD *)(v67[13] + 16))
    {
      v34 = (_QWORD *)swift_bridgeObjectRetain();
      sub_1B1F05034(v34, v17);
      swift_bridgeObjectRelease();
      v35 = swift_isUniquelyReferenced_nonNull_native();
      v36 = v67[13];
      if ((v35 & 1) != 0)
      {
        sub_1B1C92670(0, *(_QWORD *)(v36 + 16));
      }
      else
      {
        v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (*(_QWORD *)(v36 + 24) >= 2uLL)
        {
          sub_1B1791524(0, (unint64_t *)&qword_1ED4BADE0, (uint64_t (*)(uint64_t))sub_1B1B1F228, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v49 = (_QWORD *)swift_allocObject();
          v50 = j__malloc_size(v49);
          v49[2] = 0;
          v49[3] = 2 * ((uint64_t)(v50 - 32) / 72);
        }
        *v58 = v49;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v67[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        v51 = *(char **)(v17 + 232);
        v52 = *(char **)(v17 + 256);
        if (v51 == v52)
        {
          v53 = *(char **)(v17 + 240);
        }
        else
        {
          sub_1B1A1059C(v52, v51);
          v52 = *(char **)(v17 + 232);
          v53 = *(char **)(v17 + 240);
          if (v53 == v52)
          {
            v53 = 0;
            v52 = 0;
            *(_QWORD *)(v17 + 232) = 0;
            *(_QWORD *)(v17 + 240) = 0;
          }
        }
        *(_QWORD *)(v17 + 248) = v53;
        *(_QWORD *)(v17 + 256) = v52;
      }
    }
    ecs_stack_allocator_pop_snapshot(v66);
    v11 = v61;
    if ((v61 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    v9 = v65 + 1;
    if (v65 + 1 == v63)
      goto LABEL_54;
  }
  while (1)
  {
    v38 = swift_retain();
    if ((*(_BYTE *)(v17 + 184) & 1) != 0)
      break;
    v39 = *(unsigned int *)(*(_QWORD *)(v17 + 168) + 4 * v14);
    v40 = *(unsigned int *)(*(_QWORD *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v39 + 8);
    swift_release();
    v41 = *(_BYTE *)(v17 + 120);
    v42 = swift_isUniquelyReferenced_nonNull_native();
    v44 = sub_1B1DC3CA4(v39 | (v40 << 32));
    v45 = v43;
    v46 = v12[2] + ((v43 & 1) == 0);
    if (v12[3] >= v46)
    {
      if ((v42 & 1) != 0)
      {
        if ((v43 & 1) != 0)
          goto LABEL_39;
      }
      else
      {
        sub_1B1EB0EB8();
        if ((v45 & 1) != 0)
          goto LABEL_39;
      }
    }
    else
    {
      sub_1B1EA0344(v46, v42);
      v47 = sub_1B1DC3CA4(v39 | (v40 << 32));
      if ((v45 & 1) != (v48 & 1))
        goto LABEL_59;
      v44 = v47;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        *(_BYTE *)(v12[7] + v44) = v41;
        goto LABEL_31;
      }
    }
    v12[(v44 >> 6) + 8] |= 1 << v44;
    v37 = (_DWORD *)(v12[6] + 8 * v44);
    *v37 = v39;
    v37[1] = v40;
    *(_BYTE *)(v12[7] + v44) = v41;
    ++v12[2];
LABEL_31:
    ++v14;
    swift_bridgeObjectRelease();
    v17 = v68;
    if (v69 == v14)
      goto LABEL_27;
  }
LABEL_58:
  sub_1B2229688();
  __break(1u);
LABEL_59:
  result = sub_1B2229FC4();
  __break(1u);
  return result;
}

unint64_t sub_1B1DAB630(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int *v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  double v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  signed int v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;

  v2 = v1;
  v3 = OBJC_IVAR____TtC3VFX13EntityManager_activeStatesPerEffects;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_activeStatesPerEffects);
  if (!*(_QWORD *)(v4 + 16))
    return result;
  v5 = result;
  result = sub_1B1DC3B14(result);
  if ((v6 & 1) == 0)
    return result;
  v52 = v5;
  v53 = v3;
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * result);
  v8 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v7 + 64);
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v13 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = v12;
  v15 = 0;
  v54 = v2;
  v55 = v14;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v15 << 6);
      goto LABEL_22;
    }
    v18 = v15 + 1;
    if (v15 + 1 >= v13)
      goto LABEL_48;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    if (!v19)
    {
      v18 = v15 + 2;
      if (v15 + 2 >= v13)
        goto LABEL_48;
      v19 = *(_QWORD *)(v8 + 8 * v18);
      if (!v19)
      {
        v18 = v15 + 3;
        if (v15 + 3 >= v13)
          goto LABEL_48;
        v19 = *(_QWORD *)(v8 + 8 * v18);
        if (!v19)
        {
          v18 = v15 + 4;
          if (v15 + 4 >= v13)
            goto LABEL_48;
          v19 = *(_QWORD *)(v8 + 8 * v18);
          if (!v19)
            break;
        }
      }
    }
LABEL_21:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v18 << 6);
    v15 = v18;
LABEL_22:
    v20 = (int *)(*(_QWORD *)(v7 + 48) + 8 * v17);
    v21 = v20[1];
    v22 = *v20;
    v23 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + v17);
    if (__PAIR64__(v21, v22) != 0xFFFFFFFF && (v22 & 0x80000000) == 0 && v14[1] > v22)
    {
      v24 = *v14;
      if (v21 == -1 || *(_DWORD *)(v24 + 12 * (int)v22 + 8) == v21)
      {
        v25 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v24 + 12 * (int)v22) + 32);
        v26 = *(os_unfair_lock_s **)(v25 + 344);
        swift_retain();
        os_unfair_lock_lock(v26);
        v28 = v55;
        if (v55[1] > v22
          && ((v29 = *v55 + 12 * (int)v22, v21 != -1) ? (v30 = *(_DWORD *)(v29 + 8) == v21) : (v30 = 1), v30))
        {
          v31 = *(_QWORD *)(*(_QWORD *)(v54 + 136) + 8 * *(int *)(*v55 + 12 * (int)v22) + 32);
          if (v23 != *(unsigned __int8 *)(v31 + 120))
          {
            if ((uint64_t)(*(_QWORD *)(v31 + 240) - *(_QWORD *)(v31 + 232)) < 2)
            {
              v33 = *(_QWORD *)(v31 + 16);
              v47 = *(_DWORD *)(v31 + 188);
              v48 = *(int *)(v31 + 24);
              v50 = *(_QWORD *)(*(_QWORD *)(v54 + 136) + 8 * *(int *)(*v55 + 12 * (int)v22) + 32);
              v34 = *(os_unfair_lock_s **)(v33 + 128);
              swift_retain();
              swift_retain();
              os_unfair_lock_lock(v34);
              v35 = *(_QWORD **)(v33 + 96);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v33 + 96) = v35;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                *(_QWORD *)(v33 + 96) = sub_1B1FFECDC(v35);
              sub_1B1C8F4B0(v47, v23);
              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v33 + 80) + 8 * v48 + 32) + 200) == 1)
                *(_BYTE *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 128));
              swift_release();
              *(_BYTE *)(v50 + 120) = v23;
            }
            else
            {
              v51 = *(__int16 *)(v29 + 4);
              v49 = *(_DWORD *)(v31 + 24);
              v46 = *(unsigned int *)(v31 + 28);
              v32 = *(_BYTE *)(v31 + 32);
              swift_retain();
              sub_1B1FD8FC0(v51, v49, v23, v46 | ((unint64_t)v32 << 32), 0, 0, 0, 0);
            }
            swift_release();
            v28 = v55;
          }
          v8 = v7 + 64;
          if (v28[1] > v22 && (v21 == -1 || *(_DWORD *)(*v28 + 12 * (int)v22 + 8) == v21))
          {
            thread_worker_index(v27);
            v39 = v37[24];
            if (v39)
            {
              v40 = v37[26];
              v41 = 8 * (v38 >> 6);
              *(_QWORD *)(v39 + v41) |= 1 << v38;
              *(_QWORD *)(v40 + v41) &= ~(1 << v38);
            }
            sub_1B1FE2568(v37[5], (uint64_t)v37, v38);
          }
        }
        else
        {
          v8 = v7 + 64;
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 344));
        swift_release();
        v2 = v54;
        v14 = v55;
      }
    }
  }
  while (v13 - 5 != v15)
  {
    v19 = *(_QWORD *)(v7 + 104 + 8 * v15++);
    if (v19)
    {
      v18 = v15 + 4;
      goto LABEL_21;
    }
  }
LABEL_48:
  swift_release();
  result = sub_1B1DC3B14(v52);
  if ((v42 & 1) != 0)
  {
    v43 = result;
    v44 = swift_isUniquelyReferenced_nonNull_native();
    v45 = *(_QWORD *)(v2 + v53);
    *(_QWORD *)(v2 + v53) = 0x8000000000000000;
    if ((v44 & 1) == 0)
      sub_1B1EB0D00();
    sub_1B1EA4418(v43, v45);
    *(_QWORD *)(v2 + v53) = v45;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DABB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_signpost_type_t v12;
  os_signpost_id_t v13;
  os_signpost_type_t v14;
  os_signpost_id_t v15;
  uint64_t result;
  int v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  v1 = sub_1B22283B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  LODWORD(v4) = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 1;
  if ((_DWORD)v4 != 1)
  {
    v7 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v7)
    {
      swift_retain();
      v7(v0);
      sub_1B19E5A18((uint64_t)v7);
    }
  }
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v8 = sub_1B1B40EC8(v1, (uint64_t)qword_1ED4D0E48);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v8, v1);
  v9 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v9 = 0;
  v10 = sub_1B2228398();
  v20 = v2;
  v11 = v10;
  v12 = sub_1B2228FA4();
  v13 = sub_1B2228374();
  _os_signpost_emit_with_name_impl(&dword_1B178D000, v11, v12, v13, "update", "", v9, 2u);
  swift_retain();
  sub_1B204D228(3);
  swift_release();
  v14 = sub_1B2228F98();
  v15 = sub_1B2228374();
  _os_signpost_emit_with_name_impl(&dword_1B178D000, v11, v14, v15, "update", "", v9, 2u);

  MEMORY[0x1B5E23F88](v9, -1, -1);
  result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v1);
  v17 = *(unsigned __int8 *)(v0 + v6);
  *(_BYTE *)(v0 + v6) = 4;
  if (v17 != 4)
  {
    v18 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v18)
    {
      swift_retain();
      v18(v0);
      return sub_1B19E5A18((uint64_t)v18);
    }
  }
  return result;
}

uint64_t sub_1B1DABD7C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t result;
  double v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  void (*v10)(uint64_t);

  v1 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 3;
  if (v2 != 3)
  {
    v3 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v3)
    {
      swift_retain();
      v3(v0);
      sub_1B19E5A18((uint64_t)v3);
    }
  }
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 24);
  result = swift_retain();
  if (v4)
  {
    v7 = (uint64_t *)thread_worker_index(v6);
    v8 = *v7;
    *v7 = 0;
    swift_retain();
    sub_1B204E7C8(5);
    *v7 = v8;
    swift_release();
    result = swift_release();
  }
  v9 = *(unsigned __int8 *)(v0 + v1);
  *(_BYTE *)(v0 + v1) = 4;
  if (v9 != 4)
  {
    v10 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v10)
    {
      swift_retain();
      v10(v0);
      return sub_1B19E5A18((uint64_t)v10);
    }
  }
  return result;
}

void sub_1B1DABEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  task_t v10;
  char isUniquelyReferenced_nonNull_native;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity;
    swift_retain();
    swift_retain();
    for (i = 0; i != v2; ++i)
    {
      v5 = *(_QWORD *)(v1 + 8 * i + 32);
      if (v5)
        vfx_attribute_memory(v5 + 144, *(_DWORD *)(v0 + v3));
    }
    swift_release();
    swift_release();
  }
  v6 = *(char **)(v0 + 152);
  v7 = *((_QWORD *)v6 + 2);
  if (v7)
  {
    v8 = OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity;
    v9 = 32;
    do
    {
      v10 = *(_DWORD *)(v0 + v8);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v0 + 152) = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v6 = sub_1B1FFECC8((uint64_t)v6);
        *(_QWORD *)(v0 + 152) = v6;
      }
      vfx_attribute_memory((uint64_t)&v6[v9], v10);
      v6 = *(char **)(v0 + 152);
      v9 += 24;
      --v7;
    }
    while (v7);
  }
}

uint64_t sub_1B1DABFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  swift_retain();
  if (vfx_counters_is_null(a2))
    v4 = 0;
  else
    v4 = a2;
  sub_1B1E37188(v4, (uint64_t)&v14);
  v5 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  v6 = v15;
  *(_OWORD *)v5 = v14;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 96) = v20;
  v7 = v19;
  *(_OWORD *)(v5 + 64) = v18;
  *(_OWORD *)(v5 + 80) = v7;
  v8 = v17;
  *(_OWORD *)(v5 + 32) = v16;
  *(_OWORD *)(v5 + 48) = v8;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v9)
  {
    v10 = v16;
    *(_OWORD *)(v9 + 88) = v17;
    v11 = v19;
    *(_OWORD *)(v9 + 104) = v18;
    *(_OWORD *)(v9 + 120) = v11;
    *(_QWORD *)(v9 + 136) = v20;
    v12 = v15;
    *(_OWORD *)(v9 + 40) = v14;
    *(_OWORD *)(v9 + 56) = v12;
    *(_OWORD *)(v9 + 72) = v10;
  }
  return swift_release();
}

uint64_t sub_1B1DAC06C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 80);
  v69 = v2;
  v63 = *(_QWORD *)(v3 + 16);
  if (!v63)
  {
    v5 = 0;
    goto LABEL_35;
  }
  v62 = v3 + 32;
  swift_retain();
  swift_retain();
  v4 = 0;
  v5 = 0;
  do
  {
    v8 = *(_QWORD *)(v62 + 8 * v4);
    if (v8)
    {
      v66 = v4;
      v67 = v5;
      v9 = *(_QWORD *)(*(_QWORD *)(v2 + 96) + 40 * *(int *)(v8 + 204) + 32);
      v10 = *(_QWORD *)(v9 + 16);
      v65 = *(_QWORD *)(v8 + 72);
      if (!v10)
      {
        v64 = 0;
        v14 = MEMORY[0x1E0DEE9D8];
        goto LABEL_19;
      }
      v11 = *(_QWORD *)(v2 + 136) + 32;
      if (v10 == 1)
      {
        v12 = 0;
        v13 = 0;
      }
      else
      {
        v15 = 0;
        v16 = 0;
        v12 = v10 & 0x7FFFFFFFFFFFFFFELL;
        v17 = (int *)(v9 + 36);
        v18 = v10 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v19 = *(_QWORD *)(v11 + 8 * *(v17 - 1));
          v20 = *(_QWORD *)(v11 + 8 * *v17);
          v15 += *(_QWORD *)(v19 + 240) - *(_QWORD *)(v19 + 232);
          v16 += *(_QWORD *)(v20 + 240) - *(_QWORD *)(v20 + 232);
          v17 += 2;
          v18 -= 2;
        }
        while (v18);
        v13 = v16 + v15;
        if (v10 == v12)
          goto LABEL_16;
      }
      v21 = v10 - v12;
      v22 = (int *)(v9 + 4 * v12 + 32);
      do
      {
        v23 = *v22++;
        v13 += *(_QWORD *)(*(_QWORD *)(v11 + 8 * v23) + 240) - *(_QWORD *)(*(_QWORD *)(v11 + 8 * v23) + 232);
        --v21;
      }
      while (v21);
LABEL_16:
      v24 = *(_QWORD *)(v8 + 48);
      v70[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1B2229550();
      v25 = 0;
      do
      {
        v26 = v25 + 1;
        swift_retain();
        sub_1B2229520();
        sub_1B2229568();
        sub_1B2229574();
        sub_1B2229538();
        v25 = v26;
      }
      while (v10 != v26);
      v64 = v24 * v13;
      v14 = v70[0];
      swift_bridgeObjectRelease();
LABEL_19:
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        v27 = sub_1B22296AC();
        if (v27)
        {
LABEL_21:
          v28 = 0;
          v68 = 0;
          do
          {
            if ((v14 & 0xC000000000000001) != 0)
              v29 = MEMORY[0x1B5E21018](v28, v14);
            else
              v29 = swift_retain();
            v30 = v28 + 1;
            v31 = *(_QWORD *)(v29 + 232);
            v32 = *(_QWORD *)(v29 + 240);
            swift_release();
            if (v32 == v31)
            {
              ++v28;
              v33 = v27 == v30;
            }
            else
            {
              ++v68;
              v33 = v27 - 1 == v28++;
            }
            v2 = v69;
          }
          while (!v33);
          goto LABEL_4;
        }
      }
      else
      {
        v27 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v27)
          goto LABEL_21;
      }
      v68 = 0;
LABEL_4:
      v5 = v67 + 1;
      swift_bridgeObjectRelease_n();
      v6 = a2[1] + v64;
      *a2 += v65 * v10;
      a2[1] = v6;
      v7 = a2[3] + v68;
      a2[2] += v10;
      a2[3] = v7;
      v4 = v66;
    }
    ++v4;
  }
  while (v4 != v63);
  swift_release();
  swift_release();
LABEL_35:
  v34 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  v35 = *(_QWORD *)(v69 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v70[1] = 0x80000001B233BF10;
  v71 = v5;
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v36 = sub_1B2228EA8();
  v70[0] = 0;
  (*(void (**)(uint64_t, _QWORD *, unint64_t, unint64_t))(*(_QWORD *)v35 + 88))(v36, v70, 0xD000000000000014, 0x80000001B233BF10);
  swift_release();
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v69 + v34);
  strcpy((char *)v70, "Chunk size: ");
  BYTE5(v70[1]) = 0;
  HIWORD(v70[1]) = -5120;
  v38 = *a2;
  v39 = objc_allocWithZone(MEMORY[0x1E0CB34E8]);
  swift_retain();
  v40 = objc_msgSend(v39, sel_init);
  objc_msgSend(v40, sel_setCountStyle_, 3);
  v41 = objc_msgSend(v40, sel_stringFromByteCount_, v38);
  sub_1B222874C();

  sub_1B2228890();
  swift_bridgeObjectRelease();
  v42 = v70[0];
  v43 = v70[1];
  v44 = sub_1B2228EA8();
  v70[0] = 0;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(*(_QWORD *)v37 + 88))(v44, v70, v42, v43);
  swift_release();
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v69 + v34);
  strcpy((char *)v70, "Chunk count: ");
  HIWORD(v70[1]) = -4864;
  v71 = a2[2];
  swift_retain();
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v46 = v70[0];
  v47 = v70[1];
  v48 = sub_1B2228EA8();
  v70[0] = 0;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(*(_QWORD *)v45 + 88))(v48, v70, v46, v47);
  swift_release();
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v69 + v34);
  v70[0] = 0;
  v70[1] = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v70[0] = 0xD000000000000012;
  v70[1] = 0x80000001B233BF30;
  v50 = a2[1];
  v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB34E8]), sel_init);
  objc_msgSend(v51, sel_setCountStyle_, 3);
  v52 = objc_msgSend(v51, sel_stringFromByteCount_, v50);
  sub_1B222874C();

  sub_1B2228890();
  swift_bridgeObjectRelease();
  v53 = v70[0];
  v54 = v70[1];
  v55 = sub_1B2228EA8();
  v70[0] = 0;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(*(_QWORD *)v49 + 88))(v55, v70, v53, v54);
  swift_release();
  swift_bridgeObjectRelease();
  v56 = *(_QWORD *)(v69 + v34);
  v70[0] = 0;
  v70[1] = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v70[0] = 0xD000000000000013;
  v70[1] = 0x80000001B233BF50;
  v71 = a2[3];
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v57 = v70[0];
  v58 = v70[1];
  v59 = sub_1B2228EA8();
  v70[0] = 0;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(*(_QWORD *)v56 + 88))(v59, v70, v57, v58);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1B1DAC77C(uint64_t a1, Swift::Int a2)
{
  uint64_t v2;
  Swift::UInt32 v4;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_counters))
  {
    swift_getAtKeyPath();
    vfx_counters.add(_:_:)(v4, a2);
  }
}

void sub_1B1DAC7FC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_1B1DAC80C()
{
  sub_1B222A06C();
  sub_1B222A0A8();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DAC850()
{
  return sub_1B222A0A8();
}

uint64_t sub_1B1DAC878()
{
  sub_1B222A06C();
  sub_1B222A0A8();
  return sub_1B222A0C0();
}

void sub_1B1DAC8B8(uint64_t a1, int8x16_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int8x16_t *v12;
  int64x2_t v13;
  unint64_t v14;
  int64x2_t v15;
  unint64_t v16;
  int8x8_t *v17;
  int8x8_t v18;
  uint8x8_t v19;
  uint64_t v20;
  int v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  int v24;
  uint64_t v25;
  uint64_t v26;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 128));
  if (a3 + 63 <= 127)
    v9 = 1;
  else
    v9 = (a3 + 63) >> 6;
  if (v9 < 4)
  {
    v10 = 0;
    v11 = 0;
LABEL_9:
    v16 = v9 - v11;
    v17 = (int8x8_t *)a2 + v11;
    do
    {
      v18 = *v17++;
      v19 = (uint8x8_t)vcnt_s8(v18);
      v19.i16[0] = vaddlv_u8(v19);
      v10 += v19.u32[0];
      --v16;
    }
    while (v16);
    goto LABEL_11;
  }
  v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  v12 = a2 + 1;
  v13 = 0uLL;
  v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  v15 = 0uLL;
  do
  {
    v13 = (int64x2_t)vpadalq_u32((uint64x2_t)v13, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(v12[-1]))));
    v15 = (int64x2_t)vpadalq_u32((uint64x2_t)v15, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*v12))));
    v12 += 2;
    v14 -= 4;
  }
  while (v14);
  v10 = vaddvq_s64(vaddq_s64(v15, v13));
  if (v9 != v11)
    goto LABEL_9;
LABEL_11:
  if (v10)
  {
    v20 = *(_QWORD *)(a1 + 240) - *(_QWORD *)(a1 + 232);
    v21 = *(_DWORD *)(a1 + 188);
    v22 = *(_QWORD **)(v4 + 96);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v4 + 96) = v22;
    if (v20 == v10)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        *(_QWORD *)(v4 + 96) = sub_1B1FFECDC(v22);
      v24 = v21;
      v25 = 0;
      v26 = 0;
    }
    else
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        *(_QWORD *)(v4 + 96) = sub_1B1FFECDC(v22);
      v24 = v21;
      v25 = (uint64_t)a2;
      v26 = a3;
    }
    sub_1B1C8F2C0(v24, v25, v26, a4);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 128));
}

id sub_1B1DACA4C(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock), sel_lock);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    sub_1B1DA6294(a2, a3);
  }
  else
  {
    sub_1B1DAAED0();
    a2();
    sub_1B1DACAE0(a1);
  }
  return objc_msgSend(*(id *)(a1 + v6), sel_unlock);
}

void sub_1B1DACAE0(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 216) == 1)
    sub_1B1DA947C(1);
  v2 = *(uint64_t **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v3)
    {
      v4 = 8 * v3;
      do
      {
        v5 = *v2++;
        ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v5 + 32));
        v4 -= 8;
      }
      while (v4);
    }
  }
  --*(_QWORD *)(a1 + 216);
}

uint64_t sub_1B1DACB58(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_1B1A137F4((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1B1A02518(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1B1DACBD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 16);
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  v8 = v6 + a1 - a2;
  if ((_DWORD)result && v8 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v6 <= v8)
      v9 = v6 + a1 - a2;
    else
      v9 = v6;
    result = sub_1B202A018(result, v9, 1);
    v5 = *v2;
    if (a1 == a2)
      goto LABEL_11;
  }
  v10 = *(_QWORD *)(v5 + 16) - a2;
  if (v10 >= 0)
  {
    result = (uint64_t)memmove((void *)(v5 + 32 + 4 * a1), (const void *)(v5 + 32 + 4 * a2), 4 * v10);
    *(_QWORD *)(v5 + 16) += a1 - a2;
LABEL_11:
    *v2 = v5;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DACCD4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t result;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_native || v6 - (a2 - a1) > *(_QWORD *)(v5 + 24) >> 1)
  {
    MEMORY[0x1B5E21108]();
    v5 = *v2;
  }
  type metadata accessor for EntityFamily();
  swift_arrayDestroy();
  if (a2 == a1)
    return sub_1B2229538();
  v8 = *(_QWORD *)(v5 + 16) - a2;
  if (v8 >= 0)
  {
    memmove((void *)(v5 + 32 + 8 * a1), (const void *)(v5 + 32 + 8 * a2), 8 * v8);
    *(_QWORD *)(v5 + 16) -= a2 - a1;
    return sub_1B2229538();
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DACDEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 16);
  result = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v7;
  if ((_DWORD)result && v8 + a1 - a2 <= *(_QWORD *)(v7 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_8;
  }
  else
  {
    result = a3();
    v7 = *v3;
    if (a1 == a2)
    {
LABEL_8:
      *v3 = v7;
      return result;
    }
  }
  v10 = *(_QWORD *)(v7 + 16) - a2;
  if (v10 >= 0)
  {
    result = (uint64_t)memmove((void *)(v7 + 32 + 8 * a1), (const void *)(v7 + 32 + 8 * a2), 8 * v10);
    *(_QWORD *)(v7 + 16) += a1 - a2;
    goto LABEL_8;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DACEFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 16);
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  v8 = v6 + a1 - a2;
  if ((_DWORD)result && v8 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v6 <= v8)
      v9 = v6 + a1 - a2;
    else
      v9 = v6;
    result = sub_1B202A1B4(result, v9, 1);
    v5 = *v2;
    if (a1 == a2)
      goto LABEL_11;
  }
  v10 = *(_QWORD *)(v5 + 16) - a2;
  if (v10 >= 0)
  {
    result = (uint64_t)memmove((void *)(v5 + 32 + 16 * a1), (const void *)(v5 + 32 + 16 * a2), 16 * v10);
    *(_QWORD *)(v5 + 16) += a1 - a2;
LABEL_11:
    *v2 = v5;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DAD004(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v4 = 0;
    v6 = *(_QWORD *)(a2 + 16);
    if (!v6)
      return v4;
    goto LABEL_5;
  }
  v4 = 0;
  v5 = a1 + 32;
  do
  {
    v5 += 16;
    v4 ^= sub_1B2228CF8();
    --v3;
  }
  while (v3);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
LABEL_5:
    v7 = a2 + 32;
    swift_bridgeObjectRetain();
    v8 = a2 + 32;
    v9 = v6;
    do
    {
      sub_1B19FA198(v8, (uint64_t)v14);
      sub_1B19FA070(v14, v15);
      swift_getDynamicType();
      v4 ^= sub_1B2228CF8();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
      v8 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10 = 0;
    do
    {
      sub_1B19FA198(v7, (uint64_t)v14);
      v11 = v15;
      v12 = v16;
      sub_1B19FA070(v14, v15);
      v10 ^= (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_1B1DAD144(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _opaque_pthread_t *v8;
  id v9;
  _opaque_pthread_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v6 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v7)
  {
    v8 = *(_opaque_pthread_t **)(v7 + 144);
    v9 = a3;
    swift_retain();
    v10 = pthread_self();
    if (pthread_equal(v8, v10))
    {
      sub_1B1DAAED0();
      sub_1B19E954C(a2, &v18);
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v15 = v9;
      v16 = sub_1B1E64FE8(v7, a2, (uint64_t)v15);
      swift_release();

      if (!v3)
        v18 = v16;
    }
  }
  else
  {
    v11 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v12 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v13 = a3;
    objc_msgSend(v12, sel_lock);
    if (*(_QWORD *)(a1 + v6))
    {
      v13 = v13;
      v14 = sub_1B1DAD144(a1, a2, v13);
      if (v3)
      {

      }
      else
      {
        v17 = v14;

        v18 = v17;
      }
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B19E954C(a2, &v18);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v11), sel_unlock);

  }
}

void sub_1B1DAD330(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _opaque_pthread_t *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v8)
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    v18 = a3;
    v19 = v17;
    v20 = v18;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v19 = v19;
      v20 = v20;
      v21 = sub_1B1DAD330(a1, v19, v20);
      if (v3)
      {

LABEL_13:
        objc_msgSend(*(id *)(a1 + v15), sel_unlock);

        goto LABEL_14;
      }
      v25 = v21;

      v26 = v25;
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B19EA8B0((uint64_t)v19, v20, &v26);
      if (v3)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_13;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock);

    return;
  }
  v9 = *(_opaque_pthread_t **)(v8 + 144);
  v10 = a2;
  v11 = a3;
  v12 = v10;
  v13 = v11;
  swift_retain();
  v14 = pthread_self();
  if (pthread_equal(v9, v14))
  {
    sub_1B1DAAED0();
    sub_1B19EA8B0((uint64_t)v12, v13, &v26);
    if (!v3)
    {
      sub_1B1DACAE0(a1);

      swift_release();
      return;
    }
    sub_1B1DACAE0(a1);

    swift_release();
    goto LABEL_14;
  }
  v22 = v12;
  v23 = v13;
  v24 = sub_1B1E65004(v8, (uint64_t)v22, (uint64_t)v23);
  swift_release();

  if (v3)
  {

LABEL_14:
    return;
  }

  v26 = v24;
}

void *sub_1B1DAD5A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _opaque_pthread_t *v11;
  id v12;
  _BYTE *v13;
  _opaque_pthread_t *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v9 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v10)
  {
    v16 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v18 = a2;
    swift_bridgeObjectRetain_n();
    v19 = (char *)v18;
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v9))
    {
      v19 = v19;
      swift_bridgeObjectRetain();
      v20 = sub_1B1DAD5A0(a1, v19, a3, a4);
      if (v4)
      {

        swift_bridgeObjectRelease();
        objc_msgSend(*(id *)(a1 + v16), sel_unlock);
        swift_bridgeObjectRelease();

        goto LABEL_23;
      }
      v17 = (void *)v20;

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F43C48();
      if ((v19[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] & 1) != 0)
        v23 = 0x200000000;
      else
        v23 = *(unsigned int *)&v19[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)(*(_DWORD *)&v19[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] == 0) << 33);
      v24 = sub_1B1B0E020(a3, a4, v23);
      swift_release();
      if (v24 == 0xFFFFFFFFLL)
        v17 = 0;
      else
        v17 = (void *)v24;
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v16), sel_unlock);
    swift_bridgeObjectRelease();

    goto LABEL_23;
  }
  v11 = *(_opaque_pthread_t **)(v10 + 144);
  v12 = a2;
  swift_bridgeObjectRetain_n();
  v13 = v12;
  swift_retain();
  v14 = pthread_self();
  if (pthread_equal(v11, v14))
  {
    sub_1B1DAAED0();
    sub_1B1F43C48();
    if ((v13[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] & 1) != 0)
      v15 = 0x200000000;
    else
      v15 = *(unsigned int *)&v13[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)(*(_DWORD *)&v13[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] == 0) << 33);
    v22 = sub_1B1B0E020(a3, a4, v15);
    swift_release();
    if (v22 == 0xFFFFFFFFLL)
      v17 = 0;
    else
      v17 = (void *)v22;
    sub_1B1DACAE0(a1);
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    v21 = v13;
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1B1E65148(v10, (uint64_t)v21, a3, a4);
    swift_release();

    swift_bridgeObjectRelease_n();
  }
LABEL_23:
  swift_bridgeObjectRelease();

  return v17;
}

uint64_t sub_1B1DAD870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  if (!a2)
  {
    v6 = 0;
    v7 = *(_QWORD *)(a3 + 16);
    if (!v7)
      return v6;
    goto LABEL_5;
  }
  v4 = a2;
  v6 = 0;
  do
  {
    a1 += 16;
    v6 ^= sub_1B2228CF8();
    --v4;
  }
  while (v4);
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
LABEL_5:
    v8 = a3 + 32;
    swift_bridgeObjectRetain();
    v9 = a3 + 32;
    v10 = v7;
    do
    {
      sub_1B19FA198(v9, (uint64_t)v15);
      sub_1B19FA070(v15, v16);
      swift_getDynamicType();
      v6 ^= sub_1B2228CF8();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v15);
      v9 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v11 = 0;
    do
    {
      sub_1B19FA198(v8, (uint64_t)v15);
      v12 = v16;
      v13 = v17;
      sub_1B19FA070(v15, v16);
      v11 ^= (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v15);
      v8 += 40;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1B1DAD9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;

  v5 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24));
  v6 = (_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v7 = v6[1];
  if (v7)
  {
    v8 = 0;
    for (i = 0; i != v7; ++i)
    {
      v10 = *v6 + v8;
      if ((*(__int16 *)(v10 + 6) & 0x80000000) == 0)
        sub_1B1DA67D0(i | ((unint64_t)*(unsigned int *)(v10 + 8) << 32), a3);
      v8 += 12;
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 24));
}

char *sub_1B1DADA68(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1B1C62F18(0, v2, 0, MEMORY[0x1E0DEE9D8]);
  if (v2)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    v24 = a1 + 40;
    v22 = a1 + 32;
    v23 = v2;
    while (1)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 16 * v5 + 8) + 8);
      v25 = *(_OWORD *)(v4 + 16 * v5);
      v9 = *(_QWORD *)(v4 + 16 * v5);
      if (sub_1B1F276D0(v9, v8))
      {
        v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 24);
        swift_bridgeObjectRetain();
        v11 = v24;
        do
        {
          v12 = *(_QWORD *)(v11 - 8);
          v13 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v11 + 8) + 24))(v12, *(_QWORD *)(*(_QWORD *)v11 + 8));
          if (v13 == v10(v9, v8))
          {
            v14 = sub_1B1F24A98(v12);
            if (sub_1B1F24A98(v9) < v14)
            {
              swift_bridgeObjectRelease();
              v4 = v22;
              v2 = v23;
              goto LABEL_6;
            }
          }
          v11 += 16;
          --v2;
        }
        while (v2);
        swift_bridgeObjectRelease();
        v15 = *((_QWORD *)v3 + 2);
        if (v15)
        {
          v18 = 32;
          v19 = *((_QWORD *)v3 + 2);
          while (*(_QWORD *)&v3[v18] != v9)
          {
            v18 += 16;
            if (!--v19)
              goto LABEL_22;
          }
          v4 = v22;
          v2 = v23;
          goto LABEL_6;
        }
LABEL_22:
        v20 = *((_QWORD *)v3 + 3);
        v7 = v15 + 1;
        if (v15 >= v20 >> 1)
          v3 = sub_1B1C62F18(v20 > 1, v15 + 1, 1, v3);
        v4 = v22;
        v2 = v23;
      }
      else
      {
        v15 = *((_QWORD *)v3 + 2);
        if (v15)
        {
          v16 = 32;
          v17 = *((_QWORD *)v3 + 2);
          while (*(_QWORD *)&v3[v16] != v9)
          {
            v16 += 16;
            if (!--v17)
              goto LABEL_3;
          }
          goto LABEL_6;
        }
LABEL_3:
        v6 = *((_QWORD *)v3 + 3);
        v7 = v15 + 1;
        if (v15 >= v6 >> 1)
          v3 = sub_1B1C62F18(v6 > 1, v15 + 1, 1, v3);
      }
      *((_QWORD *)v3 + 2) = v7;
      *(_OWORD *)&v3[16 * v15 + 32] = v25;
LABEL_6:
      if (++v5 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
  }
  return v3;
}

uint64_t sub_1B1DADCB4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _BYTE *v7;
  int v8;
  int v9;
  int v10;
  int v11;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return 0;
  }
  swift_bridgeObjectRetain();
  v4 = sub_1B22296AC();
  swift_bridgeObjectRelease();
  if (!v4)
    return 0;
LABEL_3:
  v5 = 0;
  v6 = (int *)(a2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
  while (1)
  {
    v7 = (a1 & 0xC000000000000001) != 0
       ? (_BYTE *)MEMORY[0x1B5E21018](v5, a1)
       : *(id *)(a1 + 8 * v5 + 32);
    v8 = (v7[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] & 1) != 0
       ? 0
       : *(_DWORD *)&v7[OBJC_IVAR____TtC3VFX9VFXEffect_effectID];
    v9 = *v6;
    v10 = *((unsigned __int8 *)v6 + 4);

    v11 = v10 ? 0 : v9;
    if (v8 == v11)
      break;
    if (v4 == ++v5)
      return 0;
  }
  return v5;
}

uint64_t sub_1B1DADDD8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  _BYTE *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v23;
  uint64_t v24;
  int v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_1B1DADCB4(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  v9 = *a1;
  v10 = *a1 >> 62;
  if ((v8 & 1) == 0)
  {
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1B22296AC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v6 + 1 != v11)
    {
      v12 = a2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID;
      for (i = v6 + 5; ; ++i)
      {
        if ((*a1 & 0xC000000000000001) != 0)
          v14 = (_BYTE *)MEMORY[0x1B5E21018](i - 4);
        else
          v14 = *(id *)(*a1 + 8 * i);
        if ((v14[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] & 1) != 0)
          v15 = 0;
        else
          v15 = *(_DWORD *)&v14[OBJC_IVAR____TtC3VFX9VFXEffect_effectID];
        v16 = *(_DWORD *)v12;
        v17 = *(unsigned __int8 *)(v12 + 4);

        if (v17)
          v18 = 0;
        else
          v18 = v16;
        if (v15 == v18)
          goto LABEL_30;
        if (i - 4 != v6)
          break;
LABEL_29:
        ++v6;
LABEL_30:
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v27 = sub_1B22296AC();
          swift_bridgeObjectRelease();
        }
        else
        {
          v27 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v28 = i - 3;
        if (v28 == v27)
          return v6;
      }
      v19 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v20 = (id)MEMORY[0x1B5E21018](v6, *a1);
        v19 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1B5E21018](i - 4, v19);
          v19 = *a1;
LABEL_20:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v19;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
            sub_1B1FFEE30(v19);
          v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
          *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;

          sub_1B2228AD0();
          v24 = *a1;
          v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v24;
          if (!v25 || v24 < 0 || (v24 & 0x4000000000000000) != 0)
            sub_1B1FFEE30(v24);
          v26 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * i);
          *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v20;

          sub_1B2228AD0();
          goto LABEL_29;
        }
      }
      else
      {
        v20 = *(id *)(v19 + 8 * v6 + 32);
      }
      v21 = *(id *)(v19 + 8 * i);
      goto LABEL_20;
    }
    return v6;
  }
  if (!v10)
    return *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v30 = sub_1B22296AC();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1B1DAE098(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  int64_t v6;
  int isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t result;
  uint64_t v11;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  v8 = v6 - (a2 - a1);
  if (!isUniquelyReferenced_nonNull_native || v8 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v8)
      v9 = v6 - (a2 - a1);
    else
      v9 = v6;
    sub_1B202AF5C(isUniquelyReferenced_nonNull_native, v9, 1);
    v5 = *v2;
  }
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v11 = *(_QWORD *)(v5 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v5 + 32 + 104 * a1), (const void *)(v5 + 32 + 104 * a2), 104 * v11);
    *(_QWORD *)(v5 + 16) -= a2 - a1;
LABEL_10:
    *v2 = v5;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

BOOL sub_1B1DAE1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  _opaque_pthread_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  char v17;

  v4 = v2;
  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v8)
  {
    v12 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v13 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    objc_msgSend(v13, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      swift_retain();
      v14 = sub_1B1DAE1B8(a1, a2);
      if (v4)
      {
        swift_release();
        objc_msgSend(*(id *)(a1 + v12), sel_unlock);
        swift_release_n();
        return v3;
      }
      v17 = v14;
      swift_release();
      v3 = v17 & 1;
    }
    else
    {
      sub_1B1DAAED0();
      v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
      v3 = v16 == 0;
      if (v16)
      {
        swift_retain();
        sub_1B1BA1324();
        swift_release();
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v12), sel_unlock);
    swift_release_n();
    return v3;
  }
  v9 = *(_opaque_pthread_t **)(v8 + 144);
  swift_retain_n();
  swift_retain();
  v10 = pthread_self();
  if (pthread_equal(v9, v10))
  {
    sub_1B1DAAED0();
    v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
    v3 = v11 == 0;
    if (v11)
    {
      swift_retain();
      sub_1B1BA1324();
      swift_release();
    }
    sub_1B1DACAE0(a1);
    swift_release_n();
    swift_release();
  }
  else
  {
    swift_retain();
    v15 = sub_1B1E6527C(v8, a2);
    swift_release();
    swift_release_n();
    if (!v2)
      return v15;
  }
  return v3;
}

uint64_t sub_1B1DAE3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  _opaque_pthread_t *v13;
  _opaque_pthread_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v11 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v12)
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain();
    sub_1B1B7C5AC(a3);
    swift_retain();
    sub_1B1B7C5AC(a3);
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v11))
    {
      swift_retain();
      sub_1B1B7C5AC(a3);
      v17 = sub_1B1DAE3AC(a1, a2, a3, a4 & 0xFFFFFFFFFFLL, a5);
      if (v5)
      {
        sub_1B19ED720(a3);
        swift_release();
LABEL_13:
        objc_msgSend(*(id *)(a1 + v15), sel_unlock);
        goto LABEL_14;
      }
      v20 = v17;
      sub_1B19ED720(a3);
      swift_release();
      v21 = v20;
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F48BA0(a2, a3, a4 & 0xFFFFFFFFFFLL, a5, &v21);
      if (v5)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_13;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock);
    goto LABEL_19;
  }
  v13 = *(_opaque_pthread_t **)(v12 + 144);
  swift_retain();
  sub_1B1B7C5AC(a3);
  swift_retain();
  sub_1B1B7C5AC(a3);
  swift_retain();
  v14 = pthread_self();
  if (!pthread_equal(v13, v14))
  {
    swift_retain();
    sub_1B1B7C5AC(a3);
    v18 = sub_1B1E65374(v12, a2, a3, a4 & 0xFFFFFFFFFFLL, a5);
    sub_1B19ED720(a3);
    swift_release();
    swift_release_n();
    sub_1B19ED720(a3);
    if (!v5)
    {
      swift_release();
      sub_1B19ED720(a3);
      v21 = v18;
      return v18;
    }
    goto LABEL_15;
  }
  sub_1B1DAAED0();
  sub_1B1F48BA0(a2, a3, a4 & 0xFFFFFFFFFFLL, a5, &v21);
  if (v5)
  {
    sub_1B1DACAE0(a1);
    swift_release();
LABEL_14:
    swift_release();
    sub_1B19ED720(a3);
LABEL_15:
    swift_release();
    return sub_1B19ED720(a3);
  }
  sub_1B1DACAE0(a1);
  swift_release();
LABEL_19:
  swift_release();
  sub_1B19ED720(a3);
  swift_release();
  sub_1B19ED720(a3);
  return v21;
}

uint64_t sub_1B1DAE668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  _opaque_pthread_t *v13;
  _opaque_pthread_t *v14;
  unint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;

  v11 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v12)
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v11))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v19 = sub_1B1DAE668(a1, a2, a3, a4, a5 & 0xFFFFFFFFFFLL);
      if (v5)
      {
        swift_release();
        swift_bridgeObjectRelease();
        objc_msgSend(*(id *)(a1 + v18), sel_unlock);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_18;
      }
      LOBYTE(v17) = v19;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B1DAAED0();
      v20 = sub_1B1FF36E8(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
      if ((v21 & 1) != 0)
        LOBYTE(v17) = 0;
      else
        LOBYTE(v17) = sub_1B1DA5684(v20);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v18), sel_unlock);
    swift_bridgeObjectRelease();
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
  v13 = *(_opaque_pthread_t **)(v12 + 144);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v14 = pthread_self();
  if (pthread_equal(v13, v14))
  {
    sub_1B1DAAED0();
    v15 = sub_1B1FF36E8(a3, a4, a5 & 0xFFFFFFFFFFLL, 1);
    if ((v16 & 1) != 0)
      LOBYTE(v17) = 0;
    else
      LOBYTE(v17) = sub_1B1DA5684(v15);
    sub_1B1DACAE0(a1);
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_17;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(v17) = sub_1B1E654AC(v12, a2, a3, a4, a5 & 0xFFFFFFFFFFLL);
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease_n();
LABEL_18:
  swift_bridgeObjectRelease();
  swift_release();
  return v17 & 1;
}

uint64_t sub_1B1DAE900(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  char *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v5)
  {
    v10 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v11 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v12 = a2;
    objc_msgSend(v11, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v12 = v12;
      v13 = sub_1B1DAE900(a1, v12);
      if (v2)
      {

        objc_msgSend(*(id *)(a1 + v10), sel_unlock);
        return v11 & 1;
      }
      LOBYTE(v11) = v13;

    }
    else
    {
      sub_1B1DAAED0();
      v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
      if (!swift_weakLoadStrong())
      {
        if (*(_QWORD *)&v12[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager])
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      swift_release();
      swift_retain();
      v17 = sub_1B1FD568C((uint64_t)&type metadata for Hidden, (uint64_t)&off_1E63BB290, v15);
      swift_release();
      LOBYTE(v11) = !v17;
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v10), sel_unlock);

    return v11 & 1;
  }
  v6 = *(_opaque_pthread_t **)(v5 + 144);
  v7 = a2;
  swift_retain();
  v8 = pthread_self();
  if (pthread_equal(v6, v8))
  {
    sub_1B1DAAED0();
    v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
    if (!swift_weakLoadStrong())
    {
      if (*(_QWORD *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager])
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    swift_release();
    swift_retain();
    v16 = sub_1B1FD568C((uint64_t)&type metadata for Hidden, (uint64_t)&off_1E63BB290, v9);
    swift_release();
    LOBYTE(v11) = !v16;
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v14 = v7;
    LOBYTE(v11) = sub_1B1E655B4(v5, (uint64_t)v14);
    swift_release();

  }
  return v11 & 1;
}

uint64_t sub_1B1DAEBF0(uint64_t a1, void *a2)
{
  return sub_1B1DAF36C(a1, a2, (uint64_t (*)(uint64_t, id))sub_1B1E65738, (void (*)(uint64_t *__return_ptr, id))sub_1B1DC1AD4, (uint64_t (*)(uint64_t, id))sub_1B1DAEBF0) & 1;
}

uint64_t sub_1B1DAEC20(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  _BYTE *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  void *v13;
  uint64_t v14;
  id v15;
  char v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v5)
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v13 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v15 = a2;
    objc_msgSend(v13, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v15 = v15;
      v16 = sub_1B1DAEC20(a1, v15);
      if (v2)
      {

        objc_msgSend(*(id *)(a1 + v14), sel_unlock);
        return v13 & 1;
      }
      LOBYTE(v13) = v16;

    }
    else
    {
      sub_1B1DAAED0();
      v18 = sub_1B1F4388C();
      if (v19)
      {
        v20 = v18;
        swift_retain();
        v21 = sub_1B1FD568C((uint64_t)&type metadata for Hidden, (uint64_t)&off_1E63BB290, v20);
        swift_release();
        LOBYTE(v13) = !v21;
      }
      else
      {
        LOBYTE(v13) = *((_BYTE *)v15 + OBJC_IVAR____TtC3VFX9VFXEffect__enabled);
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    return v13 & 1;
  }
  v6 = *(_opaque_pthread_t **)(v5 + 144);
  v7 = a2;
  swift_retain();
  v8 = pthread_self();
  if (pthread_equal(v6, v8))
  {
    sub_1B1DAAED0();
    v9 = sub_1B1F4388C();
    if (v10)
    {
      v11 = v9;
      swift_retain();
      v12 = sub_1B1FD568C((uint64_t)&type metadata for Hidden, (uint64_t)&off_1E63BB290, v11);
      swift_release();
      LOBYTE(v13) = !v12;
    }
    else
    {
      LOBYTE(v13) = v7[OBJC_IVAR____TtC3VFX9VFXEffect__enabled];
    }
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v17 = v7;
    LOBYTE(v13) = sub_1B1E65758(v5, (uint64_t)v17);
    swift_release();

  }
  return v13 & 1;
}

uint64_t sub_1B1DAEE48(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  id v11;
  id v12;
  char *v13;
  _opaque_pthread_t *v14;
  uint64_t v15;
  unsigned int *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  char v24;
  id v25;
  char *v26;
  uint64_t v27;
  unsigned int *v28;
  unint64_t v29;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v8)
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v20 = a2;
    v21 = a3;
    v22 = v20;
    v23 = (char *)v21;
    objc_msgSend(v19, sel_lock);
    if (*(_QWORD *)(a1 + v7))
    {
      v22 = v22;
      v23 = v23;
      v24 = sub_1B1DAEE48(a1, v22, v23);
      if (v3)
      {

        objc_msgSend(*(id *)(a1 + v18), sel_unlock);
        goto LABEL_21;
      }
      LOBYTE(v19) = v24;

LABEL_20:
      objc_msgSend(*(id *)(a1 + v18), sel_unlock);

      goto LABEL_21;
    }
    sub_1B1DAAED0();
    v27 = *(_QWORD *)&v23[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_effect];
    if (v27)
    {
      v28 = (unsigned int *)(v27 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
      if (*((_BYTE *)v28 + 4) != 1)
      {
        v27 = *v28;
        v29 = (unint64_t)(v27 == 0) << 33;
        goto LABEL_19;
      }
      v27 = 0;
    }
    v29 = 0x200000000;
LABEL_19:
    LOBYTE(v19) = sub_1B1E727E4(v29 | v27);
    sub_1B1DACAE0(a1);
    goto LABEL_20;
  }
  v9 = *(_opaque_pthread_t **)(v8 + 144);
  v10 = a2;
  v11 = a3;
  v12 = v10;
  v13 = (char *)v11;
  swift_retain();
  v14 = pthread_self();
  if (pthread_equal(v9, v14))
  {
    sub_1B1DAAED0();
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC3VFX17VFXRendererLegacy_effect];
    if (v15)
    {
      v16 = (unsigned int *)(v15 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
      if (*((_BYTE *)v16 + 4) != 1)
      {
        v15 = *v16;
        v17 = (unint64_t)(v15 == 0) << 33;
        goto LABEL_16;
      }
      v15 = 0;
    }
    v17 = 0x200000000;
LABEL_16:
    LOBYTE(v19) = sub_1B1E727E4(v17 | v15);
    sub_1B1DACAE0(a1);

    swift_release();
    goto LABEL_21;
  }
  v25 = v12;
  v26 = v13;
  LOBYTE(v19) = sub_1B1E65874(v8, (uint64_t)v25, (uint64_t)v26);
  swift_release();

LABEL_21:
  return v19 & 1;
}

uint64_t sub_1B1DAF104(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  char *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v5)
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v13 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v15 = a2;
    objc_msgSend(v13, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v15 = v15;
      v16 = sub_1B1DAF104(a1, v15);
      if (v2)
      {

        objc_msgSend(*(id *)(a1 + v14), sel_unlock);
        return v13 & 1;
      }
      LOBYTE(v13) = v16;

    }
    else
    {
      sub_1B1DAAED0();
      v18 = *(unsigned int *)&v15[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v19 = *(unsigned int *)&v15[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      if ((_DWORD)v18 == -1 && (_DWORD)v19 == 0)
      {
        LOBYTE(v13) = 0;
      }
      else
      {
        v21 = v18 | (v19 << 32);
        swift_retain();
        LOBYTE(v13) = sub_1B1FD568C((uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1E6393C48, v21);
        swift_release();
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    return v13 & 1;
  }
  v6 = *(_opaque_pthread_t **)(v5 + 144);
  v7 = a2;
  swift_retain();
  v8 = pthread_self();
  if (pthread_equal(v6, v8))
  {
    sub_1B1DAAED0();
    v9 = *(unsigned int *)&v7[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
    v10 = *(unsigned int *)&v7[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
    if ((_DWORD)v9 == -1 && (_DWORD)v10 == 0)
    {
      LOBYTE(v13) = 0;
    }
    else
    {
      v12 = v9 | (v10 << 32);
      swift_retain();
      LOBYTE(v13) = sub_1B1FD568C((uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1E6393C48, v12);
      swift_release();
    }
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v17 = v7;
    LOBYTE(v13) = sub_1B1E659A4(v5, (uint64_t)v17);
    swift_release();

  }
  return v13 & 1;
}

uint64_t sub_1B1DAF33C(uint64_t a1, void *a2)
{
  return sub_1B1DAF36C(a1, a2, (uint64_t (*)(uint64_t, id))sub_1B1E65AC4, (void (*)(uint64_t *__return_ptr, id))sub_1B216A9DC, (uint64_t (*)(uint64_t, id))sub_1B1DAF33C) & 1;
}

uint64_t sub_1B1DAF36C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, id), void (*a4)(uint64_t *__return_ptr, id), uint64_t (*a5)(uint64_t, id))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v11;
  id v12;
  _opaque_pthread_t *v13;
  char v14;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  id v20;
  char v21;
  char v23;
  uint64_t v24;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v9)
  {
    v16 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v17 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v18 = a2;
    objc_msgSend(v17, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      v18 = v18;
      v19 = a5(a1, v18);
      if (v5)
      {

LABEL_13:
        objc_msgSend(*(id *)(a1 + v16), sel_unlock);

        return v14 & 1;
      }
      v23 = v19;

      LOBYTE(v24) = v23 & 1;
    }
    else
    {
      sub_1B1DAAED0();
      a4(&v24, v18);
      if (v5)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_13;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v16), sel_unlock);

    v14 = v24;
    return v14 & 1;
  }
  v11 = *(_opaque_pthread_t **)(v9 + 144);
  v12 = a2;
  swift_retain();
  v13 = pthread_self();
  if (pthread_equal(v11, v13))
  {
    sub_1B1DAAED0();
    a4(&v24, v12);
    sub_1B1DACAE0(a1);

    swift_release();
    if (!v5)
      v14 = v24;
  }
  else
  {
    v20 = v12;
    v21 = a3(v9, v20);
    swift_release();

    if (!v5)
    {
      LOBYTE(v24) = v21 & 1;
      v14 = v21 & 1;
    }
  }
  return v14 & 1;
}

uint64_t (*sub_1B1DAF564(uint64_t a1, void *a2))()
{
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  _QWORD *v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t (*v34)();

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(_QWORD **)(*(_QWORD *)&v8[OBJC_IVAR____TtC3VFX8VFXScene_entityManager]
                       + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
      if (v10)
      {
        swift_retain();
        swift_retain();
        v11 = sub_1B1D21D1C();
        v13 = v12;
        swift_release();
        swift_retain();
        v14 = sub_1B1D21D1C();
        v16 = v15;
        swift_release();
        swift_release();
        v10 = (_QWORD *)swift_allocObject();
        v10[2] = v11;
        v10[3] = v13;
        v10[4] = v14;
        v10[5] = v16;
        v17 = sub_1B1DB39E4;
      }
      else
      {
        v17 = (uint64_t (*)())nullsub_16;
      }
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v17;
      *(_QWORD *)(v24 + 24) = v10;
      sub_1B1DACAE0(a1);

      swift_release();
      return sub_1B1DB39F8;
    }
    else
    {
      v23 = v8;
      v3 = sub_1B1E65C08(v6, (uint64_t)v23);
      swift_release();

    }
  }
  else
  {
    v18 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v20 = a2;
    objc_msgSend(v19, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v21 = v20;
      v22 = sub_1B1DAF564(a1, v21);
      if (!v2)
        v3 = (uint64_t (*)())v22;

      objc_msgSend(*(id *)(a1 + v18), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v25 = *(_QWORD **)(*(_QWORD *)&v20[OBJC_IVAR____TtC3VFX8VFXScene_entityManager]
                       + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
      if (v25)
      {
        swift_retain();
        swift_retain();
        v34 = sub_1B1D21D1C();
        v27 = v26;
        swift_release();
        swift_retain();
        v28 = sub_1B1D21D1C();
        v30 = v29;
        swift_release();
        swift_release();
        v25 = (_QWORD *)swift_allocObject();
        v25[2] = v34;
        v25[3] = v27;
        v25[4] = v28;
        v25[5] = v30;
        v31 = sub_1B1DB39E4;
      }
      else
      {
        v31 = (uint64_t (*)())nullsub_16;
      }
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v31;
      *(_QWORD *)(v32 + 24) = v25;
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v18), sel_unlock);

      return sub_1B1DB39F8;
    }
  }
  return v3;
}

uint64_t (*sub_1B1DAF8B4(uint64_t a1, void *a2))()
{
  uint64_t v2;
  uint64_t (*v4)();
  uint64_t v5;
  _opaque_pthread_t *v6;
  char *v7;
  _opaque_pthread_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)();
  uint64_t (*v33)();

  v4 = (uint64_t (*)())OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      v9 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)&v7[OBJC_IVAR___VFXREScene_scene]
                                  + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                      + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
      if (v9)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        v32 = sub_1B1D21D1C();
        v30 = v10;
        swift_release();
        swift_retain();
        v11 = sub_1B1D21D1C();
        v13 = v12;
        swift_release();
        swift_release();
        v9 = (_QWORD *)swift_allocObject();
        v9[2] = v32;
        v9[3] = v30;
        v9[4] = v11;
        v9[5] = v13;
        swift_release();
        v14 = sub_1B1DB39E4;
      }
      else
      {
        v14 = (uint64_t (*)())nullsub_16;
      }
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v14;
      *(_QWORD *)(v21 + 24) = v9;
      sub_1B1DACAE0(a1);

      swift_release();
      return sub_1B1DB39F8;
    }
    else
    {
      v20 = v7;
      v4 = sub_1B1E65DC0(v5, (uint64_t)v20);
      swift_release();

    }
  }
  else
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)((char *)v4 + a1))
    {
      v18 = v17;
      v19 = sub_1B1DAF8B4(a1, v18);
      if (!v2)
        v4 = (uint64_t (*)())v19;

      objc_msgSend(*(id *)(a1 + v15), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v22 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR___VFXREScene_scene]
                                   + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                       + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
      if (v22)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        v33 = sub_1B1D21D1C();
        v31 = v23;
        swift_release();
        swift_retain();
        v24 = sub_1B1D21D1C();
        v26 = v25;
        swift_release();
        swift_release();
        v22 = (_QWORD *)swift_allocObject();
        v22[2] = v33;
        v22[3] = v31;
        v22[4] = v24;
        v22[5] = v26;
        swift_release();
        v27 = sub_1B1DB362C;
      }
      else
      {
        v27 = (uint64_t (*)())nullsub_16;
      }
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v27;
      *(_QWORD *)(v28 + 24) = v22;
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v15), sel_unlock);

      return sub_1B1CB734C;
    }
  }
  return v4;
}

void sub_1B1DAFC58(uint64_t a1, void *a2)
{
  sub_1B1DAFCB0(a1, a2, (uint64_t (*)(uint64_t, id))sub_1B1E65FA0, (void (*)(uint64_t *__return_ptr, id))sub_1B1DC1858, (uint64_t (*)(uint64_t, id))sub_1B1DAFC58);
}

void sub_1B1DAFC84(uint64_t a1, void *a2)
{
  sub_1B1DAFCB0(a1, a2, (uint64_t (*)(uint64_t, id))sub_1B1E65FBC, (void (*)(uint64_t *__return_ptr, id))sub_1B2167DC4, (uint64_t (*)(uint64_t, id))sub_1B1DAFC84);
}

void sub_1B1DAFCB0(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, id), void (*a4)(uint64_t *__return_ptr, id), uint64_t (*a5)(uint64_t, id))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v11;
  id v12;
  _opaque_pthread_t *v13;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v9)
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      v17 = v17;
      v18 = a5(a1, v17);
      if (v5)
      {

LABEL_11:
        objc_msgSend(*(id *)(a1 + v15), sel_unlock);

        return;
      }
      v24 = v18;
      v25 = v19;

      v26 = v24;
      v27 = v25;
    }
    else
    {
      sub_1B1DAAED0();
      a4(&v26, v17);
      if (v5)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_11;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock, v26, v27);

    return;
  }
  v11 = *(_opaque_pthread_t **)(v9 + 144);
  v12 = a2;
  swift_retain();
  v13 = pthread_self();
  if (pthread_equal(v11, v13))
  {
    sub_1B1DAAED0();
    a4(&v26, v12);
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v20 = v12;
    v21 = a3(v9, v20);
    v23 = v22;
    swift_release();

    if (!v5)
    {
      v26 = v21;
      v27 = v23;
    }
  }
}

uint64_t sub_1B1DAFE9C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _opaque_pthread_t *v9;
  id v10;
  id v11;
  id v12;
  _BYTE *v13;
  _opaque_pthread_t *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  _BYTE *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v36;

  v7 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v8)
  {
    v9 = *(_opaque_pthread_t **)(v8 + 144);
    v10 = a2;
    v11 = a3;
    swift_retain_n();
    v12 = v10;
    v13 = v11;
    swift_retain();
    v14 = pthread_self();
    if (pthread_equal(v9, v14))
    {
      sub_1B1DAAED0();
      v15 = v13[OBJC_IVAR___VFXREScene_isPrepared];
      v16 = swift_retain();
      v17 = sub_1B1CBCB84(v16, v15 ^ 1u, v15);
      swift_release();
      swift_retain();
      v18 = sub_1B1BF9004();
      swift_release();
      if (v18)
      {
        *(_BYTE *)(v18 + 16) = 1;
        swift_release();
      }
      swift_retain();
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v27 = v12;
      v28 = v13;
      swift_retain();
      v17 = sub_1B1E660F8(v8, (uint64_t)v27, (uint64_t)v28);
      swift_release();

      swift_release();
    }
  }
  else
  {
    v17 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v19 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v20 = a2;
    v21 = a3;
    swift_retain_n();
    v22 = v20;
    v23 = v21;
    objc_msgSend(v19, sel_lock);
    v33 = v17;
    if (*(_QWORD *)(a1 + v7))
    {
      v24 = v22;
      v25 = v23;
      swift_retain();
      v26 = sub_1B1DAFE9C(a1, v24, v25, a4);
      if (!v36)
        v17 = v26;

      swift_release();
      objc_msgSend(*(id *)(a1 + v33), sel_unlock);

    }
    else
    {
      sub_1B1DAAED0();
      v29 = *((_BYTE *)v23 + OBJC_IVAR___VFXREScene_isPrepared);
      v30 = swift_retain();
      v17 = sub_1B1CBCB84(v30, v29 ^ 1u, v29);
      swift_release();
      swift_retain();
      v31 = sub_1B1BF9004();
      swift_release();
      if (v31)
      {
        *(_BYTE *)(v31 + 16) = 1;
        swift_release();
      }
      swift_retain();
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v33), sel_unlock);

    }
  }

  swift_release_n();
  return v17;
}

uint64_t sub_1B1DB0284(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21[12];
  uint64_t v22[12];
  _QWORD v23[12];
  _QWORD v24[12];
  _OWORD v25[2];
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v6)
  {
    v12 = a3;
    v13 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v14 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v15 = a2;
    objc_msgSend(v14, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v15 = v15;
      v16 = sub_1B1DA4AE8(a1, v15, v12);
      if (v3)
      {
        objc_msgSend(*(id *)(a1 + v13), sel_unlock);

        return v12;
      }
      v12 = v16;
    }
    else
    {
      sub_1B1DAAED0();
      v18 = *(_QWORD *)(*(_QWORD *)&v15[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
      v19 = qword_1EEF57390;
      swift_retain();
      if (v19 != -1)
        swift_once();
      v27[0] = xmmword_1EEF5F4B0;
      v27[1] = unk_1EEF5F4C0;
      v28 = qword_1EEF5F4D0;
      sub_1B1E8FCE4(v18, (uint64_t)v27, 0x200000000, v22);
      sub_1B1A18378((uint64_t)v22, (uint64_t)v24, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
      if (v24[0])
      {
        v12 = v24[10];
        swift_release();
        sub_1B19ED748(v22);
      }
      else
      {
        swift_release();
        v12 = 0;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v13), sel_unlock);

    return v12;
  }
  v7 = *(_opaque_pthread_t **)(v6 + 144);
  v8 = a2;
  swift_retain();
  v9 = pthread_self();
  if (pthread_equal(v7, v9))
  {
    sub_1B1DAAED0();
    v10 = *(_QWORD *)(*(_QWORD *)&v8[OBJC_IVAR___VFXREScene_scene] + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
    v11 = qword_1EEF57390;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v25[0] = xmmword_1EEF5F4B0;
    v25[1] = unk_1EEF5F4C0;
    v26 = qword_1EEF5F4D0;
    sub_1B1E8FCE4(v10, (uint64_t)v25, 0x200000000, v21);
    sub_1B1A18378((uint64_t)v21, (uint64_t)v23, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (v23[0])
    {
      v12 = v23[10];
      swift_release();
      sub_1B19ED748(v21);
    }
    else
    {
      swift_release();
      v12 = 0;
    }
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v17 = v8;
    v12 = sub_1B1E66278(v6, (uint64_t)v17);
    swift_release();

  }
  return v12;
}

void sub_1B1DB05AC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  _opaque_pthread_t *v5;
  char *v6;
  _opaque_pthread_t *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19[32];
  char v20[32];

  v3 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v4)
  {
    v5 = *(_opaque_pthread_t **)(v4 + 144);
    v6 = a2;
    swift_retain();
    v7 = pthread_self();
    if (pthread_equal(v5, v7))
    {
      sub_1B1DAAED0();
      v8 = *(id *)&v6[OBJC_IVAR___VFXREScene_scene];
      v9 = swift_retain();
      sub_1B1F2165C(v9, (uint64_t)&v17);
      swift_release();
      sub_1B1A18378((uint64_t)&v17, (uint64_t)v19, &qword_1EEF58FA8, (uint64_t)&type metadata for AABB);

      sub_1B1DACAE0(a1);
      swift_release();
    }
    else
    {
      v14 = v6;
      sub_1B1E66420(v4, (uint64_t)v14);
      swift_release();

    }
  }
  else
  {
    v10 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v11 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v12 = a2;
    objc_msgSend(v11, sel_lock);
    if (*(_QWORD *)(a1 + v3))
    {
      v13 = v12;
      sub_1B1DB05AC(a1, v13);

      objc_msgSend(*(id *)(a1 + v10), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v15 = *(id *)&v12[OBJC_IVAR___VFXREScene_scene];
      v16 = swift_retain();
      sub_1B1F2165C(v16, (uint64_t)&v18);
      swift_release();
      sub_1B1A18378((uint64_t)&v18, (uint64_t)v20, &qword_1EEF58FA8, (uint64_t)&type metadata for AABB);

      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v10), sel_unlock);

    }
  }
}

uint64_t sub_1B1DB08F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  _opaque_pthread_t *v14;
  id v15;
  id v16;
  _opaque_pthread_t *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v28;

  v12 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v13)
  {
    v26 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v18 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v19 = a2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v20 = v19;
    objc_msgSend(v18, sel_lock);
    if (*(_QWORD *)(a1 + v12))
    {
      v20 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_1B1DB08F8(a1, v20, a3, a4, a5, a6);
      if (v6)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        objc_msgSend(*(id *)(a1 + v26), sel_unlock);
        swift_bridgeObjectRelease();

        goto LABEL_14;
      }
      v24 = v21;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v24;
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F45240((uint64_t)v20, a3, a4, a5, a6, &v28);
      if (v6)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_13;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v26), sel_unlock);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    goto LABEL_19;
  }
  v14 = *(_opaque_pthread_t **)(v13 + 144);
  v15 = a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v16 = v15;
  swift_retain();
  v17 = pthread_self();
  if (!pthread_equal(v14, v17))
  {
    v22 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1B1E665C4(v13, (uint64_t)v22, a3, a4, a5, a6);
    swift_release();

    if (v6)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v28 = v23;
LABEL_19:
    a4 = v28;
    swift_bridgeObjectRelease();
    return a4;
  }
  sub_1B1DAAED0();
  sub_1B1F45240((uint64_t)v16, a3, a4, a5, a6, &v28);
  if (!v6)
  {
    sub_1B1DACAE0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    swift_release();
    goto LABEL_19;
  }
  sub_1B1DACAE0(a1);
  swift_bridgeObjectRelease();

  swift_release();
LABEL_14:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_1B1DB0C40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  _opaque_pthread_t *v13;
  id v14;
  id v15;
  _opaque_pthread_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;

  v9 = a2;
  v11 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v12)
  {
    v17 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v18 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v19 = a2;
    swift_bridgeObjectRetain_n();
    v20 = v19;
    objc_msgSend(v18, sel_lock);
    if (*(_QWORD *)(a1 + v11))
    {
      v20 = v20;
      swift_bridgeObjectRetain();
      v21 = sub_1B1DB0C40(a1, v20, a3, a4, a5);
      if (v5)
      {

        swift_bridgeObjectRelease();
        objc_msgSend(*(id *)(a1 + v17), sel_unlock);
        swift_bridgeObjectRelease();

        v9 = a2;
        goto LABEL_11;
      }
      a4 = v21;

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F43C48();
      a4 = sub_1B1F4BC74(a3, 0, 0, a4, a5);
      swift_release();
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v17), sel_unlock);
    swift_bridgeObjectRelease();

    v9 = a2;
    goto LABEL_11;
  }
  v13 = *(_opaque_pthread_t **)(v12 + 144);
  v14 = a2;
  swift_bridgeObjectRetain_n();
  v15 = v14;
  swift_retain();
  v16 = pthread_self();
  if (pthread_equal(v13, v16))
  {
    sub_1B1DAAED0();
    sub_1B1F43C48();
    a4 = sub_1B1F4BC74(a3, 0, 0, a4, a5);
    swift_release();
    sub_1B1DACAE0(a1);
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    v22 = v15;
    swift_bridgeObjectRetain();
    a4 = sub_1B1E66718(v12, (uint64_t)v22, a3, a4, a5);
    swift_release();

    swift_bridgeObjectRelease_n();
  }
LABEL_11:
  swift_bridgeObjectRelease();

  return a4;
}

void sub_1B1DB0ECC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  id v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      sub_1B1F474F8((uint64_t)v7, &v16);
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v13 = v7;
      v14 = sub_1B1E66820(v5, (uint64_t)v13);
      swift_release();

      if (!v2)
        v16 = v14;
    }
  }
  else
  {
    v9 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v11 = a2;
    objc_msgSend(v10, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v11 = v11;
      v12 = sub_1B1DB0ECC(a1, v11);
      if (v2)
      {

      }
      else
      {
        v15 = v12;

        v16 = v15;
      }
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F474F8((uint64_t)v11, &v16);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v9), sel_unlock);

  }
}

void sub_1B1DB10A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _opaque_pthread_t *v11;
  id v12;
  id v13;
  _opaque_pthread_t *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v10)
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    swift_bridgeObjectRetain_n();
    v18 = v17;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v9))
    {
      v18 = v18;
      swift_bridgeObjectRetain();
      v19 = sub_1B1DB10A4(a1, v18, a3, a4);
      if (v4)
      {

        swift_bridgeObjectRelease();
LABEL_13:
        objc_msgSend(*(id *)(a1 + v15), sel_unlock);
        swift_bridgeObjectRelease();

        goto LABEL_14;
      }
      v22 = v19;

      swift_bridgeObjectRelease();
      v23 = v22;
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B1F47DE8((uint64_t)v18, a3, a4, &v23);
      if (v4)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_13;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock);
    swift_bridgeObjectRelease_n();

    return;
  }
  v11 = *(_opaque_pthread_t **)(v10 + 144);
  v12 = a2;
  swift_bridgeObjectRetain_n();
  v13 = v12;
  swift_retain();
  v14 = pthread_self();
  if (pthread_equal(v11, v14))
  {
    sub_1B1DAAED0();
    sub_1B1F47DE8((uint64_t)v13, a3, a4, &v23);
    if (!v4)
    {
      sub_1B1DACAE0(a1);
      swift_bridgeObjectRelease_n();

      swift_release();
      return;
    }
    sub_1B1DACAE0(a1);
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_14;
  }
  v20 = v13;
  swift_bridgeObjectRetain();
  v21 = sub_1B1E66934(v10, (uint64_t)v20, a3, a4);
  swift_release();

  if (v4)
  {
    swift_bridgeObjectRelease_n();
LABEL_14:
    swift_bridgeObjectRelease();

    return;
  }

  swift_bridgeObjectRelease_n();
  v23 = v21;
}

void sub_1B1DB1340(uint64_t a1, void *a2)
{
  sub_1B1DB13C4(a1, a2, (double (*)(uint64_t, id))sub_1B1E66A60, (void (*)(__int128 *__return_ptr, id))sub_1B2168688, (void (*)(uint64_t, id))sub_1B1DB1340);
}

void sub_1B1DB136C(uint64_t a1, void *a2)
{
  sub_1B1DB13C4(a1, a2, (double (*)(uint64_t, id))sub_1B1E66A7C, (void (*)(__int128 *__return_ptr, id))sub_1B2168CCC, (void (*)(uint64_t, id))sub_1B1DB136C);
}

void sub_1B1DB1398(uint64_t a1, void *a2)
{
  sub_1B1DB13C4(a1, a2, (double (*)(uint64_t, id))sub_1B1E66A98, (void (*)(__int128 *__return_ptr, id))sub_1B216A06C, (void (*)(uint64_t, id))sub_1B1DB1398);
}

void sub_1B1DB13C4(uint64_t a1, void *a2, double (*a3)(uint64_t, id), void (*a4)(__int128 *__return_ptr, id), void (*a5)(uint64_t, id))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v11;
  id v12;
  _opaque_pthread_t *v13;
  uint64_t v15;
  void *v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v9)
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      v17 = v17;
      a5(a1, v17);
      if (v5)
      {

LABEL_11:
        objc_msgSend(*(id *)(a1 + v15), sel_unlock);

        return;
      }
      v27 = v18;
      v29 = v19;
      v31 = v20;
      v33 = v21;

      v35 = v27;
      v36 = v29;
      v37 = v31;
      v38 = v33;
    }
    else
    {
      sub_1B1DAAED0();
      a4(&v35, v17);
      if (v5)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_11;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock, v27, v29, v31, v33);

    return;
  }
  v11 = *(_opaque_pthread_t **)(v9 + 144);
  v12 = a2;
  swift_retain();
  v13 = pthread_self();
  if (pthread_equal(v11, v13))
  {
    sub_1B1DAAED0();
    a4(&v35, v12);
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v22 = v12;
    *(double *)&v23 = a3(v9, v22);
    v32 = v24;
    v34 = v23;
    v28 = v26;
    v30 = v25;
    swift_release();

    if (!v5)
    {
      v35 = v34;
      v36 = v32;
      v37 = v30;
      v38 = v28;
    }
  }
}

void sub_1B1DB15DC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  id v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  __int128 v12;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v5)
  {
    v9 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v11 = a2;
    objc_msgSend(v10, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v11 = v11;
      sub_1B1DB15DC(a1, v11);
      if (v2)
      {

LABEL_11:
        objc_msgSend(*(id *)(a1 + v9), sel_unlock);

        return;
      }
      v15 = v12;

      v17 = v15;
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B2169164((uint64_t)v11, &v17);
      if (v2)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_11;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v9), sel_unlock, v15);

    return;
  }
  v6 = *(_opaque_pthread_t **)(v5 + 144);
  v7 = a2;
  swift_retain();
  v8 = pthread_self();
  if (pthread_equal(v6, v8))
  {
    sub_1B1DAAED0();
    sub_1B2169164((uint64_t)v7, &v17);
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v13 = v7;
    *(double *)&v14 = sub_1B1E66BD8(v5, (uint64_t)v13);
    v16 = v14;
    swift_release();

    if (!v2)
      v17 = v16;
  }
}

void sub_1B1DB17B8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  id v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  __int128 v12;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (!v5)
  {
    v9 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v11 = a2;
    objc_msgSend(v10, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v11 = v11;
      sub_1B1DB17B8(a1, v11);
      if (v2)
      {

LABEL_11:
        objc_msgSend(*(id *)(a1 + v9), sel_unlock);

        return;
      }
      v15 = v12;

      v17 = v15;
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B2169874((uint64_t)v11, &v17);
      if (v2)
      {
        sub_1B1DACAE0(a1);
        goto LABEL_11;
      }
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v9), sel_unlock, v15);

    return;
  }
  v6 = *(_opaque_pthread_t **)(v5 + 144);
  v7 = a2;
  swift_retain();
  v8 = pthread_self();
  if (pthread_equal(v6, v8))
  {
    sub_1B1DAAED0();
    sub_1B2169874((uint64_t)v7, &v17);
    sub_1B1DACAE0(a1);

    swift_release();
  }
  else
  {
    v13 = v7;
    *(double *)&v14 = sub_1B1E66CF4(v5, (uint64_t)v13);
    v16 = v14;
    swift_release();

    if (!v2)
      v17 = v16;
  }
}

float sub_1B1DB1994(uint64_t a1, void *a2)
{
  uint64_t v2;
  float v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  float v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v25[2];
  char v26;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, v25);
        swift_release();
        if (v26 != 2)
          v3 = (float)(*(float *)v25 * 180.0) / 3.1416;
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E66E10(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB1994(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, v25);
        swift_release();
        if (v26 != 2)
          v3 = (float)(*(float *)v25 * 180.0) / 3.1416;
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return v3;
}

float sub_1B1DB1C1C(uint64_t a1, void *a2)
{
  uint64_t v2;
  float v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  float v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v25[2];
  char v26;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, v25);
        swift_release();
        if (v26 == 2)
          v3 = 0.0;
        else
          v3 = *((float *)v25 + 1);
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E66F58(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB1C1C(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, v25);
        swift_release();
        if (v26 == 2)
          v3 = 0.0;
        else
          v3 = *((float *)v25 + 1);
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return v3;
}

float sub_1B1DB1E74(uint64_t a1, void *a2)
{
  uint64_t v2;
  float v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  float v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v25[2];
  char v26;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, v25);
        swift_release();
        if (v26 == 2)
          v3 = 0.0;
        else
          v3 = *((float *)v25 + 2);
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E67090(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB1E74(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, v25);
        swift_release();
        if (v26 == 2)
          v3 = 0.0;
        else
          v3 = *((float *)v25 + 2);
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return v3;
}

float sub_1B1DB20CC(uint64_t a1, void *a2)
{
  uint64_t v2;
  float v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  float v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v25[2];
  char v26;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, v25);
        swift_release();
        if (v26 == 2)
          v3 = 0.0;
        else
          v3 = *((float *)v25 + 3);
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E671C8(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB20CC(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, v25);
        swift_release();
        if (v26 == 2)
          v3 = 0.0;
        else
          v3 = *((float *)v25 + 3);
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return v3;
}

float sub_1B1DB2324(uint64_t a1, void *a2)
{
  uint64_t v2;
  float v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  float v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v25;
  float v26;
  char v27;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, &v25);
        swift_release();
        if (v27 == 2)
          v3 = 0.0;
        else
          v3 = v26;
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E67300(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB2324(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, &v25);
        swift_release();
        if (v27 == 2)
          v3 = 0.0;
        else
          v3 = v26;
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return v3;
}

float sub_1B1DB257C(uint64_t a1, void *a2)
{
  uint64_t v2;
  float v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  float v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v25;
  float v26;
  char v27;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, &v25);
        swift_release();
        if (v27 == 2)
          v3 = 0.0;
        else
          v3 = v26;
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E67438(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB257C(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, &v25);
        swift_release();
        if (v27 == 2)
          v3 = 0.0;
        else
          v3 = v26;
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return v3;
}

float sub_1B1DB27D4(uint64_t a1, void *a2)
{
  uint64_t v2;
  float v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  float v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v25;
  float v26;
  char v27;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, &v25);
        swift_release();
        if (v27 != 2)
          v3 = *((float *)&v25 + 3) / v26;
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E67570(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB27D4(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0.0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, &v25);
        swift_release();
        if (v27 != 2)
          v3 = *((float *)&v25 + 3) / v26;
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return v3;
}

void sub_1B1DB2A2C(uint64_t a1, void *a2)
{
  sub_1B1DB2AB0(a1, a2, (float (*)(uint64_t, id))sub_1B1E676A0, (void (*)(uint64_t *__return_ptr, id))sub_1B216A474, (void (*)(uint64_t, id))sub_1B1DB2A2C);
}

void sub_1B1DB2A58(uint64_t a1, void *a2)
{
  sub_1B1DB2AB0(a1, a2, (float (*)(uint64_t, id))sub_1B1E676BC, (void (*)(uint64_t *__return_ptr, id))sub_1B216A590, (void (*)(uint64_t, id))sub_1B1DB2A58);
}

void sub_1B1DB2A84(uint64_t a1, void *a2)
{
  sub_1B1DB2AB0(a1, a2, (float (*)(uint64_t, id))sub_1B1E676D8, (void (*)(uint64_t *__return_ptr, id))sub_1B216A7BC, (void (*)(uint64_t, id))sub_1B1DB2A84);
}

void sub_1B1DB2AB0(uint64_t a1, void *a2, float (*a3)(uint64_t, id), void (*a4)(uint64_t *__return_ptr, id), void (*a5)(uint64_t, id))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _opaque_pthread_t *v11;
  id v12;
  _opaque_pthread_t *v13;
  uint64_t v15;
  void *v16;
  id v17;
  int v18;
  id v19;
  float v20;
  int v21;
  uint64_t v22;

  v8 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v9)
  {
    v11 = *(_opaque_pthread_t **)(v9 + 144);
    v12 = a2;
    swift_retain();
    v13 = pthread_self();
    if (pthread_equal(v11, v13))
    {
      sub_1B1DAAED0();
      a4(&v22, v12);
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v12;
      v20 = a3(v9, v19);
      swift_release();

      if (!v5)
        *(float *)&v22 = v20;
    }
  }
  else
  {
    v15 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v16 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v17 = a2;
    objc_msgSend(v16, sel_lock);
    if (*(_QWORD *)(a1 + v8))
    {
      v17 = v17;
      a5(a1, v17);
      if (v5)
      {

      }
      else
      {
        v21 = v18;

        LODWORD(v22) = v21;
      }
    }
    else
    {
      sub_1B1DAAED0();
      a4(&v22, v17);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v15), sel_unlock);

  }
}

double sub_1B1DB2C98(uint64_t a1, void *a2)
{
  uint64_t v2;
  int8x8_t v3;
  uint64_t v5;
  uint64_t v6;
  _opaque_pthread_t *v7;
  char *v8;
  _opaque_pthread_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  int8x8_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v25[2];
  unsigned __int8 v26;
  int8x8_t v27;

  v5 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v6)
  {
    v7 = *(_opaque_pthread_t **)(v6 + 144);
    v8 = a2;
    swift_retain();
    v9 = pthread_self();
    if (pthread_equal(v7, v9))
    {
      sub_1B1DAAED0();
      v10 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v11 = *(unsigned int *)&v8[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0;
      if ((_DWORD)v10 != -1 || (_DWORD)v11 != 0)
      {
        v13 = v10 | (v11 << 32);
        swift_retain();
        sub_1B1D178C4(v13, v25);
        swift_release();
        v3 = vbic_s8(v27, (int8x8_t)vceqd_s64(v26, 2));
      }
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v19 = v8;
      v3 = sub_1B1E67814(v6, (uint64_t)v19);
      swift_release();

    }
  }
  else
  {
    v14 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v15 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v16 = a2;
    objc_msgSend(v15, sel_lock);
    if (*(_QWORD *)(a1 + v5))
    {
      v17 = v16;
      sub_1B1DB2C98(a1, v17);
      if (!v2)
        v3 = v18;

      objc_msgSend(*(id *)(a1 + v14), sel_unlock);
    }
    else
    {
      sub_1B1DAAED0();
      v20 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
      v21 = *(unsigned int *)&v16[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance + 4];
      v3 = 0;
      if ((_DWORD)v20 != -1 || (_DWORD)v21 != 0)
      {
        v23 = v20 | (v21 << 32);
        swift_retain();
        sub_1B1D178C4(v23, v25);
        swift_release();
        v3 = vbic_s8(v27, (int8x8_t)vceqd_s64(v26, 2));
      }
      sub_1B1DACAE0(a1);
      objc_msgSend(*(id *)(a1 + v14), sel_unlock);

    }
  }
  return *(double *)&v3;
}

void sub_1B1DB2F00(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  char *v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;
  char *v13;
  char v14;
  char v15;
  char v16;

  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
  if (v5)
  {
    v6 = *(_opaque_pthread_t **)(v5 + 144);
    v7 = a2;
    swift_retain();
    v8 = pthread_self();
    if (pthread_equal(v6, v8))
    {
      sub_1B1DAAED0();
      sub_1B216ABDC(v7, &v16);
      sub_1B1DACAE0(a1);

      swift_release();
    }
    else
    {
      v13 = v7;
      v14 = sub_1B1E67954(v5, v13);
      swift_release();

      if (!v2)
        v16 = v14;
    }
  }
  else
  {
    v9 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
    v10 = *(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock);
    v11 = a2;
    objc_msgSend(v10, sel_lock);
    if (*(_QWORD *)(a1 + v4))
    {
      v11 = v11;
      v12 = sub_1B1DB2F00(a1, v11);
      if (v2)
      {

      }
      else
      {
        v15 = v12;

        v16 = v15;
      }
    }
    else
    {
      sub_1B1DAAED0();
      sub_1B216ABDC((char *)v11, &v16);
      sub_1B1DACAE0(a1);
    }
    objc_msgSend(*(id *)(a1 + v9), sel_unlock);

  }
}

uint64_t type metadata accessor for EntityManagerActor()
{
  return objc_opt_self();
}

uint64_t sub_1B1DB30F8()
{
  return type metadata accessor for EntityManager();
}

uint64_t type metadata accessor for EntityManager()
{
  uint64_t result;

  result = qword_1ED4B7788;
  if (!qword_1ED4B7788)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B1DB313C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B2228380();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ScriptingConfiguration();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EntityManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B1DB334C + 4 * byte_1B2294DD5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B1DB3380 + 4 * byte_1B2294DD0[v4]))();
}

uint64_t sub_1B1DB3380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1DB3388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1DB3390);
  return result;
}

uint64_t sub_1B1DB339C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1DB33A4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B1DB33A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1DB33B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntityManager.State()
{
  return &type metadata for EntityManager.State;
}

ValueMetadata *type metadata accessor for EntityManager.ActiveState()
{
  return &type metadata for EntityManager.ActiveState;
}

ValueMetadata *type metadata accessor for EntityManager.EntityEntry()
{
  return &type metadata for EntityManager.EntityEntry;
}

unint64_t sub_1B1DB33F0()
{
  unint64_t result;

  result = qword_1EEF5E7E0;
  if (!qword_1EEF5E7E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295068, &type metadata for EntityManager.State);
    atomic_store(result, (unint64_t *)&qword_1EEF5E7E0);
  }
  return result;
}

BOOL sub_1B1DB3434(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1DA8C10(a1, *(_QWORD **)(v1 + 16));
}

void sub_1B1DB3450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5E7F0)
  {
    sub_1B1A02758(255, &qword_1ED4B7A18, (uint64_t)&type metadata for ChunksStorage.FilteredChunk, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEC708]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5E7F0);
  }
}

uint64_t sub_1B1DB34BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1C79110(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1B1DB3500(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1ED4BAFC8, (uint64_t (*)(uint64_t))sub_1B1DB351C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1B1DB351C(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1ED4BB138, (uint64_t (*)(uint64_t))sub_1B1DB3538, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1B1DB3538(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1ED4BB130, (uint64_t (*)(uint64_t))type metadata accessor for EntityClass, MEMORY[0x1E0DEE958]);
}

void sub_1B1DB3554(uint64_t a1)
{
  sub_1B1791524(a1, (unint64_t *)&unk_1ED4BAFD0, (uint64_t (*)(uint64_t))sub_1B1DB3570, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1B1DB3570(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1ED4BB148, (uint64_t (*)(uint64_t))sub_1B1DB358C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1B1DB358C(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1ED4BB140, (uint64_t (*)(uint64_t))type metadata accessor for ComponentsDataChunk, MEMORY[0x1E0DEE958]);
}

uint64_t sub_1B1DB35A8(uint64_t a1)
{
  return sub_1B1DB35BC(a1);
}

uint64_t sub_1B1DB35BC(uint64_t a1)
{
  uint64_t v1;
  __int16 v2;

  if (*(_BYTE *)(v1 + 25))
    v2 = 256;
  else
    v2 = 0;
  return sub_1B1E139F8(a1, v2 | *(unsigned __int8 *)(v1 + 24), *(float *)(v1 + 16), *(float *)(v1 + 20));
}

double sub_1B1DB35EC(uint64_t a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1B1E4A084(a1, *(_QWORD *)(v1 + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1B1DB3604()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1DB362C()
{
  uint64_t v0;

  return sub_1B20947CC(*(uint64_t (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

void sub_1B1DB363C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BA7F0)
  {
    sub_1B1B995B8();
    v0 = sub_1B2229394();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BA7F0);
  }
}

void sub_1B1DB3694()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5E7F8)
  {
    v0 = sub_1B2229640();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5E7F8);
  }
}

uint64_t sub_1B1DB36F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1DC1C34(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B1DB3700(const void *a1)
{
  uint64_t v1;

  return sub_1B1C04C6C(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1B1DB3720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EEF5E800)
  {
    v4 = type metadata accessor for ComponentWriter(0, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EEF5E800);
  }
}

uint64_t sub_1B1DB377C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1DB38A0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B1DB38D4(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1ED4BA4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1B1DB38F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1C79110(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for GroupSet()
{
  return &type metadata for GroupSet;
}

unint64_t sub_1B1DB3948()
{
  unint64_t result;

  result = qword_1EEF5E808;
  if (!qword_1EEF5E808)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22950D4, &type metadata for GroupSet);
    atomic_store(result, (unint64_t *)&qword_1EEF5E808);
  }
  return result;
}

unint64_t sub_1B1DB3990()
{
  unint64_t result;

  result = qword_1EEF5E810;
  if (!qword_1EEF5E810)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22951A4, &type metadata for GroupSet.Iterator);
    atomic_store(result, (unint64_t *)&qword_1EEF5E810);
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupSet.Iterator()
{
  return &type metadata for GroupSet.Iterator;
}

double sub_1B1DB39FC(uint64_t a1)
{
  return sub_1B1DB35EC(a1);
}

void sub_1B1DB3A10(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB3A54()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB3AD0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB3B08()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB3BFC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB3C40()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB3CEC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB3D34()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB3DD4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB3E0C()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB3EB0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB3EE8()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB3F5C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB3FA4()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4094(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB40D0()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4180(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB41B8()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4280(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB42C0()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4380(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB43B8()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4450(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4498()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4580(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB45C8()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4624(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB466C()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4750(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4798()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DB4880()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4900(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4948()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1DB4A2C(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4A7C()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB4B0C(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4B58()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB4C10(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4C60()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB4D10(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4D60()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB4E20(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4E64()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB4F24(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB4F78()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB502C(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5070()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DB5128()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB51BC(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5200()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB528C(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB52D4()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5398(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB53E8()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5478(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB54BC()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5560(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB55A4()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5680(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB56C4()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5748(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5794()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5868(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB58AC()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DB5958()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB59D8(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5A24()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5AA8(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5AFC()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5B6C(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5BC0()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5CBC(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5D14()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5D84(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5DC8()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5E98(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5EE0()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB5F84(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB5FD0()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB6040(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB6084()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB6114(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB6158()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DB61D0()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DB6250()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB62F4(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB6338()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB63E8(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB643C()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB6534(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB6584()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

void sub_1B1DB65EC(uint64_t a1, char a2)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DB6640()
{
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DB6708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A72294);
}

uint64_t sub_1B1DB6730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A72380);
}

uint64_t sub_1B1DB675C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A7246C);
}

uint64_t sub_1B1DB6794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A72558);
}

uint64_t sub_1B1DB67C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8A48(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9C60);
}

uint64_t sub_1B1DB6800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8A48(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9CD0);
}

uint64_t sub_1B1DB6834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9D40);
}

uint64_t sub_1B1DB6868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9DB0);
}

uint64_t sub_1B1DB689C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB844C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9E20);
}

uint64_t sub_1B1DB68D4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EB9E90(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 24, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB6A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8088(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA120);
}

uint64_t sub_1B1DB6AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8088(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB998C);
}

uint64_t sub_1B1DB6AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A74234);
}

uint64_t sub_1B1DB6B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A7425C);
}

uint64_t sub_1B1DB6B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A73078);
}

uint64_t sub_1B1DB6B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A72CE0);
}

uint64_t sub_1B1DB6BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8088(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB99FC);
}

uint64_t sub_1B1DB6BF4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EB9B80(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 656, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB6DA0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EBA4B8(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 144, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB6F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8628(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA598);
}

uint64_t sub_1B1DB6F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8088(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA608);
}

uint64_t sub_1B1DB6FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA678);
}

uint64_t sub_1B1DB6FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA8E4);
}

uint64_t sub_1B1DB700C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A743BC);
}

uint64_t sub_1B1DB7040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA944);
}

uint64_t sub_1B1DB7074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A744F8);
}

uint64_t sub_1B1DB70A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAB1C);
}

uint64_t sub_1B1DB70DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A74530);
}

uint64_t sub_1B1DB7110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAB7C);
}

uint64_t sub_1B1DB7144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A74568);
}

uint64_t sub_1B1DB7178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBABDC);
}

uint64_t sub_1B1DB71AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A745A0);
}

uint64_t sub_1B1DB71E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAC3C);
}

uint64_t sub_1B1DB7214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A745D8);
}

uint64_t sub_1B1DB7248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAC9C);
}

uint64_t sub_1B1DB727C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A74384);
}

uint64_t sub_1B1DB72B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBACFC);
}

uint64_t sub_1B1DB72E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB7318(a1, a2, a3, (uint64_t (*)(void))sub_1B1A74610);
}

uint64_t sub_1B1DB7318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;

  result = a4();
  if (!v4 && (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB743C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EBAD5C(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 248, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB75E8(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EBADCC(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 16, a2, a3, v3, a1), !v4)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB779C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB826C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAED8);
}

uint64_t sub_1B1DB77C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB77F4(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAFD8);
}

uint64_t sub_1B1DB77F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 16, a2, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB799C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8838(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB048);
}

uint64_t sub_1B1DB79CC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EBB0B8(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 80, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB7B6C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EBB128(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 48, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB7D0C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EBB198(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 20, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB7EAC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v5 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = sub_1B1EBB208(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 32, a2, a3, v3, a1), !v4)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB8054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8088(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB364);
}

uint64_t sub_1B1DB8088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 8, a2, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB8230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB826C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9A6C);
}

uint64_t sub_1B1DB826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 8, a2, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB841C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB844C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB56C);
}

uint64_t sub_1B1DB844C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 4, a2, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB85F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8628(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB72C);
}

uint64_t sub_1B1DB8628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 32, a2, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB87D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8838(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB79C);
}

uint64_t sub_1B1DB8804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8838(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB80C);
}

uint64_t sub_1B1DB8838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 40, a2, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB89E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8A48(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB87C);
}

uint64_t sub_1B1DB8A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DB8A48(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB8EC);
}

uint64_t sub_1B1DB8A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v6 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (result = a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v6 + 12 * (int)a1 + 4), 64, a2, a3), !v5)&& (result & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1DB8BF0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23[8];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE v27[32];
  _BYTE v28[32];
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1B202AFE8(0, v1, 0);
    v2 = v30;
    v4 = sub_1B1C0754C(a1);
    v5 = 0;
    v22 = a1 + 64;
    do
    {
      v6 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v4);
      v24 = 0;
      swift_unknownObjectWeakInit();
      v24 = 0;
      swift_unknownObjectWeakAssign();
      v25 = v8;
      v26 = v7;
      sub_1B19FC2D0((uint64_t)v23, (uint64_t)v27);
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain();
      swift_getObjectType();
      v10 = swift_conformsToProtocol2();
      if (v10)
        v11 = v10;
      else
        v11 = 0;
      if (v10)
        v12 = v9;
      else
        v12 = 0;
      sub_1B1A00060((uint64_t)v27, (uint64_t)v28);
      v24 = 0;
      swift_unknownObjectWeakInit();
      if (v12)
      {
        v24 = v11;
        swift_unknownObjectWeakAssign();
        ObjectType = swift_getObjectType();
        v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11);
        v26 = v14;
      }
      else
      {
        v24 = 0;
        swift_unknownObjectWeakAssign();
        v25 = 0x3E6C6C756E3CLL;
        v26 = 0xE600000000000000;
      }
      sub_1B19FC2D0((uint64_t)v23, (uint64_t)&v29);
      sub_1B19FC350((uint64_t)v27);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v2;
      v16 = *(_QWORD *)(v2 + 16);
      v15 = *(_QWORD *)(v2 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1B202AFE8(v15 > 1, v16 + 1, 1);
        v2 = v30;
      }
      *(_QWORD *)(v2 + 16) = v16 + 1;
      sub_1B1A025EC((uint64_t)v28, v2 + (v16 << 6) + 32, (uint64_t (*)(_QWORD))sub_1B1DCC268);
      v17 = v4 >> 6;
      if ((*(_QWORD *)(v22 + 8 * (v4 >> 6)) & (-2 << v4)) != 0)
      {
        v4 = __clz(__rbit64(*(_QWORD *)(v22 + 8 * (v4 >> 6)) & (-2 << v4))) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v4 = 1 << *(_BYTE *)(a1 + 32);
        v18 = v17 + 1;
        v19 = (v4 + 63) >> 6;
        if (v17 + 1 < v19)
        {
          v20 = *(_QWORD *)(v22 + 8 * v18);
          if (!v20)
          {
            v18 = v17 + 2;
            if (v17 + 2 >= v19)
              goto LABEL_4;
            v20 = *(_QWORD *)(v22 + 8 * v18);
            if (!v20)
            {
              while (v19 - 3 != v17)
              {
                v20 = *(_QWORD *)(a1 + 88 + 8 * v17++);
                if (v20)
                {
                  v18 = v17 + 2;
                  goto LABEL_19;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_19:
          v4 = __clz(__rbit64(v20)) + (v18 << 6);
        }
      }
LABEL_4:
      ++v5;
    }
    while (v5 != v1);
  }
  return v2;
}

uint64_t sub_1B1DB8EB4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *i;
  BOOL v11;

  v3 = a3[2];
  if (v3)
  {
    v7 = a3[4] == a1 && a3[5] == a2;
    if (v7 || (sub_1B2229D24() & 1) != 0)
      return 1;
    v9 = v3 - 1;
    if (v9)
    {
      for (i = a3 + 7; ; i += 2)
      {
        v11 = *(i - 1) == a1 && *i == a2;
        if (v11 || (sub_1B2229D24() & 1) != 0)
          break;
        result = 0;
        if (!--v9)
          return result;
      }
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B1DB8F5C(int64x2_t *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *i;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  for (i = (_QWORD *)(a2 + 120);
        *((_DWORD *)i - 22) != a1->i32[0]
     || *(i - 10) != a1->i64[1]
     || (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(i - 9), a1[1]), (int32x4_t)vceqq_s64(*(int64x2_t *)(i - 7), a1[2])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(i - 5), a1[3]), (int32x4_t)vceqq_s64(*(int64x2_t *)(i - 3), a1[4])))), 7uLL))) & 1) == 0|| *(i - 1) != a1[5].i64[0]|| *i != a1[5].i64[1];
        i += 12)
  {
    if (!--v2)
      return 0;
  }
  return 1;
}

uint64_t sub_1B1DB9018(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v11;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v6 = *(_QWORD **)(a2 + 8 * v5 + 32);
    swift_retain();
    v7 = sub_1B2229304();
    result = swift_conformsToProtocol2();
    if (!result)
      break;
    v9 = sub_1B2229304();
    result = swift_conformsToProtocol2();
    if (!result)
      goto LABEL_19;
    if (v7 == v9 && v6[5] == a1[5])
    {
      if (v6[2] == a1[2] && v6[3] == a1[3])
      {
        swift_bridgeObjectRelease();
        swift_release();
        return 1;
      }
      v11 = sub_1B2229D24();
      swift_release();
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
      swift_release();
    }
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1B1DB9154(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  char v13;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1B22296AC();
    if (!v3)
      goto LABEL_12;
  }
  else
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_12;
  }
  v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
    v5 = (id)MEMORY[0x1B5E21018](0, a2);
  else
    v5 = *(id *)(a2 + 32);
  v6 = v5;
  type metadata accessor for VFXEntityObject();
  v7 = sub_1B222901C();

  if ((v7 & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return 1;
  }
  v9 = v3 - 1;
  if (v3 != 1)
  {
    if (v4)
    {
      v10 = 1;
      while (1)
      {
        MEMORY[0x1B5E21018](v10, a2);
        v11 = sub_1B222901C();
        swift_unknownObjectRelease();
        if ((v11 & 1) != 0)
          break;
        if (v3 == ++v10)
          goto LABEL_12;
      }
    }
    else
    {
      while (1)
      {
        v12 = *(id *)(a2 + 8 * v4 + 40);
        v13 = sub_1B222901C();

        if ((v13 & 1) != 0)
          break;
        if (v9 == ++v4)
          goto LABEL_12;
      }
    }
    goto LABEL_6;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B1DB92AC(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1B1DB99B0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1B2229D24() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_1B2229D24();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

unint64_t sub_1B1DB9A94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_1B2228950() != a1 || v9 != a2)
  {
    v10 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_1B222883C();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B1DB9B80(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v6;

  if (a2 == a3)
  {
    return 0;
  }
  else
  {
    v4 = a2;
    if (*(unsigned __int8 *)(a4 + a2) == a1)
    {
      return a2;
    }
    else
    {
      while (a3 - 1 != v4)
      {
        v6 = *(unsigned __int8 *)(a4 + 1 + v4++);
        if (v6 == a1)
          return v4;
      }
      return 0;
    }
  }
}

uint64_t sub_1B1DB9BE8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  char v11;

  if (!(a2 >> 62))
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return 0;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1B22296AC();
  swift_bridgeObjectRelease();
  if (!v3)
    return 0;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
    v4 = (id)MEMORY[0x1B5E21018](0, a2);
  else
    v4 = *(id *)(a2 + 32);
  v5 = v4;
  type metadata accessor for VFXEntityObject();
  v6 = sub_1B222901C();

  if ((v6 & 1) != 0)
    return 0;
  v8 = 0;
  while (v3 - 1 != v8)
  {
    v7 = v8 + 1;
    if ((a2 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x1B5E21018](v8 + 1, a2);
    else
      v9 = *(id *)(a2 + 8 * v8 + 40);
    v10 = v9;
    v11 = sub_1B222901C();

    v8 = v7;
    if ((v11 & 1) != 0)
      return v7;
  }
  return 0;
}

void sub_1B1DB9D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X9 }
}

uint64_t sub_1B1DB9D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  int v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t))((char *)sub_1B1DB9E0C + 4 * byte_1B229533F[v9]))(a1, a2, a3, a4, a5, a6, a7, a8, v8 >> 8, v8 >> 16, v8 >> 24, HIDWORD(v8), v8 >> 40);
}

uint64_t sub_1B1DB9E0C()
{
  uint64_t v0;
  char v1;
  char v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  if (v0 == v21)
    return 0;
  if (v4)
  {
    v6 = sub_1B2227E4C();
    v7 = v6 - sub_1B2227E70();
  }
  else
  {
    *(_BYTE *)(v5 - 102) = v2;
    *(_BYTE *)(v5 - 101) = v9;
    *(_BYTE *)(v5 - 100) = v10;
    *(_BYTE *)(v5 - 99) = v11;
    *(_BYTE *)(v5 - 98) = v12;
    *(_BYTE *)(v5 - 97) = v13;
    *(_BYTE *)(v5 - 96) = v14;
    *(_BYTE *)(v5 - 95) = v15;
    *(_BYTE *)(v5 - 94) = v1;
    *(_BYTE *)(v5 - 93) = v16;
    *(_BYTE *)(v5 - 92) = v17;
    *(_BYTE *)(v5 - 91) = v18;
    *(_BYTE *)(v5 - 90) = v19;
    *(_BYTE *)(v5 - 89) = v20;
    v7 = v5 - 102;
  }
  if (*(unsigned __int8 *)(v7 + v0) != v3)
    JUMPOUT(0x1B1DB9DF0);
  return v0;
}

uint64_t sub_1B1DB9F14(uint64_t a1)
{
  char **v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1B1FFED2C((uint64_t)v3);
  v4 = *((_QWORD *)v3 + 2) - 1;
  v5 = v4 - a1;
  if (v4 - a1 < 0)
  {
    result = sub_1B2229700();
    __break(1u);
  }
  else
  {
    v6 = &v3[4 * a1];
    v7 = *((unsigned int *)v6 + 8);
    memmove(v6 + 32, v6 + 36, 4 * v5);
    *((_QWORD *)v3 + 2) = v4;
    *v1 = v3;
    return v7;
  }
  return result;
}

uint64_t sub_1B1DB9FD8(uint64_t a1)
{
  char **v1;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1B1FFECC8((uint64_t)v3);
  v4 = *((_QWORD *)v3 + 2) - 1;
  if (v4 - a1 < 0)
  {
    result = sub_1B2229700();
    __break(1u);
  }
  else
  {
    v5 = &v3[24 * a1];
    v6 = *((_QWORD *)v5 + 4);
    memmove(v5 + 32, v5 + 56, 24 * (v4 - a1));
    *((_QWORD *)v3 + 2) = v4;
    *v1 = v3;
    return v6;
  }
  return result;
}

uint64_t sub_1B1DBA0D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
    sub_1B1FFEE30(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16) - 1;
  v7 = v6 - a1;
  if (v6 - a1 < 0)
  {
    result = sub_1B2229700();
    __break(1u);
  }
  else
  {
    v8 = v5 + 8 * a1;
    v9 = *(_QWORD *)(v8 + 32);
    memmove((void *)(v8 + 32), (const void *)(v8 + 40), 8 * v7);
    *(_QWORD *)(v5 + 16) = v6;
    sub_1B2228AD0();
    return v9;
  }
  return result;
}

uint64_t sub_1B1DBA1A8(uint64_t a1)
{
  return sub_1B1DBA354(a1, (uint64_t (*)(uint64_t))sub_1B1FFEE30);
}

uint64_t sub_1B1DBA1B4(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1B1FFEE70(v3);
  v4 = v3[2] - 1;
  v5 = v4 - a1;
  if (v4 - a1 < 0)
  {
    result = sub_1B2229700();
    __break(1u);
  }
  else
  {
    v6 = &v3[2 * a1];
    v7 = v6[4];
    memmove(v6 + 4, v6 + 6, 16 * v5);
    v3[2] = v4;
    *v1 = v3;
    return v7;
  }
  return result;
}

uint64_t sub_1B1DBA284(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1B1FFEEC0(v3);
  v4 = v3[2] - 1;
  v5 = v4 - a1;
  if (v4 - a1 < 0)
  {
    result = sub_1B2229700();
    __break(1u);
  }
  else
  {
    v6 = &v3[2 * a1];
    v7 = v6[4];
    memmove(v6 + 4, v6 + 6, 16 * v5);
    v3[2] = v4;
    *v1 = v3;
    return v7;
  }
  return result;
}

uint64_t sub_1B1DBA354(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v5 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v5 = a2(v5);
    *v2 = v5;
  }
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 16) - 1;
  v9 = v8 - a1;
  if (v8 - a1 < 0)
  {
    result = sub_1B2229700();
    __break(1u);
  }
  else
  {
    v10 = v7 + 8 * a1;
    v11 = *(_QWORD *)(v10 + 32);
    memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
    *(_QWORD *)(v7 + 16) = v8;
    sub_1B2228AD0();
    return v11;
  }
  return result;
}

uint64_t sub_1B1DBA42C(uint64_t a1)
{
  char **v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1B1FFEDA4((uint64_t)v3);
  v4 = *((_QWORD *)v3 + 2) - 1;
  v5 = v4 - a1;
  if (v4 - a1 < 0)
  {
    result = sub_1B2229700();
    __break(1u);
  }
  else
  {
    v6 = &v3[8 * a1];
    v7 = *((_QWORD *)v6 + 4);
    memmove(v6 + 32, v6 + 40, 8 * v5);
    *((_QWORD *)v3 + 2) = v4;
    *v1 = v3;
    return v7;
  }
  return result;
}

double sub_1B1DBA4F0()
{
  uint64_t v0;
  double result;

  sub_1B1DCBF30(0, (unint64_t *)&qword_1ED4BAD80, (unint64_t *)&qword_1ED4B8C90, (unint64_t *)&qword_1ED4B8C70);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 24;
  *(_OWORD *)(v0 + 16) = xmmword_1B2295430;
  *(_QWORD *)(v0 + 32) = &type metadata for NodeTransformController;
  *(_QWORD *)(v0 + 40) = &off_1E63AAF00;
  *(_QWORD *)(v0 + 48) = &type metadata for NodeVisibilityController;
  *(_QWORD *)(v0 + 56) = &off_1E63AD7D8;
  *(_QWORD *)(v0 + 64) = &type metadata for LightController;
  *(_QWORD *)(v0 + 72) = &off_1E6384140;
  *(_QWORD *)(v0 + 80) = &type metadata for CameraController;
  *(_QWORD *)(v0 + 88) = &off_1E63864C8;
  *(_QWORD *)(v0 + 96) = &type metadata for ParametricModelController;
  *(_QWORD *)(v0 + 104) = &off_1E63AFAC8;
  *(_QWORD *)(v0 + 112) = &type metadata for PhysicsBodyController;
  *(_QWORD *)(v0 + 120) = &off_1E63A5AA0;
  *(_QWORD *)(v0 + 128) = &type metadata for ForceFieldsController;
  *(_QWORD *)(v0 + 136) = &off_1E63A04B0;
  *(_QWORD *)(v0 + 144) = &type metadata for MorpherController;
  *(_QWORD *)(v0 + 152) = &off_1E638D3F0;
  *(_QWORD *)(v0 + 160) = &type metadata for MaterialController;
  *(_QWORD *)(v0 + 168) = &off_1E63921F8;
  *(_QWORD *)(v0 + 176) = &type metadata for ModelController;
  *(_QWORD *)(v0 + 184) = &off_1E6384510;
  *(_QWORD *)(v0 + 192) = &type metadata for WorldBackgroundController;
  *(_QWORD *)(v0 + 200) = &off_1E63B12C0;
  *(_QWORD *)(v0 + 208) = &type metadata for WorldIBLController;
  *(_QWORD *)(v0 + 216) = &off_1E6396F88;
  *(_QWORD *)(v0 + 224) = &type metadata for WorldPhysicsController;
  *(_QWORD *)(v0 + 232) = &off_1E63A9F08;
  *(_QWORD *)(v0 + 240) = &type metadata for WorldFogController;
  *(_QWORD *)(v0 + 248) = &off_1E6396DA8;
  *(_QWORD *)(v0 + 256) = &type metadata for CameraEffectMotionBlurController;
  *(_QWORD *)(v0 + 264) = &off_1E63B66B0;
  *(_QWORD *)(v0 + 272) = &type metadata for CameraEffectDepthOfFieldController;
  *(_QWORD *)(v0 + 280) = &off_1E63B75C8;
  *(_QWORD *)(v0 + 288) = &type metadata for CameraEffectGrainController;
  *(_QWORD *)(v0 + 296) = &off_1E63B2808;
  *(_QWORD *)(v0 + 304) = &type metadata for CameraEffectExposureController;
  *(_QWORD *)(v0 + 312) = &off_1E63B5290;
  *(_QWORD *)(v0 + 320) = &type metadata for CameraEffectToneMappingController;
  *(_QWORD *)(v0 + 328) = &off_1E63B7168;
  *(_QWORD *)(v0 + 336) = &type metadata for CameraEffectBloomController;
  *(_QWORD *)(v0 + 344) = &off_1E63B2620;
  *(_QWORD *)(v0 + 352) = &type metadata for CameraEffectDoughnutBokehController;
  *(_QWORD *)(v0 + 360) = &off_1E63B7968;
  *(_QWORD *)(v0 + 368) = &type metadata for CameraEffectChromaticTransformController;
  *(_QWORD *)(v0 + 376) = &off_1E63B9138;
  *(_QWORD *)(v0 + 384) = &type metadata for CameraEffectLensBlurController;
  *(_QWORD *)(v0 + 392) = &off_1E63B5478;
  *(_QWORD *)(v0 + 400) = &type metadata for CameraEffectSSAOController;
  *(_QWORD *)(v0 + 408) = &off_1E63B1528;
  return result;
}

Swift::Void __swiftcall VFX2Initialize()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1B1DBA4F0();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + 32);
    if (qword_1ED4B7760 != -1)
      swift_once();
    v3 = MEMORY[0x1E0DEE9D8];
    do
    {
      v4 = *v2;
      v2 += 2;
      swift_retain();
      sub_1B1A05BC8(v4, v3);
      swift_release();
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
}

id sub_1B1DBA7D0(void *a1)
{
  id result;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  result = objc_msgSend(a1, sel_asset);
  if (result)
  {
    objc_opt_self();
    v2 = (void *)swift_dynamicCastObjCClass();
    if (v2
      && (v3 = objc_msgSend(v2, sel_authoringGraph),
          sub_1B22292EC(),
          swift_unknownObjectRelease(),
          type metadata accessor for AuthoringGraph(),
          (swift_dynamicCast() & 1) != 0))
    {
      v4 = MEMORY[0x1E0DEE9D8];
      v6[0] = sub_1B1C6D068(MEMORY[0x1E0DEE9D8]);
      v6[1] = v5;
      sub_1B1C5C9C4((uint64_t)sub_1B20BE660, 0, 1, 0x1000000000000000uLL, 0, v4, (uint64_t)v6);
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B1DBA928(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1B1DBA948(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> VFXWorld.migrateCoreEntityManager(info:)(NSMutableDictionary info)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v5;
  uint64_t v6;
  id v7;
  void (*v8)(_OWORD *, _QWORD, _OWORD *);
  id v9;
  char v10;
  void (*v11)(_OWORD *, _QWORD, _OWORD *);
  _OWORD v12[2];
  _OWORD v13[2];

  v3 = v2;
  v5 = (char *)objc_msgSend(v1, sel_scene);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  swift_retain();

  *(_QWORD *)&v13[0] = 0x696C616974696E69;
  *((_QWORD *)&v13[0] + 1) = 0xEB0000000072657ALL;
  v7 = -[objc_class __swift_objectForKeyedSubscript:](info.super.super.isa, sel___swift_objectForKeyedSubscript_, sub_1B2229F94());
  swift_unknownObjectRelease();
  sub_1B22292EC();
  swift_unknownObjectRelease();
  sub_1B1A0DDAC(v12, v13);
  sub_1B1DC3914();
  swift_dynamicCast();
  v8 = v11;
  *(_QWORD *)&v13[0] = 0xD000000000000014;
  *((_QWORD *)&v13[0] + 1) = 0x80000001B233BFF0;
  v9 = -[objc_class __swift_objectForKeyedSubscript:](info.super.super.isa, sel___swift_objectForKeyedSubscript_, sub_1B2229F94());
  swift_unknownObjectRelease();
  sub_1B22292EC();
  swift_unknownObjectRelease();
  sub_1B1A0DDAC(v12, v13);
  swift_dynamicCast();
  v10 = (char)v11;
  *(_QWORD *)&v13[0] = v6;
  LOBYTE(v11) = 1;
  *(_QWORD *)&v12[0] = 0;
  v8(v13, &v11, v12);
  if (!v3 && (v10 & 1) != 0)
  {
    *(_QWORD *)&v13[0] = v6;
    LOBYTE(v11) = 2;
    *(_QWORD *)&v12[0] = 0;
    v8(v13, &v11, v12);
  }
  swift_release();
  swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> VFXWorld.initializeCoreEntityManager(info:)(NSMutableDictionary info)
{
  void *v1;
  void *v2;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  unsigned __int8 v8;
  char v9;
  id v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  __int128 v25;
  uint64_t (*v26)(uint64_t, double);
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;
  id v30[2];
  _OWORD v31[2];

  v2 = v1;
  v4 = (char *)objc_msgSend(v1, sel_presentationScene);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  swift_retain();

  *(_QWORD *)&v31[0] = 0x69706D6F63657270;
  *((_QWORD *)&v31[0] + 1) = 0xEB0000000064656CLL;
  v6 = -[objc_class __swift_objectForKeyedSubscript:](info.super.super.isa, sel___swift_objectForKeyedSubscript_, sub_1B2229F94());
  swift_unknownObjectRelease();
  if (v6)
  {
    sub_1B22292EC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v31, 0, sizeof(v31));
  }
  sub_1B1A18378((uint64_t)v31, (uint64_t)&v25, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
  if (v27)
  {
    sub_1B1B9DAD4(0, (unint64_t *)&qword_1EEF5B5C0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = v30[0];
      v8 = objc_msgSend(v30[0], sel_BOOLValue);

      v9 = v8 ^ 1;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1B1A0DD70((uint64_t)&v25);
  }
  v9 = 1;
LABEL_9:
  *(_QWORD *)&v25 = 0xD000000000000014;
  *((_QWORD *)&v25 + 1) = 0x80000001B233BFF0;
  v10 = -[objc_class __swift_objectForKeyedSubscript:](info.super.super.isa, sel___swift_objectForKeyedSubscript_, sub_1B2229F94());
  swift_unknownObjectRelease();
  sub_1B22292EC();
  swift_unknownObjectRelease();
  sub_1B1A0DDAC(v31, &v25);
  swift_dynamicCast();
  v11 = LOBYTE(v30[0]);
  *(_QWORD *)&v25 = 0x696C616974696E69;
  *((_QWORD *)&v25 + 1) = 0xEB0000000072657ALL;
  v12 = -[objc_class __swift_objectForKeyedSubscript:](info.super.super.isa, sel___swift_objectForKeyedSubscript_, sub_1B2229F94());
  swift_unknownObjectRelease();
  sub_1B22292EC();
  swift_unknownObjectRelease();
  sub_1B1A0DDAC(v31, &v25);
  sub_1B1DC3914();
  swift_dynamicCast();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v30;
  v14 = v5 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig + 2) = v9;
  *(_QWORD *)(v14 + *(int *)(type metadata accessor for ScriptingConfiguration() + 32)) = 0;
  swift_bridgeObjectRelease();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  v16 = (char *)objc_msgSend(v2, sel_remapTable);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)&v16[OBJC_IVAR___VFXBidirectionalRemapTable_remapTable];
    swift_retain();

    v19 = *(void **)(v18 + 16);
    objc_msgSend(v19, sel_lock);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v18 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_unlock);
    swift_release();
  }
  if (v11)
    v20 = 4;
  else
    v20 = 6;
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v2, sel_worldRef);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1B1DC3A1C;
  *(_QWORD *)(v23 + 24) = v13;
  *(_QWORD *)(v23 + 32) = v5;
  *(_BYTE *)(v23 + 40) = v20;
  *(_QWORD *)(v23 + 48) = v15;
  v28 = sub_1B1DC3AB4;
  v29 = v23;
  *(_QWORD *)&v25 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v25 + 1) = 1107296256;
  v26 = sub_1B1D199FC;
  v27 = &unk_1E63D4830;
  v24 = _Block_copy(&v25);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_postCommandWithContext_object_applyBlock_, v22, 0, v24);
  swift_release();
  swift_release();
  _Block_release(v24);
  swift_release();

}

uint64_t sub_1B1DBB104(void (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  a1(a3, a4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t VFXScene.load(url:loadingForAuthoring:infoOut:presentationScene:)(char *a1, int a2, void *a3)
{
  return sub_1B1DCA2FC(a1, a2, a3);
}

char *sub_1B1DBB450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t Strong;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v24;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityObjects);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1B22296AC();
    if (v4)
      goto LABEL_3;
LABEL_38:
    swift_bridgeObjectRelease();
    return 0;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_38;
LABEL_3:
  v5 = 0;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (char *)MEMORY[0x1B5E21018](v5, v3);
    else
      v6 = (char *)*(id *)(v3 + 32 + 8 * v5);
    v7 = v6;
    v8 = *(_DWORD *)&v6[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4];
    v9 = *(int *)&v6[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
    Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      Strong = *(_QWORD *)&v7[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
      if (Strong)
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    swift_release();
    swift_retain();
    v11 = (_DWORD)v9 == -1 && v8 == 0;
    if (v11
      || (v9 & 0x80000000) != 0
      || *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v9
      || ((v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries), v13 = v12 + 12 * (int)v9,
                                                                                     v8 != -1)
        ? (v14 = *(_DWORD *)(v13 + 8) == v8)
        : (v14 = 1),
          !v14
       || (v15 = *(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v12 + 12 * (int)v9) + 32),
           v16 = *(_QWORD *)(v15 + 48),
           (v17 = *(_QWORD *)(v16 + 16)) == 0)))
    {
LABEL_26:

      swift_release();
      goto LABEL_27;
    }
    v18 = *(__int16 *)(v13 + 4);
    v19 = (_QWORD *)(v16 + 56);
    while ((ValueMetadata *)*(v19 - 3) != &type metadata for VFXTag)
    {
      v19 += 5;
      if (!--v17)
        goto LABEL_26;
    }
    v20 = (uint64_t *)(*(_QWORD *)(v15 + 128) + *v19 + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    swift_bridgeObjectRetain();
    swift_release();
    if (v22 == a1 && v21 == a2)
      break;
    v24 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
      goto LABEL_36;

LABEL_27:
    if (++v5 == v4)
      goto LABEL_38;
  }
  swift_bridgeObjectRelease();
LABEL_36:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t VFXScene.addEntityObject(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v4;
  unint64_t v5;
  char v6;
  uint64_t result;

  v2 = v1;
  v4 = (unint64_t *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityObjects);
  v5 = *v4;
  swift_bridgeObjectRetain();
  v6 = sub_1B1DB9154((uint64_t)a1, v5);
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    a1;
    MEMORY[0x1B5E2064C]();
    if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    return sub_1B1D1B3E4(*(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager));
  }
  return result;
}

id VFXScene.removeEntityObject(_:)(void *a1)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  char v5;
  id result;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityObjects);
  v4 = *v3;
  swift_bridgeObjectRetain();
  v5 = sub_1B1DB9154((uint64_t)a1, v4);
  result = (id)swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    v7 = *v3;
    swift_bridgeObjectRetain();
    v8 = sub_1B1DB9BE8((uint64_t)a1, v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)

    return objc_msgSend(a1, sel_removeFromScene);
  }
  return result;
}

char *VFXScene.fetchEntityObject(withTag:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *result;
  uint64_t v6;
  char *v7;
  id v8;

  result = sub_1B1DBB450(a1, a2);
  if (!result)
  {
    v8 = 0;
    v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
    v7 = v2;
    swift_bridgeObjectRetain();
    sub_1B1D9F884(v6, v7, a1, a2, &v8);
    return (char *)v8;
  }
  return result;
}

void sub_1B1DBBA1C(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  unint64_t v6;
  int v7;
  unint64_t v8;
  objc_class *v10;
  _BYTE *v11;
  _DWORD *v12;
  id v13;
  id v14;
  _QWORD *v15;
  id v16;
  objc_super v17;

  v6 = sub_1B1FF9A8C(a2, a3);
  v7 = v6;
  v8 = HIDWORD(v6);
  if ((_DWORD)v6 != -1 || HIDWORD(v6) != 0)
  {
    v10 = (objc_class *)type metadata accessor for VFXEntityObject();
    v11 = objc_allocWithZone(v10);
    swift_weakInit();
    *(_QWORD *)&v11[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager] = 0;
    v11[OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned] = 0;
    v12 = &v11[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
    *v12 = v7;
    v12[1] = v8;
    swift_weakAssign();
    v17.receiver = v11;
    v17.super_class = v10;
    v13 = objc_msgSendSuper2(&v17, sel_init);
    v14 = *a4;
    *a4 = v13;

    if (*a4)
    {
      v15 = (_QWORD *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityObjects);
      v16 = *a4;
      MEMORY[0x1B5E2064C]();
      if (*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1B2228AF4();
      sub_1B2228B30();
      sub_1B2228AD0();

    }
  }
}

Swift::Void __swiftcall VFXScene.resolveObjectReferencesWithRemapTable(world:objectsByIdentifier:)(VFXWorld *world, Swift::OpaquePointer objectsByIdentifier)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1B1DB8BF0((uint64_t)objectsByIdentifier._rawValue);
  if (*(_QWORD *)(v3 + 16))
  {
    sub_1B1DCA88C(0, (unint64_t *)&qword_1EEF5E870, (uint64_t (*)(void))sub_1B1D20DAC, (uint64_t)&type metadata for VFXBridgeableReference, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
    v4 = sub_1B22296DC();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  v5 = v4;
  sub_1B1DCA004(v3, 1, &v5);
  swift_bridgeObjectRelease();
  sub_1B1F588B0(world, v5);
  swift_release();
}

uint64_t VFXScene.updateVFX2RenderOutput(pointOfView:commandBuffer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t result;

  type metadata accessor for MockRenderOutput();
  swift_allocObject();
  v5 = sub_1B1BA0F30(71, 0, 1, 0, 0);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance);
  *(_QWORD *)(v5 + 128) = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v6)
  {
    v7 = *(os_unfair_lock_s **)(v6 + 176);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v7);
    *(_QWORD *)(v6 + 216) = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v8 = *(_QWORD **)(v6 + 216);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v6 + 216) = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_1B1C663BC(0, v8[2] + 1, 1, v8);
      *(_QWORD *)(v6 + 216) = v8;
    }
    v11 = v8[2];
    v10 = v8[3];
    if (v11 >= v10 >> 1)
    {
      v8 = sub_1B1C663BC(v10 > 1, v11 + 1, 1, v8);
      *(_QWORD *)(v6 + 216) = v8;
    }
    v8[2] = v11 + 1;
    v12 = &v8[2 * v11];
    v12[4] = v5;
    v12[5] = &off_1E6388028;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 176));
    swift_release();
    return swift_release_n();
  }
  else
  {
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t VFXScene.remapEntityReferences(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t Strong;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  id v77;
  void *v78;
  uint64_t v79;
  void *v80;
  id v81;
  _QWORD *v82;
  uint64_t v83;
  char v84;
  void *v85;
  id v86;
  uint64_t v87;
  _QWORD *v88;
  char v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  char v94;
  void *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t (*v102)(uint64_t);
  char *v103;
  uint64_t v104;
  char *v105;
  const void *v106;
  void *v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  id v118;
  char *v119;
  uint64_t v120;
  char *v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  _BYTE *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  _QWORD v141[8];
  __int128 v142;
  void *v143;
  void *v144;
  uint64_t (*v145)();
  _QWORD *v146;
  _QWORD v147[3];
  uint64_t v148;
  uint64_t v149;
  char v150;
  _BYTE v151[32];
  uint64_t v152;
  uint64_t v153;
  _BYTE v154[24];
  _BYTE v155[48];

  v3 = sub_1B222847C();
  v113 = *(_QWORD *)(v3 - 8);
  v114 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v112 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B22284AC();
  v110 = *(_QWORD *)(v6 - 8);
  v111 = v6;
  MEMORY[0x1E0C80A78](v6, v7);
  v119 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR___VFXBidirectionalRemapTable_remapTable) + 24);
  type metadata accessor for RemapContext();
  v10 = swift_allocObject();
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v10 + 24) = sub_1B1B95EBC(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  v12 = sub_1B1B7DC84((uint64_t)v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v12;
  *(_BYTE *)(v10 + 16) = 1;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  v14 = sub_1B1C63D98(0, *(_QWORD *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount) & ~(*(uint64_t *)(v13+ OBJC_IVAR____TtC3VFX13EntityManager_entityCount) >> 63), 0, v11);
  v15 = v13 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24));
  v128 = (_QWORD *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v16 = *(_QWORD *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
  v132 = v13;
  if (v16)
  {
    v17 = 0;
    for (i = 0; i != v16; ++i)
    {
      v20 = *v128 + v17;
      if ((*(__int16 *)(v20 + 6) & 0x80000000) == 0)
      {
        v21 = *(_DWORD *)(v20 + 8);
        v23 = *((_QWORD *)v14 + 2);
        v22 = *((_QWORD *)v14 + 3);
        if (v23 >= v22 >> 1)
          v14 = sub_1B1C63D98(v22 > 1, v23 + 1, 1, v14);
        *((_QWORD *)v14 + 2) = v23 + 1;
        v19 = &v14[8 * v23];
        *((_DWORD *)v19 + 8) = i;
        *((_DWORD *)v19 + 9) = v21;
        v13 = v132;
      }
      v17 += 12;
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 24));
  v124 = *((_QWORD *)v14 + 2);
  if (v124)
  {
    v24 = 0;
    v120 = 0;
    v140 = OBJC_IVAR____TtC3VFX13EntityManager_replicationStream;
    v123 = v14 + 32;
    v136 = (char *)&v142 + 8;
    v134 = v154;
    v131 = v10;
    v121 = v14;
    while (1)
    {
      v25 = &v123[8 * v24];
      v26 = *((unsigned int *)v25 + 1);
      v27 = *(int *)v25;
      v28 = v27 == -1 && v26 == 0;
      v29 = v28;
      v139 = v29;
      v30 = MEMORY[0x1E0DEE9D8];
      v135 = v27;
      v130 = v26;
      if (!v28
        && (v27 & 0x80000000) == 0
        && v128[1] > v27
        && ((_DWORD)v26 == -1 || *(_DWORD *)(*v128 + 12 * (int)v27 + 8) == (_DWORD)v26))
      {
        v30 = swift_retain();
        v26 = v130;
        LODWORD(v27) = v135;
      }
      v138 = *(_QWORD *)(v30 + 16);
      if (v138)
        break;
      swift_bridgeObjectRelease();
LABEL_11:
      if (++v24 == v124)
        goto LABEL_94;
    }
    v126 = v30;
    v127 = v24;
    v32 = 0;
    v137 = v30 + 32;
    v129 = v27 | (unint64_t)(v26 << 32);
    while (1)
    {
      v33 = (uint64_t *)(v137 + 16 * v32);
      v35 = *v33;
      v34 = v33[1];
      v36 = *(_QWORD *)(v13 + v140);
      if (v36)
      {
        v37 = *(_BYTE *)(v36 + 80);
        MEMORY[0x1B5E240CC](v36 + 48);
        v36 = *(_QWORD *)(v36 + 56);
      }
      else
      {
        v37 = 0;
      }
      v143 = 0;
      swift_unknownObjectUnownedInit();
      *(_QWORD *)&v142 = v13;
      v143 = (void *)v36;
      swift_unknownObjectUnownedAssign();
      swift_unownedRetain();
      swift_unknownObjectRelease();
      LOBYTE(v144) = v37;
      sub_1B1A02530((uint64_t)&v142, (uint64_t)v155);
      sub_1B1D4BCB0((uint64_t)v155, (uint64_t)&v153);
      if ((v139 & 1) == 0)
      {
        v152 = 0;
        memset(v151, 0, sizeof(v151));
        v150 = 0;
        v38 = v153;
        v39 = swift_unownedRetainStrong();
        MEMORY[0x1E0C80A78](v39, v40);
        *(&v110 - 6) = (uint64_t)sub_1B1DCA8EC;
        *(&v110 - 5) = v10;
        *(&v110 - 4) = (uint64_t)&v150;
        *(&v110 - 3) = (uint64_t)&v153;
        *(&v110 - 2) = (uint64_t)v151;
        if (sub_1B1F24AA4(v35) > 0 && (v135 & 0x80000000) == 0)
        {
          v41 = (uint64_t *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          if (*(_QWORD *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v135)
          {
            v42 = *v41;
            v43 = *v41 + 12 * (int)v135;
            v44 = *(__int16 *)(v43 + 4);
            if ((_DWORD)v130 == -1 || *(_DWORD *)(v43 + 8) == (_DWORD)v130)
            {
              v45 = *(_QWORD *)(*(_QWORD *)(v38 + 136) + 8 * *(int *)(v42 + 12 * (int)v135) + 32);
              v46 = *(_QWORD *)(v45 + 48);
              v47 = *(_QWORD *)(v46 + 16);
              if (v47)
              {
                v48 = v46 + 56;
                while (*(_QWORD *)(v48 - 24) != v35)
                {
                  v48 += 40;
                  if (!--v47)
                    goto LABEL_48;
                }
                v51 = v48 - 8;
                v50 = *(_QWORD *)(v48 - 8);
                v49 = *(_QWORD *)(v51 + 8);
                if (v50 <= 1)
                  v50 = 1;
                v52 = v120;
                sub_1B1FE4CA0(v35, v34, v129, *(_QWORD *)(v45 + 128) + v49 + v50 * v44, (void (*)(uint64_t *))sub_1B1DCA93C);
                v120 = v52;
              }
            }
          }
        }
LABEL_48:
        swift_release();
        v53 = v153;
        swift_unownedRetainStrong();
        swift_release();
        if ((v150 & 1) != 0)
        {
          Strong = swift_unknownObjectUnownedLoadStrong();
          if (Strong)
          {
            v55 = Strong;
            if (((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 24))(v35, v34) & 1) != 0)
            {
              v56 = v55 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
              v57 = type metadata accessor for ScriptingConfiguration();
              ++*(_QWORD *)(v56 + *(int *)(v57 + 36));
            }
            swift_unknownObjectRelease();
          }
          if (v154[16] == 1)
          {
            sub_1B1DCAA00((uint64_t)v151, (uint64_t)&v142);
            if (v144)
            {
              sub_1B1A02518(&v142, (uint64_t)v147);
              swift_unownedRetainStrong();
              v58 = v148;
              v59 = v149;
              v60 = sub_1B19FA070(v147, v148);
              sub_1B1E2F65C((uint64_t)v60, v129, 0, v58, v59, (uint64_t)&v142);
              v61 = *(_QWORD *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
              if (v61 && (*(_BYTE *)(v61 + 81) & 1) != 0 && *(_QWORD *)(v61 + 24) && swift_weakLoadStrong())
              {
                swift_retain();
                swift_unknownObjectRetain();
                swift_release();
                sub_1B1C18F3C((uint64_t)&v142, (uint64_t)v141);
                v62 = *(_QWORD **)(v61 + 16);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)(v61 + 16) = v62;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v62 = sub_1B1C62F04(0, v62[2] + 1, 1, v62);
                  *(_QWORD *)(v61 + 16) = v62;
                }
                v65 = v62[2];
                v64 = v62[3];
                if (v65 >= v64 >> 1)
                {
                  v62 = sub_1B1C62F04(v64 > 1, v65 + 1, 1, v62);
                  *(_QWORD *)(v61 + 16) = v62;
                }
                v62[2] = v65 + 1;
                sub_1B1C18F78((uint64_t)v141, (uint64_t)&v62[8 * v65 + 4]);
                swift_release();
                swift_unknownObjectRelease();
              }
              swift_release();
              sub_1B1ADF058((uint64_t)&v142);
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v147);
            }
            else
            {
              sub_1B1DCC200((uint64_t)&v142, (unint64_t *)&qword_1ED4B8C80, (unint64_t *)&qword_1ED4B8C70);
            }
          }
        }
        sub_1B1DCC200((uint64_t)v151, (unint64_t *)&qword_1ED4B8C80, (unint64_t *)&qword_1ED4B8C70);
      }
      sub_1B1A0256C((uint64_t)&v153);
      sub_1B1A0256C((uint64_t)v155);
      v66 = *(_QWORD **)(v13 + v140);
      if (!v66)
        goto LABEL_30;
      if (!*(_QWORD *)(v66[2] + 16))
        goto LABEL_30;
      v67 = swift_weakLoadStrong();
      if (!v67)
        goto LABEL_30;
      v68 = v67;
      v69 = v66[3];
      if (v69)
      {
        v70 = v66[4];
        v71 = MEMORY[0x1B5E240CC](v66 + 8);
        v72 = v66[9];
        v73 = v66[2];
        v66[2] = MEMORY[0x1E0DEE9D8];
        v74 = (_QWORD *)swift_allocObject();
        v74[2] = v68;
        v74[3] = v73;
        v75 = v71;
        v74[4] = v69;
        v74[5] = v70;
        v74[6] = v71;
        v74[7] = v72;
        v76 = (void *)v66[11];
        v77 = v76;
        if (v76)
        {
          v78 = v77;
          v133 = (id)objc_opt_self();
          v79 = swift_allocObject();
          *(_QWORD *)(v79 + 16) = sub_1B1D1EA74;
          *(_QWORD *)(v79 + 24) = v74;
          v145 = sub_1B1CB734C;
          v146 = (_QWORD *)v79;
          *(_QWORD *)&v142 = MEMORY[0x1E0C809B0];
          *((_QWORD *)&v142 + 1) = 1107296256;
          v143 = sub_1B1D199FC;
          v144 = &unk_1E63D2A78;
          v80 = _Block_copy(&v142);
          swift_unknownObjectRetain_n();
          swift_retain();
          swift_retain();
          swift_unknownObjectRetain();
          v81 = v78;
          swift_retain();
          swift_release();
          objc_msgSend(v133, sel_postCommandWithContext_object_applyBlock_, v81, 0, v80);
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          _Block_release(v80);

        }
        else
        {
          v82 = (_QWORD *)swift_allocObject();
          v82[2] = sub_1B1D1EA74;
          v82[3] = v74;
          v133 = v82;
          v83 = *(_QWORD *)(v68 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread);
          if (!v83)
          {
            v84 = *(_BYTE *)(v68 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated);
            v85 = *(void **)(v68 + OBJC_IVAR____TtC3VFX13EntityManager__invalidated + 8);
            swift_unknownObjectRetain_n();
            swift_retain();
            swift_retain();
            swift_unknownObjectRetain();
            swift_retain();
            v86 = v85;
            objc_msgSend(v86, sel_lock);
            objc_msgSend(v86, sel_unlock);

            v10 = v131;
            if ((v84 & 1) != 0)
            {
              swift_release();
              swift_release();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_release();
            }
            else
            {
              v95 = *(void **)(v68 + OBJC_IVAR____TtC3VFX13EntityManager_asyncQueue);
              v96 = (_QWORD *)swift_allocObject();
              v96[2] = v68;
              v96[3] = sub_1B1CB734C;
              v122 = v96;
              v96[4] = v133;
              v97 = qword_1ED4BF430;
              swift_retain();
              swift_retain();
              v118 = v95;
              if (v97 != -1)
                swift_once();
              v125 = v75;
              v98 = qword_1ED4BF658;
              swift_retain();
              if (v98 != -1)
                swift_once();
              v99 = qword_1ED4D0FD0;
              swift_retain();
              swift_release();
              v100 = (_QWORD *)swift_allocObject();
              v117 = v99;
              v100[2] = v99;
              v100[3] = sub_1B1D1EA88;
              v100[4] = v122;
              v145 = sub_1B1D1EA98;
              v146 = v100;
              *(_QWORD *)&v142 = MEMORY[0x1E0C809B0];
              *((_QWORD *)&v142 + 1) = 1107296256;
              v143 = sub_1B17915D0;
              v144 = &unk_1E63D2A50;
              v116 = _Block_copy(&v142);
              swift_retain();
              swift_retain();
              v101 = v119;
              sub_1B2228494();
              v141[0] = MEMORY[0x1E0DEE9D8];
              v102 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
              v115 = sub_1B19E52CC((unint64_t *)&qword_1ED4B7290, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
              sub_1B1791524(0, (unint64_t *)&qword_1ED4BA480, v102, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
              sub_1B1DCA9A0();
              v103 = v112;
              v104 = v114;
              sub_1B2229364();
              v105 = v101;
              v106 = v116;
              v107 = v118;
              MEMORY[0x1B5E20AFC](0, v105, v103, v116);
              _Block_release(v106);
              swift_release();
              (*(void (**)(char *, uint64_t))(v113 + 8))(v103, v104);
              (*(void (**)(char *, uint64_t))(v110 + 8))(v119, v111);
              swift_release();
              swift_release();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_release();

              swift_release();
LABEL_90:
              swift_release();
              v10 = v131;
            }
LABEL_91:
            swift_release();
            v13 = v132;
            goto LABEL_30;
          }
          swift_unknownObjectRetain_n();
          swift_retain();
          swift_retain();
          swift_unknownObjectRetain();
          swift_retain();
          swift_retain();
          os_unfair_recursive_lock_lock_with_options();
          v10 = v131;
          if (*(_BYTE *)(v83 + 120) == 1)
          {
            os_unfair_recursive_lock_unlock();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            goto LABEL_91;
          }
          v87 = swift_allocObject();
          *(_QWORD *)(v87 + 16) = sub_1B1CB734C;
          *(_QWORD *)(v87 + 24) = v133;
          v88 = *(_QWORD **)(v83 + 72);
          swift_retain();
          v89 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v83 + 72) = v88;
          v125 = v75;
          v122 = (_QWORD *)v87;
          if ((v89 & 1) == 0)
          {
            v88 = sub_1B1C62B5C(0, v88[2] + 1, 1, v88);
            *(_QWORD *)(v83 + 72) = v88;
          }
          v91 = v88[2];
          v90 = v88[3];
          if (v91 >= v90 >> 1)
            v88 = sub_1B1C62B5C(v90 > 1, v91 + 1, 1, v88);
          v88[2] = v91 + 1;
          v92 = &v88[2 * v91];
          v93 = v122;
          v92[4] = sub_1B1CB734C;
          v92[5] = v93;
          *(_QWORD *)(v83 + 72) = v88;
          os_unfair_recursive_lock_unlock();
          os_unfair_recursive_lock_lock_with_options();
          v94 = *(_BYTE *)(v83 + 152);
          os_unfair_recursive_lock_unlock();
          if ((v94 & 1) != 0)
          {
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            goto LABEL_90;
          }
          v108 = *(_QWORD *)(v83 + 16);
          objc_msgSend(*(id *)(v108 + 16), sel_lock);
          *(_BYTE *)(v108 + 24) = 1;
          objc_msgSend(*(id *)(v108 + 16), sel_signal);
          objc_msgSend(*(id *)(v108 + 16), sel_unlock);
          swift_release();
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
        }
        v10 = v131;
        v13 = v132;
      }
      else
      {
        swift_release();
      }
LABEL_30:
      if (++v32 == v138)
      {
        swift_bridgeObjectRelease();
        v24 = v127;
        goto LABEL_11;
      }
    }
  }
LABEL_94:
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1B1DBCFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v9 = *(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v9)
    return 0;
  v10 = *(_QWORD *)(v9 + 144);
  if (!v10 || !sub_1B1813BC4(v10, a2, a3, a4, a5, a6, a7, a8))
    return 0;
  swift_unknownObjectRetain();
  objc_opt_self();
  v11 = (void *)swift_dynamicCastObjCClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v12 = objc_msgSend(v11, sel_resourceManager);
  swift_unknownObjectRelease();
  return v12;
}

uint64_t VFXScene.opaqueEntityManager.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
}

float VFXScene.deltaTime.getter()
{
  uint64_t v0;

  return *(float *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                  + OBJC_IVAR____TtC3VFX13EntityManager_clock
                  + 64);
}

uint64_t (*VFXScene.recycleBuffersGetCompletion()())()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  v2 = v0;
  v3 = sub_1B1DAF564(v1, v2);
  v5 = v4;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v5;
  return sub_1B1A0FDB0;
}

Swift::Void __swiftcall VFXScene.updateAtTime(_:deltaTime:frameIndex:)(Swift::Double _, Swift::Double deltaTime, Swift::Int frameIndex)
{
  char *v3;

  sub_1B1D9FAB0(*(_QWORD *)&v3[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], v3, frameIndex, _, deltaTime);
}

double sub_1B1DBD334()
{
  double result;
  _OWORD v1[2];
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v3 = qword_1ED4D09F8;
  v4 = 0;
  v5 = 2;
  v6 = 0;
  v7 = 2;
  v8 = 0;
  swift_retain();
  sub_1B1B17320(1, 1, (uint64_t)v1);
  swift_release();
  result = *(double *)v1;
  xmmword_1EEF5E820 = v1[0];
  *(_OWORD *)algn_1EEF5E830 = v1[1];
  qword_1EEF5E840 = v2;
  return result;
}

void VFXScene.enumerateDrawCall(_:)(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  v7 = *(id *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall);
  v6 = swift_retain();
  sub_1B1D9FCB8(v6, v5, v7, a1, a2);

}

Swift::Int __swiftcall VFXScene.drawCallCount()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  uint64_t v4[12];
  _QWORD v5[12];
  _OWORD v6[2];
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  if (qword_1EEF57378 != -1)
    swift_once();
  v6[0] = xmmword_1EEF5E820;
  v6[1] = *(_OWORD *)algn_1EEF5E830;
  v7 = qword_1EEF5E840;
  sub_1B1E8FCE4(v1, (uint64_t)v6, 0x200000000, v4);
  sub_1B1A18378((uint64_t)v4, (uint64_t)v5, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!v5[0])
    return 0;
  v2 = v5[10];
  sub_1B19ED748(v4);
  return v2;
}

uint64_t VFXScene.triggerRender(with:renderer:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;

  if (*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    v6 = result;
    swift_retain();
    sub_1B1E6407C(v6, a2, a3);
    return swift_release();
  }
  return result;
}

float VFXScene.speedFactor.getter()
{
  uint64_t v0;

  return *(float *)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                              + OBJC_IVAR____TtC3VFX13EntityManager_scheduler)
                  + 208);
}

void VFXScene.speedFactor.setter(float a1)
{
  uint64_t v1;

  *(float *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                       + OBJC_IVAR____TtC3VFX13EntityManager_scheduler)
           + 208) = a1;
}

float VFXScene.time.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                   + OBJC_IVAR____TtC3VFX13EntityManager_clock
                   + 48);
}

double VFXScene.time.setter(float a1)
{
  uint64_t v1;
  double result;

  result = a1;
  *(double *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
            + OBJC_IVAR____TtC3VFX13EntityManager_clock
            + 48) = result;
  return result;
}

uint64_t VFXScene.paused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                            + OBJC_IVAR____TtC3VFX13EntityManager_clock
                            + 97);
}

uint64_t VFXScene.paused.setter(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager) + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  *(_BYTE *)(v2 + 97) = result;
  if ((result & 1) != 0)
    *(_BYTE *)(v2 + 98) = 0;
  return result;
}

uint64_t VFXScene.beginImgUIFrame(viewportSize:backingScaleFactor:)()
{
  return 0;
}

uint64_t VFXScene.endImgUIFrame(commandBuffer:encoder:renderPassDescriptor:)()
{
  return 0;
}

Swift::Bool __swiftcall VFXScene.endImgUIFrame()()
{
  return 0;
}

uint64_t VFXScene.imGUIEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                            + OBJC_IVAR____TtC3VFX13EntityManager_imGUIEnabled);
}

uint64_t VFXScene.imGUIEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
           + OBJC_IVAR____TtC3VFX13EntityManager_imGUIEnabled) = result;
  return result;
}

uint64_t VFXScene.encodeAuthoring(encoder:colorFormat:depthStencilFormat:sampleCount:)()
{
  uint64_t v0;

  return sub_1B200062C(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager));
}

Swift::Int64 __swiftcall VFXScene.newObject()()
{
  uint64_t v0;
  Swift::Int64 result;

  result = sub_1B217E9B4(0x100000000uLL, **(_QWORD **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)+ OBJC_IVAR____TtC3VFX13EntityManager_commandQueues));
  if (result == 0xFFFFFFFFLL)
    return 0;
  return result;
}

Swift::Void __swiftcall VFXScene.destroyObject(_:)(Swift::Int64 a1)
{
  if (!a1)
    a1 = 0xFFFFFFFFLL;
  sub_1B1DA4B24(a1);
}

Swift::Void __swiftcall VFXScene.updateWorldTransform(_:of:)(simd_float4x4 *_, Swift::Int64 of)
{
  uint64_t v2;
  __n128 v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  int v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  if (_)
    v7 = (int)_;
  else
    v7 = -1;
  v8 = v7 == -1 && HIDWORD(_) == 0;
  if (v8
    || v7 < 0
    || (v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager),
        *(_QWORD *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v7)
    || (v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(_) != -1)
    && *(_DWORD *)(v10 + 12 * v7 + 8) != HIDWORD(_)
    || (sub_1B1FF1A20(*(_QWORD *)(*(_QWORD *)(v9 + 136) + 8 * *(int *)(v10 + 12 * v7) + 32), *(_WORD *)(v10 + 12 * v7 + 4), 64, v3, v4, v5, v6) & 1) == 0)
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2229688();
    __break(1u);
  }
}

uint64_t sub_1B1DBDF20(unint64_t a1, char a2)
{
  void *v2;
  unint64_t v4;
  int v5;
  uint64_t v6;
  id v7;

  v4 = HIDWORD(a1);
  if (a1)
    v5 = a1;
  else
    v5 = -1;
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v2;
  *(_DWORD *)(v6 + 32) = v5;
  *(_DWORD *)(v6 + 36) = v4;
  v7 = v2;
  sub_1B1DA6294((uint64_t)sub_1B1DCC1C0, v6);
  return swift_release();
}

uint64_t sub_1B1DBDFA8(char a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 1) != 0)
    return sub_1B1FE16DC((uint64_t)&type metadata for Selected, (uint64_t)&off_1E63C2980, a3);
  else
    return sub_1B1FE1E1C((uint64_t)&type metadata for Selected, (uint64_t)&off_1E63C2980, a3, 0);
}

uint64_t VFXScene.updateForceField(_:of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  if (a2)
    v4 = a2;
  else
    v4 = 0xFFFFFFFFLL;
  return sub_1B1FDF52C(v4, *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager), a1);
}

uint64_t *VFXScene.evaluateForceFieldsAt(position:velocity:mass:charge:time:dt:categoryMask:)(int a1, float32x4_t a2, float32x4_t a3, double a4, double a5, float a6, float a7)
{
  uint64_t v7;

  return sub_1B1B4A514(*(_QWORD *)(v7 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager), a1, a2, a3, a4, a6, a7);
}

uint64_t sub_1B1DBE28C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___VFXBidirectionalRemapTable_remapTable);
  a1[3] = type metadata accessor for BidirectionalRemapTable();
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_1B1DBE2C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unsigned int *v9;
  uint64_t v10;
  signed int v11;
  BOOL v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___VFXBidirectionalRemapTable_remapTable);
  v4 = *(void **)(v3 + 16);
  swift_retain();
  objc_msgSend(v4, sel_lock);
  v5 = *(_QWORD *)(v3 + 24);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_10;
  v6 = a1;
  if (!a1)
    v6 = 0xFFFFFFFFLL;
  v7 = sub_1B1DC4934(v6 | a1 & 0xFFFFFFFF00000000);
  if ((v8 & 1) != 0
    && ((v9 = (unsigned int *)(*(_QWORD *)(v5 + 56) + 8 * v7), v10 = *v9, v11 = v9[1], (_DWORD)v10 == -1)
      ? (v12 = v11 == 0)
      : (v12 = 0),
        !v12))
  {
    v13 = v10 | ((uint64_t)v11 << 32);
  }
  else
  {
LABEL_10:
    v13 = 0;
  }
  objc_msgSend(v4, sel_unlock);
  swift_release();
  return v13;
}

uint64_t sub_1B1DBE3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1;
  if (!a1)
    v2 = 0xFFFFFFFFLL;
  if (a2)
    v3 = a2;
  else
    v3 = 0xFFFFFFFFLL;
  v4 = v2 | a1 & 0xFFFFFFFF00000000;
  swift_retain();
  sub_1B1E33164(v4, v3);
  return swift_release();
}

id VFXBidirectionalRemapTable.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id VFXBidirectionalRemapTable.init()()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  char *v4;
  uint64_t v5;
  objc_super v7;

  v1 = OBJC_IVAR___VFXBidirectionalRemapTable_remapTable;
  type metadata accessor for BidirectionalRemapTable();
  v2 = (_QWORD *)swift_allocObject();
  v3 = objc_allocWithZone(MEMORY[0x1E0CB3740]);
  v4 = v0;
  v2[2] = objc_msgSend(v3, sel_init);
  v5 = MEMORY[0x1E0DEE9D8];
  v2[3] = sub_1B1B95EBC(MEMORY[0x1E0DEE9D8]);
  v2[4] = sub_1B1B95EBC(v5);
  *(_QWORD *)&v0[v1] = v2;

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for VFXBidirectionalRemapTable();
  return objc_msgSendSuper2(&v7, sel_init);
}

id VFXBidirectionalRemapTable.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VFXBidirectionalRemapTable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B1DBE6C8(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  objc_class *v14;
  _BYTE *v15;
  id v16;
  objc_super v17;

  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  v14 = (objc_class *)type metadata accessor for DefaultRemapper();
  v15 = objc_allocWithZone(v14);
  swift_weakInit();
  swift_weakAssign();
  v15[OBJC_IVAR____TtC3VFX15DefaultRemapper_isReversed] = a3;
  *(_QWORD *)&v15[OBJC_IVAR____TtC3VFX15DefaultRemapper_destinationEntityManager] = v13;
  swift_unownedRetain();
  v17.receiver = v15;
  v17.super_class = v14;
  v16 = objc_msgSendSuper2(&v17, sel_init);
  sub_1B1DC9CF4(v13, v16, a4, 0, 0, a5, a6, 1, a7, *(_QWORD *)(v7 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager));

}

uint64_t VFXScene.sourceReplicationDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
  if (v1)
    return MEMORY[0x1B5E240CC](v1 + 48);
  else
    return 0;
}

uint64_t VFXScene.sourceReplicationDelegate.setter(uint64_t a1)
{
  sub_1B1DCAD08(a1);
  return swift_unknownObjectRelease();
}

uint64_t VFXScene.destinationReplicationDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
  if (v1)
    return MEMORY[0x1B5E240CC](v1 + 64);
  else
    return 0;
}

uint64_t sub_1B1DBE974(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  a4(a3);

  return swift_unknownObjectRelease();
}

uint64_t VFXScene.destinationReplicationDelegate.setter(uint64_t a1)
{
  sub_1B1DCADA0(a1);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall VFXScene.setDebugUIOptions(_:)(Swift::UInt a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions) = a1;
}

Swift::Void __swiftcall VFXScene.startRuntimeThread()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  pthread_mutex_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions];
  v4 = OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    v5 = *(pthread_mutex_t **)(v3 + OBJC_IVAR___VFXSceneLoadOptions_asyncRuntimeLock);
    type metadata accessor for RuntimeThread();
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1B1E67A6C(v6, v5, 0);
    swift_release();
    *(_QWORD *)(v2 + v4) = v7;
    swift_release();
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR___VFXSceneLoadOptions_isVFX2) == 1)
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v1;
    v9 = v1;
    sub_1B1DA6294((uint64_t)sub_1B1DCAE5C, v8);
    swift_release();
  }
}

void sub_1B1DBEB28(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_setCurrentThreadImmediateMode_, 1);
  v3 = objc_retain(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_loadOptions)
                         + OBJC_IVAR___VFXSceneLoadOptions_world));
  objc_msgSend(v2, sel_setImmediateModeRestrictedContext_, v3);

}

Swift::Void __swiftcall VFXEntityObject.removeFromScene()()
{
  uint64_t v0;

  if (swift_weakLoadStrong())
  {
    swift_release();
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject__isTombstoned) & 1) == 0)
      sub_1B1D19A88(1);
  }
}

uint64_t VFXEntityObject.add(to:)(uint64_t a1)
{
  return sub_1B1D1B3E4(*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager));
}

uint64_t VFXEntityObject.clientTexture.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  v2 = *(int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if ((_DWORD)v2 != -1)
  {
    v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
    swift_retain();
    if ((v2 & 0x80000000) == 0 && *(_QWORD *)(Strong + v4 + 8) > v2)
    {
      v5 = *(_QWORD *)(Strong + v4);
      if (v1 == -1 || *(_DWORD *)(v5 + 12 * (int)v2 + 8) == v1)
      {
        v7 = sub_1B1D1E5C0(*(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v5 + 12 * (int)v2) + 32));
        swift_release();
        if (v7 != 1)
          return v7;
        return 0;
      }
    }
    goto LABEL_17;
  }
  if (v1)
  {
    swift_retain();
LABEL_17:
    swift_release();
  }
  return 0;
}

uint64_t VFXEntityObject.clientTexture.setter(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t Strong;

  v2 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_unknownObjectRetain();
  sub_1B1D9FED8(Strong, v2, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

unint64_t sub_1B1DBEFE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _DWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _UNKNOWN **v17;
  char v18;
  _BOOL4 v19;

  v4 = (unint64_t *)(a3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v6 = *(unsigned int *)(a3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v5 = *(unsigned int *)(a3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if ((_DWORD)v6 != -1 || (_DWORD)v5 != 0)
  {
    v9 = *a1;
    swift_unownedRetainStrong();
    v19 = sub_1B1FD568C((uint64_t)&type metadata for TextureGPURuntime, (uint64_t)&off_1E6390090, v6 | (v5 << 32));
    swift_unknownObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    sub_1B1BF86B8(a2, v6 | (v5 << 32));
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    if (*((_BYTE *)a1 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v12[0] = v6;
      v12[1] = v5;
      v13 = v9;
      sub_1B1C1FE78(0, &qword_1EEF5E930, (uint64_t)&type metadata for TextureGPURuntime, (uint64_t)&off_1E6390060);
      v16 = v10;
      v17 = &off_1E6383838;
      v14 = a2;
      v15 = !v19;
      v18 = 12;
      swift_unknownObjectRetain();
      sub_1B1E2DB30((uint64_t)v12);
      swift_release();
      sub_1B1ADF058((uint64_t)v12);
    }
    swift_unknownObjectRelease();
  }
  return sub_1B1E2DD94(*v4);
}

uint64_t VFXEntityObject.clientCGImage.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  v2 = *(int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if ((_DWORD)v2 != -1)
  {
    v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
    swift_retain();
    if ((v2 & 0x80000000) == 0 && *(_QWORD *)(Strong + v4 + 8) > v2)
    {
      v5 = *(_QWORD *)(Strong + v4);
      if (v1 == -1 || *(_DWORD *)(v5 + 12 * (int)v2 + 8) == v1)
      {
        v7 = sub_1B1D204B0(*(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v5 + 12 * (int)v2) + 32), *(_DWORD *)(v5 + 12 * (int)v2), *(_WORD *)(v5 + 12 * (int)v2 + 4), 8, Strong);
        swift_release();
        if (v7 != 1)
          return v7;
        return 0;
      }
    }
    goto LABEL_17;
  }
  if (v1)
  {
    swift_retain();
LABEL_17:
    swift_release();
  }
  return 0;
}

void VFXEntityObject.clientCGImage.setter(void *a1)
{
  char *v1;
  char *v2;
  uint64_t Strong;
  id v5;

  v2 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  v5 = a1;
  sub_1B1DA0358(Strong, v2, a1);
  swift_release();

}

void sub_1B1DBF418(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  id v11;
  _DWORD v12[2];
  uint64_t v13;
  void *v14;
  BOOL v15;
  uint64_t v16;
  _UNKNOWN **v17;
  char v18;
  id v19;

  v4 = *(unsigned int *)(a3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v3 = *(unsigned int *)(a3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if ((_DWORD)v4 != -1 || (_DWORD)v3 != 0)
  {
    v8 = *a1;
    swift_unownedRetainStrong();
    v9 = sub_1B1FD568C((uint64_t)&type metadata for TextureCGImage, (uint64_t)&off_1E63820D8, v4 | (v3 << 32));
    v19 = a2;
    swift_release();
    swift_unownedRetainStrong();
    sub_1B1BF86C4((uint64_t)a2, v4 | (v3 << 32));
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    if (*((_BYTE *)a1 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v12[0] = v4;
      v12[1] = v3;
      v13 = v8;
      sub_1B1C1FE78(0, &qword_1EEF5E928, (uint64_t)&type metadata for TextureCGImage, (uint64_t)&off_1E63820A8);
      v16 = v10;
      v17 = &off_1E6383838;
      v14 = a2;
      v15 = !v9;
      v18 = 12;
      v11 = v19;
      sub_1B1E2DB30((uint64_t)v12);
      swift_release();
      sub_1B1ADF058((uint64_t)v12);

    }
    else
    {

    }
  }
}

uint64_t VFXEntityObject.bindings.getter()
{
  uint64_t v0;
  uint64_t result;
  unsigned int *v2;
  uint64_t v3;
  int v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  result = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v2 = (unsigned int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v3 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v4 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if ((_DWORD)v3 != -1 || v4 != 0)
  {
    v6 = v3 | ((uint64_t)v4 << 32);
    if (!swift_weakLoadStrong())
    {
      if (*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    swift_release();
    swift_retain();
    v22 = sub_1B1D1568C(v6);
    v8 = v7;
    swift_release();
    if (v8)
    {
      v10 = *v2;
      v9 = v2[1];
      if (!swift_weakLoadStrong())
      {
        if (*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      swift_release();
      v11 = (_DWORD)v10 == -1 && (_DWORD)v9 == 0;
      if (v11 || (swift_retain(), v12 = sub_1B1D18AD4(v10 | (v9 << 32)), swift_release(), !v12))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = swift_bridgeObjectRetain();
        v14 = (unint64_t)sub_1B1DC8D0C(v13, (void (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1B19F6D80);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        if ((v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v15 = sub_1B22296AC();
          swift_release();
          if (v15)
            goto LABEL_22;
        }
        else
        {
          v15 = *(_QWORD *)(v14 + 16);
          if (v15)
          {
LABEL_22:
            v21 = v6;
            v16 = 0;
            v20 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
            while (1)
            {
              if ((v14 & 0xC000000000000001) != 0)
                MEMORY[0x1B5E21018](v16, v14);
              else
                swift_retain();
              type metadata accessor for BindingPropertyDescription();
              v18 = swift_dynamicCastClass();
              if (!v18)
                goto LABEL_27;
              v19 = v18;
              if (*(_BYTE *)(v18 + 240))
                goto LABEL_27;
              if (!swift_weakLoadStrong())
              {
                if (!*(_QWORD *)(v0 + v20))
                {
                  type metadata accessor for EntityManager();
                  swift_allocObject();
                  swift_retain();
                  sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
                  goto LABEL_24;
                }
                swift_retain();
              }
              swift_retain();
LABEL_24:
              sub_1B1F436A4(v21, v22, v8, v19);
              swift_release();
              v17 = swift_unknownObjectRetain();
              MEMORY[0x1B5E2064C](v17);
              if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1B2228AF4();
              sub_1B2228B30();
              sub_1B2228AD0();
              swift_unknownObjectRelease();
              swift_release();
LABEL_27:
              ++v16;
              swift_release();
              if (v15 == v16)
              {
                swift_bridgeObjectRelease();
                swift_release();
                return v23;
              }
            }
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

id sub_1B1DBF9AC(void *a1, uint64_t a2, void (*a3)(void), unint64_t *a4)
{
  id v6;
  void *v7;

  v6 = a1;
  a3();

  sub_1B19F8F48(0, a4);
  v7 = (void *)sub_1B2228AAC();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t VFXEntityObject.intersectionFunctions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v26 = MEMORY[0x1E0DEE9D8];
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  v3 = *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  swift_retain();
  swift_release();
  if (!v3)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    return v6;
  }
  v4 = *(unsigned int *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v5 = *(unsigned int *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  v7 = (_DWORD)v4 == -1 && (_DWORD)v5 == 0;
  if (v7 || (swift_retain(), sub_1B1D154D4(v4 | (v5 << 32), (uint64_t)&v25), swift_release(), (v8 = v25) == 0))
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v9 = swift_bridgeObjectRetain();
  sub_1B1A027DC(v8);
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v24 = OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager;
  v11 = (int *)(v9 + 36);
  do
  {
    v12 = *(v11 - 1);
    v13 = *v11;
    v14 = swift_weakLoadStrong();
    if (!v14)
    {
      v14 = *(_QWORD *)(v1 + v24);
      if (v14)
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        v14 = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    v15 = (_DWORD)v12 == -1 && v13 == 0;
    if (!v15
      && (v12 & 0x80000000) == 0
      && *(_QWORD *)(v14 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v12
      && ((v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v13 == -1)
       || *(_DWORD *)(v16 + 12 * (int)v12 + 8) == v13)
      && (v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 80) + 8 * *(__int16 *)(v16 + 12 * (int)v12 + 6) + 32)
                          + 16),
          v18 = *(_QWORD *)(v17 + 128),
          *(_QWORD *)(v18 + 16))
      && (v19 = sub_1B1DC3AC8((uint64_t)&type metadata for ParticleSphereRenderer), (v20 & 1) != 0))
    {
      v21 = *(ValueMetadata **)(*(_QWORD *)(v17 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19) + 32);
      swift_release();
      if (v21 == &type metadata for ParticleSphereRenderer)
      {
        swift_retain();
        sub_1B1B2EC54(0xD00000000000001ALL, 0x80000001B233C080, 0, MEMORY[0x1E0DEE9D8], 0);
        swift_release();
        v22 = swift_unknownObjectRetain();
        MEMORY[0x1B5E2064C](v22);
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B2228AF4();
        sub_1B2228B30();
        sub_1B2228AD0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
    v11 += 2;
    --v10;
  }
  while (v10);
  swift_release();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1B1DBFF20(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  int v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v3 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  v5 = *(_DWORD *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  v6 = *(int *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v7 = (_DWORD)v6 == -1 && v5 == 0;
  if (v7
    || (v6 & 0x80000000) != 0
    || *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v6
    || ((v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries), v5 != -1)
      ? (v9 = *(_DWORD *)(v8 + 12 * (int)v6 + 8) == v5)
      : (v9 = 1),
        !v9
     || (v10 = a1(*(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v8 + 12 * (int)v6) + 32), *(unsigned __int16 *)(v8 + 12 * (int)v6 + 4), 656), v10 == 1)))
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  else
  {
    v11 = v10;
    swift_release();
    return v11;
  }
  return result;
}

uint64_t sub_1B1DC01A4(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  int v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;

  v3 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  v5 = *(_DWORD *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  v6 = *(int *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v7 = (_DWORD)v6 == -1 && v5 == 0;
  if (v7
    || (v6 & 0x80000000) != 0
    || *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v6
    || ((v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager__entries), v5 != -1)
      ? (v9 = *(_DWORD *)(v8 + 12 * (int)v6 + 8) == v5)
      : (v9 = 1),
        !v9
     || (v10 = a1(*(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v8 + 12 * (int)v6) + 32), *(unsigned __int16 *)(v8 + 12 * (int)v6 + 4), 656), (v11 & 1) != 0)))
  {
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    result = sub_1B2229688();
    __break(1u);
  }
  else
  {
    v12 = v10;
    swift_release();
    return v12;
  }
  return result;
}

double VFXEntityObject.transform.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v8[80];
  __int128 v9;
  char v10;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  v2 = *(int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if ((_DWORD)v2 == -1)
  {
    if (v1)
    {
      swift_retain();
LABEL_17:
      swift_release();
    }
  }
  else
  {
    v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
    swift_retain();
    if ((v2 & 0x80000000) != 0 || *(_QWORD *)(Strong + v4 + 8) <= v2)
      goto LABEL_17;
    v5 = *(_QWORD *)(Strong + v4);
    if (v1 != -1 && *(_DWORD *)(v5 + 12 * (int)v2 + 8) != v1)
      goto LABEL_17;
    sub_1B1D1E81C(*(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v5 + 12 * (int)v2) + 32), *(_DWORD *)(v5 + 12 * (int)v2), *(_WORD *)(v5 + 12 * (int)v2 + 4), 64, Strong, (uint64_t)v8);
    swift_release();
    sub_1B1A18378((uint64_t)v8, (uint64_t)&v9, qword_1ED4B8BB0, (uint64_t)&type metadata for WorldTransform);
    if ((v10 & 1) == 0)
      return *(double *)&v9;
  }
  *(_QWORD *)&result = 1065353216;
  return result;
}

uint64_t VFXEntityObject.transform.setter(simd_float4x4 a1)
{
  uint64_t v1;
  int *v2;
  int v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  __invert_f4(a1);
  v2 = (int *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v3 = *(_DWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v4 = *(_DWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if (v3 != -1 || v4 != 0)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1DCAE64);
    swift_release();
  }
  v9 = *v2;
  v8 = v2[1];
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  result = swift_release();
  if (v9 != -1 || v8 != 0)
  {
    v12 = swift_retain();
    MEMORY[0x1E0C80A78](v12, v13);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1DCAE80);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall VFXEntityObject.setBeamed()()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v2 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if (v1 != -1 || v2 != 0)
  {
    v4 = swift_retain();
    MEMORY[0x1E0C80A78](v4, v5);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1DCAEC4);
    swift_release();
  }
}

float VFXEntityObject.opacity.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  float result;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  v2 = *(int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if ((_DWORD)v2 == -1)
  {
    if (!v1)
      return 1.0;
    swift_retain();
LABEL_17:
    swift_release();
    return 1.0;
  }
  v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
  swift_retain();
  if ((v2 & 0x80000000) != 0 || *(_QWORD *)(Strong + v4 + 8) <= v2)
    goto LABEL_17;
  v5 = *(_QWORD *)(Strong + v4);
  if (v1 != -1 && *(_DWORD *)(v5 + 12 * (int)v2 + 8) != v1)
    goto LABEL_17;
  v7 = sub_1B1D2010C(*(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v5 + 12 * (int)v2) + 32), *(_DWORD *)(v5 + 12 * (int)v2), *(_WORD *)(v5 + 12 * (int)v2 + 4), 4, Strong);
  swift_release();
  result = 1.0;
  if ((v7 & 0x100000000) == 0)
    return *(float *)&v7;
  return result;
}

uint64_t VFXEntityObject.opacity.setter()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v2 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  result = swift_release();
  if (v1 != -1 || v2 != 0)
  {
    v5 = swift_retain();
    MEMORY[0x1E0C80A78](v5, v6);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1DCAEDC);
    return swift_release();
  }
  return result;
}

double VFXEntityObject.position.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t v5;
  char v6;
  char v7;

  v1 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v2 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  result = 0.0;
  if ((_DWORD)v1 != -1 || (_DWORD)v2 != 0)
  {
    swift_retain();
    v5 = sub_1B1D15838(v1 | (v2 << 32));
    v7 = v6;
    swift_release();
    result = 0.0;
    if ((v7 & 1) == 0)
      return *(double *)&v5;
  }
  return result;
}

uint64_t VFXEntityObject.position.setter()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v2 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  result = swift_release();
  if (v1 != -1 || v2 != 0)
  {
    v5 = swift_retain();
    MEMORY[0x1E0C80A78](v5, v6);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1DCAEFC);
    return swift_release();
  }
  return result;
}

double VFXEntityObject.orientation.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  v2 = *(int *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if ((_DWORD)v2 == -1)
  {
    if (v1)
    {
      swift_retain();
LABEL_17:
      swift_release();
    }
  }
  else
  {
    v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
    swift_retain();
    if ((v2 & 0x80000000) != 0 || *(_QWORD *)(Strong + v4 + 8) <= v2)
      goto LABEL_17;
    v5 = *(_QWORD *)(Strong + v4);
    if (v1 != -1 && *(_DWORD *)(v5 + 12 * (int)v2 + 8) != v1)
      goto LABEL_17;
    v7 = sub_1B1D1EDC4(*(_QWORD *)(*(_QWORD *)(Strong + 136) + 8 * *(int *)(v5 + 12 * (int)v2) + 32), *(_DWORD *)(v5 + 12 * (int)v2), *(_WORD *)(v5 + 12 * (int)v2 + 4), 16, Strong);
    v9 = v8;
    swift_release();
    if ((v9 & 1) == 0)
      return *(double *)&v7;
  }
  return 0.0;
}

uint64_t VFXEntityObject.orientation.setter()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v2 = *(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  result = swift_release();
  if (v1 != -1 || v2 != 0)
  {
    v5 = swift_retain();
    MEMORY[0x1E0C80A78](v5, v6);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1DCAF18);
    return swift_release();
  }
  return result;
}

double VFXEntityObject.scale.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t Strong;
  unint64_t v3;
  int8x16_t v4;
  char v5;
  int8x16_t v6;
  int8x16_t v7;
  uint64_t v8;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v0 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  v3 = sub_1B203F17C(v1, Strong);
  v4.i32[0] = 0;
  v6.i32[0] = v5 & 1;
  v7 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v6, v4), 0);
  v6.i64[0] = v3;
  v6.i64[1] = v8;
  __asm { FMOV            V2.4S, #1.0 }
  *(_QWORD *)&result = vbslq_s8(v7, v6, _Q2).u64[0];
  return result;
}

uint64_t VFXEntityObject.scale.setter(__n128 a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t Strong;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  return sub_1B203F2E4(a1.n128_i64[0], a1.n128_i64[1], 0, v2, Strong);
}

uint64_t VFXEntityObject.isEnabled.getter()
{
  return sub_1B1DC1A00((uint64_t (*)(uint64_t, char *))sub_1B1DAE900);
}

uint64_t VFXEntityObject.isEnabled.setter(char a1)
{
  char *v1;
  char *v2;
  uint64_t Strong;

  v2 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)&v2[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  sub_1B1DA07DC(Strong, v2, a1 & 1);
  return swift_release();
}

uint64_t sub_1B1DC1640(uint64_t a1, char a2)
{
  unint64_t v4;
  uint64_t Strong;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  return sub_1B211DC90((a2 & 1) == 0, v4, Strong);
}

uint64_t VFXEntityObject.textureAbsolutePath.getter()
{
  char *v0;
  char *v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  v3 = v1;
  sub_1B1DAFC58(Strong, v3);
  v5 = v4;
  swift_release();

  return v5;
}

uint64_t sub_1B1DC1858@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;
  __int128 v8;
  _OWORD v9[3];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  id v16[2];
  __int128 v17;

  v4 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v5 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  result = swift_release();
  v7 = (_DWORD)v4 == -1 && (_DWORD)v5 == 0;
  if (v7
    || (swift_retain(),
        sub_1B1D18AE0(v4 | (v5 << 32), v9),
        swift_release(),
        result = sub_1B1A18378((uint64_t)v9, (uint64_t)&v10, &qword_1EEF5E920, (uint64_t)&type metadata for TextureFileAsset), !*((_QWORD *)&v10 + 1)))
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    v13 = v10;
    v14 = v11;
    v15 = v12;
    v8 = v10;
    v17 = v11;
    sub_1B1BA80C0((uint64_t)&v17);
    sub_1B1AE72F4((uint64_t)&v15, (uint64_t)v16);
    result = (uint64_t)sub_1B1BB52CC(v16);
    *(_OWORD *)a2 = v8;
  }
  return result;
}

uint64_t VFXEntityObject.isLocal.getter()
{
  return sub_1B1DC1A00((uint64_t (*)(uint64_t, char *))sub_1B1DAEBF0);
}

uint64_t sub_1B1DC1A00(uint64_t (*a1)(uint64_t, char *))
{
  char *v1;
  char *v3;
  uint64_t Strong;
  char *v5;
  char v6;

  v3 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  v5 = v3;
  v6 = a1(Strong, v5);
  swift_release();

  return v6 & 1;
}

uint64_t sub_1B1DC1AD4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v5 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  result = swift_release();
  v7 = (_DWORD)v4 == -1 && (_DWORD)v5 == 0;
  if (v7 || (swift_retain(), sub_1B1D154D4(v4 | (v5 << 32), (uint64_t)&v9), swift_release(), (result = v9) == 0))
  {
    v8 = 0;
  }
  else
  {
    v8 = v10 & 1;
    result = sub_1B1A027DC(v9);
  }
  *a2 = v8;
  return result;
}

Swift::Void __swiftcall VFXEntityObject.killParticles()()
{
  sub_1B1DC1D50((void (*)(uint64_t, char *))sub_1B1DA0970);
}

uint64_t sub_1B1DC1C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t Strong;

  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)(a2 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  sub_1B1CCC6C8(v4, 0x100000000uLL, a1, Strong);
  return swift_release();
}

Swift::Void __swiftcall VFXEntityObject.restart()()
{
  sub_1B1DC1D50((void (*)(uint64_t, char *))sub_1B1DA0E14);
}

uint64_t sub_1B1DC1D50(void (*a1)(uint64_t, char *))
{
  char *v1;
  char *v3;
  uint64_t Strong;

  v3 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    Strong = *(_QWORD *)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager];
    if (Strong)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  a1(Strong, v3);
  return swift_release();
}

uint64_t *sub_1B1DC1E10(uint64_t a1)
{
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *result;
  uint64_t v7;
  uint64_t v8;
  uint64x2_t v10;
  int16x8_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  _QWORD v15[82];
  _QWORD v16[5];
  char v17;
  unsigned __int32 v18;
  char v19;
  uint64_t v20;
  __int16 v21;
  char v22;
  uint64_t v23;
  char v24;
  int v25;
  int v26;
  uint64_t v27[82];
  uint64_t __src[82];
  _BYTE v29[656];
  _BYTE __dst[664];
  uint64_t v31;

  v2 = (unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v3 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  v4 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4);
  if (!swift_weakLoadStrong())
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  if ((_DWORD)v3 == -1 && (_DWORD)v4 == 0)
  {
    sub_1B1D2004C(__dst);
    sub_1B1A18378((uint64_t)__dst, (uint64_t)v29, &qword_1ED4B8A80, (uint64_t)&type metadata for EmitterRuntime);
  }
  else
  {
    swift_retain();
    sub_1B1D1862C(v3 | (v4 << 32), (uint64_t)v29);
    swift_release();
  }
  sub_1B1A18378((uint64_t)v29, (uint64_t)v27, &qword_1ED4B8A80, (uint64_t)&type metadata for EmitterRuntime);
  sub_1B1A18378((uint64_t)v27, (uint64_t)__src, &qword_1ED4B8A80, (uint64_t)&type metadata for EmitterRuntime);
  result = (uint64_t *)sub_1B1B3C438(__src);
  if ((_DWORD)result != 1)
  {
    memcpy(__dst, __src, 0x290uLL);
    v7 = *v2;
    v8 = v2[1];
    if (!swift_weakLoadStrong())
    {
      if (*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager))
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    swift_release();
    if ((_DWORD)v7 == -1 && (_DWORD)v8 == 0)
      return sub_1B1C1F7D0(v27);
    swift_retain();
    sub_1B1D154D4(v7 | (v8 << 32), (uint64_t)v15);
    swift_release();
    if (!v15[0])
    {
      return sub_1B1C1F7D0(v27);
    }
    else
    {
      v16[0] = v15[0];
      v31 = v15[1];
      v16[1] = v15[1];
      v16[2] = v15[2];
      v16[3] = v15[3];
      v16[4] = v15[4];
      v17 = v15[5] & 1;
      v10 = (uint64x2_t)vdupq_n_s64(v15[5]);
      v11 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1B2295450), (int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1B2295440));
      *(int8x8_t *)v11.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v11), (int8x8_t)0x1000100010001);
      v18 = vmovn_s16(v11).u32[0];
      v19 = BYTE5(v15[5]) & 1;
      v20 = v15[6];
      v21 = v15[7] & 0x101;
      v22 = BYTE2(v15[7]) & 1;
      v23 = v15[8];
      v24 = v15[9] & 1;
      v25 = *(_DWORD *)((_BYTE *)&v15[9] + 2) & 0x101FFFF;
      v26 = v15[10];
      v12 = *(_QWORD *)v2;
      v13 = v15[0];
      Strong = swift_weakLoadStrong();
      if (!Strong)
      {
        Strong = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
        if (Strong)
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }
      LOBYTE(v15[0]) = 1;
      sub_1B1CCA31C(v12, 0x100000000uLL, v16, (uint64_t)__dst, Strong, 0);
      swift_release();
      sub_1B1A027DC(v13);
      memcpy(v15, __dst, sizeof(v15));
      return (uint64_t *)sub_1B1CDB618((uint64_t)v15);
    }
  }
  return result;
}

id sub_1B1DC2250(void *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  id result;
  void *v8;
  void *v9;
  char *v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[4];

  result = objc_msgSend(a1, sel_asset);
  if (result)
  {
    objc_opt_self();
    v8 = (void *)swift_dynamicCastObjCClass();
    if (v8
      && (v9 = v8, (v10 = (char *)objc_msgSend(v8, sel_entityObject)) != 0)
      && (v12 = *(_DWORD *)&v10[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity],
          v11 = *(_DWORD *)&v10[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4],
          v10,
          __PAIR64__(v11, v12) == a3))
    {
      v13[3] = sub_1B1B9DAD4(0, (unint64_t *)&unk_1EEF5E910);
      v13[0] = v9;
      swift_unknownObjectRetain();
      sub_1B1C4BD9C((uint64_t)v13, a4);
      *a2 = 1;
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t VFXEntityObject._setValue(_:forKeyPath:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char v54;
  _QWORD *v55;
  uint64_t result;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD v71[9];
  char v72[8];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  sub_1B1DCB87C(v71);
  sub_1B1DCB99C((uint64_t)v71, (uint64_t)v72);
  v3 = v76;
  if (!v76)
    goto LABEL_80;
  v4 = v72[0];
  v69 = v74;
  v67 = v73;
  v68 = v75;
  v5 = v77;
  v6 = v78;
  v7 = v79;
  v8 = v80;
  v9 = (unsigned int *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  if (!v72[0])
  {
    v13 = *(_QWORD *)v9;
    Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      Strong = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
      if (Strong)
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    swift_release();
    v55 = sub_1B1FF9F9C(v67, v69, v68, v3, v13, Strong);
    swift_bridgeObjectRelease();
    if (v55)
    {
      v57 = sub_1B1DCAF68(a1, (uint64_t)v55, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_release();
      return v57 & 1;
    }
    goto LABEL_79;
  }
  v62 = v79;
  v10 = *v9;
  v11 = v9[1];
  v12 = swift_weakLoadStrong();
  if (!v12)
  {
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (v12)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      v12 = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  v15 = (_DWORD)v10 == -1 && (_DWORD)v11 == 0;
  if (v15
    || (v16 = v10 | (v11 << 32),
        swift_retain(),
        v17 = sub_1B1FD568C((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391B38, v16),
        swift_release(),
        !v17))
  {
    swift_bridgeObjectRelease();
LABEL_79:
    swift_bridgeObjectRelease();
LABEL_80:
    v57 = 0;
    return v57 & 1;
  }
  v18 = sub_1B201BF04(v4, v16, v12);
  v65 = *(_QWORD *)(v18 + 16);
  if (!v65)
  {
LABEL_74:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_79;
  }
  v58 = v6;
  v59 = v5;
  v60 = a1;
  v61 = v8;
  v19 = 0;
  v63 = v3;
  v64 = v18 + 32;
  while (off_1ED4B84E0)
  {
    v20 = v64 + 16 * v19;
    v22 = *(_DWORD *)v20;
    v21 = *(_DWORD *)(v20 + 4);
    v23 = *(_DWORD *)v20;
    v24 = *(_QWORD *)(v20 + 8);
    swift_retain();
    v25 = MEMORY[0x1B5E20388](v67, v69, v68, v3);
    v27 = sub_1B1A0608C(v25, v26, 0, 1);
    swift_release();
    swift_bridgeObjectRelease();
    if (!v27)
      goto LABEL_37;
    v28 = swift_conformsToProtocol2();
    if (v28)
      v29 = v28;
    else
      v29 = 0;
    if (!v28)
      v27 = 0;
    if (!v27)
    {
LABEL_37:
      swift_retain();
      v38 = v22 == -1 && v21 == 0;
      if (!v38
        && (v22 & 0x80000000) == 0
        && *(_QWORD *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v22
        && ((v39 = *(_QWORD *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v21 == -1)
         || *(_DWORD *)(v39 + 12 * v23 + 8) == v21))
      {
        v40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 80) + 8 * *(__int16 *)(v39 + 12 * v23 + 6) + 32)
                                    + 16)
                        + 32);
        swift_retain();
        swift_release();
      }
      else
      {
        swift_release();
        v40 = MEMORY[0x1E0DEE9D8];
      }
      v66 = v19;
      v41 = *(_QWORD *)(v40 + 16);
      if (v41)
      {
        v70 = MEMORY[0x1E0DEE9D8];
        sub_1B2229550();
        type metadata accessor for VFXAttribute();
        v42 = v40 + 40;
        do
        {
          v43 = *(_QWORD *)(v42 - 8);
          v44 = *(_QWORD *)(*(_QWORD *)v42 + 8);
          v45 = swift_allocObject();
          *(_QWORD *)(v45 + 16) = v24;
          swift_retain();
          swift_unownedRetain();
          swift_release();
          *(_DWORD *)(v45 + 24) = v22;
          *(_DWORD *)(v45 + 28) = v21;
          *(_QWORD *)(v45 + 32) = v43;
          *(_QWORD *)(v45 + 40) = v44;
          sub_1B2229520();
          sub_1B2229568();
          sub_1B2229574();
          sub_1B2229538();
          v42 += 16;
          --v41;
        }
        while (v41);
        v46 = v70;
        swift_bridgeObjectRelease();
        v3 = v63;
      }
      else
      {
        swift_bridgeObjectRelease();
        v46 = MEMORY[0x1E0DEE9D8];
      }
      if (v46 >> 62)
      {
        swift_bridgeObjectRetain();
        v47 = sub_1B22296AC();
        swift_bridgeObjectRelease();
        if (!v47)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          v19 = v66;
          goto LABEL_18;
        }
      }
      else
      {
        v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v47)
          goto LABEL_17;
      }
      v48 = 0;
      while (1)
      {
        if ((v46 & 0xC000000000000001) != 0)
        {
          v37 = MEMORY[0x1B5E21018](v48, v46);
        }
        else
        {
          v37 = *(_QWORD *)(v46 + 8 * v48 + 32);
          swift_retain();
        }
        v49 = *(_QWORD *)(v37 + 32);
        v50 = swift_conformsToProtocol2();
        v51 = v50 ? v50 : 0;
        if (v50 ? v49 : 0)
        {
          (*(void (**)(void))(v51 + 16))();
          sub_1B1A06504();
          sub_1B1A06460();
          v53 = sub_1B2229238();
          swift_bridgeObjectRelease();
          if (!v53)
            break;
        }
        ++v48;
        swift_release();
        if (v47 == v48)
          goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      v19 = v66;
      goto LABEL_68;
    }
    swift_retain();
    if (v22 == -1 && !v21
      || v22 < 0
      || *(_QWORD *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v22
      || (v30 = *(_QWORD *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v21 != -1)
      && *(_DWORD *)(v30 + 12 * v23 + 8) != v21
      || (v31 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 80) + 8 * *(__int16 *)(v30 + 12 * v23 + 6) + 32) + 16),
          v32 = *(_QWORD *)(v31 + 128),
          !*(_QWORD *)(v32 + 16))
      || (v33 = sub_1B1DC3AC8(v27), (v34 & 1) == 0))
    {
      swift_release();
      goto LABEL_18;
    }
    v35 = *(_QWORD *)(*(_QWORD *)(v31 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33) + 32);
    swift_release();
    if (v35 == v27)
    {
      v36 = *(_QWORD *)(v29 + 8);
      type metadata accessor for VFXAttribute();
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = v24;
      swift_retain();
      swift_unownedRetain();
      swift_release();
      *(_DWORD *)(v37 + 24) = v22;
      *(_DWORD *)(v37 + 28) = v21;
      *(_QWORD *)(v37 + 32) = v27;
      *(_QWORD *)(v37 + 40) = v36;
LABEL_68:
      v54 = sub_1B1DCAF68(v60, v37, v59, v58, v62, v61);
      swift_release();
      if ((v54 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v57 = 1;
        return v57 & 1;
      }
    }
LABEL_18:
    if (++v19 == v65)
      goto LABEL_74;
  }
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t VFXEntityObject._valueForKeyPath(_:world:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t Strong;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  _QWORD *v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD v72[9];
  char v73[8];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  sub_1B1DCB87C(v72);
  sub_1B1DCB99C((uint64_t)v72, (uint64_t)v73);
  v5 = v77;
  if (!v77)
    return 0;
  v6 = v73[0];
  v70 = v75;
  v68 = v74;
  v69 = v76;
  v7 = v78;
  v8 = v79;
  v9 = v80;
  v10 = v81;
  v11 = (unsigned int *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_entity);
  if (!v73[0])
  {
    v15 = *(_QWORD *)v11;
    Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      Strong = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
      if (Strong)
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for EntityManager();
        swift_allocObject();
        Strong = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
      }
    }
    swift_release();
    v56 = sub_1B1FF9F9C(v68, v70, v69, v5, v15, Strong);
    swift_bridgeObjectRelease();
    if (v56)
    {
      v58 = sub_1B1DCB3D8(v56, v7, v8, v9, v10, a3);
      swift_bridgeObjectRelease();
      swift_release();
      if (v58 == 1)
        return 0;
      else
        return v58;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v56;
  }
  v63 = v80;
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_weakLoadStrong();
  if (!v14)
  {
    v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager);
    if (v14)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      v14 = sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  v17 = (_DWORD)v12 == -1 && (_DWORD)v13 == 0;
  if (v17
    || (v18 = v12 | (v13 << 32),
        swift_retain(),
        v19 = sub_1B1FD568C((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391B38, v18),
        swift_release(),
        !v19))
  {
    swift_bridgeObjectRelease();
LABEL_75:
    swift_bridgeObjectRelease();
    return 0;
  }
  v20 = sub_1B201BF04(v6, v18, v14);
  v66 = *(_QWORD *)(v20 + 16);
  if (!v66)
  {
LABEL_74:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  v59 = v8;
  v60 = v7;
  v61 = a3;
  v62 = v10;
  v21 = 0;
  v64 = v5;
  v65 = v20 + 32;
  while (off_1ED4B84E0)
  {
    v22 = v65 + 16 * v21;
    v24 = *(_DWORD *)v22;
    v23 = *(_DWORD *)(v22 + 4);
    v25 = *(_DWORD *)v22;
    v26 = *(_QWORD *)(v22 + 8);
    swift_retain();
    v27 = MEMORY[0x1B5E20388](v68, v70, v69, v5);
    v29 = sub_1B1A0608C(v27, v28, 0, 1);
    swift_release();
    swift_bridgeObjectRelease();
    if (!v29)
      goto LABEL_37;
    v30 = swift_conformsToProtocol2();
    if (v30)
      v31 = v30;
    else
      v31 = 0;
    if (!v30)
      v29 = 0;
    if (!v29)
    {
LABEL_37:
      swift_retain();
      v40 = v24 == -1 && v23 == 0;
      if (!v40
        && (v24 & 0x80000000) == 0
        && *(_QWORD *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v24
        && ((v41 = *(_QWORD *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v23 == -1)
         || *(_DWORD *)(v41 + 12 * v25 + 8) == v23))
      {
        v42 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 + 80) + 8 * *(__int16 *)(v41 + 12 * v25 + 6) + 32)
                                    + 16)
                        + 32);
        swift_retain();
        swift_release();
      }
      else
      {
        swift_release();
        v42 = MEMORY[0x1E0DEE9D8];
      }
      v67 = v21;
      v43 = *(_QWORD *)(v42 + 16);
      if (v43)
      {
        v71 = MEMORY[0x1E0DEE9D8];
        sub_1B2229550();
        type metadata accessor for VFXAttribute();
        v44 = v42 + 40;
        do
        {
          v45 = *(_QWORD *)(v44 - 8);
          v46 = *(_QWORD *)(*(_QWORD *)v44 + 8);
          v47 = swift_allocObject();
          *(_QWORD *)(v47 + 16) = v26;
          swift_retain();
          swift_unownedRetain();
          swift_release();
          *(_DWORD *)(v47 + 24) = v24;
          *(_DWORD *)(v47 + 28) = v23;
          *(_QWORD *)(v47 + 32) = v45;
          *(_QWORD *)(v47 + 40) = v46;
          sub_1B2229520();
          sub_1B2229568();
          sub_1B2229574();
          sub_1B2229538();
          v44 += 16;
          --v43;
        }
        while (v43);
        v48 = v71;
        swift_bridgeObjectRelease();
        v5 = v64;
      }
      else
      {
        swift_bridgeObjectRelease();
        v48 = MEMORY[0x1E0DEE9D8];
      }
      if (v48 >> 62)
      {
        swift_bridgeObjectRetain();
        v49 = sub_1B22296AC();
        swift_bridgeObjectRelease();
        if (!v49)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          v21 = v67;
          goto LABEL_18;
        }
      }
      else
      {
        v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v49)
          goto LABEL_17;
      }
      v50 = 0;
      while (1)
      {
        if ((v48 & 0xC000000000000001) != 0)
        {
          v39 = MEMORY[0x1B5E21018](v50, v48);
        }
        else
        {
          v39 = *(_QWORD *)(v48 + 8 * v50 + 32);
          swift_retain();
        }
        v51 = *(_QWORD *)(v39 + 32);
        v52 = swift_conformsToProtocol2();
        v53 = v52 ? v52 : 0;
        if (v52 ? v51 : 0)
        {
          (*(void (**)(void))(v53 + 16))();
          sub_1B1A06504();
          sub_1B1A06460();
          v55 = sub_1B2229238();
          swift_bridgeObjectRelease();
          if (!v55)
            break;
        }
        ++v50;
        swift_release();
        if (v49 == v50)
          goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      v21 = v67;
      goto LABEL_68;
    }
    swift_retain();
    if (v24 == -1 && !v23
      || v24 < 0
      || *(_QWORD *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v24
      || (v32 = *(_QWORD *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v23 != -1)
      && *(_DWORD *)(v32 + 12 * v25 + 8) != v23
      || (v33 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 + 80) + 8 * *(__int16 *)(v32 + 12 * v25 + 6) + 32) + 16),
          v34 = *(_QWORD *)(v33 + 128),
          !*(_QWORD *)(v34 + 16))
      || (v35 = sub_1B1DC3AC8(v29), (v36 & 1) == 0))
    {
      swift_release();
      goto LABEL_18;
    }
    v37 = *(_QWORD *)(*(_QWORD *)(v33 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35) + 32);
    swift_release();
    if (v37 == v29)
    {
      v38 = *(_QWORD *)(v31 + 8);
      type metadata accessor for VFXAttribute();
      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = v26;
      swift_retain();
      swift_unownedRetain();
      swift_release();
      *(_DWORD *)(v39 + 24) = v24;
      *(_DWORD *)(v39 + 28) = v23;
      *(_QWORD *)(v39 + 32) = v29;
      *(_QWORD *)(v39 + 40) = v38;
LABEL_68:
      v56 = (_QWORD *)sub_1B1DCB3D8((_QWORD *)v39, v60, v59, v63, v62, v61);
      swift_release();
      if (v56 != (_QWORD *)1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v56;
      }
    }
LABEL_18:
    if (++v21 == v66)
      goto LABEL_74;
  }
  result = sub_1B2229688();
  __break(1u);
  return result;
}

BOOL sub_1B1DC3358(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = 0;
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(a2 + 4)
    && *(unsigned __int16 *)(a1 + 6) == *(unsigned __int16 *)(a2 + 6)
    && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)
    && *(unsigned __int16 *)(a1 + 12) == *(unsigned __int16 *)(a2 + 12)
    && *(unsigned __int16 *)(a1 + 14) == *(unsigned __int16 *)(a2 + 14)
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
    && *(unsigned __int16 *)(a1 + 20) == *(unsigned __int16 *)(a2 + 20)
    && *(unsigned __int16 *)(a1 + 22) == *(unsigned __int16 *)(a2 + 22)
    && *(_DWORD *)(a1 + 24) == *(_DWORD *)(a2 + 24)
    && *(unsigned __int16 *)(a1 + 28) == *(unsigned __int16 *)(a2 + 28)
    && *(unsigned __int16 *)(a1 + 30) == *(unsigned __int16 *)(a2 + 30)
    && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
    && *(unsigned __int16 *)(a1 + 36) == *(unsigned __int16 *)(a2 + 36)
    && *(unsigned __int16 *)(a1 + 38) == *(unsigned __int16 *)(a2 + 38)
    && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40)
    && *(unsigned __int16 *)(a1 + 44) == *(unsigned __int16 *)(a2 + 44)
    && *(unsigned __int16 *)(a1 + 46) == *(unsigned __int16 *)(a2 + 46)
    && *(_DWORD *)(a1 + 48) == *(_DWORD *)(a2 + 48)
    && *(unsigned __int16 *)(a1 + 52) == *(unsigned __int16 *)(a2 + 52)
    && *(unsigned __int16 *)(a1 + 54) == *(unsigned __int16 *)(a2 + 54)
    && *(_DWORD *)(a1 + 56) == *(_DWORD *)(a2 + 56)
    && *(unsigned __int16 *)(a1 + 60) == *(unsigned __int16 *)(a2 + 60)
    && *(unsigned __int16 *)(a1 + 62) == *(unsigned __int16 *)(a2 + 62)
    && *(_DWORD *)(a1 + 64) == *(_DWORD *)(a2 + 64)
    && *(unsigned __int16 *)(a1 + 68) == *(unsigned __int16 *)(a2 + 68)
    && *(unsigned __int16 *)(a1 + 70) == *(unsigned __int16 *)(a2 + 70)
    && *(_DWORD *)(a1 + 72) == *(_DWORD *)(a2 + 72)
    && *(unsigned __int16 *)(a1 + 76) == *(unsigned __int16 *)(a2 + 76))
  {
    return *(unsigned __int16 *)(a1 + 78) == *(unsigned __int16 *)(a2 + 78);
  }
  return result;
}

uint64_t sub_1B1DC3544()
{
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  return sub_1B222A078();
}

uint64_t sub_1B1DC35D0()
{
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  return sub_1B222A084();
}

unint64_t sub_1B1DC3914()
{
  unint64_t result;

  result = qword_1EEF5E848;
  if (!qword_1EEF5E848)
  {
    type metadata accessor for EntityManager();
    sub_1B1DC3984();
    result = swift_getFunctionTypeMetadata3();
    atomic_store(result, (unint64_t *)&qword_1EEF5E848);
  }
  return result;
}

void sub_1B1DC3984()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5E850)
  {
    sub_1B1DCA88C(255, &qword_1EEF5E858, (uint64_t (*)(void))sub_1B1B68ED0, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5E850);
  }
}

uint64_t sub_1B1DC39F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1DC3A1C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t *, char *, uint64_t *);
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(uint64_t (**)(uint64_t *, char *, uint64_t *))(v3 + 16);
  v8 = a1;
  v7 = a2;
  v6 = a3;
  return v4(&v8, &v7, &v6);
}

uint64_t sub_1B1DC3A5C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1DC3A80()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1DC3AB4()
{
  uint64_t v0;

  return sub_1B1DBB104(*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t sub_1B1DC3AC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B222A060();
  return sub_1B1DC7E0C(a1, v2);
}

uint64_t sub_1B1DC3B00(uint64_t a1, uint64_t a2)
{
  return sub_1B1DC4C00(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1DC4FE0);
}

unint64_t sub_1B1DC3B14(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1B5E21C00](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_1B1DC50C0(a1, v3);
}

unint64_t sub_1B1DC3B48(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A078();
  v2 = sub_1B222A0C0();
  return sub_1B1DC7E0C(a1, v2);
}

unint64_t sub_1B1DC3BAC(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A078();
  v2 = sub_1B222A0C0();
  return sub_1B1DC515C(a1, v2);
}

unint64_t sub_1B1DC3C04(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v2 = sub_1B222A0C0();
  return sub_1B1DC51F8(a1, v2);
}

unint64_t sub_1B1DC3CA8(uint64_t a1)
{
  return sub_1B1DC49CC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (unint64_t *)&qword_1ED4B7B38, MEMORY[0x1E0CB09C8], (void (*)(uint64_t))sub_1B1DCBFFC);
}

unint64_t sub_1B1DC3CCC(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A078();
  v2 = sub_1B222A0C0();
  return sub_1B1DC7514(a1, v2);
}

unint64_t sub_1B1DC3D30(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B2228824();
  v2 = sub_1B222A0C0();
  return sub_1B1DC5368(a1, v2);
}

unint64_t sub_1B1DC3D88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE v8[72];

  sub_1B222A06C();
  sub_1B20CB97C((uint64_t)v8, a1, a2, a3 & 0xFFFFFFFFFFLL);
  v6 = sub_1B222A0C0();
  return sub_1B1DC5440((unint64_t)a1, (unint64_t)a2, a3 & 0xFFFFFFFFFFLL, v6);
}

unint64_t sub_1B1DC3E04(uint64_t a1, unsigned __int8 a2, uint64_t a3, char a4)
{
  char v8;
  uint64_t v9;
  _BYTE v11[72];

  v8 = a4 & 1;
  sub_1B222A06C();
  sub_1B1C9721C((uint64_t)v11, a1);
  sub_1B222A084();
  sub_1B222A084();
  if ((a4 & 1) == 0)
    sub_1B222A078();
  v9 = sub_1B222A0C0();
  return sub_1B1DC57D8(a1, a2, a3, v8, v9);
}

unint64_t sub_1B1DC3EBC(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B1E03DBC();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v2 = sub_1B222A0C0();
  return sub_1B1DC58F0(a1, v2);
}

unint64_t sub_1B1DC3F30(uint64_t a1)
{
  uint64_t v2;

  sub_1B2229610();
  v2 = sub_1B22285D8();
  return sub_1B1DC5AFC(a1, v2);
}

double sub_1B1DC3F84(int64x2_t *a1)
{
  uint64_t v2;
  double result;

  sub_1B222A06C();
  sub_1B222A09C();
  sub_1B1DC3544();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  v2 = sub_1B222A0C0();
  *(_QWORD *)&result = sub_1B1DC5C24(a1, v2).n128_u64[0];
  return result;
}

unint64_t sub_1B1DC4040(unint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = a1;
  v2 = HIDWORD(a1) & 1;
  sub_1B222A06C();
  sub_1B1C00444((uint64_t)v5, v1 | ((unint64_t)v2 << 32));
  v3 = sub_1B222A0C0();
  return sub_1B1DC5D1C(v1 | ((unint64_t)v2 << 32), v3);
}

uint64_t sub_1B1DC40B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1B1DB5748(*(_QWORD *)(v1 + 40), a1);
  return sub_1B1DC5DE0(a1, v3);
}

unint64_t sub_1B1DC40E0(uint64_t *a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B1BFAF00();
  v2 = sub_1B222A0C0();
  return sub_1B1DC609C(a1, v2);
}

unint64_t sub_1B1DC4138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B222A06C();
  sub_1B222A078();
  sub_1B222A09C();
  sub_1B222A09C();
  v4 = sub_1B222A0C0();
  return sub_1B1DC6258(a1, a2, v4);
}

unint64_t sub_1B1DC41BC(unint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A084();
  if ((a1 & 0x100000000) == 0)
    sub_1B222A09C();
  v2 = sub_1B222A0C0();
  return sub_1B1DC62E0(a1 | ((HIDWORD(a1) & 1) << 32), v2);
}

unint64_t sub_1B1DC423C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_1B222826C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B222A06C();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v4);
  sub_1B19E52CC((unint64_t *)&qword_1ED4B7B38, v5, MEMORY[0x1E0CB09C8]);
  sub_1B22285E4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_1B222A078();
  v10 = sub_1B222A0C0();
  return sub_1B1DC6364(a1, a2, v10);
}

unint64_t sub_1B1DC4350(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[72];

  sub_1B222A06C();
  sub_1B1C9721C((uint64_t)v4, a1);
  v2 = sub_1B222A0C0();
  return sub_1B1DC6518(a1, v2);
}

void sub_1B1DC43A8(char a1)
{
  sub_1B222A06C();
  __asm { BR              X10 }
}

uint64_t sub_1B1DC43F8()
{
  __int16 v0;
  uint64_t v1;

  sub_1B2228824();
  v1 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)sub_1B1DC4470 + 4 * byte_1B2295347[HIBYTE(v0)]))(v1, 0x34365F363878);
}

uint64_t sub_1B1DC4470()
{
  uint64_t v0;
  uint64_t v1;

  sub_1B2228824();
  swift_bridgeObjectRelease();
  v1 = sub_1B222A0C0();
  return sub_1B1DC6620(v0, v1);
}

unint64_t sub_1B1DC44E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B22293C4();
  return sub_1B1DC68F0(a1, v2);
}

unint64_t sub_1B1DC4510(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B222A06C();
  sub_1B222A084();
  sub_1B222A078();
  v4 = sub_1B222A0C0();
  return sub_1B1DC69B4(a1, a2, v4);
}

unint64_t sub_1B1DC457C(unsigned __int8 *a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned int v4;
  __int16 v5;
  uint64_t v6;

  sub_1B222A06C();
  sub_1B222A078();
  v2 = type metadata accessor for TextureCache.TextureKey();
  sub_1B2228110();
  sub_1B19E52CC((unint64_t *)&unk_1ED4B7B10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1B22285E4();
  v3 = &a1[*(int *)(v2 + 24)];
  v4 = v3[24];
  v5 = *((_WORD *)v3 + 28);
  sub_1B222A078();
  if (v4 >= 0xFE || (sub_1B222A084(), sub_1B222A078(), sub_1B222A078(), sub_1B222A078(), (v4 & 0x80) == 0))
    sub_1B222A084();
  if ((v5 & 0xFF00) != 0x300)
  {
    sub_1B222A084();
    sub_1B222A078();
    sub_1B222A078();
    sub_1B222A084();
    if ((v5 & 1) == 0)
      sub_1B222A078();
  }
  sub_1B222A084();
  v6 = sub_1B222A0C0();
  return sub_1B1DC6A38(a1, v6);
}

unint64_t sub_1B1DC4750(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A078();
  sub_1B222A084();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A09C();
  sub_1B222A09C();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A09C();
  sub_1B222A09C();
  v2 = sub_1B222A0C0();
  return sub_1B1DC6C60(a1, v2);
}

unint64_t sub_1B1DC488C(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A078();
  sub_1B222A078();
  sub_1B222A078();
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    sub_1B222A084();
  }
  else
  {
    sub_1B222A084();
    sub_1B222A078();
  }
  v2 = sub_1B222A0C0();
  return sub_1B1DC6D90(a1, v2);
}

unint64_t sub_1B1DC4934(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A09C();
  sub_1B222A09C();
  v2 = sub_1B222A0C0();
  return sub_1B1DC6E50(a1, v2);
}

unint64_t sub_1B1DC49A8(uint64_t a1)
{
  return sub_1B1DC49CC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (unint64_t *)&unk_1ED4B7B10, MEMORY[0x1E0CB0018], (void (*)(uint64_t))sub_1B1CDB0F4);
}

unint64_t sub_1B1DC49CC(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10;

  a2(0);
  sub_1B19E52CC(a3, a2, a4);
  v10 = sub_1B22285D8();
  return sub_1B1DC6EC8(a1, v10, a2, a5);
}

unint64_t sub_1B1DC4A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B222A06C();
  sub_1B222A09C();
  sub_1B222A09C();
  sub_1B222A078();
  v4 = sub_1B222A0C0();
  return sub_1B1DC6FF0(a1, a2, v4);
}

unint64_t sub_1B1DC4AE4(uint64_t a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B1E1F710();
  v2 = sub_1B222A0C0();
  return sub_1B1DC7078(a1, v2);
}

unint64_t sub_1B1DC4B3C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A084();
  v2 = sub_1B222A0C0();
  return sub_1B1DC7514(a1, v2);
}

unint64_t sub_1B1DC4BA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B2229010();
  return sub_1B1DC7CFC(a1, v2, &qword_1EEF5B4D0);
}

uint64_t sub_1B1DC4BEC(uint64_t a1, uint64_t a2)
{
  return sub_1B1DC4C00(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0CB0240], sub_1B1DC75B4);
}

uint64_t sub_1B1DC4C00(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  _BYTE v10[72];

  sub_1B222A06C();
  a3(v10, a1, a2);
  v7 = sub_1B222A0C0();
  return a4(a1, a2, v7);
}

unint64_t sub_1B1DC4C78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B2229010();
  return sub_1B1DC7CFC(a1, v2, &qword_1EEF5B4F0);
}

unint64_t sub_1B1DC4CC4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B2229010();
  return sub_1B1DC7CFC(a1, v2, &qword_1EEF5E8B0);
}

unint64_t sub_1B1DC4D14(uint64_t a1)
{
  uint64_t v2;

  sub_1B222874C();
  sub_1B222A06C();
  sub_1B2228824();
  v2 = sub_1B222A0C0();
  swift_bridgeObjectRelease();
  return sub_1B1DC850C(a1, v2);
}

unint64_t sub_1B1DC4DA0(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1B222A06C();
  sub_1B222A084();
  v2 = sub_1B222A0C0();
  return sub_1B1DC7514(a1, v2);
}

unint64_t sub_1B1DC4DF8(uint64_t a1)
{
  unsigned __int8 v2;
  uint64_t v3;

  v2 = *(_BYTE *)(a1 + 16);
  sub_1B222A06C();
  sub_1B2228824();
  sub_1B1FBAEF8(v2);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  sub_1B2228824();
  v3 = sub_1B222A0C0();
  return sub_1B1DC7EA8((uint64_t *)a1, v3);
}

unint64_t sub_1B1DC4EA8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1B222A06C();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v8 = sub_1B222A0C0();
  return sub_1B1DC834C(a1, a2 & 1, a3, a4, v8);
}

unint64_t sub_1B1DC4F34(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = a4 & 1;
  sub_1B222A06C();
  sub_1B2228824();
  sub_1B222A084();
  if ((a4 & 1) == 0)
    sub_1B222A078();
  v9 = sub_1B222A0C0();
  return sub_1B1DC842C(a1, a2, a3, v8, v9);
}

unint64_t sub_1B1DC4FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B2229D24() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B2229D24() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B1DC50C0(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1B1DC515C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1B1DC51F8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        v7 = 0xE500000000000000;
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v8 = 0x6C6174656DLL;
          v9 = a1;
          if (!a1)
            goto LABEL_14;
        }
        else
        {
          v8 = 0x7466697773;
          v9 = a1;
          if (!a1)
          {
LABEL_14:
            v11 = 0xE100000000000000;
            if (v8 != 99)
              goto LABEL_16;
            goto LABEL_15;
          }
        }
      }
      else
      {
        v7 = 0xE100000000000000;
        v8 = 99;
        v9 = a1;
        if (!a1)
          goto LABEL_14;
      }
      if (v9 == 1)
        v10 = 0x6C6174656DLL;
      else
        v10 = 0x7466697773;
      v11 = 0xE500000000000000;
      if (v8 != v10)
        goto LABEL_16;
LABEL_15:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_16:
      v12 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1B1DC5368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v8;
  _QWORD v10[4];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      sub_1B1A00060(*(_QWORD *)(v2 + 48) + 32 * v4, (uint64_t)v10);
      if (v10[2] == *(_QWORD *)(a1 + 16) && v10[3] == *(_QWORD *)(a1 + 24))
        break;
      v8 = sub_1B2229D24();
      sub_1B19FC350((uint64_t)v10);
      if ((v8 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    sub_1B19FC350((uint64_t)v10);
  }
  return v4;
}

unint64_t sub_1B1DC5440(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v28;
  id v29;
  void *v30;
  BOOL v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char v38;
  int v40;
  uint64_t v41;
  id v42;
  id v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  BOOL v51;
  int v52;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = v4;
    v9 = (void *)a2;
    v10 = (void *)a1;
    v11 = ~v6;
    v12 = a3 & 0xFFFFFFFFFFLL;
    v40 = a3;
    v13 = a3 & 0xC000000000;
    v14 = a1 == 1;
    v15 = (a2 | a1) != 0;
    if ((a3 & 0xFFFFFFFFFFLL) != 0x8000000000)
      v14 = 0;
    if (v12 != 0x8000000000)
      v15 = 1;
    if (a2)
      v14 = 0;
    v52 = a1;
    if (v13 != 0x8000000000)
      v14 = 0;
    v51 = v14;
    v16 = v13 != 0x8000000000 || v15;
    v50 = v16;
    v41 = a3 & 0xFFFFFFFFFFLL;
    v17 = v12 >> 38;
    v48 = v11;
    v46 = v12 >> 38;
    v47 = a3 & 0xC000000000;
    v45 = v4 + 64;
    do
    {
      v18 = *(_QWORD *)(v8 + 48) + 24 * v7;
      v19 = *(_QWORD *)v18;
      v20 = *(unsigned __int8 *)(v18 + 20);
      if (v20 >> 6)
      {
        v21 = *(_QWORD *)(v18 + 8);
        v22 = *(unsigned int *)(v18 + 16) | ((unint64_t)*(unsigned __int8 *)(v18 + 20) << 32);
        if (v20 >> 6 != 1)
        {
          if (v21 | v19)
            v31 = 0;
          else
            v31 = v22 == 0x8000000000;
          if (v31)
          {
            if ((v50 & 1) == 0)
              return v7;
          }
          else if (v51)
          {
            return v7;
          }
          goto LABEL_15;
        }
        if (v13 != 0x4000000000)
          goto LABEL_15;
        v23 = sub_1B222874C();
        v25 = v24;
        if (v23 == sub_1B222874C() && v25 == v26)
        {
          sub_1B1A026F0((id)v19, (void *)v21, v22);
          v32 = (id)v21;
          v33 = v9;
          v34 = (id)v19;
          v35 = v10;
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v44 = sub_1B2229D24();
          sub_1B1A026F0((id)v19, (void *)v21, v22);
          v43 = (id)v21;
          v28 = v9;
          v42 = (id)v19;
          v29 = v10;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v44 & 1) == 0)
          {

            v10 = (void *)a1;
            v30 = v43;
LABEL_46:

            v9 = (void *)a2;
            goto LABEL_47;
          }
        }
        if (!v21)
        {

          v10 = (void *)a1;
          v9 = (void *)a2;
          if (a2)
          {
            v21 = 0;
            v28 = (id)a2;
LABEL_47:

            sub_1B1A02724((void *)v19, (void *)v21, v22);
            v13 = v47;
            v11 = v48;
            v5 = v45;
            v17 = v46;
            goto LABEL_15;
          }
          sub_1B1A02724((void *)v19, 0, v22);
          v13 = v47;
          v11 = v48;
          v5 = v45;
          v17 = v46;
          if ((v22 & 0x100000000) != 0)
          {
LABEL_49:
            if ((v41 & 0x100000000) != 0)
              return v7;
            goto LABEL_15;
          }
          goto LABEL_40;
        }
        v9 = (void *)a2;
        if (!a2)
        {
          v29 = (id)v21;
          v30 = (void *)v19;
          v10 = (void *)a1;
          v28 = (id)a1;
          goto LABEL_46;
        }
        sub_1B1B9DAD4(0, (unint64_t *)&qword_1ED4BA7E0);
        v36 = (id)v21;
        v37 = (id)a2;
        v38 = sub_1B222901C();

        v10 = (void *)a1;
        sub_1B1A02724((void *)v19, (void *)v21, v22);
        v13 = v47;
        v11 = v48;
        v5 = v45;
        v17 = v46;
        if ((v38 & 1) != 0)
        {
          if ((v22 & 0x100000000) != 0)
            goto LABEL_49;
LABEL_40:
          if ((v41 & 0x100000000) == 0 && (_DWORD)v22 == v40)
            return v7;
        }
      }
      else if (!v17 && *(_QWORD *)v18 == v52)
      {
        return v7;
      }
LABEL_15:
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1B1DC57D8(uint64_t a1, unsigned __int8 a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  int v19;

  v6 = -1 << *(_BYTE *)(v5 + 32);
  v7 = a5 & ~v6;
  if (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v19 = a2;
    v8 = ~v6;
    do
    {
      v9 = *(_QWORD *)(v5 + 48) + 32 * v7;
      v10 = *(_QWORD *)v9;
      v11 = *(unsigned __int8 *)(v9 + 8);
      v12 = *(_QWORD *)(v9 + 16);
      v13 = *(_BYTE *)(v9 + 24);
      sub_1B1B1DD24(*(_QWORD *)v9);
      sub_1B1CA8B88(v10);
      v15 = v14;
      sub_1B1A05610(v10);
      if ((v15 & 1) != 0 && v11 == v19)
      {
        if ((v13 & 1) != 0)
        {
          if ((a4 & 1) != 0)
            return v7;
        }
        else if ((a4 & 1) == 0 && v12 == a3)
        {
          return v7;
        }
      }
      v7 = (v7 + 1) & v8;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1B1DC58F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v19[5];
  _QWORD v20[5];

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v7 = v20;
    sub_1B19FA278(*(_QWORD *)(v2 + 48) + 40 * v5, (uint64_t)v20);
    sub_1B19F8C58(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    v8 = sub_1B1E03DBC();
    v10 = v9;
    if (v8 == sub_1B1E03DBC() && v10 == v11)
    {
LABEL_4:
      swift_bridgeObjectRelease_n();
      sub_1B19F8C58(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      return v5;
    }
    v12 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B19F8C58(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    if ((v12 & 1) == 0)
    {
      v5 = (v5 + 1) & ~v4;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v7 = v19;
          sub_1B19FA278(*(_QWORD *)(v6 + 48) + 40 * v5, (uint64_t)v19);
          sub_1B19F8C58(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
          v13 = sub_1B1E03DBC();
          v15 = v14;
          if (v13 == sub_1B1E03DBC() && v15 == v16)
            break;
          v17 = sub_1B2229D24();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B19F8C58(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
          if ((v17 & 1) == 0)
          {
            v5 = (v5 + 1) & ~v4;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_4;
      }
    }
  }
  return v5;
}

unint64_t sub_1B1DC5AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t, __n128);
  char v16;
  _QWORD v18[2];

  v3 = v2;
  v18[1] = a1;
  v5 = sub_1B2229610();
  v6 = *(_QWORD *)(v5 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -1 << *(_BYTE *)(v3 + 32);
  v12 = a2 & ~v11;
  if (((*(_QWORD *)(v3 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    v14 = *(_QWORD *)(v6 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v15(v10, *(_QWORD *)(v3 + 48) + v14 * v12, v5, v8);
      v16 = sub_1B22286E0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
      if ((v16 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

__n128 sub_1B1DC5C24(int64x2_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  __n128 result;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = (int64x2_t *)(*(_QWORD *)(v2 + 48) + 96 * v5);
      if (v7->i32[0] == a1->i32[0] && v7->i64[1] == a1->i64[1])
      {
        result.n128_u8[0] = vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v7[1], a1[1]), (int32x4_t)vceqq_s64(v7[2], a1[2])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v7[3], a1[3]), (int32x4_t)vceqq_s64(v7[4], a1[4])))), 7uLL)));
        if ((result.n128_u8[0] & 1) != 0 && v7[5].i64[0] == a1[5].i64[0] && v7[5].i64[1] == a1[5].i64[1])
          break;
      }
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC5D1C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  float v11;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    v7 = HIDWORD(a1) & 1;
    if (a1 > 1)
      v8 = BYTE4(a1) & 1;
    else
      v8 = 0;
    if ((_DWORD)a1 == 1)
      v9 = BYTE4(a1) & 1;
    else
      v9 = 0;
    if ((_DWORD)a1)
      LOBYTE(v7) = 0;
    do
    {
      v10 = *(_QWORD *)(v2 + 48) + 8 * result;
      v11 = *(float *)v10;
      if (*(_BYTE *)(v10 + 4) == 1)
      {
        if (v11 == 0.0)
        {
          if ((v7 & 1) != 0)
            return result;
        }
        else if (LODWORD(v11) == 1)
        {
          if ((v9 & 1) != 0)
            return result;
        }
        else if ((v8 & 1) != 0)
        {
          return result;
        }
      }
      else if ((a1 & 0x100000000) == 0 && v11 == *(float *)&a1)
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_1B1DC5DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1B1DC609C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  v25 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v23 = ~v3;
    v24 = *(_QWORD *)(v2 + 48);
    v6 = *a1;
    v7 = a1[1];
    do
    {
      v8 = v24 + 72 * v4;
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      v12 = *(_QWORD *)(v8 + 32);
      v11 = *(_QWORD *)(v8 + 40);
      v14 = *(_QWORD *)(v8 + 48);
      v13 = *(_QWORD *)(v8 + 56);
      v26 = *(_DWORD *)(v8 + 64);
      v27 = *(_BYTE *)(v8 + 68);
      v15 = *(_QWORD *)v8 == v6 && *(_QWORD *)(v8 + 8) == v7;
      if (!v15 && (sub_1B2229D24() & 1) == 0)
        goto LABEL_4;
      v16 = v9 == a1[2] && v10 == a1[3];
      if (!v16 && (sub_1B2229D24() & 1) == 0)
        goto LABEL_4;
      v17 = a1[5];
      if (v11)
      {
        if (!v17)
          goto LABEL_4;
        v18 = v12 == a1[4] && v11 == v17;
        if (!v18 && (sub_1B2229D24() & 1) == 0)
          goto LABEL_4;
      }
      else if (v17)
      {
        goto LABEL_4;
      }
      v19 = a1[7];
      if (v13)
      {
        if (!v19)
          goto LABEL_4;
        v20 = v14 == a1[6] && v13 == v19;
        if (!v20 && (sub_1B2229D24() & 1) == 0)
          goto LABEL_4;
      }
      else if (v19)
      {
        goto LABEL_4;
      }
      v21 = *((_BYTE *)a1 + 68);
      if ((v27 & 1) != 0)
      {
        if ((*((_BYTE *)a1 + 68) & 1) != 0)
          return v4;
      }
      else
      {
        if (v26 != *((_DWORD *)a1 + 16))
          v21 = 1;
        if ((v21 & 1) == 0)
          return v4;
      }
LABEL_4:
      v4 = (v4 + 1) & v23;
    }
    while (((*(_QWORD *)(v25 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B1DC6258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      v9 = *(_QWORD *)v8;
      v11 = *(_DWORD *)(v8 + 8);
      v10 = *(_DWORD *)(v8 + 12);
      if (v9 == a1 && v11 == (_DWORD)a2 && v10 == HIDWORD(a2))
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC62E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(_QWORD *)(v2 + 48) + 8 * result;
      if ((*(_BYTE *)(v7 + 4) & 1) != 0)
      {
        if ((a1 & 0x100000000) != 0)
          return result;
      }
      else if ((a1 & 0x100000000) == 0 && *(_DWORD *)v7 == (_DWORD)a1)
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC6364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, __n128);
  _QWORD *v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v6 = sub_1B222826C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.n128_f64[0] = MEMORY[0x1E0C80A78](v11, v12);
  v15 = (char *)&v25 - v14;
  v30 = v3;
  v16 = -1 << *(_BYTE *)(v3 + 32);
  v17 = a3 & ~v16;
  v28 = v3 + 64;
  if (((*(_QWORD *)(v3 + 64 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v26 = ~v16;
    v27 = a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    v18 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
    do
    {
      v19 = (_QWORD *)(*(_QWORD *)(v30 + 48) + 16 * v17);
      v20 = v19[1];
      v18(v15, *v19 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v6, v13);
      ((void (*)(char *, uint64_t, uint64_t))v18)(v10, v27, v6);
      swift_retain();
      v21 = sub_1B222823C();
      v22 = v7;
      v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v10, v6);
      v23(v15, v6);
      swift_release();
      if ((v21 & (v20 == v29)) != 0)
        break;
      v17 = (v17 + 1) & v26;
      v7 = v22;
    }
    while (((*(_QWORD *)(v28 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
  }
  return v17;
}

unint64_t sub_1B1DC6518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1B1B1DD24(v6);
    sub_1B1CA8B88(v6);
    v8 = v7;
    sub_1B1A05610(v6);
    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
        sub_1B1B1DD24(v10);
        sub_1B1CA8B88(v10);
        v12 = v11;
        sub_1B1A05610(v10);
        if ((v12 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1B1DC6620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1B1DC68F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1B1DCC2F4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1B5E20F7C](v9, a1);
      sub_1B1DCC330((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B1DC69B4(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = a1;
    v8 = ~v5;
    do
    {
      v9 = (unsigned __int8 *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v10 = *v9;
      v11 = *((_QWORD *)v9 + 1);
      if (v10 == v7 && v11 == a2)
        break;
      result = (result + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC6A38(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL4 v34;
  uint64_t v36;

  v5 = type metadata accessor for TextureCache.TextureKey();
  MEMORY[0x1E0C80A78](v5, v6);
  v9 = (unsigned __int8 *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v2 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1B1792810(*(_QWORD *)(v2 + 48) + v13 * v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextureCache.TextureKey);
      if (*v9 != *a1)
        goto LABEL_4;
      if ((MEMORY[0x1B5E1FC68](&v9[*(int *)(v5 + 20)], &a1[*(int *)(v5 + 20)]) & 1) == 0)
        goto LABEL_4;
      v14 = *(int *)(v5 + 24);
      v15 = &v9[v14];
      v16 = &a1[v14];
      if (*(_QWORD *)&v9[v14] != *(_QWORD *)&a1[v14])
        goto LABEL_4;
      v17 = v15[24];
      v18 = *((_QWORD *)v15 + 4);
      v19 = *((_QWORD *)v15 + 5);
      v20 = *((_QWORD *)v15 + 6);
      v21 = *((unsigned __int16 *)v15 + 28);
      v22 = v16[24];
      v23 = *((_QWORD *)v16 + 4);
      v24 = *((_QWORD *)v16 + 5);
      v25 = *((_QWORD *)v16 + 6);
      v26 = *((unsigned __int16 *)v16 + 28);
      if (v17 <= 0xFD)
      {
        if (v22 > 0xFD)
          goto LABEL_4;
        v31 = *((_QWORD *)v15 + 1);
        v30 = *((_QWORD *)v15 + 2);
        v33 = *((_QWORD *)v16 + 1);
        v32 = *((_QWORD *)v16 + 2);
        if ((v17 & 0x80) != 0)
        {
          if ((v22 & 0x80) == 0 || v31 != v33 || v30 != v32)
            goto LABEL_4;
        }
        else
        {
          if ((v22 & 0x80) != 0)
            goto LABEL_4;
          v34 = (v17 & 1) == 0;
          if (v31 != v33 || v30 != v32 || ((v34 ^ v22) & 1) == 0)
            goto LABEL_4;
        }
      }
      else if (v22 <= 0xFD)
      {
        goto LABEL_4;
      }
      v27 = v26 & 0xFF00;
      if ((v21 & 0xFF00) == 0x300)
      {
        if (v27 == 768)
          goto LABEL_36;
      }
      else
      {
        if (v27 == 768 || v18 != v23 || v19 != v24)
          goto LABEL_4;
        if ((v21 & 1) != 0)
        {
          if ((v26 & 1) == 0)
            goto LABEL_4;
        }
        else if ((v26 & 1) != 0 || v20 != v25)
        {
          goto LABEL_4;
        }
        if (v21 >> 8 == v26 >> 8)
        {
LABEL_36:
          sub_1B1A04628((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextureCache.TextureKey);
          return v11;
        }
      }
LABEL_4:
      sub_1B1A04628((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TextureCache.TextureKey);
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_1B1DC6C60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    do
    {
      v8 = v7 + 96 * result;
      if (*(_QWORD *)v8 == *(_QWORD *)a1
        && ((*(unsigned __int8 *)(v7 + 96 * result + 8) ^ *(unsigned __int8 *)(a1 + 8)) & 1) == 0
        && *(_QWORD *)(v8 + 16) == *(_QWORD *)(a1 + 16))
      {
        v9 = *(_QWORD *)(v8 + 24) == *(_QWORD *)(a1 + 24) && *(_QWORD *)(v8 + 32) == *(_QWORD *)(a1 + 32);
        v10 = v9 && *(_QWORD *)(v8 + 40) == *(_QWORD *)(a1 + 40);
        v11 = v10 && *(_DWORD *)(v8 + 48) == *(_DWORD *)(a1 + 48);
        v12 = v11 && *(_DWORD *)(v8 + 52) == *(_DWORD *)(a1 + 52);
        if (v12
          && *(_QWORD *)(v8 + 56) == *(_QWORD *)(a1 + 56)
          && *(_QWORD *)(v8 + 64) == *(_QWORD *)(a1 + 64)
          && *(_QWORD *)(v8 + 72) == *(_QWORD *)(a1 + 72)
          && *(_QWORD *)(v8 + 80) == *(_QWORD *)(a1 + 80)
          && *(_DWORD *)(v8 + 88) == *(_DWORD *)(a1 + 88)
          && *(_DWORD *)(v8 + 92) == *(_DWORD *)(a1 + 92))
        {
          break;
        }
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC6D90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v8 = *(_QWORD *)(v2 + 48) + 40 * result;
      if (*(_QWORD *)v8 == *(_QWORD *)a1
        && *(_QWORD *)(v8 + 8) == *(_QWORD *)(a1 + 8)
        && *(_QWORD *)(v8 + 16) == *(_QWORD *)(a1 + 16))
      {
        if ((*(_BYTE *)(v8 + 32) & 1) != 0)
        {
          if ((*(_BYTE *)(a1 + 32) & 1) != 0)
            return result;
        }
        else
        {
          if (*(_QWORD *)(v8 + 24) == *(_QWORD *)(a1 + 24))
            v7 = *(_BYTE *)(a1 + 32);
          else
            v7 = 1;
          if ((v7 & 1) == 0)
            return result;
        }
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC6E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int *v7;
  int v8;
  int v9;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = (int *)(*(_QWORD *)(v2 + 48) + 8 * result);
      v9 = *v7;
      v8 = v7[1];
      if (v9 == (_DWORD)a1 && v8 == HIDWORD(a1))
        break;
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC6EC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, unint64_t, uint64_t, __n128);
  uint64_t v18;
  char v19;
  uint64_t v21;
  void (*v22)(uint64_t);

  v21 = a1;
  v22 = a4;
  v5 = v4;
  v7 = a3(0);
  v8 = *(_QWORD *)(v7 - 8);
  v10.n128_f64[0] = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)&v21 - v11;
  v13 = -1 << *(_BYTE *)(v5 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v5 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v8 + 72);
    v17 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
    do
    {
      v18 = v17(v12, *(_QWORD *)(v5 + 48) + v16 * v14, v7, v10);
      v22(v18);
      v19 = sub_1B22286E0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1B1DC6FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      v9 = *(_DWORD *)v8;
      v10 = *(_DWORD *)(v8 + 4);
      v11 = *(_QWORD *)(v8 + 8);
      if (v9 == (_DWORD)a1 && v10 == HIDWORD(a1) && v11 == a2)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B1DC7078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  for (result = a2 & ~v4;
        ((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
        result = (result + 1) & ~v4)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * result);
    if (*(_DWORD *)(v6 + 96) == *(_DWORD *)(a1 + 96)
      && *(unsigned __int16 *)(v6 + 100) == *(unsigned __int16 *)(a1 + 100)
      && *(unsigned __int16 *)(v6 + 102) == *(unsigned __int16 *)(a1 + 102)
      && *(_DWORD *)(v6 + 104) == *(_DWORD *)(a1 + 104)
      && *(unsigned __int16 *)(v6 + 108) == *(unsigned __int16 *)(a1 + 108)
      && *(unsigned __int16 *)(v6 + 110) == *(unsigned __int16 *)(a1 + 110)
      && *(_DWORD *)(v6 + 112) == *(_DWORD *)(a1 + 112)
      && *(unsigned __int16 *)(v6 + 116) == *(unsigned __int16 *)(a1 + 116)
      && *(unsigned __int16 *)(v6 + 118) == *(unsigned __int16 *)(a1 + 118)
      && *(_DWORD *)(v6 + 120) == *(_DWORD *)(a1 + 120)
      && *(unsigned __int16 *)(v6 + 124) == *(unsigned __int16 *)(a1 + 124)
      && *(unsigned __int16 *)(v6 + 126) == *(unsigned __int16 *)(a1 + 126)
      && *(_DWORD *)(v6 + 128) == *(_DWORD *)(a1 + 128)
      && *(unsigned __int16 *)(v6 + 132) == *(unsigned __int16 *)(a1 + 132)
      && *(unsigned __int16 *)(v6 + 134) == *(unsigned __int16 *)(a1 + 134)
      && *(_DWORD *)(v6 + 136) == *(_DWORD *)(a1 + 136)
      && *(unsigned __int16 *)(v6 + 140) == *(unsigned __int16 *)(a1 + 140)
      && *(unsigned __int16 *)(v6 + 142) == *(unsigned __int16 *)(a1 + 142)
      && *(_DWORD *)(v6 + 144) == *(_DWORD *)(a1 + 144)
      && *(unsigned __int16 *)(v6 + 148) == *(unsigned __int16 *)(a1 + 148)
      && *(unsigned __int16 *)(v6 + 150) == *(unsigned __int16 *)(a1 + 150)
      && *(_DWORD *)(v6 + 152) == *(_DWORD *)(a1 + 152)
      && *(unsigned __int16 *)(v6 + 156) == *(unsigned __int16 *)(a1 + 156)
      && *(unsigned __int16 *)(v6 + 158) == *(unsigned __int16 *)(a1 + 158)
      && *(_DWORD *)(v6 + 160) == *(_DWORD *)(a1 + 160)
      && *(unsigned __int16 *)(v6 + 164) == *(unsigned __int16 *)(a1 + 164)
      && *(unsigned __int16 *)(v6 + 166) == *(unsigned __int16 *)(a1 + 166)
      && *(_DWORD *)(v6 + 168) == *(_DWORD *)(a1 + 168)
      && *(unsigned __int16 *)(v6 + 172) == *(unsigned __int16 *)(a1 + 172)
      && *(unsigned __int16 *)(v6 + 174) == *(unsigned __int16 *)(a1 + 174)
      && *(_DWORD *)(v6 + 16) == *(_DWORD *)(a1 + 16)
      && *(unsigned __int16 *)(v6 + 20) == *(unsigned __int16 *)(a1 + 20)
      && *(unsigned __int16 *)(v6 + 22) == *(unsigned __int16 *)(a1 + 22)
      && *(_DWORD *)(v6 + 24) == *(_DWORD *)(a1 + 24)
      && *(unsigned __int16 *)(v6 + 28) == *(unsigned __int16 *)(a1 + 28)
      && *(unsigned __int16 *)(v6 + 30) == *(unsigned __int16 *)(a1 + 30)
      && *(_DWORD *)(v6 + 32) == *(_DWORD *)(a1 + 32)
      && *(unsigned __int16 *)(v6 + 36) == *(unsigned __int16 *)(a1 + 36)
      && *(unsigned __int16 *)(v6 + 38) == *(unsigned __int16 *)(a1 + 38)
      && *(_DWORD *)(v6 + 40) == *(_DWORD *)(a1 + 40)
      && *(unsigned __int16 *)(v6 + 44) == *(unsigned __int16 *)(a1 + 44)
      && *(unsigned __int16 *)(v6 + 46) == *(unsigned __int16 *)(a1 + 46)
      && *(_DWORD *)(v6 + 48) == *(_DWORD *)(a1 + 48)
      && *(unsigned __int16 *)(v6 + 52) == *(unsigned __int16 *)(a1 + 52)
      && *(unsigned __int16 *)(v6 + 54) == *(unsigned __int16 *)(a1 + 54)
      && *(_DWORD *)(v6 + 56) == *(_DWORD *)(a1 + 56)
      && *(unsigned __int16 *)(v6 + 60) == *(unsigned __int16 *)(a1 + 60)
      && *(unsigned __int16 *)(v6 + 62) == *(unsigned __int16 *)(a1 + 62)
      && *(_DWORD *)(v6 + 64) == *(_DWORD *)(a1 + 64)
      && *(unsigned __int16 *)(v6 + 68) == *(unsigned __int16 *)(a1 + 68)
      && *(unsigned __int16 *)(v6 + 70) == *(unsigned __int16 *)(a1 + 70)
      && *(_DWORD *)(v6 + 72) == *(_DWORD *)(a1 + 72)
      && *(unsigned __int16 *)(v6 + 76) == *(unsigned __int16 *)(a1 + 76)
      && *(unsigned __int16 *)(v6 + 78) == *(unsigned __int16 *)(a1 + 78)
      && *(_DWORD *)(v6 + 80) == *(_DWORD *)(a1 + 80)
      && *(unsigned __int16 *)(v6 + 84) == *(unsigned __int16 *)(a1 + 84)
      && *(unsigned __int16 *)(v6 + 86) == *(unsigned __int16 *)(a1 + 86)
      && *(_DWORD *)(v6 + 88) == *(_DWORD *)(a1 + 88)
      && *(unsigned __int16 *)(v6 + 92) == *(unsigned __int16 *)(a1 + 92)
      && *(unsigned __int16 *)(v6 + 94) == *(unsigned __int16 *)(a1 + 94))
    {
      break;
    }
  }
  return result;
}

unint64_t sub_1B1DC7514(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1B1DC75B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X8 }
  return a3 & ~v4;
}

unint64_t sub_1B1DC7CFC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1B1B9DAD4(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1B222901C();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1B222901C();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1B1DC7E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1B1DC7EA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v11 = ~v3;
    v5 = *a1;
    v6 = a1[1];
    do
    {
      v7 = *(_QWORD *)(v13 + 48) + 40 * v4;
      v8 = *(unsigned __int8 *)(v7 + 16);
      v9 = *(_QWORD *)v7 == v5 && *(_QWORD *)(v7 + 8) == v6;
      if (v9 || (sub_1B2229D24() & 1) != 0)
        __asm { BR              X8 }
      v4 = (v4 + 1) & v11;
    }
    while (((*(_QWORD *)(v12 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B1DC834C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v11 = *(_QWORD *)(v5 + 48);
    v12 = v11 + 32 * v8;
    v13 = *(_QWORD *)(v12 + 16) == a3 && *(_QWORD *)(v12 + 24) == a4;
    if (!v13 && (sub_1B2229D24() & 1) == 0)
    {
      v14 = ~v7;
      do
      {
        v8 = (v8 + 1) & v14;
        if (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          break;
        v15 = v11 + 32 * v8;
        v16 = *(_QWORD *)(v15 + 16) == a3 && *(_QWORD *)(v15 + 24) == a4;
      }
      while (!v16 && (sub_1B2229D24() & 1) == 0);
    }
  }
  return v8;
}

unint64_t sub_1B1DC842C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v11 = *(_QWORD *)(v5 + 48);
    v12 = (_QWORD *)(v11 + 32 * v8);
    v13 = *v12 == a1 && v12[1] == a2;
    if (!v13 && (sub_1B2229D24() & 1) == 0)
    {
      v14 = ~v7;
      do
      {
        v8 = (v8 + 1) & v14;
        if (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          break;
        v15 = (_QWORD *)(v11 + 32 * v8);
        v16 = *v15 == a1 && v15[1] == a2;
      }
      while (!v16 && (sub_1B2229D24() & 1) == 0);
    }
  }
  return v8;
}

unint64_t sub_1B1DC850C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1B222874C();
    v8 = v7;
    if (v6 == sub_1B222874C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1B222874C();
          v15 = v14;
          if (v13 == sub_1B222874C() && v15 == v16)
            break;
          v18 = sub_1B2229D24();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

_QWORD *sub_1B1DC8680(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  size_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1DCBF88();
  v2 = (_QWORD *)swift_allocObject();
  v3 = j__malloc_size(v2);
  v2[2] = v1;
  v2[3] = 2 * ((uint64_t)(v3 - 32) / 144);
  sub_1B1F7A7B4(&v5, (uint64_t)(v2 + 4), v1);
  swift_retain();
  swift_release();
  return v2;
}

uint64_t sub_1B1DC8738(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  size_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = MEMORY[0x1E0DEE9D8];
  if (a2)
  {
    if (a2 <= 0)
    {
      *(_BYTE *)(MEMORY[0x1E0DEE9D8] + 32) = *a1 & 1;
      v6 = v2 + 32;
    }
    else
    {
      sub_1B1A02758(0, qword_1EEF5E940, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v2 = swift_allocObject();
      v5 = j__malloc_size((const void *)v2);
      *(_QWORD *)(v2 + 16) = a2;
      *(_QWORD *)(v2 + 24) = 2 * v5 - 64;
      *(_BYTE *)(v2 + 32) = *a1 & 1;
      v6 = v2 + 32;
      if (a2 == 1)
        return v2;
    }
    v7 = 1;
    do
    {
      *(_BYTE *)(v6 + v7) = (*(_QWORD *)&a1[(v7 >> 3) & 0xFFFFFFFFFFFFF8] >> v7) & 1;
      ++v7;
    }
    while (a2 != v7);
  }
  return v2;
}

uint64_t sub_1B1DC8810(char *a1, int64_t a2)
{
  char *v4;
  size_t v5;
  char *v6;
  uint64_t result;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 > 0)
  {
    sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAD00, (uint64_t)&type metadata for AccessControl, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = (char *)swift_allocObject();
    v5 = j__malloc_size(v4);
    *((_QWORD *)v4 + 2) = a2;
    *((_QWORD *)v4 + 3) = 2 * v5 - 64;
    v6 = v4 + 32;
    if (&v4[a2 + 32] <= a1 || v6 >= &a1[a2])
    {
      memcpy(v6, a1, a2);
      return (uint64_t)v4;
    }
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DC8944(char *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 > 0)
  {
    sub_1B1DCBF30(0, (unint64_t *)&qword_1ED4BAE50, (unint64_t *)&qword_1ED4BA1A0, (unint64_t *)&qword_1ED4BA190);
    v4 = 16 * a2;
    v5 = (char *)swift_allocObject();
    v6 = j__malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 17;
    *((_QWORD *)v5 + 2) = a2;
    *((_QWORD *)v5 + 3) = 2 * (v7 >> 4);
    v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 16 * a2);
      return (uint64_t)v5;
    }
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

_QWORD *sub_1B1DC8A90(uint64_t a1)
{
  return sub_1B1DC957C(a1, (void (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1B19F68F4);
}

_QWORD *sub_1B1DC8A9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1DCC080();
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 104);
  sub_1B19F68F8(&v6, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1B19F8D30();
  return v3;
}

uint64_t sub_1B1DC8B7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (a4 >> 1 == a3)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= 0)
  {
    if (v5 < 0)
      goto LABEL_16;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = (_QWORD *)swift_allocObject();
    v9 = j__malloc_size(v6);
    v10 = v9 - 32;
    if (v9 < 32)
      v10 = v9 - 17;
    v6[2] = v5;
    v6[3] = 2 * (v10 >> 4);
  }
  if (a2 + 16 * a3 >= (unint64_t)&v6[2 * v5 + 4] || (unint64_t)(v6 + 4) >= a2 + 16 * v4)
  {
    swift_arrayInitWithCopy();
    return (uint64_t)v6;
  }
LABEL_16:
  result = sub_1B2229700();
  __break(1u);
  return result;
}

_QWORD *sub_1B1DC8CE8(unint64_t a1)
{
  return sub_1B1DC9254(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1B19F7F78);
}

_QWORD *sub_1B1DC8CF4(uint64_t a1)
{
  return sub_1B1DC8D0C(a1, (void (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1B19F6B94);
}

_QWORD *sub_1B1DC8D00(uint64_t a1)
{
  return sub_1B1DC8D0C(a1, (void (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1B19F6D80);
}

_QWORD *sub_1B1DC8D0C(uint64_t a1, void (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAFE0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = (_QWORD *)swift_allocObject();
  v6 = j__malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 25;
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  a2(&v9, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1B19F8D30();
  return v5;
}

uint64_t sub_1B1DC8DFC(char *a1, uint64_t a2)
{
  char *v4;
  size_t v5;
  char *v6;
  uint64_t result;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 > 0)
  {
    sub_1B1791524(0, &qword_1ED4BAD40, (uint64_t (*)(uint64_t))sub_1B1C71D14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = (char *)swift_allocObject();
    v5 = j__malloc_size(v4);
    *((_QWORD *)v4 + 2) = a2;
    *((_QWORD *)v4 + 3) = 2 * ((uint64_t)(v5 - 32) / 24);
    v6 = v4 + 32;
    if (&v4[24 * a2 + 32] <= a1 || v6 >= &a1[24 * a2])
    {
      memcpy(v6, a1, 24 * a2);
      return (uint64_t)v4;
    }
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DC8F50(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B1DC90F0(a1, a2, a3, a4, (unint64_t *)&qword_1EEF5CB90, (uint64_t)&type metadata for TypeConstraint);
}

uint64_t sub_1B1DC8F64(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (a4 >> 1 == a3)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= 0)
  {
    if (v5 < 0)
      goto LABEL_16;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1B1C71E04();
    v6 = (_QWORD *)swift_allocObject();
    v9 = j__malloc_size(v6);
    v10 = v9 - 32;
    if (v9 < 32)
      v10 = v9 - 17;
    v6[2] = v5;
    v6[3] = 2 * (v10 >> 4);
  }
  if (a2 + 16 * a3 >= (unint64_t)&v6[2 * v5 + 4] || (unint64_t)(v6 + 4) >= a2 + 16 * v4)
  {
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayInitWithCopy();
    return (uint64_t)v6;
  }
LABEL_16:
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DC90DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B1DC90F0(a1, a2, a3, a4, &qword_1EEF5E8F0, (uint64_t)&type metadata for AnyType);
}

uint64_t sub_1B1DC90F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int64_t v11;
  uint64_t v12;
  uint64_t result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (a4 >> 1 == a3)
    return MEMORY[0x1E0DEE9D8];
  if (v7 <= 0)
  {
    if (v7 < 0)
      goto LABEL_16;
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1B1A02758(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v8);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v8[2] = v7;
    v8[3] = 2 * (v12 >> 3);
  }
  if (a2 + 8 * a3 >= (unint64_t)&v8[v7 + 4] || (unint64_t)(v8 + 4) >= a2 + 8 * v6)
  {
    swift_arrayInitWithCopy();
    return (uint64_t)v8;
  }
LABEL_16:
  result = sub_1B2229700();
  __break(1u);
  return result;
}

_QWORD *sub_1B1DC9254(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1B22296AC();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v4 <= 0)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAFE0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = (_QWORD *)swift_allocObject();
    v6 = j__malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 25;
    v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  a2(v5 + 4, v4, a1);
  swift_bridgeObjectRelease();
  return v5;
}

_QWORD *sub_1B1DC9360(uint64_t a1)
{
  return sub_1B1DC9398(a1, (unint64_t *)&unk_1EEF5CBE0, (uint64_t)&type metadata for GraphScriptingConfig.EvaluationMode, (void (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1B19F6F6C);
}

_QWORD *sub_1B1DC937C(uint64_t a1)
{
  return sub_1B1DC9398(a1, (unint64_t *)&qword_1ED4BAE30, (uint64_t)&type metadata for Entity, (void (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1B19F70FC);
}

_QWORD *sub_1B1DC9398(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1A02758(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = (_QWORD *)swift_allocObject();
  v8 = j__malloc_size(v7);
  v9 = v8 - 32;
  if (v8 < 32)
    v9 = v8 - 25;
  v7[2] = v4;
  v7[3] = 2 * (v9 >> 3);
  a4(&v11, v7 + 4, v4, a1);
  swift_bridgeObjectRetain();
  sub_1B19F8D30();
  return v7;
}

_QWORD *sub_1B1DC9470(uint64_t a1)
{
  return sub_1B1DC9398(a1, (unint64_t *)&qword_1ED4BAE30, (uint64_t)&type metadata for Entity, (void (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1B19F7280);
}

_QWORD *sub_1B1DC948C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1791524(0, &qword_1EEF5E8C0, (uint64_t (*)(uint64_t))sub_1B1DCC018, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  sub_1B19F7400(&v6, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1B19F8D30();
  return v3;
}

_QWORD *sub_1B1DC957C(uint64_t a1, void (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = (_QWORD *)swift_allocObject();
  v6 = j__malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 17;
  v5[2] = v2;
  v5[3] = 2 * (v7 >> 4);
  a2(&v9, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1B19F8D30();
  return v5;
}

_QWORD *sub_1B1DC9664(unint64_t a1)
{
  return sub_1B1DC9254(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1B19F7CC8);
}

uint64_t sub_1B1DC9670(char *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 > 0)
  {
    sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAF10, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = 4 * a2;
    v5 = (char *)swift_allocObject();
    v6 = j__malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 29;
    *((_QWORD *)v5 + 2) = a2;
    *((_QWORD *)v5 + 3) = 2 * (v7 >> 2);
    v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 4 * a2);
      return (uint64_t)v5;
    }
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DC97B4(char *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 > 0)
  {
    sub_1B1791524(0, (unint64_t *)&qword_1ED4BAF90, (uint64_t (*)(uint64_t))sub_1B1791068, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = 16 * a2;
    v5 = (char *)swift_allocObject();
    v6 = j__malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 17;
    *((_QWORD *)v5 + 2) = a2;
    *((_QWORD *)v5 + 3) = 2 * (v7 >> 4);
    v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 16 * a2);
      return (uint64_t)v5;
    }
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DC98F8(char *a1, uint64_t a2)
{
  char *v4;
  size_t v5;
  char *v6;
  uint64_t result;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 > 0)
  {
    sub_1B1A02758(0, &qword_1EEF5E8B8, (uint64_t)&type metadata for CurveTangents, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = (char *)swift_allocObject();
    v5 = j__malloc_size(v4);
    *((_QWORD *)v4 + 2) = a2;
    *((_QWORD *)v4 + 3) = 2 * ((uint64_t)(v5 - 32) / 24);
    v6 = v4 + 32;
    if (&v4[24 * a2 + 32] <= a1 || v6 >= &a1[24 * a2])
    {
      memcpy(v6, a1, 24 * a2);
      return (uint64_t)v4;
    }
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

_QWORD *sub_1B1DC9A4C(unint64_t a1)
{
  return sub_1B1DC9254(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1B19F7CA4);
}

uint64_t sub_1B1DC9A58()
{
  return sub_1B1DC9AA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C62F18);
}

uint64_t sub_1B1DC9A64()
{
  return sub_1B1DC9AA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C631A0);
}

uint64_t sub_1B1DC9A70()
{
  return sub_1B1DC9AA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C63D98);
}

uint64_t sub_1B1DC9A7C()
{
  return sub_1B1DC9AA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C65E78);
}

uint64_t sub_1B1DC9A88()
{
  return sub_1B1DC9AA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C68894);
}

uint64_t sub_1B1DC9A94()
{
  return sub_1B1DC9AA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C6899C);
}

uint64_t sub_1B1DC9AA0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_1B1DC9AF4(uint64_t a1)
{
  return sub_1B1DC9B3C(a1, (uint64_t (*)(BOOL))sub_1B1C62F18);
}

uint64_t sub_1B1DC9B00(uint64_t a1)
{
  return sub_1B1DC9B3C(a1, (uint64_t (*)(BOOL))sub_1B1C631A0);
}

uint64_t sub_1B1DC9B0C(uint64_t a1)
{
  return sub_1B1DC9B3C(a1, (uint64_t (*)(BOOL))sub_1B1C63D98);
}

uint64_t sub_1B1DC9B18(uint64_t a1)
{
  return sub_1B1DC9B3C(a1, (uint64_t (*)(BOOL))sub_1B1C65E78);
}

uint64_t sub_1B1DC9B24(uint64_t a1)
{
  return sub_1B1DC9B3C(a1, (uint64_t (*)(BOOL))sub_1B1C68894);
}

uint64_t sub_1B1DC9B30(uint64_t a1)
{
  return sub_1B1DC9B3C(a1, (uint64_t (*)(BOOL))sub_1B1C6899C);
}

uint64_t sub_1B1DC9B3C(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_1B1DC9B80(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

__n128 sub_1B1DC9B98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __n128 result;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1 + 1;
  v4 = v3 + 72 * a1;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 80) = v5;
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(a2 + 64);
  result = *(__n128 *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a2;
  *(__n128 *)(v4 + 48) = result;
  return result;
}

uint64_t sub_1B1DC9BC8(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_QWORD *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_1B1DC9BE4(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_QWORD *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_1B1DC9BFC(uint64_t result, __n128 a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(__n128 *)(v3 + 16 * result + 32) = a2;
  return result;
}

__n128 sub_1B1DC9C14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __n128 result;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1 + 1;
  v4 = v3 + 112 * a1;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 112) = v5;
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a2 + 96);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 48) = v6;
  result = *(__n128 *)(a2 + 48);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 32);
  *(__n128 *)(v4 + 80) = result;
  return result;
}

unint64_t sub_1B1DC9C4C(uint64_t a1, __n128 *a2, unint64_t a3)
{
  return sub_1B1BF942C(a3, *a2);
}

unint64_t sub_1B1DC9C7C(uint64_t a1, __n128 *a2, unint64_t a3)
{
  return sub_1B1BF95B8(a3, *a2);
}

_QWORD *sub_1B1DC9CAC(_QWORD *a1, __n128 *a2, unint64_t a3)
{
  return sub_1B1F568C0(a1, a3, *a2, a2[1], a2[2], a2[3]);
}

_QWORD *sub_1B1DC9CD0(_QWORD *a1, __n128 *a2, unint64_t a3)
{
  return sub_1B1F56A34(a1, a3, *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1B1DC9CF4(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  id v17;

  v14 = OBJC_IVAR____TtC3VFX13EntityManager_replicationStream;
  v15 = *(_QWORD *)(a10 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
  if (v15
    || (type metadata accessor for ReplicationStream(),
        swift_allocObject(),
        *(_QWORD *)(a10 + v14) = sub_1B1E317AC(),
        result = swift_release(),
        (v15 = *(_QWORD *)(a10 + v14)) != 0))
  {
    swift_weakAssign();
    *(_QWORD *)(v15 + 24) = a2;
    *(_QWORD *)(v15 + 32) = &off_1E6383958;
    swift_retain();
    v17 = a2;
    swift_unknownObjectRelease();
    *(_BYTE *)(v15 + 80) = a3 & 1;
    *(_QWORD *)(v15 + 56) = a5;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(v15 + 72) = a7;
    swift_unknownObjectWeakAssign();
    *(_BYTE *)(v15 + 81) = a8 & 1;
    *(_QWORD *)(v15 + 88) = a9;
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1DC9E2C(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v5;

  if (a4 >> 1 == a3)
  {
    return 0;
  }
  else if (*(_DWORD *)(a2 + 4 * a3) == a1)
  {
    return a3;
  }
  else
  {
    while ((a4 >> 1) - 1 != a3)
    {
      v5 = *(_DWORD *)(a2 + 4 + 4 * a3++);
      if (v5 == a1)
        return a3;
    }
    return 0;
  }
}

uint64_t sub_1B1DC9E90(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;

  v2 = MEMORY[0x1E0DEE9D8];
  if (!a2)
    return v2;
  if (a2 <= 0)
  {
    *(_OWORD *)(MEMORY[0x1E0DEE9D8] + 32) = *a1;
    *(_OWORD *)(v2 + 48) = a1[1];
    *(_OWORD *)(v2 + 64) = a1[2];
    goto LABEL_10;
  }
  sub_1B1DCBF30(0, (unint64_t *)&qword_1ED4BAD80, (unint64_t *)&qword_1ED4B8C90, (unint64_t *)&qword_1ED4B8C70);
  v2 = swift_allocObject();
  v5 = j__malloc_size((const void *)v2);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = 2 * (v6 >> 4);
  *(_OWORD *)(v2 + 32) = *a1;
  if (a2 != 1)
  {
    *(_OWORD *)(v2 + 48) = a1[1];
    if (a2 != 2)
    {
      *(_OWORD *)(v2 + 64) = a1[2];
      if (a2 != 3)
      {
LABEL_10:
        v7 = (_OWORD *)(v2 + 80);
        v8 = a2 - 3;
        if ((unint64_t)(a2 - 3) >= 6
          && (v7 < &a1[a2] ? (v9 = (unint64_t)(a1 + 3) >= 16 * a2 + v2 + 32) : (v9 = 1), v9))
        {
          v10 = 0;
          v11 = v8 | 3;
          v7 += v8 & 0xFFFFFFFFFFFFFFFCLL;
          v12 = v8 & 0xFFFFFFFFFFFFFFFCLL;
          do
          {
            v13 = (_OWORD *)(v2 + v10 * 16);
            v14 = a1[v10 + 4];
            v16 = a1[v10 + 5];
            v15 = a1[v10 + 6];
            v13[5] = a1[v10 + 3];
            v13[6] = v14;
            v13[7] = v16;
            v13[8] = v15;
            v10 += 4;
            v12 -= 4;
          }
          while (v12);
          if (v8 == (v8 & 0xFFFFFFFFFFFFFFFCLL))
            return v2;
        }
        else
        {
          v11 = 3;
        }
        v17 = a2 - v11;
        v18 = &a1[v11];
        do
        {
          v19 = *v18++;
          *v7++ = v19;
          --v17;
        }
        while (v17);
      }
    }
  }
  return v2;
}

uint64_t sub_1B1DCA004(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t i;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  _BYTE v29[32];
  _BYTE v30[32];
  _BYTE v31[32];
  _BYTE v32[32];
  _QWORD v33[7];

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v8 = result;
    v9 = result + 32;
    swift_bridgeObjectRetain();
    sub_1B1792810(v9, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1B1DCC268);
    sub_1B19FC2D0((uint64_t)v32, (uint64_t)v31);
    sub_1B19FC2D0((uint64_t)v33, (uint64_t)v30);
    v10 = *a3;
    v12 = sub_1B1DC3D30((uint64_t)v31);
    v13 = v11;
    v14 = *(_QWORD *)(v10 + 24);
    v15 = *(_QWORD *)(v10 + 16) + ((v11 & 1) == 0);
    v33[6] = v4;
    if (v14 < v15)
    {
      sub_1B1E9CD28(v15, a2 & 1);
      v16 = sub_1B1DC3D30((uint64_t)v31);
      if ((v13 & 1) != (v17 & 1))
      {
LABEL_21:
        result = sub_1B2229FC4();
        __break(1u);
        return result;
      }
      v12 = v16;
      if ((v13 & 1) == 0)
        goto LABEL_11;
LABEL_8:
      sub_1B1A00060(*(_QWORD *)(*a3 + 56) + 32 * v12, (uint64_t)v29);
      sub_1B19FC350((uint64_t)v30);
      sub_1B19FC350((uint64_t)v31);
      sub_1B1D8EB3C((uint64_t)v29, *(_QWORD *)(*a3 + 56) + 32 * v12);
      v18 = v5 - 1;
      if (!v18)
        return swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_8;
    }
    else
    {
      sub_1B1EAEBA4();
      if ((v13 & 1) != 0)
        goto LABEL_8;
    }
LABEL_11:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    sub_1B19FC2D0((uint64_t)v31, v19[6] + 32 * v12);
    sub_1B19FC2D0((uint64_t)v30, v19[7] + 32 * v12);
    ++v19[2];
    v18 = v5 - 1;
    if (!v18)
      return swift_bridgeObjectRelease();
LABEL_14:
    for (i = v8 + 96; ; i += 64)
    {
      sub_1B1792810(i, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1B1DCC268);
      sub_1B19FC2D0((uint64_t)v32, (uint64_t)v31);
      sub_1B19FC2D0((uint64_t)v33, (uint64_t)v30);
      v23 = *a3;
      v24 = sub_1B1DC3D30((uint64_t)v31);
      v26 = v25;
      if (*(_QWORD *)(v23 + 24) < (int64_t)(*(_QWORD *)(v23 + 16) + ((v25 & 1) == 0)))
      {
        sub_1B1E9CD28(*(_QWORD *)(v23 + 16) + ((v25 & 1) == 0), 1);
        v24 = sub_1B1DC3D30((uint64_t)v31);
        if ((v26 & 1) != (v27 & 1))
          break;
      }
      if ((v26 & 1) != 0)
      {
        v28 = 32 * v24;
        sub_1B1A00060(*(_QWORD *)(*a3 + 56) + 32 * v24, (uint64_t)v29);
        sub_1B19FC350((uint64_t)v30);
        sub_1B19FC350((uint64_t)v31);
        sub_1B1D8EB3C((uint64_t)v29, *(_QWORD *)(*a3 + 56) + v28);
      }
      else
      {
        v21 = (_QWORD *)*a3;
        *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
        v22 = 32 * v24;
        sub_1B19FC2D0((uint64_t)v31, v21[6] + 32 * v24);
        sub_1B19FC2D0((uint64_t)v30, v21[7] + v22);
        ++v21[2];
      }
      if (!--v18)
        return swift_bridgeObjectRelease();
    }
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1B1DCA2FC(char *a1, int a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  int v16;
  unint64_t v17;
  void (*v18)(uint64_t, int, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t ErrorValue;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _DWORD v44[4];
  void (*v45)(uint64_t, int, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];

  v49 = a3;
  v47 = type metadata accessor for BundleInfo();
  MEMORY[0x1E0C80A78](v47, v7);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)v44 - v12;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B21218F8();
  v15 = v14;
  v16 = a2 ^ 1;
  v14[16] = a2 ^ 1;
  v14[21] = 1;
  v14[19] = a2;
  v14[22] = a2;
  v14[23] = 1;
  v48 = v3;
  v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  LOBYTE(v52[0]) = 1;
  v18 = sub_1B2122140((uint64_t)v9, a1, 0, v17, 0x100000000uLL);
  if (v4)
    return swift_release();
  v44[3] = v16;
  v45 = v18;
  v46 = v19;
  v21 = (uint64_t)v13;
  sub_1B1A025EC((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for BundleInfo);
  v22 = v47;
  v23 = *(_QWORD *)(v21 + *(int *)(v47 + 24));
  *(_QWORD *)(v48 + OBJC_IVAR____TtC3VFX8VFXScene__version) = v23;
  v52[0] = sub_1B222805C();
  v52[1] = v24;
  sub_1B2228890();
  v25 = v52[1];
  *(_QWORD *)(v17 + 16) = v52[0];
  *(_QWORD *)(v17 + 24) = v25;
  swift_bridgeObjectRelease();
  if (v49)
  {
    v44[2] = *(unsigned __int8 *)(v21 + *(int *)(v22 + 28));
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v23);
    strcpy((char *)v52, "version");
    v52[1] = 0xE700000000000000;
    v27 = sub_1B2229F94();
    v28 = v49;
    objc_msgSend(v49, sel___swift_setObject_forKeyedSubscript_, v26, v27);

    swift_unknownObjectRelease();
    v29 = (void *)sub_1B2228230();
    strcpy((char *)v52, "documentUUID");
    BYTE5(v52[1]) = 0;
    HIWORD(v52[1]) = -5120;
    objc_msgSend(v28, sel___swift_setObject_forKeyedSubscript_, v29, sub_1B2229F94());

    swift_unknownObjectRelease();
    v30 = (void *)sub_1B2228BC0();
    v52[0] = 0xD000000000000014;
    v52[1] = 0x80000001B233BFF0;
    objc_msgSend(v28, sel___swift_setObject_forKeyedSubscript_, v30, sub_1B2229F94());

    swift_unknownObjectRelease();
    v31 = v28;
    if (*(_QWORD *)(*(_QWORD *)(v48 + OBJC_IVAR____TtC3VFX8VFXScene_loader) + 24))
    {
      ErrorValue = swift_getErrorValue();
      v48 = v21;
      v33 = v51;
      v34 = *(_QWORD *)(v51 - 8);
      v35 = MEMORY[0x1E0C80A78](ErrorValue, v50);
      v37 = (char *)v44 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v34 + 16))(v37, v35);
      v38 = sub_1B2229D0C();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
      v21 = v48;
    }
    else
    {
      v38 = 0;
    }
    strcpy((char *)v52, "warnings");
    BYTE1(v52[1]) = 0;
    WORD1(v52[1]) = 0;
    HIDWORD(v52[1]) = -402653184;
    objc_msgSend(v31, sel___swift_setObject_forKeyedSubscript_, v38, sub_1B2229F94());
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v39 = (void *)sub_1B2228BC0();
    strcpy((char *)v52, "precompiled");
    HIDWORD(v52[1]) = -352321536;
    objc_msgSend(v31, sel___swift_setObject_forKeyedSubscript_, v39, sub_1B2229F94());

    swift_unknownObjectRelease();
    v40 = swift_allocObject();
    v41 = v46;
    *(_QWORD *)(v40 + 16) = v45;
    *(_QWORD *)(v40 + 24) = v41;
    v52[0] = sub_1B1DCC2C8;
    v52[1] = v40;
    sub_1B1DC3914();
    swift_retain();
    v42 = sub_1B2229F94();
    strcpy((char *)v52, "initializer");
    HIDWORD(v52[1]) = -352321536;
    objc_msgSend(v31, sel___swift_setObject_forKeyedSubscript_, v42, sub_1B2229F94());
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v43 = *((_QWORD *)v15 + 4);
    v52[0] = 0xD000000000000014;
    v52[1] = 0x80000001B23314C0;
    swift_retain();
    objc_msgSend(v31, sel___swift_setObject_forKeyedSubscript_, v43, sub_1B2229F94());
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return sub_1B1A04628(v21, (uint64_t (*)(_QWORD))type metadata accessor for BundleInfo);
  }
  else
  {
    sub_1B1A04628(v21, (uint64_t (*)(_QWORD))type metadata accessor for BundleInfo);
    swift_release();
    return swift_release();
  }
}

void sub_1B1DCA88C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1B1DCA8EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  sub_1B19FC264(a1, v2);
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t))(*(_QWORD *)(v3 + 8) + 96))(v1, &off_1E6376550, v2);
}

uint64_t sub_1B1DCA93C(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1E32E1C(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1B1DCA95C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1B1DCA9A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4B72B0;
  if (!qword_1ED4B72B0)
  {
    sub_1B1791524(255, (unint64_t *)&qword_1ED4BA480, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4B72B0);
  }
  return result;
}

uint64_t sub_1B1DCAA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1D345A0(0, (unint64_t *)&qword_1ED4B8C80, (unint64_t *)&qword_1ED4B8C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VFXBidirectionalRemapTable()
{
  return objc_opt_self();
}

id _s3VFX8VFXSceneC24cloneAndSetupReplication10modelWorldAA26VFXBidirectionalRemapTableCSo8VFXWorldC_tFZ_0(void *a1)
{
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  id v24;

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFXBidirectionalRemapTable()), sel_init);
  v3 = (char *)objc_msgSend(a1, sel_scene);
  v24 = objc_msgSend(a1, sel_worldRef);
  v11 = (char *)(id)sub_1B187A9C4((uint64_t)v24, v4, v5, v6, v7, v8, v9, v10);
  v12 = OBJC_IVAR____TtC3VFX8VFXScene_entityManager;
  v23 = **(_QWORD **)(*(_QWORD *)&v11[OBJC_IVAR____TtC3VFX8VFXScene_entityManager]
                    + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  v13 = *(_QWORD *)&v3[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1B1B95EBC(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for RemapContext();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 24) = sub_1B1B95EBC(v14);
  swift_retain();
  v17 = sub_1B1B7DC84(v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v17;
  *(_BYTE *)(v16 + 16) = 0;
  swift_retain();
  swift_retain();
  sub_1B1DAD9B0(v13, v13, v16);
  swift_release();
  swift_release();
  sub_1B1F07378(v16, v13, 0x100000000uLL, 0, v23);
  swift_release();
  swift_retain();
  v18 = swift_bridgeObjectRetain();
  sub_1B1E33210(v18);
  swift_release();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(a1, sel_worldRef);
  v20 = *(_QWORD *)&v11[v12];
  swift_retain();
  sub_1B1DBE6C8((uint64_t)v11, (uint64_t)v2, 0, 1, v20, (uint64_t)&off_1E637A6B0, (uint64_t)v19);
  swift_release();
  sub_1B1DBE6C8((uint64_t)v3, (uint64_t)v2, 1, 0, 0, 0, 0);

  swift_release();
  v21 = *(_QWORD *)&v11[v12];
  swift_retain();
  swift_unknownObjectRelease();
  *(_BYTE *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  swift_release();
  return v2;
}

uint64_t sub_1B1DCAD08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  if (a1)
  {
    swift_unknownObjectRetain();
    swift_getObjectType();
    v4 = swift_conformsToProtocol2();
    if (v4)
      v5 = v4;
    else
      v5 = 0;
    if (v4)
      v6 = a1;
    else
      v6 = 0;
    if (v6)
      goto LABEL_11;
    swift_unknownObjectRelease();
  }
  v5 = 0;
LABEL_11:
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
  if (v7)
  {
    *(_QWORD *)(v7 + 56) = v5;
    swift_unknownObjectWeakAssign();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1B1DCADA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  if (a1)
  {
    swift_unknownObjectRetain();
    swift_getObjectType();
    v4 = swift_conformsToProtocol2();
    if (v4)
      v5 = v4;
    else
      v5 = 0;
    if (v4)
      v6 = a1;
    else
      v6 = 0;
    if (v6)
      goto LABEL_11;
    swift_unknownObjectRelease();
  }
  v5 = 0;
LABEL_11:
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
  if (v7)
  {
    *(_QWORD *)(v7 + 72) = v5;
    swift_unknownObjectWeakAssign();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1B1DCAE38()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B1DCAE5C()
{
  uint64_t v0;

  sub_1B1DBEB28(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B1DCAE64(uint64_t a1)
{
  return sub_1B1DCAE9C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, __n128, __n128, __n128, __n128))sub_1B1F568C0);
}

uint64_t sub_1B1DCAE80(uint64_t a1)
{
  return sub_1B1DCAE9C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, __n128, __n128, __n128, __n128))sub_1B1F56A34);
}

uint64_t sub_1B1DCAE9C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, __n128, __n128, __n128, __n128))
{
  _QWORD *v2;

  return a2(a1, v2[3], v2[4], *(__n128 *)v2[2], *(__n128 *)(v2[2] + 16), *(__n128 *)(v2[2] + 32), *(__n128 *)(v2[2] + 48));
}

_QWORD *sub_1B1DCAEC4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1F57BFC(a1, *(_QWORD *)(v1 + 24));
}

_QWORD *sub_1B1DCAEDC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1F57D30(a1, *(_QWORD *)(v1 + 24), **(float **)(v1 + 16));
}

uint64_t sub_1B1DCAEFC(uint64_t a1)
{
  return sub_1B1DCAF34(a1, (uint64_t (*)(_QWORD, __n128))sub_1B1BF95B8);
}

uint64_t sub_1B1DCAF18(uint64_t a1)
{
  return sub_1B1DCAF34(a1, (uint64_t (*)(_QWORD, __n128))sub_1B1BF942C);
}

uint64_t sub_1B1DCAF34(uint64_t a1, uint64_t (*a2)(_QWORD, __n128))
{
  uint64_t v2;

  return a2(*(_QWORD *)(v2 + 24), *(__n128 *)*(_QWORD *)(v2 + 16));
}

uint64_t sub_1B1DCAF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t);
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  void (*v36)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t);
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v12 = *(_QWORD *)(a2 + 32);
  v13 = swift_conformsToProtocol2();
  if (v13)
    v14 = v13;
  else
    v14 = 0;
  if (!v13)
    v12 = 0;
  if (!v12)
    goto LABEL_16;
  swift_unownedRetainStrong();
  sub_1B1FDE8CC(v12, v14, *(_QWORD *)(a2 + 24), (uint64_t)v37);
  swift_release();
  v15 = v38;
  if (!v38)
  {
    sub_1B1DCC200((uint64_t)v37, (unint64_t *)&qword_1ED4B8C80, (unint64_t *)&qword_1ED4B8C70);
LABEL_16:
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    goto LABEL_17;
  }
  v16 = v39;
  v17 = sub_1B19FA070(v37, v38);
  *((_QWORD *)&v44 + 1) = v15;
  v45 = *(_QWORD *)(v16 + 8);
  v18 = sub_1B1A137F4((uint64_t *)&v43);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v18, v17, v15);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v37);
  if (!*((_QWORD *)&v44 + 1))
  {
LABEL_17:
    sub_1B1DCC200((uint64_t)&v43, (unint64_t *)&qword_1EEF5E8F8, (unint64_t *)&qword_1ED4BA190);
    v40 = 0u;
    v41 = 0u;
    v42 = 0;
    goto LABEL_18;
  }
  sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BA190);
  sub_1B1AEC268(0, (unint64_t *)&unk_1ED4B8538);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    goto LABEL_18;
  }
  if (!*((_QWORD *)&v41 + 1))
  {
LABEL_18:
    sub_1B1DCC200((uint64_t)&v40, (unint64_t *)&unk_1EEF5E900, (unint64_t *)&unk_1ED4B8538);
    return 0;
  }
  sub_1B1A02518(&v40, (uint64_t)&v43);
  v19 = *((_QWORD *)&v44 + 1);
  v20 = v45;
  sub_1B19FA070(&v43, *((uint64_t *)&v44 + 1));
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 40))(a3, a4, a5, a6, v19);
  if (!v21)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
    return 0;
  }
  v22 = v21;
  v23 = *(unsigned int *)(a2 + 24);
  v24 = *(unsigned int *)(a2 + 28);
  v25 = *(_QWORD *)(a2 + 16);
  swift_unownedRetainStrong();
  swift_release();
  if (*(ValueMetadata **)(v22 + 40) == &type metadata for Entity)
  {
    swift_unknownObjectRetain();
    objc_opt_self();
    v30 = (void *)swift_dynamicCastObjCClass();
    if (!v30)
    {
      swift_unknownObjectRelease();
      if (*(_QWORD *)(v22 + 80))
        goto LABEL_14;
      goto LABEL_27;
    }
    v31 = (char *)objc_msgSend(v30, sel_entityObject);
    if (!v31)
    {
      if (*(_QWORD *)(v22 + 80))
      {
        v34 = *(_QWORD *)(v22 + 88);
        ObjectType = swift_getObjectType();
        *((_QWORD *)&v41 + 1) = &type metadata for Entity;
        *(_QWORD *)&v40 = 0xFFFFFFFFLL;
LABEL_34:
        v36 = *(void (**)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(v34 + 16);
        swift_unknownObjectRetain();
        v36(v23 | (v24 << 32), v25, &v40, ObjectType, v34);
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_35;
      }
LABEL_37:
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_36;
    }
    v32 = v31;
    v33 = *(_QWORD *)&v31[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
    if (!swift_weakLoadStrong())
    {
      if (*(_QWORD *)&v32[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager])
      {

LABEL_32:
        if (*(_QWORD *)(v22 + 80))
        {
          v34 = *(_QWORD *)(v22 + 88);
          ObjectType = swift_getObjectType();
          *((_QWORD *)&v41 + 1) = &type metadata for Entity;
          *(_QWORD *)&v40 = v33;
          goto LABEL_34;
        }
        goto LABEL_37;
      }
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B1DA6CC4(0x746C7561666544, 0xE700000000000000, 1, 0);
    }

    swift_release();
    goto LABEL_32;
  }
  if (*(_QWORD *)(v22 + 80))
  {
LABEL_14:
    v26 = *(_QWORD *)(v22 + 88);
    v27 = swift_getObjectType();
    *((_QWORD *)&v41 + 1) = swift_getObjectType();
    *(_QWORD *)&v40 = a1;
    v28 = *(void (**)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(v26 + 16);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v28(v23 | (v24 << 32), v25, &v40, v27, v26);
    swift_release();
LABEL_35:
    swift_unknownObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v40);
    goto LABEL_36;
  }
LABEL_27:
  swift_release();
LABEL_36:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
  return 1;
}

uint64_t sub_1B1DCB3D8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t ObjectType;
  void (*v28)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v31;
  id (*v32)(void *, _BYTE *);
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  __int128 v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v12 = a1[4];
  v13 = swift_conformsToProtocol2();
  if (v13)
    v14 = v13;
  else
    v14 = 0;
  if (!v13)
    v12 = 0;
  if (!v12)
    goto LABEL_15;
  swift_unownedRetainStrong();
  sub_1B1FDE8CC(v12, v14, a1[3], (uint64_t)&v44);
  swift_release();
  v15 = *((_QWORD *)&v45 + 1);
  if (!*((_QWORD *)&v45 + 1))
  {
    sub_1B1DCC200((uint64_t)&v44, (unint64_t *)&qword_1ED4B8C80, (unint64_t *)&qword_1ED4B8C70);
LABEL_15:
    v49 = 0;
    v47 = 0u;
    v48 = 0u;
    goto LABEL_16;
  }
  v16 = v46;
  v17 = sub_1B19FA070(&v44, *((uint64_t *)&v45 + 1));
  *((_QWORD *)&v48 + 1) = v15;
  v49 = *(_QWORD *)(v16 + 8);
  v18 = sub_1B1A137F4((uint64_t *)&v47);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v18, v17, v15);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v44);
  if (!*((_QWORD *)&v48 + 1))
  {
LABEL_16:
    sub_1B1DCC200((uint64_t)&v47, (unint64_t *)&qword_1EEF5E8F8, (unint64_t *)&qword_1ED4BA190);
    v39 = 0u;
    v40 = 0u;
    v41 = 0;
    goto LABEL_17;
  }
  sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BA190);
  sub_1B1AEC268(0, (unint64_t *)&unk_1ED4B8538);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    goto LABEL_17;
  }
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_17:
    sub_1B1DCC200((uint64_t)&v39, (unint64_t *)&unk_1EEF5E900, (unint64_t *)&unk_1ED4B8538);
    return 1;
  }
  sub_1B1A02518(&v39, (uint64_t)&v47);
  v19 = *((_QWORD *)&v48 + 1);
  v20 = v49;
  sub_1B19FA070(&v47, *((uint64_t *)&v48 + 1));
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 40))(a2, a3, a4, a5, v19);
  if (!v21)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
    return 1;
  }
  v22 = v21;
  v25 = a1 + 2;
  v24 = a1[2];
  v23 = v25[1];
  swift_unownedRetainStrong();
  swift_release();
  if (*(_QWORD *)(v22 + 80))
  {
    v26 = *(_QWORD *)(v22 + 88);
    ObjectType = swift_getObjectType();
    v28 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8);
    swift_unknownObjectRetain();
    v28(&v44, v23, v24, ObjectType, v26);
    swift_unknownObjectRelease();
  }
  else
  {
    v44 = 0u;
    v45 = 0u;
  }
  v31 = MEMORY[0x1E0DEE9B8];
  if (*(ValueMetadata **)(v22 + 40) == &type metadata for Entity)
  {
    sub_1B1A0DCD4((uint64_t)&v44, (uint64_t)&v39);
    if (!*((_QWORD *)&v40 + 1))
    {
      swift_release();
      sub_1B1A0DD70((uint64_t)&v39);
      goto LABEL_25;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v33 = v43;
      sub_1B1A0DD70((uint64_t)&v44);
      v44 = 0u;
      v45 = 0u;
      v34 = objc_msgSend(a6, sel_assetRegistry);
      v35 = objc_msgSend(v34, sel_rootNode);

      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v33;
      *(_QWORD *)(v36 + 24) = &v44;
      v37 = swift_allocObject();
      v32 = sub_1B1DCC250;
      *(_QWORD *)(v37 + 16) = sub_1B1DCC250;
      *(_QWORD *)(v37 + 24) = v36;
      v41 = sub_1B1A0FDB0;
      v42 = v37;
      *(_QWORD *)&v39 = MEMORY[0x1E0C809B0];
      *((_QWORD *)&v39 + 1) = 1107296256;
      *(_QWORD *)&v40 = sub_1B1DBA948;
      *((_QWORD *)&v40 + 1) = &unk_1E63F0D18;
      v38 = _Block_copy(&v39);
      swift_release();
      objc_msgSend(v35, sel_enumerateHierarchyUsingBlock_, v38);
      swift_release();

      _Block_release(v38);
      goto LABEL_26;
    }
  }
  swift_release();
LABEL_25:
  v32 = 0;
LABEL_26:
  sub_1B1A0DCD4((uint64_t)&v44, (uint64_t)&v39);
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BB150, v31 + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  if (swift_dynamicCast())
    v29 = v43;
  else
    v29 = 0;
  sub_1B1A0DD70((uint64_t)&v44);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
  sub_1B19E5A18((uint64_t)v32);
  return v29;
}

uint64_t sub_1B1DCB87C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  sub_1B1A06460();
  v2 = (_QWORD *)sub_1B2229280();
  v3 = v2;
  if (v2[2] == 3)
  {
    v4 = v2[4];
    v5 = v2[5];
    v6 = v2[6];
    v7 = v2[7];
    swift_bridgeObjectRetain();
    v8 = sub_1B1F3F994(v4, v5, v6, v7);
    if (v8 == 5)
      v9 = 0;
    else
      v9 = v8;
    v10 = v3[9];
    v19 = v3[8];
    v12 = v3[10];
    v11 = v3[11];
    v13 = v3[12];
    v14 = v3[13];
    v16 = v3[14];
    v15 = v3[15];
    v17 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = 0;
    v19 = 0;
    v10 = 0;
    v12 = 0;
    v11 = 0;
    v13 = 0;
    v14 = 0;
    v16 = 0;
    v15 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a1 = v17;
  a1[1] = v19;
  a1[2] = v10;
  a1[3] = v12;
  a1[4] = v11;
  a1[5] = v13;
  a1[6] = v14;
  a1[7] = v16;
  a1[8] = v15;
  return result;
}

uint64_t sub_1B1DCB99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1791524(0, &qword_1EEF5E878, (uint64_t (*)(uint64_t))sub_1B1DCB9F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B1DCB9F8()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EEF5E880)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EEF5E880);
  }
}

char *sub_1B1DCBA60()
{
  return sel_speedFactor;
}

id sub_1B1DCBA6C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, sel_speedFactor);
  *a2 = v4;
  return result;
}

id sub_1B1DCBA9C(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setSpeedFactor_, a3);
}

char *sub_1B1DCBAB0()
{
  return sel_time;
}

id sub_1B1DCBABC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, sel_time);
  *a2 = v4;
  return result;
}

id sub_1B1DCBAEC(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setTime_, a3);
}

char *sub_1B1DCBB00()
{
  return sel_paused;
}

id sub_1B1DCBB0C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_paused);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1B1DCBB3C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPaused_, *a1);
}

char *sub_1B1DCBB50()
{
  return sel_imGUIEnabled;
}

id sub_1B1DCBB5C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_imGUIEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1B1DCBB8C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setImGUIEnabled_, *a1);
}

char *sub_1B1DCBBA0()
{
  return sel_sourceReplicationDelegate;
}

id sub_1B1DCBBAC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sourceReplicationDelegate);
  *a2 = result;
  return result;
}

id sub_1B1DCBBE4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSourceReplicationDelegate_, *a1);
}

char *sub_1B1DCBBF8()
{
  return sel_destinationReplicationDelegate;
}

id sub_1B1DCBC04@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_destinationReplicationDelegate);
  *a2 = result;
  return result;
}

id sub_1B1DCBC3C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDestinationReplicationDelegate_, *a1);
}

char *sub_1B1DCBC50()
{
  return sel_clientTexture;
}

id sub_1B1DCBC5C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_clientTexture);
  *a2 = result;
  return result;
}

id sub_1B1DCBC94(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setClientTexture_, *a1);
}

char *sub_1B1DCBCA8()
{
  return sel_clientCGImage;
}

id sub_1B1DCBCB4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_clientCGImage);
  *a2 = result;
  return result;
}

id sub_1B1DCBCEC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setClientCGImage_, *a1);
}

char *sub_1B1DCBD00()
{
  return sel_transform;
}

id sub_1B1DCBD0C@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  result = objc_msgSend(*a1, sel_transform);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_1B1DCBD40(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTransform_, *a1, a1[2], a1[4], a1[6]);
}

char *sub_1B1DCBD5C()
{
  return sel_opacity;
}

id sub_1B1DCBD68@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, sel_opacity);
  *a2 = v4;
  return result;
}

id sub_1B1DCBD98(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setOpacity_, a3);
}

char *sub_1B1DCBDAC()
{
  return sel_position;
}

id sub_1B1DCBDB8@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result;
  __int128 v4;

  result = objc_msgSend(*a1, sel_position);
  *a2 = v4;
  return result;
}

id sub_1B1DCBDE8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPosition_, *a1);
}

char *sub_1B1DCBDFC()
{
  return sel_orientation;
}

id sub_1B1DCBE08@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result;
  __int128 v4;

  result = objc_msgSend(*a1, sel_orientation);
  *a2 = v4;
  return result;
}

id sub_1B1DCBE38(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrientation_, *a1);
}

char *sub_1B1DCBE4C()
{
  return sel_scale;
}

id sub_1B1DCBE58@<X0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  id result;
  __int128 v4;

  result = objc_msgSend(*a1, sel_scale);
  *a2 = v4;
  return result;
}

id sub_1B1DCBE88(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScale_, *a1);
}

char *sub_1B1DCBE9C()
{
  return sel_isEnabled;
}

id sub_1B1DCBEA8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1B1DCBED8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsEnabled_, *a1);
}

uint64_t method lookup function for VFXBidirectionalRemapTable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VFXBidirectionalRemapTable.opaqueRemapTable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of VFXBidirectionalRemapTable.presentationEntityFromModel(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

void sub_1B1DCBF30(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1B1C92290(255, a3, a4);
    v5 = sub_1B2229A18();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1B1DCBF88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5E8A0)
  {
    sub_1B1C798AC(255, &qword_1EEF5E8A8);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5E8A0);
  }
}

uint64_t sub_1B1DCBFFC()
{
  return sub_1B19E52CC(&qword_1ED4B7B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
}

void sub_1B1DCC018()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF5E8C8)
  {
    sub_1B1B9B510();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF5E8C8);
  }
}

void sub_1B1DCC080()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5E8E0)
  {
    sub_1B1C798AC(255, (unint64_t *)&qword_1EEF5C490);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5E8E0);
  }
}

uint64_t sub_1B1DCC0F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B1DCC120()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
            + OBJC_IVAR____TtC3VFX13EntityManager_world) = *(_QWORD *)(v0 + 24);
}

uint64_t sub_1B1DCC148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
     + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  result = type metadata accessor for ScriptingConfiguration();
  ++*(_QWORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t sub_1B1DCC19C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B1DCC1C0()
{
  uint64_t v0;

  return sub_1B1DBDFA8(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1B1DCC1CC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B1DCC1F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1B1DCC200(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1B1D345A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B1DCC240()
{
  return swift_deallocObject();
}

id sub_1B1DCC250(void *a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_1B1DC2250(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1B1DCC258()
{
  return swift_deallocObject();
}

void sub_1B1DCC268()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF5E938)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF5E938);
  }
}

uint64_t sub_1B1DCC2C8(_QWORD *a1, unsigned __int8 *a2, _QWORD *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v3 + 16))(*a1, *a2, *a3);
}

uint64_t sub_1B1DCC2F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B1DCC330(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

ValueMetadata *type metadata accessor for Selected()
{
  return &type metadata for Selected;
}

uint64_t sub_1B1DCC3B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1B2228950();
  else
    return 0;
}

uint64_t sub_1B1DCC3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;

  sub_1B1D56E8C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B1C0754C(a1);
  if (v10 == 1 << *(_BYTE *)(a1 + 32))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
  v12 = v10;
  v13 = &v9[*(int *)(v5 + 48)];
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 48) + 8 * v10;
  v16 = *(_DWORD *)v15;
  v17 = *(_BYTE *)(v15 + 4);
  v18 = sub_1B2228110();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v14 + *(_QWORD *)(v19 + 72) * v12;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v21(v13, v20, v18);
  *(_DWORD *)v9 = v16;
  v9[4] = v17;
  *(_DWORD *)a2 = v16;
  *(_BYTE *)(a2 + 4) = v17;
  v21((char *)(a2 + *(int *)(v5 + 48)), (uint64_t)v13, v18);
  sub_1B1DCE51C((uint64_t)v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v5);
}

uint64_t sub_1B1DCC548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;

  result = sub_1B1C0754C(a1);
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 56);
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * result);
    v5 = *v11;
    v6 = v11[1];
    v12 = (uint64_t *)(v10 + 24 * result);
    v7 = *v12;
    v8 = v12[1];
    v9 = v12[2];
    swift_retain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  return result;
}

uint64_t sub_1B1DCC5E8(uint64_t a1)
{
  return sub_1B1DCC6B0(a1, (uint64_t (*)(void))sub_1B1C0754C);
}

unint64_t sub_1B1DCC5F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1B1DCD848(a1);
  v3 = 1 << *(_BYTE *)(a1 + 32);
  if (v2 == v3)
    v4 = 0;
  else
    v4 = *(unsigned int *)(*(_QWORD *)(a1 + 48) + 4 * v2);
  return v4 | ((unint64_t)(v2 == v3) << 32);
}

uint64_t sub_1B1DCC654(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B1D495F0(a1);
  if (v2 == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v2);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1B1DCC6B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2();
  if (v3 == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v3);
  swift_bridgeObjectRetain();
  swift_retain();
  return v4;
}

uint64_t sub_1B1DCC728@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;

  result = sub_1B1C0754C(a1);
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
  }
  else
  {
    v11 = *(_QWORD *)(a1 + 56);
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * result);
    v5 = *v12;
    v6 = v12[1];
    v13 = (uint64_t *)(v11 + 32 * result);
    v7 = *v13;
    v8 = v13[1];
    v9 = v13[2];
    v10 = v13[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  a2[5] = v10;
  return result;
}

unint64_t sub_1B1DCC7E0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;

  v3 = HIBYTE(a2) & 0xF;
  v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v19 = 0;
    LOBYTE(v18) = 1;
    return v19 | ((unint64_t)v18 << 32);
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1B22294FC();
      v7 = sub_1B1DCCF24(v6, v4, 10);
      LODWORD(v8) = v7;
      v26 = BYTE4(v7) & 1;
      v9 = BYTE4(v7) & 1;
      goto LABEL_33;
    }
    v25[0] = a1;
    v25[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a1 == 43)
    {
      if (v3 == 1)
        goto LABEL_32;
      LODWORD(v8) = (BYTE1(a1) - 48);
      if (v8 > 9)
        goto LABEL_32;
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v25 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_32;
          v17 = 10 * (int)v8;
          if (v17 != (int)v17)
            goto LABEL_32;
          LODWORD(v8) = v17 + v16;
          if (__OFADD__((_DWORD)v17, v16))
            goto LABEL_32;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_33;
        }
      }
    }
    else
    {
      if (a1 == 45)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          v9 = 0;
          LODWORD(v8) = -(BYTE1(a1) - 48);
          v10 = v3 - 2;
          if (!v10)
          {
LABEL_33:
            swift_bridgeObjectRelease();
            LODWORD(v18) = v9 & 1;
            goto LABEL_34;
          }
          v11 = (unsigned __int8 *)v25 + 2;
          while (1)
          {
            v12 = *v11 - 48;
            if (v12 > 9)
              break;
            v13 = 10 * (int)v8;
            if (v13 != (int)v13)
              break;
            LODWORD(v8) = v13 - v12;
            if (__OFSUB__((_DWORD)v13, v12))
              break;
            v9 = 0;
            ++v11;
            if (!--v10)
              goto LABEL_33;
          }
        }
LABEL_32:
        LODWORD(v8) = 0;
        v9 = 1;
        goto LABEL_33;
      }
      if (!v3)
        goto LABEL_32;
      LODWORD(v8) = (a1 - 48);
      if (v8 > 9)
        goto LABEL_32;
      v21 = v3 - 1;
      if (v21)
      {
        v22 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            goto LABEL_32;
          v24 = 10 * (int)v8;
          if (v24 != (int)v24)
            goto LABEL_32;
          LODWORD(v8) = v24 + v23;
          if (__OFADD__((_DWORD)v24, v23))
            goto LABEL_32;
          v9 = 0;
          ++v22;
          if (!--v21)
            goto LABEL_33;
        }
      }
    }
    v9 = 0;
    goto LABEL_33;
  }
  v8 = sub_1B1DCCD5C(a1, a2, 10);
  swift_bridgeObjectRelease();
  v18 = HIDWORD(v8) & 1;
LABEL_34:
  v19 = v8;
  if ((_DWORD)v18)
    v19 = 0;
  return v19 | ((unint64_t)v18 << 32);
}

uint64_t sub_1B1DCCA1C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1B22294FC();
      v7 = sub_1B1DCD18C(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_35;
    }
    v24[0] = a1;
    v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a1 == 43)
    {
      if (v3 == 1 || (BYTE1(a1) - 48) > 9u)
        goto LABEL_32;
      v7 = (BYTE1(a1) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v24 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_32;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_32;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_32;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_35;
        }
      }
    }
    else
    {
      if (a1 == 45)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          v7 = -(uint64_t)(BYTE1(a1) - 48);
          v10 = v3 - 2;
          if (v10)
          {
            v11 = (unsigned __int8 *)v24 + 2;
            while (1)
            {
              v12 = *v11 - 48;
              if (v12 > 9)
                goto LABEL_32;
              v13 = 10 * v7;
              if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                goto LABEL_32;
              v7 = v13 - v12;
              if (__OFSUB__(v13, v12))
                goto LABEL_32;
              v9 = 0;
              ++v11;
              if (!--v10)
                goto LABEL_35;
            }
          }
          goto LABEL_34;
        }
LABEL_32:
        v7 = 0;
        v9 = 1;
        goto LABEL_35;
      }
      if (!v3 || (a1 - 48) > 9u)
        goto LABEL_32;
      v7 = (a1 - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v20 = (unsigned __int8 *)v24 + 1;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            goto LABEL_32;
          v22 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_32;
          v7 = v22 + v21;
          if (__OFADD__(v22, v21))
            goto LABEL_32;
          v9 = 0;
          ++v20;
          if (!--v18)
            goto LABEL_35;
        }
      }
    }
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v7 = sub_1B1DCCE40(a1, a2, 10);
  v9 = v23;
LABEL_35:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

_QWORD *sub_1B1DCCC58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAFA0, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1B1DCCCD0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1B2228908();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1B5E20490](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1B1DCCD48(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DCD18C(a1, a2, a3);
}

uint64_t sub_1B1DCCD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1B2228968();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1B1DCD3F0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1B22294FC();
  }
LABEL_7:
  v11 = sub_1B1DCCF24(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((HIDWORD(v11) & 1) << 32);
}

uint64_t sub_1B1DCCE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1B2228968();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1B1DCD3F0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1B22294FC();
  }
LABEL_7:
  v11 = sub_1B1DCD18C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1B1DCCF24(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;

  v3 = *a1;
  if (v3 != 43)
  {
    if (v3 == 45)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (a1)
        {
          v8 = 0;
          v9 = a1 + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return v12 | ((unint64_t)v13 << 32);
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14)
              goto LABEL_70;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15))
              goto LABEL_70;
            ++v9;
            if (!--v4)
              goto LABEL_46;
          }
        }
        goto LABEL_69;
      }
LABEL_70:
      v12 = 0;
      v13 = 1;
      return v12 | ((unint64_t)v13 << 32);
    }
    if (!a2)
      goto LABEL_70;
    v25 = a3 + 87;
    if (a3 > 10)
    {
      v26 = a3 + 55;
    }
    else
    {
      v25 = 97;
      v26 = 65;
    }
    if (a3 <= 10)
      v27 = a3 + 48;
    else
      v27 = 58;
    if (a1)
    {
      v28 = 0;
      do
      {
        v29 = *a1;
        if (v29 < 0x30 || v29 >= v27)
        {
          if (v29 < 0x41 || v29 >= v26)
          {
            v12 = 0;
            v13 = 1;
            if (v29 < 0x61 || v29 >= v25)
              return v12 | ((unint64_t)v13 << 32);
            v30 = -87;
          }
          else
          {
            v30 = -55;
          }
        }
        else
        {
          v30 = -48;
        }
        v31 = (int)v28 * (uint64_t)(int)a3;
        if (v31 != (int)v31)
          goto LABEL_70;
        v32 = v29 + v30;
        v28 = v31 + v32;
        if (__OFADD__((_DWORD)v31, v32))
          goto LABEL_70;
        ++a1;
        --a2;
      }
      while (a2);
      v13 = 0;
      v12 = v28;
      return v12 | ((unint64_t)v13 << 32);
    }
LABEL_69:
    v12 = 0;
    v13 = 0;
    return v12 | ((unint64_t)v13 << 32);
  }
  v16 = a2 - 1;
  if (a2 == 1)
    goto LABEL_70;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v18 = a3 + 55;
  }
  else
  {
    v17 = 97;
    v18 = 65;
  }
  if (a3 <= 10)
    v19 = a3 + 48;
  else
    v19 = 58;
  if (!a1)
    goto LABEL_69;
  v8 = 0;
  v20 = a1 + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v19)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        v12 = 0;
        v13 = 1;
        if (v21 < 0x61 || v21 >= v17)
          return v12 | ((unint64_t)v13 << 32);
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    v23 = (int)v8 * (uint64_t)(int)a3;
    if (v23 != (int)v23)
      goto LABEL_70;
    v24 = v21 + v22;
    v8 = v23 + v24;
    if (__OFADD__((_DWORD)v23, v24))
      goto LABEL_70;
    ++v20;
    --v16;
  }
  while (v16);
LABEL_46:
  v13 = 0;
  v12 = v8;
  return v12 | ((unint64_t)v13 << 32);
}

uint64_t sub_1B1DCD18C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *a1;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (a1)
        {
          v9 = 0;
          for (i = a1 + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                if (v11 < 0x61 || v11 >= v8)
                  return 0;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v13 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v13 - (v11 + v12);
            if (__OFSUB__(v13, (v11 + v12)))
              return 0;
            if (!--v5)
              return v9;
          }
        }
        return 0;
      }
      return 0;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (a1)
      {
        v26 = 0;
        do
        {
          v27 = *a1;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              if (v27 < 0x61 || v27 >= v25)
                return 0;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++a1;
          --v3;
        }
        while (v3);
        return v29 + (v27 + v28);
      }
      return 0;
    }
    return 0;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!a1)
    return 0;
  v9 = 0;
  v18 = a1 + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return v9;
}

uint64_t sub_1B1DCD3F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1B2228974();
  v4 = sub_1B1DCD46C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B1DCD46C(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1B1DCD5A4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1B1DCCC58(v9, 0);
      sub_1B1DCD668(v13, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v12 = MEMORY[0x1B5E203C4](v11 + 4, v11[2]);
    swift_release();
    return v12;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) == 0)
        sub_1B22294FC();
      JUMPOUT(0x1B5E203C4);
    }
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1B5E203C4]((char *)v13 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1B1DCD5A4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
    v7 = sub_1B1DCCCD0(a1, a3, a4);
  if ((a2 & 0xC) == v9)
  {
    a2 = sub_1B1DCCCD0(a2, a3, a4);
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  return sub_1B22288F0();
}

uint64_t sub_1B1DCD668(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];

  if (!a2)
    goto LABEL_4;
  if (!a3)
  {
LABEL_5:
    v11 = a4;
    goto LABEL_6;
  }
  v10 = a5 >> 14;
  if (a5 >> 14 == a4 >> 14)
  {
LABEL_4:
    a3 = 0;
    goto LABEL_5;
  }
  v11 = a4;
  v14 = 0;
  v15 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v15) = 1;
  v16 = 4 << v15;
  v35 = a7 & 0xFFFFFFFFFFFFFFLL;
  v33 = a5;
  v34 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v31 = a3;
  v32 = a4;
  v17 = a3 - 1;
  while (1)
  {
    v18 = v11 & 0xC;
    v19 = v11;
    if (v18 == v16)
    {
      v27 = v17;
      v19 = sub_1B1DCCCD0(v11, a6, a7);
      v17 = v27;
      if ((a7 & 0x1000000000000000) != 0)
      {
LABEL_25:
        v28 = v17;
        v29 = sub_1B22288FC();
        v17 = v28;
        v22 = v29;
        if (v18 == v16)
          goto LABEL_16;
        goto LABEL_19;
      }
    }
    else if ((a7 & 0x1000000000000000) != 0)
    {
      goto LABEL_25;
    }
    v20 = v19 >> 16;
    if ((a7 & 0x2000000000000000) != 0)
    {
      v36[0] = a6;
      v36[1] = v35;
      v22 = *((_BYTE *)v36 + v20);
      if (v18 == v16)
        goto LABEL_16;
    }
    else
    {
      v21 = v34;
      if ((a6 & 0x1000000000000000) == 0)
      {
        v30 = v17;
        v21 = sub_1B22294FC();
        v17 = v30;
      }
      v22 = *(_BYTE *)(v21 + v20);
      if (v18 == v16)
      {
LABEL_16:
        v23 = v17;
        v24 = sub_1B1DCCCD0(v11, a6, a7);
        v17 = v23;
        v11 = v24;
        if ((a7 & 0x1000000000000000) != 0)
          goto LABEL_17;
        goto LABEL_20;
      }
    }
LABEL_19:
    if ((a7 & 0x1000000000000000) != 0)
    {
LABEL_17:
      v25 = v17;
      v26 = sub_1B22288D8();
      v17 = v25;
      v11 = v26;
      goto LABEL_21;
    }
LABEL_20:
    v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_21:
    *(_BYTE *)(a2 + v14) = v22;
    if (v17 == v14)
    {
      a5 = v33;
      a3 = v31;
      goto LABEL_29;
    }
    if (v10 == v11 >> 14)
      break;
    ++v14;
  }
  a3 = v14 + 1;
  a5 = v33;
LABEL_29:
  a4 = v32;
LABEL_6:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = a6;
  a1[3] = a7;
  a1[4] = v11;
  return a3;
}

uint64_t sub_1B1DCD848(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1B1DCD8E8()
{
  sub_1B2228854();
  return sub_1B2228974();
}

uint64_t sub_1B1DCD968(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  swift_bridgeObjectRetain();
  v8 = sub_1B1DCC3B4(a1, a2);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (!v10)
    return 0;
  if (v8 == 36 && v10 == 0xE100000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v11 = sub_1B1DCD8E8();
    v13 = v12;
    v15 = v14;
    v17 = v16;
    swift_bridgeObjectRelease();
    v58 = v11;
    v59 = v13;
    v60 = v15;
    v61 = v17;
    sub_1B1A06504();
    sub_1B1A06460();
    v18 = (_QWORD *)sub_1B2229214();
    swift_bridgeObjectRelease();
    if (v18[2] == 2)
    {
      v19 = v18[4];
      v20 = v18[5];
      v21 = HIBYTE(v20) & 0xF;
      v22 = v19 & 0xFFFFFFFFFFFFLL;
      if ((v20 & 0x2000000000000000) != 0 ? HIBYTE(v20) & 0xF : v19 & 0xFFFFFFFFFFFFLL)
      {
        if ((v20 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v27 = sub_1B1DCCD5C(v19, v20, 10);
          swift_bridgeObjectRelease();
          if ((v27 & 0x100000000) == 0)
            goto LABEL_16;
        }
        else
        {
          if ((v20 & 0x2000000000000000) == 0)
          {
            if ((v19 & 0x1000000000000000) != 0)
              v24 = (unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v24 = (unsigned __int8 *)sub_1B22294FC();
            v25 = sub_1B1DCCF24(v24, v22, 10);
            v26 = BYTE4(v25) & 1;
            LODWORD(v27) = v25;
LABEL_15:
            if ((v26 & 1) == 0)
              goto LABEL_16;
            goto LABEL_48;
          }
          v58 = v18[4];
          v59 = v20 & 0xFFFFFFFFFFFFFFLL;
          if (v19 == 43)
          {
            if (v21 != 1)
            {
              LODWORD(v27) = (BYTE1(v19) - 48);
              if (v27 <= 9)
              {
                if (v21 == 2)
                  goto LABEL_16;
                if ((BYTE2(v19) - 48) <= 9u)
                {
                  LODWORD(v27) = 10 * v27 + (BYTE2(v19) - 48);
                  v45 = v21 - 3;
                  if (v21 == 3)
                    goto LABEL_16;
                  v46 = (unsigned __int8 *)&v58 + 3;
                  while (1)
                  {
                    v47 = *v46 - 48;
                    if (v47 > 9)
                      break;
                    v48 = 10 * (int)v27;
                    if (v48 != (int)v48)
                      break;
                    LODWORD(v27) = v48 + v47;
                    if (__OFADD__((_DWORD)v48, v47))
                      break;
                    v26 = 0;
                    ++v46;
                    if (!--v45)
                      goto LABEL_15;
                  }
                }
              }
            }
          }
          else if (v19 == 45)
          {
            if (v21 != 1)
            {
              v32 = (BYTE1(v19) - 48);
              if (v32 <= 9)
              {
                if (v21 == 2)
                {
                  LODWORD(v27) = -v32;
                  goto LABEL_16;
                }
                if ((BYTE2(v19) - 48) <= 9u)
                {
                  LODWORD(v27) = -10 * v32 - (BYTE2(v19) - 48);
                  v54 = v21 - 3;
                  if (v21 == 3)
                  {
LABEL_16:
                    v28 = v18[6];
                    v29 = v18[7];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v30 = sub_1B1DCC7E0(v28, v29);
                    if ((v30 & 0x100000000) != 0)
                      return 0;
                    else
                      return v27 | (v30 << 32);
                  }
                  v55 = (unsigned __int8 *)&v58 + 3;
                  while (1)
                  {
                    v56 = *v55 - 48;
                    if (v56 > 9)
                      break;
                    v57 = 10 * (int)v27;
                    if (v57 != (int)v57)
                      break;
                    LODWORD(v27) = v57 - v56;
                    if (__OFSUB__((_DWORD)v57, v56))
                      break;
                    v26 = 0;
                    ++v55;
                    if (!--v54)
                      goto LABEL_15;
                  }
                }
              }
            }
          }
          else if (v21)
          {
            LODWORD(v27) = (v19 - 48);
            if (v27 <= 9)
            {
              if (v21 == 1)
                goto LABEL_16;
              if ((BYTE1(v19) - 48) <= 9u)
              {
                LODWORD(v27) = 10 * v27 + (BYTE1(v19) - 48);
                v50 = v21 - 2;
                if (v21 == 2)
                  goto LABEL_16;
                v51 = (unsigned __int8 *)&v58 + 2;
                while (1)
                {
                  v52 = *v51 - 48;
                  if (v52 > 9)
                    break;
                  v53 = 10 * (int)v27;
                  if (v53 != (int)v53)
                    break;
                  LODWORD(v27) = v53 + v52;
                  if (__OFADD__((_DWORD)v53, v52))
                    break;
                  v26 = 0;
                  ++v51;
                  if (!--v50)
                    goto LABEL_15;
                }
              }
            }
          }
        }
      }
    }
LABEL_48:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v8 == 35 && v10 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
      return 0;
  }
  if (!a3)
    return 0xFFFFFFFFLL;
  swift_bridgeObjectRetain();
  swift_retain();
  v34 = sub_1B1DCD8E8();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  swift_bridgeObjectRelease();
  v41 = MEMORY[0x1B5E20388](v34, v36, v38, v40);
  v43 = v42;
  swift_bridgeObjectRelease();
  if ((a4 & 0x100000000) != 0)
    v44 = 0x200000000;
  else
    v44 = a4;
  v31 = sub_1B1FF36E8(v41, v43, v44, 1);
  swift_release();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1B1DCDE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  *(_QWORD *)&v22 = a2;
  *((_QWORD *)&v22 + 1) = a3;
  v26 = 0xE100000000000000;
  sub_1B1A06460();
  v6 = (_QWORD *)sub_1B2229214();
  v25 = v6;
  if (v6[2] != 1)
  {
    result = swift_bridgeObjectRelease();
    v15 = 0;
    v11 = 0;
LABEL_18:
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v21 = 0;
    goto LABEL_19;
  }
  v8 = v6[4];
  v7 = v6[5];
  swift_bridgeObjectRetain();
  sub_1B1C929C8(0, 1);
  swift_bridgeObjectRelease();
  v9 = swift_conformsToProtocol2();
  if (v9)
    v10 = v9;
  else
    v10 = 0;
  if (v9)
    v11 = a1;
  else
    v11 = 0;
  if (!v11)
  {
    result = swift_bridgeObjectRelease();
LABEL_17:
    v15 = 0;
    goto LABEL_18;
  }
  v12 = *(_QWORD *)(v10 + 8);
  if (((*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 16))(0, 1, v11, v12) & 1) == 0)
  {
    *((_QWORD *)&v23 + 1) = v11;
    v24 = v10;
    sub_1B1A137F4((uint64_t *)&v22);
    sub_1B1E2854C(v11, v12);
    v11 = sub_1B1E28574(v8, v7, v11, v12);
    swift_bridgeObjectRelease();
    if (v11)
    {
      v13 = sub_1B1BF6D88(0, 1);
      swift_retain();
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
      goto LABEL_15;
    }
    result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
    goto LABEL_17;
  }
  v22 = 0u;
  v23 = 0u;
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, char, _QWORD, char, _QWORD, _QWORD, __int128 *, _WORD, uint64_t, uint64_t))(v12 + 64))(v8, v7, MEMORY[0x1E0DEE9B8] + 8, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, &v22, 0, v11, v12);
  swift_bridgeObjectRelease();
  sub_1B1A0DD70((uint64_t)&v22);
LABEL_15:
  v15 = *(_QWORD *)(v13 + 16);
  v11 = *(_QWORD *)(v13 + 24);
  v16 = *(_QWORD *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 40);
  v18 = *(_QWORD *)(v13 + 48);
  v19 = *(unsigned __int8 *)(v13 + 56);
  v20 = *(unsigned __int16 *)(v13 + 58);
  swift_bridgeObjectRetain();
  swift_retain();
  result = swift_release();
  v21 = v19 | (v20 << 16);
LABEL_19:
  *(_QWORD *)a4 = v15;
  *(_QWORD *)(a4 + 8) = v11;
  *(_QWORD *)(a4 + 16) = v16;
  *(_QWORD *)(a4 + 24) = v17;
  *(_QWORD *)(a4 + 32) = v18;
  *(_DWORD *)(a4 + 40) = v21;
  return result;
}

uint64_t sub_1B1DCE0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;
  _OWORD v21[2];
  uint64_t v22;
  int v23;
  _OWORD v24[2];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v28 = a2;
  *(_QWORD *)&v24[0] = 46;
  *((_QWORD *)&v24[0] + 1) = 0xE100000000000000;
  sub_1B1A06460();
  v4 = (_QWORD *)sub_1B2229214();
  v20 = v4;
  if (!v4[2])
    goto LABEL_26;
  v6 = v4[4];
  v5 = v4[5];
  swift_bridgeObjectRetain();
  sub_1B1C929C8(0, 1);
  if (v20[2]
    || (sub_1B1C349A0(v6, v5, (uint64_t)v21),
        v18 = v21[1],
        v19 = v21[0],
        v9 = v22,
        v10 = v23,
        sub_1B1B6AE8C((uint64_t)v21, (uint64_t)&v27),
        !v28))
  {
    v7 = 0x73676E69646E6942;
    if (v6 == 0x73676E69646E6962 && v5 == 0xE800000000000000)
    {
      v5 = 0xE800000000000000;
      swift_bridgeObjectRelease();
    }
    else if ((sub_1B2229D24() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v5 = 0xE800000000000000;
    }
    else
    {
      v7 = v6;
    }
    if (qword_1ED4B7760 != -1)
      swift_once();
    swift_retain();
    v9 = sub_1B1A0608C(v7, v5, 0, 1);
    swift_release();
    swift_bridgeObjectRelease();
    if (!v9)
      goto LABEL_25;
    if (!swift_conformsToProtocol2())
      v9 = 0;
    if (!v9)
    {
LABEL_25:
      result = swift_bridgeObjectRelease();
LABEL_27:
      v10 = 0;
      v16 = 0uLL;
      v17 = 0uLL;
      goto LABEL_28;
    }
    if (swift_conformsToProtocol2())
      v11 = v9;
    else
      v11 = 0;
    if (v11)
    {
      *(_QWORD *)&v24[0] = v20;
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1B19FA230();
      v12 = sub_1B2228644();
      v14 = v13;
      swift_bridgeObjectRelease();
      sub_1B1DCDE58(v11, v12, v14, (uint64_t)v24);
      v18 = v24[1];
      v19 = v24[0];
      v9 = v25;
      v10 = v26;
      goto LABEL_24;
    }
LABEL_26:
    result = swift_bridgeObjectRelease();
    v9 = 0;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
LABEL_24:
  result = swift_bridgeObjectRelease();
  v17 = v18;
  v16 = v19;
LABEL_28:
  *(_OWORD *)a3 = v16;
  *(_OWORD *)(a3 + 16) = v17;
  *(_QWORD *)(a3 + 32) = v9;
  *(_DWORD *)(a3 + 40) = v10;
  return result;
}

uint64_t sub_1B1DCE35C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t result;
  __int128 v23;
  int v24;
  __int128 v25;
  _QWORD *v26;
  _QWORD v27[6];
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int16 v33;

  v28 = a1;
  v29 = a2;
  v27[0] = 46;
  v27[1] = 0xE100000000000000;
  sub_1B1A06460();
  v8 = (_QWORD *)sub_1B2229214();
  v26 = v8;
  if (!v8[2]
    || (v9 = v8[4],
        v10 = v8[5],
        swift_bridgeObjectRetain(),
        sub_1B1C929C8(0, 1),
        v11 = sub_1B1DCD968(v9, v10, a3, a4 | ((HIDWORD(a4) & 1) << 32)),
        v13 = v12,
        swift_bridgeObjectRelease(),
        (v13 & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v11 = 0;
    v18 = 0;
    v17 = 0;
LABEL_6:
    v19 = 0;
    v24 = 0;
    v23 = 0uLL;
    goto LABEL_7;
  }
  v28 = v26;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  v14 = sub_1B2228644();
  v16 = v15;
  swift_bridgeObjectRelease();
  sub_1B1DCE0A4(v14, v16, (uint64_t)v27);
  sub_1B1B6AE8C((uint64_t)v27, (uint64_t)&v28);
  v17 = v29;
  if (!v29)
  {
    result = swift_bridgeObjectRelease();
    v11 = 0;
    v18 = 0;
    goto LABEL_6;
  }
  v18 = v28;
  v25 = v30;
  v19 = v31;
  v20 = v32;
  v21 = v33;
  result = swift_bridgeObjectRelease();
  v23 = v25;
  v24 = v20 | (v21 << 16);
LABEL_7:
  *(_QWORD *)a5 = v11;
  *(_QWORD *)(a5 + 8) = v18;
  *(_QWORD *)(a5 + 16) = v17;
  *(_OWORD *)(a5 + 24) = v23;
  *(_QWORD *)(a5 + 40) = v19;
  *(_DWORD *)(a5 + 48) = v24;
  return result;
}

uint64_t sub_1B1DCE51C(uint64_t a1)
{
  uint64_t v2;

  sub_1B1D56E8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B1DCE558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = sub_1B2229124();
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v17 - v6;
  v8 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v13 = (char *)&v17 - v12;
  if ((sub_1B222934C() & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v20, 1, 1, v3);
  sub_1B22289C8();
  swift_getAssociatedConformanceWitness();
  v15 = sub_1B2229298();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
  v16 = v20;
  sub_1B1DCE740(v15, v8, v20);
  sub_1B2229340();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v16, 0, 1, v3);
}

uint64_t sub_1B1DCE740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = a1;
  v15 = a3;
  v16 = *(_QWORD *)(a2 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v4);
  v5 = swift_checkMetadataState();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  swift_getAssociatedConformanceWitness();
  sub_1B2229F88();
  sub_1B2229CC4();
  v17 = v14;
  sub_1B1CC921C();
  sub_1B22292A4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return sub_1B2229CC4();
}

uint64_t sub_1B1DCE934()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B1DCE9A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1B1DCEA10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1B1DCEA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1B1DCEA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1B1DCEA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1B1DCEAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1B1DCEAE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B1DCEB90 + 4 * byte_1B2295460[(v7 - 1)]))();
}

void sub_1B1DCEBE0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for OptionSetIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B19E5E34(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionSetIterator);
}

uint64_t sub_1B1DCED9C(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v30 = *(_QWORD *)(a2 + 16);
  v31 = *(_QWORD *)(a1 + 16);
  if (v30 >= v31)
    v4 = *(_QWORD *)(a1 + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1B2029FFC(0, v4, 0);
  v5 = v40;
  v27 = a2;
  v28 = a1;
  if (!v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
    v15 = 0;
LABEL_19:
    if (v7 != v31 && v15 != v30)
    {
      v18 = ~v15 + v30;
      v19 = v28 + 16 * v7 + 40;
      v20 = v27 + 40 * v15 + 64;
      v21 = ~v7 + v31;
      do
      {
        v34 = v18;
        v36 = v19;
        v39 = v21;
        v22 = *(_QWORD *)(v20 - 32);
        v23 = *(_QWORD *)(v20 - 24);
        swift_bridgeObjectRetain();
        sub_1B19FA2B4(v22, v23);
        sub_1B2228890();
        sub_1B2228890();
        sub_1B22295EC();
        swift_bridgeObjectRelease();
        sub_1B19F9FEC(v22, v23);
        v25 = *(_QWORD *)(v5 + 16);
        v24 = *(_QWORD *)(v5 + 24);
        if (v25 >= v24 >> 1)
          sub_1B2029FFC(v24 > 1, v25 + 1, 1);
        *(_QWORD *)(v5 + 16) = v25 + 1;
        v26 = v5 + 16 * v25;
        *(_QWORD *)(v26 + 32) = 0;
        *(_QWORD *)(v26 + 40) = 0xE000000000000000;
        if (!v39)
          break;
        v20 += 40;
        v18 = v34 - 1;
        v19 = v36 + 16;
        v21 = v39 - 1;
      }
      while (v34);
    }
    goto LABEL_24;
  }
  v29 = a2 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = 0;
  v32 = 0;
  v7 = 0;
  do
  {
    v37 = v4;
    v38 = v5;
    if ((v6 & 1) != 0 || v7 == v31)
    {
      v33 = 1;
      v35 = v7;
      v9 = 0;
      v10 = 0;
    }
    else
    {
      v8 = v7 + 1;
      if (v32 == v30)
      {
        v9 = 0;
        v10 = 0;
        v33 = 1;
        v32 = v30;
      }
      else
      {
        v11 = (uint64_t *)(v29 + 40 * v32);
        v10 = *v11;
        v9 = v11[1];
        ++v32;
        swift_bridgeObjectRetain();
        sub_1B19FA2B4(v10, v9);
        v33 = 0;
      }
      v35 = v8;
    }
    sub_1B2228890();
    sub_1B2228890();
    sub_1B22295EC();
    swift_bridgeObjectRelease();
    sub_1B19F9FEC(v10, v9);
    v5 = v38;
    v13 = *(_QWORD *)(v38 + 16);
    v12 = *(_QWORD *)(v38 + 24);
    if (v13 >= v12 >> 1)
    {
      sub_1B2029FFC(v12 > 1, v13 + 1, 1);
      v5 = v38;
    }
    *(_QWORD *)(v5 + 16) = v13 + 1;
    v14 = v5 + 16 * v13;
    *(_QWORD *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 40) = 0xE000000000000000;
    v7 = v35;
    --v4;
    v6 = v33;
  }
  while (v37 != 1);
  v15 = v32;
  if ((v33 & 1) == 0)
    goto LABEL_19;
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B1DCF18C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[5];
  _QWORD v24[5];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v23[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B2029FFC(0, v3, 0);
    v4 = v23[0];
    v5 = v2 + 32;
    do
    {
      sub_1B19FA278(v5, (uint64_t)v24);
      sub_1B19F8C58(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
      v6 = sub_1B1E03DBC();
      v8 = v7;
      sub_1B19F8C58(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      v23[0] = v4;
      v10 = *(_QWORD *)(v4 + 16);
      v9 = *(_QWORD *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1B2029FFC(v9 > 1, v10 + 1, 1);
        v4 = v23[0];
      }
      *(_QWORD *)(v4 + 16) = v10 + 1;
      v11 = v4 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      v5 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v1 = v0;
  }
  v23[0] = v4;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  sub_1B2228644();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v1 + 88);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B2029FFC(0, v13, 0);
    v14 = v12 + 32;
    do
    {
      sub_1B19FA278(v14, (uint64_t)v23);
      sub_1B19F8C58(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
      v15 = sub_1B1E03DBC();
      v17 = v16;
      sub_1B19F8C58(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      v19 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      if (v19 >= v18 >> 1)
        sub_1B2029FFC(v18 > 1, v19 + 1, 1);
      *(_QWORD *)(v22 + 16) = v19 + 1;
      v20 = v22 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      v14 += 40;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  sub_1B2228644();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  return 40;
}

uint64_t sub_1B1DCF48C(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[5];

  swift_allocObject();
  sub_1B19FA198(a1, (uint64_t)v4);
  v2 = sub_1B1DD6A90(v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  return v2;
}

uint64_t sub_1B1DCF500(_QWORD *a1)
{
  return sub_1B1DD722C(a1);
}

uint64_t sub_1B1DCF514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_1B1DCED9C(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12 = v4;
  v5 = MEMORY[0x1E0DEA968];
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  sub_1B2228644();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B1DCED9C(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12 = v8;
  sub_1B2228644();
  swift_bridgeObjectRelease();
  sub_1B1E02C04(0x6C706D6554657375, 0xEB00000000657461, &v12);
  if (v13)
  {
    if ((swift_dynamicCast() & 1) != 0 && (v10[0] & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v12 = 0;
      *((_QWORD *)&v12 + 1) = 0xE000000000000000;
      sub_1B2229430();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v11 = 0xD000000000000014;
      *((_QWORD *)&v11 + 1) = 0x80000001B233CA70;
      sub_1B1E02C04(0x6574616C706D6574, 0xEC000000656D614ELL, &v12);
      if (v13)
      {
        if ((swift_dynamicCast() & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        sub_1B1A0DD70((uint64_t)&v12);
      }
      v13 = v5;
      *(_QWORD *)&v12 = 0;
      *((_QWORD *)&v12 + 1) = 0xE000000000000000;
      sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v12, v10);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
      sub_1B1A0DDAC(v10, &v12);
      swift_dynamicCast();
LABEL_12:
      sub_1B2228890();
      goto LABEL_9;
    }
  }
  else
  {
    sub_1B1A0DD70((uint64_t)&v12);
  }
  *(_QWORD *)&v12 = 0;
  *((_QWORD *)&v12 + 1) = 0xE000000000000000;
  sub_1B2229430();
  v11 = v12;
  sub_1B2228890();
  v13 = v5;
  *(_QWORD *)&v12 = 0;
  *((_QWORD *)&v12 + 1) = 0xE000000000000000;
  sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v12, v10);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
  sub_1B1A0DDAC(v10, &v12);
  swift_dynamicCast();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
LABEL_9:
  swift_bridgeObjectRelease();
  sub_1B2228890();
  return v11;
}

_QWORD *sub_1B1DCF900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  uint64_t v13;

  v1 = v0;
  v2 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v12 = 0;
  *((_QWORD *)&v12 + 1) = 0xE000000000000000;
  sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v12, v11);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
  sub_1B1A0DDAC(v11, &v12);
  swift_dynamicCast();
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 136);
  _s10SubContextCMa();
  swift_allocObject();
  swift_retain_n();
  swift_bridgeObjectRetain();
  v6 = sub_1B1DD68D0(v3, v4, v5);
  v13 = v2;
  v12 = v10;
  swift_retain();
  sub_1B1E02AF4(1701667182, 0xE400000000000000, (uint64_t)&v12);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
  swift_release();
  swift_release();
  sub_1B1FB460C(v6);
  v7 = (_QWORD *)sub_1B1DD7B28();
  v6[21] = v7[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[22] = v7[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[23] = v7[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[25] = v7[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[32] = v7[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[33] = v7[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[34] = v7[34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B1E02C04(0x6574616C706D6574, 0xEC000000656D614ELL, &v12);
  if (v13)
  {
    v8 = MEMORY[0x1E0DEA968];
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = v8;
      v12 = v11[0];
      sub_1B1E02AF4(0x6574616C706D6574, 0xEC000000656D614ELL, (uint64_t)&v12);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
    }
  }
  else
  {
    sub_1B1A0DD70((uint64_t)&v12);
  }
  swift_release();
  return v6;
}

uint64_t sub_1B1DCFB9C()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  result = sub_1B1DCC5E8(v0[21]);
  if (v3)
  {
    v4 = v2;
    swift_bridgeObjectRelease();
    sub_1B1DCC5E8(v0[22]);
    if (v6)
    {
      v7 = v5;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v4 + 88);
      v10 = *(_QWORD *)(v7 + 40);
      v9 = *(_QWORD *)(v7 + 48);
      v0[5] = *(_QWORD *)(v4 + 80);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v0[6] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v0[7] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v11 = (_QWORD *)v0[5];
      v12 = v0[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DF6860(v11, v12, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1B1B25BD0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1FB69EC();
      sub_1B1FB50D0(v10, v9);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B1DCFD34()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[7] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)v0[5];
  v2 = v0[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DF6860(v1, v2, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1B1B25BD0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B1FB69EC();
}

uint64_t sub_1B1DCFDB0(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  BOOL v46;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v48;
  unint64_t v49;
  BOOL v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  char v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  BOOL v73;
  char v74;
  unint64_t v75;
  unint64_t v76;
  BOOL v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  BOOL v100;
  BOOL v101;
  BOOL v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  _QWORD *v123;
  char v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _OWORD v148[2];
  __int128 v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  __int16 v157;
  char v158;
  uint64_t v159;
  __int16 v160;
  uint64_t v161;
  uint64_t v162;
  __int16 v163;
  uint64_t v164;
  uint64_t v165;

  v6 = v5;
  v8 = (_QWORD *)*a1;
  v9 = *(_BYTE *)(*a1 + 24);
  v10 = MEMORY[0x1E0DEE9D8];
  v135 = v9;
  if (!a5)
  {
    v19 = v8[6];
    v20 = v8[7];
    v156 = *(_BYTE *)(*a1 + 24);
    v157 = 256;
    v158 = 0;
    v159 = MEMORY[0x1E0DEE9D8];
    v160 = 0;
    v161 = v19;
    v162 = v20;
    v163 = 257;
    v164 = 0;
    v165 = 0;
    sub_1B1DCC5E8(*(_QWORD *)(v5 + 176));
    if (v22)
    {
      v23 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = 0;
    }
    v31 = sub_1B1DE387C(v23, (uint64_t)&v156, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)&v149 = 0;
    *((_QWORD *)&v149 + 1) = 0xE000000000000000;
    v32 = *(_QWORD *)(v31 + 128);
    v33 = *(_QWORD *)(v32 + 16);
    v128 = v31;
    if (v33)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v34 = (uint64_t *)(v32 + 40);
      do
      {
        v35 = *v34;
        *(_QWORD *)&v148[0] = *(v34 - 1);
        *((_QWORD *)&v148[0] + 1) = v35;
        v153 = 0xE100000000000000;
        v154 = 0x244E49414D4F4424;
        v155 = 0xE800000000000000;
        v152 = 34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        sub_1B1A06460();
        sub_1B222922C();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        v31 = v128;
        swift_bridgeObjectRelease();
        v34 += 2;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    *(_QWORD *)&v148[0] = 10;
    *((_QWORD *)&v148[0] + 1) = 0xE100000000000000;
    v154 = 2314;
    v155 = 0xE200000000000000;
    sub_1B1A06460();
    sub_1B222922C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v149 = 8201;
    *((_QWORD *)&v149 + 1) = 0xE200000000000000;
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B1C9110C(0, 0, 8201, 0xE200000000000000);
    swift_release();
    v36 = *(_QWORD *)(v31 + 104);
    swift_bridgeObjectRetain();
    swift_release();
    v37 = *(_QWORD *)(v36 + 16);
    if (!v37)
    {
      swift_bridgeObjectRelease();
LABEL_50:
      v15 = v128;
      v6 = v134;
      goto LABEL_91;
    }
    v38 = v36 + 32;
    swift_bridgeObjectRetain();
    v39 = 0;
    while (1)
    {
      v41 = (uint64_t *)(v38 + 16 * v39);
      v43 = *v41;
      v42 = v41[1];
      v44 = (_QWORD *)v8[13];
      v45 = v44[2];
      if (!v45)
        goto LABEL_27;
      v46 = v44[4] == v43 && v44[5] == v42;
      if (!v46 && (sub_1B2229D24() & 1) == 0)
      {
        if (v45 == 1)
          goto LABEL_27;
        v50 = v44[6] == v43 && v44[7] == v42;
        if (!v50 && (sub_1B2229D24() & 1) == 0)
        {
          v51 = v45 - 2;
          if (v45 == 2)
            goto LABEL_27;
          if ((v44[8] != v43 || v44[9] != v42) && (sub_1B2229D24() & 1) == 0)
            break;
        }
      }
LABEL_19:
      if (++v39 == v37)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_50;
      }
    }
    v52 = v44 + 11;
    while (--v51)
    {
      if (*(v52 - 1) != v43 || *v52 != v42)
      {
        v52 += 2;
        if ((sub_1B2229D24() & 1) == 0)
          continue;
      }
      goto LABEL_19;
    }
LABEL_27:
    swift_bridgeObjectRetain_n();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8[13] = v44;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v44 = sub_1B1C63044(0, v45 + 1, 1, v44);
      v8[13] = v44;
    }
    v49 = v44[2];
    v48 = v44[3];
    if (v49 >= v48 >> 1)
    {
      v44 = sub_1B1C63044(v48 > 1, v49 + 1, 1, v44);
      v8[13] = v44;
    }
    v44[2] = v49 + 1;
    v40 = &v44[2 * v49];
    v40[4] = v43;
    v40[5] = v42;
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_19;
  }
  sub_1B1DCC5E8(*(_QWORD *)(a5 + 176));
  v12 = v11;
  swift_retain();
  swift_bridgeObjectRelease();
  v13 = v8[6];
  v14 = v8[7];
  v156 = v9;
  v157 = 256;
  v158 = 1;
  v159 = v10;
  v160 = 0;
  v161 = v13;
  v162 = v14;
  v163 = 257;
  v164 = 0;
  v165 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1B1DE387C(v12, (uint64_t)&v156, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)v8[17];
  v150 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v149 = 0;
  *((_QWORD *)&v149 + 1) = 0xE000000000000000;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v149, v148);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v149);
  sub_1B1A0DDAC(v148, &v149);
  swift_dynamicCast();
  v17 = v154;
  v18 = v155;
  swift_release();
  LOBYTE(v17) = sub_1B1DB8EB4(v17, v18, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_91;
  }
  v24 = *a1;
  *(_QWORD *)&v149 = 0;
  *((_QWORD *)&v149 + 1) = 0xE000000000000000;
  v25 = *(_QWORD *)(v15 + 128);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v145 = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    v27 = (uint64_t *)(v25 + 40);
    do
    {
      v28 = *v27;
      *(_QWORD *)&v148[0] = *(v27 - 1);
      *((_QWORD *)&v148[0] + 1) = v28;
      v153 = 0xE100000000000000;
      v154 = 0x244E49414D4F4424;
      v155 = 0xE800000000000000;
      v152 = 34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B1A06460();
      sub_1B222922C();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 += 2;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    v30 = *((_QWORD *)&v149 + 1);
    v29 = v149;
    v6 = v134;
    v24 = v145;
  }
  else
  {
    swift_retain();
    v29 = 0;
    v30 = 0xE000000000000000;
  }
  *(_QWORD *)&v149 = v29;
  *((_QWORD *)&v149 + 1) = v30;
  *(_QWORD *)&v148[0] = 10;
  *((_QWORD *)&v148[0] + 1) = 0xE100000000000000;
  v154 = 2314;
  v155 = 0xE200000000000000;
  sub_1B1A06460();
  v54 = MEMORY[0x1E0DEA968];
  sub_1B222922C();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v149 = 8201;
  *((_QWORD *)&v149 + 1) = 0xE200000000000000;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B1C9110C(0, 0, v149, *((uint64_t *)&v149 + 1));
  swift_release();
  v150 = v54;
  *(_QWORD *)&v149 = 0;
  *((_QWORD *)&v149 + 1) = 0xE000000000000000;
  swift_retain();
  swift_retain();
  sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v149, v148);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v149);
  sub_1B1A0DDAC(v148, &v149);
  swift_dynamicCast();
  v55 = v154;
  v56 = v155;
  swift_release();
  v57 = *(_QWORD **)(v24 + 136);
  v58 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v24 + 136) = v57;
  if ((v58 & 1) == 0)
  {
    v57 = sub_1B1C63044(0, v57[2] + 1, 1, v57);
    *(_QWORD *)(v24 + 136) = v57;
  }
  v60 = v57[2];
  v59 = v57[3];
  if (v60 >= v59 >> 1)
  {
    v57 = sub_1B1C63044(v59 > 1, v60 + 1, 1, v57);
    *(_QWORD *)(v24 + 136) = v57;
  }
  v57[2] = v60 + 1;
  v61 = &v57[2 * v60];
  v61[4] = v55;
  v61[5] = v56;
  swift_release();
  v62 = *(_QWORD *)(v15 + 104);
  swift_bridgeObjectRetain();
  swift_release();
  v63 = *(_QWORD *)(v62 + 16);
  if (v63)
  {
    v129 = v15;
    v64 = *a1;
    v65 = v62 + 32;
    swift_bridgeObjectRetain();
    v66 = 0;
    while (1)
    {
      v68 = (uint64_t *)(v65 + 16 * v66);
      v70 = *v68;
      v69 = v68[1];
      v71 = *(_QWORD **)(v64 + 104);
      v72 = v71[2];
      if (!v72)
        goto LABEL_67;
      v73 = v71[4] == v70 && v71[5] == v69;
      if (!v73 && (sub_1B2229D24() & 1) == 0)
      {
        if (v72 == 1)
          goto LABEL_67;
        v77 = v71[6] == v70 && v71[7] == v69;
        if (!v77 && (sub_1B2229D24() & 1) == 0)
        {
          v78 = v72 - 2;
          if (v72 == 2)
            goto LABEL_67;
          if ((v71[8] != v70 || v71[9] != v69) && (sub_1B2229D24() & 1) == 0)
            break;
        }
      }
LABEL_59:
      if (++v66 == v63)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v15 = v129;
        v6 = v134;
        goto LABEL_90;
      }
    }
    v79 = v71 + 11;
    while (--v78)
    {
      if (*(v79 - 1) != v70 || *v79 != v69)
      {
        v79 += 2;
        if ((sub_1B2229D24() & 1) == 0)
          continue;
      }
      goto LABEL_59;
    }
LABEL_67:
    swift_bridgeObjectRetain_n();
    swift_retain();
    v74 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v64 + 104) = v71;
    if ((v74 & 1) == 0)
    {
      v71 = sub_1B1C63044(0, v72 + 1, 1, v71);
      *(_QWORD *)(v64 + 104) = v71;
    }
    v76 = v71[2];
    v75 = v71[3];
    if (v76 >= v75 >> 1)
    {
      v71 = sub_1B1C63044(v75 > 1, v76 + 1, 1, v71);
      *(_QWORD *)(v64 + 104) = v71;
    }
    v71[2] = v76 + 1;
    v67 = &v71[2 * v76];
    v67[4] = v70;
    v67[5] = v69;
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_59;
  }
  swift_release();
  swift_release();
LABEL_90:
  swift_bridgeObjectRelease();
LABEL_91:
  v81 = *(_QWORD *)(v15 + 144);
  v130 = v15;
  v133 = *(_QWORD *)(v81 + 16);
  if (v133)
  {
    v132 = v81 + 32;
    v82 = *a1;
    swift_retain();
    swift_bridgeObjectRetain();
    v83 = 0;
    v131 = v82;
    do
    {
      v138 = v83;
      v85 = (_QWORD *)(v132 + (v83 << 6));
      v86 = v85[3];
      v146 = v85[2];
      v87 = v85[5];
      v144 = v85[4];
      v88 = v85[7];
      v142 = v85[6];
      v89 = *(_QWORD *)(v6 + 32);
      *(_QWORD *)&v149 = *(_QWORD *)(v6 + 24);
      *((_QWORD *)&v149 + 1) = v89;
      swift_bridgeObjectRetain();
      v147 = v86;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v143 = v88;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v90 = v149;
      v141 = *(_QWORD **)(v82 + 144);
      v137 = v141[2];
      if (v137)
      {
        v91 = v141 + 6;
        v92 = v141[2];
        while (1)
        {
          v94 = *v91;
          v93 = v91[1];
          v96 = v91[2];
          v95 = v91[3];
          v97 = v91[4];
          v98 = v91[5];
          v99 = *(v91 - 2) == (_QWORD)v90 && *(v91 - 1) == *((_QWORD *)&v90 + 1);
          if (v99 || (sub_1B2229D24() & 1) != 0)
          {
            v100 = v94 == v146 && v93 == v147;
            if (v100 || (sub_1B2229D24() & 1) != 0)
            {
              v101 = v96 == v144 && v95 == v87;
              if (v101 || (sub_1B2229D24() & 1) != 0)
              {
                v102 = v97 == v142 && v98 == v143;
                if (v102 || (sub_1B2229D24() & 1) != 0)
                  break;
              }
            }
          }
          v91 += 8;
          if (!--v92)
            goto LABEL_119;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v6 = v134;
        v82 = v131;
        v84 = v138;
      }
      else
      {
LABEL_119:
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v141 = sub_1B1C637DC(0, v137 + 1, 1, v141);
        v104 = v141[2];
        v103 = v141[3];
        v82 = v131;
        if (v104 >= v103 >> 1)
          v141 = sub_1B1C637DC(v103 > 1, v104 + 1, 1, v141);
        v6 = v134;
        v84 = v138;
        v141[2] = v104 + 1;
        v105 = &v141[8 * v104];
        *((_OWORD *)v105 + 2) = v90;
        v105[6] = v146;
        v105[7] = v147;
        v105[8] = v144;
        v105[9] = v87;
        v105[10] = v142;
        v105[11] = v143;
        *(_QWORD *)(v131 + 144) = v141;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v83 = v84 + 1;
    }
    while (v83 != v133);
    swift_bridgeObjectRelease();
    v15 = v130;
  }
  else
  {
    swift_retain();
  }
  *(_BYTE *)(*a1 + 160) = (*(_BYTE *)(*a1 + 160) | *(_BYTE *)(v15 + 160)) & 1;
  v152 = MEMORY[0x1E0DEE9D8];
  v106 = *(_QWORD *)(v15 + 112);
  if (v106 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v107 = sub_1B22296AC();
    if (!v107)
      goto LABEL_134;
  }
  else
  {
    v107 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v107)
      goto LABEL_134;
  }
  v108 = 0;
  do
  {
    if ((v106 & 0xC000000000000001) != 0)
    {
      v109 = MEMORY[0x1B5E21018](v108, v106);
    }
    else
    {
      v109 = *(_QWORD *)(v106 + 8 * v108 + 32);
      swift_retain();
    }
    ++v108;
    *(_QWORD *)&v149 = v109;
    sub_1B1DD1140((uint64_t)&v149, v6, a2, a3, (_QWORD **)&v152);
    swift_release();
  }
  while (v107 != v108);
LABEL_134:
  swift_bridgeObjectRelease_n();
  v151 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v110 = *(_QWORD *)(v130 + 120);
  if (v110 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v111 = sub_1B22296AC();
    if (!v111)
      goto LABEL_142;
  }
  else
  {
    v111 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v111)
      goto LABEL_142;
  }
  v112 = 0;
  do
  {
    if ((v110 & 0xC000000000000001) != 0)
    {
      v113 = MEMORY[0x1B5E21018](v112, v110);
    }
    else
    {
      v113 = *(_QWORD *)(v110 + 8 * v112 + 32);
      swift_retain();
    }
    ++v112;
    *(_QWORD *)&v149 = v113;
    sub_1B1DD1398((uint64_t)&v149, v6, a2, a3, v135, a1, &v151);
    swift_release();
  }
  while (v111 != v112);
LABEL_142:
  swift_bridgeObjectRelease_n();
  sub_1B1E02C04(0x6C706D6554657375, 0xEB00000000657461, &v149);
  if (!v150)
  {
    sub_1B1A0DD70((uint64_t)&v149);
LABEL_149:
    swift_bridgeObjectRetain();
    goto LABEL_150;
  }
  if ((swift_dynamicCast() & 1) == 0 || (v148[0] & 1) == 0)
    goto LABEL_149;
  sub_1B1E02C04(0x6574616C706D6574, 0xEC000000656D614ELL, &v149);
  if (!v150)
  {
    sub_1B1A0DD70((uint64_t)&v149);
    v115 = MEMORY[0x1E0DEA968];
    goto LABEL_156;
  }
  v114 = swift_dynamicCast();
  v115 = MEMORY[0x1E0DEA968];
  if ((v114 & 1) == 0)
  {
LABEL_156:
    v150 = v115;
    *(_QWORD *)&v149 = 0;
    *((_QWORD *)&v149 + 1) = 0xE000000000000000;
    sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v149, v148);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v149);
    sub_1B1A0DDAC(v148, &v149);
    swift_dynamicCast();
  }
LABEL_150:
  v116 = sub_1B1FC0A9C();
  v118 = v117;
  swift_bridgeObjectRelease();
  v119 = *a1;
  *(_QWORD *)&v149 = *(_QWORD *)(*a1 + 56);
  swift_bridgeObjectRetain();
  v120 = swift_bridgeObjectRetain();
  sub_1B19F48F0(v120);
  v121 = swift_bridgeObjectRetain();
  sub_1B19F48F0(v121);
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  sub_1B2228644();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v149 = 8201;
  *((_QWORD *)&v149 + 1) = 0xE200000000000000;
  swift_retain();
  sub_1B1C3A564(v116, v118, v135);
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v122 = v149;
  v123 = *(_QWORD **)(v119 + 128);
  swift_bridgeObjectRetain();
  v124 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v119 + 128) = v123;
  if ((v124 & 1) == 0)
  {
    v123 = sub_1B1C63044(0, v123[2] + 1, 1, v123);
    *(_QWORD *)(v119 + 128) = v123;
  }
  v126 = v123[2];
  v125 = v123[3];
  if (v126 >= v125 >> 1)
  {
    v123 = sub_1B1C63044(v125 > 1, v126 + 1, 1, v123);
    *(_QWORD *)(v119 + 128) = v123;
  }
  v123[2] = v126 + 1;
  *(_OWORD *)&v123[2 * v126 + 4] = v122;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1B1DD1140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD **a5)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v6 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B19FA2B4(v6, v5);
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_weakInit();
  swift_weakAssign();
  swift_bridgeObjectRetain();
  sub_1B1FC0A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  sub_1B1A06460();
  v7 = sub_1B222922C();
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = *a5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a5 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1B1C63044(0, v10[2] + 1, 1, v10);
    *a5 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1B1C63044(v12 > 1, v13 + 1, 1, v10);
    *a5 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = v7;
  v14[5] = v9;
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B19F9FEC(v6, v5);
}

uint64_t sub_1B1DD1398(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5, uint64_t *a6, _QWORD **a7)
{
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74[2];
  _QWORD v75[6];
  uint64_t *v76;

  v76 = a6;
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v12 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  sub_1B19FA278(*(_QWORD *)a1 + 56, (uint64_t)v75);
  v13 = *(_QWORD *)(a2 + 32);
  v64 = *(_QWORD *)(a2 + 24);
  v65 = v13;
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B19F8C58(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_weakInit();
  swift_weakAssign();
  v70 = v11;
  v71 = v12;
  v72 = v64;
  v73 = v65;
  sub_1B19FA278((uint64_t)v75, (uint64_t)v74);
  sub_1B19F8C58(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  swift_bridgeObjectRetain();
  v14 = sub_1B1FC0A9C();
  v16 = v15;
  swift_bridgeObjectRelease();
  v64 = v14;
  v65 = v16;
  v17 = *(_QWORD *)(a2 + 32);
  v68 = *(_QWORD *)(a2 + 24);
  v69 = v17;
  swift_bridgeObjectRetain();
  sub_1B2228890();
  v66 = a3;
  v67 = a4;
  sub_1B1A06460();
  v18 = sub_1B222922C();
  v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = v18;
  v61 = sub_1B1C3A644((uint64_t)v75, a5);
  if ((v61 & 1) == 0)
    goto LABEL_4;
  if (!a5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v21 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
LABEL_8:
    sub_1B1C39E78((uint64_t)v75, v18, v20, 0, a5);
    goto LABEL_9;
  }
LABEL_4:
  if (a5 == 2)
  {
    v64 = 544366966;
    v65 = 0xE400000000000000;
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B1C39C20((uint64_t)v75, 2u);
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B1E02E1C(v75, 1, (uint64_t)&v64);
    sub_1B19F8C58(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    v22 = v76;
    v23 = *v76;
LABEL_12:
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B1C3B344(&v64, v23, v18, v20, 2);
    goto LABEL_14;
  }
  v64 = sub_1B1C39C20((uint64_t)v75, a5);
  v65 = v24;
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
LABEL_9:
  v22 = v76;
  sub_1B1E02E1C(v75, 1, (uint64_t)&v64);
  sub_1B19F8C58(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  v23 = *v22;
  if (a5)
  {
    if (a5 == 1)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1C46B4C((uint64_t)&v64, v23);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B1C3F84C(&v64, v23, v18, v20, 0);
LABEL_14:
  v27 = v25;
  v28 = v26;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B1A203C4((uint64_t)&v64);
  if (v28)
  {
    v60 = v20;
    v29 = *v22;
    v64 = 8201;
    v65 = 0xE200000000000000;
    v68 = v27;
    v69 = v28;
    v66 = 10;
    v67 = 0xE100000000000000;
    swift_retain();
    sub_1B222922C();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v31 = v64;
    v30 = v65;
    v32 = *(_QWORD **)(v29 + 128);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v29 + 128) = v32;
    v34 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v32 = sub_1B1C63044(0, v32[2] + 1, 1, v32);
      *(_QWORD *)(v29 + 128) = v32;
    }
    v36 = v32[2];
    v35 = v32[3];
    if (v36 >= v35 >> 1)
    {
      v32 = sub_1B1C63044(v35 > 1, v36 + 1, 1, v32);
      *(_QWORD *)(v29 + 128) = v32;
    }
    v32[2] = v36 + 1;
    v37 = &v32[2 * v36];
    v37[4] = v31;
    v37[5] = v30;
    swift_release();
    swift_bridgeObjectRelease();
    a5 = v34;
    v20 = v60;
    v22 = v76;
  }
  v38 = *v22;
  v64 = 8201;
  v65 = 0xE200000000000000;
  swift_retain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v40 = v64;
  v39 = v65;
  v41 = *(_QWORD **)(v38 + 128);
  swift_bridgeObjectRetain();
  v42 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v38 + 128) = v41;
  if ((v42 & 1) == 0)
  {
    v41 = sub_1B1C63044(0, v41[2] + 1, 1, v41);
    *(_QWORD *)(v38 + 128) = v41;
  }
  v44 = v41[2];
  v43 = v41[3];
  if (v44 >= v43 >> 1)
  {
    v41 = sub_1B1C63044(v43 > 1, v44 + 1, 1, v41);
    *(_QWORD *)(v38 + 128) = v41;
  }
  v41[2] = v44 + 1;
  v45 = &v41[2 * v44];
  v45[4] = v40;
  v45[5] = v39;
  swift_release();
  swift_bridgeObjectRelease();
  v46 = MEMORY[0x1E0DEA968];
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1B226CD10;
  v48 = 38;
  if (a5 != 2)
    v48 = 0;
  v49 = 0xE000000000000000;
  v50 = 0xE100000000000000;
  if (a5 != 2)
    v50 = 0xE000000000000000;
  if ((v61 & 1) != 0)
    v48 = 0;
  else
    v49 = v50;
  *(_QWORD *)(v47 + 32) = v48;
  *(_QWORD *)(v47 + 40) = v49;
  *(_QWORD *)(v47 + 48) = v62;
  *(_QWORD *)(v47 + 56) = v20;
  v64 = v47;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, v46, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  v51 = sub_1B2228644();
  v53 = v52;
  swift_bridgeObjectRelease();
  v54 = *a7;
  v55 = swift_isUniquelyReferenced_nonNull_native();
  *a7 = v54;
  if ((v55 & 1) == 0)
  {
    v54 = sub_1B1C63044(0, v54[2] + 1, 1, v54);
    *a7 = v54;
  }
  v57 = v54[2];
  v56 = v54[3];
  if (v57 >= v56 >> 1)
  {
    v54 = sub_1B1C63044(v56 > 1, v57 + 1, 1, v54);
    *a7 = v54;
  }
  v54[2] = v57 + 1;
  v58 = &v54[2 * v57];
  v58[4] = v51;
  v58[5] = v53;
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B19F9FEC(v74[0], v74[1]);
}

uint64_t sub_1B1DD1B5C()
{
  sub_1B1DD7DC8();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1DD1B7C()
{
  return _s10SubContextCMa();
}

uint64_t _s10SubContextCMa()
{
  uint64_t result;

  result = qword_1EEF5E9D0;
  if (!qword_1EEF5E9D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B1DD1BC0()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_1B1DD1BF4(uint64_t a1, char a2)
{
  unint64_t result;
  uint64_t v5;
  char v6;
  _QWORD v7[5];
  char v8;

  result = sub_1B1A10AA4(*(_QWORD *)(a1 + 40), (uint64_t)&type metadata for LODCulled, v7);
  if ((v7[0] & 1) == 0)
  {
    v7[0] = &type metadata for LODCulled;
    v7[1] = &off_1E63C3FC0;
    v8 = 0;
    MEMORY[0x1E0C80A78](a2 & 1, v5);
    sub_1B1F05610(v6, a1, (uint64_t (*)(uint64_t))sub_1B1DD415C);
    return sub_1B1B68F14((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1B1DD1CC8@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  unsigned __int16 **v5;
  unsigned __int16 **v6;
  unsigned __int16 *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t inited;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  char v26;
  unsigned __int16 *v27;
  unsigned __int16 *v28;
  char v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v33;
  __int16 v34;
  char v35;

  v6 = v5;
  v11 = *v5;
  v12 = (uint64_t)*v5 + 41;
  v13 = (*v5)[8];
  v14 = v11[9];
  sub_1B1A19B14();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B227BE30;
  *(_QWORD *)(inited + 32) = &type metadata for Position;
  *(_QWORD *)(inited + 40) = &off_1E63C2410;
  *(_QWORD *)(inited + 48) = &type metadata for LODRenderer;
  *(_QWORD *)(inited + 56) = &off_1E6370DE8;
  *(_QWORD *)(inited + 64) = &type metadata for LODState;
  *(_QWORD *)(inited + 72) = &off_1E63BFBF8;
  *(_QWORD *)(inited + 80) = &type metadata for ModelRenderer;
  *(_QWORD *)(inited + 88) = &off_1E637B7C8;
  if (v14 > 0xF)
  {
    v33 = sub_1B1DC8944((char *)(v12 + v13), v14 >> 4);
    sub_1B19F4A48(inited);
    inited = v33;
  }
  v16 = v11[10];
  v17 = v11[11];
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAD00, (uint64_t)&type metadata for AccessControl, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B227BE30;
  *(_BYTE *)(v18 + 32) = a1;
  *(_BYTE *)(v18 + 33) = a2;
  *(_BYTE *)(v18 + 34) = a3;
  *(_BYTE *)(v18 + 35) = a4;
  if (v17)
  {
    v33 = sub_1B1DC8810((char *)(v12 + v16), v17);
    sub_1B19F499C(v18);
    v18 = v33;
    v19 = *(_QWORD *)(v33 + 16);
  }
  else
  {
    v19 = 4;
  }
  v20 = (uint64_t)*v6 + 41;
  v21 = (char *)(v20 + (*v6)[12]);
  v22 = (unint64_t)(*v6)[13] >> 4;
  v23 = (char *)(v20 + (*v6)[14]);
  v24 = (*v6)[15] / 0x18u;
  v25 = *((_DWORD *)v6 + 2);
  v26 = *((_BYTE *)v6 + 12);
  v27 = v6[4];
  v28 = v6[2];
  v29 = *((_BYTE *)v6 + 24);
  v30 = sub_1B1CC8DA4((char *)(inited + 32), *(_QWORD *)(inited + 16), (char *)(v18 + 32), v19, v21, v22, v23, v24);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a5 = v30;
  *(_DWORD *)(a5 + 8) = v25;
  *(_BYTE *)(a5 + 12) = v26;
  *(_WORD *)(a5 + 13) = v34;
  *(_BYTE *)(a5 + 15) = v35;
  *(_QWORD *)(a5 + 16) = v28;
  *(_BYTE *)(a5 + 24) = v29;
  *(_DWORD *)(a5 + 25) = v33;
  *(_DWORD *)(a5 + 28) = *(_DWORD *)((char *)&v33 + 3);
  *(_QWORD *)(a5 + 32) = v27;
  return result;
}

uint64_t sub_1B1DD1F18@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  unsigned __int16 **v6;
  unsigned __int16 **v7;
  unsigned __int16 *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t inited;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  char v27;
  unsigned __int16 *v28;
  unsigned __int16 *v29;
  char v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v35;
  __int16 v36;
  char v37;

  v7 = v6;
  v12 = *v6;
  v13 = (uint64_t)*v6 + 41;
  v14 = (*v6)[8];
  v15 = v12[9];
  sub_1B1A19B14();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226CAD0;
  *(_QWORD *)(inited + 32) = &type metadata for WorldTransform;
  *(_QWORD *)(inited + 40) = &off_1E6382C78;
  *(_QWORD *)(inited + 48) = &type metadata for LODRenderer;
  *(_QWORD *)(inited + 56) = &off_1E6370DE8;
  *(_QWORD *)(inited + 64) = &type metadata for LODState;
  *(_QWORD *)(inited + 72) = &off_1E63BFBF8;
  *(_QWORD *)(inited + 80) = &type metadata for ModelRenderer;
  *(_QWORD *)(inited + 88) = &off_1E637B7C8;
  *(_QWORD *)(inited + 96) = &type metadata for Parent;
  *(_QWORD *)(inited + 104) = &off_1E63BB960;
  if (v15 > 0xF)
  {
    v35 = sub_1B1DC8944((char *)(v13 + v14), v15 >> 4);
    sub_1B19F4A48(inited);
    inited = v35;
  }
  v17 = v12[10];
  v18 = v12[11];
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAD00, (uint64_t)&type metadata for AccessControl, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1B226CAD0;
  *(_BYTE *)(v19 + 32) = a1;
  *(_BYTE *)(v19 + 33) = a2;
  *(_BYTE *)(v19 + 34) = a3;
  *(_BYTE *)(v19 + 35) = a4;
  *(_BYTE *)(v19 + 36) = a5;
  if (v18)
  {
    v35 = sub_1B1DC8810((char *)(v13 + v17), v18);
    sub_1B19F499C(v19);
    v19 = v35;
    v20 = *(_QWORD *)(v35 + 16);
  }
  else
  {
    v20 = 5;
  }
  v21 = (uint64_t)*v7 + 41;
  v22 = (char *)(v21 + (*v7)[12]);
  v23 = (unint64_t)(*v7)[13] >> 4;
  v24 = (char *)(v21 + (*v7)[14]);
  v25 = (*v7)[15] / 0x18u;
  v26 = *((_DWORD *)v7 + 2);
  v27 = *((_BYTE *)v7 + 12);
  v28 = v7[4];
  v29 = v7[2];
  v30 = *((_BYTE *)v7 + 24);
  v31 = sub_1B1CC8DA4((char *)(inited + 32), *(_QWORD *)(inited + 16), (char *)(v19 + 32), v20, v22, v23, v24, v25);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a6 = v31;
  *(_DWORD *)(a6 + 8) = v26;
  *(_BYTE *)(a6 + 12) = v27;
  *(_WORD *)(a6 + 13) = v36;
  *(_BYTE *)(a6 + 15) = v37;
  *(_QWORD *)(a6 + 16) = v29;
  *(_BYTE *)(a6 + 24) = v30;
  *(_DWORD *)(a6 + 25) = v35;
  *(_DWORD *)(a6 + 28) = *(_DWORD *)((char *)&v35 + 3);
  *(_QWORD *)(a6 + 32) = v28;
  return result;
}

uint64_t *sub_1B1DD2184(uint64_t a1, float32x4_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t *result;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  BOOL v35;
  int v36;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  int v43;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int16 *v70;
  uint64_t v71[8];
  _QWORD v72[7];
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD v77[10];
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD v82[2];
  uint64_t v83;

  v3 = *(_OWORD *)(v2 + 112);
  v82[0] = *(_OWORD *)(v2 + 96);
  v82[1] = v3;
  v83 = *(_QWORD *)(v2 + 128);
  sub_1B1E8FCE4(a1, (uint64_t)v82, 0x200000000, v71);
  result = (uint64_t *)sub_1B19ED688((uint64_t)v71, (uint64_t)v72);
  v70 = (unsigned __int16 *)v72[0];
  if (v72[0])
  {
    v59 = v76;
    if (v76 >= 1)
    {
      v58 = v73;
      if (v73)
      {
        v57 = v72[5];
        v5 = v75;
        v6 = v75[4];
        v56 = v74;
        v7 = *(unsigned __int8 *)(v74 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v54 = v75 + 8;
        v69 = v72[0] + 41;
        swift_retain();
        swift_retain();
        swift_retain();
        v8 = 0;
        v55 = v7;
        v53 = v6;
        while (1)
        {
          v9 = (unsigned int *)(v57 + 48 * v8);
          v10 = *v9;
          v11 = v9[1];
          v12 = v9[2];
          v13 = *((_QWORD *)v9 + 2);
          v14 = *((_QWORD *)v9 + 3);
          v15 = *((_QWORD *)v9 + 5);
          v68 = v8;
          v66 = *((_QWORD *)v9 + 4);
          if (v7)
          {
            v16 = *(os_unfair_lock_s **)(v15 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v16);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          v62 = v5[7];
          v63 = v5[6];
          v61 = v5[8];
          v65 = v5[9];
          v67 = v5[10];
          v17 = v5[4];
          v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v5[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v5[7] = v18;
          v54[1] = 0;
          v54[2] = 0;
          *v54 = 0;
          swift_release();
          v77[0] = v56;
          v77[1] = v15;
          v64 = v15;
          v77[2] = v5;
          v77[3] = v12;
          v77[4] = (v11 - v10 + v12);
          v77[5] = v59;
          v77[6] = v10;
          v77[7] = v11;
          v77[8] = 0;
          v77[9] = 0;
          v78 = 1;
          v79 = v13;
          v80 = v14;
          v81 = v66;
          sub_1B1DD2604(v77, a2);
          v19 = v5[6];
          v20 = v5[8];
          if (!v20)
          {
            v46 = v5[7];
            v47 = (_QWORD *)v5[4];
            v6 = v53;
            v50 = v63;
            v49 = v64;
            v52 = v61;
            v51 = v62;
            v48 = v65;
            goto LABEL_47;
          }
          for (i = 0; i != v20; ++i)
          {
            v23 = (uint64_t *)(v19 + 48 * i);
            v24 = *v23;
            v25 = (void (*)(uint64_t))v23[4];
            v26 = v5[9];
            if (v26)
              v27 = v24 == v26;
            else
              v27 = 0;
            if (v27 || !v70[11])
              goto LABEL_11;
            v28 = v70[9];
            v29 = (_QWORD *)(v69 + v70[8]);
            v30 = v23[2];
            v31 = v29;
            v32 = v28 >> 4;
            v33 = v69;
            if (v28 >= 0x10)
            {
              while (*v31 != v24)
              {
                ++v33;
                v31 += 2;
                if (!--v32)
                  goto LABEL_26;
              }
              v34 = *(unsigned __int8 *)(v33 + v70[10]);
              v35 = v34 > 5;
              v36 = (1 << v34) & 0x23;
              if (v35 || v36 == 0)
              {
LABEL_11:
                v22 = swift_retain();
                v25(v22);
                swift_release();
                continue;
              }
            }
LABEL_26:
            if (swift_conformsToProtocol2())
              v38 = v30;
            else
              v38 = 0;
            if (v38)
            {
              if (v28 < 0x10)
                goto LABEL_11;
              v39 = v29;
              v40 = v28 >> 4;
              v41 = v69;
              while (*v39 != v38)
              {
                ++v41;
                v39 += 2;
                if (!--v40)
                  goto LABEL_39;
              }
              v42 = *(unsigned __int8 *)(v41 + v70[10]);
              v35 = v42 > 5;
              v43 = (1 << v42) & 0x23;
              if (v35 || v43 == 0)
                goto LABEL_11;
LABEL_39:
              v45 = 16 * (v28 >> 4);
              while (*v29 != v38)
              {
                v29 += 2;
                v45 -= 16;
                if (!v45)
                  goto LABEL_11;
              }
            }
          }
          v46 = v5[7];
          v19 = v5[6];
          v47 = (_QWORD *)v5[4];
          v6 = v53;
          v48 = v65;
          if ((uint64_t)v5[8] >= 1)
            swift_arrayDestroy();
          v50 = v63;
          v49 = v64;
          v52 = v61;
          v51 = v62;
LABEL_47:
          ecs_stack_allocator_deallocate(v47, v19, 48 * v46);
          v5[6] = v50;
          v5[7] = v51;
          v5[8] = v52;
          v5[9] = v48;
          v5[10] = v67;
          sub_1B1F03804((char *)v49);
          ecs_stack_allocator_pop_snapshot(v6);
          v7 = v55;
          if ((v55 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 376));
          }
          swift_release();
          v8 = v68 + 1;
          if (v68 + 1 == v58)
          {
            sub_1B19ED748(v71);
            return sub_1B19ED748(v71);
          }
        }
      }
    }
    return sub_1B19ED748(v71);
  }
  return result;
}

uint64_t sub_1B1DD2604(_QWORD *a1, float32x4_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float32x4_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int32 v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  float *v22;
  float *v23;
  BOOL v24;
  float v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  float32x2_t *v35;
  float32x2_t v36;
  float v37;
  float *v38;
  _QWORD *v40;
  float *v41;
  uint64_t v42;
  float v43;
  float v46;
  uint64_t v47;
  float v48;
  float v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v54[4];

  v3 = (uint64_t *)a1[11];
  v4 = a1[12];
  v5 = a1[13];
  v7 = (float32x4_t *)a1[1];
  v6 = a1[2];
  swift_retain();
  v8 = sub_1B1A12038((uint64_t)&type metadata for LODRenderer, (uint64_t)&off_1E6370DB8, v3, v4, v5, v6);
  v9 = sub_1B1A12038((uint64_t)&type metadata for LODState, (uint64_t)&off_1E63BFBC8, v3, v4, v5, v6);
  v52 = v6;
  v10 = sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v3, v4, v5, v6);
  v11 = v7[7].i32[1];
  if (v7[19].i32[2] != v11)
  {
    v12 = a1[6];
    v13 = 0.0;
    v14 = a1[7] - v12;
    if (v14)
    {
      v26 = (uint64_t *)(v8 + 8 * v12);
      do
      {
        v29 = *v26++;
        v28 = v29;
        if (v29)
        {
          v30 = *(_QWORD *)(v28 + 40);
          if (v30)
          {
            v27 = *(_QWORD *)(v28 + 32) + 4 * v30;
            if (v13 <= *(float *)(v27 - 4))
              v13 = *(float *)(v27 - 4);
          }
          else if (v13 <= 0.0)
          {
            v13 = 0.0;
          }
        }
        --v14;
      }
      while (v14);
    }
    v7[19].f32[1] = v13;
    v7[19].i32[2] = v11;
  }
  sub_1B1A10AA4(v7[2].u64[1], (uint64_t)&type metadata for LODCulled, v54);
  if (v7[19].i32[0] == v7[7].i32[1])
  {
    v15 = vsubq_f32(vabdq_f32(a2, v7[17]), v7[18]);
    v15.i32[3] = 0;
    v16 = vmaxnmq_f32(v15, (float32x4_t)0);
    v17 = vmulq_f32(v16, v16);
    if (v7[19].f32[1] < vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v17, 2), vaddq_f32(v17, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v17.f32, 1))).f32[0])
    {
      if ((v54[0] & 1) == 0)
        sub_1B1DD1BF4((uint64_t)v7, 0);
      return swift_release();
    }
  }
  v18 = a1[6];
  v19 = a1[7];
  if (v19 == v18)
    return swift_release();
  v21 = v18 + 1;
  v22 = (float *)(v9 + 12 * v18 + 4);
  v23 = (float *)(v10 + 16 * v18 + 4);
  v24 = 1;
  while (1)
  {
    if (v24)
    {
      v25 = (float)((float)(a2.f32[2] - v23[1]) * (float)(a2.f32[2] - v23[1]))
          + (float)((float)((float)(a2.f32[0] - *(v23 - 1)) * (float)(a2.f32[0] - *(v23 - 1)))
                  + (float)((float)(a2.f32[1] - *v23) * (float)(a2.f32[1] - *v23)));
      if (*(v22 - 1) <= v25)
        break;
    }
    if (v19 == v21)
      goto LABEL_27;
    v24 = 0;
LABEL_12:
    ++v21;
    v22 += 3;
    v23 += 4;
  }
  v24 = v25 < *v22;
  if (v19 != v21)
    goto LABEL_12;
  if (v25 < *v22)
    return swift_release();
LABEL_27:
  v31 = v54[0];
  v32 = sub_1B1A12038((uint64_t)&type metadata for ModelRenderer, (uint64_t)&off_1E637B750, v3, v4, v5, v52);
  v33 = ecs_stack_allocator_allocate(*(_QWORD *)(v52 + 32), 8 * (v19 - v18), 8);
  v34 = 0;
  v54[0] = (unint64_t)v33;
  v54[1] = v19 - v18;
  while (2)
  {
    v35 = (float32x2_t *)(v10 + 16 * v18);
    v36 = vsub_f32(*(float32x2_t *)a2.f32, *v35);
    v37 = (float)((float)(a2.f32[2] - v35[1].f32[0]) * (float)(a2.f32[2] - v35[1].f32[0]))
        + vaddv_f32(vmul_f32(v36, v36));
    v38 = (float *)(v9 + 12 * v18);
    if (*v38 <= v37 && v37 < v38[1])
      goto LABEL_29;
    v40 = *(_QWORD **)(v8 + 8 * v18);
    if (!v40)
      goto LABEL_29;
    v41 = (float *)v40[4];
    v42 = v40[5];
    if (v42)
      v43 = v41[v42 - 1];
    else
      v43 = INFINITY;
    if (v37 >= v43 || v41 == 0 || v42 == 0)
      goto LABEL_46;
    v46 = *v41;
    if (v37 < *v41)
    {
      v47 = 0;
      v48 = 0.0;
      goto LABEL_58;
    }
    if (v42 == 1)
    {
LABEL_46:
      if ((v31 & 1) == 0)
        v33[v34++] = v18;
      *(_DWORD *)(v9 + 12 * v18 + 8) = -1;
      *v38 = v43;
      v38[1] = INFINITY;
      goto LABEL_29;
    }
    v49 = v41[1];
    if (v37 >= v49)
    {
      v50 = 4 * v42 - 8;
      v51 = 2;
      while (v50)
      {
        v48 = v49;
        v49 = v41[v51++];
        v50 -= 4;
        if (v37 < v49)
        {
          v47 = v51 - 1;
          goto LABEL_57;
        }
      }
      goto LABEL_46;
    }
    v48 = *v41;
    v47 = 1;
LABEL_57:
    v46 = v49;
LABEL_58:
    *(_DWORD *)(v9 + 12 * v18 + 8) = v47;
    *v38 = v48;
    v38[1] = v46;
    *(_OWORD *)(v32 + 16 * v18) = *(_OWORD *)(v40[2] + 16 * v47);
LABEL_29:
    if (++v18 != v19)
      continue;
    break;
  }
  v54[2] = v34;
  swift_retain();
  sub_1B1DD3F3C(v52, (uint64_t)v7, v54, 0, v52);
  return swift_release_n();
}

uint64_t *sub_1B1DD2A5C(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t *result;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  BOOL v35;
  int v36;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  int v43;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int16 *v70;
  uint64_t v71[8];
  _QWORD v72[7];
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD v77[10];
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD v82[2];
  uint64_t v83;

  v3 = *(_OWORD *)(v2 + 152);
  v82[0] = *(_OWORD *)(v2 + 136);
  v82[1] = v3;
  v83 = *(_QWORD *)(v2 + 168);
  sub_1B1E8FCE4(a1, (uint64_t)v82, 0x200000000, v71);
  result = (uint64_t *)sub_1B19ED688((uint64_t)v71, (uint64_t)v72);
  v70 = (unsigned __int16 *)v72[0];
  if (v72[0])
  {
    v59 = v76;
    if (v76 >= 1)
    {
      v58 = v73;
      if (v73)
      {
        v57 = v72[5];
        v5 = v75;
        v6 = v75[4];
        v56 = v74;
        v7 = *(unsigned __int8 *)(v74 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v54 = v75 + 8;
        v69 = v72[0] + 41;
        swift_retain();
        swift_retain();
        swift_retain();
        v8 = 0;
        v55 = v7;
        v53 = v6;
        while (1)
        {
          v9 = (unsigned int *)(v57 + 48 * v8);
          v10 = *v9;
          v11 = v9[1];
          v12 = v9[2];
          v13 = *((_QWORD *)v9 + 2);
          v14 = *((_QWORD *)v9 + 3);
          v15 = *((_QWORD *)v9 + 5);
          v68 = v8;
          v66 = *((_QWORD *)v9 + 4);
          if (v7)
          {
            v16 = *(os_unfair_lock_s **)(v15 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v16);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          v62 = v5[7];
          v63 = v5[6];
          v61 = v5[8];
          v65 = v5[9];
          v67 = v5[10];
          v17 = v5[4];
          v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v5[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v5[7] = v18;
          v54[1] = 0;
          v54[2] = 0;
          *v54 = 0;
          swift_release();
          v77[0] = v56;
          v77[1] = v15;
          v64 = v15;
          v77[2] = v5;
          v77[3] = v12;
          v77[4] = (v11 - v10 + v12);
          v77[5] = v59;
          v77[6] = v10;
          v77[7] = v11;
          v77[8] = 0;
          v77[9] = 0;
          v78 = 1;
          v79 = v13;
          v80 = v14;
          v81 = v66;
          sub_1B1DD2EE0(v77, a2);
          v19 = v5[6];
          v20 = v5[8];
          if (!v20)
          {
            v46 = v5[7];
            v47 = (_QWORD *)v5[4];
            v6 = v53;
            v50 = v63;
            v49 = v64;
            v52 = v61;
            v51 = v62;
            v48 = v65;
            goto LABEL_47;
          }
          for (i = 0; i != v20; ++i)
          {
            v23 = (uint64_t *)(v19 + 48 * i);
            v24 = *v23;
            v25 = (void (*)(uint64_t))v23[4];
            v26 = v5[9];
            if (v26)
              v27 = v24 == v26;
            else
              v27 = 0;
            if (v27 || !v70[11])
              goto LABEL_11;
            v28 = v70[9];
            v29 = (_QWORD *)(v69 + v70[8]);
            v30 = v23[2];
            v31 = v29;
            v32 = v28 >> 4;
            v33 = v69;
            if (v28 >= 0x10)
            {
              while (*v31 != v24)
              {
                ++v33;
                v31 += 2;
                if (!--v32)
                  goto LABEL_26;
              }
              v34 = *(unsigned __int8 *)(v33 + v70[10]);
              v35 = v34 > 5;
              v36 = (1 << v34) & 0x23;
              if (v35 || v36 == 0)
              {
LABEL_11:
                v22 = swift_retain();
                v25(v22);
                swift_release();
                continue;
              }
            }
LABEL_26:
            if (swift_conformsToProtocol2())
              v38 = v30;
            else
              v38 = 0;
            if (v38)
            {
              if (v28 < 0x10)
                goto LABEL_11;
              v39 = v29;
              v40 = v28 >> 4;
              v41 = v69;
              while (*v39 != v38)
              {
                ++v41;
                v39 += 2;
                if (!--v40)
                  goto LABEL_39;
              }
              v42 = *(unsigned __int8 *)(v41 + v70[10]);
              v35 = v42 > 5;
              v43 = (1 << v42) & 0x23;
              if (v35 || v43 == 0)
                goto LABEL_11;
LABEL_39:
              v45 = 16 * (v28 >> 4);
              while (*v29 != v38)
              {
                v29 += 2;
                v45 -= 16;
                if (!v45)
                  goto LABEL_11;
              }
            }
          }
          v46 = v5[7];
          v19 = v5[6];
          v47 = (_QWORD *)v5[4];
          v6 = v53;
          v48 = v65;
          if ((uint64_t)v5[8] >= 1)
            swift_arrayDestroy();
          v50 = v63;
          v49 = v64;
          v52 = v61;
          v51 = v62;
LABEL_47:
          ecs_stack_allocator_deallocate(v47, v19, 48 * v46);
          v5[6] = v50;
          v5[7] = v51;
          v5[8] = v52;
          v5[9] = v48;
          v5[10] = v67;
          sub_1B1F03804((char *)v49);
          ecs_stack_allocator_pop_snapshot(v6);
          v7 = v55;
          if ((v55 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 376));
          }
          swift_release();
          v8 = v68 + 1;
          if (v68 + 1 == v58)
          {
            sub_1B19ED748(v71);
            return sub_1B19ED748(v71);
          }
        }
      }
    }
    return sub_1B19ED748(v71);
  }
  return result;
}

uint64_t sub_1B1DD2EE0(_QWORD *a1, __n128 a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  float *v18;
  float v19;
  float *v20;
  uint64_t v21;
  float *v22;
  uint64_t v23;
  float v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  unint64_t v30[2];
  uint64_t v31;

  v3 = (uint64_t *)a1[11];
  v4 = a1[12];
  v5 = a1[13];
  v7 = a1[1];
  v6 = a1[2];
  v8 = sub_1B1A12038((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v3, v4, v5, v6);
  v9 = sub_1B1A12038((uint64_t)&type metadata for LODRenderer, (uint64_t)&off_1E6370DB8, v3, v4, v5, v6);
  v10 = sub_1B1A12038((uint64_t)&type metadata for LODState, (uint64_t)&off_1E63BFBC8, v3, v4, v5, v6);
  v11 = sub_1B1A12038((uint64_t)&type metadata for ModelRenderer, (uint64_t)&off_1E637B750, v3, v4, v5, v6);
  v13 = a1[6];
  v12 = a1[7];
  v14 = ecs_stack_allocator_allocate(*(_QWORD *)(v6 + 32), 8 * (v12 - v13), 8);
  v30[0] = (unint64_t)v14;
  v30[1] = v12 - v13;
  v31 = 0;
  if (v12 != v13)
  {
    v15 = 0;
    while (1)
    {
      v16 = *(_QWORD **)(v9 + 8 * v13);
      if (v16)
      {
        v17 = v16[5];
        if (v17)
        {
          v18 = (float *)(v8 + (v13 << 6));
          v19 = (float)((float)(a2.n128_f32[2] - v18[14]) * (float)(a2.n128_f32[2] - v18[14]))
              + (float)((float)((float)(a2.n128_f32[0] - v18[12]) * (float)(a2.n128_f32[0] - v18[12]))
                      + (float)((float)(a2.n128_f32[1] - v18[13]) * (float)(a2.n128_f32[1] - v18[13])));
          v20 = (float *)v16[4];
          v21 = 0;
          if (v19 < *v20)
          {
LABEL_11:
            v25 = v10 + 12 * v13;
            v27 = *(int *)(v25 + 8);
            v26 = (_DWORD *)(v25 + 8);
            if (v21 != v27)
            {
              *v26 = v21;
              *(_OWORD *)(v11 + 16 * v13) = *(_OWORD *)(v16[2] + 16 * v21);
            }
            goto LABEL_4;
          }
          v22 = v20 + 1;
          v23 = v17 - 1;
          while (v23 != v21)
          {
            v24 = v22[v21++];
            if (v19 < v24)
              goto LABEL_11;
          }
        }
        v14[v15++] = v13;
      }
LABEL_4:
      if (++v13 == v12)
      {
        v31 = v15;
        break;
      }
    }
  }
  swift_retain();
  sub_1B1DD3F3C(v6, v7, v30, 0, v6);
  return swift_release();
}

uint64_t *sub_1B1DD30E8(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t *result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  int v17;
  int v18;
  __n128 v19;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24[12];
  uint64_t v25[8];
  _QWORD v26[7];
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[12];
  _OWORD v30[2];
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;

  v3 = *(_OWORD *)(v1 + 32);
  v32[0] = *(_OWORD *)(v1 + 16);
  v32[1] = v3;
  v33 = *(_QWORD *)(v1 + 48);
  sub_1B1E8FCE4(a1, (uint64_t)v32, 0x200000000, v24);
  result = (uint64_t *)sub_1B19ED688((uint64_t)v24, (uint64_t)v29);
  if (*(_QWORD *)&v29[0])
  {
    v29[8] = v29[2];
    v29[9] = v29[3];
    v29[10] = v29[4];
    v29[11] = v29[5];
    v29[6] = v29[0];
    v29[7] = v29[1];
    sub_1B1BEC018(0);
    v19 = *(__n128 *)(sub_1B1A11FDC((uint64_t)&type metadata for Position) + 16 * v5);
    v6 = *(_OWORD *)(v1 + 72);
    v30[0] = *(_OWORD *)(v1 + 56);
    v30[1] = v6;
    v31 = *(_QWORD *)(v1 + 88);
    sub_1B1E8FCE4(a1, (uint64_t)v30, 0x200000000, v25);
    sub_1B19ED688((uint64_t)v25, (uint64_t)v26);
    if (v26[0])
    {
      if (v28 >= 1)
      {
        v7 = v27;
        if (v27)
        {
          v8 = v26[5];
          swift_retain();
          swift_retain();
          swift_retain();
          v9 = 48 * v7;
          v10 = (uint64_t *)(v8 + 40);
          do
          {
            v15 = *v10;
            v16 = *(os_unfair_lock_s **)(*v10 + 376);
            swift_retain();
            os_unfair_lock_lock(v16);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
            v17 = *(_DWORD *)(v15 + 24);
            swift_retain();
            v23 = 0;
            memset(v22, 0, sizeof(v22));
            v21 = 0;
            memset(v20, 0, sizeof(v20));
            v18 = sub_1B1DA4ED8(v17, (uint64_t)&type metadata for LODState, (uint64_t)&off_1E63BFBC8, 0, 0, (uint64_t)v22, (uint64_t)v20);
            swift_release();
            sub_1B1A12E98((uint64_t)v20);
            sub_1B1A12E98((uint64_t)v22);
            if (sub_1B1A10B20(v18))
            {
              sub_1B1A10BB0(v18);
            }
            else
            {
              v11 = *(_QWORD *)(v15 + 232);
              v12 = *(_QWORD *)(v15 + 240);
              v13 = *(unsigned __int8 *)(v15 + 120);
              v14 = *(unsigned int *)(v15 + 28);
              LOBYTE(v22[0]) = *(_BYTE *)(v15 + 32);
              sub_1B1FD8C68(v11, v12, v18, v13, v14 | ((unint64_t)LOBYTE(v22[0]) << 32), 0, 0, 0);
            }
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
            swift_release();
            v10 += 6;
            v9 -= 48;
          }
          while (v9);
          sub_1B19ED748(v25);
        }
      }
      sub_1B19ED748(v25);
    }
    sub_1B1DD2184(a1, (float32x4_t)v19);
    sub_1B1DD2A5C(a1, v19);
    return sub_1B19ED748(v24);
  }
  return result;
}

uint64_t type metadata accessor for LODSystem()
{
  return objc_opt_self();
}

uint64_t sub_1B1DD33C4()
{
  uint64_t v0;
  __int128 v1;
  uint64_t inited;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[2];
  uint64_t v9;
  _BYTE v10[40];
  _OWORD v11[2];
  uint64_t v12;
  _BYTE v13[40];
  _OWORD v14[2];
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v36 = qword_1ED4D09F8;
  v37 = 0;
  v38 = 2;
  v39 = 0;
  v40 = 2;
  v41 = 0;
  swift_retain();
  sub_1B19EF790((uint64_t)v8);
  swift_release();
  v1 = v8[1];
  *(_OWORD *)(v0 + 16) = v8[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = v9;
  v30 = qword_1ED4D09F8;
  v31 = 0;
  v32 = 2;
  v33 = 0;
  v34 = 2;
  v35 = 0;
  swift_retain();
  sub_1B1B6F21C((uint64_t)v10);
  swift_release();
  sub_1B1A19B14();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = &type metadata for LODState;
  *(_QWORD *)(inited + 40) = &off_1E63BFBF8;
  sub_1B1B44110(v11, inited);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v10);
  v3 = v11[1];
  *(_OWORD *)(v0 + 56) = v11[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 88) = v12;
  v24 = qword_1ED4D09F8;
  v25 = 0;
  v26 = 2;
  v27 = 0;
  v28 = 2;
  v29 = 0;
  swift_retain();
  sub_1B1DD1CC8(1, 1, 2, 2, (uint64_t)v13);
  swift_release();
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v4 + 32) = &type metadata for Parent;
  *(_QWORD *)(v4 + 40) = &off_1E63BB960;
  sub_1B1B44110(v14, v4);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v13);
  v5 = v14[1];
  *(_OWORD *)(v0 + 96) = v14[0];
  *(_OWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 128) = v15;
  v18 = qword_1ED4D09F8;
  v19 = 0;
  v20 = 2;
  v21 = 0;
  v22 = 2;
  v23 = 0;
  swift_retain();
  sub_1B1DD1F18(1, 1, 2, 2, 1, (uint64_t)v16);
  swift_release();
  v6 = v16[1];
  *(_OWORD *)(v0 + 136) = v16[0];
  *(_OWORD *)(v0 + 152) = v6;
  *(_QWORD *)(v0 + 168) = v17;
  return v0;
}

uint64_t sub_1B1DD3660()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1B1DD33C4();
  return v0;
}

const char *sub_1B1DD3694()
{
  return "LOD";
}

uint64_t *sub_1B1DD36A8(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  BOOL v37;
  int v38;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  int v45;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int16 *v70;
  uint64_t v71;
  int v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[12];
  _QWORD v83[7];
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD v88[10];
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  int v96;
  char v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[2];
  uint64_t v107;

  v3 = *(_OWORD *)(v1 + 32);
  v106[0] = *(_OWORD *)(v1 + 16);
  v106[1] = v3;
  v107 = *(_QWORD *)(v1 + 48);
  v4 = &v71;
  sub_1B1E8FCE4(a1, (uint64_t)v106, 0x200000000, &v71);
  v95 = v71;
  v96 = v72;
  v97 = v73;
  v98 = v74;
  v99 = v75;
  v100 = v76;
  v101 = v77;
  v102 = v78;
  v103 = v79;
  v104 = v80;
  v105 = v81;
  sub_1B1BEC018(0);
  v60 = *(__n128 *)(sub_1B1A11FDC((uint64_t)&type metadata for Position) + 16 * v5);
  v6 = *(_OWORD *)(v1 + 72);
  v93[0] = *(_OWORD *)(v1 + 56);
  v93[1] = v6;
  v94 = *(_QWORD *)(v1 + 88);
  sub_1B1E8FCE4(a1, (uint64_t)v93, 0x200000000, v82);
  sub_1B19ED688((uint64_t)v82, (uint64_t)v83);
  v70 = (unsigned __int16 *)v83[0];
  if (v83[0])
  {
    v59 = v87;
    if (v87 >= 1)
    {
      v58 = v84;
      if (v84)
      {
        v7 = 0;
        v57 = v83[5];
        v8 = v86;
        v56 = v85;
        v9 = *(unsigned __int8 *)(v85 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v10 = v86[4];
        v53 = v86 + 8;
        v69 = v83[0] + 41;
        v55 = v9;
        v54 = v10;
        do
        {
          v11 = (unsigned int *)(v57 + 48 * v7);
          v12 = *v11;
          v13 = v11[1];
          v14 = v11[2];
          v15 = *((_QWORD *)v11 + 2);
          v16 = *((_QWORD *)v11 + 3);
          v17 = *((_QWORD *)v11 + 5);
          v66 = v7;
          v67 = *((_QWORD *)v11 + 4);
          if (v9)
          {
            v18 = *(os_unfair_lock_s **)(v17 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v18);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v10);
          v62 = v8[7];
          v63 = v8[6];
          v61 = v8[8];
          v65 = v8[9];
          v68 = v8[10];
          v19 = v8[4];
          v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v8[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
          v8[7] = v20;
          v53[1] = 0;
          v53[2] = 0;
          *v53 = 0;
          swift_release();
          v88[0] = v56;
          v88[1] = v17;
          v64 = v17;
          v88[2] = v8;
          v88[3] = v14;
          v88[4] = (v13 - v12 + v14);
          v88[5] = v59;
          v88[6] = v12;
          v88[7] = v13;
          v88[8] = 0;
          v88[9] = 0;
          v89 = 1;
          v90 = v15;
          v91 = v16;
          v92 = v67;
          sub_1B1DD3BB0(v88, v60);
          v21 = v8[6];
          v22 = v8[8];
          if (!v22)
          {
            v48 = v8[7];
            v49 = (_QWORD *)v8[4];
            v51 = v65;
            v50 = v66;
            goto LABEL_46;
          }
          for (i = 0; i != v22; ++i)
          {
            v25 = (uint64_t *)(v21 + 48 * i);
            v26 = *v25;
            v27 = (void (*)(uint64_t))v25[4];
            v28 = v8[9];
            if (v28)
              v29 = v26 == v28;
            else
              v29 = 0;
            if (v29 || !v70[11])
              goto LABEL_11;
            v30 = v70[9];
            v31 = (_QWORD *)(v69 + v70[8]);
            v32 = v25[2];
            v33 = v31;
            v34 = v30 >> 4;
            v35 = v69;
            if (v30 >= 0x10)
            {
              while (*v33 != v26)
              {
                ++v35;
                v33 += 2;
                if (!--v34)
                  goto LABEL_26;
              }
              v36 = *(unsigned __int8 *)(v35 + v70[10]);
              v37 = v36 > 5;
              v38 = (1 << v36) & 0x23;
              if (v37 || v38 == 0)
              {
LABEL_11:
                v24 = swift_retain();
                v27(v24);
                swift_release();
                continue;
              }
            }
LABEL_26:
            if (swift_conformsToProtocol2())
              v40 = v32;
            else
              v40 = 0;
            if (v40)
            {
              if (v30 < 0x10)
                goto LABEL_11;
              v41 = v31;
              v42 = v30 >> 4;
              v43 = v69;
              while (*v41 != v40)
              {
                ++v43;
                v41 += 2;
                if (!--v42)
                  goto LABEL_39;
              }
              v44 = *(unsigned __int8 *)(v43 + v70[10]);
              v37 = v44 > 5;
              v45 = (1 << v44) & 0x23;
              if (v37 || v45 == 0)
                goto LABEL_11;
LABEL_39:
              v47 = 16 * (v30 >> 4);
              while (*v31 != v40)
              {
                v31 += 2;
                v47 -= 16;
                if (!v47)
                  goto LABEL_11;
              }
            }
          }
          v48 = v8[7];
          v21 = v8[6];
          v49 = (_QWORD *)v8[4];
          v51 = v65;
          v50 = v66;
          if ((uint64_t)v8[8] >= 1)
            swift_arrayDestroy();
LABEL_46:
          ecs_stack_allocator_deallocate(v49, v21, 48 * v48);
          v8[6] = v63;
          v8[7] = v62;
          v8[8] = v61;
          v8[9] = v51;
          v8[10] = v68;
          sub_1B1F03804((char *)v64);
          v10 = v54;
          ecs_stack_allocator_pop_snapshot(v54);
          v9 = v55;
          if ((v55 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 376));
          }
          swift_release();
          v7 = v50 + 1;
        }
        while (v7 != v58);
      }
    }
    sub_1B19ED748(&v71);
    v4 = v82;
  }
  return sub_1B19ED748(v4);
}

uint64_t sub_1B1DD3BB0(_QWORD *a1, __n128 a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  float *v14;
  float *v15;
  float32x2_t v16;
  float v17;
  unint64_t v21[2];
  uint64_t v22;

  v3 = (uint64_t *)a1[11];
  v4 = a1[12];
  v5 = a1[13];
  v7 = a1[1];
  v6 = a1[2];
  v8 = sub_1B1A12038((uint64_t)&type metadata for GenericLOD, (uint64_t)&off_1E636DC60, v3, v4, v5, v6);
  v9 = sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, v3, v4, v5, v6);
  v11 = a1[6];
  v10 = a1[7];
  v12 = ecs_stack_allocator_allocate(*(_QWORD *)(v6 + 32), 8 * (v10 - v11), 8);
  v21[0] = (unint64_t)v12;
  v21[1] = v10 - v11;
  v22 = 0;
  if (v10 != v11)
  {
    v13 = 0;
    v14 = (float *)(v9 + 16 * v11 + 8);
    v15 = (float *)(v8 + 8 * v11 + 4);
    do
    {
      v16 = vsub_f32((float32x2_t)a2.n128_u64[0], *(float32x2_t *)(v14 - 2));
      v17 = (float)((float)(a2.n128_f32[2] - *v14) * (float)(a2.n128_f32[2] - *v14)) + vaddv_f32(vmul_f32(v16, v16));
      if (*(v15 - 1) > v17 || v17 >= *v15)
        v12[v13++] = v11;
      ++v11;
      v14 += 4;
      v15 += 2;
    }
    while (v10 != v11);
    v22 = v13;
  }
  swift_retain();
  sub_1B1DD3F3C(v6, v7, v21, 0, v6);
  return swift_release();
}

uint64_t type metadata accessor for GenericLODSystem()
{
  return objc_opt_self();
}

uint64_t sub_1B1DD3D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD v8[2];
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v1 = qword_1ED4D09F8;
  sub_1B1A19B14();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226CD10;
  *(_QWORD *)(inited + 32) = &type metadata for PointOfCulling;
  *(_QWORD *)(inited + 40) = &off_1E6380438;
  *(_QWORD *)(inited + 48) = &type metadata for Position;
  *(_QWORD *)(inited + 56) = &off_1E63C2410;
  v18 = v1;
  v19 = 0;
  v20 = 2;
  v21 = 0;
  v22 = 2;
  v23 = 0;
  swift_retain();
  sub_1B1B0FA64(inited, (uint64_t)v8);
  swift_setDeallocating();
  swift_release();
  v3 = v8[1];
  *(_OWORD *)(v0 + 16) = v8[0];
  *(_OWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 48) = v9;
  v4 = qword_1ED4D09F8;
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B226CD10;
  *(_QWORD *)(v5 + 32) = &type metadata for GenericLOD;
  *(_QWORD *)(v5 + 40) = &off_1E636DC90;
  *(_QWORD *)(v5 + 48) = &type metadata for Position;
  *(_QWORD *)(v5 + 56) = &off_1E63C2410;
  v12 = v4;
  v13 = 0;
  v14 = 2;
  v15 = 0;
  v16 = 2;
  v17 = 0;
  swift_retain();
  sub_1B1B0FA64(v5, (uint64_t)v10);
  swift_setDeallocating();
  swift_release();
  v6 = v10[1];
  *(_OWORD *)(v0 + 56) = v10[0];
  *(_OWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 88) = v11;
  return v0;
}

uint64_t sub_1B1DD3F08()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1B1DD3D30();
  return v0;
}

_QWORD *sub_1B1DD3F3C(uint64_t a1, uint64_t a2, unint64_t *a3, char a4, uint64_t a5)
{
  int v8;
  _QWORD *result;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  ValueMetadata *v19;
  _UNKNOWN **v20;
  char v21;
  ValueMetadata **v22;

  v8 = a4 & 1;
  result = (_QWORD *)sub_1B1A10AA4(*(_QWORD *)(a2 + 40), (uint64_t)&type metadata for LODCulled, &v19);
  if (v19 != 1)
  {
    v19 = &type metadata for LODCulled;
    v20 = &off_1E63C3FC0;
    v21 = 0;
    MEMORY[0x1E0C80A78](result, v10);
    goto LABEL_6;
  }
  v12 = a3[1];
  v11 = a3[2];
  if (v11 < v12)
  {
    if (v11)
    {
      v13 = sub_1B1A124BC();
      v19 = &type metadata for LODCulled;
      v20 = &off_1E63C3FC0;
      v21 = 1;
      MEMORY[0x1E0C80A78](v13, v14);
LABEL_6:
      sub_1B1F05610(v8, a2, (uint64_t (*)(uint64_t))sub_1B1DD415C);
      return (_QWORD *)sub_1B1B68F14((uint64_t)&v19);
    }
    v22 = &v19;
    v19 = &type metadata for LODCulled;
    v20 = &off_1E63C3FC0;
    v21 = 1;
    MEMORY[0x1E0C80A78](result, v10);
    sub_1B1F05610(v8, a2, (uint64_t (*)(uint64_t))sub_1B1DD415C);
    result = (_QWORD *)sub_1B1B68F14((uint64_t)&v19);
    v15 = *a3;
    v16 = 8 * a3[1];
    if (v8)
      goto LABEL_10;
    return ecs_stack_allocator_deallocate(*(_QWORD **)(a5 + 32), v15, v16);
  }
  v15 = *a3;
  v16 = 8 * v12;
  if (!v8)
    return ecs_stack_allocator_deallocate(*(_QWORD **)(a5 + 32), v15, v16);
LABEL_10:
  v17 = *(_QWORD *)(a5 + 40);
  v18 = *(_QWORD *)(v17 + 32) - v16;
  if (*(_QWORD *)(v17 + 16) + v18 == v15)
    *(_QWORD *)(v17 + 32) = v18;
  return result;
}

uint64_t sub_1B1DD4160(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1F0577C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56));
}

uint64_t sub_1B1DD4178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v9(a2, a3, a4, a5);
  return swift_release();
}

__n128 sub_1B1DD41D8@<Q0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, unint64_t a6@<X8>)
{
  unint64_t v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  uint64_t ComputePass;
  uint64_t v40;
  double v41;
  uint64_t i;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __n128 result;
  uint64_t v48;
  _BYTE aBlock[136];
  uint64_t v50;

  v10 = a1;
  v50 = *MEMORY[0x1E0C80C00];
  v12 = (uint64_t *)HIDWORD(a1);
  sub_1B1DD479C(0, (unint64_t *)&qword_1EEF5E9E0, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = &aBlock[-v15];
  sub_1B1DD479C(0, (unint64_t *)&qword_1EEF5D9C0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = &aBlock[-v19];
  if ((_DWORD)v10 == -1 && !(_DWORD)v12)
    goto LABEL_24;
  swift_retain();
  sub_1B1D16B3C(v10, (uint64_t)v20);
  swift_release();
  sub_1B1DD47F0(0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
  v22 = v21;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21) == 1)
    goto LABEL_25;
  v23 = *(_QWORD *)&v20[*(int *)(v22 + 44)];
  swift_bridgeObjectRetain();
  sub_1B1DD4850((uint64_t)v20, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
  if (!v23)
    goto LABEL_26;
  if (!(v23 >> 62))
  {
    v20 = *(_BYTE **)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_7;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  v20 = (_BYTE *)sub_1B22296AC();
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    while (1)
    {
LABEL_26:
      sub_1B2229688();
      __break(1u);
LABEL_24:
      sub_1B1DD47F0(0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v20, 1, 1, v48);
LABEL_25:
      sub_1B1DD488C((uint64_t)v20, (unint64_t *)&qword_1EEF5D9C0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
    }
  }
LABEL_7:
  if ((v23 & 0xC000000000000001) != 0)
  {
    v24 = MEMORY[0x1B5E21018](0, v23);
  }
  else
  {
    v24 = *(_QWORD *)(v23 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1B1D169CC(v10, (uint64_t)v16);
  swift_release();
  sub_1B1DD47F0(0, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
  v26 = v25;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v16, 1, v25) == 1)
  {
    sub_1B1DD488C((uint64_t)v16, (unint64_t *)&qword_1EEF5E9E0, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
    v27 = 0;
  }
  else
  {
    v28 = &v16[*(int *)(v26 + 36)];
    v29 = *(_QWORD *)v28;
    v30 = (uint64_t)v16;
    v31 = v10;
    v10 = a6;
    v32 = v24;
    v33 = a3;
    v34 = (int)v12;
    v12 = a5;
    v35 = v28[8];
    sub_1B1DD4850(v30, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
    v36 = v35 == 0;
    a5 = v12;
    LODWORD(v12) = v34;
    a3 = v33;
    v24 = v32;
    a6 = v10;
    LODWORD(v10) = v31;
    if (v36)
      v27 = v29;
    else
      v27 = 0;
  }
  v37 = swift_allocObject();
  *(_DWORD *)(v37 + 16) = v10;
  *(_DWORD *)(v37 + 20) = (_DWORD)v12;
  *(_QWORD *)(v37 + 24) = a2;
  *(_QWORD *)(v37 + 32) = v27;
  *(_QWORD *)(v37 + 40) = v24;
  *(_QWORD *)(v37 + 48) = a3;
  *(_QWORD *)(v37 + 56) = a4;
  *(_QWORD *)&aBlock[32] = sub_1B1DD56E8;
  *(_QWORD *)&aBlock[40] = v37;
  *(_QWORD *)aBlock = MEMORY[0x1E0C809B0];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_1B1DD4178;
  *(_QWORD *)&aBlock[24] = &unk_1E63D4858;
  v38 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  ComputePass = RGBuilderCreateComputePass(a5, "Custom compute", v38);
  _Block_release(v38);
  v40 = *(_QWORD *)(a4 + 16);
  if (v40)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v40; ++i)
    {
      v43 = *(_QWORD *)(a4 + 8 * i + 32);
      RGPassDependsOn(ComputePass, v43, v41);
    }
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)aBlock = ComputePass;
  memset(&aBlock[8], 0, 128);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  swift_unknownObjectRelease();
  v44 = *(_OWORD *)&aBlock[112];
  *(_OWORD *)(a6 + 96) = *(_OWORD *)&aBlock[96];
  *(_OWORD *)(a6 + 112) = v44;
  *(_QWORD *)(a6 + 128) = *(_QWORD *)&aBlock[128];
  v45 = *(_OWORD *)&aBlock[48];
  *(_OWORD *)(a6 + 32) = *(_OWORD *)&aBlock[32];
  *(_OWORD *)(a6 + 48) = v45;
  v46 = *(_OWORD *)&aBlock[80];
  *(_OWORD *)(a6 + 64) = *(_OWORD *)&aBlock[64];
  *(_OWORD *)(a6 + 80) = v46;
  result = *(__n128 *)&aBlock[16];
  *(_OWORD *)a6 = *(_OWORD *)aBlock;
  *(__n128 *)(a6 + 16) = result;
  return result;
}

void sub_1B1DD479C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, _UNKNOWN **))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1B1DD47F0(255, a3, a4);
    v5 = sub_1B2229124();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1B1DD47F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _UNKNOWN **))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for MetalFunctionScript(255);
    v7 = a3(a1, v6, &off_1ED4BF0F8);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1B1DD4850(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _UNKNOWN **))
{
  uint64_t v4;

  sub_1B1DD47F0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B1DD488C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, _UNKNOWN **))
{
  uint64_t v5;

  sub_1B1DD479C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B1DD48C8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, unint64_t a6@<X8>)
{
  unint64_t v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  uint64_t RenderPass;
  uint64_t v39;
  double v40;
  uint64_t i;
  uint64_t v42;
  uint64_t result;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE aBlock[136];
  uint64_t v51;

  v10 = a1;
  v51 = *MEMORY[0x1E0C80C00];
  v12 = (uint64_t *)HIDWORD(a1);
  sub_1B1DD479C(0, (unint64_t *)&qword_1EEF5E9E0, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = &aBlock[-v15];
  sub_1B1DD479C(0, (unint64_t *)&qword_1EEF5D9C0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = &aBlock[-v19];
  if ((_DWORD)v10 == -1 && !(_DWORD)v12)
  {
    sub_1B1DD47F0(0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v20, 1, 1, v49);
    goto LABEL_25;
  }
  swift_retain();
  sub_1B1D16B3C(v10, (uint64_t)v20);
  swift_release();
  sub_1B1DD47F0(0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
  v22 = v21;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21) == 1)
  {
LABEL_25:
    sub_1B1DD488C((uint64_t)v20, (unint64_t *)&qword_1EEF5D9C0, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
    goto LABEL_26;
  }
  v23 = *(_QWORD *)&v20[*(int *)(v22 + 44)];
  swift_bridgeObjectRetain();
  sub_1B1DD4850((uint64_t)v20, (unint64_t *)&qword_1ED4BB240, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptRuntime);
  if (!v23)
  {
LABEL_26:
    result = sub_1B2229688();
    __break(1u);
    return result;
  }
  if (!(v23 >> 62))
  {
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  v48 = sub_1B22296AC();
  swift_bridgeObjectRelease();
  if (!v48)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
LABEL_7:
  if ((v23 & 0xC000000000000001) != 0)
  {
    v24 = MEMORY[0x1B5E21018](0, v23);
  }
  else
  {
    v24 = *(_QWORD *)(v23 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1B1D169CC(v10, (uint64_t)v16);
  swift_release();
  sub_1B1DD47F0(0, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
  v26 = v25;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v16, 1, v25) == 1)
  {
    sub_1B1DD488C((uint64_t)v16, (unint64_t *)&qword_1EEF5E9E0, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
  }
  else
  {
    v27 = &v16[*(int *)(v26 + 36)];
    v28 = *(_QWORD *)v27;
    v29 = (uint64_t)v16;
    v30 = v10;
    v10 = a6;
    v31 = v24;
    v32 = a3;
    v33 = (int)v12;
    v12 = a5;
    v34 = v27[8];
    sub_1B1DD4850(v29, (unint64_t *)&unk_1ED4BB270, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for ScriptCompileAttempt);
    v35 = v34 == 1;
    a5 = v12;
    LODWORD(v12) = v33;
    a3 = v32;
    v24 = v31;
    a6 = v10;
    LODWORD(v10) = v30;
    if (!v35)
      goto LABEL_14;
  }
  v28 = 1;
LABEL_14:
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v28;
  *(_DWORD *)(v36 + 24) = v10;
  *(_DWORD *)(v36 + 28) = (_DWORD)v12;
  *(_QWORD *)(v36 + 32) = a2;
  *(_QWORD *)(v36 + 40) = v24;
  *(_QWORD *)(v36 + 48) = a3;
  *(_QWORD *)(v36 + 56) = a4;
  *(_QWORD *)&aBlock[32] = sub_1B1DD639C;
  *(_QWORD *)&aBlock[40] = v36;
  *(_QWORD *)aBlock = MEMORY[0x1E0C809B0];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_1B1DD4178;
  *(_QWORD *)&aBlock[24] = &unk_1E63D2AF0;
  v37 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  RenderPass = RGBuilderCreateRenderPass(a5, "Custom frag", v37);
  _Block_release(v37);
  v39 = *(_QWORD *)(a4 + 16);
  if (v39)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v39; ++i)
    {
      v42 = *(_QWORD *)(a4 + 8 * i + 32);
      RGPassDependsOn(RenderPass, v42, v40);
    }
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)aBlock = RenderPass;
  memset(&aBlock[8], 0, 128);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  result = swift_unknownObjectRelease();
  v44 = *(_OWORD *)&aBlock[112];
  *(_OWORD *)(a6 + 96) = *(_OWORD *)&aBlock[96];
  *(_OWORD *)(a6 + 112) = v44;
  *(_QWORD *)(a6 + 128) = *(_QWORD *)&aBlock[128];
  v45 = *(_OWORD *)&aBlock[48];
  *(_OWORD *)(a6 + 32) = *(_OWORD *)&aBlock[32];
  *(_OWORD *)(a6 + 48) = v45;
  v46 = *(_OWORD *)&aBlock[80];
  *(_OWORD *)(a6 + 64) = *(_OWORD *)&aBlock[64];
  *(_OWORD *)(a6 + 80) = v46;
  v47 = *(_OWORD *)&aBlock[16];
  *(_OWORD *)a6 = *(_OWORD *)aBlock;
  *(_OWORD *)(a6 + 16) = v47;
  return result;
}

void sub_1B1DD4E5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 *v13;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t CrossFrameResourceManager;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t GPUResourceManager;
  id v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  CFX::GPUResourceManager *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  CFX::CrossFrameResourceManager *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  id v61;
  __int128 v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  int *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  uint64_t v78;

  LOBYTE(v13) = a3;
  v78 = *MEMORY[0x1E0C80C00];
  sub_1B1B1F358();
  v69 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v68 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1B222820C();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  MEMORY[0x1E0C80A78](v18, v19);
  v65 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_BYTE)v13)
  {
    v21 = (a7
         + ((a5 - 0x61C8864680B583EBLL) << 6)
         + ((unint64_t)(a5 - 0x61C8864680B583EBLL) >> 2)
         - 0x61C8864680B583EBLL) ^ (a5 - 0x61C8864680B583EBLL);
    if (v13 == 2)
    {
      v70 = RGArgumentsGetComputeEncoder(a4);
      CrossFrameResourceManager = RGContextGetCrossFrameResourceManager(a2);
      RGCrossFrameResourceManager.get<A>(_:key:)(&v76, &_s20KernelScriptResourceVN, v21, CrossFrameResourceManager, &_s20KernelScriptResourceVN);
      if (v76)
      {
        v61 = v76;
        v23 = *(_QWORD *)(a9 + 16);
        if (v23)
        {
          v24 = 0;
          v60 = swift_bridgeObjectRetain();
          v13 = (unsigned __int8 *)(v60 + 56);
          v63 = 0x80000001B233CBF0;
          v62 = xmmword_1B226D240;
          v64 = a2;
          do
          {
            v25 = *((_QWORD *)v13 - 3);
            v26 = *((_QWORD *)v13 - 1);
            v27 = *v13;
            GPUResourceManager = RGContextGetGPUResourceManager(a2);
            v29 = (id)RGGPUResourceManagerGetTexture(GPUResourceManager, v26);
            if (v29)
            {
              v30 = (uint64_t)v29;
              objc_msgSend(v70, sel_setTexture_atIndex_, v29, v25, v60, v61);
              if (v27 == 1 || v27 == 2)
              {
                swift_unknownObjectRelease();
                v24 = v30;
              }
              else
              {
                swift_unknownObjectRelease();
              }
            }
            else
            {
              v72 = v23;
              if (qword_1ED4BF430 != -1)
                swift_once();
              v76 = 0;
              v77 = 0xE000000000000000;
              v73 = qword_1ED4D0FB0;
              swift_retain();
              sub_1B2229430();
              swift_bridgeObjectRelease();
              v75 = v25;
              v76 = (id)0xD00000000000001FLL;
              v77 = v63;
              sub_1B2229A0C();
              sub_1B2228890();
              swift_bridgeObjectRelease();
              sub_1B2228890();
              RGResource.name.getter();
              sub_1B2228890();
              swift_bridgeObjectRelease();
              v31 = v76;
              v32 = v77;
              v33 = sub_1B2228E90();
              if (qword_1ED4BF658 != -1)
                swift_once();
              v74 = v24;
              v34 = qword_1ED4D0FD0;
              v35 = qword_1ED4BF688;
              swift_retain();
              if (v35 != -1)
                swift_once();
              sub_1B1B42948();
              v36 = swift_allocObject();
              *(_OWORD *)(v36 + 16) = v62;
              *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v36 + 64) = sub_1B1B1F47C();
              *(_QWORD *)(v36 + 32) = v31;
              *(_QWORD *)(v36 + 40) = v32;
              swift_bridgeObjectRetain();
              sub_1B222835C();
              swift_bridgeObjectRelease();
              swift_retain();
              v71 = v34;
              v37 = v31;
              v38 = v65;
              sub_1B2228200();
              v39 = (uint64_t)v68;
              v40 = v69[12];
              v41 = v69[16];
              v42 = &v68[v69[20]];
              (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v68, v38, v67);
              *(_BYTE *)(v39 + v40) = v33;
              *(_QWORD *)(v39 + v41) = 0;
              *(_QWORD *)v42 = v37;
              *((_QWORD *)v42 + 1) = v32;
              swift_bridgeObjectRetain();
              sub_1B2228428();
              swift_release();
              sub_1B1B429AC(v39);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              a2 = v64;
              v24 = v74;
              v23 = v72;
            }
            v13 += 32;
            --v23;
          }
          while (v23);
          swift_bridgeObjectRelease();
          if (v24)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            v51 = (void *)swift_unknownObjectRetain();
            sub_1B1F40F48(v51, v24, 0);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease_n();
            swift_unknownObjectRelease_n();
            return;
          }
        }
        sub_1B2229688();
        __break(1u);
        goto LABEL_37;
      }
      if (qword_1ED4BF430 != -1)
        swift_once();
      v76 = 0;
      v77 = 0xE000000000000000;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v76 = (id)0xD000000000000028;
      v77 = 0x80000001B233CBC0;
      sub_1B1BC3C70();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v52 = (uint64_t)v76;
      v53 = v77;
      v54 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v76 = 0;
      swift_retain();
      sub_1B1F1AD70(v54, (uint64_t *)&v76, v52, v53);
      swift_unknownObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      if (v13 != 1)
      {
LABEL_37:
        type metadata accessor for RGExecutionPhase(0);
        LOBYTE(v76) = (_BYTE)v13;
        sub_1B2229F70();
        __break(1u);
        return;
      }
      v43 = RGContextGetCrossFrameResourceManager(a2);
      RGCrossFrameResourceManager.get<A>(_:key:)(&v76, &_s20KernelScriptResourceVN, v21, v43, &_s20KernelScriptResourceVN);
      v44 = v76;
      swift_unknownObjectRelease();
      if (!v44)
      {
        v45 = (CFX::GPUResourceManager *)RGContextGetGPUResourceManager(a2);
        v46 = (id)RGGPUResourceManagerGetDevice(v45);
        v76 = 0;
        v47 = objc_msgSend(v46, sel_newComputePipelineStateWithFunction_error_, a8, &v76);
        if (v47)
        {
          v48 = v47;
          v49 = v76;
          v50 = (CFX::CrossFrameResourceManager *)RGContextGetCrossFrameResourceManager(a2);
          v76 = v48;
          swift_unknownObjectRetain();
          RGCrossFrameResourceManager.create<A>(_:with:)(v21, (uint64_t)&v76, v50, (uint64_t)&_s20KernelScriptResourceVN);
          swift_unknownObjectRelease_n();
          swift_unknownObjectRelease();
        }
        else
        {
          v55 = v76;
          v56 = (void *)sub_1B2227FB4();

          swift_willThrow();
          swift_unknownObjectRelease();
          if (qword_1ED4BF430 != -1)
            swift_once();
          v76 = 0;
          v77 = 0xE000000000000000;
          swift_retain();
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v76 = (id)0xD00000000000001FLL;
          v77 = 0x80000001B233CC40;
          swift_getErrorValue();
          sub_1B2229FE8();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v57 = (uint64_t)v76;
          v58 = v77;
          v59 = sub_1B2228E90();
          if (qword_1ED4BF658 != -1)
            swift_once();
          v76 = 0;
          swift_retain();
          sub_1B1F1AD70(v59, (uint64_t *)&v76, v57, v58);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

        }
      }
    }
  }
}

uint64_t sub_1B1DD56E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1DD63A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DD4E5C);
}

void sub_1B1DD56F4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v15;
  int *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t OutputAtIndex;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t CrossFrameResourceManager;
  id v34;
  uint64_t v35;
  CFX::GPUResourceManager *GPUResourceManager;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  const CFX::RG::Resource *v50;
  CFX::GPUResourceManager *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  CFX::CrossFrameResourceManager *v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  __int128 v92;
  char *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  id v103;
  unint64_t v104;
  char v105[9];
  unsigned __int8 v106;
  uint64_t v107;
  uint64_t v108;

  v15 = a3;
  v108 = *MEMORY[0x1E0C80C00];
  sub_1B1B1F358();
  v17 = v16;
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B222820C();
  MEMORY[0x1E0C80A78](v21, v22);
  v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v15)
    return;
  v98 = v26;
  v99 = v24;
  v100 = v23;
  v101 = v17;
  OutputAtIndex = RGPassGetOutputAtIndex(a1, 0);
  RGContext.tryResolve(resource:)(OutputAtIndex, a2, (uint64_t)v105);
  v28 = v106;
  v29 = v107;
  v30 = (v106
       + ((v29 - 0x61C8864680B583EBLL) << 6)
       + ((unint64_t)(v29 - 0x61C8864680B583EBLL) >> 2)
       - 0x61C8864680B583EBLL) ^ (v29 - 0x61C8864680B583EBLL);
  v31 = (a5 + (v30 << 6) + (v30 >> 2) - 0x61C8864680B583EBLL) ^ v30;
  if (v15 != 2)
  {
    if (v15 == 1)
    {
      v32 = a2;
      CrossFrameResourceManager = RGContextGetCrossFrameResourceManager(a2);
      RGCrossFrameResourceManager.get<A>(_:key:)(&v103, &_s22FullscreenQuadResourceVN, v31, CrossFrameResourceManager, &_s22FullscreenQuadResourceVN);
      v34 = v103;
      swift_unknownObjectRelease();
      if (!v34)
      {
        v35 = v32;
        GPUResourceManager = (CFX::GPUResourceManager *)RGContextGetGPUResourceManager(v32);
        v37 = (id)RGGPUResourceManagerGetDevice(GPUResourceManager);
        v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC6B68]), sel_init);
        v39 = *(_QWORD *)(a7 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
        swift_retain();
        v40 = objc_msgSend(v38, sel_colorAttachments);
        v41 = objc_msgSend(v40, sel_objectAtIndexedSubscript_, 0);

        objc_msgSend(v41, sel_setPixelFormat_, v29);
        objc_msgSend(v38, sel_setRasterSampleCount_, v28);
        if (v39)
        {
          swift_retain();
          v78 = sub_1B1B2EC54(0xD000000000000023, 0x80000001B2339C70, 0, MEMORY[0x1E0DEE9D8], 0);
          swift_release();
        }
        else
        {
          v78 = 0;
        }
        objc_msgSend(v38, sel_setVertexFunction_, v78);
        swift_unknownObjectRelease();
        objc_msgSend(v38, sel_setFragmentFunction_, a8);
        v103 = 0;
        v79 = objc_msgSend(v37, sel_newRenderPipelineStateWithDescriptor_error_, v38, &v103);
        if (v79)
        {
          v80 = v79;
          v81 = v103;
          v82 = (CFX::CrossFrameResourceManager *)RGContextGetCrossFrameResourceManager(v35);
          v103 = v80;
          swift_unknownObjectRetain();
          RGCrossFrameResourceManager.create<A>(_:with:)(v31, (uint64_t)&v103, v82, (uint64_t)&_s22FullscreenQuadResourceVN);
          swift_release();
          swift_unknownObjectRelease_n();
          swift_unknownObjectRelease();

        }
        else
        {
          v83 = v103;
          v84 = (void *)sub_1B2227FB4();

          swift_willThrow();
          swift_unknownObjectRelease();

          swift_release();
          if (qword_1ED4BF430 != -1)
            swift_once();
          v103 = 0;
          v104 = 0xE000000000000000;
          swift_retain();
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v103 = (id)0xD00000000000001FLL;
          v104 = 0x80000001B233CC40;
          swift_getErrorValue();
          sub_1B2229FE8();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v85 = (uint64_t)v103;
          v86 = v104;
          v87 = sub_1B2228E90();
          if (qword_1ED4BF658 != -1)
            swift_once();
          v103 = 0;
          swift_retain();
          sub_1B1F1AD70(v87, (uint64_t *)&v103, v85, v86);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

        }
      }
    }
    return;
  }
  v42 = RGArgumentsGetRenderEncoder(a4);
  v43 = RGContextGetCrossFrameResourceManager(a2);
  RGCrossFrameResourceManager.get<A>(_:key:)(&v103, &_s22FullscreenQuadResourceVN, v31, v43, &_s22FullscreenQuadResourceVN);
  v44 = v103;
  if (!v103)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v103 = 0;
    v104 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    swift_bridgeObjectRelease();
    v103 = (id)0xD000000000000027;
    v104 = 0x80000001B233CC90;
    sub_1B1BC3C70();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v75 = (uint64_t)v103;
    v76 = v104;
    v77 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v103 = 0;
    swift_retain();
    sub_1B1F1AD70(v77, (uint64_t *)&v103, v75, v76);
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  v45 = *(_QWORD *)(a9 + 16);
  if (!v45)
    goto LABEL_35;
  v89 = v103;
  v88 = swift_bridgeObjectRetain();
  v46 = (_BYTE *)(v88 + 56);
  v90 = (unint64_t)"mpute pass pipeline for ";
  v91 = 0x80000001B233CBF0;
  v92 = xmmword_1B226D240;
  v94 = v42;
  v93 = v20;
  v95 = a2;
  do
  {
    if (*v46 == 3)
      goto LABEL_13;
    v49 = *((_QWORD *)v46 - 3);
    v50 = (const CFX::RG::Resource *)*((_QWORD *)v46 - 1);
    if (RGResourceGetType(v50) == 3)
    {
      v47 = RGContextGetGPUResourceManager(a2);
      v48 = (id)RGGPUResourceManagerGetTexture(v47, v50);
      if (v48)
      {
        objc_msgSend(v42, sel_setFragmentTexture_atIndex_, v48, v49, v88);
LABEL_12:
        swift_unknownObjectRelease();
        goto LABEL_13;
      }
      if (qword_1ED4BF430 != -1)
        swift_once();
      v103 = 0;
      v104 = 0xE000000000000000;
      v97 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v102 = v49;
      v103 = (id)0xD00000000000001FLL;
      v104 = v91;
      sub_1B2229A0C();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      RGResource.name.getter();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v55 = v103;
      v54 = v104;
      v56 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v57 = qword_1ED4D0FD0;
      v58 = qword_1ED4BF688;
      swift_retain();
      if (v58 != -1)
        swift_once();
      sub_1B1B42948();
      v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = v92;
      *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v59 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v59 + 32) = v55;
      *(_QWORD *)(v59 + 40) = v54;
      swift_bridgeObjectRetain();
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1B2228200();
      v60 = v101[12];
      v96 = v57;
      v61 = v101[16];
      v62 = &v93[v101[20]];
      v63 = (uint64_t)v93;
      (*(void (**)(char *))(v99 + 32))(v93);
      *(_BYTE *)(v63 + v60) = v56;
      *(_QWORD *)(v63 + v61) = 0;
      *(_QWORD *)v62 = v55;
      *((_QWORD *)v62 + 1) = v54;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1B429AC(v63);
      swift_release();
    }
    else
    {
      if (RGResourceGetType(v50) != 1)
        goto LABEL_13;
      v51 = (CFX::GPUResourceManager *)RGContextGetGPUResourceManager(a2);
      v52 = RGGPUResourceManager.getBuffer(_:)(v50, v51);
      if (v52)
      {
        objc_msgSend(v42, sel_setFragmentBuffer_offset_atIndex_, v52, v53, v49);
        goto LABEL_12;
      }
      if (qword_1ED4BF430 != -1)
        swift_once();
      v103 = 0;
      v104 = 0xE000000000000000;
      v97 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v103 = (id)0xD00000000000001FLL;
      v104 = v90 | 0x8000000000000000;
      v102 = v49;
      sub_1B2229A0C();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      RGResource.name.getter();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v64 = v103;
      v65 = v104;
      v66 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v67 = qword_1ED4D0FD0;
      v68 = qword_1ED4BF688;
      swift_retain();
      if (v68 != -1)
        swift_once();
      sub_1B1B42948();
      v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = v92;
      *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v69 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v69 + 32) = v64;
      *(_QWORD *)(v69 + 40) = v65;
      swift_bridgeObjectRetain();
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v96 = v67;
      v70 = v64;
      sub_1B2228200();
      v71 = v101[12];
      v72 = v101[16];
      v73 = &v93[v101[20]];
      v74 = (uint64_t)v93;
      (*(void (**)(void))(v99 + 32))();
      *(_BYTE *)(v74 + v71) = v66;
      *(_QWORD *)(v74 + v72) = 0;
      *(_QWORD *)v73 = v70;
      *((_QWORD *)v73 + 1) = v65;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1B429AC(v74);
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release();
    a2 = v95;
    v42 = v94;
LABEL_13:
    v46 += 32;
    --v45;
  }
  while (v45);
  swift_bridgeObjectRelease();
  v44 = v89;
LABEL_35:
  swift_getObjectType();
  objc_msgSend(v42, sel_setRenderPipelineState_, v44);
  sub_1B20BFD20(1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_1B1DD6368()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1DD639C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1DD63A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DD56F4);
}

uint64_t sub_1B1DD63A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v5;

  return a5(a1, a2, a3, a4, v5[2], v5[3], v5[4], v5[5], v5[6], v5[7]);
}

uint64_t getEnumTagSinglePayload for MetalIOData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MetalIOData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetalIOData()
{
  return &type metadata for MetalIOData;
}

uint64_t storeEnumTagSinglePayload for MetalIOData.Access(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B1DD64C0 + 4 * byte_1B22955CD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B1DD64F4 + 4 * byte_1B22955C8[v4]))();
}

uint64_t sub_1B1DD64F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1DD64FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1DD6504);
  return result;
}

uint64_t sub_1B1DD6510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1DD6518);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B1DD651C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1DD6524(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetalIOData.Access()
{
  return &type metadata for MetalIOData.Access;
}

ValueMetadata *_s22FullscreenQuadResourceVMa()
{
  return &_s22FullscreenQuadResourceVN;
}

ValueMetadata *_s20KernelScriptResourceVMa()
{
  return &_s20KernelScriptResourceVN;
}

unint64_t sub_1B1DD6564()
{
  unint64_t result;

  result = qword_1EEF5E9F0;
  if (!qword_1EEF5E9F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295688, &type metadata for MetalIOData.Access);
    atomic_store(result, (unint64_t *)&qword_1EEF5E9F0);
  }
  return result;
}

double sub_1B1DD65B0@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;

  v2 = *v1;
  v3 = v1[3];
  v4 = v1[4];
  v5 = v3;
  if (v4)
  {
    v6 = __clz(__rbit64(v4));
    v7 = (v4 - 1) & v4;
    v8 = v6 | (v3 << 6);
LABEL_3:
    v9 = 40 * v8;
    v10 = *(_QWORD *)(v2 + 48) + v9;
    v12 = *(_QWORD *)v10;
    v11 = *(_QWORD *)(v10 + 8);
    v13 = *(_BYTE *)(v10 + 16);
    v14 = *(_QWORD *)(v10 + 24);
    v15 = *(_QWORD *)(v10 + 32);
    v16 = *(_QWORD *)(v2 + 56) + v9;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    LOBYTE(v10) = *(_BYTE *)(v16 + 16);
    v19 = *(_QWORD *)(v16 + 24);
    v20 = *(_QWORD *)(v16 + 32);
    v1[3] = v5;
    v1[4] = v7;
    v21 = v1[5];
    v1[5] = v21 + 1;
    *(_QWORD *)a1 = v21;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 40) = v15;
    *(_QWORD *)(a1 + 48) = v17;
    *(_QWORD *)(a1 + 56) = v18;
    *(_BYTE *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return result;
  }
  v23 = (unint64_t)(v1[2] + 64) >> 6;
  v24 = v3 + 1;
  if (v3 + 1 < v23)
  {
    v25 = v1[1];
    v26 = *(_QWORD *)(v25 + 8 * v24);
    if (v26)
    {
LABEL_6:
      v7 = (v26 - 1) & v26;
      v8 = __clz(__rbit64(v26)) + (v24 << 6);
      v5 = v24;
      goto LABEL_3;
    }
    v27 = v3 + 2;
    v5 = v3 + 1;
    if (v3 + 2 < v23)
    {
      v26 = *(_QWORD *)(v25 + 8 * v27);
      if (v26)
      {
LABEL_9:
        v24 = v27;
        goto LABEL_6;
      }
      v24 = v3 + 3;
      v5 = v3 + 2;
      if (v3 + 3 < v23)
      {
        v26 = *(_QWORD *)(v25 + 8 * v24);
        if (v26)
          goto LABEL_6;
        v27 = v3 + 4;
        v5 = v3 + 3;
        if (v3 + 4 < v23)
        {
          v26 = *(_QWORD *)(v25 + 8 * v27);
          if (v26)
            goto LABEL_9;
          v24 = v3 + 5;
          v5 = v3 + 4;
          if (v3 + 5 < v23)
          {
            v26 = *(_QWORD *)(v25 + 8 * v24);
            if (v26)
              goto LABEL_6;
            v5 = v23 - 1;
            v28 = v3 + 6;
            while (v23 != v28)
            {
              v26 = *(_QWORD *)(v25 + 8 * v28++);
              if (v26)
              {
                v24 = v28 - 1;
                goto LABEL_6;
              }
            }
          }
        }
      }
    }
  }
  v1[3] = v5;
  v1[4] = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  return result;
}

uint64_t sub_1B1DD6758(_QWORD **a1)
{
  return sub_1B1DD676C(a1);
}

uint64_t sub_1B1DD676C(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1B216D59C(v2);
  v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  result = sub_1B1DF257C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B1DD67D4(uint64_t *a1)
{
  uint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
    sub_1B1FFEE30(v2);
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1B1DF2EB8(v6);
  return sub_1B2228AD0();
}

uint64_t sub_1B1DD6858(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

_QWORD *sub_1B1DD68D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_QWORD *)(v3 + 152) = 0;
  *(_BYTE *)(v3 + 160) = 1;
  swift_retain();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 168) = sub_1B1B7E154(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v3 + 176) = sub_1B1B7E168(v7);
  *(_QWORD *)(v3 + 184) = sub_1B1B7E17C(v7);
  *(_QWORD *)(v3 + 192) = sub_1B1B7E190(v7);
  *(_QWORD *)(v3 + 200) = sub_1B1B7E1A4(v7);
  *(_QWORD *)(v3 + 208) = sub_1B1B7E1B8(v7);
  *(_QWORD *)(v3 + 216) = sub_1B1B7E1CC(v7);
  *(_QWORD *)(v3 + 224) = sub_1B1B7E1E0(v7);
  *(_QWORD *)(v3 + 232) = sub_1B1B7E1F4(v7);
  *(_QWORD *)(v3 + 240) = sub_1B1B7E208(v7);
  *(_QWORD *)(v3 + 248) = sub_1B1B7E21C(v7);
  *(_QWORD *)(v3 + 256) = sub_1B1B7E230(v7);
  *(_QWORD *)(v3 + 264) = sub_1B1B7E378(v7);
  *(_QWORD *)(v3 + 272) = sub_1B1B7E38C(v7);
  *(_QWORD *)(v3 + 280) = sub_1B1B7E38C(v7);
  *(_QWORD *)(v3 + 288) = sub_1B1B7E3A0(v7);
  v8 = v3 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_onUserTemplatesChangedUUID;
  v9 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)(v3 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_switchCaseValuePrefix);
  *v10 = 0xD000000000000010;
  v10[1] = 0x80000001B233CF20;
  v11 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_templateRemapping;
  *(_QWORD *)(v3 + v11) = sub_1B1B7DF34((uint64_t)&unk_1E63A2B50);
  swift_release();
  v12 = sub_1B1FB9EE8(a1, a2, 0);
  swift_retain();
  sub_1B1DD8004(a3);
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_1B1DD6A90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;

  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)v33 - v8;
  *(_QWORD *)(v1 + 136) = 0;
  *(_QWORD *)(v1 + 144) = 0;
  *(_QWORD *)(v1 + 152) = 0;
  *(_BYTE *)(v1 + 160) = 1;
  swift_retain();
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 168) = sub_1B1B7E154(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v1 + 176) = sub_1B1B7E168(v10);
  *(_QWORD *)(v1 + 184) = sub_1B1B7E17C(v10);
  *(_QWORD *)(v1 + 192) = sub_1B1B7E190(v10);
  *(_QWORD *)(v1 + 200) = sub_1B1B7E1A4(v10);
  *(_QWORD *)(v1 + 208) = sub_1B1B7E1B8(v10);
  *(_QWORD *)(v1 + 216) = sub_1B1B7E1CC(v10);
  *(_QWORD *)(v1 + 224) = sub_1B1B7E1E0(v10);
  *(_QWORD *)(v1 + 232) = sub_1B1B7E1F4(v10);
  *(_QWORD *)(v1 + 240) = sub_1B1B7E208(v10);
  *(_QWORD *)(v1 + 248) = sub_1B1B7E21C(v10);
  *(_QWORD *)(v1 + 256) = sub_1B1B7E230(v10);
  *(_QWORD *)(v1 + 264) = sub_1B1B7E378(v10);
  *(_QWORD *)(v1 + 272) = sub_1B1B7E38C(v10);
  *(_QWORD *)(v1 + 280) = sub_1B1B7E38C(v10);
  *(_QWORD *)(v1 + 288) = sub_1B1B7E3A0(v10);
  v11 = v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_onUserTemplatesChangedUUID;
  v12 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)(v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_switchCaseValuePrefix);
  *v13 = 0xD000000000000010;
  v13[1] = 0x80000001B233CF20;
  v14 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_templateRemapping;
  *(_QWORD *)(v1 + v14) = sub_1B1B7DF34((uint64_t)&unk_1E63A2B98);
  swift_release();
  v41 = v10;
  v40 = sub_1B1B7DF34(v10);
  sub_1B19FA198((uint64_t)a1, (uint64_t)&v37);
  v15 = sub_1B1FB9F2C((char *)&v37);
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = v6;
    sub_1B19FA070(a1, a1[3]);
    sub_1B1DFC474();
    swift_retain();
    sub_1B222A150();
    LOBYTE(v37) = 0;
    v16 = sub_1B22297A8();
    if ((v17 & 1) != 0)
      v16 = *(_QWORD *)(v15 + 144);
    *(_QWORD *)(v15 + 144) = v16;
    sub_1B1A02758(0, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v36 = 1;
    sub_1B1C8D730();
    sub_1B22297B4();
    v18 = v37;
    v19 = v38;
    v20 = v39;
    if (v39)
      v18 = 0;
    *(_QWORD *)(v15 + 152) = v18;
    *(_BYTE *)(v15 + 160) = v19 & ~v20 & 1;
    sub_1B1DFCDA0(0, (unint64_t *)&qword_1EEF5EA38, (void (*)(uint64_t))_s7ContextCMa);
    v36 = 6;
    sub_1B1DFC4B8();
    sub_1B22297B4();
    v21 = v37;
    if (!v37)
      v21 = swift_bridgeObjectRetain();
    *(_QWORD *)(v15 + 272) = v21;
    swift_bridgeObjectRelease();
    v36 = 7;
    sub_1B22297B4();
    v22 = v37;
    if (!v37)
      v22 = swift_bridgeObjectRetain();
    *(_QWORD *)(v15 + 280) = v22;
    swift_bridgeObjectRelease();
    sub_1B1DFCDA0(0, &qword_1EEF5EA48, (void (*)(uint64_t))type metadata accessor for GraphV1CodeGeneration.BaseObject);
    v36 = 14;
    sub_1B1DFC548();
    sub_1B22297B4();
    v23 = v37;
    if (!v37)
      v23 = swift_bridgeObjectRetain();
    *(_QWORD *)(v15 + 232) = v23;
    swift_bridgeObjectRelease();
    sub_1B1DE63B4();
    sub_1B1DE64C0();
    sub_1B1DFCDA0(0, &qword_1EEF5EA60, (void (*)(uint64_t))_s20ArraySequenceSnippetCMa);
    v36 = 5;
    sub_1B1DFC5D8();
    sub_1B22297B4();
    v25 = v37;
    if (!v37)
      v25 = swift_bridgeObjectRetain();
    *(_QWORD *)(v15 + 192) = v25;
    swift_bridgeObjectRelease();
    swift_retain();
    v26 = swift_bridgeObjectRetain();
    sub_1B1DF8DB8(v26, v15);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B1DE65CC();
    sub_1B1DE6704();
    sub_1B1DE6810();
    sub_1B1DE691C();
    sub_1B1DE6A28();
    sub_1B1DE6B34();
    sub_1B1DE6C40();
    sub_1B1DE6D78();
    v27 = (uint64_t)v40;
    swift_bridgeObjectRetain();
    v33[2] = v27;
    sub_1B1DE6E40((uint64_t)v9, v27);
    swift_bridgeObjectRelease();
    v33[1] = v41;
    v34 = *(_QWORD *)(v41 + 16);
    if (v34)
    {
      v28 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
      do
      {
        v29 = *(v28 - 3);
        v30 = *(v28 - 2);
        v31 = *(v28 - 1);
        v32 = *v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1DD8788(v29, v30, v31, v32, 1, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 += 4;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B1DE7F44();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v5);
    swift_release();
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v15;
}

uint64_t sub_1B1DD722C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5EA78, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)v24 - v9;
  result = sub_1B1FBAA8C(a1);
  if (!v2)
  {
    sub_1B19FA070(a1, a1[3]);
    sub_1B1DFC474();
    sub_1B222A180();
    LOBYTE(v33) = 0;
    sub_1B2229940();
    if ((*(_BYTE *)(v1 + 160) & 1) == 0)
    {
      LOBYTE(v33) = 1;
      sub_1B2229940();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 176) + 16))
    {
      v33 = *(_QWORD **)(v1 + 176);
      LOBYTE(v32) = 2;
      sub_1B1DFCDA0(0, &qword_1EEF5EA80, (void (*)(uint64_t))_s11ContextExitCMa);
      sub_1B1DFC668();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 168) + 16))
    {
      v33 = *(_QWORD **)(v1 + 168);
      LOBYTE(v32) = 3;
      sub_1B1DFCDA0(0, &qword_1EEF5EA98, (void (*)(uint64_t))_s12ContextEntryCMa);
      sub_1B1DFC6F8();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 184) + 16))
    {
      v33 = *(_QWORD **)(v1 + 184);
      LOBYTE(v32) = 4;
      sub_1B1DFCDA0(0, &qword_1EEF5EAB0, (void (*)(uint64_t))_s10SubContextCMa);
      sub_1B1DFC788();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 192) + 16))
    {
      v33 = *(_QWORD **)(v1 + 192);
      LOBYTE(v32) = 5;
      sub_1B1DFCDA0(0, &qword_1EEF5EA60, (void (*)(uint64_t))_s20ArraySequenceSnippetCMa);
      sub_1B1DFC818();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 272) + 16))
    {
      v33 = *(_QWORD **)(v1 + 272);
      LOBYTE(v32) = 6;
      sub_1B1DFCDA0(0, (unint64_t *)&qword_1EEF5EA38, (void (*)(uint64_t))_s7ContextCMa);
      sub_1B1DFC8A8();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 280) + 16))
    {
      v33 = *(_QWORD **)(v1 + 280);
      LOBYTE(v32) = 7;
      sub_1B1DFCDA0(0, (unint64_t *)&qword_1EEF5EA38, (void (*)(uint64_t))_s7ContextCMa);
      sub_1B1DFC8A8();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 208) + 16))
    {
      v33 = *(_QWORD **)(v1 + 208);
      LOBYTE(v32) = 11;
      sub_1B1DFCDA0(0, &qword_1EEF5EAE0, (void (*)(uint64_t))_s17CustomCodeSnippetCMa);
      sub_1B1DFC938();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 216) + 16))
    {
      v33 = *(_QWORD **)(v1 + 216);
      LOBYTE(v32) = 12;
      sub_1B1DFCDA0(0, &qword_1EEF5EAF8, (void (*)(uint64_t))_s17TypedArraySnippetCMa);
      sub_1B1DFC9C8();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 224) + 16))
    {
      v33 = *(_QWORD **)(v1 + 224);
      LOBYTE(v32) = 13;
      sub_1B1DFCDA0(0, &qword_1EEF5EB10, (void (*)(uint64_t))_s19StaticSwitchSnippetCMa);
      sub_1B1DFCA58();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 232) + 16))
    {
      v33 = *(_QWORD **)(v1 + 232);
      LOBYTE(v32) = 14;
      sub_1B1DFCDA0(0, &qword_1EEF5EA48, (void (*)(uint64_t))type metadata accessor for GraphV1CodeGeneration.BaseObject);
      sub_1B1DFCAE8();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 240) + 16))
    {
      v33 = *(_QWORD **)(v1 + 240);
      LOBYTE(v32) = 15;
      sub_1B1DFCDA0(0, &qword_1EEF5EB38, (void (*)(uint64_t))_s15VariableSnippetCMa);
      sub_1B1DFCB78();
      sub_1B2229958();
    }
    if (*(_QWORD *)(*(_QWORD *)(v1 + 248) + 16))
    {
      v33 = *(_QWORD **)(v1 + 248);
      LOBYTE(v32) = 16;
      sub_1B1DFCDA0(0, &qword_1EEF5EB50, (void (*)(uint64_t))_s24VariableReferenceSnippetCMa);
      sub_1B1DFCC08();
      sub_1B2229958();
    }
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v33 = sub_1B1B7E3A0(MEMORY[0x1E0DEE9D8]);
    MEMORY[0x1E0C80A78](v33, v13);
    v14 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v14, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1DFCC98);
    swift_bridgeObjectRelease();
    if (v33[2])
    {
      v32 = v33;
      LOBYTE(v31) = 10;
      sub_1B1E015C4(0, &qword_1EEF5EB68);
      sub_1B1E01614(&qword_1EEF5EB70, (uint64_t (*)(void))sub_1B1DFCCA0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
      sub_1B2229958();
    }
    v32 = v12;
    v31 = sub_1B1B80518((uint64_t)v12);
    v30 = 0;
    v15 = *(_QWORD *)(v1 + 256);
    swift_bridgeObjectRetain_n();
    v16 = sub_1B1DC948C(v15);
    swift_bridgeObjectRelease();
    v29 = v16;
    sub_1B1DD6858((uint64_t *)&v29, (uint64_t (*)(uint64_t))sub_1B216D5EC, sub_1B1DF3434);
    swift_bridgeObjectRelease();
    v24[1] = v29;
    v17 = v29[2];
    if (v17)
    {
      v18 = (uint64_t *)(swift_retain() + 64);
      v27 = v17;
      do
      {
        v19 = *(v18 - 4);
        v20 = *(v18 - 3);
        v21 = *(v18 - 1);
        v25 = *(v18 - 2);
        v26 = v19;
        v22 = *v18;
        v18 += 5;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1DF1990(v26, v20, v25, v21, v22, v3, &v30, (uint64_t *)&v31, &v32);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v27;
      }
      while (v27);
      swift_release_n();
      v23 = v32;
    }
    else
    {
      swift_release();
      v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    if (v23[2])
    {
      v29 = v23;
      v28 = 8;
      sub_1B1A02758(0, &qword_1EEF5EB80, (uint64_t)&_s7ContextC14AssignmentInfoVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1B1DFCCE4();
      sub_1B2229958();
    }
    if (v30 == 1)
    {
      v29 = v31;
      v28 = 9;
      sub_1B1DFCDA0(0, &qword_1EEF5C5B8, (void (*)(uint64_t))_s11MetadataSetCMa);
      sub_1B1DFCDFC();
      sub_1B2229958();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DD7B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_1B22287A0();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = sub_1B2227CD8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v20 - v10;
  sub_1B2227CC0();
  sub_1B2227D20();
  swift_allocObject();
  sub_1B2227D14();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v11, v3);
  sub_1B2227CE4();
  v21 = v0;
  _s7ContextCMa();
  sub_1B19E52CC(&qword_1EEF5C5B0, (uint64_t (*)(uint64_t))_s7ContextCMa, (uint64_t)&unk_1B2296384);
  v15 = sub_1B2227CF0();
  v17 = v16;
  sub_1B2228788();
  sub_1B2228764();
  v19 = v18;
  sub_1B1A0DADC(v15, v17);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
  if (v19)
  {
    v13 = sub_1B1DF62A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    swift_retain();
    v12 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v21 = 0;
    swift_retain();
    sub_1B1F1AD70(v12, &v21, 0xD00000000000003FLL, 0x80000001B233D000);
    swift_release();
    swift_release();
    return 0;
  }
  return v13;
}

uint64_t sub_1B1DD7DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = v0;
  sub_1B1B28F74();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B222826C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1B28FC8(v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_onUserTemplatesChangedUUID, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1B1A04628((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1B1B28F74);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    v11 = *(_QWORD *)(v1 + 136);
    v12 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
    v13 = *(void **)(v11 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock);
    swift_retain();
    objc_msgSend(v13, sel_lock);
    v14 = sub_1B1B83A30((uint64_t)v10);
    if (v14)
      sub_1B19E5A18(v14);
    objc_msgSend(*(id *)(v11 + v12), sel_unlock);
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v15 = sub_1B1FBAA08();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1A04628(v15 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_onUserTemplatesChangedUUID, (uint64_t (*)(_QWORD))sub_1B1B28F74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B1DD8004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1B1B28F74();
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 136) = a1;
  swift_retain();
  swift_release();
  if (*(_QWORD *)(v1 + 136))
  {
    v11 = sub_1B2228110();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    swift_retain();
    sub_1B1CB56BC(1, (uint64_t)v10);
    swift_release();
    sub_1B1A04628((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1B17928A0);
  }
  v12 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1B1CB1864((uint64_t)sub_1B1E01FEC, v12, (uint64_t)v6);
  swift_release_n();
  v13 = sub_1B222826C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  return sub_1B1C1A04C((uint64_t)v6, v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_onUserTemplatesChangedUUID);
}

uint64_t sub_1B1DD8198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  v0 = swift_bridgeObjectRetain();
  sub_1B1A1FB40(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01FC0);
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v8 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = (uint64_t *)(v8 + 56);
    do
    {
      v3 = *(v2 - 3);
      v4 = *(v2 - 2);
      v5 = *(v2 - 1);
      v6 = *v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DD8788(v3, v4, v5, v6, 1, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 += 4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DD8284(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v5 = v2[25];
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1B1DC3B00(a1, a2);
    if ((v7 & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v2[21];
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1B1DC3B00(a1, a2);
    if ((v8 & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v2[22];
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1B1DC3B00(a1, a2);
    if ((v9 & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v2[23];
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1B1DC3B00(a1, a2);
    if ((v10 & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v2[24];
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1B1DC3B00(a1, a2);
    if ((v11 & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v2[26];
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1B1DC3B00(a1, a2);
    if ((v12 & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v2[27];
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1B1DC3B00(a1, a2);
    if ((v13 & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = v2[28];
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1B1DC3B00(a1, a2);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    v5 = v2[30];
    if (*(_QWORD *)(v5 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = sub_1B1DC3B00(a1, a2);
      if ((v15 & 1) != 0)
        goto LABEL_27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v18 = v2[31];
    if (*(_QWORD *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_1B1DC3B00(a1, a2);
      if ((v20 & 1) != 0)
      {
        v16 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
        swift_retain();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
LABEL_27:
  v16 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  swift_retain();
  swift_bridgeObjectRelease();
LABEL_28:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1B1DD8584(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1B2228890();
    sub_1B2229A0C();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = a1;
    v7 = a2;
  }
  else
  {
    v6 = sub_1B2229A0C();
    v7 = v8;
  }
  ++*(_QWORD *)(v2 + 144);
  v9 = sub_1B1DD8284(v6, v7);
  swift_release();
  if (v9)
  {
    swift_bridgeObjectRelease();
    return sub_1B1DD8584(a1, a2);
  }
  return v6;
}

uint64_t sub_1B1DD86D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  sub_1B1E27CA0(a1, a2, a3);
  v6 = sub_1B1E27F14(a1, a2);
  v7 = v6[5];
  v8 = v6[6];
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *(_QWORD *)(v3 + 264);
  *(_QWORD *)(v3 + 264) = 0x8000000000000000;
  sub_1B1B87484((uint64_t)v6, v7, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 264) = v11;
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DD8788(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD *v65;

  v10 = result;
  if (result != a3 || a2 != a4)
  {
    result = sub_1B2229D24();
    if ((result & 1) == 0)
    {
      sub_1B1B7DF34(MEMORY[0x1E0DEE9D8]);
      swift_bridgeObjectRetain();
      v11 = swift_bridgeObjectRetain();
      v64 = a5;
      v12 = sub_1B1DFF1F0(v11, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05AD4);
      swift_bridgeObjectRelease();
      v13 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v13, v14);
      sub_1B1A1FB40(v12, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01EA0);
      swift_release();
      swift_bridgeObjectRetain();
      v15 = swift_bridgeObjectRetain();
      v16 = sub_1B1DFF1F0(v15, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05AC0);
      swift_bridgeObjectRelease();
      v17 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v17, v18);
      sub_1B1A1FB40(v16, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01EAC);
      swift_release();
      swift_bridgeObjectRetain();
      v19 = swift_bridgeObjectRetain();
      v20 = sub_1B1DFF1F0(v19, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05AAC);
      swift_bridgeObjectRelease();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21, v22);
      sub_1B1A1FB40(v20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01EB8);
      swift_release();
      swift_bridgeObjectRetain();
      v23 = swift_bridgeObjectRetain();
      v24 = sub_1B1DFF1F0(v23, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05A98);
      swift_bridgeObjectRelease();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25, v26);
      sub_1B1A1FB40(v24, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01EC4);
      swift_release();
      swift_bridgeObjectRetain();
      v27 = swift_bridgeObjectRetain();
      v28 = sub_1B1DFF1F0(v27, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05A84);
      swift_bridgeObjectRelease();
      v29 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v29, v30);
      sub_1B1A1FB40(v28, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01ED0);
      swift_release();
      swift_bridgeObjectRetain();
      v31 = swift_bridgeObjectRetain();
      v32 = sub_1B1DFF1F0(v31, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05A70);
      swift_bridgeObjectRelease();
      v33 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v33, v34);
      sub_1B1A1FB40(v32, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01EDC);
      swift_release();
      swift_bridgeObjectRetain();
      v35 = swift_bridgeObjectRetain();
      v36 = sub_1B1DFF1F0(v35, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05A5C);
      swift_bridgeObjectRelease();
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v37, v38);
      sub_1B1A1FB40(v36, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01EE8);
      swift_release();
      swift_bridgeObjectRetain();
      v39 = swift_bridgeObjectRetain();
      v40 = sub_1B1DFF1F0(v39, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05A48);
      swift_bridgeObjectRelease();
      v41 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v41, v42);
      sub_1B1A1FB40(v40, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01EF4);
      swift_release();
      swift_bridgeObjectRetain();
      v43 = swift_bridgeObjectRetain();
      v44 = sub_1B1DFF1F0(v43, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05A34);
      swift_bridgeObjectRelease();
      v45 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v45, v46);
      sub_1B1A1FB40(v44, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01F00);
      swift_release();
      swift_bridgeObjectRetain();
      v47 = swift_bridgeObjectRetain();
      v48 = sub_1B1DFF1F0(v47, a6 & 1, v10, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1C05A20);
      swift_bridgeObjectRelease();
      v49 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v49, v50);
      sub_1B1A1FB40(v48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01F0C);
      swift_release();
      swift_bridgeObjectRetain();
      v51 = swift_bridgeObjectRetain();
      v52 = sub_1B1DFF8B4(v51, a6 & 1);
      swift_bridgeObjectRelease();
      v53 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v53, v54);
      sub_1B1A1FB40(v52, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01F48);
      v55 = swift_release();
      if ((v64 & 1) != 0)
      {
        MEMORY[0x1E0C80A78](v55, v56);
        v57 = swift_bridgeObjectRetain();
        sub_1B1A1FB40(v57, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01F7C);
        v58 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v58, v59);
        v60 = swift_bridgeObjectRetain();
        sub_1B1A1FB40(v60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01F88);
        swift_bridgeObjectRelease();
      }
      swift_retain();
      v61 = swift_bridgeObjectRetain();
      sub_1B1DF8174(v61, v6);
      swift_bridgeObjectRelease();
      swift_release();
      if ((a6 & 1) == 0)
      {
        v65 = sub_1B1B7E230(MEMORY[0x1E0DEE9D8]);
        MEMORY[0x1E0C80A78](v65, v62);
        v63 = swift_bridgeObjectRetain();
        sub_1B1DF7F88(v63, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E01F78);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v6 + 256) = v65;
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *sub_1B1DD8F64(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;

  v5 = v4;
  v7 = a3;
  v8 = a2;
  if (!a2 && a3 == 0xE000000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    v10 = a1[2];
    v11 = a1[3];
    swift_bridgeObjectRetain();
    v8 = sub_1B1DD8584(v10, v11);
    v7 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v13 = *(_QWORD *)(v5 + 136);
  _s11CodeSnippetCMa();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v14 = sub_1B1B219CC(a1, v8, v7, a4, v13);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *(_QWORD *)(v5 + 200);
  *(_QWORD *)(v5 + 200) = 0x8000000000000000;
  sub_1B1B8974C((uint64_t)v14, v8, v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + 200) = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

_QWORD *sub_1B1DD90C4(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v5;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];

  v5 = sub_1B1DD8F64(a2, 0, 0xE000000000000000, 0);
  sub_1B1E02C04(0x65756C6176, 0xE500000000000000, &v7);
  if (v8)
  {
    sub_1B1A0DDAC(&v7, v9);
    v8 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v7 = swift_allocObject();
    sub_1B1A02864((uint64_t)v9, v7 + 16);
    sub_1B1E02AF4(0x65756C6176, 0xE500000000000000, (uint64_t)&v7);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v7);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  }
  else
  {
    sub_1B1A057EC((uint64_t)&v7, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
  }
  sub_1B1FB5BDC(a1);
  sub_1B1DD9208(a1, (uint64_t)v5, a3 & 1);
  sub_1B1DD93D4(a1);
  return v5;
}

uint64_t sub_1B1DD9208(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((a3 & 1) == 0)
    goto LABEL_9;
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 1024))(a1);
  v8 = v7;
  if (v6 == (*(uint64_t (**)(void))(*(_QWORD *)a2 + 1024))() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  v11 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_9:
    swift_retain();
    swift_retain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_1B1E00418(v13, v3, a1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B1DFA9AC);
    swift_bridgeObjectRelease();
    swift_release();
    v15 = swift_release();
    MEMORY[0x1E0C80A78](v15, v16);
    sub_1B1DF7F88(v14, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E01E6C);
    swift_release();
    swift_retain();
    swift_retain();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1B1C16E50(v17, v3, a1);
    swift_bridgeObjectRelease();
    swift_release();
    v19 = swift_release();
    MEMORY[0x1E0C80A78](v19, v20);
    sub_1B1DF7F88(v18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E01E74);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1DD93D4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  if (*(_QWORD *)(*(_QWORD *)(v1 + 200) + 16))
  {
    v3 = result;
    v5 = *(_QWORD *)(result + 24);
    v4 = *(_QWORD *)(result + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1DC3B00(v5, v4);
    LOBYTE(v5) = v6;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
    {
      v7 = *(_QWORD *)(v3 + 24);
      v8 = *(_QWORD *)(v3 + 32);
      swift_bridgeObjectRetain();
      sub_1B1B83E48(v7, v8);
      swift_bridgeObjectRelease();
      swift_release();
      swift_retain();
      swift_retain();
      v9 = swift_bridgeObjectRetain();
      v10 = sub_1B1E00418(v9, v2, v3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B1DFFE68);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(_QWORD *)(v2 + 256) = v10;
      swift_bridgeObjectRelease();
      swift_retain();
      swift_retain();
      v11 = swift_bridgeObjectRetain();
      v12 = sub_1B1E00418(v11, v2, v3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E00140);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(_QWORD *)(v2 + 256) = v12;
      swift_bridgeObjectRelease();
      swift_retain();
      v13 = swift_bridgeObjectRetain();
      v14 = sub_1B1E009B8(v13, v3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1E00640);
      swift_bridgeObjectRelease();
      swift_release();
      *(_QWORD *)(v2 + 264) = v14;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B1DD9590(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  BOOL v46;
  uint64_t result;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  BOOL v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD *v65;
  char v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char v77;
  uint64_t v78;
  _QWORD *v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;

  v6 = v5;
  v10 = a1;
  a1[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[6] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[7] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)v10[5];
  v12 = v10[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DF6860(v11, v12, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1B1B25BD0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1FB69EC();
  sub_1B1FB50D0(a4, a5);
  v13 = v10[5];
  v83 = *(_QWORD *)(v13 + 16);
  v85 = v10;
  if (!v83)
    goto LABEL_65;
  v81 = v13 + 32;
  swift_bridgeObjectRetain_n();
  v14 = 0;
  while (1)
  {
    v16 = (uint64_t *)(v81 + 16 * v14);
    v17 = v16[1];
    v18 = (_QWORD *)v10[5];
    v19 = v18[2];
    if (!v19)
      goto LABEL_130;
    v20 = *v16;
    v21 = v18[4] == *v16 && v18[5] == v17;
    if (!v21 && (sub_1B2229D24() & 1) == 0)
    {
      if (v19 == 1)
        goto LABEL_130;
      v22 = v18[6] == v20 && v18[7] == v17;
      if (!v22 && (sub_1B2229D24() & 1) == 0)
      {
        if (v19 == 2)
          goto LABEL_130;
        if ((v18[8] != v20 || v18[9] != v17) && (sub_1B2229D24() & 1) == 0)
        {
          v44 = v19 - 3;
          if (!v44)
            goto LABEL_130;
          v45 = v18 + 11;
          while (1)
          {
            v46 = *(v45 - 1) == v20 && *v45 == v17;
            if (v46 || (sub_1B2229D24() & 1) != 0)
              break;
            v45 += 2;
            if (!--v44)
              goto LABEL_130;
          }
        }
      }
    }
    v23 = v18[2];
    if (!v23)
      goto LABEL_130;
    v24 = v18[4] == v20 && v18[5] == v17;
    if (v24 || (sub_1B2229D24() & 1) != 0)
    {
      v25 = 0;
      goto LABEL_28;
    }
    if (v23 == 1)
      goto LABEL_130;
    if ((v18[6] != v20 || v18[7] != v17) && (sub_1B2229D24() & 1) == 0)
      break;
    v25 = 1;
LABEL_28:
    v26 = v10[7];
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B22296AC();
      swift_bridgeObjectRelease();
      v26 = v10[7];
      if ((v26 & 0xC000000000000001) == 0)
      {
LABEL_30:
        v27 = *(_QWORD *)(v26 + 8 * v25 + 32);
        swift_retain();
        goto LABEL_31;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((v26 & 0xC000000000000001) == 0)
        goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    v27 = MEMORY[0x1B5E21018](v25, v26);
    swift_bridgeObjectRelease();
LABEL_31:
    v29 = *(_QWORD *)(v27 + 40);
    v28 = *(_QWORD *)(v27 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *(_QWORD **)(v6 + 264);
    *(_QWORD *)(v6 + 264) = 0x8000000000000000;
    v33 = sub_1B1DC3B00(v29, v28);
    v34 = v32;
    v35 = v31[2] + ((v32 & 1) == 0);
    if (v31[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v38 = v31;
        if ((v32 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        sub_1B1EAD7D4();
        v38 = v31;
        if ((v34 & 1) != 0)
          goto LABEL_37;
      }
    }
    else
    {
      sub_1B1E9A6EC(v35, isUniquelyReferenced_nonNull_native);
      v36 = sub_1B1DC3B00(v29, v28);
      if ((v34 & 1) != (v37 & 1))
        goto LABEL_131;
      v33 = v36;
      v38 = v31;
      if ((v34 & 1) != 0)
      {
LABEL_37:
        v39 = v38[7];
        swift_release();
        *(_QWORD *)(v39 + 8 * v33) = v27;
        goto LABEL_4;
      }
    }
    v38[(v33 >> 6) + 8] |= 1 << v33;
    v15 = (uint64_t *)(v38[6] + 16 * v33);
    *v15 = v29;
    v15[1] = v28;
    *(_QWORD *)(v38[7] + 8 * v33) = v27;
    ++v38[2];
    swift_bridgeObjectRetain();
LABEL_4:
    ++v14;
    *(_QWORD *)(v6 + 264) = v38;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v85;
    if (v14 == v83)
    {
      swift_bridgeObjectRelease_n();
LABEL_65:
      result = v10[10];
      v84 = *(_QWORD *)(result + 16);
      if (!v84)
        return result;
      v82 = result + 32;
      swift_bridgeObjectRetain_n();
      v48 = 0;
      while (1)
      {
        v50 = (uint64_t *)(v82 + 16 * v48);
        v51 = v50[1];
        v52 = (_QWORD *)v10[10];
        v53 = v52[2];
        if (!v53)
          goto LABEL_130;
        v54 = *v50;
        v55 = v52[4] == *v50 && v52[5] == v51;
        if (!v55 && (sub_1B2229D24() & 1) == 0)
        {
          if (v53 == 1)
            goto LABEL_130;
          v56 = v52[6] == v54 && v52[7] == v51;
          if (!v56 && (sub_1B2229D24() & 1) == 0)
          {
            if (v53 == 2)
              goto LABEL_130;
            if ((v52[8] != v54 || v52[9] != v51) && (sub_1B2229D24() & 1) == 0)
            {
              v78 = v53 - 3;
              if (!v78)
                goto LABEL_130;
              v79 = v52 + 11;
              while (1)
              {
                v80 = *(v79 - 1) == v54 && *v79 == v51;
                if (v80 || (sub_1B2229D24() & 1) != 0)
                  break;
                v79 += 2;
                if (!--v78)
                  goto LABEL_130;
              }
            }
          }
        }
        v57 = v52[2];
        if (!v57)
          goto LABEL_130;
        v58 = v52[4] == v54 && v52[5] == v51;
        if (v58 || (sub_1B2229D24() & 1) != 0)
        {
          v59 = 0;
        }
        else
        {
          if (v57 == 1)
            goto LABEL_130;
          if ((v52[6] != v54 || v52[7] != v51) && (sub_1B2229D24() & 1) == 0)
          {
            v74 = v52 + 9;
            v75 = 2;
            while (v57 != v75)
            {
              v59 = v75;
              if (*(v74 - 1) != v54 || *v74 != v51)
              {
                v77 = sub_1B2229D24();
                v75 = v59 + 1;
                v74 += 2;
                if ((v77 & 1) == 0)
                  continue;
              }
              goto LABEL_92;
            }
            goto LABEL_130;
          }
          v59 = 1;
        }
LABEL_92:
        v60 = v10[12];
        if (v60 >> 62)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B22296AC();
          swift_bridgeObjectRelease();
          v60 = v10[12];
          if ((v60 & 0xC000000000000001) == 0)
          {
LABEL_94:
            v61 = *(_QWORD *)(v60 + 8 * v59 + 32);
            swift_retain();
            goto LABEL_95;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          if ((v60 & 0xC000000000000001) == 0)
            goto LABEL_94;
        }
        swift_bridgeObjectRetain();
        v61 = MEMORY[0x1B5E21018](v59, v60);
        swift_bridgeObjectRelease();
LABEL_95:
        v63 = *(_QWORD *)(v61 + 40);
        v62 = *(_QWORD *)(v61 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        v64 = swift_isUniquelyReferenced_nonNull_native();
        v65 = *(_QWORD **)(v6 + 264);
        *(_QWORD *)(v6 + 264) = 0x8000000000000000;
        v67 = sub_1B1DC3B00(v63, v62);
        v68 = v66;
        v69 = v65[2] + ((v66 & 1) == 0);
        if (v65[3] >= v69)
        {
          if ((v64 & 1) != 0)
          {
            v72 = v65;
            if ((v66 & 1) != 0)
              goto LABEL_101;
          }
          else
          {
            sub_1B1EAD7D4();
            v72 = v65;
            if ((v68 & 1) != 0)
              goto LABEL_101;
          }
        }
        else
        {
          sub_1B1E9A6EC(v69, v64);
          v70 = sub_1B1DC3B00(v63, v62);
          if ((v68 & 1) != (v71 & 1))
            goto LABEL_131;
          v67 = v70;
          v72 = v65;
          if ((v68 & 1) != 0)
          {
LABEL_101:
            v73 = v72[7];
            swift_release();
            *(_QWORD *)(v73 + 8 * v67) = v61;
            goto LABEL_68;
          }
        }
        v72[(v67 >> 6) + 8] |= 1 << v67;
        v49 = (uint64_t *)(v72[6] + 16 * v67);
        *v49 = v63;
        v49[1] = v62;
        *(_QWORD *)(v72[7] + 8 * v67) = v61;
        ++v72[2];
        swift_bridgeObjectRetain();
LABEL_68:
        ++v48;
        *(_QWORD *)(v6 + 264) = v72;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v85;
        if (v48 == v84)
          return swift_bridgeObjectRelease_n();
      }
    }
  }
  v40 = v18 + 9;
  v41 = 2;
  while (v23 != v41)
  {
    v25 = v41;
    if (*(v40 - 1) != v20 || *v40 != v17)
    {
      v43 = sub_1B2229D24();
      v41 = v25 + 1;
      v40 += 2;
      if ((v43 & 1) == 0)
        continue;
    }
    goto LABEL_28;
  }
LABEL_130:
  swift_bridgeObjectRetain();
  __break(1u);
LABEL_131:
  result = sub_1B2229FC4();
  __break(1u);
  return result;
}

uint64_t sub_1B1DD9DB4@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45[10];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;

  v59 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v58 = 0;
  *((_QWORD *)&v58 + 1) = 0xE000000000000000;
  sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v58, &v56);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v58);
  sub_1B1A0DDAC(&v56, &v58);
  swift_dynamicCast();
  v3 = v2;
  sub_1B1DDA3E4(v46, v47, v45);
  v36 = v45[0];
  v38 = v45[1];
  v4 = v45[3];
  v34 = v45[2];
  v5 = v45[4];
  v6 = v45[5];
  v8 = v45[6];
  v7 = v45[7];
  v9 = v45[8];
  v10 = v45[9];
  swift_bridgeObjectRelease();
  result = sub_1B1A18378((uint64_t)v45, (uint64_t)&v58, &qword_1EEF5EC48, (uint64_t)&_s8TemplateVN);
  if (*((_QWORD *)&v58 + 1))
  {
    v12 = v38;
    v13 = a2;
    v14 = v10;
    v15 = v4;
    v17 = v34;
    v16 = v36;
    goto LABEL_23;
  }
  v18 = v3;
  sub_1B1E02C04(0x6574616C706D6574, 0xEB00000000646955, &v56);
  if (!v57)
  {
    sub_1B1A057EC((uint64_t)&v56, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v13 = a2;
    goto LABEL_9;
  }
  sub_1B1DDAAB0(&v46);
  v16 = v46;
  v12 = v47;
  v17 = v48;
  v5 = v50;
  v6 = v51;
  v37 = v52;
  v39 = v49;
  v35 = v53;
  v19 = v55;
  v32 = v54;
  swift_bridgeObjectRelease();
  result = sub_1B1A18378((uint64_t)&v46, (uint64_t)&v56, &qword_1EEF5EC48, (uint64_t)&_s8TemplateVN);
  v13 = a2;
  if (*((_QWORD *)&v56 + 1))
  {
    v14 = v19;
    v8 = v37;
    v15 = v39;
    v7 = v35;
    v9 = v32;
    goto LABEL_23;
  }
LABEL_9:
  v20 = MEMORY[0x1E0DEA968];
  v21 = MEMORY[0x1E0DEE9B8];
  if ((a1 & 1) != 0)
  {
    v43 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v42 = 0;
    *((_QWORD *)&v42 + 1) = 0xE000000000000000;
    sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v42, v41);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v42);
    sub_1B1A0DDAC(v41, &v42);
    swift_dynamicCast();
    v22 = *((_QWORD *)&v44 + 1);
    v23 = *(_QWORD *)(v18 + 280);
    if (*(_QWORD *)(v23 + 16))
    {
      v24 = v44;
      swift_bridgeObjectRetain();
      v25 = sub_1B1DC3B00(v24, v22);
      if ((v26 & 1) != 0)
      {
        v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1B1E02C04(0x6574616C706D6574, 0xEC000000656D614ELL, &v42);
        if (v43)
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            v29 = *((_QWORD *)&v41[0] + 1);
            v28 = *(_QWORD *)&v41[0];
LABEL_26:
            v43 = v20;
            *(_QWORD *)&v42 = v28;
            *((_QWORD *)&v42 + 1) = v29;
            sub_1B1E02AF4(1701667182, 0xE400000000000000, (uint64_t)&v42);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v42);
            swift_release();
            v43 = v20;
            v15 = 0xE000000000000000;
            *(_QWORD *)&v42 = 0;
            *((_QWORD *)&v42 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v42, v41);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v42);
            sub_1B1A0DDAC(v41, &v42);
            swift_dynamicCast();
            v12 = *((_QWORD *)&v44 + 1);
            v16 = v44;
            result = swift_release();
            v14 = v27;
            v17 = 0;
            v5 = 0;
            v6 = 0;
            v7 = 0;
            v8 = 0xE000000000000000;
            v9 = 0xE000000000000000;
            goto LABEL_23;
          }
        }
        else
        {
          sub_1B1A057EC((uint64_t)&v42, (uint64_t)&qword_1ED4BB150, v21 + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
        }
        v43 = v20;
        *(_QWORD *)&v42 = 0;
        *((_QWORD *)&v42 + 1) = 0xE000000000000000;
        sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v42, v41);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v42);
        sub_1B1A0DDAC(v41, &v42);
        swift_dynamicCast();
        v29 = *((_QWORD *)&v44 + 1);
        v28 = v44;
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED4BF430 != -1)
    swift_once();
  *(_QWORD *)&v42 = 0;
  *((_QWORD *)&v42 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  v44 = v42;
  sub_1B2228890();
  v43 = v20;
  *(_QWORD *)&v42 = 0;
  *((_QWORD *)&v42 + 1) = 0xE000000000000000;
  sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v42, v41);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v42);
  sub_1B1A0DDAC(v41, &v42);
  swift_dynamicCast();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v30 = v44;
  v31 = sub_1B2228E90();
  if (qword_1ED4BF658 != -1)
    swift_once();
  *(_QWORD *)&v42 = 0;
  swift_retain();
  sub_1B1F1AD70(v31, (uint64_t *)&v42, v30, *((uint64_t *)&v30 + 1));
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  v16 = 0;
  v12 = 0;
  v17 = 0;
  v15 = 0;
  v5 = 0;
  v6 = 0;
  v8 = 0;
  v7 = 0;
  v9 = 0;
  v14 = 0;
LABEL_23:
  *v13 = v16;
  v13[1] = v12;
  v13[2] = v17;
  v13[3] = v15;
  v13[4] = v5;
  v13[5] = v6;
  v13[6] = v8;
  v13[7] = v7;
  v13[8] = v9;
  v13[9] = v14;
  return result;
}

uint64_t sub_1B1DDA3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40[7];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_templateRemapping);
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1B1DC3B00(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v9);
      a1 = *v11;
      v12 = v11[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a2 = v12;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  v41 = a1;
  v42 = a2;
  v40[0] = 124;
  v40[1] = 0xE100000000000000;
  sub_1B1A06460();
  result = sub_1B2229274();
  if ((result & 1) != 0)
  {
    sub_1B2080134(v40);
    sub_1B1A025EC((uint64_t)v40, (uint64_t)&v41, (uint64_t (*)(_QWORD))sub_1B1E01D6C);
    v14 = v43;
    if (v43)
    {
      v15 = v41;
      v36 = v42;
      v17 = v44;
      v16 = v45;
      v18 = v46;
      v35 = v47;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v4 + 136);
      v34 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
      v20 = *(void **)(v19 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock);
      swift_retain();
      objc_msgSend(v20, sel_lock);
      v38 = 0;
      v39 = 0xE000000000000000;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2228890();
      sub_1B2228890();
      v37 = v16;
      sub_1B2228890();
      sub_1B2228890();
      sub_1B2228890();
      v21 = 0xE000000000000000;
      if ((_DWORD)v15)
      {
        v22 = swift_bridgeObjectRetain();
        v33 = v17;
        v23 = sub_1B1CB6E9C(v22, v36, v14, v17, v16, v18, v35);
        swift_bridgeObjectRelease();
        objc_msgSend(*(id *)(v19 + v34), sel_unlock);
        swift_release();
        if (v23)
        {
          swift_retain();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          sub_1B2228890();
          sub_1B2228890();
          sub_1B2228890();
          v24 = 0xE000000000000000;
          swift_retain();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          sub_1B2228890();
          a1 = 0;
          a2 = 0xE000000000000000;
          swift_bridgeObjectRelease();
          v25 = v38;
          swift_bridgeObjectRelease();
          result = swift_release_n();
          v26 = v37;
          v27 = v33;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          a1 = 0;
          a2 = 0;
          v27 = 0;
          v26 = 0;
          v15 = 0;
          v25 = 0;
          v21 = 0;
          v24 = 0;
        }
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v32 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v38 = 0;
      swift_retain();
      sub_1B1F1AD70(v32, &v38, 0xD00000000000003DLL, 0x80000001B233D770);
      swift_release();
      swift_release();
      objc_msgSend(*(id *)(v19 + v34), sel_unlock);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      v39 = 0xE000000000000000;
      swift_retain();
      sub_1B2229430();
      sub_1B2228890();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v31 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v38 = 0;
      swift_retain();
      sub_1B1F1AD70(v31, &v38, 0, 0xE000000000000000);
      swift_release();
      swift_bridgeObjectRelease();
    }
    result = swift_release();
    a1 = 0;
    a2 = 0;
    v27 = 0;
    v26 = 0;
    v15 = 0;
    v25 = 0;
    v21 = 0;
    v24 = 0;
    v23 = 0;
    goto LABEL_30;
  }
  v28 = *(_QWORD *)(v4 + 272);
  if (*(_QWORD *)(v28 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_1B1DC3B00(a1, a2);
    if ((v30 & 1) != 0)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
      swift_retain();
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v27 = 0;
  v15 = 0;
  v25 = 0;
  v26 = 0xE000000000000000;
  v21 = 0xE000000000000000;
  v24 = 0xE000000000000000;
LABEL_30:
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v27;
  a3[3] = v26;
  a3[4] = v15;
  a3[5] = v25;
  a3[6] = v21;
  a3[7] = 0;
  a3[8] = v24;
  a3[9] = v23;
  return result;
}

uint64_t sub_1B1DDAAB0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17[2];
  uint64_t v18[7];
  _BYTE v19[8];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_retain();
  v2 = sub_1B1CB58E4();
  v4 = v3;
  v6 = v5;
  result = swift_release();
  if (!v6)
  {
    v12 = 0;
    v9 = 0;
    v10 = 0;
    v8 = 0;
    v14 = 0;
LABEL_10:
    v11 = 0;
    v13 = 0;
    goto LABEL_11;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B2080134(v18);
  sub_1B1A025EC((uint64_t)v18, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1E01D6C);
  if (!v20)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v17[1] = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v15 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v17[0] = 0;
    swift_retain();
    sub_1B1F1AD70(v15, v17, 0, 0xE000000000000000);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    result = swift_release();
    v12 = 0;
    v9 = 0;
    v10 = 0;
    v8 = 0;
    v14 = 0;
    v6 = 0;
    goto LABEL_10;
  }
  v8 = v19[0];
  v9 = v21;
  v10 = v22;
  v16 = v4;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  v11 = 0xE000000000000000;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v12 = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v13 = v2;
  swift_release();
  result = swift_bridgeObjectRelease();
  v14 = v16;
LABEL_11:
  *a1 = 0;
  a1[1] = v12;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v8;
  a1[5] = v14;
  a1[6] = v6;
  a1[7] = 0;
  a1[8] = v11;
  a1[9] = v13;
  return result;
}

_QWORD *sub_1B1DDAE54(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[3];
  uint64_t v27;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1B1DD8584(a1, a2);
  v10 = v9;
  v11 = *(_QWORD *)(v4 + 136);
  _s10SubContextCMa();
  swift_allocObject();
  swift_retain_n();
  v12 = sub_1B1DD68D0(v8, v10, v11);
  v27 = MEMORY[0x1E0DEA968];
  v26[0] = a1;
  v26[1] = a2;
  swift_retain();
  sub_1B1E02AF4(1701667182, 0xE400000000000000, (uint64_t)v26);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
  swift_release();
  swift_release();
  v27 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v26[0]) = 1;
  sub_1B1E02AF4(0x6C706D6554657375, 0xEB00000000657461, (uint64_t)v26);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
  v13 = v12[3];
  v14 = v12[4];
  swift_retain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26[0] = *(_QWORD *)(v4 + 184);
  *(_QWORD *)(v4 + 184) = 0x8000000000000000;
  sub_1B1B89768((uint64_t)v12, v13, v14, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + 184) = v26[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1FB48E0(a3);
  sub_1B1DCC5E8(*(_QWORD *)(a3 + 168));
  if (v17)
  {
    v18 = v16;
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  sub_1B1DCC5E8(*(_QWORD *)(a3 + 176));
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v18)
  {
    v21 = *(_QWORD *)(v18 + 80);
    v22 = *(_QWORD *)(v18 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v23 = *(_QWORD *)(v20 + 40);
  v24 = *(_QWORD *)(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DD9590(v12, v21, v22, v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v12;
}

_QWORD *sub_1B1DDB0B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  ValueMetadata *v19;
  uint64_t v20;
  ValueMetadata *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v45;
  char v46;
  __int128 v47;
  ValueMetadata *v48;
  uint64_t v49[10];
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v3 = v2;
  sub_1B1DDA3E4(a1, a2, v49);
  sub_1B1A18378((uint64_t)v49, (uint64_t)&v50, &qword_1EEF5EC48, (uint64_t)&_s8TemplateVN);
  v6 = v51;
  if (!v51)
    goto LABEL_9;
  v7 = v50;
  v9 = v53;
  v8 = v54;
  v57 = v55;
  v58 = v52;
  v10 = v56;
  if (!v56)
  {
    sub_1B1E01B88(v49);
LABEL_9:
    if (qword_1ED4BF430 != -1)
      swift_once();
    *(_QWORD *)&v47 = 0;
    *((_QWORD *)&v47 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    v27 = v47;
    v28 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    *(_QWORD *)&v47 = 0;
    swift_retain();
    sub_1B1F1AD70(v28, (uint64_t *)&v47, v27, *((uint64_t *)&v27 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  swift_retain();
  v11 = sub_1B1DDAE54(a1, a2, (uint64_t)v10);
  if ((v7 != a1 || v6 != a2) && (sub_1B2229D24() & 1) == 0)
  {
    v48 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    *(_QWORD *)&v47 = v7;
    *((_QWORD *)&v47 + 1) = v6;
    swift_bridgeObjectRetain();
    sub_1B1E02AF4(0x6574616C706D6574, 0xEC000000656D614ELL, (uint64_t)&v47);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
    v13 = v10[3];
    v12 = v10[4];
    v48 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    *(_QWORD *)&v47 = v13;
    *((_QWORD *)&v47 + 1) = v12;
    swift_bridgeObjectRetain();
    sub_1B1E02AF4(0x6574616C706D6574, 0xEB00000000646955, (uint64_t)&v47);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v47 = *(_QWORD *)(v2 + 280);
    *(_QWORD *)(v2 + 280) = 0x8000000000000000;
    sub_1B1B85920((uint64_t)v10, v9, v8, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v2 + 280) = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v11[3];
    v16 = v11[4];
    v17 = (_QWORD *)(v3 + 184);
    swift_bridgeObjectRetain();
    sub_1B1B83E5C(v15, v16);
    swift_bridgeObjectRelease();
    swift_release();
    v18 = v11[4];
    *(_QWORD *)&v47 = v11[3];
    *((_QWORD *)&v47 + 1) = v18;
    *(_QWORD *)&v59 = a1;
    *((_QWORD *)&v59 + 1) = a2;
    v46 = v7;
    sub_1B1A06460();
    swift_retain();
    v19 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v11[3] = sub_1B222922C();
    v11[4] = v20;
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v47 = a1;
    *((_QWORD *)&v47 + 1) = a2;
    v21 = v19;
    *(_QWORD *)&v59 = 1919251285;
    *((_QWORD *)&v59 + 1) = 0xE400000000000000;
    sub_1B1A2044C();
    sub_1B1A20490();
    v22 = sub_1B222862C();
    v23 = aCategory_1[0];
    v24 = aCategory_1[1];
    v48 = &_s8TemplateV8CategoryON;
    if ((v22 & 1) != 0)
    {
      LOBYTE(v47) = 2;
      swift_bridgeObjectRetain();
      sub_1B1E02AF4(v23, v24, (uint64_t)&v47);
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
      v48 = (ValueMetadata *)MEMORY[0x1E0DEAFA0];
      LOBYTE(v47) = 1;
      sub_1B1E02AF4(0x5472657355657375, 0xEF6574616C706D65, (uint64_t)&v47);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
      v47 = v57;
      *(_QWORD *)&v59 = 0x7C72657355;
      *((_QWORD *)&v59 + 1) = 0xE500000000000000;
      v46 = 0;
      swift_retain();
      v25 = sub_1B222922C();
      v48 = v21;
      *(_QWORD *)&v47 = v25;
      *((_QWORD *)&v47 + 1) = v26;
    }
    else
    {
      LOBYTE(v47) = 1;
      swift_bridgeObjectRetain();
      sub_1B1E02AF4(v23, v24, (uint64_t)&v47);
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
      v48 = (ValueMetadata *)MEMORY[0x1E0DEAFA0];
      LOBYTE(v47) = 1;
      sub_1B1E02AF4(0xD000000000000012, 0x80000001B233D690, (uint64_t)&v47);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
      v59 = v58;
      v48 = v21;
      v47 = v58;
      swift_retain();
      sub_1B1AE7408((uint64_t)&v59);
    }
    sub_1B1E02AF4(0x6C6562616CLL, 0xE500000000000000, (uint64_t)&v47);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
    swift_release();
    v47 = xmmword_1EEF5ECE0;
    swift_bridgeObjectRetain();
    sub_1B2228890();
    v29 = v47;
    v48 = (ValueMetadata *)MEMORY[0x1E0DEB418];
    *(_QWORD *)&v47 = 1;
    sub_1B1E02AF4(v29, *((uint64_t *)&v47 + 1), (uint64_t)&v47);
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
    sub_1B1FB48E0((uint64_t)v10);
    if (v10[2])
    {
      v30 = swift_bridgeObjectRetain();
      sub_1B1FB46CC(v30);
      swift_bridgeObjectRelease();
    }
    v31 = v11[3];
    v32 = v11[4];
    swift_retain();
    swift_bridgeObjectRetain();
    v33 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v47 = *v17;
    *v17 = 0x8000000000000000;
    sub_1B1B89768((uint64_t)v11, v31, v32, v33);
    *v17 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B1DCC5E8(v10[21]);
    if (v35)
    {
      v36 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = 0;
    }
    sub_1B1DCC5E8(v10[22]);
    v38 = v37;
    swift_bridgeObjectRelease();
    if (v36)
    {
      v39 = *(_QWORD *)(v36 + 80);
      v40 = *(_QWORD *)(v36 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v40 = MEMORY[0x1E0DEE9D8];
      v39 = MEMORY[0x1E0DEE9D8];
    }
    v41 = *(_QWORD *)(v38 + 40);
    v42 = *(_QWORD *)(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1DD9590(v11, v39, v40, v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_1B1E02C04(0x6C706D6554657375, 0xEB00000000657461, &v47);
  if (v48)
  {
    v43 = MEMORY[0x1E0DEE9B8];
    if ((swift_dynamicCast() & 1) != 0 && (v46 & 1) != 0)
    {
      sub_1B1E02C04(0xD000000000000012, 0x80000001B233D690, &v47);
      if (!v48)
      {
        sub_1B1A057EC((uint64_t)&v47, (uint64_t)&qword_1ED4BB150, v43 + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
LABEL_35:
        sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        v48 = v45;
        *(_QWORD *)&v47 = &unk_1E63A26A8;
        swift_retain();
        sub_1B1E02AF4(0xD00000000000001CLL, 0x80000001B2329400, (uint64_t)&v47);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v47);
        sub_1B1FB69EC();
        swift_release();
        sub_1B1FB69EC();
        swift_release();
        sub_1B1E01B88(v49);
        return v11;
      }
      if ((swift_dynamicCast() & 1) == 0 || (v46 & 1) == 0)
        goto LABEL_35;
    }
  }
  else
  {
    sub_1B1A057EC((uint64_t)&v47, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
  }
  sub_1B1E01B88(v49);
  swift_release();
  return v11;
}

uint64_t sub_1B1DDB9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v5 = *(_QWORD *)(v2 + 168);
  if (*(_QWORD *)(v5 + 16) > 1uLL)
  {
    if (qword_1ED4BF430 == -1)
      goto LABEL_11;
    goto LABEL_14;
  }
  if (*(_QWORD *)(*(_QWORD *)(v2 + 176) + 16) != 1)
  {
    if (qword_1ED4BF430 == -1)
    {
LABEL_11:
      swift_retain();
      sub_1B2229430();
      v28 = 0;
      v29 = 0xE000000000000000;
      sub_1B2228890();
      v27 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v26 = 0;
      *((_QWORD *)&v26 + 1) = 0xE000000000000000;
      sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v26, v25);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
      sub_1B1A0DDAC(v25, &v26);
      swift_dynamicCast();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2228890();
      sub_1B2228890();
      v23 = v28;
      v22 = v29;
      v24 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      *(_QWORD *)&v26 = 0;
      swift_retain();
      sub_1B1F1AD70(v24, (uint64_t *)&v26, v23, v22);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
LABEL_14:
    swift_once();
    goto LABEL_11;
  }
  sub_1B1DCC5E8(v5);
  v7 = MEMORY[0x1E0DEE9E0];
  if (v8)
  {
    v9 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 168) = v7;
    v10 = MEMORY[0x1E0DEA968];
    v27 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v26 = a1;
    *((_QWORD *)&v26 + 1) = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B1E02AF4(1701667182, 0xE400000000000000, (uint64_t)&v26);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
    swift_release();
    *(_QWORD *)(v9 + 24) = a1;
    *(_QWORD *)(v9 + 32) = a2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v26 = *(_QWORD *)(v2 + 168);
    *(_QWORD *)(v2 + 168) = 0x8000000000000000;
    sub_1B1B87A7C(v9, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v2 + 168) = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = 6245961;
    v29 = 0xE300000000000000;
    v27 = v10;
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = 0xE000000000000000;
    sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v26, v25);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
    sub_1B1A0DDAC(v25, &v26);
    swift_dynamicCast();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v12 = v28;
    v13 = v29;
    *(_QWORD *)&v26 = 6245961;
    *((_QWORD *)&v26 + 1) = 0xE300000000000000;
    sub_1B2228890();
    sub_1B1DD8788(v12, v13, v26, *((uint64_t *)&v26 + 1), 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B1DCC5E8(*(_QWORD *)(v2 + 176));
  if (v15)
  {
    v16 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 176) = v7;
    v17 = MEMORY[0x1E0DEA968];
    v27 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v26 = a1;
    *((_QWORD *)&v26 + 1) = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B1E02AF4(1701667182, 0xE400000000000000, (uint64_t)&v26);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
    swift_release();
    *(_QWORD *)(v16 + 24) = a1;
    *(_QWORD *)(v16 + 32) = a2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_retain();
    v18 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v26 = *(_QWORD *)(v2 + 176);
    *(_QWORD *)(v2 + 176) = 0x8000000000000000;
    sub_1B1B87A60(v16, a1, a2, v18);
    *(_QWORD *)(v2 + 176) = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = 1599362383;
    v29 = 0xE400000000000000;
    v27 = v17;
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = 0xE000000000000000;
    sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v26, v25);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
    sub_1B1A0DDAC(v25, &v26);
    swift_dynamicCast();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v19 = v28;
    v20 = v29;
    *(_QWORD *)&v26 = 1599362383;
    *((_QWORD *)&v26 + 1) = 0xE400000000000000;
    sub_1B2228890();
    sub_1B1DD8788(v19, v20, v26, *((uint64_t *)&v26 + 1), 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v27 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v26 = a1;
  *((_QWORD *)&v26 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1B1E02AF4(1701667182, 0xE400000000000000, (uint64_t)&v26);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
}

uint64_t sub_1B1DDC0C4(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  uint64_t (*v44)(uint64_t, uint64_t);
  _QWORD *v45;
  uint64_t v46;

  v3 = v2;
  v4 = (_QWORD *)result;
  if ((a2 & 1) != 0)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 1360))(result);
  v5 = v4[5];
  v6 = *(_QWORD *)(v5 + 16);
  v45 = v4;
  v46 = v3;
  if (v6)
  {
    v43 = *(uint64_t (**)(uint64_t, uint64_t))(*v4 + 1440);
    swift_bridgeObjectRetain_n();
    v7 = (uint64_t *)(v5 + 40);
    while (1)
    {
      v9 = *(v7 - 1);
      v10 = *v7;
      swift_bridgeObjectRetain();
      v11 = v43(v9, v10);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = *(_QWORD **)(v3 + 264);
      *(_QWORD *)(v3 + 264) = 0x8000000000000000;
      v17 = sub_1B1DC3B00(v13, v12);
      v18 = v16;
      v19 = v15[2] + ((v16 & 1) == 0);
      if (v15[3] >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v22 = v15;
          if ((v16 & 1) != 0)
            goto LABEL_13;
        }
        else
        {
          sub_1B1EAD7D4();
          v22 = v15;
          if ((v18 & 1) != 0)
            goto LABEL_13;
        }
      }
      else
      {
        sub_1B1E9A6EC(v19, isUniquelyReferenced_nonNull_native);
        v20 = sub_1B1DC3B00(v13, v12);
        if ((v18 & 1) != (v21 & 1))
        {
LABEL_32:
          result = sub_1B2229FC4();
          __break(1u);
          return result;
        }
        v17 = v20;
        v22 = v15;
        if ((v18 & 1) != 0)
        {
LABEL_13:
          v23 = v22[7];
          swift_release();
          *(_QWORD *)(v23 + 8 * v17) = v11;
          goto LABEL_6;
        }
      }
      v22[(v17 >> 6) + 8] |= 1 << v17;
      v8 = (uint64_t *)(v22[6] + 16 * v17);
      *v8 = v13;
      v8[1] = v12;
      *(_QWORD *)(v22[7] + 8 * v17) = v11;
      ++v22[2];
      swift_bridgeObjectRetain();
LABEL_6:
      v7 += 2;
      v3 = v46;
      *(_QWORD *)(v46 + 264) = v22;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v6;
      v4 = v45;
      if (!v6)
      {
        result = swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
  v24 = v4[10];
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25)
    return result;
  v44 = *(uint64_t (**)(uint64_t, uint64_t))(*v4 + 1456);
  swift_bridgeObjectRetain_n();
  v26 = (uint64_t *)(v24 + 40);
  do
  {
    v28 = *(v26 - 1);
    v29 = *v26;
    swift_bridgeObjectRetain();
    v30 = v44(v28, v29);
    v32 = *(_QWORD *)(v30 + 40);
    v31 = *(_QWORD *)(v30 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    v33 = swift_isUniquelyReferenced_nonNull_native();
    v34 = *(_QWORD **)(v3 + 264);
    *(_QWORD *)(v3 + 264) = 0x8000000000000000;
    v36 = sub_1B1DC3B00(v32, v31);
    v37 = v35;
    v38 = v34[2] + ((v35 & 1) == 0);
    if (v34[3] >= v38)
    {
      if ((v33 & 1) != 0)
      {
        v41 = v34;
        if ((v35 & 1) == 0)
          goto LABEL_19;
      }
      else
      {
        sub_1B1EAD7D4();
        v41 = v34;
        if ((v37 & 1) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      sub_1B1E9A6EC(v38, v33);
      v39 = sub_1B1DC3B00(v32, v31);
      if ((v37 & 1) != (v40 & 1))
        goto LABEL_32;
      v36 = v39;
      v41 = v34;
      if ((v37 & 1) == 0)
      {
LABEL_19:
        v41[(v36 >> 6) + 8] |= 1 << v36;
        v27 = (uint64_t *)(v41[6] + 16 * v36);
        *v27 = v32;
        v27[1] = v31;
        *(_QWORD *)(v41[7] + 8 * v36) = v30;
        ++v41[2];
        swift_bridgeObjectRetain();
        goto LABEL_20;
      }
    }
    v42 = v41[7];
    swift_release();
    *(_QWORD *)(v42 + 8 * v36) = v30;
LABEL_20:
    v26 += 2;
    v3 = v46;
    *(_QWORD *)(v46 + 264) = v41;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v25;
  }
  while (v25);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B1DDC488(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD v21[5];

  if ((a3 & 1) != 0)
  {
    _s11MetadataSetCMa();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = 0;
    v21[3] = MEMORY[0x1E0DEAFA0];
    LOBYTE(v21[0]) = 1;
    sub_1B1E02AF4(1701536102, 0xE400000000000000, (uint64_t)v21);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v21);
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21[0] = *(_QWORD *)(v3 + 256);
  *(_QWORD *)(v3 + 256) = 0x8000000000000000;
  sub_1B1B89600(v9, v10, v6, v7, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 256) = v21[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  v21[0] = *(_QWORD *)(v3 + 264);
  *(_QWORD *)(v3 + 264) = 0x8000000000000000;
  sub_1B1B87484(a2, v12, v13, v14);
  *(_QWORD *)(v3 + 264) = v21[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  v17 = swift_isUniquelyReferenced_nonNull_native();
  v21[0] = *(_QWORD *)(v3 + 264);
  *(_QWORD *)(v3 + 264) = 0x8000000000000000;
  sub_1B1B87484(a1, v15, v16, v17);
  *(_QWORD *)(v3 + 264) = v21[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B19FA278(a2 + 56, (uint64_t)v21);
  sub_1B19F8C58(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  if (sub_1B1E03DBC() == 0x6156686374697753 && v18 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    sub_1B19F8C58(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
LABEL_8:
    sub_1B1DDC738(a1, a2);
    return swift_release();
  }
  v19 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  sub_1B19F8C58(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  if ((v19 & 1) != 0)
    goto LABEL_8;
  return swift_release();
}

uint64_t sub_1B1DDC738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __objc2_class **v14;
  uint64_t v15;
  __objc2_class **Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  char v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  if (!swift_weakLoadStrong())
  {
LABEL_8:
    if (!swift_weakLoadStrong())
      goto LABEL_42;
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v11 = sub_1B1FB3808(v9, v10);
    swift_bridgeObjectRelease();
    if (swift_weakLoadStrong())
    {
      _s10SubContextCMa();
      if (swift_dynamicCastClass())
      {
        v12 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        swift_bridgeObjectRetain();
        sub_1B1FB38F4(v12, v13, v11);
        swift_release();
LABEL_30:
        swift_bridgeObjectRelease();
LABEL_31:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      swift_release();
    }
    Strong = (__objc2_class **)swift_weakLoadStrong();
    if (Strong)
    {
      if (*Strong == _TtCO3VFX21GraphV1CodeGeneration12ContextEntry)
      {
        v21 = *(_QWORD *)(a1 + 24);
        v22 = *(_QWORD *)(a1 + 32);
        swift_bridgeObjectRetain();
        sub_1B1FB38F4(v21, v22, v11);
        swift_bridgeObjectRelease();
        v23 = *(_QWORD *)(a1 + 24);
        v24 = *(_QWORD *)(a1 + 32);
        swift_bridgeObjectRetain();
        sub_1B1FB38F4(v23, v24, v11);
        swift_release();
        goto LABEL_30;
      }
      swift_release();
    }
    if (swift_weakLoadStrong())
    {
      sub_1B1FB38F4(0x746C7561666564, 0xE700000000000000, v11);
      swift_release();
    }
    goto LABEL_31;
  }
  _s19StaticSwitchSnippetCMa();
  v4 = swift_dynamicCastClass();
  if (!v4)
  {
    swift_release();
    goto LABEL_8;
  }
  v5 = v4;
  if (swift_weakLoadStrong())
  {
    _s10SubContextCMa();
    if (swift_dynamicCastClass())
    {
      v7 = *(_QWORD *)(a1 + 24);
      v6 = *(_QWORD *)(a1 + 32);
      v46 = *(_QWORD *)(v5 + 40);
      if (*(_QWORD *)(v46 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1C929C8(0, 1);
        swift_bridgeObjectRelease();
        v8 = v46;
      }
      else
      {
        swift_bridgeObjectRetain();
        v8 = MEMORY[0x1E0DEE9D8];
      }
      v47 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v48 = v17;
      v46 = v8;
      sub_1B1E02AF4(v7, v6, (uint64_t)&v46);
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v46);
      swift_release();
LABEL_39:
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    swift_release();
  }
  v14 = (__objc2_class **)swift_weakLoadStrong();
  if (v14)
  {
    if (*v14 == _TtCO3VFX21GraphV1CodeGeneration12ContextEntry)
    {
      v19 = *(_QWORD *)(a1 + 24);
      v18 = *(_QWORD *)(a1 + 32);
      v46 = *(_QWORD *)(v5 + 40);
      if (*(_QWORD *)(v46 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1C929C8(0, 1);
        swift_bridgeObjectRelease();
        v20 = v46;
      }
      else
      {
        swift_bridgeObjectRetain();
        v20 = MEMORY[0x1E0DEE9D8];
      }
      v47 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v45 = v26;
      v48 = v26;
      v46 = v20;
      sub_1B1E02AF4(v19, v18, (uint64_t)&v46);
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = *(_QWORD *)(a1 + 24);
      v27 = *(_QWORD *)(a1 + 32);
      v46 = *(_QWORD *)(v5 + 40);
      if (*(_QWORD *)(v46 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1C929C8(0, 1);
        swift_bridgeObjectRelease();
        v29 = v46;
      }
      else
      {
        swift_bridgeObjectRetain();
        v29 = MEMORY[0x1E0DEE9D8];
      }
      v46 = v28;
      v47 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      v30 = v46;
      v48 = v45;
      v46 = v29;
      sub_1B1E02AF4(v30, v47, (uint64_t)&v46);
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v46);
      swift_release();
      goto LABEL_39;
    }
    swift_release();
  }
  if (swift_weakLoadStrong())
  {
    v46 = *(_QWORD *)(v5 + 40);
    if (*(_QWORD *)(v46 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1C929C8(0, 1);
      swift_bridgeObjectRelease();
      v15 = v46;
    }
    else
    {
      v15 = MEMORY[0x1E0DEE9D8];
    }
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v48 = v25;
    v46 = v15;
    swift_bridgeObjectRetain();
    sub_1B1E02AF4(0xD000000000000019, 0x80000001B233D5A0, (uint64_t)&v46);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v46);
    swift_release();
    goto LABEL_40;
  }
LABEL_41:
  swift_release();
LABEL_42:
  if (swift_weakLoadStrong())
  {
    v31 = *(_QWORD *)(a2 + 24);
    v32 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    v33 = sub_1B1FB3A04(v31, v32);
    v35 = v34;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  if (swift_weakLoadStrong())
  {
    v36 = sub_1B1FB34E8();
    swift_release();
    if (sub_1B1FBAEF8(v36) == 0x65746E6F43627553 && v37 == 0xEA00000000007478)
      goto LABEL_52;
    v38 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
      goto LABEL_53;
  }
  if (swift_weakLoadStrong())
  {
    v39 = sub_1B1FB34E8();
    swift_release();
    if (sub_1B1FBAEF8(v39) == 0x45747865746E6F43 && v40 == 0xEC0000007972746ELL)
    {
LABEL_52:
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    v43 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v43 & 1) != 0)
    {
LABEL_53:
      if (swift_weakLoadStrong())
      {
        v42 = *(_QWORD *)(a1 + 24);
        v41 = *(_QWORD *)(a1 + 32);
        swift_bridgeObjectRetain();
        sub_1B1FB3ADC(v42, v41, v33, v35);
        swift_release();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
  }
  if (swift_weakLoadStrong())
  {
    sub_1B1FB3ADC(0x746C7561666564, 0xE700000000000000, v33, v35);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DDCF30(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33[5];
  uint64_t v34[5];
  _QWORD v35[5];
  _QWORD v36[5];
  _QWORD v37[11];

  sub_1B19FA278((uint64_t)a1, (uint64_t)v36);
  v7 = v36[0];
  v8 = v36[1];
  v9 = v36[2];
  v10 = v36[3];
  v11 = v36[4];
  v32 = (_QWORD *)a2;
  sub_1B19FA278(a2, (uint64_t)v35);
  v27 = v35[1];
  v28 = v35[0];
  v25 = v35[3];
  v26 = v35[2];
  v24 = v35[4];
  sub_1B1E03DBC();
  v12 = sub_1B2228920();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    sub_1B1E03A80(v33);
    v7 = v33[0];
    v8 = v33[1];
    v9 = v33[2];
    v10 = v33[3];
    v11 = v33[4];
  }
  else
  {
    sub_1B19F8C58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  }
  v30 = v8;
  v31 = v7;
  v37[0] = v7;
  v37[1] = v8;
  v37[2] = v9;
  v37[3] = v10;
  v37[4] = v11;
  sub_1B1E03DBC();
  v13 = sub_1B2228920();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    sub_1B1E03A80(v34);
    v14 = v34[0];
    v15 = v34[1];
    v17 = v34[2];
    v16 = v34[3];
    v18 = v34[4];
  }
  else
  {
    v15 = v27;
    v14 = v28;
    v16 = v25;
    v17 = v26;
    v18 = v24;
    sub_1B19FA2B4(v28, v27);
  }
  v37[5] = v14;
  v37[6] = v15;
  v37[7] = v17;
  v37[8] = v16;
  v37[9] = v18;
  swift_retain();
  v19 = sub_1B1CB5FE0(v37);
  sub_1B19F9FEC(v14, v15);
  sub_1B19F9FEC(v31, v30);
  swift_release();
  if (!v19)
    return 0;
  sub_1B1ED6EB0(a5);
  if (!v20)
  {
    swift_release();
    return 0;
  }
  if (!*(_QWORD *)(v19 + 160))
  {
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B1E03DBC();
  v21 = sub_1B2228920();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    sub_1B19FA2B4(v28, v27);
    swift_bridgeObjectRetain();
    sub_1B19F8C58(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  }
  sub_1B1A06460();
  v22 = sub_1B222922C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1ED6B30(a5);
  swift_release();
  return v22;
}

uint64_t sub_1B1DDD2A4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t Strong;
  uint64_t v17;

  v17 = result;
  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v4 = v2;
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a2 + 40); ; i += 2)
    {
      v7 = *(_QWORD *)(v4 + 256);
      if (*(_QWORD *)(v7 + 16))
      {
        v8 = *(i - 1);
        v9 = *i;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = sub_1B1DC3B00(v8, v9);
        if ((v11 & 1) != 0)
        {
          v12 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 24 * v10);
          v14 = *v12;
          v13 = v12[1];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(*(_QWORD *)(v4 + 264) + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B1DC3B00(v14, v13);
            if ((v15 & 1) != 0)
            {
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              Strong = swift_weakLoadStrong();
              if (Strong)
              {
                sub_1B1DE28D0(v17, Strong, 1);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
              }
              else
              {
                swift_release();
                swift_bridgeObjectRelease();
              }
              swift_release();
              goto LABEL_5;
            }
            swift_release();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_release();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
LABEL_5:
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B1DDD484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[5];
  _QWORD v26[5];

  if (!*(_QWORD *)(*(_QWORD *)(v3 + 264) + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DC3B00(a1, a2);
  if ((v7 & 1) == 0)
    goto LABEL_24;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!swift_weakLoadStrong())
  {
LABEL_7:
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v12 = *(_QWORD *)(Strong + 48);
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        sub_1B19FA278(v12 + 32, (uint64_t)v26);
        swift_bridgeObjectRetain();
        sub_1B19F8C58(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
        sub_1B1E03DBC();
        v14 = sub_1B2228920();
        swift_bridgeObjectRelease();
        sub_1B19F8C58(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
        if ((v14 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v15 = v13 - 1;
          if (!v15)
          {
LABEL_15:
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_22;
          }
          v16 = v12 + 72;
          while (1)
          {
            sub_1B19FA278(v16, (uint64_t)v25);
            sub_1B19F8C58(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
            sub_1B1E03DBC();
            v17 = sub_1B2228920();
            swift_bridgeObjectRelease();
            sub_1B19F8C58(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
            if ((v17 & 1) != 0)
              break;
            v16 += 40;
            if (!--v15)
              goto LABEL_15;
          }
          swift_bridgeObjectRelease();
        }
        v18 = *(_QWORD *)(v3 + 256);
        if (*(_QWORD *)(v18 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v19 = sub_1B1DC3B00(a1, a2);
          if ((v20 & 1) != 0)
          {
            v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 24 * v19);
            v22 = *v21;
            v23 = v21[1];
            swift_retain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B1E01CB8(v22, v23);
            v10 = sub_1B1DDD484(v22, v23, a3);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            return v10;
          }
          swift_release();
          swift_release();
LABEL_24:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      swift_release();
    }
LABEL_22:
    swift_release();
    return 0;
  }
  _s17TypedArraySnippetCMa();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = v8;
  swift_release();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 40) + 16);
  swift_release();
  return v10;
}

void sub_1B1DDD798(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  _QWORD *v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  int *v99;
  uint64_t v100;
  uint64_t *v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  _OWORD v114[5];
  uint64_t v115;
  _OWORD v116[5];
  uint64_t v117;
  _QWORD v118[11];
  _QWORD v119[5];
  _QWORD v120[7];

  v101 = a1;
  sub_1B1B1F358();
  v99 = v6;
  MEMORY[0x1E0C80A78](v6, v7);
  v98 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B222820C();
  v96 = *(_QWORD *)(v9 - 8);
  v97 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v95 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = a2;
  v13 = *(_QWORD *)(a2 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(v11 + 16);
    if (v14)
    {
      v15 = *(unsigned __int8 *)(*v101 + 24);
      v16 = v92;
      v17 = *(_QWORD *)(v92 + 40);
      v109 = *(_QWORD *)(v92 + 32);
      v18 = v11 + 32;
      v19 = a4 + 32;
      v20 = v11;
      swift_bridgeObjectRetain();
      v91 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = v14 - 1;
      v108 = v13 - 1;
      v106 = (uint64_t *)(v16 + 56);
      v94 = 0x80000001B233D540;
      v93 = xmmword_1B226D240;
      v102 = v15;
      while (1)
      {
        sub_1B19FA278(v18, (uint64_t)v119);
        v22 = *(_QWORD *)(v104 + 256);
        v23 = *(_QWORD *)(v22 + 16);
        sub_1B19F8C58(v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
        v107 = v21;
        if (v23)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24 = sub_1B1DC3B00(v109, v17);
          if ((v25 & 1) != 0)
          {
            v26 = (uint64_t *)(*(_QWORD *)(v22 + 56) + 24 * v24);
            v27 = *v26;
            v28 = v26[1];
            v29 = v26[2];
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v29 && (v30 = *(_QWORD *)(v29 + 16)) != 0)
            {
              v31 = *(_QWORD *)(v30 + 16);
              swift_bridgeObjectRetain();
              if (v31)
              {
                swift_retain();
                swift_bridgeObjectRetain();
                sub_1B1DC3B00(1701536102, 0xE400000000000000);
                v33 = v32;
                swift_release();
                swift_bridgeObjectRelease();
                if ((v33 & 1) != 0)
                {
                  swift_release();
                  swift_bridgeObjectRelease_n();
                  sub_1B19F8C58(v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
                  goto LABEL_47;
                }
              }
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            v55 = *(_QWORD *)(v104 + 264);
            if (*(_QWORD *)(v55 + 16))
            {
              swift_bridgeObjectRetain();
              v56 = sub_1B1DC3B00(v27, v28);
              if ((v57 & 1) != 0)
              {
                v58 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + 8 * v56);
                swift_retain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(__objc2_class **)v58 == _TtCO3VFX21GraphV1CodeGeneration12ParameterOut)
                {
                  v103 = v19;
                  v105 = v18;
                  sub_1B19FA278(v58 + 56, (uint64_t)v120);
                  v77 = *(_QWORD *)(v58 + 40);
                  v78 = *(_QWORD *)(v58 + 48);
                  v79 = *v101;
                  swift_bridgeObjectRetain();
                  sub_1B19F8C58(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
                  v100 = sub_1B1DFBC64(v119, v109, v17, (uint64_t)v120, v77, v78, v15, 1, v79);
                  v81 = v80;
                  v90 = v82;
                  v109 = v83;
                  swift_bridgeObjectRelease();
                  sub_1B19F8C58(v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
                  swift_bridgeObjectRelease();
                  sub_1B19F8C58(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
                  v84 = *(_QWORD **)(v79 + 128);
                  swift_bridgeObjectRetain();
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *(_QWORD *)(v79 + 128) = v84;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    v84 = sub_1B1C63044(0, v84[2] + 1, 1, v84);
                    *(_QWORD *)(v79 + 128) = v84;
                  }
                  v87 = v84[2];
                  v86 = v84[3];
                  if (v87 >= v86 >> 1)
                  {
                    v84 = sub_1B1C63044(v86 > 1, v87 + 1, 1, v84);
                    *(_QWORD *)(v79 + 128) = v84;
                  }
                  v84[2] = v87 + 1;
                  v88 = &v84[2 * v87];
                  v88[4] = v100;
                  v88[5] = v81;
                  swift_bridgeObjectRelease();
                  if (v109)
                    sub_1B1C9110C(0, 0, v90, v109);
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  v15 = v102;
                  v18 = v105;
                  v19 = v103;
                }
                else
                {
                  sub_1B19F8C58(v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
                  swift_release();
LABEL_46:
                  swift_bridgeObjectRelease();
                  swift_release();
LABEL_47:
                  swift_bridgeObjectRelease();
                }
                v54 = v107;
                v53 = v108;
                if (!v108)
                  goto LABEL_58;
                goto LABEL_49;
              }
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            sub_1B19F8C58(v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
            goto LABEL_46;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v34 = MEMORY[0x1E0DEB940];
        sub_1B1B9DC78(v19, (uint64_t)v118, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
        v105 = v18;
        if (v118[1])
        {
          sub_1B1B9DC78((uint64_t)v118, (uint64_t)v114, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v34, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
          v116[3] = v114[3];
          v116[4] = v114[4];
          v117 = v115;
          v116[0] = v114[0];
          v116[1] = v114[1];
          v116[2] = v114[2];
          v35 = *v101;
          v37 = sub_1B1FC0A9C();
          if ((_DWORD)v15)
          {
            if ((_DWORD)v15 == 1)
              v38 = sub_1B1C46B4C((uint64_t)v116, v35);
            else
              v38 = sub_1B1C3B344(v116, v35, v37, v36, 2);
          }
          else
          {
            v38 = sub_1B1C3F84C(v116, v35, v37, v36, 0);
          }
          v59 = v38;
          v60 = v39;
          v61 = v40;
          v62 = v41;
          swift_bridgeObjectRelease();
          if (v62)
          {
            v100 = v59;
            v103 = v19;
            *(_QWORD *)&v114[0] = v61;
            *((_QWORD *)&v114[0] + 1) = v62;
            v112 = 10;
            v113 = 0xE100000000000000;
            v110 = 2314;
            v111 = 0xE200000000000000;
            sub_1B1A06460();
            sub_1B222922C();
            *(_QWORD *)&v114[0] = 8201;
            *((_QWORD *)&v114[0] + 1) = 0xE200000000000000;
            sub_1B2228890();
            swift_bridgeObjectRelease();
            v63 = v114[0];
            v64 = *(_QWORD **)(v35 + 128);
            swift_bridgeObjectRetain();
            v65 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v35 + 128) = v64;
            if ((v65 & 1) == 0)
            {
              v64 = sub_1B1C63044(0, v64[2] + 1, 1, v64);
              *(_QWORD *)(v35 + 128) = v64;
            }
            v67 = v64[2];
            v66 = v64[3];
            if (v67 >= v66 >> 1)
            {
              v64 = sub_1B1C63044(v66 > 1, v67 + 1, 1, v64);
              *(_QWORD *)(v35 + 128) = v64;
            }
            v64[2] = v67 + 1;
            *(_OWORD *)&v64[2 * v67 + 4] = v63;
            swift_bridgeObjectRelease();
            v19 = v103;
            v59 = v100;
          }
          v15 = v102;
          v68 = sub_1B1DFCE8C((uint64_t)v119, v109, v17, v59, v60, v102, v35);
          v70 = v69;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B19F8C58(v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
          swift_bridgeObjectRelease();
          v71 = *(_QWORD **)(v35 + 128);
          swift_bridgeObjectRetain();
          v72 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v35 + 128) = v71;
          if ((v72 & 1) == 0)
          {
            v71 = sub_1B1C63044(0, v71[2] + 1, 1, v71);
            *(_QWORD *)(v35 + 128) = v71;
          }
          v18 = v105;
          v74 = v71[2];
          v73 = v71[3];
          if (v74 >= v73 >> 1)
          {
            v71 = sub_1B1C63044(v73 > 1, v74 + 1, 1, v71);
            *(_QWORD *)(v35 + 128) = v71;
          }
          v54 = v107;
          v71[2] = v74 + 1;
          v75 = &v71[2 * v74];
          v75[4] = v68;
          v75[5] = v70;
          swift_bridgeObjectRelease();
          sub_1B1A203C4((uint64_t)v116);
          sub_1B1A057EC((uint64_t)v118, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
          v53 = v108;
          if (!v108)
            goto LABEL_58;
        }
        else
        {
          if (qword_1ED4BF430 != -1)
            swift_once();
          *(_QWORD *)&v116[0] = 0;
          *((_QWORD *)&v116[0] + 1) = 0xE000000000000000;
          v100 = qword_1ED4D0FB0;
          swift_retain();
          sub_1B2229430();
          v114[0] = v116[0];
          sub_1B2228890();
          sub_1B19FA278((uint64_t)v119, (uint64_t)v116);
          sub_1B22295EC();
          sub_1B19F8C58(v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
          sub_1B2228890();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v42 = v114[0];
          v43 = sub_1B2228E90();
          if (qword_1ED4BF658 != -1)
            swift_once();
          v103 = v19;
          v44 = qword_1ED4D0FD0;
          v45 = qword_1ED4BF688;
          swift_retain();
          if (v45 != -1)
            swift_once();
          sub_1B1791524(0, (unint64_t *)&qword_1ED4BF700, (uint64_t (*)(uint64_t))sub_1B1BB9F44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v46 = swift_allocObject();
          *(_OWORD *)(v46 + 16) = v93;
          *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v46 + 64) = sub_1B1B1F47C();
          *(_OWORD *)(v46 + 32) = v42;
          swift_bridgeObjectRetain();
          sub_1B222835C();
          swift_bridgeObjectRelease();
          swift_retain();
          v47 = v95;
          sub_1B2228200();
          v48 = v99[12];
          v49 = v99[16];
          v50 = v99[20];
          v109 = v44;
          v51 = (uint64_t)v98;
          v52 = &v98[v50];
          (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v98, v47, v97);
          *(_BYTE *)(v51 + v48) = v43;
          *(_QWORD *)(v51 + v49) = 0;
          *(_OWORD *)v52 = v42;
          swift_bridgeObjectRetain();
          sub_1B2228428();
          swift_release();
          sub_1B1A04628(v51, (uint64_t (*)(_QWORD))sub_1B1B1F358);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1B1A057EC((uint64_t)v118, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
          v15 = v102;
          v18 = v105;
          v19 = v103;
          v54 = v107;
          v53 = v108;
          if (!v108)
          {
LABEL_58:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
        }
LABEL_49:
        if (!v54)
          goto LABEL_58;
        v76 = v106;
        v17 = *v106;
        v109 = *(v106 - 1);
        swift_bridgeObjectRetain();
        v21 = v54 - 1;
        v108 = v53 - 1;
        v106 = v76 + 2;
        v19 += 88;
        v18 += 40;
      }
    }
  }
}

uint64_t sub_1B1DDE2C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v18 = qword_1EEF5ECE0;
  v19 = unk_1EEF5ECE8;
  swift_bridgeObjectRetain();
  sub_1B2228890();
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6 || !*(_QWORD *)(v6 + 16))
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B1DC3B00(v18, v19);
  v8 = v7;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    v10 = *(unsigned __int8 *)(*a1 + 24);
    swift_retain();
    swift_retain();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_1B1DF69B4(v11, a2, v3);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_1B1DF6D2C(v13, a2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v18 = v12;
    sub_1B19F528C(v14);
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1B22296AC();
      if (v15)
      {
LABEL_6:
        v16 = 0;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v17 = MEMORY[0x1B5E21018](v16, v12);
          }
          else
          {
            v17 = *(_QWORD *)(v12 + 8 * v16 + 32);
            swift_retain();
          }
          ++v16;
          v18 = v17;
          sub_1B1DEBA40(&v18, v10, v3, a1);
          swift_release();
        }
        while (v15 != v16);
      }
    }
    else
    {
      v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DDE504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DDE51C(a1, a2, a3, (void (*)(_QWORD, _QWORD, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1DFE6EC);
}

uint64_t sub_1B1DDE510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DDE51C(a1, a2, a3, (void (*)(_QWORD, _QWORD, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1DFD7F4);
}

uint64_t sub_1B1DDE51C(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (*(_QWORD *)(a2 + 16))
  {
    v8 = result;
    v9 = swift_bridgeObjectRetain();
    sub_1B1DF54C8(v9, 0xEA00000000006E49);
    swift_bridgeObjectRelease();
    v10 = swift_bridgeObjectRetain();
    v11 = sub_1B1DC8A9C(v10);
    swift_release();
    v14 = v11;
    sub_1B1DD676C(&v14);
    swift_release();
    v12 = v14[2];
    if (v12)
    {
      v13 = v14 + 6;
      do
      {
        a4(*(v13 - 2), *(v13 - 1), v13, a2, a3, v4, v8);
        v13 += 13;
        --v12;
      }
      while (v12);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1DDE624(uint64_t *a1, _QWORD *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  _QWORD *v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t i;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  _QWORD *v97;
  char v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  unint64_t v106;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[2];
  uint64_t v116;
  _OWORD v117[5];
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  _QWORD v125[5];
  uint64_t v126;
  uint64_t v127;

  v4 = v3;
  v5 = a2;
  v6 = (_QWORD *)*a1;
  v7 = *(unsigned __int8 *)(*a1 + 24);
  v8 = *(_QWORD **)(*a1 + 176);
  v9 = a2[3];
  v10 = a2[4];
  v11 = v8[2];
  if (!v11)
    goto LABEL_15;
  result = v8[4];
  if (result == v9 && v8[5] == v10)
    return result;
  result = sub_1B2229D24();
  if ((result & 1) != 0)
    return result;
  v14 = v11 - 1;
  if (!v14)
  {
LABEL_15:
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6[22] = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_1B1C63044(0, v8[2] + 1, 1, v8);
      v6[22] = v8;
    }
    v19 = v8[2];
    v18 = v8[3];
    if (v19 >= v18 >> 1)
    {
      v8 = sub_1B1C63044(v18 > 1, v19 + 1, 1, v8);
      v6[22] = v8;
    }
    v8[2] = v19 + 1;
    v20 = &v8[2 * v19];
    v20[4] = v9;
    v20[5] = v10;
    if (v5 && (__objc2_class *)*v5 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
    {
      v21 = swift_retain();
      sub_1B1DEAA58(v21);
      swift_release();
    }
    swift_release();
    v22 = *(_QWORD *)(sub_1B1FB4380() + 16);
    swift_bridgeObjectRelease();
    v105 = v7;
    if (v22)
    {
      v23 = sub_1B1FB4380();
      swift_retain();
      swift_retain();
      v24 = sub_1B1DF71E8(v23, (uint64_t)v5, v4);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v25 = *(_QWORD *)(v24 + 16);
      swift_bridgeObjectRelease();
      if (v25)
      {
        v106 = v5[12];
        if (v106 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v26 = sub_1B22296AC();
          if (v26)
          {
LABEL_26:
            v27 = 0;
            v108 = v26;
            v112 = v4;
            do
            {
              if ((v106 & 0xC000000000000001) != 0)
              {
                v29 = MEMORY[0x1B5E21018](v27, v106);
              }
              else
              {
                v29 = *(_QWORD *)(v106 + 32 + 8 * v27);
                swift_retain();
              }
              v30 = 0;
              v31 = *(_QWORD *)(v29 + 40);
              v32 = *(_QWORD *)(v29 + 48);
              v33 = *(_QWORD *)(v4 + 256);
              v34 = v33 + 64;
              v35 = 1 << *(_BYTE *)(v33 + 32);
              if (v35 < 64)
                v36 = ~(-1 << v35);
              else
                v36 = -1;
              v37 = v36 & *(_QWORD *)(v33 + 64);
              v38 = (unint64_t)(v35 + 63) >> 6;
              do
              {
                if (v37)
                {
                  v39 = __clz(__rbit64(v37));
                  v37 &= v37 - 1;
                  v40 = v39 | (v30 << 6);
                }
                else
                {
                  v41 = v30 + 1;
                  if (v30 + 1 >= v38)
                    goto LABEL_28;
                  v42 = *(_QWORD *)(v34 + 8 * v41);
                  if (!v42)
                  {
                    v41 = v30 + 2;
                    if (v30 + 2 >= v38)
                      goto LABEL_28;
                    v42 = *(_QWORD *)(v34 + 8 * v41);
                    if (!v42)
                    {
                      v41 = v30 + 3;
                      if (v30 + 3 >= v38)
                        goto LABEL_28;
                      v42 = *(_QWORD *)(v34 + 8 * v41);
                      if (!v42)
                      {
                        v41 = v30 + 4;
                        if (v30 + 4 >= v38)
                          goto LABEL_28;
                        v42 = *(_QWORD *)(v34 + 8 * v41);
                        if (!v42)
                        {
                          v41 = v30 + 5;
                          if (v30 + 5 >= v38)
                            goto LABEL_28;
                          v42 = *(_QWORD *)(v34 + 8 * v41);
                          if (!v42)
                          {
                            v41 = v30 + 6;
                            if (v30 + 6 >= v38)
                              goto LABEL_28;
                            v42 = *(_QWORD *)(v34 + 8 * v41);
                            if (!v42)
                            {
                              while (v38 - 7 != v30)
                              {
                                v42 = *(_QWORD *)(v33 + 120 + 8 * v30++);
                                if (v42)
                                {
                                  v41 = v30 + 6;
                                  goto LABEL_54;
                                }
                              }
                              goto LABEL_28;
                            }
                          }
                        }
                      }
                    }
                  }
LABEL_54:
                  v37 = (v42 - 1) & v42;
                  v40 = __clz(__rbit64(v42)) + (v41 << 6);
                  v30 = v41;
                }
                v43 = (_QWORD *)(*(_QWORD *)(v33 + 56) + 24 * v40);
                v44 = *v43 == v31 && v43[1] == v32;
              }
              while (!v44 && (sub_1B2229D24() & 1) == 0);
              sub_1B19FA278(v29 + 56, (uint64_t)&v126);
              sub_1B19F8C58(&v126, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
              sub_1B1E02E1C(&v126, 1, (uint64_t)v117);
              sub_1B19F8C58(&v126, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
              if (!*((_QWORD *)&v117[0] + 1))
              {
                sub_1B1A057EC((uint64_t)v117, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
LABEL_28:
                swift_release();
                v28 = v108;
                goto LABEL_29;
              }
              v121 = v117[2];
              v122 = v117[3];
              v123 = v117[4];
              v124 = v118;
              v119 = v117[0];
              v120 = v117[1];
              sub_1B19FA278(v29 + 56, (uint64_t)v125);
              swift_bridgeObjectRetain();
              sub_1B19F8C58(v125, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
              v45 = sub_1B1FC0A9C();
              v47 = v46;
              swift_bridgeObjectRelease();
              sub_1B1C39E78((uint64_t)v125, v45, v47, 0, v105);
              swift_bridgeObjectRelease();
              sub_1B19F8C58(v125, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
              v48 = *a1;
              if (v105)
              {
                swift_retain();
                if (v105 == 1)
                  sub_1B1C46B4C((uint64_t)&v119, v48);
                else
                  sub_1B1C3B344(&v119, v48, 0, 0, 2);
              }
              else
              {
                swift_retain();
                sub_1B1C3F84C(&v119, v48, 0, 0, 0);
              }
              swift_release();
              swift_bridgeObjectRelease();
              *(_QWORD *)&v117[0] = 8201;
              *((_QWORD *)&v117[0] + 1) = 0xE200000000000000;
              swift_retain();
              sub_1B2228890();
              swift_bridgeObjectRelease();
              sub_1B2228890();
              sub_1B2228890();
              swift_bridgeObjectRelease();
              sub_1B2228890();
              swift_bridgeObjectRelease();
              v49 = v117[0];
              v50 = *(_QWORD **)(v48 + 128);
              swift_bridgeObjectRetain();
              v51 = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v48 + 128) = v50;
              if ((v51 & 1) == 0)
              {
                v50 = sub_1B1C63044(0, v50[2] + 1, 1, v50);
                *(_QWORD *)(v48 + 128) = v50;
              }
              v28 = v108;
              v53 = v50[2];
              v52 = v50[3];
              if (v53 >= v52 >> 1)
              {
                v50 = sub_1B1C63044(v52 > 1, v53 + 1, 1, v50);
                *(_QWORD *)(v48 + 128) = v50;
              }
              v50[2] = v53 + 1;
              *(_OWORD *)&v50[2 * v53 + 4] = v49;
              swift_release();
              swift_bridgeObjectRelease();
              sub_1B1A203C4((uint64_t)&v119);
              swift_release();
LABEL_29:
              ++v27;
              v4 = v112;
            }
            while (v27 != v28);
          }
        }
        else
        {
          v26 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v26)
            goto LABEL_26;
        }
        return swift_bridgeObjectRelease_n();
      }
    }
    v54 = v5[15];
    v110 = v5;
    v113 = v4;
    if (!v54)
    {
LABEL_86:
      if ((*(_BYTE *)(v5[17] + 109) & 1) != 0)
      {
        v68 = (uint64_t)v5;
        v69 = MEMORY[0x1E0DEE9D8];
        v115[1] = v6[17];
        v116 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        v115[0] = (uint64_t)sub_1B1B7E040(v69);
        v70 = *(_QWORD **)(v68 + 40);
        swift_retain();
        v71 = swift_bridgeObjectRetain();
        v72 = sub_1B1DF6580(v71, v68);
        v73 = swift_release();
        MEMORY[0x1E0C80A78](v73, v74);
        v75 = a1;
        sub_1B1DF9158(v70, v72, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E01CE8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v76 = sub_1B1FB74F8();
        if (v76)
        {
          v77 = v76[2];
          if (v77)
          {
            v78 = (uint64_t)(v76 + 6);
            do
            {
              sub_1B1DFACDC(*(_QWORD *)(v78 - 16), *(_QWORD *)(v78 - 8), v78, v4, a1, v110, 1);
              v78 += 104;
              --v77;
            }
            while (v77);
          }
          swift_bridgeObjectRelease();
        }
        v79 = *a1;
        v80 = *(_QWORD *)(*a1 + 48);
        v81 = *(_QWORD *)(*a1 + 56);
        LOBYTE(v119) = *(_BYTE *)(*a1 + 24);
        *(_WORD *)((char *)&v119 + 1) = 0;
        BYTE3(v119) = 0;
        *((_QWORD *)&v119 + 1) = v69;
        LOWORD(v120) = 1;
        *((_QWORD *)&v120 + 1) = v80;
        *(_QWORD *)&v121 = v81;
        WORD4(v121) = 257;
        v122 = 0uLL;
        v82 = v4;
        v109 = v79;
        v83 = *(_QWORD *)(v79 + 88);
        v84 = *(_QWORD *)(v79 + 96);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v85 = sub_1B1B7DF34(v69);
        _s7ContextC14GenerationDataCMa();
        v86 = swift_allocObject();
        sub_1B1DEAFE0(v82, &v119, v83, v84, (uint64_t)v85, 0);
        v114 = v86;
        v87 = v110;
        sub_1B1B23100(&v114);
        v88 = 0xE000000000000000;
        *(_QWORD *)&v117[0] = 0;
        *((_QWORD *)&v117[0] + 1) = 0xE000000000000000;
        v89 = *(_QWORD *)(v86 + 128);
        v90 = *(_QWORD *)(v89 + 16);
        if (v90)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          v91 = (uint64_t *)(v89 + 40);
          do
          {
            v92 = *v91;
            v126 = *(v91 - 1);
            v127 = v92;
            v125[0] = 0x244E49414D4F4424;
            v125[1] = 0xE800000000000000;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
            sub_1B1A06460();
            sub_1B222922C();
            swift_bridgeObjectRelease();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v91 += 2;
            --v90;
          }
          while (v90);
          swift_release();
          swift_bridgeObjectRelease();
          v88 = *((_QWORD *)&v117[0] + 1);
          v93 = *(_QWORD *)&v117[0];
          v75 = a1;
          v87 = v110;
        }
        else
        {
          v93 = 0;
        }
        *(_QWORD *)&v117[0] = v93;
        *((_QWORD *)&v117[0] + 1) = v88;
        v94 = *(_QWORD *)(v116 + 16);
        if (v94)
        {
          v95 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
          do
          {
            v96 = *v95;
            v126 = *(v95 - 1);
            v127 = v96;
            sub_1B1DEE114(&v126, (uint64_t)v75, v115, v105, (uint64_t *)v117);
            v95 += 2;
            --v94;
          }
          while (v94);
          swift_bridgeObjectRelease();
          v88 = *((_QWORD *)&v117[0] + 1);
          v93 = *(_QWORD *)&v117[0];
        }
        v97 = *(_QWORD **)(v109 + 128);
        swift_bridgeObjectRetain();
        swift_retain();
        v98 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v109 + 128) = v97;
        if ((v98 & 1) == 0)
        {
          v97 = sub_1B1C63044(0, v97[2] + 1, 1, v97);
          *(_QWORD *)(v109 + 128) = v97;
        }
        v100 = v97[2];
        v99 = v97[3];
        if (v100 >= v99 >> 1)
        {
          v97 = sub_1B1C63044(v99 > 1, v100 + 1, 1, v97);
          *(_QWORD *)(v109 + 128) = v97;
        }
        v97[2] = v100 + 1;
        v101 = &v97[2 * v100];
        v101[4] = v93;
        v101[5] = v88;
        swift_release();
        v102 = sub_1B1FB750C();
        if (v102)
        {
          v103 = v102[2];
          if (v103)
          {
            v104 = (uint64_t)(v102 + 6);
            do
            {
              sub_1B1DFA10C(*(_QWORD *)(v104 - 16), *(_QWORD *)(v104 - 8), v104, v113, v75, v87);
              v104 += 104;
              --v103;
            }
            while (v103);
          }
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((a3 & 1) != 0)
        {
          swift_retain();
          v58 = swift_bridgeObjectRetain();
          v59 = sub_1B1DF6580(v58, (uint64_t)v5);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1B1DDD2A4((uint64_t)a1, v59);
          swift_bridgeObjectRelease();
        }
        v60 = sub_1B1DFB4EC(v5);
        sub_1B1DDD798(a1, v60, v61, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v63 = sub_1B1FB74F8();
        if (v63)
        {
          v64 = v63[2];
          if (v64)
          {
            v65 = (uint64_t)(v63 + 6);
            do
            {
              sub_1B1DFACDC(*(_QWORD *)(v65 - 16), *(_QWORD *)(v65 - 8), v65, v4, a1, v5, 1);
              v65 += 104;
              --v64;
            }
            while (v64);
          }
          swift_bridgeObjectRelease();
        }
        sub_1B1B23100(a1);
        result = (uint64_t)sub_1B1FB750C();
        if (!result)
          return result;
        v66 = *(_QWORD *)(result + 16);
        if (v66)
        {
          v67 = result + 48;
          do
          {
            sub_1B1DFA10C(*(_QWORD *)(v67 - 16), *(_QWORD *)(v67 - 8), v67, v4, a1, v5);
            v67 += 104;
            --v66;
          }
          while (v66);
        }
      }
      return swift_bridgeObjectRelease();
    }
    if (v54 >> 62)
    {
      swift_bridgeObjectRetain();
      v55 = sub_1B22296AC();
      if (v55)
      {
LABEL_74:
        for (i = 0; i != v55; ++i)
        {
          if ((v54 & 0xC000000000000001) != 0)
            v57 = MEMORY[0x1B5E21018](i, v54);
          else
            v57 = swift_retain();
          MEMORY[0x1B5E2064C](v57);
          if (*(_QWORD *)((v6[14] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6[14] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B2228AF4();
          sub_1B2228B30();
          sub_1B2228AD0();
        }
      }
    }
    else
    {
      v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v55)
        goto LABEL_74;
    }
    swift_bridgeObjectRelease();
    v4 = v113;
    v5 = v110;
    goto LABEL_86;
  }
  v15 = v8 + 7;
  while (1)
  {
    result = *(v15 - 1);
    if (result == v9 && *v15 == v10)
      return result;
    result = sub_1B2229D24();
    if ((result & 1) != 0)
      return result;
    v15 += 2;
    if (!--v14)
      goto LABEL_15;
  }
}

uint64_t sub_1B1DDF3D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t Strong;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  _QWORD v24[5];
  _QWORD v25[4];

  v2 = v1;
  v4 = sub_1B1BBD188();
  if (v5)
  {
    v6 = v4;
    goto LABEL_8;
  }
  v25[0] = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v25[0] + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1C929C8(0, 1);
    swift_bridgeObjectRelease();
    v7 = v25[0];
    if (*(_QWORD *)(v25[0] + 16))
    {
LABEL_5:
      v6 = *(_QWORD *)(v7 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v6 = 0;
LABEL_8:
  v8 = *(_QWORD *)aSelectedcase;
  v9 = *(_QWORD *)&aSelectedcase[8];
  swift_bridgeObjectRetain();
  v10 = sub_1B1FB71E0(v8, v9);
  swift_bridgeObjectRelease();
  if (!v10)
    return v6;
  swift_retain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1B1E009B8(v11, v10, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1DF7044);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B1DCC548(v12, v24);
  swift_release();
  sub_1B1A025EC((uint64_t)v24, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1B1E01C50);
  if (!v25[1])
  {
    swift_release();
    return v6;
  }
  v13 = v25[3];
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 264) + 16))
    goto LABEL_20;
  v14 = v25[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DC3B00(v14, v13);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong();
  swift_release();
  if (!Strong)
  {
LABEL_20:
    v22 = 0u;
    v23 = 0u;
    goto LABEL_21;
  }
  sub_1B1E02C04(0x65756C6176, 0xE500000000000000, &v22);
  swift_release();
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_1B1A057EC((uint64_t)&v22, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
    return v6;
  }
  if ((swift_dynamicCast() & 1) != 0 && (v21 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)&v22 = *(_QWORD *)(a1 + 40);
    if (*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1C929C8(0, 1);
      swift_bridgeObjectRelease();
      v17 = v22;
    }
    else
    {
      v17 = MEMORY[0x1E0DEE9D8];
    }
    v19 = *(_QWORD *)(v17 + 16);
    swift_bridgeObjectRelease();
    if (v21 < v19)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v22 = *(_QWORD *)(a1 + 40);
      if (*(_QWORD *)(v22 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1C929C8(0, 1);
        swift_bridgeObjectRelease();
        v20 = v22;
      }
      else
      {
        v20 = MEMORY[0x1E0DEE9D8];
      }
      v6 = *(_QWORD *)(v20 + 16 * v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1B1DDF780(uint64_t *a1, _QWORD *a2, char a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  __int128 v80;
  _QWORD *v81;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  _QWORD *v91;
  char v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD v127[6];

  v4 = a2[7];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B22296AC();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v110 = a1;
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    *(_QWORD *)&v120 = MEMORY[0x1E0DEE9D8];
    sub_1B2029FFC(0, v5 & ~(v5 >> 63), 0);
    v7 = 0;
    v8 = (_QWORD *)v120;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1B5E21018](v7, v4);
      }
      else
      {
        v9 = *(_QWORD *)(v4 + 8 * v7 + 32);
        swift_retain();
      }
      v11 = *(_QWORD *)(v9 + 24);
      v10 = *(_QWORD *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_release();
      *(_QWORD *)&v120 = v8;
      v13 = v8[2];
      v12 = v8[3];
      if (v13 >= v12 >> 1)
      {
        sub_1B2029FFC(v12 > 1, v13 + 1, 1);
        v8 = (_QWORD *)v120;
      }
      ++v7;
      v8[2] = v13 + 1;
      v14 = &v8[2 * v13];
      v14[4] = v11;
      v14[5] = v10;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v126 = v8;
  v15 = a2[7];
  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1B22296AC();
  if (!v16)
    goto LABEL_25;
LABEL_15:
  *(_QWORD *)&v120 = v6;
  sub_1B2029FFC(0, v16 & ~(v16 >> 63), 0);
  v17 = 0;
  v18 = v120;
  do
  {
    if ((v15 & 0xC000000000000001) != 0)
    {
      v19 = MEMORY[0x1B5E21018](v17, v15);
    }
    else
    {
      v19 = *(_QWORD *)(v15 + 8 * v17 + 32);
      swift_retain();
    }
    v21 = *(_QWORD *)(v19 + 40);
    v20 = *(_QWORD *)(v19 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    *(_QWORD *)&v120 = v18;
    v23 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1B2029FFC(v22 > 1, v23 + 1, 1);
      v18 = v120;
    }
    ++v17;
    *(_QWORD *)(v18 + 16) = v23 + 1;
    v24 = v18 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v21;
    *(_QWORD *)(v24 + 40) = v20;
  }
  while (v16 != v17);
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  v100 = v18;
  v25 = v110;
  v26 = a2[7];
  v27 = v99;
  if (!(v26 >> 62))
  {
    v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v28)
      goto LABEL_28;
LABEL_37:
    swift_bridgeObjectRelease();
    v105 = MEMORY[0x1E0DEE9D8];
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1B22296AC();
  if (!v28)
    goto LABEL_37;
LABEL_28:
  *(_QWORD *)&v120 = v6;
  sub_1B202A3C4(0, v28 & ~(v28 >> 63), 0);
  v29 = 0;
  v30 = v6;
  v104 = v26 & 0xC000000000000001;
  v107 = v26;
  do
  {
    v31 = v28;
    v32 = v30;
    if (v104)
    {
      v33 = (_QWORD *)MEMORY[0x1B5E21018](v29, v26);
    }
    else
    {
      v33 = *(_QWORD **)(v26 + 8 * v29 + 32);
      swift_retain();
    }
    v34 = v33[7];
    v35 = v33[8];
    v36 = v33[9];
    v37 = v33[10];
    v38 = v33[11];
    sub_1B19FA2B4(v34, v35);
    swift_release();
    v30 = v32;
    *(_QWORD *)&v120 = v32;
    v40 = *(_QWORD *)(v32 + 16);
    v39 = *(_QWORD *)(v32 + 24);
    if (v40 >= v39 >> 1)
    {
      sub_1B202A3C4(v39 > 1, v40 + 1, 1);
      v30 = v120;
    }
    ++v29;
    *(_QWORD *)(v30 + 16) = v40 + 1;
    v41 = (_QWORD *)(v30 + 40 * v40);
    v41[4] = v34;
    v41[5] = v35;
    v41[6] = v36;
    v41[7] = v37;
    v41[8] = v38;
    v28 = v31;
    v26 = v107;
    v25 = v110;
  }
  while (v31 != v29);
  v105 = v30;
  swift_bridgeObjectRelease();
  v27 = v99;
LABEL_38:
  v42 = a2[7];
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v43 = sub_1B22296AC();
    if (v43)
      goto LABEL_40;
  }
  else
  {
    v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v43)
    {
LABEL_40:
      v44 = 0;
      v45 = v42 & 0xC000000000000001;
      v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v108 = v42;
      while (1)
      {
        if (v45)
        {
          v52 = MEMORY[0x1B5E21018](v44, v42);
        }
        else
        {
          v52 = *(_QWORD *)(v42 + 8 * v44 + 32);
          swift_retain();
        }
        Strong = swift_weakLoadStrong();
        if (!Strong)
          break;
        v54 = Strong;
        v112 = *(_QWORD *)(v52 + 24);
        v113 = *(_QWORD *)(v52 + 32);
        swift_bridgeObjectRetain_n();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        v55 = *(_QWORD *)(v54 + 16);
        if (v55 && *(_QWORD *)(v55 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v56 = sub_1B1DC3B00(v112, v113);
          if ((v57 & 1) != 0)
          {
            sub_1B19F8F0C(*(_QWORD *)(v55 + 56) + 88 * v56, (uint64_t)&v114);
          }
          else
          {
            v119 = 0;
            v117 = 0u;
            v118 = 0u;
            v115 = 0u;
            v116 = 0u;
            v114 = 0u;
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v42 = v108;
        }
        else
        {
          v119 = 0;
          v117 = 0u;
          v118 = 0u;
          v115 = 0u;
          v116 = 0u;
          v114 = 0u;
          swift_release();
        }
        swift_bridgeObjectRelease();
        v27 = v99;
        if (!*((_QWORD *)&v114 + 1))
          goto LABEL_61;
        v122 = v116;
        v123 = v117;
        v124 = v118;
        v125 = v119;
        v120 = v114;
        v121 = v115;
        sub_1B19F8F0C((uint64_t)&v120, (uint64_t)&v114);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v46 = sub_1B1C67FF4(0, v46[2] + 1, 1, v46);
        v59 = v46[2];
        v58 = v46[3];
        if (v59 >= v58 >> 1)
          v46 = sub_1B1C67FF4(v58 > 1, v59 + 1, 1, v46);
        v46[2] = v59 + 1;
        v60 = &v46[11 * v59];
        v61 = v115;
        *((_OWORD *)v60 + 2) = v114;
        *((_OWORD *)v60 + 3) = v61;
        v62 = v116;
        v63 = v117;
        v64 = v118;
        v60[14] = v119;
        *((_OWORD *)v60 + 5) = v63;
        *((_OWORD *)v60 + 6) = v64;
        *((_OWORD *)v60 + 4) = v62;
        sub_1B1A203C4((uint64_t)&v120);
LABEL_42:
        swift_release();
        if (v43 == ++v44)
          goto LABEL_66;
      }
      v119 = 0;
      v117 = 0u;
      v118 = 0u;
      v115 = 0u;
      v116 = 0u;
      v114 = 0u;
LABEL_61:
      sub_1B1A057EC((uint64_t)&v114, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
      sub_1B19FA278(v52 + 56, (uint64_t)v127);
      sub_1B19F8C58(v127, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
      sub_1B1E02E1C(v127, 1, (uint64_t)&v120);
      sub_1B19F8C58(v127, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v46 = sub_1B1C67FF4(0, v46[2] + 1, 1, v46);
      v66 = v46[2];
      v65 = v46[3];
      if (v66 >= v65 >> 1)
        v46 = sub_1B1C67FF4(v65 > 1, v66 + 1, 1, v46);
      v46[2] = v66 + 1;
      v47 = &v46[11 * v66];
      v48 = v121;
      *((_OWORD *)v47 + 2) = v120;
      *((_OWORD *)v47 + 3) = v48;
      v49 = v122;
      v50 = v123;
      v51 = v124;
      v47[14] = v125;
      *((_OWORD *)v47 + 5) = v50;
      *((_OWORD *)v47 + 6) = v51;
      *((_OWORD *)v47 + 4) = v49;
      goto LABEL_42;
    }
  }
LABEL_66:
  swift_bridgeObjectRelease_n();
  if ((a3 & 1) != 0)
    sub_1B1DDD2A4((uint64_t)v25, v100);
  v67 = swift_bridgeObjectRetain();
  v68 = sub_1B1C51740(v67);
  swift_bridgeObjectRelease();
  sub_1B1DDD798(v25, v100, v105, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v69 = sub_1B1FB74F8();
  if (v69)
  {
    v70 = v69[2];
    if (v70)
    {
      v71 = (uint64_t)(v69 + 6);
      do
      {
        sub_1B1DFACDC(*(_QWORD *)(v71 - 16), *(_QWORD *)(v71 - 8), v71, v27, v25, a2, 1);
        v71 += 104;
        --v70;
      }
      while (v70);
    }
    swift_bridgeObjectRelease();
  }
  v72 = v126[2];
  if (v72)
  {
    v103 = v126[4];
    v106 = v126[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v103 = 0;
    v106 = 0;
  }
  sub_1B1C929C8(0, v72 != 0);
  v73 = v126[2];
  if (v73)
  {
    v75 = v126[4];
    v74 = v126[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v75 = 0;
    v74 = 0;
  }
  sub_1B1C929C8(0, v73 != 0);
  if (*(_QWORD *)(a2[10] + 16))
  {
    v76 = a2[12];
    if ((v76 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v77 = MEMORY[0x1B5E21018](0, v76);
      swift_bridgeObjectRelease();
    }
    else
    {
      v77 = *(_QWORD *)(v76 + 32);
      swift_retain();
    }
  }
  else
  {
    v77 = 0;
  }
  v109 = *v110;
  v78 = *(unsigned __int8 *)(*v110 + 24);
  sub_1B19FA278(v77 + 56, (uint64_t)&v120);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B19F8C58(&v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  sub_1B1FC0A9C();
  swift_release();
  swift_bridgeObjectRelease();
  if (v78 == 2)
  {
    *(_QWORD *)&v114 = 544366966;
    *((_QWORD *)&v114 + 1) = 0xE400000000000000;
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B1C39C20((uint64_t)&v120, 2u);
    sub_1B2228890();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v114 = sub_1B1C39C20((uint64_t)&v120, v78);
    *((_QWORD *)&v114 + 1) = v79;
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
  }
  swift_bridgeObjectRelease();
  sub_1B19F8C58(&v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  *(_QWORD *)&v114 = 8201;
  *((_QWORD *)&v114 + 1) = 0xE200000000000000;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1FB71E0(v75, v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B1FC0A9C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v80 = v114;
  v81 = *(_QWORD **)(v109 + 128);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v109 + 128) = v81;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v81 = sub_1B1C63044(0, v81[2] + 1, 1, v81);
    *(_QWORD *)(v109 + 128) = v81;
  }
  v84 = v81[2];
  v83 = v81[3];
  if (v84 >= v83 >> 1)
  {
    v81 = sub_1B1C63044(v83 > 1, v84 + 1, 1, v81);
    *(_QWORD *)(v109 + 128) = v81;
  }
  v81[2] = v84 + 1;
  *(_OWORD *)&v81[2 * v84 + 4] = v80;
  swift_bridgeObjectRelease();
  v85 = v126;
  v101 = v126[2];
  if (v101)
  {
    swift_bridgeObjectRetain();
    v86 = 0;
    v87 = v85 + 5;
    do
    {
      v88 = *(v87 - 1);
      v89 = *v87;
      ++v86;
      *(_QWORD *)&v114 = 0;
      *((_QWORD *)&v114 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v114 = 8201;
      *((_QWORD *)&v114 + 1) = 0xE200000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1FC0A9C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B1FB71E0(v103, v106);
      swift_bridgeObjectRetain();
      sub_1B1FC0A9C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2229A0C();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B1FB71E0(v88, v89);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B1FC0A9C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1FC0A9C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v90 = v114;
      v91 = *(_QWORD **)(v109 + 128);
      swift_bridgeObjectRetain();
      v92 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v109 + 128) = v91;
      if ((v92 & 1) == 0)
      {
        v91 = sub_1B1C63044(0, v91[2] + 1, 1, v91);
        *(_QWORD *)(v109 + 128) = v91;
      }
      v94 = v91[2];
      v93 = v91[3];
      if (v94 >= v93 >> 1)
      {
        v91 = sub_1B1C63044(v93 > 1, v94 + 1, 1, v91);
        *(_QWORD *)(v109 + 128) = v91;
      }
      v87 += 2;
      v91[2] = v94 + 1;
      *(_OWORD *)&v91[2 * v94 + 4] = v90;
      swift_bridgeObjectRelease();
    }
    while (v101 != v86);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v95 = sub_1B1FB750C();
  if (v95)
  {
    v96 = v95[2];
    if (v96)
    {
      v97 = (uint64_t)(v95 + 6);
      do
      {
        sub_1B1DFA10C(*(_QWORD *)(v97 - 16), *(_QWORD *)(v97 - 8), v97, v99, v110, a2);
        v97 += 104;
        --v96;
      }
      while (v96);
    }
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

_QWORD *sub_1B1DE06CC(uint64_t *a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t Strong;
  char v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t inited;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _OWORD v108[5];
  uint64_t v109;
  _OWORD v110[5];
  uint64_t v111;
  _QWORD v112[5];
  _BYTE v113[8];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v4 = v3;
  sub_1B1BBD188();
  if (v8)
  {
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    v10 = a2[4];
    *(_QWORD *)&v110[0] = a2[3];
    *((_QWORD *)&v110[0] + 1) = v10;
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = *((_QWORD *)&v110[0] + 1);
    *(_QWORD *)(v9 + 32) = *(_QWORD *)&v110[0];
    *(_QWORD *)(v9 + 40) = v11;
    v107 = v9;
  }
  else
  {
    v107 = MEMORY[0x1E0DEE9D8];
  }
  v12 = sub_1B1BBCF78();
  v13 = sub_1B1DDF3D8((uint64_t)a2);
  v104 = v14;
  v98 = v13;
  if (v14
    && (v15 = v13, v16 = v14,
                   swift_bridgeObjectRetain(),
                   v17 = sub_1B1FB71E0(v15, v16),
                   swift_bridgeObjectRelease(),
                   v17))
  {
    swift_bridgeObjectRelease();
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1B226D240;
    v19 = *(_QWORD *)(v17 + 48);
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v18 + 40) = v19;
    v107 = v18;
    swift_bridgeObjectRetain();
    sub_1B201D450((uint64_t)v108);
    if (*((_QWORD *)&v108[0] + 1))
    {
      swift_bridgeObjectRelease();
      v110[3] = v108[3];
      v110[4] = v108[4];
      v111 = v109;
      v110[0] = v108[0];
      v110[1] = v108[1];
      v110[2] = v108[2];
      sub_1B1BBD808();
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1B226D240;
      v102 = v20;
      sub_1B19F8F0C((uint64_t)v110, v20 + 32);
      swift_release();
      sub_1B1A203C4((uint64_t)v110);
    }
    else
    {
      v102 = v12;
      swift_release();
      sub_1B1A057EC((uint64_t)v108, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
    }
  }
  else
  {
    v102 = v12;
  }
  v21 = sub_1B1B7DF34(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v110[0] = v21;
  v101 = a3;
  if (v4[2])
  {
    swift_retain();
    v22 = swift_bridgeObjectRetain();
    v23 = sub_1B1E009B8(v22, (uint64_t)v4, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1DFD054);
    swift_bridgeObjectRelease();
    v24 = swift_release();
    MEMORY[0x1E0C80A78](v24, v25);
    sub_1B1DF8F7C(v23, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1B1E025F8);
    swift_release();
    v26 = *(_QWORD *)&v110[0];
  }
  else
  {
    v26 = (uint64_t)v21;
  }
  v27 = *a1;
  v28 = swift_bridgeObjectRetain();
  v29 = sub_1B1DEE37C(v28, v26);
  if (!*(_QWORD *)(v29 + 16))
  {
    swift_bridgeObjectRelease();
    v99 = 0;
    v43 = a3;
    goto LABEL_31;
  }
  v30 = *(_QWORD *)aSelectedcase;
  v31 = *(_QWORD *)&aSelectedcase[8];
  swift_bridgeObjectRetain();
  v32 = sub_1B1FB71E0(v30, v31);
  swift_bridgeObjectRelease();
  if (!v32)
  {
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_25:
    v99 = 0;
    v44 = 0;
    v45 = (_OWORD *)&unk_1B226D000;
    goto LABEL_26;
  }
  swift_retain();
  v33 = swift_bridgeObjectRetain();
  v34 = sub_1B1E009B8(v33, v32, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1DF7044);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B1DCC548(v34, v112);
  swift_release();
  sub_1B1A025EC((uint64_t)v112, (uint64_t)v113, (uint64_t (*)(_QWORD))sub_1B1E01C50);
  if (!v114)
  {
    swift_release();
    goto LABEL_24;
  }
  v35 = v4[33];
  if (!*(_QWORD *)(v35 + 16))
  {
    v43 = v101;
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v99 = 0;
LABEL_31:
    v45 = &unk_1B226D000;
    v103 = 0;
    if ((v43 & 1) == 0)
      goto LABEL_33;
    goto LABEL_32;
  }
  v36 = v115;
  v37 = v116;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = sub_1B1DC3B00(v36, v37);
  if ((v39 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = v101;
    goto LABEL_30;
  }
  v40 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v38);
  swift_retain();
  v41 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_70;
  if (*(_QWORD *)(Strong + 24) == v4[3] && *(_QWORD *)(Strong + 32) == v4[4])
  {
    swift_release();
    goto LABEL_63;
  }
  v79 = sub_1B2229D24();
  swift_release();
  if ((v79 & 1) == 0)
  {
LABEL_70:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
LABEL_74:
    swift_bridgeObjectRelease();
LABEL_75:
    swift_release();
    goto LABEL_25;
  }
LABEL_63:
  if (!*(_QWORD *)(v29 + 16))
  {
LABEL_72:
    swift_bridgeObjectRelease();
    swift_release();
LABEL_73:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  v80 = *(_QWORD *)(v41 + 24);
  v81 = *(_QWORD *)(v41 + 32);
  swift_bridgeObjectRetain();
  v82 = sub_1B1DC3B00(v80, v81);
  if ((v83 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_72;
  }
  v84 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 16 * v82);
  v85 = *v84;
  v86 = v84[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v87 = sub_1B1FB71E0(v85, v86);
  swift_bridgeObjectRelease();
  if (!v87)
  {
    swift_release();
    goto LABEL_73;
  }
  if (!*(_QWORD *)(a2[10] + 16))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  v88 = a2[12];
  if ((v88 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v89 = MEMORY[0x1B5E21018](0, v88);
    swift_bridgeObjectRelease();
  }
  else
  {
    v89 = *(_QWORD *)(v88 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v90 = swift_allocObject();
  *(_OWORD *)(v90 + 16) = xmmword_1B226D240;
  v91 = *(_QWORD *)(v87 + 48);
  *(_QWORD *)(v90 + 32) = *(_QWORD *)(v87 + 40);
  *(_QWORD *)(v90 + 40) = v91;
  v107 = v90;
  sub_1B19FA278((uint64_t)(a2 + 18), (uint64_t)v110);
  v100 = *(_QWORD *)(v89 + 40);
  v92 = *(_QWORD *)(v89 + 48);
  v93 = *(_QWORD *)(v87 + 48);
  v96 = v92;
  v97 = *(_QWORD *)(v87 + 40);
  v94 = *(unsigned __int8 *)(v27 + 24);
  sub_1B19F8C58(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  sub_1B19F8C58(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v99 = sub_1B1DFBC64(v110, v100, v96, (uint64_t)v110, v97, v93, v94, 1, v27);
  v44 = v95;
  swift_bridgeObjectRelease();
  v45 = (_OWORD *)&unk_1B226D000;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B19F8C58(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  swift_bridgeObjectRelease();
  sub_1B19F8C58(v110, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  swift_bridgeObjectRelease();
LABEL_26:
  v103 = v44;
  if ((v101 & 1) != 0)
LABEL_32:
    sub_1B1DDD2A4((uint64_t)a1, v107);
LABEL_33:
  sub_1B1A02758(0, (unint64_t *)&unk_1EEF5CBD0, (uint64_t)&_s12MetadataTypeON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v45[36];
  v47 = a2[18];
  v48 = a2[19];
  v49 = a2[20];
  v50 = a2[21];
  v51 = a2[22];
  *(_QWORD *)(inited + 32) = v47;
  *(_QWORD *)(inited + 40) = v48;
  *(_QWORD *)(inited + 48) = v49;
  *(_QWORD *)(inited + 56) = v50;
  *(_QWORD *)(inited + 64) = v51;
  sub_1B19FA2B4(v47, v48);
  sub_1B1DDD798(a1, v107, inited, v102);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  v52 = sub_1B1FB74F8();
  if (v52)
  {
    v53 = v52[2];
    if (v53)
    {
      v54 = (uint64_t)(v52 + 6);
      do
      {
        sub_1B1DFACDC(*(_QWORD *)(v54 - 16), *(_QWORD *)(v54 - 8), v54, (uint64_t)v4, a1, a2, 1);
        v54 += 104;
        --v53;
      }
      while (v53);
    }
    swift_bridgeObjectRelease();
  }
  if (v103)
  {
    swift_bridgeObjectRelease();
    v55 = *a1;
    v56 = *(_QWORD **)(*a1 + 128);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v55 + 128) = v56;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v56 = sub_1B1C63044(0, v56[2] + 1, 1, v56);
      *(_QWORD *)(v55 + 128) = v56;
    }
    v59 = v56[2];
    v58 = v56[3];
    if (v59 >= v58 >> 1)
    {
      v56 = sub_1B1C63044(v58 > 1, v59 + 1, 1, v56);
      *(_QWORD *)(v55 + 128) = v56;
    }
    v56[2] = v59 + 1;
    v60 = &v56[2 * v59];
    v60[4] = v99;
    v60[5] = v103;
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  if (v104)
  {
    v64 = sub_1B1FB71E0(v98, v104);
    swift_bridgeObjectRelease();
    if (v64)
    {
      if (*(_QWORD *)(a2[10] + 16))
      {
        v65 = a2[12];
        if ((v65 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v66 = MEMORY[0x1B5E21018](0, v65);
          swift_bridgeObjectRelease();
        }
        else
        {
          v66 = *(_QWORD *)(v65 + 32);
          swift_retain();
        }
        v67 = *a1;
        sub_1B19FA278((uint64_t)(a2 + 18), (uint64_t)v108);
        v68 = *(_QWORD *)(v66 + 48);
        v105 = *(_QWORD *)(v66 + 40);
        v69 = *(_QWORD *)(v64 + 40);
        v70 = *(_QWORD *)(v64 + 48);
        v71 = *(unsigned __int8 *)(v67 + 24);
        sub_1B19F8C58(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v106 = sub_1B1DFBC64(v108, v105, v68, (uint64_t)v108, v69, v70, v71, 1, v67);
        v73 = v72;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B19F8C58(v108, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
        swift_bridgeObjectRelease();
        v74 = *(_QWORD **)(v67 + 128);
        swift_bridgeObjectRetain();
        v75 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v67 + 128) = v74;
        if ((v75 & 1) == 0)
        {
          v74 = sub_1B1C63044(0, v74[2] + 1, 1, v74);
          *(_QWORD *)(v67 + 128) = v74;
        }
        v77 = v74[2];
        v76 = v74[3];
        if (v77 >= v76 >> 1)
        {
          v74 = sub_1B1C63044(v76 > 1, v77 + 1, 1, v74);
          *(_QWORD *)(v67 + 128) = v74;
        }
        v74[2] = v77 + 1;
        v78 = &v74[2 * v77];
        v78[4] = v106;
        v78[5] = v73;
        swift_release();
        swift_release();
        goto LABEL_44;
      }
      swift_release();
    }
  }
LABEL_45:
  result = sub_1B1FB750C();
  if (result)
  {
    v62 = result[2];
    if (v62)
    {
      v63 = (uint64_t)(result + 6);
      do
      {
        sub_1B1DFA10C(*(_QWORD *)(v63 - 16), *(_QWORD *)(v63 - 8), v63, (uint64_t)v4, a1, a2);
        v63 += 104;
        --v62;
      }
      while (v62);
    }
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE1288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *Strong;
  _BOOL8 v11;
  _QWORD v13[5];
  _BYTE v14[8];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((*(_BYTE *)(*(_QWORD *)a1 + 26) & 1) != 0)
    return 1;
  v2 = *(_QWORD *)aSelectedcase;
  v3 = *(_QWORD *)&aSelectedcase[8];
  swift_bridgeObjectRetain();
  v4 = sub_1B1FB71E0(v2, v3);
  swift_bridgeObjectRelease();
  if (!v4)
    return 1;
  swift_retain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1B1E009B8(v5, v4, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1DF7044);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B1DCC548(v6, v13);
  swift_release();
  sub_1B1A025EC((uint64_t)v13, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B1E01C50);
  if (!v15)
  {
    swift_release();
    return 1;
  }
  v8 = v16;
  v7 = v17;
  swift_bridgeObjectRelease();
  swift_release();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 264) + 16))
  {
    swift_release();
LABEL_11:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRetain();
  sub_1B1DC3B00(v8, v7);
  if ((v9 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Strong = (_QWORD *)swift_weakLoadStrong();
  swift_release();
  swift_release();
  if (!Strong)
    return 1;
  v11 = *Strong != (_QWORD)_TtCO3VFX21GraphV1CodeGeneration12ContextEntry;
  swift_release();
  return v11;
}

uint64_t sub_1B1DE143C(uint64_t *a1, _QWORD *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = *a1;
  v9 = *(_QWORD **)(*a1 + 176);
  v10 = a2[3];
  v11 = a2[4];
  v12 = v9[2];
  if (!v12)
    goto LABEL_15;
  result = v9[4];
  if (result == v10 && v9[5] == v11)
    return result;
  result = sub_1B2229D24();
  if ((result & 1) != 0)
    return result;
  v15 = v12 - 1;
  if (!v15)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v8 + 176) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1B1C63044(0, v9[2] + 1, 1, v9);
      *(_QWORD *)(v8 + 176) = v9;
    }
    v20 = v9[2];
    v19 = v9[3];
    if (v20 >= v19 >> 1)
    {
      v9 = sub_1B1C63044(v19 > 1, v20 + 1, 1, v9);
      *(_QWORD *)(v8 + 176) = v9;
    }
    v9[2] = v20 + 1;
    v21 = &v9[2 * v20];
    v21[4] = v10;
    v21[5] = v11;
    if ((__objc2_class *)*a2 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
    {
      v31 = swift_retain();
      sub_1B1DEAA58(v31);
      swift_release();
      if ((a3 & 1) == 0)
        goto LABEL_22;
    }
    else if ((a3 & 1) == 0)
    {
LABEL_22:
      v23 = sub_1B1DFB4EC(a2);
      sub_1B1DDD798(a1, v23, v24, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = sub_1B1FB74F8();
      if (v26)
      {
        v27 = v26[2];
        if (v27)
        {
          v28 = (uint64_t)(v26 + 6);
          do
          {
            sub_1B1DFACDC(*(_QWORD *)(v28 - 16), *(_QWORD *)(v28 - 8), v28, v4, a1, a2, 1);
            v28 += 104;
            --v27;
          }
          while (v27);
        }
        swift_bridgeObjectRelease();
      }
      sub_1B1BB7E08(a1);
      result = (uint64_t)sub_1B1FB750C();
      if (result)
      {
        v29 = *(_QWORD *)(result + 16);
        if (v29)
        {
          v30 = result + 48;
          do
          {
            sub_1B1DFA10C(*(_QWORD *)(v30 - 16), *(_QWORD *)(v30 - 8), v30, v4, a1, a2);
            v30 += 104;
            --v29;
          }
          while (v29);
        }
        return swift_bridgeObjectRelease();
      }
      return result;
    }
    v22 = (*(uint64_t (**)(void))(*a2 + 1424))();
    sub_1B1DDD2A4((uint64_t)a1, v22);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v16 = v9 + 7;
  while (1)
  {
    result = *(v16 - 1);
    if (result == v10 && *v16 == v11)
      return result;
    result = sub_1B2229D24();
    if ((result & 1) != 0)
      return result;
    v16 += 2;
    if (!--v15)
      goto LABEL_15;
  }
}

uint64_t sub_1B1DE16CC(uint64_t *a1, _QWORD *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t i;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(uint64_t *, uint64_t, uint64_t, _QWORD *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  void (*v62)(uint64_t *, uint64_t, uint64_t, _QWORD *, _QWORD);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v68[2];
  _QWORD *v69;
  uint64_t v70[10];
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[3];

  v4 = v3;
  v7 = *a1;
  v8 = *(_QWORD **)(*a1 + 176);
  v9 = a2[3];
  v10 = a2[4];
  v11 = v8[2];
  if (v11)
  {
    result = v8[4];
    if (result == v9 && v8[5] == v10)
      return result;
    result = sub_1B2229D24();
    if ((result & 1) != 0)
      return result;
    v14 = v11 - 1;
    if (v14)
    {
      v15 = v8 + 7;
      do
      {
        result = *(v15 - 1);
        if (result == v9 && *v15 == v10)
          return result;
        result = sub_1B2229D24();
        if ((result & 1) != 0)
          return result;
        v15 += 2;
        --v14;
      }
      while (v14);
    }
  }
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v7 + 176) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1B1C63044(0, v8[2] + 1, 1, v8);
    *(_QWORD *)(v7 + 176) = v8;
  }
  v19 = v8[2];
  v18 = v8[3];
  if (v19 >= v18 >> 1)
  {
    v8 = sub_1B1C63044(v18 > 1, v19 + 1, 1, v8);
    *(_QWORD *)(v7 + 176) = v8;
  }
  v8[2] = v19 + 1;
  v20 = &v8[2 * v19];
  v20[4] = v9;
  v20[5] = v10;
  if (a2 && (__objc2_class *)*a2 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
  {
    v21 = swift_retain();
    sub_1B1DEAA58(v21);
    swift_release();
  }
  v22 = a1;
  if ((a3 & 1) != 0)
  {
    swift_retain();
    v23 = swift_bridgeObjectRetain();
    v24 = sub_1B1DF6580(v23, (uint64_t)a2);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B1DDD2A4((uint64_t)a1, v24);
    swift_bridgeObjectRelease();
  }
  swift_retain();
  v25 = swift_bridgeObjectRetain();
  v26 = sub_1B1DF6580(v25, (uint64_t)a2);
  swift_bridgeObjectRelease();
  swift_release();
  v27 = a2[6];
  swift_bridgeObjectRetain();
  v28 = sub_1B1FB3E20();
  sub_1B1DDD798(a1, v26, v27, (uint64_t)v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = sub_1B1FB74F8();
  if (v29)
  {
    v30 = v29[2];
    if (v30)
    {
      v31 = (uint64_t)(v29 + 6);
      do
      {
        sub_1B1DFACDC(*(_QWORD *)(v31 - 16), *(_QWORD *)(v31 - 8), v31, v4, a1, a2, 1);
        v31 += 104;
        --v30;
      }
      while (v30);
    }
    swift_bridgeObjectRelease();
  }
  v32 = MEMORY[0x1E0DEE9D8];
  v33 = sub_1B1B7DF34(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v71 = v33;
  if (a2[2])
  {
    swift_retain();
    v34 = swift_bridgeObjectRetain();
    v35 = sub_1B1E009B8(v34, (uint64_t)a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1DFD054);
    swift_bridgeObjectRelease();
    v36 = swift_release();
    MEMORY[0x1E0C80A78](v36, v37);
    sub_1B1DF8F7C(v35, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1B1E01CA8);
    swift_release();
    v33 = (_QWORD *)v71;
  }
  v69 = v33;
  swift_retain();
  v38 = swift_bridgeObjectRetain();
  v39 = sub_1B1E009B8(v38, (uint64_t)a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1DFD2C0);
  swift_bridgeObjectRelease();
  v40 = swift_release();
  MEMORY[0x1E0C80A78](v40, v41);
  sub_1B1DF60EC(v39, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E01CB0);
  swift_release();
  v42 = a2[7];
  *(_QWORD *)&v71 = v32;
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    v43 = sub_1B22296AC();
    if (v43)
      goto LABEL_33;
LABEL_47:
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_55;
LABEL_48:
    if ((v48 & 0x4000000000000000) != 0)
      goto LABEL_55;
    v49 = *(_QWORD *)(v48 + 16);
    swift_retain();
    if (v49)
      goto LABEL_50;
    goto LABEL_56;
  }
  v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v43)
    goto LABEL_47;
LABEL_33:
  for (i = 0; i != v43; ++i)
  {
    if ((v42 & 0xC000000000000001) != 0)
    {
      v45 = MEMORY[0x1B5E21018](i, v42);
    }
    else
    {
      v45 = *(_QWORD *)(v42 + 8 * i + 32);
      swift_retain();
    }
    sub_1B19FA278(v45 + 56, (uint64_t)v74);
    sub_1B19F8C58(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    if (sub_1B1E03DBC() == 0x6156686374697753 && v46 == 0xEB0000000065756CLL)
    {
      swift_bridgeObjectRelease();
      sub_1B19F8C58(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
LABEL_35:
      sub_1B2229520();
      sub_1B2229568();
      sub_1B2229574();
      sub_1B2229538();
      continue;
    }
    v47 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    sub_1B19F8C58(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    if ((v47 & 1) != 0)
      goto LABEL_35;
    swift_release();
  }
  swift_bridgeObjectRelease();
  v48 = v71;
  v22 = a1;
  if ((v71 & 0x8000000000000000) == 0)
    goto LABEL_48;
LABEL_55:
  swift_retain();
  v49 = sub_1B22296AC();
  if (!v49)
    goto LABEL_56;
LABEL_50:
  v50 = 0;
  do
  {
    if ((v48 & 0xC000000000000001) != 0)
    {
      v51 = MEMORY[0x1B5E21018](v50, v48);
    }
    else
    {
      v51 = *(_QWORD *)(v48 + 8 * v50 + 32);
      swift_retain();
    }
    ++v50;
    *(_QWORD *)&v71 = v51;
    sub_1B1DEE5C0((uint64_t)&v71, v4, &v69);
    swift_release();
  }
  while (v49 != v50);
LABEL_56:
  swift_release_n();
  sub_1B1E02C04(0x6C706D6554657375, 0xEB00000000657461, &v71);
  if (!v72)
  {
    sub_1B1A057EC((uint64_t)&v71, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
LABEL_62:
    swift_bridgeObjectRetain();
    v58 = sub_1B1FC0A9C();
    v60 = v59;
    swift_bridgeObjectRelease();
    v61 = v69;
    v62 = *(void (**)(uint64_t *, uint64_t, uint64_t, _QWORD *, _QWORD))(*a2 + 4232);
    swift_bridgeObjectRetain();
    v62(v22, v58, v60, v61, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_63;
  }
  if ((swift_dynamicCast() & 1) == 0 || (v70[0] & 1) == 0)
    goto LABEL_62;
  sub_1B1DD9DB4(1, v70);
  sub_1B1A18378((uint64_t)v70, (uint64_t)&v71, &qword_1EEF5EC48, (uint64_t)&_s8TemplateVN);
  if (*((_QWORD *)&v71 + 1))
  {
    v52 = v73;
    swift_bridgeObjectRetain();
    v53 = sub_1B1FC0A9C();
    v55 = v54;
    swift_bridgeObjectRelease();
    v56 = v69;
    v57 = *(void (**)(uint64_t *, uint64_t, uint64_t, _QWORD *, uint64_t))(*a2 + 4232);
    swift_bridgeObjectRetain();
    v57(v22, v53, v55, v56, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B1E01B88(v70);
  }
  else
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v68[1] = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1DCF514();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    v66 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v68[0] = 0;
    swift_retain();
    sub_1B1F1AD70(v66, v68, 0, 0xE000000000000000);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_63:
  v63 = sub_1B1FB750C();
  if (v63)
  {
    v64 = v63[2];
    if (v64)
    {
      v65 = (uint64_t)(v63 + 6);
      do
      {
        sub_1B1DFA10C(*(_QWORD *)(v65 - 16), *(_QWORD *)(v65 - 8), v65, v4, v22, a2);
        v65 += 104;
        --v64;
      }
      while (v64);
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE2048(uint64_t *a1, __objc2_class **a2)
{
  uint64_t v2;
  uint64_t v3;
  __objc2_class **v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  __objc2_class *v8;
  __objc2_class *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v13;
  __objc2_class **v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __objc2_class *v47;
  char *cache;
  __objc2_class *v49;
  __objc2_class *isa;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v70;
  uint64_t v71;
  __objc2_class **v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD v84[2];
  _OWORD v85[2];
  _QWORD *v86;
  _QWORD *v87[6];

  v3 = v2;
  v4 = a2;
  v5 = a1;
  v6 = *a1;
  v7 = *(_QWORD **)(*a1 + 176);
  v8 = a2[3];
  v9 = a2[4];
  v10 = v7[2];
  if (!v10)
    goto LABEL_15;
  result = v7[4];
  if ((__objc2_class *)result == v8 && v7[5] == (_QWORD)v9)
    return result;
  result = sub_1B2229D24();
  if ((result & 1) != 0)
    return result;
  v13 = v10 - 1;
  if (!v13)
  {
LABEL_15:
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v6 + 176) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1B1C63044(0, v7[2] + 1, 1, v7);
      *(_QWORD *)(v6 + 176) = v7;
    }
    v18 = v7[2];
    v17 = v7[3];
    if (v18 >= v17 >> 1)
    {
      v7 = sub_1B1C63044(v17 > 1, v18 + 1, 1, v7);
      *(_QWORD *)(v6 + 176) = v7;
    }
    v7[2] = v18 + 1;
    v19 = &v7[2 * v18];
    v19[4] = v8;
    v19[5] = v9;
    if (*v4 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
    {
      v20 = swift_retain();
      sub_1B1DEAA58(v20);
      swift_release();
    }
    swift_release();
    v21 = sub_1B1FB750C();
    if (v21)
    {
      v22 = v21[2];
      if (v22)
      {
        v23 = (uint64_t)(v21 + 6);
        do
        {
          sub_1B1DFA10C(*(_QWORD *)(v23 - 16), *(_QWORD *)(v23 - 8), v23, v3, v5, v4);
          v23 += 104;
          --v22;
        }
        while (v22);
      }
      swift_bridgeObjectRelease();
    }
    v24 = MEMORY[0x1E0DEE9D8];
    v86 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v4[2])
    {
      v74 = v5;
      v25 = swift_bridgeObjectRetain();
      v26 = 0;
      sub_1B1DF54C8(v25, 0xEB0000000074754FLL);
      swift_bridgeObjectRelease();
      v27 = swift_bridgeObjectRetain();
      v28 = sub_1B1DC8A9C(v27);
      swift_release();
      v87[0] = v28;
      sub_1B1DD676C(v87);
      swift_release();
      v29 = v87[0][2];
      if (v29)
      {
        v71 = v3;
        v72 = v4;
        v30 = swift_retain();
        v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v32 = v30 + 104;
        v76 = MEMORY[0x1E0DEE9B8] + 8;
        do
        {
          v33 = *(_QWORD *)(v32 - 72);
          v34 = *(_QWORD *)(v32 - 64);
          sub_1B1B9DC78(v32, (uint64_t)v84, (uint64_t)&qword_1ED4BB150, v76, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
          sub_1B1A0DDAC(v84, v85);
          swift_dynamicCast();
          sub_1B1E0E85C(v82, v83, (uint64_t *)v87);
          v35 = v87[0];
          v36 = v87[1];
          v37 = v87[3];
          v78 = v87[4];
          v80 = v87[2];
          *(_QWORD *)&v85[0] = v33;
          *((_QWORD *)&v85[0] + 1) = v34;
          *(_QWORD *)&v84[0] = 0x6E657474616C662ELL;
          *((_QWORD *)&v84[0] + 1) = 0xEB0000000074754FLL;
          v82 = 0;
          v83 = 0xE000000000000000;
          sub_1B1A06460();
          v38 = sub_1B222922C();
          v40 = v39;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v31 = sub_1B1C67F04(0, v31[2] + 1, 1, v31);
          v42 = v31[2];
          v41 = v31[3];
          if (v42 >= v41 >> 1)
            v31 = sub_1B1C67F04(v41 > 1, v42 + 1, 1, v31);
          v31[2] = v42 + 1;
          v43 = &v31[8 * v42];
          v43[4] = v38;
          v43[5] = v40;
          v43[6] = v35;
          v43[7] = v36;
          v43[8] = v80;
          v43[9] = v37;
          v43[10] = v78;
          *((_BYTE *)v43 + 88) = 0;
          v32 += 104;
          v86 = v31;
          --v29;
        }
        while (v29);
        swift_release_n();
        v4 = v72;
        v26 = 0;
        v5 = v74;
        v3 = v71;
        v24 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      v26 = 0;
    }
    v44 = *v5;
    if (*(_BYTE *)(*v5 + 161) == 1)
    {
      v45 = (uint64_t)sub_1B1B7E230(MEMORY[0x1E0DEE9D8]);
    }
    else
    {
      swift_retain();
      swift_retain();
      v46 = swift_bridgeObjectRetain();
      v45 = sub_1B1E00418(v46, v3, (uint64_t)v4, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B1DFA9AC);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    *(_QWORD *)&v84[0] = v24;
    v47 = v4[10];
    cache = (char *)v47->cache;
    if (cache)
    {
      swift_bridgeObjectRetain();
      v49 = v47 + 1;
      do
      {
        isa = v49->isa;
        *(_QWORD *)&v85[0] = v49[-1].info;
        *((_QWORD *)&v85[0] + 1) = isa;
        swift_bridgeObjectRetain();
        sub_1B1DEE870((uint64_t *)v85, &v86, (uint64_t)v4, (uint64_t)v5, v45, v84);
        swift_bridgeObjectRelease();
        v49 = (__objc2_class *)((char *)v49 + 16);
        --cache;
      }
      while (cache);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if ((*(_BYTE *)(v44 + 25) & 1) != 0)
      sub_1B1DD67D4((uint64_t *)v84);
    v51 = *(_QWORD *)&v84[0];
    if (*(_QWORD *)&v84[0] >> 62)
    {
      swift_bridgeObjectRetain_n();
      v52 = sub_1B22296AC();
      if (v52)
        goto LABEL_48;
    }
    else
    {
      v52 = *(_QWORD *)((*(_QWORD *)&v84[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v52)
      {
LABEL_48:
        v53 = 0;
        v54 = (unint64_t *)(v44 + 112);
        v81 = v51 & 0xC000000000000001;
        v75 = v51;
        v77 = v51 + 32;
        do
        {
          if (v81)
          {
            v55 = MEMORY[0x1B5E21018](v53, v51);
          }
          else
          {
            v55 = *(_QWORD *)(v77 + 8 * v53);
            swift_retain();
          }
          v56 = *v54;
          if (*v54 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            v57 = sub_1B22296AC();
            swift_bridgeObjectRelease();
            if (!v57)
              goto LABEL_68;
          }
          else
          {
            v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            if (!v57)
              goto LABEL_68;
          }
          v79 = v56 & 0xC000000000000001;
          if ((v56 & 0xC000000000000001) != 0)
          {
            v58 = MEMORY[0x1B5E21018](0, v56);
          }
          else
          {
            v58 = *(_QWORD *)(v56 + 32);
            swift_retain();
          }
          if (*(_QWORD *)(v58 + 40) != *(_QWORD *)(v55 + 40) || *(_QWORD *)(v58 + 48) != *(_QWORD *)(v55 + 48))
          {
            v60 = sub_1B2229D24();
            swift_release();
            if ((v60 & 1) != 0)
              goto LABEL_64;
            if (v57 != 1)
            {
              if (v79)
              {
                v62 = MEMORY[0x1B5E21018](1, v56);
              }
              else
              {
                v62 = *(_QWORD *)(v56 + 40);
                swift_retain();
              }
              if (*(_QWORD *)(v62 + 40) == *(_QWORD *)(v55 + 40) && *(_QWORD *)(v62 + 48) == *(_QWORD *)(v55 + 48))
                goto LABEL_76;
              v63 = sub_1B2229D24();
              swift_release();
              if ((v63 & 1) != 0)
                goto LABEL_64;
              if (v57 != 2)
              {
                if (v79)
                {
                  v64 = MEMORY[0x1B5E21018](2, v56);
                }
                else
                {
                  v64 = *(_QWORD *)(v56 + 48);
                  swift_retain();
                }
                if (*(_QWORD *)(v64 + 40) == *(_QWORD *)(v55 + 40) && *(_QWORD *)(v64 + 48) == *(_QWORD *)(v55 + 48))
                {
LABEL_76:
                  swift_release();
                  swift_release();
                }
                else
                {
                  v65 = sub_1B2229D24();
                  swift_release();
                  if ((v65 & 1) == 0)
                  {
                    v73 = v26;
                    v66 = 0;
                    v67 = v57 - 3;
                    while (1)
                    {
                      if (v67 == v66)
                      {
                        v26 = v73;
                        v51 = v75;
                        goto LABEL_68;
                      }
                      if (v79)
                      {
                        v68 = MEMORY[0x1B5E21018](v66 + 3, v56);
                      }
                      else
                      {
                        v68 = *(_QWORD *)(v56 + 8 * v66 + 56);
                        swift_retain();
                      }
                      if (*(_QWORD *)(v68 + 40) == *(_QWORD *)(v55 + 40)
                        && *(_QWORD *)(v68 + 48) == *(_QWORD *)(v55 + 48))
                      {
                        break;
                      }
                      v70 = sub_1B2229D24();
                      swift_release();
                      ++v66;
                      if ((v70 & 1) != 0)
                      {
                        swift_release();
                        goto LABEL_98;
                      }
                    }
                    swift_release();
                    swift_release();
LABEL_98:
                    swift_release();
                    v26 = v73;
                    v51 = v75;
                    goto LABEL_51;
                  }
LABEL_64:
                  swift_release();
                }
                swift_release();
                v51 = v75;
                goto LABEL_51;
              }
            }
            v51 = v75;
LABEL_68:
            v61 = swift_retain();
            MEMORY[0x1B5E2064C](v61);
            if (*(_QWORD *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1B2228AF4();
            sub_1B2228B30();
            sub_1B2228AD0();
            swift_release();
            goto LABEL_50;
          }
          swift_release();
          swift_release();
LABEL_50:
          swift_release();
LABEL_51:
          ++v53;
        }
        while (v53 != v52);
      }
    }
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  v14 = (__objc2_class **)(v7 + 7);
  while (1)
  {
    result = (uint64_t)*(v14 - 1);
    if ((__objc2_class *)result == v8 && *v14 == v9)
      return result;
    result = sub_1B2229D24();
    if ((result & 1) != 0)
      return result;
    v14 += 2;
    if (!--v13)
      goto LABEL_15;
  }
}

uint64_t sub_1B1DE28D0(uint64_t *a1, __objc2_class **a2, char a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __objc2_class **v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28[2];

  if (*a2 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
  {
    swift_retain();
    sub_1B1DDE624(a1, a2, a3 & 1);
  }
  else if (*a2 == _TtCO3VFX21GraphV1CodeGeneration12ContextEntry)
  {
    swift_retain();
    sub_1B1DE2048(a1, a2);
  }
  else
  {
    _s10SubContextCMa();
    v6 = swift_dynamicCastClass();
    if (v6)
    {
      v7 = (_QWORD *)v6;
      swift_retain();
      sub_1B1DE16CC(a1, v7, a3 & 1);
    }
    else
    {
      _s19StaticSwitchSnippetCMa();
      v9 = swift_dynamicCastClass();
      if (v9)
      {
        v10 = (__objc2_class **)v9;
        v11 = *a1;
        v12 = *(_QWORD **)(*a1 + 176);
        v13 = *(_QWORD *)(v9 + 24);
        v14 = *(_QWORD *)(v9 + 32);
        if ((sub_1B1DB8EB4(v13, v14, v12) & 1) != 0)
          return sub_1B1DDE2C8(a1, (uint64_t)a2);
        swift_retain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v11 + 176) = v12;
        v27 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v12 = sub_1B1C63044(0, v12[2] + 1, 1, v12);
          *(_QWORD *)(v11 + 176) = v12;
        }
        v17 = v12[2];
        v16 = v12[3];
        v18 = v17 + 1;
        if (v17 >= v16 >> 1)
        {
          v26 = sub_1B1C63044(v16 > 1, v17 + 1, 1, v12);
          v18 = v17 + 1;
          v12 = v26;
          *(_QWORD *)(v27 + 176) = v26;
        }
        v12[2] = v18;
        v19 = &v12[2 * v17];
        v19[4] = v13;
        v19[5] = v14;
        if (*v10 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
        {
          v20 = swift_retain();
          sub_1B1DEAA58(v20);
          swift_release();
        }
        v21 = sub_1B1DE1288((uint64_t)a1);
        v22 = a3 & 1;
        if ((v21 & 1) != 0)
          sub_1B1DE06CC(a1, v10, v22);
        else
          sub_1B1DDF780(a1, v10, v22);
      }
      else
      {
        _s17CustomCodeSnippetCMa();
        v23 = swift_dynamicCastClass();
        if (v23)
        {
          v24 = (_QWORD *)v23;
          swift_retain();
          sub_1B1DE143C(a1, v24, a3 & 1);
        }
        else
        {
          if (qword_1ED4BF430 != -1)
            swift_once();
          v28[1] = 0xE000000000000000;
          swift_retain();
          sub_1B2229430();
          sub_1B2228890();
          type metadata accessor for GraphV1CodeGeneration.BaseObject();
          sub_1B22295EC();
          v25 = sub_1B2228E90();
          if (qword_1ED4BF658 != -1)
            swift_once();
          v28[0] = 0;
          swift_retain();
          sub_1B1F1AD70(v25, v28, 0, 0xE000000000000000);
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  swift_release();
  return sub_1B1DDE2C8(a1, (uint64_t)a2);
}

uint64_t sub_1B1DE2C4C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  size_t v25;
  uint64_t isStackAllocationSafe;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  BOOL v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  BOOL v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __objc2_class **v68;
  unsigned int v69;
  uint64_t Strong;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _OWORD *v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  BOOL v95;
  uint64_t v96;
  _OWORD *v97;
  _OWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  _OWORD v112[2];
  _OWORD v113[2];
  uint64_t v114;
  _OWORD v115[2];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  _QWORD v124[3];
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD v132[7];

  v132[5] = *MEMORY[0x1E0C80C00];
  result = MEMORY[0x1E0DEE9D8];
  v109 = a1;
  v110 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 40);
  v103 = *(_QWORD *)(v3 + 16);
  if (v103)
  {
    v99 = v3;
    v100 = v3 + 32;
    v107 = v124;
    v97 = v112;
    v98 = (_OWORD *)((char *)v113 + 8);
    swift_bridgeObjectRetain_n();
    v4 = 0;
    v96 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      v5 = *(_QWORD **)(v109 + 40);
      v6 = v5[2];
      if (!v6)
        goto LABEL_6;
      v7 = (uint64_t *)(v100 + 16 * v4);
      v8 = *v7;
      v9 = v7[1];
      v10 = v5[4] == *v7 && v5[5] == v9;
      if (!v10 && (sub_1B2229D24() & 1) == 0)
      {
        if (v6 == 1)
          goto LABEL_6;
        v11 = v5[6] == v8 && v5[7] == v9;
        if (!v11 && (sub_1B2229D24() & 1) == 0)
        {
          if (v6 == 2)
            goto LABEL_6;
          if ((v5[8] != v8 || v5[9] != v9) && (sub_1B2229D24() & 1) == 0)
          {
            v93 = v6 - 3;
            if (!v93)
              goto LABEL_6;
            v94 = v5 + 11;
            while (1)
            {
              v95 = *(v94 - 1) == v8 && *v94 == v9;
              if (v95 || (sub_1B2229D24() & 1) != 0)
                break;
              v94 += 2;
              if (!--v93)
                goto LABEL_6;
            }
          }
        }
      }
      v106 = v4;
      v12 = sub_1B1DB99B0(v8, v9, v5);
      swift_bridgeObjectRetain_n();
      v13 = v109;
      v14 = sub_1B1D3724C();
      v108 = v15;
      v16 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 40 * v12);
      v18 = v16[4];
      v17 = v16[5];
      v19 = v16[6];
      v20 = v16[7];
      v21 = v9;
      v22 = v16[8];
      swift_weakInit();
      swift_weakAssign();
      v124[1] = v8;
      v124[2] = v21;
      v125 = v14;
      v126 = v108;
      v127 = v18;
      v128 = v17;
      v129 = v19;
      v130 = v20;
      v131 = v22;
      v23 = *(_QWORD *)(v101 + 256);
      v24 = *(_BYTE *)(v23 + 32);
      LODWORD(v14) = v24 & 0x3F;
      v104 = (unint64_t)((1 << v24) + 63) >> 6;
      v105 = v21;
      v25 = 8 * v104;
      sub_1B19FA2B4(v18, v17);
      isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v14 > 0xD)
      {
        isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
        if ((isStackAllocationSafe & 1) == 0)
        {
          v43 = (char *)swift_slowAlloc();
          bzero(v43, v25);
          v44 = 0;
          v45 = 0;
          v46 = v23 + 64;
          v47 = 1 << *(_BYTE *)(v23 + 32);
          if (v47 < 64)
            v48 = ~(-1 << v47);
          else
            v48 = -1;
          v49 = v48 & *(_QWORD *)(v23 + 64);
          v50 = (unint64_t)(v47 + 63) >> 6;
          v108 = v23 + 112;
          while (1)
          {
            if (v49)
            {
              v51 = __clz(__rbit64(v49));
              v49 &= v49 - 1;
              v52 = v51 | (v45 << 6);
            }
            else
            {
              v53 = v45 + 1;
              if (v45 + 1 >= v50)
                goto LABEL_80;
              v54 = *(_QWORD *)(v46 + 8 * v53);
              if (!v54)
              {
                v53 = v45 + 2;
                if (v45 + 2 >= v50)
                  goto LABEL_80;
                v54 = *(_QWORD *)(v46 + 8 * v53);
                if (!v54)
                {
                  v53 = v45 + 3;
                  if (v45 + 3 >= v50)
                    goto LABEL_80;
                  v54 = *(_QWORD *)(v46 + 8 * v53);
                  if (!v54)
                  {
                    v53 = v45 + 4;
                    if (v45 + 4 >= v50)
                      goto LABEL_80;
                    v54 = *(_QWORD *)(v46 + 8 * v53);
                    if (!v54)
                    {
                      v53 = v45 + 5;
                      if (v45 + 5 >= v50)
                      {
LABEL_80:
                        v42 = sub_1B1C0574C((unint64_t *)v43, v104, v44, v23);
                        MEMORY[0x1B5E23F88](v43, -1, -1);
                        goto LABEL_81;
                      }
                      v54 = *(_QWORD *)(v46 + 8 * v53);
                      if (!v54)
                      {
                        do
                        {
                          if (v50 - 6 == v45)
                            goto LABEL_80;
                          v54 = *(_QWORD *)(v108 + 8 * v45++);
                        }
                        while (!v54);
                        v53 = v45 + 5;
                      }
                    }
                  }
                }
              }
              v49 = (v54 - 1) & v54;
              v52 = __clz(__rbit64(v54)) + (v53 << 6);
              v45 = v53;
            }
            v55 = (_QWORD *)(*(_QWORD *)(v23 + 48) + 16 * v52);
            v56 = *v55 == v125 && v55[1] == v126;
            if (v56 || (sub_1B2229D24() & 1) != 0)
            {
              *(_QWORD *)&v43[(v52 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v52;
              ++v44;
            }
          }
        }
      }
      v102 = &v96;
      MEMORY[0x1E0C80A78](isStackAllocationSafe, v27);
      v28 = (char *)&v96 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0);
      bzero(v28, v25);
      v29 = 0;
      v30 = 0;
      v31 = v23 + 64;
      v32 = 1 << *(_BYTE *)(v23 + 32);
      if (v32 < 64)
        v33 = ~(-1 << v32);
      else
        v33 = -1;
      v34 = v33 & *(_QWORD *)(v23 + 64);
      v35 = (unint64_t)(v32 + 63) >> 6;
      v108 = v23 + 112;
      while (1)
      {
        if (v34)
        {
          v36 = __clz(__rbit64(v34));
          v34 &= v34 - 1;
          v37 = v36 | (v30 << 6);
          goto LABEL_46;
        }
        v38 = v30 + 1;
        if (v30 + 1 >= v35)
          goto LABEL_52;
        v39 = *(_QWORD *)(v31 + 8 * v38);
        if (!v39)
        {
          v38 = v30 + 2;
          if (v30 + 2 >= v35)
            goto LABEL_52;
          v39 = *(_QWORD *)(v31 + 8 * v38);
          if (!v39)
          {
            v38 = v30 + 3;
            if (v30 + 3 >= v35)
              goto LABEL_52;
            v39 = *(_QWORD *)(v31 + 8 * v38);
            if (!v39)
            {
              v38 = v30 + 4;
              if (v30 + 4 >= v35)
                goto LABEL_52;
              v39 = *(_QWORD *)(v31 + 8 * v38);
              if (!v39)
              {
                v38 = v30 + 5;
                if (v30 + 5 >= v35)
                  goto LABEL_52;
                v39 = *(_QWORD *)(v31 + 8 * v38);
                if (!v39)
                  break;
              }
            }
          }
        }
LABEL_45:
        v34 = (v39 - 1) & v39;
        v37 = __clz(__rbit64(v39)) + (v38 << 6);
        v30 = v38;
LABEL_46:
        v40 = (_QWORD *)(*(_QWORD *)(v23 + 48) + 16 * v37);
        v41 = *v40 == v125 && v40[1] == v126;
        if (v41 || (sub_1B2229D24() & 1) != 0)
        {
          *(_QWORD *)&v28[(v37 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v37;
          ++v29;
        }
      }
      while (v35 - 6 != v30)
      {
        v39 = *(_QWORD *)(v108 + 8 * v30++);
        if (v39)
        {
          v38 = v30 + 5;
          goto LABEL_45;
        }
      }
LABEL_52:
      v42 = sub_1B1C0574C((unint64_t *)v28, v104, v29, v23);
LABEL_81:
      swift_bridgeObjectRelease();
      v57 = *(_BYTE *)(v42 + 32);
      v58 = 1 << v57;
      v59 = *(_QWORD *)(v42 + 64);
      if (v59)
      {
        v60 = 0;
        goto LABEL_83;
      }
      v69 = v57 & 0x3F;
      if (v69 < 7)
        goto LABEL_108;
      v59 = *(_QWORD *)(v42 + 72);
      if (v59)
      {
        v60 = 1;
        goto LABEL_83;
      }
      if (v69 < 8)
        goto LABEL_108;
      v59 = *(_QWORD *)(v42 + 80);
      if (!v59)
      {
        v76 = 0;
        v77 = (unint64_t)(v58 + 63) >> 6;
        if (v77 <= 3)
          v77 = 3;
        v78 = v77 - 3;
        while (v78 != v76)
        {
          v59 = *(_QWORD *)(v42 + 88 + 8 * v76++);
          if (v59)
          {
            v60 = v76 + 2;
            goto LABEL_83;
          }
        }
LABEL_108:
        swift_release();
        swift_weakDestroy();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B19F9FEC(v127, v128);
LABEL_109:
        swift_bridgeObjectRelease();
LABEL_110:
        v4 = v106;
        goto LABEL_6;
      }
      v60 = 2;
LABEL_83:
      v61 = __clz(__rbit64(v59)) + (v60 << 6);
      if (v61 == v58)
        goto LABEL_108;
      v62 = (uint64_t *)(*(_QWORD *)(v42 + 56) + 24 * v61);
      v63 = *v62;
      v64 = v62[1];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v65 = *(_QWORD *)(v101 + 264);
      if (!*(_QWORD *)(v65 + 16))
      {
        swift_bridgeObjectRelease();
LABEL_4:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66 = sub_1B1DC3B00(v63, v64);
      if ((v67 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_4;
      }
      v68 = *(__objc2_class ***)(*(_QWORD *)(v65 + 56) + 8 * v66);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*v68 == _TtCO3VFX21GraphV1CodeGeneration12ParameterOut)
      {
        Strong = swift_weakLoadStrong();
        if (Strong)
        {
          v71 = Strong;
          v123 = MEMORY[0x1E0DEA968];
          *(_QWORD *)&v122 = 0;
          *((_QWORD *)&v122 + 1) = 0xE000000000000000;
          v73 = Strong + 16;
          v72 = *(_QWORD *)(Strong + 16);
          if (v72)
          {
            if (*(_QWORD *)(v72 + 16))
              goto LABEL_98;
LABEL_112:
            if (v72)
            {
LABEL_113:
              sub_1B1A02864((uint64_t)&v122, (uint64_t)v115);
              v79 = v98;
              *v98 = 0u;
              v79[1] = 0u;
              *(_QWORD *)&v111 = 1701667182;
              *((_QWORD *)&v111 + 1) = 0xE400000000000000;
              sub_1B1E0E5B0(v115, v132);
              sub_1B19FA278((uint64_t)v132, (uint64_t)v97);
              sub_1B1A057EC((uint64_t)v79, (uint64_t)&qword_1ED4BB150, v96, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
              sub_1B1A0DDAC(v115, v79);
              v118 = v112[1];
              v119 = v113[0];
              v120 = v113[1];
              v121 = v114;
              v116 = v111;
              v117 = v112[0];
              sub_1B20E0CF0((uint64_t)&v116, 1701667182, 0xE400000000000000);
              goto LABEL_114;
            }
LABEL_100:
            *(_QWORD *)v73 = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
            swift_bridgeObjectRelease();
            goto LABEL_113;
          }
          *(_QWORD *)v73 = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
          swift_bridgeObjectRelease();
          v72 = *(_QWORD *)v73;
          if (!*(_QWORD *)(*(_QWORD *)v73 + 16))
            goto LABEL_112;
LABEL_98:
          swift_bridgeObjectRetain();
          sub_1B1DC3B00(1701667182, 0xE400000000000000);
          v75 = v74;
          swift_bridgeObjectRelease();
          if ((v75 & 1) == 0)
          {
            if (*(_QWORD *)v73)
              goto LABEL_113;
            goto LABEL_100;
          }
LABEL_114:
          sub_1B1E02C04(1701667182, 0xE400000000000000, &v111);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v122);
          sub_1B1A0DDAC(&v111, &v116);
          v80 = MEMORY[0x1E0DEA968];
          swift_dynamicCast();
          v116 = v122;
          *(_QWORD *)&v111 = 0x657461756C617645;
          *((_QWORD *)&v111 + 1) = 0xE90000000000005FLL;
          sub_1B1A2044C();
          v108 = v71;
          sub_1B1A20490();
          v81 = sub_1B222862C();
          swift_bridgeObjectRelease();
          if ((v81 & 1) != 0)
          {
            *((_QWORD *)&v117 + 1) = v80;
            *(_QWORD *)&v116 = 0;
            *((_QWORD *)&v116 + 1) = 0xE000000000000000;
            sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v116, &v111);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v116);
            sub_1B1A0DDAC(&v111, &v116);
            swift_dynamicCast();
            v83 = *((_QWORD *)&v122 + 1);
            v82 = v122;
            if ((sub_1B2228914() & 1) != 0)
            {
              swift_bridgeObjectRetain();
              sub_1B2228830();
              v84 = sub_1B1DCD8E8();
              v86 = v85;
              v88 = v87;
              v90 = v89;
              swift_bridgeObjectRelease();
              v82 = MEMORY[0x1B5E20388](v84, v86, v88, v90);
              v92 = v91;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v83 = v92;
            }
            sub_1B1E8E23C(v82, v83);
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_weakDestroy();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B19F9FEC(v127, v128);
            swift_bridgeObjectRelease();
            goto LABEL_109;
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_weakDestroy();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B19F9FEC(v127, v128);
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_weakDestroy();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B19F9FEC(v127, v128);
          swift_bridgeObjectRelease();
        }
        swift_release();
        goto LABEL_110;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_5:
      v4 = v106;
      swift_release();
      swift_weakDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B19F9FEC(v127, v128);
      swift_bridgeObjectRelease();
LABEL_6:
      if (++v4 == v103)
      {
        swift_bridgeObjectRelease_n();
        return v110;
      }
    }
  }
  return result;
}

uint64_t sub_1B1DE387C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __objc2_class **v17;
  __objc2_class **v18;
  uint64_t v20;
  _BYTE v21[16];
  _QWORD v22[2];

  v4 = v3;
  v8 = *(unsigned __int8 *)(a2 + 2);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  _s7ContextC14GenerationDataCMa();
  v11 = swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1D3AEF8(a2);
  sub_1B1DEAFE0(v4, (_OWORD *)a2, v9, v10, a3, v8);
  v20 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  v12 = swift_bridgeObjectRetain();
  sub_1B1C16E50(v12, v4, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v13 = MEMORY[0x1E0DEA968];
  sub_1B1A18378(a2 + 48, (uint64_t)v21, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968]);
  sub_1B1A18378((uint64_t)v21, (uint64_t)v22, (unint64_t *)&qword_1ED4BA2B0, v13);
  if (v22[1])
  {
    swift_retain();
    sub_1B1AE7408((uint64_t)v21);
    v14 = swift_retain();
    v15 = sub_1B1C17BF0(v14, v4);
    sub_1B1BA80C0((uint64_t)v21);
  }
  else
  {
    swift_retain();
    v16 = swift_retain();
    v15 = sub_1B1E009B8(v16, v4, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1DF9854);
  }
  swift_release_n();
  swift_release();
  if ((v8 & 1) != 0)
  {
    sub_1B1DF9F98(v11);
    swift_release();
    sub_1B1DCC5E8(*(_QWORD *)(v4 + 168));
    v18 = v17;
    swift_bridgeObjectRelease();
    sub_1B1DE2048(&v20, v18);
  }
  else
  {
    if (!*(_QWORD *)(v15 + 16))
    {
      swift_release();
      goto LABEL_10;
    }
    sub_1B1DF9F98(v11);
  }
  swift_release();
  sub_1B1D374B8(&v20, v15, v4, v8, *(unsigned __int8 *)(a2 + 3));
  sub_1B1DE42B0((uint64_t)&v20);
  v11 = v20;
LABEL_10:
  swift_retain();
  sub_1B1DEB07C();
  swift_release();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B1DE3AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v3;
  sub_1B1A06460();
  v6 = (_QWORD *)sub_1B2229280();
  v7 = v6[4];
  v8 = v6[5];
  v9 = v6[6];
  v10 = v6[7];
  swift_bridgeObjectRetain();
  v11 = MEMORY[0x1B5E20388](v7, v8, v9, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = v6[8];
  v15 = v6[9];
  v16 = v6[10];
  v17 = v6[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x1B5E20388](v14, v15, v16, v17);
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(*(_QWORD *)(v4 + 136) + 32);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_1B1DC3B00(v11, v13);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(v24 + 56);
      if (v25
        && *(_QWORD *)(v25 + 16)
        && (v26 = sub_1B1DC3C04(*(_BYTE *)(*(_QWORD *)a3 + 24)), (v27 & 1) != 0)
        && (v28 = *(_QWORD *)(v25 + 56) + 16 * v26, v29 = *(_QWORD *)v28, *(_QWORD *)(*(_QWORD *)v28 + 16)))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = sub_1B1DC3B00(v18, v20);
        if ((v31 & 1) != 0)
        {
          v32 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 16 * v30);
          v33 = *v32;
          v34 = v32[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B1C9110C(0, 0, v33, v34);
          swift_release();
          return 1;
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 0;
}

_QWORD *sub_1B1DE3D1C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;

  v4 = v3;
  sub_1B1A06460();
  v6 = (_QWORD *)sub_1B2229280();
  v7 = v6[4];
  v8 = v6[5];
  v9 = v6[6];
  v10 = v6[7];
  swift_bridgeObjectRetain();
  v11 = MEMORY[0x1B5E20388](v7, v8, v9, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = v6[8];
  v15 = v6[9];
  v16 = v6[10];
  v17 = v6[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x1B5E20388](v14, v15, v16, v17);
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(*(_QWORD *)(v4 + 136) + 32);
  if (!*(_QWORD *)(v21 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain();
  v22 = sub_1B1DC3B00(v11, v13);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 56);
  if (!v25
    || !*(_QWORD *)(v25 + 16)
    || (v26 = sub_1B1DC3C04(a3), (v27 & 1) == 0)
    || (v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 16 * v26 + 8), !*(_QWORD *)(v28 + 16)))
  {
    swift_release();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = sub_1B1DC3B00(v18, v20);
  if ((v30 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v64 = *(_QWORD *)(v31 + 16);
  if (v64)
  {
    v65 = a3;
    v63 = v31 + 32;
    swift_bridgeObjectRetain();
    v32 = 0;
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v35 = (uint64_t *)(v63 + 16 * v32);
      v36 = *v35;
      v37 = v35[1];
      v38 = v33[2];
      if (v38)
      {
        v39 = v33[4] == v36 && v33[5] == v37;
        v40 = v65;
        if (v39 || (sub_1B2229D24() & 1) != 0)
        {
LABEL_35:
          swift_bridgeObjectRetain();
          goto LABEL_36;
        }
        if (v38 != 1)
        {
          v44 = v33[6] == v36 && v33[7] == v37;
          v40 = v65;
          if (v44 || (sub_1B2229D24() & 1) != 0)
            goto LABEL_35;
          v60 = v38 - 2;
          if (v38 != 2)
          {
            if (v33[8] == v36 && v33[9] == v37 || (sub_1B2229D24() & 1) != 0)
            {
LABEL_80:
              swift_bridgeObjectRetain();
              v40 = v65;
              goto LABEL_36;
            }
            v61 = v33 + 11;
            while (--v60)
            {
              if (*(v61 - 1) != v36 || *v61 != v37)
              {
                v61 += 2;
                if ((sub_1B2229D24() & 1) == 0)
                  continue;
              }
              goto LABEL_80;
            }
          }
        }
      }
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_1B1C63044(0, v38 + 1, 1, v33);
      v40 = v65;
      v42 = v33[2];
      v41 = v33[3];
      if (v42 >= v41 >> 1)
        v33 = sub_1B1C63044(v41 > 1, v42 + 1, 1, v33);
      v33[2] = v42 + 1;
      v43 = &v33[2 * v42];
      v43[4] = v36;
      v43[5] = v37;
LABEL_36:
      v45 = sub_1B1DE3D1C(v36, v37, v40);
      v46 = *(_QWORD *)(v45 + 16);
      if (v46)
      {
        v66 = v32;
        swift_bridgeObjectRetain();
        v47 = 0;
        while (1)
        {
          v49 = (uint64_t *)(v45 + 32 + 16 * v47);
          v51 = *v49;
          v50 = v49[1];
          v52 = v33[2];
          if (!v52)
            goto LABEL_47;
          v53 = v33[4] == v51 && v33[5] == v50;
          if (!v53 && (sub_1B2229D24() & 1) == 0)
          {
            if (v52 == 1)
              goto LABEL_47;
            v56 = v33[6] == v51 && v33[7] == v50;
            if (!v56 && (sub_1B2229D24() & 1) == 0)
            {
              v57 = v52 - 2;
              if (v52 == 2)
                goto LABEL_47;
              if ((v33[8] != v51 || v33[9] != v50) && (sub_1B2229D24() & 1) == 0)
                break;
            }
          }
LABEL_39:
          if (++v47 == v46)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v32 = v66;
            goto LABEL_17;
          }
        }
        v58 = v33 + 11;
        while (--v57)
        {
          if (*(v58 - 1) != v51 || *v58 != v50)
          {
            v58 += 2;
            if ((sub_1B2229D24() & 1) == 0)
              continue;
          }
          goto LABEL_39;
        }
LABEL_47:
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = sub_1B1C63044(0, v52 + 1, 1, v33);
        v55 = v33[2];
        v54 = v33[3];
        if (v55 >= v54 >> 1)
          v33 = sub_1B1C63044(v54 > 1, v55 + 1, 1, v33);
        v33[2] = v55 + 1;
        v48 = &v33[2 * v55];
        v48[4] = v51;
        v48[5] = v50;
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      if (++v32 == v64)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        return v33;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

void sub_1B1DE42B0(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  __int128 v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;

  sub_1B1B1F358();
  v66 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v65 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B222820C();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v62 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)a1;
  if (*(_BYTE *)(*(_QWORD *)a1 + 40) != 1)
    return;
  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v9 + 16);
  v61 = a1;
  v67 = v10;
  if (!v10)
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v40 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (v40)
      goto LABEL_68;
    goto LABEL_82;
  }
  v60 = v9 + 32;
  *(_QWORD *)&v58 = v9;
  swift_bridgeObjectRetain_n();
  v11 = 0;
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v59 = v8;
  do
  {
    v14 = (uint64_t *)(v60 + 16 * v11);
    v16 = *v14;
    v15 = v14[1];
    v17 = *(unsigned __int8 *)(v8 + 24);
    swift_bridgeObjectRetain();
    v18 = sub_1B1DE3D1C(v16, v15, v17);
    v19 = v18[2];
    if (v19)
    {
      v68 = v16;
      v69 = v15;
      v70 = v11;
      swift_bridgeObjectRetain();
      v20 = 0;
      while (1)
      {
        v22 = &v18[2 * v20 + 4];
        v24 = *v22;
        v23 = v22[1];
        v25 = v12[2];
        if (!v25)
          goto LABEL_19;
        v26 = v12[4] == v24 && v12[5] == v23;
        if (!v26 && (sub_1B2229D24() & 1) == 0)
        {
          if (v25 == 1)
            goto LABEL_19;
          v30 = v12[6] == v24 && v12[7] == v23;
          if (!v30 && (sub_1B2229D24() & 1) == 0)
          {
            v31 = v25 - 2;
            if (v25 == 2)
              goto LABEL_19;
            if ((v12[8] != v24 || v12[9] != v23) && (sub_1B2229D24() & 1) == 0)
              break;
          }
        }
LABEL_11:
        if (++v20 == v19)
        {
          swift_bridgeObjectRelease_n();
          v8 = v59;
          v15 = v69;
          v11 = v70;
          v16 = v68;
          v21 = v12[2];
          if (!v21)
            goto LABEL_48;
LABEL_42:
          v34 = v12[4] == v16 && v12[5] == v15;
          if (!v34 && (sub_1B2229D24() & 1) == 0)
          {
            if (v21 == 1)
              goto LABEL_48;
            if ((v12[6] != v16 || v12[7] != v15) && (sub_1B2229D24() & 1) == 0)
            {
              v37 = v21 - 2;
              if (v21 == 2)
                goto LABEL_48;
              if ((v12[8] != v16 || v12[9] != v15) && (sub_1B2229D24() & 1) == 0)
              {
                v38 = v12 + 11;
                while (--v37)
                {
                  if (*(v38 - 1) != v16 || *v38 != v15)
                  {
                    v38 += 2;
                    if ((sub_1B2229D24() & 1) == 0)
                      continue;
                  }
                  goto LABEL_5;
                }
                goto LABEL_48;
              }
            }
          }
          goto LABEL_5;
        }
      }
      v57 = v12;
      v32 = v12 + 11;
      while (1)
      {
        --v31;
        v12 = v57;
        if (!v31)
          break;
        if (*(v32 - 1) != v24 || *v32 != v23)
        {
          v32 += 2;
          if ((sub_1B2229D24() & 1) == 0)
            continue;
        }
        v12 = v57;
        goto LABEL_11;
      }
LABEL_19:
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_1B1C63044(0, v25 + 1, 1, v12);
      v28 = v12[2];
      v27 = v12[3];
      if (v28 >= v27 >> 1)
        v12 = sub_1B1C63044(v27 > 1, v28 + 1, 1, v12);
      v12[2] = v28 + 1;
      v29 = &v12[2 * v28];
      v29[4] = v24;
      v29[5] = v23;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    v21 = v12[2];
    if (v21)
      goto LABEL_42;
LABEL_48:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1B1C63044(0, v21 + 1, 1, v12);
    v36 = v12[2];
    v35 = v12[3];
    if (v36 >= v35 >> 1)
      v12 = sub_1B1C63044(v35 > 1, v36 + 1, 1, v12);
    v12[2] = v36 + 1;
    v13 = &v12[2 * v36];
    v13[4] = v16;
    v13[5] = v15;
LABEL_5:
    swift_bridgeObjectRelease();
    ++v11;
  }
  while (v11 != v67);
  swift_bridgeObjectRelease_n();
  a1 = v61;
  v40 = v12[2];
  if (!v40)
  {
LABEL_82:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_68:
  swift_bridgeObjectRetain_n();
  v57 = v12;
  v41 = &v12[2 * v40 + 3];
  v59 = 0x80000001B233D410;
  v60 = 0x80000001B233D3F0;
  v58 = xmmword_1B226D240;
  do
  {
    v42 = *(v41 - 1);
    v43 = *v41;
    swift_bridgeObjectRetain();
    if ((sub_1B1DE3AE0(v42, v43, a1) & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      v71 = 0;
      v72 = 0xE000000000000000;
      v70 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v71 = 0xD00000000000001ALL;
      v72 = v60;
      sub_1B2228890();
      sub_1B2228890();
      v45 = v71;
      v44 = v72;
      v46 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v68 = v40;
      v69 = v43;
      v47 = qword_1ED4D0FD0;
      v48 = qword_1ED4BF688;
      swift_retain();
      if (v48 != -1)
        swift_once();
      sub_1B1791524(0, (unint64_t *)&qword_1ED4BF700, (uint64_t (*)(uint64_t))sub_1B1BB9F44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v58;
      *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v49 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v49 + 32) = v45;
      *(_QWORD *)(v49 + 40) = v44;
      swift_bridgeObjectRetain();
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v50 = v62;
      sub_1B2228200();
      v51 = v66[12];
      v52 = v66[16];
      v53 = v66[20];
      v67 = v47;
      v54 = (uint64_t)v65;
      v55 = &v65[v53];
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v65, v50, v64);
      *(_BYTE *)(v54 + v51) = v46;
      *(_QWORD *)(v54 + v52) = 0;
      *(_QWORD *)v55 = v45;
      *((_QWORD *)v55 + 1) = v44;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v54, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      a1 = v61;
      v40 = v68;
    }
    v41 -= 2;
    --v40;
  }
  while (v40);
  swift_bridgeObjectRelease_n();
}

uint64_t sub_1B1DE49EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _OWORD v42[2];
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46[10];
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;

  v2 = v1;
  sub_1B1E02C04(0x6C706D6554657375, 0xEB00000000657461, &v50);
  if (v51)
  {
    v4 = MEMORY[0x1E0DEE9B8];
    if ((swift_dynamicCast() & 1) != 0 && (v46[0] & 1) != 0)
    {
      sub_1B1DD9DB4(1, v46);
      sub_1B1A18378((uint64_t)v46, (uint64_t)&v50, &qword_1EEF5EC48, (uint64_t)&_s8TemplateVN);
      v5 = *((_QWORD *)&v50 + 1);
      v6 = MEMORY[0x1E0DEA968];
      if (!*((_QWORD *)&v50 + 1))
      {
        v14 = 0;
        v41 = 0;
        v10 = 0;
LABEL_36:
        if (qword_1ED4BF430 != -1)
          swift_once();
        *(_QWORD *)&v43 = 0;
        *((_QWORD *)&v43 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        v45 = v43;
        sub_1B2228890();
        v44 = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v43 = 0;
        *((_QWORD *)&v43 + 1) = 0xE000000000000000;
        sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v43, v42);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
        sub_1B1A0DDAC(v42, &v43);
        v32 = v4 + 8;
        swift_dynamicCast();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        sub_1B1E02C04(0x6574616C706D6574, 0xEB00000000646955, &v43);
        if (v44)
          swift_dynamicCast();
        else
          sub_1B1A057EC((uint64_t)&v43, (uint64_t)&qword_1ED4BB150, v32, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        v33 = *(_QWORD *)(v2 + 280);
        swift_bridgeObjectRetain_n();
        v34 = sub_1B1DC8A90(v33);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v43 = v34;
        sub_1B1DD6858((uint64_t *)&v43, sub_1B216D588, (uint64_t (*)(_QWORD *))sub_1B1DF1F90);
        swift_bridgeObjectRelease();
        MEMORY[0x1B5E20670](v43, MEMORY[0x1E0DEA968]);
        sub_1B2228890();
        swift_release();
        swift_bridgeObjectRelease();
        v35 = v45;
        v36 = sub_1B2228E90();
        if (qword_1ED4BF658 != -1)
          swift_once();
        *(_QWORD *)&v43 = 0;
        swift_retain();
        sub_1B1F1AD70(v36, (uint64_t *)&v43, v35, *((uint64_t *)&v35 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_44:
        if (!v14)
          goto LABEL_17;
        goto LABEL_13;
      }
      v38 = v52;
      *(_QWORD *)&v40 = v54;
      *((_QWORD *)&v40 + 1) = v53;
      v57 = v55;
      v7 = v56;
      v39 = v56;
      v37 = v50;
      if (v56)
      {
        sub_1B1DCC5E8(*(_QWORD *)(v56 + 168));
        if (v9)
        {
          v10 = v8;
          swift_retain_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain_n();
          v10 = 0;
        }
        sub_1B1DCC5E8(*(_QWORD *)(v7 + 176));
        v14 = v20;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = 0;
        v10 = 0;
      }
      v49 = v6;
      *(_QWORD *)&v48 = 0;
      *((_QWORD *)&v48 + 1) = 0xE000000000000000;
      sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v48, &v47);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v48);
      sub_1B1A0DDAC(&v47, &v48);
      swift_dynamicCast();
      if (__PAIR128__(v43, *((unint64_t *)&v43 + 1)) == v40)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v21 = sub_1B2229D24();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {
          v22 = BYTE7(v40) & 0xF;
          if ((v40 & 0x2000000000000000) == 0)
            v22 = *((_QWORD *)&v40 + 1) & 0xFFFFFFFFFFFFLL;
          if (v22)
          {
            v49 = MEMORY[0x1E0DEA968];
            *(_QWORD *)&v48 = 0;
            *((_QWORD *)&v48 + 1) = 0xE000000000000000;
            sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v48, &v47);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v48);
            sub_1B1A0DDAC(&v47, &v48);
            swift_dynamicCast();
            sub_1B2080134((uint64_t *)&v47);
            swift_bridgeObjectRelease();
            sub_1B2080134((uint64_t *)&v48);
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v43 = 0;
            *((_QWORD *)&v43 + 1) = 0xE000000000000000;
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v41 = a1[3];
            v45 = v43;
            sub_1B1A06460();
            swift_bridgeObjectRetain();
            v24 = MEMORY[0x1E0DEA968];
            v25 = sub_1B222922C();
            v27 = v26;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1[3] = v25;
            a1[4] = v27;
            swift_bridgeObjectRelease();
            v44 = v24;
            *(_QWORD *)&v43 = *((_QWORD *)&v40 + 1);
            *((_QWORD *)&v43 + 1) = v40;
            swift_bridgeObjectRetain();
            sub_1B1E02AF4(1701667182, 0xE400000000000000, (uint64_t)&v43);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
            v44 = v24;
            *(_QWORD *)&v43 = v37;
            *((_QWORD *)&v43 + 1) = v5;
            swift_bridgeObjectRetain();
            sub_1B1E02AF4(0x6574616C706D6574, 0xEC000000656D614ELL, (uint64_t)&v43);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
            v43 = v57;
            *(_QWORD *)&v42[0] = 0x7C72657355;
            *((_QWORD *)&v42[0] + 1) = 0xE500000000000000;
            *(_QWORD *)&v45 = 0;
            *((_QWORD *)&v45 + 1) = 0xE000000000000000;
            v28 = sub_1B222922C();
            v44 = v24;
            *(_QWORD *)&v43 = v28;
            *((_QWORD *)&v43 + 1) = v29;
            sub_1B1E02AF4(0x6C6562616CLL, 0xE500000000000000, (uint64_t)&v43);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
            swift_bridgeObjectRetain();
            if (v38)
            {
LABEL_30:
              v23 = sub_1B2229D24();
              swift_bridgeObjectRelease();
              if ((v23 & 1) == 0)
              {
LABEL_35:
                swift_release();
                sub_1B1E01B88(v46);
                if (v39)
                  goto LABEL_44;
                goto LABEL_36;
              }
LABEL_34:
              v43 = xmmword_1EEF5ECE0;
              swift_bridgeObjectRetain();
              sub_1B2228890();
              v30 = v43;
              v44 = MEMORY[0x1E0DEB418];
              *(_QWORD *)&v43 = 1;
              sub_1B1E02AF4(v30, *((uint64_t *)&v43 + 1), (uint64_t)&v43);
              swift_bridgeObjectRelease();
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
              v43 = xmmword_1EEF5ECE0;
              swift_bridgeObjectRetain();
              sub_1B2228890();
              v31 = v43;
              v44 = MEMORY[0x1E0DEB418];
              *(_QWORD *)&v43 = 1;
              v4 = MEMORY[0x1E0DEE9B8];
              sub_1B1E02AF4(v31, *((uint64_t *)&v43 + 1), (uint64_t)&v43);
              swift_bridgeObjectRelease();
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
              goto LABEL_35;
            }
LABEL_33:
            swift_bridgeObjectRelease();
            goto LABEL_34;
          }
        }
      }
      v41 = 0;
      if (v38)
        goto LABEL_30;
      goto LABEL_33;
    }
  }
  else
  {
    sub_1B1A057EC((uint64_t)&v50, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
  }
  sub_1B1DCC5E8(a1[21]);
  if (v12)
  {
    v10 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  sub_1B1DCC5E8(a1[22]);
  v14 = v13;
  swift_bridgeObjectRelease();
  v41 = 0;
LABEL_13:
  if (v10)
  {
    v15 = *(_QWORD *)(v10 + 80);
    v16 = *(_QWORD *)(v10 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(v14 + 40);
  v18 = *(_QWORD *)(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DD9590(a1, v15, v16, v17, v18);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_release();
  return v41;
}

void sub_1B1DE5514(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DE555C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(v1 + 200);
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1B1DC3B00(v4, v3);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = sub_1B1FB71E0(v2, v0);
  if (v9)
  {
    v10 = v9;
    swift_release();
    return v10;
  }
  v12 = *(_QWORD *)(v8 + 136);
  v13 = *(_QWORD **)(v12 + 152);
  if (!v13 || (v14 = sub_1B1DB99B0(v2, v0, v13), (v15 & 1) != 0) || (v16 = *(_QWORD *)(v12 + 160)) == 0)
  {
    swift_release();
    return 0;
  }
  v17 = v16 + 16 * v14;
  v18 = *(_QWORD *)(v17 + 32);
  v19 = *(_QWORD *)(v17 + 40);
  swift_bridgeObjectRetain();
  v20 = sub_1B1FB71E0(v18, v19);
  swift_release();
  swift_bridgeObjectRelease();
  return v20;
}

void sub_1B1DE5920(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1DE5964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (*(_QWORD *)(*(_QWORD *)(v1 + 200) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1DC3B00(v4, v3);
    if ((v5 & 1) != 0)
    {
      swift_retain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = sub_1B1FB736C(v2, v0);
      swift_release_n();
      return v6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

_QWORD *sub_1B1DE5CB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v37;
  _QWORD *v38[2];

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v2 = swift_bridgeObjectRetain();
  sub_1B1DF54C8(v2, 0xEA00000000006E49);
  swift_bridgeObjectRelease();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1B1DC8A9C(v3);
  swift_release();
  v38[0] = v4;
  sub_1B1DD676C(v38);
  swift_release();
  v5 = v38[0];
  v6 = v38[0][2];
  v37 = v38[0];
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = v5 + 5;
    do
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      v10 = sub_1B2228920();
      swift_bridgeObjectRetain();
      if ((v10 & 1) != 0)
      {
        sub_1B2228830();
        sub_1B2228854();
        v11 = sub_1B2228974();
        v13 = v12;
        v15 = v14;
        v17 = v16;
        swift_bridgeObjectRelease();
        v9 = MEMORY[0x1B5E20388](v11, v13, v15, v17);
        v8 = v18;
        swift_bridgeObjectRelease();
      }
      v7 += 13;
      swift_retain();
      sub_1B1FB9650(v9, v8);
      swift_bridgeObjectRelease();
      swift_release();
      --v6;
    }
    while (v6);
    v5 = v37;
    swift_release();
  }
  if (*(_QWORD *)(a1 + 16))
  {
    v19 = swift_bridgeObjectRetain();
    sub_1B1DF54C8(v19, 0xEB0000000074754FLL);
    swift_bridgeObjectRelease();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_1B1DC8A9C(v20);
    swift_release();
    v38[0] = v21;
    sub_1B1DD676C(v38);
    swift_release();
    v22 = v38[0];
    v23 = v38[0][2];
    if (v23)
    {
      swift_bridgeObjectRetain();
      v24 = v22 + 5;
      do
      {
        v26 = *(v24 - 1);
        v25 = *v24;
        v27 = sub_1B2228920();
        swift_bridgeObjectRetain();
        if ((v27 & 1) != 0)
        {
          sub_1B2228830();
          sub_1B2228854();
          v28 = sub_1B2228974();
          v30 = v29;
          v32 = v31;
          v34 = v33;
          swift_bridgeObjectRelease();
          v26 = MEMORY[0x1B5E20388](v28, v30, v32, v34);
          v25 = v35;
          swift_bridgeObjectRelease();
        }
        v24 += 13;
        swift_retain();
        sub_1B1FB9CC8(v26, v25);
        swift_bridgeObjectRelease();
        swift_release();
        --v23;
      }
      while (v23);
      swift_release();
      return v37;
    }
  }
  return v5;
}

void sub_1B1DE6090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a3;
  if (a2)
  {
    v5 = *(_QWORD *)(a2 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (uint64_t *)(a2 + 40);
      do
      {
        v8 = *(v6 - 1);
        v7 = *v6;
        v9 = sub_1B2228920();
        swift_bridgeObjectRetain();
        if ((v9 & 1) != 0)
        {
          sub_1B2228830();
          sub_1B2228854();
          v10 = sub_1B2228974();
          v12 = v11;
          v14 = v13;
          v16 = v15;
          swift_bridgeObjectRelease();
          v8 = MEMORY[0x1B5E20388](v10, v12, v14, v16);
          v7 = v17;
          swift_bridgeObjectRelease();
        }
        v6 += 13;
        swift_retain();
        sub_1B1FB9650(v8, v7);
        swift_bridgeObjectRelease();
        swift_release();
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v3 = a3;
    }
  }
  if (v3)
  {
    v18 = *(_QWORD *)(v3 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      v19 = (uint64_t *)(v3 + 40);
      do
      {
        v21 = *(v19 - 1);
        v20 = *v19;
        v22 = sub_1B2228920();
        swift_bridgeObjectRetain();
        if ((v22 & 1) != 0)
        {
          sub_1B2228830();
          sub_1B2228854();
          v23 = sub_1B2228974();
          v25 = v24;
          v27 = v26;
          v29 = v28;
          swift_bridgeObjectRelease();
          v21 = MEMORY[0x1B5E20388](v23, v25, v27, v29);
          v20 = v30;
          swift_bridgeObjectRelease();
        }
        v19 += 13;
        swift_retain();
        sub_1B1FB9CC8(v21, v20);
        swift_bridgeObjectRelease();
        swift_release();
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1B1DE63B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B1DFCDA0(0, &qword_1EEF5EA80, (void (*)(uint64_t))_s11ContextExitCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E01AF0();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v5;
    if (!v5)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = v3;
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01B80);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE64C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B1DFCDA0(0, &qword_1EEF5EA98, (void (*)(uint64_t))_s12ContextEntryCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E01A60();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v5;
    if (!v5)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 168) = v3;
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01770);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE65CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1B1DFCDA0(0, &qword_1EEF5EAB0, (void (*)(uint64_t))_s10SubContextCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E019C8();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v7;
    if (!v7)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = v3;
    v4 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v4, v5);
    v6 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v6, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01A58);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE6704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B1DFCDA0(0, &qword_1EEF5EAE0, (void (*)(uint64_t))_s17CustomCodeSnippetCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E01938();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v5;
    if (!v5)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 208) = v3;
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01770);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE6810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B1DFCDA0(0, &qword_1EEF5EB38, (void (*)(uint64_t))_s15VariableSnippetCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E018A8();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v5;
    if (!v5)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 240) = v3;
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01770);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE691C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B1DFCDA0(0, &qword_1EEF5EB50, (void (*)(uint64_t))_s24VariableReferenceSnippetCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E01818();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v5;
    if (!v5)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 248) = v3;
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01770);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE6A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B1DFCDA0(0, &qword_1EEF5EAF8, (void (*)(uint64_t))_s17TypedArraySnippetCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E01788();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v5;
    if (!v5)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 216) = v3;
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01770);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE6B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B1DFCDA0(0, &qword_1EEF5EB10, (void (*)(uint64_t))_s19StaticSwitchSnippetCMa);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E016E0();
  result = sub_1B22297B4();
  if (!v1)
  {
    v3 = v5;
    if (!v5)
      v3 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 224) = v3;
    swift_bridgeObjectRelease();
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1E01770);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DE6C40()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  sub_1B1B7E3A0(MEMORY[0x1E0DEE9D8]);
  sub_1B1E015C4(0, &qword_1EEF5EB68);
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E01614(&qword_1EEF5EBB8, (uint64_t (*)(void))sub_1B1E01694, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_1B22297B4();
  if (v0)
    return swift_bridgeObjectRelease();
  if (v3)
    swift_bridgeObjectRelease();
  v2 = swift_bridgeObjectRetain();
  sub_1B1DF9248(v2, (void (*)(uint64_t, uint64_t, _OWORD *))sub_1B1E016D8);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B1DE6D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v1 = swift_bridgeObjectRetain();
  sub_1B1DF9248(v1, (void (*)(uint64_t, uint64_t, _OWORD *))sub_1B1E01504);
  swift_bridgeObjectRelease();
  if (v5[2])
  {
    swift_bridgeObjectRetain();
    v2 = swift_bridgeObjectRetain();
    v3 = sub_1B1DFFCB4(v2, v5);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 288) = v3;
    swift_bridgeObjectRelease_n();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE6E40(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  _QWORD v91[7];
  _QWORD *v92;
  __int128 v93;
  int *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v102 = a2;
  sub_1B1B1F358();
  v4 = v3;
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B222820C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B1B81574(MEMORY[0x1E0DEE9D8]);
  sub_1B1E01404();
  LOBYTE(v118) = 8;
  sub_1B19F8E54(0, &qword_1EEF5EA28, (uint64_t (*)(void))sub_1B1DFC474, (uint64_t)&_s7ContextC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1B1E01460();
  v108 = a1;
  v14 = v124;
  sub_1B22297B4();
  if (v14)
    return swift_bridgeObjectRelease();
  v98 = v7;
  v16 = v4;
  v17 = v102;
  v95 = v12;
  v96 = v9;
  v97 = v8;
  v18 = (_QWORD *)v109;
  if ((_QWORD)v109)
    swift_bridgeObjectRelease();
  else
    v18 = v13;
  v19 = v17;
  swift_bridgeObjectRetain();
  sub_1B1B80518(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  sub_1B1DFCDA0(0, &qword_1EEF5C5B8, (void (*)(uint64_t))_s11MetadataSetCMa);
  LOBYTE(v118) = 9;
  sub_1B1C22720();
  sub_1B22297B4();
  v94 = v16;
  v91[1] = 0;
  if ((_QWORD)v109)
    v92 = (_QWORD *)v109;
  else
    v92 = sub_1B1B80518(MEMORY[0x1E0DEE9D8]);
  v20 = -1 << *((_BYTE *)v18 + 32);
  v21 = v18[8];
  v22 = ~v20;
  v23 = -v20;
  v91[2] = v18;
  v118 = v18;
  v119 = v18 + 8;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v120 = v22;
  v121 = 0;
  v122 = v24 & v21;
  v123 = 0;
  sub_1B1DD65B0((uint64_t)&v109);
  v25 = v110;
  if (v110)
  {
    v26 = *((_QWORD *)&v109 + 1);
    v27 = v111;
    v91[6] = 0x80000001B233D1E0;
    v28 = v112;
    v29 = v113;
    v31 = v114;
    v30 = v115;
    v32 = v116;
    v124 = v117;
    v93 = xmmword_1B226D240;
    v91[5] = "): unable to connect ";
    v91[3] = 0x80000001B233D200;
    v91[4] = 0x80000001B233D220;
    while (1)
    {
      v106 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v19 + 16);
      swift_bridgeObjectRetain();
      v105 = v26;
      v107 = v31;
      v108 = v29;
      v103 = v32;
      if (v34)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1DC3B00(v26, v25);
        if ((v35 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          v27 = 8;
        }
        else
        {
          swift_bridgeObjectRelease();
          v36 = v108;
          if (*(_QWORD *)(v19 + 16))
          {
            swift_bridgeObjectRetain();
            sub_1B1DC3B00(v36, v31);
            if ((v37 & 1) != 0)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease_n();
              v30 = 8;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1B1DE5920(v30);
      v39 = v38;
      swift_bridgeObjectRelease();
      sub_1B1DE5514(v27);
      v41 = v40;
      swift_bridgeObjectRelease();
      if (!v39)
        break;
      v42 = v102;
      if (v41)
      {
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = v92;
        if (v92[2])
        {
          v44 = v41;
          v45 = *(_QWORD *)(v41 + 48);
          v46 = v44;
          v47 = *(_QWORD *)(v44 + 40);
          swift_bridgeObjectRetain();
          v48 = sub_1B1DC3B00(v47, v45);
          v19 = v42;
          if ((v49 & 1) != 0)
          {
            v50 = *(_QWORD *)(v43[7] + 8 * v48);
            swift_retain();
            swift_bridgeObjectRelease();
            v51 = *(_QWORD *)(v50 + 16);
            if (v51 && *(_QWORD *)(v51 + 16))
            {
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1B1DC3B00(1701536102, 0xE400000000000000);
              v53 = v52;
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              v53 = 0;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            v53 = 0;
          }
          v41 = v46;
        }
        else
        {
          v53 = 0;
          v19 = v42;
        }
        sub_1B1DDC488(v39, v41, v53 & 1);
        swift_release();
        swift_release_n();
        swift_release_n();
        goto LABEL_17;
      }
      v69 = qword_1ED4BF430;
      swift_retain();
      if (v69 != -1)
        swift_once();
      *(_QWORD *)&v109 = 0;
      *((_QWORD *)&v109 + 1) = 0xE000000000000000;
      v101 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v70 = v109;
      v71 = sub_1B2228E9C();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v103 = v39;
      v72 = qword_1ED4D0FD0;
      v73 = qword_1ED4BF688;
      swift_retain();
      v74 = v95;
      if (v73 != -1)
        swift_once();
      sub_1B1791524(0, (unint64_t *)&qword_1ED4BF700, (uint64_t (*)(uint64_t))sub_1B1BB9F44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = v93;
      *(_QWORD *)(v75 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v75 + 64) = sub_1B1B1F47C();
      *(_OWORD *)(v75 + 32) = v70;
      swift_bridgeObjectRetain();
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1B2228200();
      v76 = v94[12];
      v100 = v72;
      v77 = v94[16];
      v78 = v74;
      v79 = (uint64_t)v98;
      v80 = (__int128 *)&v98[v94[20]];
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v98, v78, v97);
      *(_BYTE *)(v79 + v76) = v71;
      *(_QWORD *)(v79 + v77) = 0;
      *v80 = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v79, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v81 = v104;
      if (*(_QWORD *)(*(_QWORD *)(v104 + 200) + 16))
      {
        v82 = v107;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1DC3B00(v108, v82);
        v66 = v102;
        if ((v83 & 1) != 0)
        {
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v109 = xmmword_1EEF5ECE0;
          swift_bridgeObjectRetain();
          sub_1B2228890();
          v84 = v109;
          v111 = MEMORY[0x1E0DEB418];
          *(_QWORD *)&v109 = 1;
          sub_1B1E02AF4(v84, *((uint64_t *)&v109 + 1), (uint64_t)&v109);
          swift_bridgeObjectRelease();
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRelease();
        v89 = v105;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v66 = v102;
        v89 = v105;
      }
      if (*(_QWORD *)(*(_QWORD *)(v81 + 200) + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B1DC3B00(v89, v25);
        if ((v90 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v109 = xmmword_1EEF5ECE0;
        swift_bridgeObjectRetain();
        sub_1B2228890();
        v33 = v109;
        v111 = MEMORY[0x1E0DEB418];
        *(_QWORD *)&v109 = 1;
        sub_1B1E02AF4(v33, *((uint64_t *)&v109 + 1), (uint64_t)&v109);
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
LABEL_16:
      v19 = v66;
LABEL_17:
      sub_1B1DD65B0((uint64_t)&v109);
      v26 = *((_QWORD *)&v109 + 1);
      v25 = v110;
      v27 = v111;
      v28 = v112;
      v29 = v113;
      v31 = v114;
      v30 = v115;
      v32 = v116;
      v124 = v117;
      if (!v110)
        goto LABEL_73;
    }
    v101 = v41;
    if (qword_1ED4BF430 != -1)
      swift_once();
    *(_QWORD *)&v109 = 0;
    *((_QWORD *)&v109 + 1) = 0xE000000000000000;
    v100 = qword_1ED4D0FB0;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    v54 = v109;
    v55 = sub_1B2228E9C();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v103 = v25;
    v56 = qword_1ED4D0FD0;
    v57 = qword_1ED4BF688;
    swift_retain();
    if (v57 != -1)
      swift_once();
    sub_1B1791524(0, (unint64_t *)&qword_1ED4BF700, (uint64_t (*)(uint64_t))sub_1B1BB9F44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = v93;
    *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v58 + 64) = sub_1B1B1F47C();
    *(_OWORD *)(v58 + 32) = v54;
    swift_bridgeObjectRetain();
    sub_1B222835C();
    swift_bridgeObjectRelease();
    swift_retain();
    v59 = v95;
    sub_1B2228200();
    v60 = v94[12];
    v99 = v56;
    v61 = v94[16];
    v62 = (uint64_t)v98;
    v63 = (__int128 *)&v98[v94[20]];
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v98, v59, v97);
    *(_BYTE *)(v62 + v60) = v55;
    *(_QWORD *)(v62 + v61) = 0;
    *v63 = v54;
    swift_bridgeObjectRetain();
    sub_1B2228428();
    swift_release();
    sub_1B1A04628(v62, (uint64_t (*)(_QWORD))sub_1B1B1F358);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v64 = v104;
    if (*(_QWORD *)(*(_QWORD *)(v104 + 200) + 16))
    {
      v65 = v107;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(v108, v65);
      v66 = v102;
      if ((v67 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v109 = xmmword_1EEF5ECE0;
        swift_bridgeObjectRetain();
        sub_1B2228890();
        v68 = v109;
        v111 = MEMORY[0x1E0DEB418];
        *(_QWORD *)&v109 = 1;
        sub_1B1E02AF4(v68, *((uint64_t *)&v109 + 1), (uint64_t)&v109);
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = v102;
    }
    v85 = v105;
    v86 = v103;
    if (*(_QWORD *)(*(_QWORD *)(v64 + 200) + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(v85, v86);
      if ((v87 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v109 = xmmword_1EEF5ECE0;
        swift_bridgeObjectRetain();
        sub_1B2228890();
        v88 = v109;
        v111 = MEMORY[0x1E0DEB418];
        *(_QWORD *)&v109 = 1;
        sub_1B1E02AF4(v88, *((uint64_t *)&v109 + 1), (uint64_t)&v109);
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_63:
        swift_release();
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_63;
  }
LABEL_73:
  sub_1B19F8D30();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE7F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (v7 + 1 >= v6)
      goto LABEL_21;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    if (!v10)
    {
      v9 = v7 + 2;
      if (v7 + 2 >= v6)
        goto LABEL_21;
      v10 = *(_QWORD *)(v2 + 8 * v9);
      if (!v10)
      {
        v9 = v7 + 3;
        if (v7 + 3 >= v6)
          goto LABEL_21;
        v10 = *(_QWORD *)(v2 + 8 * v9);
        if (!v10)
        {
          v9 = v7 + 4;
          if (v7 + 4 >= v6)
            goto LABEL_21;
          v10 = *(_QWORD *)(v2 + 8 * v9);
          if (!v10)
          {
            v9 = v7 + 5;
            if (v7 + 5 >= v6)
              goto LABEL_21;
            v10 = *(_QWORD *)(v2 + 8 * v9);
            if (!v10)
              break;
          }
        }
      }
    }
LABEL_20:
    v5 = (v10 - 1) & v10;
    v7 = v9;
LABEL_5:
    swift_bridgeObjectRetain();
    v8 = swift_retain();
    sub_1B1E00FB0(v8);
    swift_release();
    swift_bridgeObjectRelease();
  }
  while (v6 - 6 != v7)
  {
    v10 = *(_QWORD *)(v1 + 112 + 8 * v7++);
    if (v10)
    {
      v9 = v7 + 5;
      goto LABEL_20;
    }
  }
LABEL_21:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE80BC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1B1DF6020(v7, v8) & 1;
}

uint64_t sub_1B1DE8104()
{
  uint64_t result;

  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B1DD8198();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1DE8140(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;

  result = sub_1B1DE49EC(a3);
  if (v7)
  {
    v10 = result;
    v11 = v7;
    v12 = v8;
    v13 = v9;
    v14 = (_QWORD *)*a5;
    result = swift_isUniquelyReferenced_nonNull_native();
    *a5 = (uint64_t)v14;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B1C68BF8(0, v14[2] + 1, 1, v14);
      v14 = (_QWORD *)result;
      *a5 = result;
    }
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
    {
      result = (uint64_t)sub_1B1C68BF8(v15 > 1, v16 + 1, 1, v14);
      v14 = (_QWORD *)result;
      *a5 = result;
    }
    v14[2] = v16 + 1;
    v17 = &v14[4 * v16];
    v17[4] = v10;
    v17[5] = v11;
    v17[6] = v12;
    v17[7] = v13;
  }
  return result;
}

_QWORD *sub_1B1DE8210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v1 + 136) = 0;
  *(_QWORD *)(v1 + 144) = 0;
  *(_QWORD *)(v1 + 152) = 0;
  *(_BYTE *)(v1 + 160) = 1;
  swift_retain();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 168) = sub_1B1B7E154(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v1 + 176) = sub_1B1B7E168(v3);
  *(_QWORD *)(v1 + 184) = sub_1B1B7E17C(v3);
  *(_QWORD *)(v1 + 192) = sub_1B1B7E190(v3);
  *(_QWORD *)(v1 + 200) = sub_1B1B7E1A4(v3);
  *(_QWORD *)(v1 + 208) = sub_1B1B7E1B8(v3);
  *(_QWORD *)(v1 + 216) = sub_1B1B7E1CC(v3);
  *(_QWORD *)(v1 + 224) = sub_1B1B7E1E0(v3);
  *(_QWORD *)(v1 + 232) = sub_1B1B7E1F4(v3);
  *(_QWORD *)(v1 + 240) = sub_1B1B7E208(v3);
  *(_QWORD *)(v1 + 248) = sub_1B1B7E21C(v3);
  *(_QWORD *)(v1 + 256) = sub_1B1B7E230(v3);
  *(_QWORD *)(v1 + 264) = sub_1B1B7E378(v3);
  *(_QWORD *)(v1 + 272) = sub_1B1B7E38C(v3);
  *(_QWORD *)(v1 + 280) = sub_1B1B7E38C(v3);
  *(_QWORD *)(v1 + 288) = sub_1B1B7E3A0(v3);
  v4 = v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_onUserTemplatesChangedUUID;
  v5 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_switchCaseValuePrefix);
  *v6 = 0xD000000000000010;
  v6[1] = 0x80000001B233CF20;
  v7 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_templateRemapping;
  *(_QWORD *)(v1 + v7) = sub_1B1B7DF34((uint64_t)&unk_1E63A2BE0);
  swift_release();
  v8 = sub_1B1FBAEC4(0);
  swift_retain();
  sub_1B1DD8004(a1);
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1B1DE83B8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1A04628(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration7Context_onUserTemplatesChangedUUID, (uint64_t (*)(_QWORD))sub_1B1B28F74);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE8488()
{
  return _s7ContextCMa();
}

uint64_t _s7ContextCMa()
{
  uint64_t result;

  result = qword_1EEF5EA18;
  if (!qword_1EEF5EA18)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B1DE84CC()
{
  unint64_t v0;

  sub_1B1B28F74();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1B1DE8590()
{
  sub_1B2229430();
  sub_1B2228890();
  _s12ContextEntryCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s11ContextExitCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s10SubContextCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s15VariableSnippetCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s24VariableReferenceSnippetCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s20ArraySequenceSnippetCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s7ContextCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s11CodeSnippetCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s17CustomCodeSnippetCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s17TypedArraySnippetCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  _s19StaticSwitchSnippetCMa();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  type metadata accessor for GraphV1CodeGeneration.BaseObject();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1B9B510();
  swift_bridgeObjectRetain();
  sub_1B222853C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  return 0;
}

uint64_t sub_1B1DE8B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[5];

  v1 = v0;
  sub_1B1DCC5E8(*(_QWORD *)(v0 + 168));
  if (v3)
  {
    v4 = v2;
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 + 88);
    swift_bridgeObjectRetain();
    swift_release();
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v31[0] = MEMORY[0x1E0DEE9D8];
      sub_1B2029FFC(0, v6, 0);
      v7 = v31[0];
      v8 = v5 + 32;
      do
      {
        sub_1B19FA278(v8, (uint64_t)v32);
        sub_1B19F8C58(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
        v9 = sub_1B1E03DBC();
        v11 = v10;
        sub_1B19F8C58(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
        v31[0] = v7;
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1B2029FFC(v12 > 1, v13 + 1, 1);
          v7 = v31[0];
        }
        *(_QWORD *)(v7 + 16) = v13 + 1;
        v14 = v7 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v9;
        *(_QWORD *)(v14 + 40) = v11;
        v8 += 40;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v7 = MEMORY[0x1E0DEE9D8];
    }
    v31[0] = v7;
    v15 = MEMORY[0x1E0DEA968];
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1BCBBF8((unint64_t *)&qword_1ED4BA4A0, (unint64_t *)&qword_1ED4BA490, v15, MEMORY[0x1E0DEAF20]);
    sub_1B2228644();
    swift_bridgeObjectRelease();
  }
  sub_1B1DCC5E8(*(_QWORD *)(v1 + 176));
  if (v17)
  {
    v18 = v16;
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v18 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v30 = MEMORY[0x1E0DEE9D8];
      sub_1B2029FFC(0, v20, 0);
      v21 = v19 + 32;
      do
      {
        sub_1B19FA278(v21, (uint64_t)v31);
        sub_1B19F8C58(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
        v22 = sub_1B1E03DBC();
        v24 = v23;
        sub_1B19F8C58(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
        v26 = *(_QWORD *)(v30 + 16);
        v25 = *(_QWORD *)(v30 + 24);
        if (v26 >= v25 >> 1)
          sub_1B2029FFC(v25 > 1, v26 + 1, 1);
        *(_QWORD *)(v30 + 16) = v26 + 1;
        v27 = v30 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v22;
        *(_QWORD *)(v27 + 40) = v24;
        v21 += 40;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v28 = MEMORY[0x1E0DEA968];
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1BCBBF8((unint64_t *)&qword_1ED4BA4A0, (unint64_t *)&qword_1ED4BA490, v28, MEMORY[0x1E0DEAF20]);
    sub_1B2228644();
    swift_bridgeObjectRelease();
  }
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  return 40;
}

uint64_t sub_1B1DE8EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  char isUniquelyReferenced_nonNull_native;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  if (a1 == a6 && a2 == a7 || (sub_1B2229D24() & 1) != 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B1B89600(a3, a4, a5, a9, a10, isUniquelyReferenced_nonNull_native);
    *a8 = v23;
  }
  else
  {
    if (a3 == a6 && a4 == a7 || (sub_1B2229D24() & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = swift_isUniquelyReferenced_nonNull_native();
      v24 = *a8;
      *a8 = 0x8000000000000000;
      v20 = a9;
      v21 = a10;
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = swift_isUniquelyReferenced_nonNull_native();
      v24 = *a8;
      *a8 = 0x8000000000000000;
      v20 = a3;
      v21 = a4;
    }
    sub_1B1B89600(v20, v21, a5, a1, a2, v19);
    *a8 = v24;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE90C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83E5C(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 184);
  *(_QWORD *)(a8 + 184) = 0x8000000000000000;
  sub_1B1B89768(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 184) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE9244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83E70(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 192);
  *(_QWORD *)(a8 + 192) = 0x8000000000000000;
  sub_1B1B89784(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 192) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE93C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83E84(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 208);
  *(_QWORD *)(a8 + 208) = 0x8000000000000000;
  sub_1B1B897A0(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 208) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE953C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83E98(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 240);
  *(_QWORD *)(a8 + 240) = 0x8000000000000000;
  sub_1B1B897BC(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 240) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE96B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83EAC(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 248);
  *(_QWORD *)(a8 + 248) = 0x8000000000000000;
  sub_1B1B897D8(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 248) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE9834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83EC0(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 216);
  *(_QWORD *)(a8 + 216) = 0x8000000000000000;
  sub_1B1B897F4(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 216) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE99B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83ED4(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 224);
  *(_QWORD *)(a8 + 224) = 0x8000000000000000;
  sub_1B1B89810(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 224) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE9B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v13;
  swift_bridgeObjectRelease();
  sub_1B1B83E48(a1, a2);
  swift_release();
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a8 + 200);
  *(_QWORD *)(a8 + 200) = 0x8000000000000000;
  sub_1B1B8974C(a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a8 + 200) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v17, a1, a2, v19);
  *a9 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE9CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v23;
  uint64_t v24;

  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  sub_1B1B83D7C(v12, v13);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *(_QWORD *)(a4 + 168);
  *(_QWORD *)(a4 + 168) = 0x8000000000000000;
  sub_1B1B87A7C(a3, v15, v16, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a4 + 168) = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v19 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v24 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v19, a1, a2, v20);
  *a9 = v24;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DE9E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v23;
  uint64_t v24;

  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  sub_1B1B83D68(v12, v13);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B1A06460();
  *(_QWORD *)(a3 + 24) = sub_1B222922C();
  *(_QWORD *)(a3 + 32) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *(_QWORD *)(a4 + 176);
  *(_QWORD *)(a4 + 176) = 0x8000000000000000;
  sub_1B1B87A60(a3, v15, v16, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a4 + 176) = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 24);
  v19 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v24 = *a9;
  *a9 = 0x8000000000000000;
  sub_1B1B84788(v18, v19, a1, a2, v20);
  *a9 = v24;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEA018(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v23;
  uint64_t v24;

  sub_1B1A06460();
  a3[5] = sub_1B222922C();
  a3[6] = v12;
  swift_bridgeObjectRelease();
  if ((a8 & 1) != 0)
  {
    a3[3] = sub_1B222922C();
    a3[4] = v13;
    swift_bridgeObjectRelease();
  }
  sub_1B1B83D54(a1, a2);
  swift_release();
  v14 = a3[5];
  v15 = a3[6];
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *(_QWORD *)(a9 + 264);
  *(_QWORD *)(a9 + 264) = 0x8000000000000000;
  sub_1B1B87484((uint64_t)a3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a9 + 264) = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = a3[5];
  v18 = a3[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v24 = *a10;
  *a10 = 0x8000000000000000;
  sub_1B1B84788(v17, v18, a1, a2, v19);
  *a10 = v24;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEA20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v7 = *(_QWORD *)(a3 + 80);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v20 = a3;
    v21 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2029FFC(0, v8, 0);
    v9 = v21;
    sub_1B1A06460();
    v11 = v7 + 40;
    do
    {
      v12 = a7;
      v13 = sub_1B222922C();
      v15 = v14;
      v17 = *(_QWORD *)(v21 + 16);
      v16 = *(_QWORD *)(v21 + 24);
      if (v17 >= v16 >> 1)
        sub_1B2029FFC(v16 > 1, v17 + 1, 1);
      v11 += 16;
      *(_QWORD *)(v21 + 16) = v17 + 1;
      v18 = v21 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      --v8;
      a7 = v12;
    }
    while (v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v20;
  }
  *(_QWORD *)(a3 + 80) = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEA398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v7 = *(_QWORD *)(a3 + 40);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v20 = a3;
    v21 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2029FFC(0, v8, 0);
    v9 = v21;
    sub_1B1A06460();
    v11 = v7 + 40;
    do
    {
      v12 = a7;
      v13 = sub_1B222922C();
      v15 = v14;
      v17 = *(_QWORD *)(v21 + 16);
      v16 = *(_QWORD *)(v21 + 24);
      if (v17 >= v16 >> 1)
        sub_1B2029FFC(v16 > 1, v17 + 1, 1);
      v11 += 16;
      *(_QWORD *)(v21 + 16) = v17 + 1;
      v18 = v21 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      --v8;
      a7 = v12;
    }
    while (v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v20;
  }
  *(_QWORD *)(a3 + 40) = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEA524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  __int128 v23;

  swift_bridgeObjectRetain();
  v8 = sub_1B2228914();
  swift_bridgeObjectRetain();
  if ((v8 & 1) != 0)
  {
    sub_1B2228830();
    v9 = sub_1B1DCD8E8();
    v11 = v10;
    v13 = v12;
    v15 = v14;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1B5E20388](v9, v11, v13, v15);
    a2 = v16;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B1B9DC78(a3 + 56, (uint64_t)v22, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
  sub_1B1A0DDAC(v22, &v23);
  swift_dynamicCast();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *a4;
  *a4 = 0x8000000000000000;
  sub_1B1B84788(v20, v21, a1, a2, isUniquelyReferenced_nonNull_native);
  *a4 = v19;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEA6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v13 = *(_QWORD *)(a6 + 264);
  v14 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  if (v14)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1B1DC3B00(a1, a2);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
      swift_retain();
    }
    else
    {
      v17 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v18 = *(_QWORD *)(a6 + 264);
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_1B1DC3B00(a3, a4);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v21 = 0;
LABEL_13:
  v22 = *(_QWORD **)(swift_weakLoadStrong() + 80);
  swift_bridgeObjectRetain();
  swift_release();
  v23 = sub_1B1DB99B0(*(_QWORD *)(v21 + 24), *(_QWORD *)(v21 + 32), v22);
  swift_bridgeObjectRelease();
  v24 = a7[10] + 16 * v23;
  v25 = *(_QWORD *)(v24 + 32);
  v26 = *(_QWORD *)(v24 + 40);
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(*a7 + 1456);
  swift_bridgeObjectRetain();
  v28 = v27(v25, v26);
  swift_bridgeObjectRelease();
  if (v28)
  {
    swift_retain();
    v29 = swift_retain();
    sub_1B1DDC488(v29, v17, 0);
    swift_release();
    swift_release_n();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1B1DEA890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v11;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v11 = *(_QWORD *)(a6 + 264);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1B1DC3B00(a3, a4);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v14);
      swift_retain();
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v17 = *(_QWORD *)(a6 + 264);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_1B1DC3B00(a1, a2);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
      swift_retain();
    }
    else
    {
      v20 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v21 = *(_QWORD **)(swift_weakLoadStrong() + 40);
  swift_bridgeObjectRetain();
  swift_release();
  v22 = sub_1B1DB99B0(*(_QWORD *)(v20 + 24), *(_QWORD *)(v20 + 32), v21);
  swift_bridgeObjectRelease();
  v23 = a7[5] + 16 * v22;
  v24 = *(_QWORD *)(v23 + 32);
  v25 = *(_QWORD *)(v23 + 40);
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(*a7 + 1440);
  swift_bridgeObjectRetain();
  v27 = v26(v24, v25);
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_retain();
    swift_retain();
    sub_1B1DDC488(v16, v27, 0);
    swift_release();
    swift_release_n();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1B1DEAA58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 136) + 108);
  if (v3 == 2)
  {
    if (*(_BYTE *)(v1 + 160) != 1)
    {
      v4 = 0;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if ((*(_BYTE *)(v1 + 160) & 1) != 0)
  {
LABEL_5:
    v4 = 1;
    goto LABEL_7;
  }
  v4 = v3 & 1;
LABEL_7:
  *(_BYTE *)(v1 + 160) = v4;
  result = sub_1B1B24710(*(_BYTE *)(v1 + 24));
  if (v6)
  {
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v7 = *(_QWORD **)(v1 + 168);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 168) = v7;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B1C63044(0, v7[2] + 1, 1, v7);
      v7 = (_QWORD *)result;
      *(_QWORD *)(v2 + 168) = result;
    }
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
    {
      result = (uint64_t)sub_1B1C63044(v8 > 1, v9 + 1, 1, v7);
      v7 = (_QWORD *)result;
      *(_QWORD *)(v2 + 168) = result;
    }
    v7[2] = v9 + 1;
    v10 = &v7[2 * v9];
    v10[4] = 8201;
    v10[5] = 0xE200000000000000;
  }
  return result;
}

uint64_t sub_1B1DEAB74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(a1 + 128);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v42 = a1;
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228890();
      v4 = *(_QWORD **)(v36 + 128);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v36 + 128) = v4;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v4 = sub_1B1C63044(0, v4[2] + 1, 1, v4);
        *(_QWORD *)(v36 + 128) = v4;
      }
      v7 = v4[2];
      v6 = v4[3];
      if (v7 >= v6 >> 1)
      {
        v4 = sub_1B1C63044(v6 > 1, v7 + 1, 1, v4);
        *(_QWORD *)(v36 + 128) = v4;
      }
      v3 += 16;
      v4[2] = v7 + 1;
      v8 = &v4[2 * v7];
      v8[4] = 9;
      v8[5] = 0xE100000000000000;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    a1 = v42;
  }
  result = *(_QWORD *)(a1 + 144);
  v32 = *(_QWORD *)(result + 16);
  if (v32)
  {
    v31 = result + 32;
    swift_bridgeObjectRetain();
    v10 = 0;
    do
    {
      v34 = v10;
      v12 = (uint64_t *)(v31 + (v10 << 6));
      v14 = *v12;
      v13 = v12[1];
      v41 = v12[2];
      v43 = v12[3];
      v37 = v12[6];
      v38 = v12[4];
      v39 = v12[7];
      v40 = v12[5];
      v35 = *(_QWORD **)(v36 + 144);
      v33 = v35[2];
      if (v33)
      {
        v15 = v35 + 6;
        v16 = v35[2];
        while (1)
        {
          v17 = *v15;
          v18 = v15[1];
          v20 = v15[2];
          v19 = v15[3];
          v21 = v15[4];
          v22 = v15[5];
          v23 = *(v15 - 2) == v14 && *(v15 - 1) == v13;
          if (v23 || (sub_1B2229D24() & 1) != 0)
          {
            v24 = v17 == v41 && v18 == v43;
            if (v24 || (sub_1B2229D24() & 1) != 0)
            {
              v25 = v20 == v38 && v19 == v40;
              if (v25 || (sub_1B2229D24() & 1) != 0)
              {
                v26 = v21 == v37 && v22 == v39;
                if (v26 || (sub_1B2229D24() & 1) != 0)
                  break;
              }
            }
          }
          v15 += 8;
          if (!--v16)
            goto LABEL_37;
        }
      }
      else
      {
LABEL_37:
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v27 = v35;
        v28 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v36 + 144) = v35;
        if ((v28 & 1) == 0)
        {
          v27 = sub_1B1C637DC(0, v33 + 1, 1, v35);
          *(_QWORD *)(v36 + 144) = v27;
        }
        v30 = v27[2];
        v29 = v27[3];
        if (v30 >= v29 >> 1)
          v27 = sub_1B1C637DC(v29 > 1, v30 + 1, 1, v27);
        v27[2] = v30 + 1;
        v11 = &v27[8 * v30];
        v11[4] = v14;
        v11[5] = v13;
        v11[6] = v41;
        v11[7] = v43;
        v11[8] = v38;
        v11[9] = v40;
        v11[10] = v37;
        v11[11] = v39;
        *(_QWORD *)(v36 + 144) = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v10 = v34 + 1;
    }
    while (v34 + 1 != v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DEAF28(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + 104) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + 112) = v15;
  *(_QWORD *)(v7 + 120) = v15;
  *(_QWORD *)(v7 + 128) = v15;
  *(_QWORD *)(v7 + 136) = v15;
  *(_QWORD *)(v7 + 144) = v15;
  sub_1B1B7DF34(v15);
  *(_QWORD *)(v7 + 168) = v15;
  *(_QWORD *)(v7 + 176) = v15;
  *(_QWORD *)(v7 + 16) = a1;
  *(_BYTE *)(v7 + 24) = a2;
  *(_WORD *)(v7 + 25) = 1;
  *(_BYTE *)(v7 + 27) = 0;
  *(_QWORD *)(v7 + 32) = v15;
  *(_WORD *)(v7 + 40) = 1;
  *(_QWORD *)(v7 + 48) = v15;
  *(_QWORD *)(v7 + 56) = v15;
  *(_BYTE *)(v7 + 64) = a7;
  *(_BYTE *)(v7 + 65) = 1;
  *(_QWORD *)(v7 + 72) = 0;
  *(_QWORD *)(v7 + 80) = 0;
  *(_QWORD *)(v7 + 88) = a3;
  *(_QWORD *)(v7 + 96) = a4;
  *(_QWORD *)(v7 + 152) = a5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + 161) = a6;
  *(_BYTE *)(v7 + 160) = 0;
  return v7;
}

uint64_t sub_1B1DEAFE0(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 104) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 112) = v13;
  *(_QWORD *)(v6 + 120) = v13;
  *(_QWORD *)(v6 + 128) = v13;
  *(_QWORD *)(v6 + 136) = v13;
  *(_QWORD *)(v6 + 144) = v13;
  sub_1B1B7DF34(v13);
  v14 = a2[1];
  *(_OWORD *)(v6 + 24) = *a2;
  *(_OWORD *)(v6 + 40) = v14;
  v15 = a2[3];
  *(_OWORD *)(v6 + 56) = a2[2];
  *(_QWORD *)(v6 + 168) = v13;
  *(_QWORD *)(v6 + 176) = v13;
  *(_QWORD *)(v6 + 16) = a1;
  *(_OWORD *)(v6 + 72) = v15;
  *(_QWORD *)(v6 + 88) = a3;
  *(_QWORD *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 152) = a5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v6 + 161) = a6;
  *(_BYTE *)(v6 + 160) = 0;
  return v6;
}

uint64_t sub_1B1DEB07C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[3];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  _QWORD v65[5];
  _QWORD v66[6];
  __int128 v67;

  result = *(_QWORD *)(v0 + 176);
  v51 = *(_QWORD *)(result + 16);
  if (v51)
  {
    v2 = v0;
    v50 = result + 32;
    swift_bridgeObjectRetain_n();
    v3 = 0;
    v49 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      v4 = (uint64_t *)(v50 + 16 * v3);
      v5 = *v4;
      v6 = v4[1];
      swift_bridgeObjectRetain();
      swift_retain();
      v7 = sub_1B1DD8284(v5, v6);
      swift_release();
      v9 = *(_QWORD *)(v2 + 88);
      v8 = *(_QWORD *)(v2 + 96);
      v10 = *(_QWORD **)(v7 + 128);
      v11 = v10[2];
      if (v11)
      {
        v12 = v10[4] == v9 && v10[5] == v8;
        if (v12 || (sub_1B2229D24() & 1) != 0)
          goto LABEL_15;
        if (v11 != 1)
        {
          v25 = v10[6] == v9 && v10[7] == v8;
          if (v25 || (sub_1B2229D24() & 1) != 0)
            goto LABEL_15;
          if (v11 != 2)
          {
            v26 = v10[8] == v9 && v10[9] == v8;
            if (v26 || (sub_1B2229D24() & 1) != 0)
              goto LABEL_15;
            v27 = v11 - 2;
            v28 = v10 + 11;
            while (1)
            {
              v29 = v27 - 1;
              if (!v29)
                break;
              if (*(v28 - 1) != v9 || *v28 != v8)
              {
                v28 += 2;
                v47 = v29;
                v31 = sub_1B2229D24();
                v27 = v47;
                if ((v31 & 1) == 0)
                  continue;
              }
              goto LABEL_15;
            }
          }
        }
      }
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v7 + 128) = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v10 = sub_1B1C63044(0, v11 + 1, 1, v10);
        *(_QWORD *)(v7 + 128) = v10;
      }
      v15 = v10[2];
      v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        v10 = sub_1B1C63044(v14 > 1, v15 + 1, 1, v10);
        *(_QWORD *)(v7 + 128) = v10;
      }
      v10[2] = v15 + 1;
      v16 = &v10[2 * v15];
      v16[4] = v9;
      v16[5] = v8;
      swift_bridgeObjectRelease();
LABEL_15:
      v18 = v7 + 16;
      v17 = *(_QWORD *)(v7 + 16);
      v19 = MEMORY[0x1E0DEB940];
      if (!v17)
        goto LABEL_29;
      if (!*(_QWORD *)(v17 + 16))
      {
        v62 = 0;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v57 = 0u;
        swift_bridgeObjectRetain();
LABEL_28:
        sub_1B1A057EC((uint64_t)&v57, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
        swift_bridgeObjectRelease();
LABEL_29:
        v63 = 0u;
        v64 = 0u;
LABEL_30:
        sub_1B1A057EC((uint64_t)&v63, (uint64_t)&qword_1ED4BB150, v49, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
LABEL_31:
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      swift_bridgeObjectRetain();
      v20 = sub_1B1DC3B00(0xD000000000000010, 0x80000001B233CF40);
      if ((v21 & 1) == 0)
      {
        v62 = 0;
        v60 = 0u;
        v61 = 0u;
        v58 = 0u;
        v59 = 0u;
        v57 = 0u;
        goto LABEL_28;
      }
      sub_1B19F8F0C(*(_QWORD *)(v17 + 56) + 88 * v20, (uint64_t)&v57);
      if (!*((_QWORD *)&v57 + 1))
        goto LABEL_28;
      sub_1B19F8F0C((uint64_t)&v57, (uint64_t)&v53);
      sub_1B1A057EC((uint64_t)&v57, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
      swift_bridgeObjectRelease();
      sub_1B1B9DC78((uint64_t)v56 + 8, (uint64_t)&v63, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)v19, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
      sub_1B1A203C4((uint64_t)&v53);
      if (!*((_QWORD *)&v64 + 1))
        goto LABEL_30;
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_31;
      v22 = (_QWORD *)v57;
      v23 = *(_QWORD *)(v57 + 16);
      if (!v23)
      {
LABEL_55:
        swift_bridgeObjectRelease();
LABEL_56:
        v52[3] = MEMORY[0x1E0DEA968];
        v52[0] = 0;
        v52[1] = 0xE000000000000000;
        v32 = *(_QWORD *)v18;
        swift_bridgeObjectRetain();
        if (v32)
        {
          if (!*(_QWORD *)(v32 + 16))
            goto LABEL_58;
LABEL_62:
          swift_bridgeObjectRetain();
          sub_1B1DC3B00(1701667182, 0xE400000000000000);
          v35 = v34;
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0)
          {
            if (!*(_QWORD *)v18)
              goto LABEL_64;
            goto LABEL_59;
          }
        }
        else
        {
          *(_QWORD *)v18 = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
          swift_bridgeObjectRelease();
          v32 = *(_QWORD *)v18;
          if (*(_QWORD *)(*(_QWORD *)v18 + 16))
            goto LABEL_62;
LABEL_58:
          if (!v32)
          {
LABEL_64:
            *(_QWORD *)v18 = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
            swift_bridgeObjectRelease();
          }
LABEL_59:
          sub_1B1A02864((uint64_t)v52, (uint64_t)&v63);
          memset((char *)v56 + 8, 0, 32);
          *(_QWORD *)&v53 = 1701667182;
          *((_QWORD *)&v53 + 1) = 0xE400000000000000;
          sub_1B1E0E5B0(&v63, v65);
          sub_1B19FA278((uint64_t)v65, (uint64_t)&v54);
          sub_1B1A057EC((uint64_t)v56 + 8, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
          sub_1B1A0DDAC(&v63, (_OWORD *)((char *)v56 + 8));
          v59 = v55;
          v60 = v56[0];
          v61 = v56[1];
          v62 = *(_QWORD *)&v56[2];
          v57 = v53;
          v58 = v54;
          if (*((_QWORD *)&v53 + 1))
          {
            v55 = v59;
            v56[0] = v60;
            v56[1] = v61;
            *(_QWORD *)&v56[2] = v62;
            v53 = v57;
            v54 = v58;
            v33 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v63 = *(_QWORD *)v18;
            *(_QWORD *)v18 = 0x8000000000000000;
            sub_1B1B8440C((uint64_t)&v53, 1701667182, 0xE400000000000000, v33);
            *(_QWORD *)v18 = v63;
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1B1A057EC((uint64_t)&v57, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
            sub_1B1B8371C(1701667182, 0xE400000000000000, (uint64_t)&v53);
            sub_1B1A057EC((uint64_t)&v53, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
          }
        }
        v36 = *(_QWORD *)v18;
        if (*(_QWORD *)v18)
        {
          if (*(_QWORD *)(v36 + 16))
          {
            swift_bridgeObjectRetain();
            v37 = sub_1B1DC3B00(1701667182, 0xE400000000000000);
            if ((v38 & 1) != 0)
            {
              sub_1B19F8F0C(*(_QWORD *)(v36 + 56) + 88 * v37, (uint64_t)&v57);
              if (*((_QWORD *)&v57 + 1))
              {
                sub_1B19F8F0C((uint64_t)&v57, (uint64_t)&v53);
                sub_1B1A057EC((uint64_t)&v57, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
                swift_bridgeObjectRelease();
                sub_1B1B9DC78((uint64_t)v56 + 8, (uint64_t)&v63, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)v19, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
                sub_1B1A203C4((uint64_t)&v53);
                goto LABEL_75;
              }
            }
            else
            {
              v62 = 0;
              v60 = 0u;
              v61 = 0u;
              v58 = 0u;
              v59 = 0u;
              v57 = 0u;
            }
          }
          else
          {
            v62 = 0;
            v60 = 0u;
            v61 = 0u;
            v58 = 0u;
            v59 = 0u;
            v57 = 0u;
            swift_bridgeObjectRetain();
          }
          sub_1B1A057EC((uint64_t)&v57, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1B1A02758);
          swift_bridgeObjectRelease();
        }
        v63 = 0u;
        v64 = 0u;
LABEL_75:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v52);
        sub_1B1A0DDAC(&v63, &v57);
        swift_dynamicCast();
        v39 = *((_QWORD *)&v53 + 1);
        v48 = v53;
        v45 = sub_1B1FB4768();
        v41 = v40;
        *(_QWORD *)&v57 = 0;
        *((_QWORD *)&v57 + 1) = 0xE000000000000000;
        sub_1B2229430();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v57 = 0xD000000000000011;
        *((_QWORD *)&v57 + 1) = 0x80000001B233CF60;
        swift_bridgeObjectRetain();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        v66[0] = v5;
        v66[1] = v6;
        v66[2] = v48;
        v66[3] = v39;
        v66[4] = v45;
        v66[5] = v41;
        v67 = v57;
        sub_1B1E8E08C(v66);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_32:
        swift_release();
        goto LABEL_33;
      }
      v24 = *(_QWORD *)(v2 + 96);
      if (*(_QWORD *)(v57 + 32) != *(_QWORD *)(v2 + 88) || *(_QWORD *)(v57 + 40) != v24)
      {
        v46 = *(_QWORD *)(v2 + 88);
        if ((sub_1B2229D24() & 1) == 0)
        {
          if (v23 == 1)
            goto LABEL_55;
          if ((v22[6] != v46 || v22[7] != v24) && (sub_1B2229D24() & 1) == 0)
          {
            v42 = v23 - 2;
            if (!v42)
              goto LABEL_55;
            v43 = v22 + 9;
            while (1)
            {
              v44 = *(v43 - 1) == v46 && *v43 == v24;
              if (v44 || (sub_1B2229D24() & 1) != 0)
                break;
              v43 += 2;
              if (!--v42)
              {
                swift_bridgeObjectRelease();
                v19 = MEMORY[0x1E0DEB940];
                goto LABEL_56;
              }
            }
          }
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      if (++v3 == v51)
        return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1B1DEB97C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B1DEBA20()
{
  sub_1B1DEB97C();
  return swift_deallocClassInstance();
}

_QWORD *sub_1B1DEBA40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD *result;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[5];
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[6];
  uint64_t v36;

  v6 = *a1;
  v7 = *a1 + 56;
  sub_1B19FA278(v7, (uint64_t)v35);
  sub_1B19F8C58(v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  v8 = sub_1B1E03728();
  v10 = v9;
  result = sub_1B19F8C58(v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  if ((v10 & 1) != 0)
    return result;
  if (!(_BYTE)a2)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v32[0] = v8;
    v33 = sub_1B2229A0C();
    v34 = v15;
    sub_1B2228890();
    v13 = v33;
    v14 = v34;
    if (!(_BYTE)a2)
      goto LABEL_5;
LABEL_8:
    v16 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_15;
    goto LABEL_9;
  }
  v12 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_7;
  v13 = 0;
  v14 = 0xE000000000000000;
  if ((_BYTE)a2)
    goto LABEL_8;
LABEL_5:
  swift_bridgeObjectRelease();
LABEL_9:
  sub_1B19FA278(v7, (uint64_t)&v33);
  sub_1B19F8C58(&v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  sub_1B1E03DBC();
  v17 = sub_1B2228920();
  swift_bridgeObjectRelease();
  sub_1B19F8C58(&v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  if ((v17 & 1) == 0)
  {
    sub_1B19FA278(v7, (uint64_t)v32);
    sub_1B19F8C58(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    if (sub_1B1E03DBC() != 0x676E69727453 || v18 != 0xE600000000000000)
    {
      v19 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        goto LABEL_14;
      if (sub_1B1E03DBC() != 5001813 || v30 != 0xE300000000000000)
      {
        sub_1B2229D24();
        swift_bridgeObjectRelease();
        sub_1B19F8C58(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1B19F8C58(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  }
LABEL_15:
  v31[0] = v13;
  v31[1] = v14;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B1FC0A9C();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B19FA278(v7, (uint64_t)v31);
  sub_1B19F8C58(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  sub_1B1E03DBC();
  v20 = sub_1B2228920();
  swift_bridgeObjectRelease();
  sub_1B19F8C58(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  if ((v20 & 1) != 0)
  {
    v21 = *(_QWORD *)(v6 + 40);
    v22 = *(_QWORD *)(v6 + 48);
    swift_bridgeObjectRetain();
    v23 = sub_1B1DDD484(v21, v22, a2);
    swift_bridgeObjectRelease();
    sub_1B2228890();
    v36 = v23;
    sub_1B2229A0C();
    sub_1B2228890();
    swift_bridgeObjectRelease();
  }
  v24 = *a4;
  swift_retain();
  sub_1B2229430();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  v36 = *(_QWORD *)(*(_QWORD *)(*a4 + 128) + 16);
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD **)(v24 + 128);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v24 + 128) = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v25 = sub_1B1C63044(0, v25[2] + 1, 1, v25);
    *(_QWORD *)(v24 + 128) = v25;
  }
  v28 = v25[2];
  v27 = v25[3];
  if (v28 >= v27 >> 1)
  {
    v25 = sub_1B1C63044(v27 > 1, v28 + 1, 1, v25);
    *(_QWORD *)(v24 + 128) = v25;
  }
  v25[2] = v28 + 1;
  v29 = &v25[2 * v28];
  v29[4] = 0;
  v29[5] = 0xE000000000000000;
  swift_release();
  return (_QWORD *)swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEC230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD **a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD v27[5];
  _BYTE v28[8];
  uint64_t v29;
  _QWORD v30[6];

  v11 = *(_QWORD *)(a7 + 40);
  v12 = *(_QWORD *)(a7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v13 = swift_bridgeObjectRetain();
  sub_1B1DF6B30(v13, v11, v12, v27);
  swift_bridgeObjectRelease();
  sub_1B1A025EC((uint64_t)v27, (uint64_t)v28, (uint64_t (*)(_QWORD))sub_1B1E01C50);
  if (v29)
  {
    sub_1B19F8C58(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1E01C6C);
    swift_bridgeObjectRelease();
    v14 = *(_BYTE *)(*(_QWORD *)a9 + 24);
    sub_1B19FA278(a7 + 56, (uint64_t)v30);
    swift_retain();
    sub_1B19F8C58(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    swift_bridgeObjectRetain();
    v15 = sub_1B1FC0A9C();
    v17 = v16;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B1C39E78((uint64_t)v30, v15, v17, 0, v14);
    swift_bridgeObjectRelease();
    sub_1B19F8C58(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    sub_1B2228890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B1A06460();
    v18 = sub_1B222922C();
    v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = *a10;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a10 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v21 = sub_1B1C63044(0, v21[2] + 1, 1, v21);
      *a10 = v21;
    }
    v24 = v21[2];
    v23 = v21[3];
    if (v24 >= v23 >> 1)
    {
      v21 = sub_1B1C63044(v23 > 1, v24 + 1, 1, v21);
      *a10 = v21;
    }
    v21[2] = v24 + 1;
    v25 = &v21[2 * v24];
    v25[4] = v18;
    v25[5] = v20;
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B1DEC4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v34;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v12 = sub_1B2228914();
  swift_bridgeObjectRetain();
  if ((v12 & 1) != 0)
  {
    v13 = sub_1B1DCD8E8();
    v15 = v14;
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRelease();
    MEMORY[0x1B5E20388](v13, v15, v17, v19);
    swift_bridgeObjectRelease();
  }
  if (sub_1B2228830() == 1)
  {
    sub_1B22287B8();
    swift_bridgeObjectRelease();
  }
  sub_1B1D3724C();
  sub_1B2228890();
  sub_1B2228890();
  v34 = sub_1B1FC0A9C();
  v21 = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v39 = a6;
  *((_QWORD *)&v39 + 1) = a7;
  swift_bridgeObjectRetain();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v22 = sub_1B1D372EC(a6, a7);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(*(_QWORD *)(a8 + 256) + 16))
  {
    swift_release();
    goto LABEL_10;
  }
  v24 = v22[5];
  v23 = v22[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DC3B00(v24, v23);
  LOBYTE(v24) = v25;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
LABEL_10:
    v27 = *(_BYTE *)(*(_QWORD *)a9 + 24);
    swift_bridgeObjectRetain();
    sub_1B1E0E85C(a3, a4, (uint64_t *)&v36);
    v39 = v36;
    v40 = v37;
    v41 = v38;
    sub_1B1C39E78((uint64_t)&v39, v34, v21, 0, v27);
    swift_bridgeObjectRelease();
    sub_1B19F8C58(&v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
    goto LABEL_13;
  }
  v26 = *(unsigned __int8 *)(*(_QWORD *)a9 + 24);
  swift_bridgeObjectRetain();
  sub_1B1E0E85C(a3, a4, (uint64_t *)&v36);
  v39 = v36;
  v40 = v37;
  v41 = v38;
  if (v26 == 2)
  {
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B1C39C20((uint64_t)&v39, 2u);
    sub_1B2228890();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B1C39C20((uint64_t)&v39, v26);
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
  }
  swift_bridgeObjectRelease();
  sub_1B19F8C58(&v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
LABEL_13:
  swift_bridgeObjectRetain();
  sub_1B2228890();
  sub_1B1A06460();
  v28 = sub_1B222922C();
  v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a10 = v28;
  a10[1] = v30;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEC8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, _QWORD **a10, uint64_t *a11)
{
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __objc2_class **v27;
  __objc2_class **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  _QWORD *v75;
  int64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  char v109;
  unint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  char v114;
  unint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  BOOL v128;
  char v129;
  unint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  BOOL v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  BOOL v137;
  char v138;
  unint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  BOOL v142;
  _QWORD *v143;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __objc2_class **v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t Strong;
  int v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  char v166;
  _QWORD v167[5];
  _QWORD v168[5];
  _QWORD v169[5];
  uint64_t v170;
  unint64_t v171;
  uint64_t v172[5];
  __int128 v173;
  __int16 v174;
  uint64_t v175;
  uint64_t v176;
  __int16 v177;
  uint64_t v178;
  uint64_t v179;

  result = sub_1B1FB71E0(a1, a2);
  if (result)
  {
    v17 = (_QWORD *)result;
    v166 = 1;
    v18 = *(_QWORD *)(a6 + 256);
    if (!*(_QWORD *)(v18 + 16))
    {
LABEL_16:
      v29 = a6;
      v30 = a7;
      v31 = a3;
LABEL_17:
      sub_1B1DEDA84(&v166, v29, v30, v31, a4, v17);
      return swift_release();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1B1DC3B00(a3, a4);
    if ((v20 & 1) != 0)
    {
      v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 24 * v19);
      v22 = *v21;
      v23 = v21[1];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(a6 + 264);
      if (*(_QWORD *)(v24 + 16))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v25 = sub_1B1DC3B00(v22, v23);
        if ((v26 & 1) != 0)
        {
          v27 = *(__objc2_class ***)(*(_QWORD *)(v24 + 56) + 8 * v25);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*v27 == _TtCO3VFX21GraphV1CodeGeneration12ParameterOut)
            v28 = v27;
          else
            v28 = 0;
          if (*v27 != _TtCO3VFX21GraphV1CodeGeneration12ParameterOut)
          {
            swift_release();
            swift_release();
LABEL_11:
            swift_bridgeObjectRelease_n();
            goto LABEL_16;
          }
          Strong = swift_weakLoadStrong();
          if (!Strong)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            goto LABEL_16;
          }
          v159 = a3;
          v156 = v28;
          v161 = a8;
          swift_retain();
          v32 = swift_bridgeObjectRetain();
          v33 = sub_1B1E009B8(v32, (uint64_t)v27, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1B1E00810);
          swift_bridgeObjectRelease();
          swift_release();
          v34 = *(_QWORD *)(v33 + 16);
          swift_release();
          if (v34 != 1)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            swift_release();
            v29 = a6;
            v30 = a7;
            v31 = a3;
            goto LABEL_17;
          }
          v35 = sub_1B1FB34E8();
          if (sub_1B1FBAEF8(v35) == 0x65746E6F43627553 && v36 == 0xEA00000000007478)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v38 = sub_1B2229D24();
            swift_bridgeObjectRelease();
            if ((v38 & 1) == 0)
            {
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_11;
            }
          }
          v166 = 0;
          v39 = *(_QWORD *)a7;
          v40 = *(_QWORD *)(*(_QWORD *)a7 + 48);
          v41 = *(_QWORD *)(*(_QWORD *)a7 + 56);
          LOBYTE(v173) = v161;
          *(_WORD *)((char *)&v173 + 1) = 0;
          v42 = MEMORY[0x1E0DEE9D8];
          BYTE3(v173) = 0;
          *((_QWORD *)&v173 + 1) = MEMORY[0x1E0DEE9D8];
          v174 = 1;
          v175 = v40;
          v176 = v41;
          v177 = 257;
          v178 = 0;
          v179 = 0;
          v43 = *(_QWORD *)(v39 + 88);
          v44 = *(_QWORD *)(v39 + 96);
          v150 = v40;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v158 = a6;
          v45 = sub_1B1B7DF34(v42);
          _s7ContextC14GenerationDataCMa();
          v163 = a7;
          v46 = swift_allocObject();
          sub_1B1DEAFE0(v158, &v173, v43, v44, (uint64_t)v45, 0);
          v165 = v46;
          *(_QWORD *)(v46 + 136) = *(_QWORD *)a9;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v47 = (void *)sub_1B1DE28D0(&v165, Strong, 0);
          if (*(_QWORD *)(*(_QWORD *)a9 + 16) < *(_QWORD *)(*(_QWORD *)(v165 + 136) + 16))
          {
            if (*(_QWORD *)(*(_QWORD *)(v165 + 128) + 16))
            {
              v48 = sub_1B1E68E30();
              v50 = v49;
            }
            else
            {
              v48 = 0;
              v50 = 0;
            }
            v47 = sub_1B1C9110C(0, 0, v48, v50);
          }
          v51 = (*(uint64_t (**)(void *))(*(_QWORD *)Strong + 1424))(v47);
          sub_1B1DDD2A4(v163, v51);
          swift_bridgeObjectRelease();
          v52 = sub_1B1FC0A9C();
          v54 = v53;
          v55 = *a10;
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a10 = v55;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v55 = sub_1B1C63044(0, v55[2] + 1, 1, v55);
            *a10 = v55;
          }
          v58 = v55[2];
          v57 = v55[3];
          if (v58 >= v57 >> 1)
          {
            v55 = sub_1B1C63044(v57 > 1, v58 + 1, 1, v55);
            *a10 = v55;
          }
          v55[2] = v58 + 1;
          v59 = &v55[2 * v58];
          v59[4] = v52;
          v59[5] = v54;
          v164 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          swift_retain();
          swift_retain();
          v60 = swift_bridgeObjectRetain();
          v61 = sub_1B1C16E50(v60, v158, Strong);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_retain();
          sub_1B1DF83C4(v61, v158, &v164, v161);
          swift_release();
          swift_release();
          v62 = v164;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v62 = sub_1B1FFF040(v62);
          v63 = v62[2];
          v172[0] = (uint64_t)(v62 + 4);
          v172[1] = v63;
          sub_1B1DF3A70(v172);
          v164 = v62;
          swift_retain();
          swift_bridgeObjectRetain();
          v154 = sub_1B1FC0A9C();
          v65 = v64;
          swift_release();
          swift_bridgeObjectRelease();
          v66 = v62[2];
          v67 = MEMORY[0x1E0DEE9D8];
          v151 = v52;
          v152 = v54;
          if (v66)
          {
            v148 = v65;
            v172[0] = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1B2029FFC(0, v66, 0);
            v67 = v172[0];
            v68 = v62 + 5;
            do
            {
              v69 = *(v68 - 1);
              v70 = *v68;
              v172[0] = v67;
              v72 = *(_QWORD *)(v67 + 16);
              v71 = *(_QWORD *)(v67 + 24);
              swift_bridgeObjectRetain();
              if (v72 >= v71 >> 1)
              {
                sub_1B2029FFC(v71 > 1, v72 + 1, 1);
                v67 = v172[0];
              }
              v68 += 4;
              *(_QWORD *)(v67 + 16) = v72 + 1;
              v73 = v67 + 16 * v72;
              *(_QWORD *)(v73 + 32) = v69;
              *(_QWORD *)(v73 + 40) = v70;
              --v66;
            }
            while (v66);
            swift_bridgeObjectRelease();
            a3 = v159;
            v54 = v152;
            v65 = v148;
          }
          v74 = swift_isUniquelyReferenced_nonNull_native();
          v172[0] = *a11;
          *a11 = 0x8000000000000000;
          sub_1B1B85904(v67, v154, v65, v74);
          *a11 = v172[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = v164;
          v76 = v164[2];
          v77 = MEMORY[0x1E0DEE9D8];
          if (v76)
          {
            v172[0] = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1B2029FFC(0, v76, 0);
            v77 = v172[0];
            v78 = v75 + 7;
            do
            {
              v79 = *(v78 - 1);
              v80 = *v78;
              v172[0] = v77;
              v81 = *(_QWORD *)(v77 + 16);
              v82 = *(_QWORD *)(v77 + 24);
              swift_bridgeObjectRetain();
              if (v81 >= v82 >> 1)
              {
                sub_1B2029FFC(v82 > 1, v81 + 1, 1);
                v77 = v172[0];
              }
              *(_QWORD *)(v77 + 16) = v81 + 1;
              v83 = v77 + 16 * v81;
              *(_QWORD *)(v83 + 32) = v79;
              *(_QWORD *)(v83 + 40) = v80;
              v78 += 4;
              --v76;
            }
            while (v76);
            swift_bridgeObjectRelease();
            a3 = v159;
            v52 = v151;
            v54 = v152;
          }
          v149 = (uint64_t)(v17 + 7);
          sub_1B19FA278((uint64_t)(v17 + 7), (uint64_t)v172);
          sub_1B19F8C58(v172, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
          v84 = sub_1B1C39C20((uint64_t)v172, v161);
          v86 = v85;
          sub_1B19F8C58(v172, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
          sub_1B1C3A3C4(v52, v54, v150, v77, MEMORY[0x1E0DEE9D8], v84, v86, 0, 0, v161);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v87 = *(_QWORD *)v163;
          v170 = 8201;
          v171 = 0xE200000000000000;
          swift_retain();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v89 = v170;
          v88 = v171;
          v90 = *(_QWORD **)(v87 + 128);
          swift_bridgeObjectRetain();
          v91 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v87 + 128) = v90;
          if ((v91 & 1) == 0)
          {
            v90 = sub_1B1C63044(0, v90[2] + 1, 1, v90);
            *(_QWORD *)(v87 + 128) = v90;
          }
          v93 = v90[2];
          v92 = v90[3];
          a7 = v163;
          if (v93 >= v92 >> 1)
          {
            v90 = sub_1B1C63044(v92 > 1, v93 + 1, 1, v90);
            *(_QWORD *)(v87 + 128) = v90;
          }
          v90[2] = v93 + 1;
          v94 = &v90[2 * v93];
          v94[4] = v89;
          v94[5] = v88;
          swift_release();
          swift_bridgeObjectRelease();
          v95 = v165;
          swift_retain();
          v96 = swift_retain();
          sub_1B1DEAB74(v96);
          swift_release();
          v155 = v95;
          swift_release();
          sub_1B19FA278(v149, (uint64_t)&v170);
          sub_1B19FA278((uint64_t)(v156 + 7), (uint64_t)v169);
          sub_1B19F8C58(&v170, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
          sub_1B19F8C58(v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
          v97 = sub_1B1E03DBC();
          v99 = v98;
          if (v97 == sub_1B1E03DBC() && v99 == v100)
          {
            swift_bridgeObjectRelease_n();
            sub_1B19F8C58(v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
            sub_1B19F8C58(&v170, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
          }
          else
          {
            v101 = sub_1B2229D24();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B19F8C58(v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
            sub_1B19F8C58(&v170, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
            if ((v101 & 1) == 0)
            {
              sub_1B19FA278(v149, (uint64_t)v167);
              sub_1B19FA278((uint64_t)(v156 + 7), (uint64_t)v168);
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1B19F8C58(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
              sub_1B19F8C58(v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
              v102 = sub_1B1FC0A9C();
              v104 = v103;
              swift_release();
              swift_bridgeObjectRelease();
              sub_1B1DDCF30(v167, (uint64_t)v168, v102, v104, v161);
              v106 = v105;
              swift_bridgeObjectRelease();
              sub_1B19F8C58(v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
              sub_1B19F8C58(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
              if (v106)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v107 = *(_QWORD *)v163;
                swift_retain();
                goto LABEL_64;
              }
            }
          }
          v107 = *(_QWORD *)v163;
          swift_retain();
          sub_1B1FC0A9C();
          swift_bridgeObjectRelease();
LABEL_64:
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v108 = *(_QWORD **)(v107 + 128);
          swift_bridgeObjectRetain();
          v109 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v107 + 128) = v108;
          if ((v109 & 1) == 0)
          {
            v108 = sub_1B1C63044(0, v108[2] + 1, 1, v108);
            *(_QWORD *)(v107 + 128) = v108;
          }
          v111 = v108[2];
          v110 = v108[3];
          if (v111 >= v110 >> 1)
          {
            v108 = sub_1B1C63044(v110 > 1, v111 + 1, 1, v108);
            *(_QWORD *)(v107 + 128) = v108;
          }
          v108[2] = v111 + 1;
          v112 = &v108[2 * v111];
          v112[4] = 0x7275746572200909;
          v112[5] = 0xEA0000000000206ELL;
          swift_release();
          swift_bridgeObjectRelease();
          v113 = *(_QWORD *)v163;
          if ((_BYTE)v161 && v161 != 1)
          {
            swift_retain();
            swift_bridgeObjectRelease();
          }
          else
          {
            v114 = sub_1B2229D24();
            swift_retain();
            swift_bridgeObjectRelease();
            if ((v114 & 1) == 0)
            {
              sub_1B2228890();
              swift_bridgeObjectRelease();
              v116 = 2099281161;
              v115 = 0xE400000000000000;
LABEL_74:
              v117 = *(_QWORD **)(v113 + 128);
              swift_bridgeObjectRetain();
              v118 = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v113 + 128) = v117;
              if ((v118 & 1) == 0)
              {
                v117 = sub_1B1C63044(0, v117[2] + 1, 1, v117);
                *(_QWORD *)(v113 + 128) = v117;
              }
              v120 = v117[2];
              v119 = v117[3];
              if (v120 >= v119 >> 1)
              {
                v117 = sub_1B1C63044(v119 > 1, v120 + 1, 1, v117);
                *(_QWORD *)(v113 + 128) = v117;
              }
              v117[2] = v120 + 1;
              v121 = &v117[2 * v120];
              v121[4] = v116;
              v121[5] = v115;
              swift_release();
              swift_bridgeObjectRelease();
              v157 = *(_QWORD *)(v155 + 136);
              v162 = *(_QWORD *)(v157 + 16);
              if (!v162)
              {
                swift_bridgeObjectRetain();
                swift_release();
                swift_release();
LABEL_143:
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                a6 = v158;
                goto LABEL_16;
              }
              swift_bridgeObjectRetain_n();
              v122 = 0;
              while (1)
              {
                v123 = (uint64_t *)(v157 + 32 + 16 * v122);
                v125 = *v123;
                v124 = v123[1];
                v126 = *(_QWORD **)a9;
                v127 = *(_QWORD *)(*(_QWORD *)a9 + 16);
                if (v127)
                {
                  v128 = v126[4] == v125 && v126[5] == v124;
                  if (v128 || (sub_1B2229D24() & 1) != 0)
                  {
LABEL_99:
                    swift_bridgeObjectRetain();
                    goto LABEL_100;
                  }
                  if (v127 != 1)
                  {
                    v133 = v126[6] == v125 && v126[7] == v124;
                    if (v133 || (sub_1B2229D24() & 1) != 0)
                      goto LABEL_99;
                    v145 = v127 - 2;
                    if (v127 != 2)
                    {
                      if (v126[8] == v125 && v126[9] == v124 || (sub_1B2229D24() & 1) != 0)
                        goto LABEL_99;
                      v146 = v126 + 11;
                      while (--v145)
                      {
                        if (*(v146 - 1) != v125 || *v146 != v124)
                        {
                          v146 += 2;
                          if ((sub_1B2229D24() & 1) == 0)
                            continue;
                        }
                        goto LABEL_99;
                      }
                    }
                  }
                }
                swift_bridgeObjectRetain_n();
                v129 = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)a9 = v126;
                if ((v129 & 1) == 0)
                {
                  v126 = sub_1B1C63044(0, v127 + 1, 1, v126);
                  *(_QWORD *)a9 = v126;
                }
                v131 = v126[2];
                v130 = v126[3];
                if (v131 >= v130 >> 1)
                {
                  v126 = sub_1B1C63044(v130 > 1, v131 + 1, 1, v126);
                  *(_QWORD *)a9 = v126;
                }
                v126[2] = v131 + 1;
                v132 = &v126[2 * v131];
                v132[4] = v125;
                v132[5] = v124;
LABEL_100:
                v134 = *(_QWORD *)v163;
                v135 = *(_QWORD **)(*(_QWORD *)v163 + 136);
                v136 = v135[2];
                if (!v136)
                  goto LABEL_107;
                v137 = v135[4] == v125 && v135[5] == v124;
                if (!v137 && (sub_1B2229D24() & 1) == 0)
                {
                  if (v136 == 1)
                    goto LABEL_107;
                  v142 = v135[6] == v125 && v135[7] == v124;
                  if (!v142 && (sub_1B2229D24() & 1) == 0)
                  {
                    if (v136 == 2)
                      goto LABEL_107;
                    if (v135[8] != v125 || v135[9] != v124)
                    {
                      v153 = v136 - 2;
                      if ((sub_1B2229D24() & 1) == 0)
                      {
                        v143 = v135 + 11;
                        while (v153 != 1)
                        {
                          --v153;
                          if (*(v143 - 1) != v125 || *v143 != v124)
                          {
                            v143 += 2;
                            if ((sub_1B2229D24() & 1) == 0)
                              continue;
                          }
                          goto LABEL_80;
                        }
LABEL_107:
                        swift_bridgeObjectRetain();
                        swift_retain();
                        v138 = swift_isUniquelyReferenced_nonNull_native();
                        *(_QWORD *)(v134 + 136) = v135;
                        if ((v138 & 1) == 0)
                        {
                          v135 = sub_1B1C63044(0, v136 + 1, 1, v135);
                          *(_QWORD *)(v134 + 136) = v135;
                        }
                        v140 = v135[2];
                        v139 = v135[3];
                        if (v140 >= v139 >> 1)
                        {
                          v135 = sub_1B1C63044(v139 > 1, v140 + 1, 1, v135);
                          *(_QWORD *)(v134 + 136) = v135;
                        }
                        v135[2] = v140 + 1;
                        v141 = &v135[2 * v140];
                        v141[4] = v125;
                        v141[5] = v124;
                        swift_bridgeObjectRelease();
                        swift_release();
                        goto LABEL_81;
                      }
                    }
                  }
                }
LABEL_80:
                swift_bridgeObjectRelease();
LABEL_81:
                if (++v122 == v162)
                {
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  a7 = v163;
                  goto LABEL_143;
                }
              }
            }
          }
          v115 = 0xE200000000000000;
          v116 = 32009;
          goto LABEL_74;
        }
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

_BYTE *sub_1B1DEDA84(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t inited;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  if (*result == 1)
  {
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B226D240;
    *(_QWORD *)(inited + 32) = a4;
    *(_QWORD *)(inited + 40) = a5;
    v30 = a5;
    swift_bridgeObjectRetain();
    sub_1B1DDD2A4(a3, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_1B201D450((uint64_t)&v32);
    v31 = (uint64_t *)a3;
    if (*((_QWORD *)&v32 + 1))
    {
      v40 = v34;
      v41 = v35;
      v42 = v36;
      v43 = v37;
      v38 = v32;
      v39 = v33;
      sub_1B19F8F0C((uint64_t)&v38, (uint64_t)&v32);
      v11 = sub_1B1C67FF4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        v11 = sub_1B1C67FF4(v12 > 1, v13 + 1, 1, v11);
      v11[2] = v13 + 1;
      v14 = &v11[11 * v13];
      v15 = v33;
      *((_OWORD *)v14 + 2) = v32;
      *((_OWORD *)v14 + 3) = v15;
      v16 = v34;
      v17 = v35;
      v18 = v36;
      v14[14] = v37;
      *((_OWORD *)v14 + 5) = v17;
      *((_OWORD *)v14 + 6) = v18;
      *((_OWORD *)v14 + 4) = v16;
      sub_1B1A203C4((uint64_t)&v38);
    }
    else
    {
      sub_1B1A057EC((uint64_t)&v32, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
      sub_1B19FA278((uint64_t)(a6 + 7), (uint64_t)&v32);
      sub_1B19F8C58(&v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
      sub_1B1E02E1C(&v32, 1, (uint64_t)&v38);
      sub_1B19F8C58(&v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      v11 = sub_1B1C67FF4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v20 = v11[2];
      v19 = v11[3];
      if (v20 >= v19 >> 1)
        v11 = sub_1B1C67FF4(v19 > 1, v20 + 1, 1, v11);
      v11[2] = v20 + 1;
      v21 = &v11[11 * v20];
      *((_OWORD *)v21 + 4) = v40;
      *((_OWORD *)v21 + 5) = v41;
      *((_OWORD *)v21 + 6) = v42;
      v21[14] = v43;
      *((_OWORD *)v21 + 2) = v38;
      *((_OWORD *)v21 + 3) = v39;
    }
    v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v22 + 32) = a4;
    *(_QWORD *)(v22 + 40) = v30;
    sub_1B1A02758(0, (unint64_t *)&unk_1EEF5CBD0, (uint64_t)&_s12MetadataTypeON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = xmmword_1B226D240;
    v25 = a6[7];
    v24 = a6[8];
    v26 = a6[9];
    v27 = a6[10];
    v28 = a6[11];
    *(_QWORD *)(v23 + 32) = v25;
    *(_QWORD *)(v23 + 40) = v24;
    *(_QWORD *)(v23 + 48) = v26;
    *(_QWORD *)(v23 + 56) = v27;
    *(_QWORD *)(v23 + 64) = v28;
    swift_bridgeObjectRetain();
    sub_1B19FA2B4(v25, v24);
    v29 = sub_1B1C51740((uint64_t)v11);
    swift_bridgeObjectRelease();
    sub_1B1DDD798(v31, v22, v23, v29);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_setDeallocating();
    return (_BYTE *)swift_arrayDestroy();
  }
  return result;
}

uint64_t sub_1B1DEDE28(uint64_t result, uint64_t a2, _QWORD *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD v39[7];

  v5 = v4;
  v6 = *(_QWORD *)(a2 + 264);
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = *(_QWORD *)(result + 16);
    v10 = *(_QWORD *)(result + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1B1DC3B00(v9, v10);
    if ((v12 & 1) != 0)
    {
      v39[6] = v5;
      v13 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v11);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = *a3;
      v15 = *(_QWORD *)(*a3 + 16);
      v38 = a3;
      if (v15)
      {
        swift_bridgeObjectRetain_n();
        v16 = v14 + 56;
        while (1)
        {
          v18 = *(_QWORD *)(v16 - 24);
          v17 = *(_QWORD *)(v16 - 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v19 = sub_1B1FC0A9C();
          v21 = v20;
          swift_bridgeObjectRelease();
          if (v18 == v19 && v17 == v21)
            break;
          v23 = sub_1B2229D24();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v23 & 1) != 0)
            goto LABEL_19;
          v16 += 32;
          if (!--v15)
          {
            swift_bridgeObjectRelease_n();
            a3 = v38;
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease_n();
        return swift_release();
      }
      else
      {
LABEL_12:
        swift_bridgeObjectRetain();
        v24 = sub_1B1FC0A9C();
        v26 = v25;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v27 = sub_1B1FC0A9C();
        v29 = v28;
        swift_bridgeObjectRelease();
        sub_1B19FA278(v13 + 56, (uint64_t)v39);
        sub_1B19F8C58(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
        v30 = sub_1B1C469E4(v27, v29, (uint64_t)v39, a4);
        v32 = v31;
        sub_1B19F8C58(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
        swift_bridgeObjectRelease();
        v33 = (_QWORD *)*a3;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a3 = v33;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v33 = sub_1B1C68C14(0, v33[2] + 1, 1, v33);
          *a3 = v33;
        }
        v36 = v33[2];
        v35 = v33[3];
        if (v36 >= v35 >> 1)
        {
          v33 = sub_1B1C68C14(v35 > 1, v36 + 1, 1, v33);
          *v38 = v33;
        }
        v33[2] = v36 + 1;
        v37 = &v33[4 * v36];
        v37[4] = v24;
        v37[5] = v26;
        v37[6] = v30;
        v37[7] = v32;
        return swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B1DEE114(uint64_t *a1, uint64_t a2, uint64_t *a3, unsigned __int8 a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = *a1;
  v8 = a1[1];
  v9 = *a3;
  v10 = *(_QWORD *)(*a3 + 16);
  swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_4:
    v14 = a4;
    if (!a4)
      goto LABEL_8;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1B1DC3B00(v7, v8);
  if ((v12 & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B19F48F0(v13);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  v14 = a4;
  if (!a4)
    goto LABEL_8;
LABEL_5:
  if (v14 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_8:
  sub_1B2229D24();
  swift_bridgeObjectRelease();
LABEL_10:
  v15 = MEMORY[0x1E0DEA968];
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B1BCBBF8((unint64_t *)&qword_1ED4BA4A0, (unint64_t *)&qword_1ED4BA490, v15, MEMORY[0x1E0DEAF20]);
  sub_1B2228644();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B1A06460();
  v16 = sub_1B222922C();
  v18 = v17;
  swift_bridgeObjectRelease();
  *a5 = v16;
  a5[1] = v18;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEE37C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1B1DF5860(a1, (uint64_t)sub_1B1DF5EEC, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B1DEE3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v21[2];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v24 = 0;
  v25 = 0xE000000000000000;
  v23 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v22 = 0;
  *((_QWORD *)&v22 + 1) = 0xE000000000000000;
  sub_1B1E02D58(1701667182, 0xE400000000000000, (uint64_t)&v22, v21);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v22);
  sub_1B1A0DDAC(v21, &v22);
  swift_dynamicCast();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  v10 = sub_1B2228914();
  swift_bridgeObjectRetain();
  if ((v10 & 1) != 0)
  {
    sub_1B2228830();
    v11 = sub_1B1DCD8E8();
    v13 = v12;
    v15 = v14;
    v17 = v16;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1B5E20388](v11, v13, v15, v17);
    a2 = v18;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v22 = *a5;
  *a5 = 0x8000000000000000;
  sub_1B1B84788(a3, a4, a1, a2, isUniquelyReferenced_nonNull_native);
  *a5 = v22;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEE5C0(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v3 = *(_QWORD *)(a2 + 256);
  if (*(_QWORD *)(v3 + 16))
  {
    v6 = *(_QWORD *)result;
    v7 = *(_QWORD *)(*(_QWORD *)result + 40);
    v8 = *(_QWORD *)(*(_QWORD *)result + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1B1DC3B00(v7, v8);
    if ((v10 & 1) != 0)
    {
      v11 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 24 * v9);
      v13 = *v11;
      v12 = v11[1];
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1E01CB8(v13, v12);
      if (!*(_QWORD *)(*(_QWORD *)(a2 + 264) + 16))
        return swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(v13, v12);
      if ((v14 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!swift_weakLoadStrong())
          return swift_release();
        v15 = sub_1B1FB3808(0x746C7561666564, 0xE700000000000000);
        if (v15)
        {
          v16 = v15;
          sub_1B1E02C04(0x65756C6176, 0xE500000000000000, &v23);
          if (!v24)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            return sub_1B1A057EC((uint64_t)&v23, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
          }
          if ((swift_dynamicCast() & 1) != 0)
          {
            v17 = *(_QWORD *)(v6 + 32);
            v22 = *(_QWORD *)(v6 + 24);
            v18 = v16 + 16 * v25;
            v20 = *(_QWORD *)(v18 + 32);
            v19 = *(_QWORD *)(v18 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v23 = *a3;
            *a3 = 0x8000000000000000;
            sub_1B1B84788(v20, v19, v22, v17, isUniquelyReferenced_nonNull_native);
            *a3 = v23;
            swift_release();
            swift_release();
            goto LABEL_12;
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        return swift_release();
      }
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DEE870(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t result;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v9 = *a1;
  v10 = a1[1];
  sub_1B1A06460();
  if ((sub_1B2229274() & 1) == 0)
  {
    v20 = sub_1B1E27F14(v9, v10);
    if ((*(_BYTE *)(*(_QWORD *)a4 + 161) & 1) != 0
      || (swift_retain(), v36 = sub_1B1DF7E14(a5, (uint64_t)v20), swift_release(), (v36 & 1) != 0))
    {
      v37 = swift_retain();
      MEMORY[0x1B5E2064C](v37);
      if (*(_QWORD *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1B2228AF4();
      sub_1B2228B30();
      sub_1B2228AD0();
    }
    return swift_release();
  }
  v41 = a4;
  v40 = a5;
  v42 = a6;
  v11 = (_QWORD *)sub_1B2229280();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1B1DF9728(v12, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v13 << 6;
  v15 = *a2 + (v13 << 6);
  v16 = *(_QWORD *)(v15 + 48);
  v17 = *(_QWORD *)(v15 + 56);
  v18 = *(_BYTE *)(v15 + 88);
  swift_bridgeObjectRetain();
  sub_1B19FA2B4(v16, v17);
  swift_bridgeObjectRelease();
  result = sub_1B19F9FEC(v16, v17);
  if ((v18 & 1) == 0)
  {
    v21 = (_QWORD *)*a2;
    v22 = (_QWORD *)(*a2 + v14);
    v23 = v22[4];
    v24 = v22[5];
    v25 = v22[6];
    v26 = v22[7];
    v27 = v22[8];
    v28 = v22[9];
    v29 = v22[10];
    swift_bridgeObjectRetain();
    sub_1B19FA2B4(v25, v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_1B1FFEF60(v21);
    *((_BYTE *)v21 + v14 + 88) = 1;
    *a2 = v21;
    v31 = sub_1B1E280AC();
    v33 = v32;
    _s12ParameterOutCMa();
    v34 = (_QWORD *)swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v34[3] = v23;
    v34[4] = v24;
    v34[5] = v31;
    v34[6] = v33;
    v34[7] = v25;
    v34[8] = v26;
    v34[9] = v27;
    v34[10] = v28;
    v34[11] = v29;
    if ((*(_BYTE *)(*(_QWORD *)v41 + 161) & 1) != 0)
    {
      v35 = v42;
    }
    else
    {
      swift_retain();
      v38 = sub_1B1DF7C04(v40);
      swift_release();
      v35 = v42;
      if ((v38 & 1) == 0)
        return swift_release();
    }
    v39 = swift_retain();
    MEMORY[0x1B5E2064C](v39);
    if (*(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1DEEC08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5EC90, (uint64_t (*)(void))sub_1B1E02388, (uint64_t)&_s7ContextC14AssignmentInfoV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E02388();
  sub_1B222A180();
  v16 = 0;
  sub_1B2229910();
  if (!v2)
  {
    v15 = *(_BYTE *)(v3 + 16);
    v14 = 1;
    sub_1B1E023CC();
    sub_1B2229958();
    v13 = 2;
    sub_1B2229910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B1DEED78(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1DEEDA4 + 4 * byte_1B22956C6[a1]))(7890025, 0xE300000000000000);
}

uint64_t sub_1B1DEEDA4()
{
  return 0x6574616C706D6574;
}

uint64_t sub_1B1DEEE44()
{
  return 0x6D655464656B6162;
}

uint64_t sub_1B1DEEE68()
{
  return 0x656D6E6769737361;
}

unint64_t sub_1B1DEEE8C()
{
  return 0xD000000000000016;
}

uint64_t sub_1B1DEEEA4()
{
  return 0x7374657070696E73;
}

unint64_t sub_1B1DEEEBC()
{
  return 0xD000000000000014;
}

unint64_t sub_1B1DEEEC8()
{
  return 0xD000000000000014;
}

void sub_1B1DEEED4()
{
  JUMPOUT(0x1B1DEEEE8);
}

uint64_t sub_1B1DEEEF4()
{
  return 0x656A624F72657375;
}

uint64_t sub_1B1DEEF14()
{
  return 0x656C626169726176;
}

uint64_t sub_1B1DEEF50(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1DEEF7C + 4 * byte_1B22956D7[a1]))(7890025, 0xE300000000000000);
}

uint64_t sub_1B1DEEF7C()
{
  return 0x6574616C706D6574;
}

uint64_t sub_1B1DEF01C()
{
  return 0x6D655464656B6162;
}

uint64_t sub_1B1DEF040()
{
  return 0x656D6E6769737361;
}

unint64_t sub_1B1DEF064()
{
  return 0xD000000000000016;
}

uint64_t sub_1B1DEF07C()
{
  return 0x7374657070696E73;
}

unint64_t sub_1B1DEF094()
{
  return 0xD000000000000014;
}

unint64_t sub_1B1DEF0A0()
{
  return 0xD000000000000014;
}

void sub_1B1DEF0AC()
{
  JUMPOUT(0x1B1DEF0C0);
}

uint64_t sub_1B1DEF0CC()
{
  return 0x656A624F72657375;
}

uint64_t sub_1B1DEF0EC()
{
  return 0x656C626169726176;
}

uint64_t sub_1B1DEF128(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F95C18(*a1, *a2);
}

uint64_t sub_1B1DEF134()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6570795465736162;
  if (*v0 != 1)
    v1 = 0x6574656D61726170;
  if (*v0)
    return v1;
  else
    return 0x44495565736162;
}

uint64_t sub_1B1DEF19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1DF66E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1DEF1C0()
{
  sub_1B1E02388();
  return sub_1B222A1D4();
}

uint64_t sub_1B1DEF1E8()
{
  sub_1B1E02388();
  return sub_1B222A1E0();
}

uint64_t sub_1B1DEF210()
{
  uint64_t v0;
  unsigned __int8 v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_1B222A06C();
  sub_1B2228824();
  sub_1B1FBAEF8(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  sub_1B2228824();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DEF2A8()
{
  uint64_t v0;
  unsigned __int8 v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_1B2228824();
  sub_1B1FBAEF8(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B2228824();
}

uint64_t sub_1B1DEF310()
{
  uint64_t v0;
  unsigned __int8 v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_1B222A06C();
  sub_1B2228824();
  sub_1B1FBAEF8(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  sub_1B2228824();
  return sub_1B222A0C0();
}

double sub_1B1DEF3A4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1B1E00B70(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B1DEF3E8(_QWORD *a1)
{
  return sub_1B1DEEC08(a1);
}

uint64_t sub_1B1DEF3FC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1B1DF5F20((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1B1DEF444(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1B1DEEF50(*a1);
  v5 = v4;
  if (v3 == sub_1B1DEEF50(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B1DEF4CC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1DEED78(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DEF52C()
{
  unsigned __int8 *v0;

  sub_1B1DEED78(*v0);
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DEF56C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1DEED78(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1DEF5C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1DF6698();
  *a1 = result;
  return result;
}

uint64_t sub_1B1DEF5F4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1DEED78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1DEF61C()
{
  unsigned __int8 *v0;

  return sub_1B1DEEF50(*v0);
}

uint64_t sub_1B1DEF624@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1DF6698();
  *a1 = result;
  return result;
}

uint64_t sub_1B1DEF648()
{
  sub_1B1DFC474();
  return sub_1B222A1D4();
}

uint64_t sub_1B1DEF670()
{
  sub_1B1DFC474();
  return sub_1B222A1E0();
}

uint64_t sub_1B1DEF698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v4 = sub_1B1DE5CB4(a3);
  v6 = v4;
  v7 = v5;
  if (v4)
  {
    v8 = v4[2];
    if (v8)
    {
      v35 = v5;
      swift_bridgeObjectRetain();
      v9 = v6 + 5;
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        v12 = sub_1B2228920();
        swift_bridgeObjectRetain();
        if ((v12 & 1) != 0)
        {
          sub_1B2228830();
          sub_1B2228854();
          v13 = sub_1B2228974();
          v15 = v14;
          v17 = v16;
          v19 = v18;
          swift_bridgeObjectRelease();
          v10 = MEMORY[0x1B5E20388](v13, v15, v17, v19);
          v11 = v20;
          swift_bridgeObjectRelease();
        }
        v9 += 13;
        swift_retain();
        sub_1B1FB9650(v10, v11);
        swift_bridgeObjectRelease();
        swift_release();
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      v7 = v35;
    }
  }
  if (v7)
  {
    v21 = *(_QWORD *)(v7 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain();
      v22 = (uint64_t *)(v7 + 40);
      do
      {
        v23 = *(v22 - 1);
        v24 = *v22;
        v25 = sub_1B2228920();
        swift_bridgeObjectRetain();
        if ((v25 & 1) != 0)
        {
          sub_1B2228830();
          sub_1B2228854();
          v26 = sub_1B2228974();
          v28 = v27;
          v30 = v29;
          v32 = v31;
          swift_bridgeObjectRelease();
          v23 = MEMORY[0x1B5E20388](v26, v28, v30, v32);
          v24 = v33;
          swift_bridgeObjectRelease();
        }
        v22 += 13;
        swift_retain();
        sub_1B1FB9CC8(v23, v24);
        swift_bridgeObjectRelease();
        swift_release();
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return sub_1B1DDC0C4(a3, 1);
}

uint64_t sub_1B1DEF9E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  BOOL v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char v73;
  uint64_t v74;
  _QWORD *v75;
  BOOL v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t result;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;

  v3 = *(_QWORD **)(a1 + 16);
  v4 = swift_retain();
  v110 = a2;
  v5 = sub_1B1DE5CB4(v4);
  v104 = v6;
  v105 = v5;
  v8 = v3[10];
  v7 = v3[11];
  v3[7] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)v3[5];
  v10 = v3[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1DF6860(v9, v10, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1B1B25BD0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1FB69EC();
  sub_1B1FB50D0(v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v111 = v3;
  v11 = v3[5];
  v108 = *(_QWORD *)(v11 + 16);
  if (!v108)
    goto LABEL_65;
  v106 = v11 + 32;
  swift_bridgeObjectRetain_n();
  v12 = 0;
  while (1)
  {
    v14 = (uint64_t *)(v106 + 16 * v12);
    v15 = v14[1];
    v16 = (_QWORD *)v111[5];
    v17 = v16[2];
    if (!v17)
      goto LABEL_145;
    v18 = *v14;
    v19 = v16[4] == *v14 && v16[5] == v15;
    if (!v19 && (sub_1B2229D24() & 1) == 0)
    {
      if (v17 == 1)
        goto LABEL_145;
      v20 = v16[6] == v18 && v16[7] == v15;
      if (!v20 && (sub_1B2229D24() & 1) == 0)
      {
        if (v17 == 2)
          goto LABEL_145;
        if ((v16[8] != v18 || v16[9] != v15) && (sub_1B2229D24() & 1) == 0)
        {
          v41 = v17 - 3;
          if (!v41)
            goto LABEL_145;
          v42 = v16 + 11;
          while (1)
          {
            v43 = *(v42 - 1) == v18 && *v42 == v15;
            if (v43 || (sub_1B2229D24() & 1) != 0)
              break;
            v42 += 2;
            if (!--v41)
              goto LABEL_145;
          }
        }
      }
    }
    v21 = v16[2];
    if (!v21)
      goto LABEL_145;
    v22 = v16[4] == v18 && v16[5] == v15;
    if (v22 || (sub_1B2229D24() & 1) != 0)
    {
      v23 = 0;
      goto LABEL_28;
    }
    if (v21 == 1)
      goto LABEL_145;
    if ((v16[6] != v18 || v16[7] != v15) && (sub_1B2229D24() & 1) == 0)
      break;
    v23 = 1;
LABEL_28:
    v24 = v111[7];
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B22296AC();
      swift_bridgeObjectRelease();
      v24 = v111[7];
      if ((v24 & 0xC000000000000001) == 0)
      {
LABEL_30:
        v25 = *(_QWORD *)(v24 + 8 * v23 + 32);
        swift_retain();
        goto LABEL_31;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((v24 & 0xC000000000000001) == 0)
        goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x1B5E21018](v23, v24);
    swift_bridgeObjectRelease();
LABEL_31:
    v26 = *(_QWORD *)(v25 + 40);
    v27 = *(_QWORD *)(v25 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v112 = *(_QWORD **)(v110 + 264);
    *(_QWORD *)(v110 + 264) = 0x8000000000000000;
    v30 = sub_1B1DC3B00(v26, v27);
    v31 = v29;
    v32 = v112[2] + ((v29 & 1) == 0);
    if (v112[3] >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v35 = v112;
        if ((v29 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        sub_1B1EAD7D4();
        v35 = v112;
        if ((v31 & 1) != 0)
          goto LABEL_37;
      }
    }
    else
    {
      sub_1B1E9A6EC(v32, isUniquelyReferenced_nonNull_native);
      v33 = sub_1B1DC3B00(v26, v27);
      if ((v31 & 1) != (v34 & 1))
        goto LABEL_146;
      v30 = v33;
      v35 = v112;
      if ((v31 & 1) != 0)
      {
LABEL_37:
        v36 = v35[7];
        swift_release();
        *(_QWORD *)(v36 + 8 * v30) = v25;
        goto LABEL_4;
      }
    }
    v35[(v30 >> 6) + 8] |= 1 << v30;
    v13 = (uint64_t *)(v35[6] + 16 * v30);
    *v13 = v26;
    v13[1] = v27;
    *(_QWORD *)(v35[7] + 8 * v30) = v25;
    ++v35[2];
    swift_bridgeObjectRetain();
LABEL_4:
    ++v12;
    *(_QWORD *)(v110 + 264) = v35;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12 == v108)
    {
      swift_bridgeObjectRelease_n();
LABEL_65:
      v44 = v111[10];
      v109 = *(_QWORD *)(v44 + 16);
      if (!v109)
      {
LABEL_129:
        if (v105)
        {
          v77 = v105[2];
          if (v77)
          {
            swift_bridgeObjectRetain();
            v78 = v105 + 5;
            do
            {
              v79 = *(v78 - 1);
              v80 = *v78;
              v81 = sub_1B2228920();
              swift_bridgeObjectRetain();
              if ((v81 & 1) != 0)
              {
                sub_1B2228830();
                sub_1B2228854();
                v82 = sub_1B2228974();
                v84 = v83;
                v86 = v85;
                v88 = v87;
                swift_bridgeObjectRelease();
                v79 = MEMORY[0x1B5E20388](v82, v84, v86, v88);
                v80 = v89;
                swift_bridgeObjectRelease();
              }
              v78 += 13;
              swift_retain();
              sub_1B1FB9650(v79, v80);
              swift_bridgeObjectRelease();
              swift_release();
              --v77;
            }
            while (v77);
            swift_bridgeObjectRelease();
          }
        }
        if (v104)
        {
          v90 = *(_QWORD *)(v104 + 16);
          if (v90)
          {
            swift_bridgeObjectRetain();
            v91 = (uint64_t *)(v104 + 40);
            do
            {
              v92 = *(v91 - 1);
              v93 = *v91;
              v94 = sub_1B2228920();
              swift_bridgeObjectRetain();
              if ((v94 & 1) != 0)
              {
                sub_1B2228830();
                sub_1B2228854();
                v95 = sub_1B2228974();
                v97 = v96;
                v99 = v98;
                v101 = v100;
                swift_bridgeObjectRelease();
                v92 = MEMORY[0x1B5E20388](v95, v97, v99, v101);
                v93 = v102;
                swift_bridgeObjectRelease();
              }
              v91 += 13;
              swift_retain();
              sub_1B1FB9CC8(v92, v93);
              swift_bridgeObjectRelease();
              swift_release();
              --v90;
            }
            while (v90);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1B1DF85F0((uint64_t)v111);
        return swift_release();
      }
      v107 = v44 + 32;
      swift_bridgeObjectRetain_n();
      v45 = 0;
      while (1)
      {
        v47 = (uint64_t *)(v107 + 16 * v45);
        v48 = v47[1];
        v49 = (_QWORD *)v111[10];
        v50 = v49[2];
        if (!v50)
          goto LABEL_145;
        v51 = *v47;
        v52 = v49[4] == *v47 && v49[5] == v48;
        if (!v52 && (sub_1B2229D24() & 1) == 0)
        {
          if (v50 == 1)
            goto LABEL_145;
          v53 = v49[6] == v51 && v49[7] == v48;
          if (!v53 && (sub_1B2229D24() & 1) == 0)
          {
            if (v50 == 2)
              goto LABEL_145;
            if ((v49[8] != v51 || v49[9] != v48) && (sub_1B2229D24() & 1) == 0)
            {
              v74 = v50 - 3;
              if (!v74)
                goto LABEL_145;
              v75 = v49 + 11;
              while (1)
              {
                v76 = *(v75 - 1) == v51 && *v75 == v48;
                if (v76 || (sub_1B2229D24() & 1) != 0)
                  break;
                v75 += 2;
                if (!--v74)
                  goto LABEL_145;
              }
            }
          }
        }
        v54 = v49[2];
        if (!v54)
          goto LABEL_145;
        v55 = v49[4] == v51 && v49[5] == v48;
        if (v55 || (sub_1B2229D24() & 1) != 0)
        {
          v56 = 0;
        }
        else
        {
          if (v54 == 1)
            goto LABEL_145;
          if ((v49[6] != v51 || v49[7] != v48) && (sub_1B2229D24() & 1) == 0)
          {
            v70 = v49 + 9;
            v71 = 2;
            while (v54 != v71)
            {
              v56 = v71;
              if (*(v70 - 1) != v51 || *v70 != v48)
              {
                v73 = sub_1B2229D24();
                v71 = v56 + 1;
                v70 += 2;
                if ((v73 & 1) == 0)
                  continue;
              }
              goto LABEL_92;
            }
            goto LABEL_145;
          }
          v56 = 1;
        }
LABEL_92:
        v57 = v111[12];
        if (v57 >> 62)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B22296AC();
          swift_bridgeObjectRelease();
          v57 = v111[12];
          if ((v57 & 0xC000000000000001) == 0)
          {
LABEL_94:
            v58 = *(_QWORD *)(v57 + 8 * v56 + 32);
            swift_retain();
            goto LABEL_95;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          if ((v57 & 0xC000000000000001) == 0)
            goto LABEL_94;
        }
        swift_bridgeObjectRetain();
        v58 = MEMORY[0x1B5E21018](v56, v57);
        swift_bridgeObjectRelease();
LABEL_95:
        v59 = *(_QWORD *)(v58 + 40);
        v60 = *(_QWORD *)(v58 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        v61 = swift_isUniquelyReferenced_nonNull_native();
        v113 = *(_QWORD **)(v110 + 264);
        *(_QWORD *)(v110 + 264) = 0x8000000000000000;
        v63 = sub_1B1DC3B00(v59, v60);
        v64 = v62;
        v65 = v113[2] + ((v62 & 1) == 0);
        if (v113[3] >= v65)
        {
          if ((v61 & 1) != 0)
          {
            v68 = v113;
            if ((v62 & 1) != 0)
              goto LABEL_101;
          }
          else
          {
            sub_1B1EAD7D4();
            v68 = v113;
            if ((v64 & 1) != 0)
              goto LABEL_101;
          }
        }
        else
        {
          sub_1B1E9A6EC(v65, v61);
          v66 = sub_1B1DC3B00(v59, v60);
          if ((v64 & 1) != (v67 & 1))
            goto LABEL_146;
          v63 = v66;
          v68 = v113;
          if ((v64 & 1) != 0)
          {
LABEL_101:
            v69 = v68[7];
            swift_release();
            *(_QWORD *)(v69 + 8 * v63) = v58;
            goto LABEL_68;
          }
        }
        v68[(v63 >> 6) + 8] |= 1 << v63;
        v46 = (uint64_t *)(v68[6] + 16 * v63);
        *v46 = v59;
        v46[1] = v60;
        *(_QWORD *)(v68[7] + 8 * v63) = v58;
        ++v68[2];
        swift_bridgeObjectRetain();
LABEL_68:
        ++v45;
        *(_QWORD *)(v110 + 264) = v68;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v45 == v109)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_129;
        }
      }
    }
  }
  v37 = v16 + 9;
  v38 = 2;
  while (v21 != v38)
  {
    v23 = v38;
    if (*(v37 - 1) != v18 || *v37 != v15)
    {
      v40 = sub_1B2229D24();
      v38 = v23 + 1;
      v37 += 2;
      if ((v40 & 1) == 0)
        continue;
    }
    goto LABEL_28;
  }
LABEL_145:
  swift_bridgeObjectRetain();
  __break(1u);
LABEL_146:
  result = sub_1B2229FC4();
  __break(1u);
  return result;
}

uint64_t sub_1B1DF0564(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD **a5)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_1B1DE5CB4((uint64_t)a3);
  v9 = v8;
  v10 = sub_1B1DE49EC(a3);
  if (v11)
  {
    v14 = v11;
    v15 = v13;
    v22 = v12;
    v23 = v10;
    v16 = *a5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a5 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v16 = sub_1B1C68BF8(0, v16[2] + 1, 1, v16);
      *a5 = v16;
    }
    v19 = v16[2];
    v18 = v16[3];
    if (v19 >= v18 >> 1)
    {
      v16 = sub_1B1C68BF8(v18 > 1, v19 + 1, 1, v16);
      *a5 = v16;
    }
    v16[2] = v19 + 1;
    v20 = &v16[4 * v19];
    v20[4] = v23;
    v20[5] = v14;
    v20[6] = v22;
    v20[7] = v15;
  }
  sub_1B1DE6090((uint64_t)a3, (uint64_t)v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B1DF85F0((uint64_t)a3);
}

uint64_t sub_1B1DF0680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v4 = sub_1B1DE5CB4(a3);
  v6 = v4;
  v7 = v5;
  if (v4)
  {
    v8 = v4[2];
    if (v8)
    {
      v35 = v5;
      swift_bridgeObjectRetain();
      v9 = v6 + 5;
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        v12 = sub_1B2228920();
        swift_bridgeObjectRetain();
        if ((v12 & 1) != 0)
        {
          sub_1B2228830();
          sub_1B2228854();
          v13 = sub_1B2228974();
          v15 = v14;
          v17 = v16;
          v19 = v18;
          swift_bridgeObjectRelease();
          v10 = MEMORY[0x1B5E20388](v13, v15, v17, v19);
          v11 = v20;
          swift_bridgeObjectRelease();
        }
        v9 += 13;
        swift_retain();
        sub_1B1FB9650(v10, v11);
        swift_bridgeObjectRelease();
        swift_release();
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      v7 = v35;
    }
  }
  if (v7)
  {
    v21 = *(_QWORD *)(v7 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain();
      v22 = (uint64_t *)(v7 + 40);
      do
      {
        v23 = *(v22 - 1);
        v24 = *v22;
        v25 = sub_1B2228920();
        swift_bridgeObjectRetain();
        if ((v25 & 1) != 0)
        {
          sub_1B2228830();
          sub_1B2228854();
          v26 = sub_1B2228974();
          v28 = v27;
          v30 = v29;
          v32 = v31;
          swift_bridgeObjectRelease();
          v23 = MEMORY[0x1B5E20388](v26, v28, v30, v32);
          v24 = v33;
          swift_bridgeObjectRelease();
        }
        v22 += 13;
        swift_retain();
        sub_1B1FB9CC8(v23, v24);
        swift_bridgeObjectRelease();
        swift_release();
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B1DDC0C4(a3, 1);
  return sub_1B1DF85F0(a3);
}

uint64_t sub_1B1DF09D0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  int v36;
  uint64_t v37;
  _OWORD v39[2];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  _OWORD v49[2];
  _OWORD v50[2];
  uint64_t v51;
  _QWORD v52[6];

  v8 = *a3;
  v7 = a3[1];
  v9 = a3[2];
  v10 = a3[3];
  v12 = a3[4];
  v11 = a3[5];
  v37 = a3[6];
  swift_retain();
  v13 = sub_1B1CB5B6C(v8, v7, v9, v10, v12, v11);
  v15 = v14;
  swift_release();
  if (!v13)
  {
    swift_bridgeObjectRetain();
    sub_1B1E01510((uint64_t)a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v48 = *(_QWORD *)(a4 + 288);
    *(_QWORD *)(a4 + 288) = 0x8000000000000000;
    sub_1B1B89974((uint64_t)a3, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a4 + 288) = v48;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v16 = (_QWORD *)swift_retain();
  v17 = sub_1B1DD8F64(v16, a1, a2, v37);
  swift_release_n();
  swift_retain();
  v18 = swift_retain();
  sub_1B1B21598(v18);
  swift_release();
  if ((v15 & 1) != 0)
  {
    v19 = v17[2];
    swift_bridgeObjectRetain();
    v20 = sub_1B1DC3B00(0x65756C6176, 0xE500000000000000);
    if ((v21 & 1) != 0)
    {
      sub_1B19F8F0C(*(_QWORD *)(v19 + 56) + 88 * v20, (uint64_t)&v42);
    }
    else
    {
      v47 = 0;
      v45 = 0u;
      v46 = 0u;
      v43 = 0u;
      v44 = 0u;
      v42 = 0u;
    }
    swift_bridgeObjectRelease();
    v49[1] = v44;
    v50[0] = v45;
    v50[1] = v46;
    v51 = v47;
    v48 = v42;
    v49[0] = v43;
    v24 = v17[7];
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1B22296AC();
      if (!v25)
        goto LABEL_11;
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v25)
        goto LABEL_11;
    }
    v26 = v25 - 1;
    if ((v24 & 0xC000000000000001) != 0)
    {
      v25 = MEMORY[0x1B5E21018](v26, v24);
    }
    else
    {
      v25 = *(_QWORD *)(v24 + 8 * v26 + 32);
      swift_retain();
    }
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1B19FA278((uint64_t)v49, (uint64_t)&v42);
    sub_1B19FA278(v25 + 56, (uint64_t)v52);
    sub_1B19F8C58(&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    sub_1B19F8C58(v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    v27 = sub_1B1E03DBC();
    v29 = v28;
    if (v27 == sub_1B1E03DBC() && v29 == v30)
    {
      swift_bridgeObjectRelease_n();
      sub_1B19F8C58(v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      sub_1B19F8C58(&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    }
    else
    {
      v31 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B19F8C58(v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      sub_1B19F8C58(&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      if ((v31 & 1) == 0)
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        *(_QWORD *)&v39[0] = 0;
        *((_QWORD *)&v39[0] + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        v41 = v39[0];
        sub_1B2228890();
        sub_1B19FA278((uint64_t)&v42, (uint64_t)v39);
        sub_1B22295EC();
        sub_1B2228890();
        v33 = *(_QWORD *)(v25 + 88);
        v34 = *(_OWORD *)(v25 + 72);
        v39[0] = *(_OWORD *)(v25 + 56);
        v39[1] = v34;
        v40 = v33;
        sub_1B22295EC();
        v35 = v41;
        v36 = sub_1B2228E90();
        if (qword_1ED4BF658 != -1)
          swift_once();
        *(_QWORD *)&v39[0] = 0;
        swift_retain();
        sub_1B1F1AD70(v36, (uint64_t *)v39, v35, *((uint64_t *)&v35 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_23;
      }
    }
    sub_1B1B9DC78((uint64_t)v50 + 8, (uint64_t)v39, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
    if (swift_weakLoadStrong())
    {
      v32 = *(_QWORD *)(v25 + 32);
      *(_QWORD *)&v41 = *(_QWORD *)(v25 + 24);
      *((_QWORD *)&v41 + 1) = v32;
      swift_bridgeObjectRetain_n();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B1E02AF4(v41, *((uint64_t *)&v41 + 1), (uint64_t)v39);
      swift_release();
      swift_bridgeObjectRelease();
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v39);
LABEL_23:
    sub_1B1E029F8(0x65756C6176, 0xE500000000000000);
    swift_release();
    sub_1B1A203C4((uint64_t)&v48);
  }
  sub_1B1DF85F0((uint64_t)v17);
  return swift_release_n();
}

uint64_t sub_1B1DF0F64(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, _QWORD **a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v42;
  _OWORD v43[3];
  uint64_t v44;
  __int128 v45;

  v9 = *(_QWORD *)(a4 + 16);
  if (!v9)
  {
LABEL_15:
    if (qword_1ED4BF430 != -1)
      swift_once();
    *(_QWORD *)&v43[0] = 0;
    *((_QWORD *)&v43[0] + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    v45 = v43[0];
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    v19 = *((_OWORD *)a3 + 1);
    v43[0] = *(_OWORD *)a3;
    v43[1] = v19;
    v43[2] = *((_OWORD *)a3 + 2);
    v44 = a3[6];
    sub_1B22295EC();
    v20 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    *(_QWORD *)&v43[0] = 0;
    swift_retain();
    sub_1B1F1AD70(v20, (uint64_t *)v43, v45, *((uint64_t *)&v45 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v10 = *a3;
  v11 = a3[1];
  v12 = (uint64_t *)(a4 + 56);
  while (1)
  {
    v14 = *(v12 - 1);
    v13 = *v12;
    v15 = v10 == *(v12 - 3) && v11 == *(v12 - 2);
    if (!v15 && (sub_1B2229D24() & 1) == 0)
      goto LABEL_3;
    v17 = a3[2];
    v16 = a3[3];
    if (v17 == v14 && v16 == v13)
      break;
    if ((sub_1B2229D24() & 1) != 0)
      goto LABEL_21;
LABEL_3:
    v12 += 4;
    if (!--v9)
      goto LABEL_15;
  }
  v17 = v14;
  v16 = v13;
LABEL_21:
  v37 = a2;
  v21 = a3[4];
  v22 = *(_QWORD *)(a5 + 136);
  v35 = a3[5];
  v36 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  v23 = *(void **)(v22 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock);
  swift_retain();
  objc_msgSend(v23, sel_lock);
  *(_QWORD *)&v43[0] = 0x7C6E69746C697542;
  *((_QWORD *)&v43[0] + 1) = 0xE800000000000000;
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  v24 = swift_bridgeObjectRetain();
  sub_1B1CB6E9C(v24, v10, v11, v17, v16, v21, v35);
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v22 + v36), sel_unlock);
  swift_release();
  v25 = sub_1B1DDB0B0(0x7C6E69746C697542, 0xE800000000000000);
  sub_1B1A025EC((uint64_t)(a3 + 6), (uint64_t)&v45, (uint64_t (*)(_QWORD))sub_1B1E01560);
  sub_1B1A025EC((uint64_t)&v45, (uint64_t)v43, (uint64_t (*)(_QWORD))sub_1B1E01560);
  if (*(_QWORD *)&v43[0])
    sub_1B1FB46CC(*(uint64_t *)&v43[0]);
  v26 = *a6;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a6 = v26;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v26 = sub_1B1C63044(0, v26[2] + 1, 1, v26);
    *a6 = v26;
  }
  v29 = v26[2];
  v28 = v26[3];
  if (v29 >= v28 >> 1)
  {
    v26 = sub_1B1C63044(v28 > 1, v29 + 1, 1, v26);
    *a6 = v26;
  }
  v26[2] = v29 + 1;
  v30 = &v26[2 * v29];
  v30[4] = a1;
  v30[5] = v37;
  v31 = v25[3];
  v32 = v25[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = swift_isUniquelyReferenced_nonNull_native();
  v42 = *a7;
  *a7 = 0x8000000000000000;
  sub_1B1B84788(v31, v32, a1, v37, v33);
  *a7 = v42;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B1DF13C0(_QWORD *a1)
{
  swift_allocObject();
  return sub_1B1DD6A90(a1);
}

uint64_t _s7ContextC14GenerationDataCMa()
{
  return objc_opt_self();
}

_QWORD *_s9ErrorInfoVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s9ErrorInfoVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s9ErrorInfoVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s9ErrorInfoVMa()
{
  return &_s9ErrorInfoVN;
}

uint64_t _s7ContextC18GenerationSettingsVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7ContextC18GenerationSettingsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7ContextC18GenerationSettingsVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7ContextC18GenerationSettingsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SceneFileAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneFileAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s7ContextC18GenerationSettingsVMa()
{
  return &_s7ContextC18GenerationSettingsVN;
}

uint64_t sub_1B1DF1878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  _QWORD v22[7];

  v7 = *(_QWORD **)(a3 + 136);
  v9 = v7[42];
  v8 = v7[43];
  v10 = v7[2];
  v11 = v7[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v12 = sub_1B1ED4440();
  v14 = v13;
  swift_release();
  if (*(_QWORD *)(a3 + 16))
  {
    v15 = swift_bridgeObjectRetain();
    v17 = sub_1B1E0A650(v15, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v22[0] = v9;
  v22[1] = v8;
  v22[2] = v10;
  v22[3] = v11;
  v22[4] = v12;
  v22[5] = v14;
  v22[6] = v17;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *a4;
  *a4 = 0x8000000000000000;
  sub_1B1B89974((uint64_t)v22, a1, a2, isUniquelyReferenced_nonNull_native);
  *a4 = v21;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DF1990(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7, uint64_t *a8, _QWORD **a9)
{
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  int v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v9 = *(_QWORD *)(a6 + 264);
  if (!*(_QWORD *)(v9 + 16))
    return result;
  v17 = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1B1DC3B00(v17, a2);
  if ((v19 & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a6 + 264);
  if (!*(_QWORD *)(v21 + 16))
    return swift_release();
  v49 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1B1DC3B00(a3, a4);
  if ((v23 & 1) == 0)
  {
    swift_release();
    goto LABEL_21;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (swift_weakLoadStrong())
  {
    v48 = sub_1B1FB34E8();
    swift_release();
    if (swift_weakLoadStrong())
    {
      v25 = sub_1B1FB34E8();
      swift_release();
      *a7 = (a5 != 0) | *a7 & 1;
      if (a5)
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v50 = *a8;
        *a8 = 0x8000000000000000;
        sub_1B1B875C8(a5, v17, a2, isUniquelyReferenced_nonNull_native);
        *a8 = v50;
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      Strong = swift_weakLoadStrong();
      v29 = *(_QWORD *)(Strong + 24);
      v28 = *(_QWORD *)(Strong + 32);
      swift_bridgeObjectRetain();
      swift_release();
      v31 = *(_QWORD *)(v49 + 24);
      v30 = *(_QWORD *)(v49 + 32);
      v32 = *a9;
      swift_bridgeObjectRetain();
      v33 = swift_isUniquelyReferenced_nonNull_native();
      *a9 = v32;
      if ((v33 & 1) == 0)
      {
        v32 = sub_1B1C68D38(0, v32[2] + 1, 1, v32);
        *a9 = v32;
      }
      v35 = v32[2];
      v34 = v32[3];
      if (v35 >= v34 >> 1)
      {
        v32 = sub_1B1C68D38(v34 > 1, v35 + 1, 1, v32);
        *a9 = v32;
      }
      v32[2] = v35 + 1;
      v36 = &v32[5 * v35];
      v36[4] = v29;
      v36[5] = v28;
      *((_BYTE *)v36 + 48) = v48;
      v36[7] = v31;
      v36[8] = v30;
      v37 = swift_weakLoadStrong();
      v39 = *(_QWORD *)(v37 + 24);
      v38 = *(_QWORD *)(v37 + 32);
      swift_bridgeObjectRetain();
      swift_release();
      v41 = *(_QWORD *)(v24 + 24);
      v40 = *(_QWORD *)(v24 + 32);
      v42 = *a9;
      swift_bridgeObjectRetain();
      v43 = swift_isUniquelyReferenced_nonNull_native();
      *a9 = v42;
      if ((v43 & 1) == 0)
      {
        v42 = sub_1B1C68D38(0, v42[2] + 1, 1, v42);
        *a9 = v42;
      }
      v45 = v42[2];
      v44 = v42[3];
      if (v45 >= v44 >> 1)
      {
        v42 = sub_1B1C68D38(v44 > 1, v45 + 1, 1, v42);
        *a9 = v42;
      }
      v42[2] = v45 + 1;
      v46 = &v42[5 * v45];
      v46[4] = v39;
      v46[5] = v38;
      *((_BYTE *)v46 + 48) = v25;
      v46[7] = v41;
      v46[8] = v40;
      swift_release();
      return swift_release();
    }
    if (qword_1ED4BF430 == -1)
      goto LABEL_25;
  }
  else if (qword_1ED4BF430 == -1)
  {
    goto LABEL_25;
  }
  swift_once();
LABEL_25:
  v51 = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  v47 = sub_1B2228E90();
  if (qword_1ED4BF658 != -1)
    swift_once();
  v50 = 0;
  swift_retain();
  sub_1B1F1AD70(v47, &v50, 0, v51);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B1DF1F68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 2504))();
}

uint64_t sub_1B1DF1F90(uint64_t **a1)
{
  uint64_t **v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  uint64_t **v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *__dst;
  uint64_t v82;

  v1 = a1;
  v2 = (uint64_t)a1[1];
  result = sub_1B22299E8();
  if (result >= v2)
  {
    if ((unint64_t)v2 >= 2)
    {
      v7 = *v1;
      v8 = -1;
      v9 = 1;
      v10 = *v1;
      do
      {
        v11 = &v7[2 * v9];
        result = *v11;
        v12 = v11[1];
        v13 = v8;
        v14 = v10;
        do
        {
          if (result == *v14 && v12 == v14[1])
            break;
          result = sub_1B2229D24();
          if ((result & 1) == 0)
            break;
          result = v14[2];
          v12 = v14[3];
          *((_OWORD *)v14 + 1) = *(_OWORD *)v14;
          *v14 = result;
          v14[1] = v12;
          v14 -= 2;
        }
        while (!__CFADD__(v13++, 1));
        ++v9;
        v10 += 2;
        --v8;
      }
      while (v9 != v2);
    }
    return result;
  }
  v79 = result;
  if (v2 >= 0)
    v4 = v2;
  else
    v4 = v2 + 1;
  if (v2 < -1)
  {
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  if (v2 < 2)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v2 != 1)
    {
      v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v20 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_93;
    }
    v78 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v5 = v4 >> 1;
    v6 = sub_1B2228B0C();
    *(_QWORD *)(v6 + 16) = v5;
    v78 = v6;
    __dst = (char *)(v6 + 32);
  }
  v18 = 0;
  v19 = *v1;
  v76 = v1;
  v77 = (uint64_t)(*v1 + 1);
  v20 = (char *)MEMORY[0x1E0DEE9D8];
  v80 = v2;
  while (2)
  {
    v22 = v18++;
    if (v18 >= v2)
      goto LABEL_53;
    v23 = &v19[2 * v18];
    v24 = *v23;
    v25 = v23[1];
    v26 = &v19[2 * v22];
    if (v24 == *v26 && v25 == v26[1])
    {
      v29 = v22 + 2;
      if (v22 + 2 >= v2)
        goto LABEL_52;
      v28 = 0;
      goto LABEL_35;
    }
    v28 = sub_1B2229D24();
    v29 = v22 + 2;
    if (v22 + 2 < v2)
    {
LABEL_35:
      v30 = (_QWORD *)(v77 + 16 * v29);
      do
      {
        v32 = &v19[2 * v18];
        if (*(v30 - 1) == *v32 && *v30 == v32[1])
        {
          if ((v28 & 1) != 0)
            goto LABEL_47;
        }
        else if (((v28 ^ sub_1B2229D24()) & 1) != 0)
        {
          goto LABEL_46;
        }
        v30 += 2;
        v31 = v29 + 1;
        v18 = v29;
        v29 = v31;
      }
      while (v31 < v2);
      v29 = v31;
    }
LABEL_46:
    v18 = v29;
    if ((v28 & 1) == 0)
      goto LABEL_53;
LABEL_47:
    if (v22 < v29)
    {
      v34 = 2 * v29;
      v35 = 2 * v22;
      v36 = v29;
      v37 = v22;
      do
      {
        if (v37 != --v36)
        {
          v38 = &v19[v34];
          v39 = v19[v35];
          v40 = v19[v35 + 1];
          *(_OWORD *)&v19[v35] = *(_OWORD *)&v19[v34 - 2];
          *(v38 - 2) = v39;
          *(v38 - 1) = v40;
        }
        ++v37;
        v34 -= 2;
        v35 += 2;
      }
      while (v37 < v36);
    }
LABEL_52:
    v18 = v29;
LABEL_53:
    if (v18 < v2 && v18 - v22 < v79)
    {
      v41 = v22 + v79 >= v2 ? v2 : v22 + v79;
      if (v18 != v41)
      {
        v42 = &v19[2 * v18];
        do
        {
          v43 = &v19[2 * v18];
          v44 = *v43;
          v45 = v43[1];
          v46 = v22;
          v47 = v42;
          do
          {
            if (v44 == *(v47 - 2) && v45 == *(v47 - 1))
              break;
            if ((sub_1B2229D24() & 1) == 0)
              break;
            v44 = *v47;
            v45 = v47[1];
            *(_OWORD *)v47 = *((_OWORD *)v47 - 1);
            *(v47 - 1) = v45;
            *(v47 - 2) = v44;
            v47 -= 2;
            ++v46;
          }
          while (v18 != v46);
          ++v18;
          v42 += 2;
        }
        while (v18 != v41);
        v18 = v41;
        v2 = v80;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_1B216CC74(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
    v50 = *((_QWORD *)v20 + 2);
    v49 = *((_QWORD *)v20 + 3);
    v21 = v50 + 1;
    if (v50 >= v49 >> 1)
      v20 = sub_1B216CC74(v49 > 1, v50 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v21;
    v51 = v20 + 32;
    v52 = &v20[16 * v50 + 32];
    *(_QWORD *)v52 = v22;
    *((_QWORD *)v52 + 1) = v18;
    if (!v50)
    {
      v21 = 1;
      goto LABEL_25;
    }
    while (1)
    {
      v53 = v21 - 1;
      if (v21 >= 4)
      {
        v58 = &v51[16 * v21];
        v59 = *((_QWORD *)v58 - 7) - *((_QWORD *)v58 - 8);
        v56 = *((_QWORD *)v58 - 5) - *((_QWORD *)v58 - 6);
        v57 = v21 - 2;
        v60 = &v51[16 * v21 - 32];
        v54 = *(_QWORD *)v60;
        v55 = *((_QWORD *)v60 + 1);
        if (v56 - v54 + v55 >= v59)
        {
          v63 = v56 < *(_QWORD *)&v51[16 * v53 + 8] - *(_QWORD *)&v51[16 * v53];
LABEL_85:
          if (v63)
            v53 = v57;
          goto LABEL_87;
        }
      }
      else
      {
        if (v21 != 3)
        {
          v61 = *(_QWORD *)&v51[16 * v21 - 24] - *(_QWORD *)&v51[16 * v21 - 32];
          v62 = *(_QWORD *)&v51[16 * v53 + 8] - *(_QWORD *)&v51[16 * v53];
          goto LABEL_82;
        }
        v54 = *((_QWORD *)v20 + 6);
        v55 = *((_QWORD *)v20 + 7);
        v56 = *((_QWORD *)v20 + 5) - *((_QWORD *)v20 + 4);
        v57 = 1;
      }
      v61 = v55 - v54;
      v62 = *(_QWORD *)&v51[16 * v53 + 8] - *(_QWORD *)&v51[16 * v53];
      if (v61 + v62 >= v56)
      {
        v63 = v56 < v62;
        goto LABEL_85;
      }
LABEL_82:
      if (v62 < v61)
        break;
LABEL_87:
      v64 = v20;
      v65 = &v51[16 * v53 - 16];
      v66 = *(_QWORD *)v65;
      v67 = &v51[16 * v53];
      v68 = *((_QWORD *)v67 + 1);
      sub_1B1DF44E8((char *)&v19[2 * *(_QWORD *)v65], (char *)&v19[2 * *(_QWORD *)v67], (unint64_t)&v19[2 * v68], __dst);
      if (v82)
        goto LABEL_90;
      *(_QWORD *)v65 = v66;
      *((_QWORD *)v65 + 1) = v68;
      v20 = v64;
      v69 = *((_QWORD *)v64 + 2);
      v21 = v69 - 1;
      memmove(&v51[16 * v53], v67 + 16, 16 * (v69 - 1 - v53));
      *((_QWORD *)v64 + 2) = v69 - 1;
      v2 = v80;
      if (v69 <= 2)
        goto LABEL_25;
    }
    v2 = v80;
LABEL_25:
    if (v18 < v2)
      continue;
    break;
  }
  v17 = v78;
  v1 = v76;
LABEL_93:
  v78 = v17;
  if (v21 >= 2)
  {
    v70 = *v1;
    do
    {
      v71 = *(_QWORD *)&v20[16 * v21];
      v72 = &v20[16 * v21 + 16];
      v73 = *((_QWORD *)v72 + 1);
      sub_1B1DF44E8((char *)&v70[2 * v71], (char *)&v70[2 * *(_QWORD *)v72], (unint64_t)&v70[2 * v73], __dst);
      if (v82)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1B216D510((uint64_t)v20);
      v74 = &v20[16 * v21];
      *(_QWORD *)v74 = v71;
      *((_QWORD *)v74 + 1) = v73;
      v75 = *((_QWORD *)v20 + 2);
      memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v75 - v21));
      *((_QWORD *)v20 + 2) = v75 - 1;
      v21 = v75 - 1;
    }
    while (v75 > 2);
  }
LABEL_90:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v78 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DF257C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *__dst;
  uint64_t v71;
  int v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[6];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  _QWORD *v85;

  v2 = v1;
  v4 = a1[1];
  result = sub_1B22299E8();
  if (result >= v4)
  {
    if (v4)
      return sub_1B1DF4048(0, v4, 1, a1);
    return result;
  }
  v68 = result;
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v85 = a1;
  if (v4 >= 2)
  {
    v76 = v1;
    v7 = v6 >> 1;
    sub_1B1E01D20(0, (unint64_t *)&qword_1EEF5C490);
    v8 = sub_1B2228B0C();
    *(_QWORD *)(v8 + 16) = v7;
    v67 = v8;
    __dst = (char *)(v8 + 32);
    goto LABEL_12;
  }
  v9 = MEMORY[0x1E0DEE9D8];
  __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
  if (v4 == 1)
  {
    v67 = MEMORY[0x1E0DEE9D8];
    v76 = v1;
LABEL_12:
    v10 = 0;
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v13 = v10++;
      v71 = v13;
      if (v10 >= v4)
      {
        v14 = v85;
      }
      else
      {
        v74 = v4;
        v14 = v85;
        v15 = *v85;
        sub_1B1B9DC78(*v85 + 104 * v10, (uint64_t)&v78, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
        sub_1B1B9DC78(v15 + 104 * v13, (uint64_t)v77, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
        if (v78 == v77[0])
          v72 = 0;
        else
          v72 = sub_1B2229D24();
        sub_1B1A057EC((uint64_t)v77, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
        sub_1B1A057EC((uint64_t)&v78, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
        v10 = v13 + 2;
        if (v13 + 2 < v4)
        {
          v16 = v15 + 104 * v13 + 104;
          while (1)
          {
            sub_1B1B9DC78(v16 + 104, (uint64_t)&v78, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
            sub_1B1B9DC78(v16, (uint64_t)v77, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
            v17 = (_QWORD)v78 == *(_QWORD *)&v77[0] && *((_QWORD *)&v78 + 1) == *((_QWORD *)&v77[0] + 1);
            v18 = v17 ? 0 : sub_1B2229D24();
            sub_1B1A057EC((uint64_t)v77, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
            sub_1B1A057EC((uint64_t)&v78, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
            if (((v72 ^ v18) & 1) != 0)
              break;
            ++v10;
            v16 += 104;
            v4 = v74;
            if (v74 == v10)
            {
              v10 = v74;
              v14 = v85;
              goto LABEL_32;
            }
          }
          v14 = v85;
          v4 = v74;
        }
LABEL_32:
        if (v13 < v10 && (v72 & 1) != 0)
        {
          v19 = (_OWORD *)(v15 + 104 * v10 - 104);
          v20 = (_OWORD *)(v15 + 104 * v13);
          v21 = v10;
          v22 = v13;
          do
          {
            if (v22 != --v21)
            {
              v81 = v20[3];
              v82 = v20[4];
              v83 = v20[5];
              v84 = *((_QWORD *)v20 + 12);
              v78 = *v20;
              v79 = v20[1];
              v80 = v20[2];
              memmove(v20, v19, 0x68uLL);
              v19[3] = v81;
              v19[4] = v82;
              v19[5] = v83;
              *((_QWORD *)v19 + 12) = v84;
              *v19 = v78;
              v19[1] = v79;
              v19[2] = v80;
            }
            ++v22;
            v19 = (_OWORD *)((char *)v19 - 104);
            v20 = (_OWORD *)((char *)v20 + 104);
          }
          while (v22 < v21);
          v14 = v85;
          v4 = v74;
        }
      }
      if (v10 < v4 && v10 - v13 < v68)
      {
        v23 = v13 + v68;
        if (v13 + v68 >= v4)
          v23 = v4;
        v69 = v23;
        if (v10 != v23)
        {
          v24 = 104 * v10;
          do
          {
            v25 = v13;
            v75 = v24;
            while (1)
            {
              v26 = *v14 + v24;
              sub_1B1B9DC78(v26, (uint64_t)&v78, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
              sub_1B1B9DC78(v26 - 104, (uint64_t)v77, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
              if ((_QWORD)v78 == *(_QWORD *)&v77[0] && *((_QWORD *)&v78 + 1) == *((_QWORD *)&v77[0] + 1))
                break;
              v28 = sub_1B2229D24();
              sub_1B1A057EC((uint64_t)v77, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
              sub_1B1A057EC((uint64_t)&v78, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
              if ((v28 & 1) == 0)
                goto LABEL_45;
              v14 = v85;
              v29 = *v85 + v24;
              v81 = *(_OWORD *)(v29 + 48);
              v82 = *(_OWORD *)(v29 + 64);
              v83 = *(_OWORD *)(v29 + 80);
              v84 = *(_QWORD *)(v29 + 96);
              v78 = *(_OWORD *)v29;
              v79 = *(_OWORD *)(v29 + 16);
              v80 = *(_OWORD *)(v29 + 32);
              v30 = *(_OWORD *)(v29 - 88);
              *(_OWORD *)v29 = *(_OWORD *)(v29 - 104);
              *(_OWORD *)(v29 + 16) = v30;
              v31 = *(_OWORD *)(v29 - 72);
              *(_QWORD *)(v29 + 96) = *(_QWORD *)(v29 - 8);
              v32 = *(_OWORD *)(v29 - 24);
              *(_OWORD *)(v29 + 64) = *(_OWORD *)(v29 - 40);
              *(_OWORD *)(v29 + 80) = v32;
              v33 = *(_OWORD *)(v29 - 56);
              *(_OWORD *)(v29 + 32) = v31;
              *(_OWORD *)(v29 + 48) = v33;
              v34 = v78;
              v35 = v79;
              *(_OWORD *)(v29 - 72) = v80;
              *(_OWORD *)(v29 - 88) = v35;
              *(_OWORD *)(v29 - 104) = v34;
              v36 = v81;
              v37 = v82;
              v38 = v83;
              *(_QWORD *)(v29 - 8) = v84;
              *(_OWORD *)(v29 - 24) = v38;
              *(_OWORD *)(v29 - 40) = v37;
              *(_OWORD *)(v29 - 56) = v36;
              v24 -= 104;
              if (v10 == ++v25)
                goto LABEL_46;
            }
            sub_1B1A057EC((uint64_t)v77, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
            sub_1B1A057EC((uint64_t)&v78, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
LABEL_45:
            v14 = v85;
LABEL_46:
            ++v10;
            v24 = v75 + 104;
            v13 = v71;
          }
          while (v10 != v69);
          v10 = v69;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1B216CC74(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v40 = *((_QWORD *)v11 + 2);
      v39 = *((_QWORD *)v11 + 3);
      v12 = v40 + 1;
      if (v40 >= v39 >> 1)
        v11 = sub_1B216CC74(v39 > 1, v40 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v12;
      v41 = v11 + 32;
      v42 = &v11[16 * v40 + 32];
      *(_QWORD *)v42 = v13;
      *((_QWORD *)v42 + 1) = v10;
      v73 = v11;
      if (v40)
      {
        while (1)
        {
          v43 = v12 - 1;
          if (v12 >= 4)
          {
            v48 = &v41[16 * v12];
            v49 = *((_QWORD *)v48 - 7) - *((_QWORD *)v48 - 8);
            v46 = *((_QWORD *)v48 - 5) - *((_QWORD *)v48 - 6);
            v47 = v12 - 2;
            v50 = &v41[16 * v12 - 32];
            v44 = *(_QWORD *)v50;
            v45 = *((_QWORD *)v50 + 1);
            if (v46 - v44 + v45 >= v49)
            {
              v53 = v46 < *(_QWORD *)&v41[16 * v43 + 8] - *(_QWORD *)&v41[16 * v43];
              goto LABEL_71;
            }
          }
          else
          {
            if (v12 != 3)
            {
              v51 = *(_QWORD *)&v41[16 * v12 - 24] - *(_QWORD *)&v41[16 * v12 - 32];
              v52 = *(_QWORD *)&v41[16 * v43 + 8] - *(_QWORD *)&v41[16 * v43];
LABEL_68:
              if (v52 < v51)
                goto LABEL_14;
              goto LABEL_73;
            }
            v44 = *((_QWORD *)v11 + 6);
            v45 = *((_QWORD *)v11 + 7);
            v46 = *((_QWORD *)v11 + 5) - *((_QWORD *)v11 + 4);
            v47 = 1;
          }
          v51 = v45 - v44;
          v52 = *(_QWORD *)&v41[16 * v43 + 8] - *(_QWORD *)&v41[16 * v43];
          if (v51 + v52 < v46)
            goto LABEL_68;
          v53 = v46 < v52;
LABEL_71:
          if (v53)
            v43 = v47;
LABEL_73:
          v54 = &v41[16 * v43 - 16];
          v55 = *(_QWORD *)v54;
          v56 = &v41[16 * v43];
          v57 = *((_QWORD *)v56 + 1);
          sub_1B1DF4780((char *)(*v85 + 104 * *(_QWORD *)v54), (char *)(*v85 + 104 * *(_QWORD *)v56), *v85 + 104 * v57, __dst);
          if (v76)
            goto LABEL_85;
          *(_QWORD *)v54 = v55;
          *((_QWORD *)v54 + 1) = v57;
          v11 = v73;
          v58 = *((_QWORD *)v73 + 2);
          v12 = v58 - 1;
          memmove(&v41[16 * v43], v56 + 16, 16 * (v58 - 1 - v43));
          *((_QWORD *)v73 + 2) = v58 - 1;
          if (v58 <= 2)
            goto LABEL_14;
        }
      }
      v12 = 1;
LABEL_14:
      v4 = v85[1];
    }
    while (v10 < v4);
    v2 = v76;
    v9 = v67;
    goto LABEL_79;
  }
  v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v73 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_79:
  v67 = v9;
  if (v12 >= 2)
  {
    v59 = *v85;
    v60 = (uint64_t)v73;
    do
    {
      v61 = *(_QWORD *)(v60 + 32 + 16 * (v12 - 2));
      v62 = (_QWORD *)(v60 + 32 + 16 * (v12 - 1));
      v63 = v62[1];
      sub_1B1DF4780((char *)(v59 + 104 * v61), (char *)(v59 + 104 * *v62), v59 + 104 * v63, __dst);
      if (v2)
        break;
      v64 = (char *)v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v64 = sub_1B216D510(v60);
      v60 = (uint64_t)v64;
      v65 = &v64[16 * v12];
      *(_QWORD *)v65 = v61;
      *((_QWORD *)v65 + 1) = v63;
      v66 = *((_QWORD *)v64 + 2);
      memmove(&v64[16 * v12 + 16], &v64[16 * v12 + 32], 16 * (v66 - v12));
      *((_QWORD *)v64 + 2) = v66 - 1;
      v12 = v66 - 1;
    }
    while (v66 > 2);
  }
LABEL_85:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v67 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DF2EB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *__dst;
  uint64_t v68;

  v2 = v1;
  v4 = a1[1];
  result = sub_1B22299E8();
  if (result >= v4)
  {
    if (v4)
      return sub_1B1DF4278(0, v4, 1, a1);
    return result;
  }
  v66 = result;
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v63 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    v68 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v12 >= 2)
        goto LABEL_82;
      goto LABEL_77;
    }
  }
  else
  {
    v7 = v6 >> 1;
    _s12ParameterOutCMa();
    v8 = sub_1B2228B0C();
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    __dst = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v68 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v64 = *a1 - 8;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v65 = v4;
  do
  {
    v13 = v10++;
    if (v10 >= v4)
      goto LABEL_40;
    v14 = *(_QWORD *)(v11 + 8 * v10);
    v15 = *(_QWORD *)(v11 + 8 * v13);
    if (*(_QWORD *)(v14 + 40) == *(_QWORD *)(v15 + 40) && *(_QWORD *)(v14 + 48) == *(_QWORD *)(v15 + 48))
    {
      v18 = v13 + 2;
      if (v13 + 2 >= v4)
        goto LABEL_39;
      v17 = 0;
      do
      {
LABEL_25:
        v20 = *(_QWORD *)(v11 + 8 * v18);
        v21 = *(_QWORD *)(v11 + 8 * v10);
        if (*(_QWORD *)(v20 + 40) == *(_QWORD *)(v21 + 40) && *(_QWORD *)(v20 + 48) == *(_QWORD *)(v21 + 48))
        {
          if ((v17 & 1) != 0)
            goto LABEL_34;
        }
        else if (((v17 ^ sub_1B2229D24()) & 1) != 0)
        {
          goto LABEL_33;
        }
        v19 = v18 + 1;
        v10 = v18;
        v18 = v19;
      }
      while (v19 < v4);
      v18 = v19;
    }
    else
    {
      v17 = sub_1B2229D24();
      v18 = v13 + 2;
      if (v13 + 2 < v4)
        goto LABEL_25;
    }
LABEL_33:
    v10 = v18;
    if ((v17 & 1) == 0)
      goto LABEL_40;
LABEL_34:
    if (v13 < v18)
    {
      v23 = (uint64_t *)(v64 + 8 * v18);
      v24 = v18;
      v25 = v13;
      v26 = (uint64_t *)(v11 + 8 * v13);
      do
      {
        if (v25 != --v24)
        {
          v27 = *v26;
          *v26 = *v23;
          *v23 = v27;
        }
        ++v25;
        --v23;
        ++v26;
      }
      while (v25 < v24);
    }
LABEL_39:
    v10 = v18;
LABEL_40:
    if (v10 < v4 && v10 - v13 < v66)
    {
      v28 = v13 + v66 >= v4 ? v4 : v13 + v66;
      if (v10 != v28)
      {
        v29 = (_QWORD *)(v64 + 8 * v10);
        do
        {
          v30 = *(_QWORD *)(v11 + 8 * v10);
          v31 = v13;
          v32 = v29;
          do
          {
            if (*(_QWORD *)(v30 + 40) == *(_QWORD *)(*v32 + 40) && *(_QWORD *)(v30 + 48) == *(_QWORD *)(*v32 + 48))
              break;
            if ((sub_1B2229D24() & 1) == 0)
              break;
            v34 = *v32;
            v30 = v32[1];
            *v32 = v30;
            v32[1] = v34;
            --v32;
            ++v31;
          }
          while (v10 != v31);
          ++v10;
          ++v29;
        }
        while (v10 != v28);
        v10 = v28;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1B216CC74(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v36 = *((_QWORD *)v9 + 2);
    v35 = *((_QWORD *)v9 + 3);
    v12 = v36 + 1;
    if (v36 >= v35 >> 1)
      v9 = sub_1B216CC74(v35 > 1, v36 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12;
    v37 = v9 + 32;
    v38 = &v9[16 * v36 + 32];
    *(_QWORD *)v38 = v13;
    *((_QWORD *)v38 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        v39 = v12 - 1;
        if (v12 >= 4)
        {
          v44 = &v37[16 * v12];
          v45 = *((_QWORD *)v44 - 7) - *((_QWORD *)v44 - 8);
          v42 = *((_QWORD *)v44 - 5) - *((_QWORD *)v44 - 6);
          v43 = v12 - 2;
          v46 = &v37[16 * v12 - 32];
          v40 = *(_QWORD *)v46;
          v41 = *((_QWORD *)v46 + 1);
          if (v42 - v40 + v41 >= v45)
          {
            v49 = v42 < *(_QWORD *)&v37[16 * v39 + 8] - *(_QWORD *)&v37[16 * v39];
            goto LABEL_72;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v47 = *(_QWORD *)&v37[16 * v12 - 24] - *(_QWORD *)&v9[16 * v12];
            v48 = *(_QWORD *)&v37[16 * v39 + 8] - *(_QWORD *)&v37[16 * v39];
LABEL_69:
            if (v48 < v47)
              goto LABEL_13;
            goto LABEL_74;
          }
          v40 = *((_QWORD *)v9 + 6);
          v41 = *((_QWORD *)v9 + 7);
          v42 = *((_QWORD *)v9 + 5) - *((_QWORD *)v9 + 4);
          v43 = 1;
        }
        v47 = v41 - v40;
        v48 = *(_QWORD *)&v37[16 * v39 + 8] - *(_QWORD *)&v37[16 * v39];
        if (v47 + v48 < v42)
          goto LABEL_69;
        v49 = v42 < v48;
LABEL_72:
        if (v49)
          v39 = v43;
LABEL_74:
        v50 = &v37[16 * v39 - 16];
        v51 = *(_QWORD *)v50;
        v52 = &v37[16 * v39];
        v53 = *((_QWORD *)v52 + 1);
        sub_1B1DF4C14((char *)(v11 + 8 * *(_QWORD *)v50), (char *)(v11 + 8 * *(_QWORD *)v52), v11 + 8 * v53, __dst);
        if (v1)
          goto LABEL_77;
        *(_QWORD *)v50 = v51;
        *((_QWORD *)v50 + 1) = v53;
        v54 = *((_QWORD *)v9 + 2);
        v12 = v54 - 1;
        memmove(&v37[16 * v39], v52 + 16, 16 * (v54 - 1 - v39));
        *((_QWORD *)v9 + 2) = v54 - 1;
        if (v54 <= 2)
          goto LABEL_13;
      }
    }
    v12 = 1;
LABEL_13:
    v4 = v65;
  }
  while (v10 < v65);
  v2 = v1;
  if (v12 >= 2)
  {
LABEL_82:
    v55 = *v63;
    do
    {
      v56 = *(_QWORD *)&v9[16 * v12];
      v57 = &v9[16 * v12 + 16];
      v58 = *((_QWORD *)v57 + 1);
      sub_1B1DF4C14((char *)(v55 + 8 * v56), (char *)(v55 + 8 * *(_QWORD *)v57), v55 + 8 * v58, __dst);
      if (v2)
        break;
      v59 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v59 = sub_1B216D510((uint64_t)v9);
      v9 = v59;
      v60 = v59 + 32;
      v61 = &v59[16 * v12];
      *(_QWORD *)v61 = v56;
      *((_QWORD *)v61 + 1) = v58;
      v62 = *((_QWORD *)v59 + 2);
      memmove(&v60[16 * v12 - 16], &v60[16 * v12], 16 * (v62 - v12));
      *((_QWORD *)v9 + 2) = v62 - 1;
      v12 = v62 - 1;
    }
    while (v62 > 2);
  }
LABEL_77:
  swift_bridgeObjectRelease();
  *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1B2228AD0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DF3434(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  unint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *__dst;
  char *v86;
  char *v87;
  uint64_t v88;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  result = sub_1B22299E8();
  if (result >= v4)
  {
    if (v4)
      return sub_1B1DF432C(0, v4, 1, v3);
    return result;
  }
  v84 = result;
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  if (v4 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_84;
    }
    v88 = v1;
    v82 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v88 = v1;
    v7 = v6 >> 1;
    sub_1B1DCC018();
    v8 = sub_1B2228B0C();
    *(_QWORD *)(v8 + 16) = v7;
    v82 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v81 = v3;
  v11 = *v3;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v83 = v4;
  do
  {
    v14 = v10++;
    if (v10 >= v4)
      goto LABEL_43;
    v15 = (uint64_t *)(v11 + 40 * v10);
    v16 = *v15;
    v17 = v15[1];
    v18 = (_QWORD *)(v11 + 40 * v14);
    if (v16 == *v18 && v17 == v18[1])
    {
      v22 = v14 + 2;
      if (v14 + 2 >= v4)
        goto LABEL_40;
      v21 = 0;
    }
    else
    {
      v20 = sub_1B2229D24();
      v21 = v20;
      v22 = v14 + 2;
      if (v14 + 2 >= v4)
      {
        v10 = v14 + 2;
        if ((v20 & 1) == 0)
          goto LABEL_43;
LABEL_22:
        if (v14 < v22)
        {
LABEL_36:
          v28 = 40 * v22;
          v29 = 40 * v14;
          v30 = v22;
          v31 = v14;
          do
          {
            if (v31 != --v30)
            {
              v32 = v11 + v29;
              v33 = v11 + v28;
              v34 = *(_OWORD *)(v11 + v29);
              v35 = *(_OWORD *)(v11 + v29 + 16);
              v36 = *(_QWORD *)(v11 + v29 + 32);
              v37 = *(_QWORD *)(v11 + v28 - 8);
              v38 = *(_OWORD *)(v11 + v28 - 24);
              *(_OWORD *)v32 = *(_OWORD *)(v11 + v28 - 40);
              *(_OWORD *)(v32 + 16) = v38;
              *(_QWORD *)(v32 + 32) = v37;
              *(_OWORD *)(v33 - 40) = v34;
              *(_OWORD *)(v33 - 24) = v35;
              *(_QWORD *)(v33 - 8) = v36;
            }
            ++v31;
            v28 -= 40;
            v29 += 40;
          }
          while (v31 < v30);
        }
LABEL_40:
        v10 = v22;
        goto LABEL_43;
      }
    }
    v23 = v12;
    v24 = (_QWORD *)(v11 + 8 + 40 * v22);
    do
    {
      v26 = (_QWORD *)(v11 + 40 * v10);
      if (*(v24 - 1) == *v26 && *v24 == v26[1])
      {
        if ((v21 & 1) != 0)
        {
          v12 = v23;
          if (v14 >= v22)
            goto LABEL_40;
          goto LABEL_36;
        }
      }
      else if (((v21 ^ sub_1B2229D24()) & 1) != 0)
      {
        goto LABEL_42;
      }
      v24 += 5;
      v25 = v22 + 1;
      v10 = v22;
      v22 = v25;
    }
    while (v25 < v4);
    v22 = v25;
LABEL_42:
    v12 = v23;
    v10 = v22;
    if ((v21 & 1) != 0)
      goto LABEL_22;
LABEL_43:
    if (v10 < v4 && v10 - v14 < v84)
    {
      v39 = v14 + v84 >= v4 ? v4 : v14 + v84;
      if (v10 != v39)
      {
        v40 = v14;
        v86 = v12;
        v41 = v11 + 32 + 40 * v10;
        do
        {
          v42 = (uint64_t *)(v11 + 40 * v10);
          v43 = *v42;
          v44 = v42[1];
          v45 = v40;
          v46 = (_QWORD *)v41;
          do
          {
            v47 = v46 - 9;
            if (v43 == *(v46 - 9) && v44 == *(v46 - 8))
              break;
            if ((sub_1B2229D24() & 1) == 0)
              break;
            v49 = *(v46 - 5);
            *(v46 - 5) = *v46;
            v46 -= 5;
            v43 = v46[1];
            v44 = v46[2];
            v50 = v46[3];
            v51 = v46[4];
            v52 = *((_OWORD *)v47 + 1);
            *(_OWORD *)(v47 + 5) = *(_OWORD *)v47;
            *(_OWORD *)(v47 + 7) = v52;
            v47[9] = v49;
            *(v46 - 4) = v43;
            *(v46 - 3) = v44;
            *(v46 - 2) = v50;
            *(v46 - 1) = v51;
            ++v45;
          }
          while (v10 != v45);
          ++v10;
          v41 += 40;
        }
        while (v10 != v39);
        v10 = v39;
        v12 = v86;
        v14 = v40;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1B216CC74(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v53 = v12;
    v54 = *((_QWORD *)v12 + 2);
    v87 = v53;
    v55 = *((_QWORD *)v53 + 3);
    v13 = v54 + 1;
    if (v54 >= v55 >> 1)
      v87 = sub_1B216CC74(v55 > 1, v54 + 1, 1, v87);
    *((_QWORD *)v87 + 2) = v13;
    v56 = v87 + 32;
    v57 = &v87[16 * v54 + 32];
    *(_QWORD *)v57 = v14;
    *((_QWORD *)v57 + 1) = v10;
    if (v54)
    {
      v12 = v87;
      while (1)
      {
        v58 = v13 - 1;
        if (v13 >= 4)
        {
          v63 = &v56[16 * v13];
          v64 = *((_QWORD *)v63 - 7) - *((_QWORD *)v63 - 8);
          v61 = *((_QWORD *)v63 - 5) - *((_QWORD *)v63 - 6);
          v62 = v13 - 2;
          v65 = &v56[16 * v13 - 32];
          v59 = *(_QWORD *)v65;
          v60 = *((_QWORD *)v65 + 1);
          if (v61 - v59 + v60 >= v64)
          {
            v68 = v61 < *(_QWORD *)&v56[16 * v58 + 8] - *(_QWORD *)&v56[16 * v58];
            goto LABEL_76;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *(_QWORD *)&v87[16 * v13 + 8] - *(_QWORD *)&v87[16 * v13];
            v67 = *(_QWORD *)&v56[16 * v58 + 8] - *(_QWORD *)&v56[16 * v58];
LABEL_73:
            if (v67 < v66)
              goto LABEL_14;
            goto LABEL_78;
          }
          v59 = *((_QWORD *)v12 + 6);
          v60 = *((_QWORD *)v12 + 7);
          v61 = *((_QWORD *)v12 + 5) - *((_QWORD *)v12 + 4);
          v62 = 1;
        }
        v66 = v60 - v59;
        v67 = *(_QWORD *)&v56[16 * v58 + 8] - *(_QWORD *)&v56[16 * v58];
        if (v66 + v67 < v61)
          goto LABEL_73;
        v68 = v61 < v67;
LABEL_76:
        if (v68)
          v58 = v62;
LABEL_78:
        v69 = &v56[16 * v58 - 16];
        v70 = *(_QWORD *)v69;
        v71 = &v56[16 * v58];
        v72 = *((_QWORD *)v71 + 1);
        sub_1B1DF4EBC((char *)(v11 + 40 * *(_QWORD *)v69), (char *)(v11 + 40 * *(_QWORD *)v71), v11 + 40 * v72, __dst);
        if (v88)
          goto LABEL_90;
        *(_QWORD *)v69 = v70;
        *((_QWORD *)v69 + 1) = v72;
        v12 = v87;
        v73 = *((_QWORD *)v87 + 2);
        v13 = v73 - 1;
        memmove(&v56[16 * v58], v71 + 16, 16 * (v73 - 1 - v58));
        *((_QWORD *)v87 + 2) = v73 - 1;
        if (v73 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
    v12 = v87;
LABEL_14:
    v4 = v83;
  }
  while (v10 < v83);
  v9 = v82;
  v3 = v81;
  v2 = v88;
LABEL_84:
  v82 = v9;
  if (v13 >= 2)
  {
    v74 = *v3;
    do
    {
      v75 = *(_QWORD *)&v12[16 * v13];
      v76 = &v12[16 * v13 + 16];
      v77 = *((_QWORD *)v76 + 1);
      sub_1B1DF4EBC((char *)(v74 + 40 * v75), (char *)(v74 + 40 * *(_QWORD *)v76), v74 + 40 * v77, __dst);
      if (v2)
        break;
      v78 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v78 = sub_1B216D510((uint64_t)v12);
      v79 = &v78[16 * v13];
      *(_QWORD *)v79 = v75;
      *((_QWORD *)v79 + 1) = v77;
      v80 = *((_QWORD *)v78 + 2);
      v12 = v78;
      memmove(&v78[16 * v13 + 16], &v78[16 * v13 + 32], 16 * (v80 - v13));
      *((_QWORD *)v78 + 2) = v80 - 1;
      v13 = v80 - 1;
    }
    while (v80 > 2);
  }
LABEL_90:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v82 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DF3A70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __int128 *v42;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1B22299E8();
  if (result >= v3)
  {
    if (v3)
      return sub_1B1DF4410(0, v3, 1, v2);
    return result;
  }
  v77 = result;
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v78 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_83;
    }
    v76 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    sub_1B1E01D20(0, &qword_1EEF5CDD8);
    v7 = sub_1B2228B0C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v78;
    v76 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v75 = v2;
  v10 = *v2;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = (uint64_t *)(v10 + 32 * v9);
      v15 = *v14;
      v16 = v14[1];
      v17 = (_QWORD *)(v10 + 32 * v13);
      if (v15 == *v17 && v16 == v17[1])
      {
        v21 = v13 + 2;
        if (v13 + 2 < v3)
        {
          v20 = 0;
LABEL_25:
          v22 = (_QWORD *)(v10 + 8 + 32 * v21);
          do
          {
            v24 = (_QWORD *)(v10 + 32 * v9);
            if (*(v22 - 1) == *v24 && *v22 == v24[1])
            {
              if ((v20 & 1) != 0)
              {
                v3 = v78;
                if (v13 >= v21)
                  goto LABEL_43;
                goto LABEL_39;
              }
            }
            else if (((v20 ^ sub_1B2229D24()) & 1) != 0)
            {
              goto LABEL_37;
            }
            v22 += 4;
            v23 = v21 + 1;
            v9 = v21;
            v21 = v23;
          }
          while (v23 < v78);
          v21 = v23;
LABEL_37:
          v3 = v78;
          v9 = v21;
          if ((v20 & 1) == 0)
            goto LABEL_44;
LABEL_38:
          if (v13 < v21)
          {
LABEL_39:
            v26 = 32 * v21;
            v27 = 32 * v13;
            v28 = v21;
            v29 = v13;
            do
            {
              if (v29 != --v28)
              {
                v30 = (_OWORD *)(v10 + v27);
                v31 = v10 + v26;
                v32 = *(_OWORD *)(v10 + v27);
                v33 = *(_QWORD *)(v10 + v27 + 16);
                v34 = *(_QWORD *)(v10 + v27 + 24);
                v35 = *(_OWORD *)(v10 + v26 - 16);
                *v30 = *(_OWORD *)(v10 + v26 - 32);
                v30[1] = v35;
                *(_OWORD *)(v31 - 32) = v32;
                *(_QWORD *)(v31 - 16) = v33;
                *(_QWORD *)(v31 - 8) = v34;
              }
              ++v29;
              v26 -= 32;
              v27 += 32;
            }
            while (v29 < v28);
          }
        }
LABEL_43:
        v9 = v21;
        goto LABEL_44;
      }
      v19 = sub_1B2229D24();
      v20 = v19;
      v21 = v13 + 2;
      if (v13 + 2 < v3)
        goto LABEL_25;
      v9 = v13 + 2;
      if ((v19 & 1) != 0)
        goto LABEL_38;
    }
LABEL_44:
    if (v9 < v3 && v9 - v13 < v77)
    {
      if (v13 + v77 < v3)
        v3 = v13 + v77;
      if (v9 != v3)
      {
        v36 = v10 + 24 + 32 * v9;
        do
        {
          v37 = (uint64_t *)(v10 + 32 * v9);
          v38 = *v37;
          v39 = v37[1];
          v40 = v13;
          v41 = (_QWORD *)v36;
          do
          {
            v42 = (__int128 *)(v41 - 7);
            if (v38 == *(v41 - 7) && v39 == *(v41 - 6))
              break;
            if ((sub_1B2229D24() & 1) == 0)
              break;
            v45 = *v42;
            v44 = *(_OWORD *)(v41 - 5);
            *(v41 - 4) = *v41;
            v41 -= 4;
            v38 = v41[1];
            v39 = v41[2];
            v46 = v41[3];
            v42[2] = v45;
            v42[3] = v44;
            *(v41 - 3) = v38;
            *(v41 - 2) = v39;
            *(v41 - 1) = v46;
            ++v40;
          }
          while (v9 != v40);
          ++v9;
          v36 += 32;
        }
        while (v9 != v3);
        v9 = v3;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1B216CC74(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v48 = *((_QWORD *)v11 + 2);
    v47 = *((_QWORD *)v11 + 3);
    v12 = v48 + 1;
    if (v48 >= v47 >> 1)
      v11 = sub_1B216CC74(v47 > 1, v48 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v49 = v11 + 32;
    v50 = &v11[16 * v48 + 32];
    *(_QWORD *)v50 = v13;
    *((_QWORD *)v50 + 1) = v9;
    if (v48)
    {
      while (1)
      {
        v51 = v12 - 1;
        if (v12 >= 4)
        {
          v56 = &v49[16 * v12];
          v57 = *((_QWORD *)v56 - 7) - *((_QWORD *)v56 - 8);
          v54 = *((_QWORD *)v56 - 5) - *((_QWORD *)v56 - 6);
          v55 = v12 - 2;
          v58 = &v49[16 * v12 - 32];
          v52 = *(_QWORD *)v58;
          v53 = *((_QWORD *)v58 + 1);
          if (v54 - v52 + v53 >= v57)
          {
            v61 = v54 < *(_QWORD *)&v49[16 * v51 + 8] - *(_QWORD *)&v49[16 * v51];
            goto LABEL_75;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v59 = *(_QWORD *)&v49[16 * v12 - 24] - *(_QWORD *)&v11[16 * v12];
            v60 = *(_QWORD *)&v49[16 * v51 + 8] - *(_QWORD *)&v49[16 * v51];
LABEL_72:
            if (v60 < v59)
              goto LABEL_14;
            goto LABEL_77;
          }
          v52 = *((_QWORD *)v11 + 6);
          v53 = *((_QWORD *)v11 + 7);
          v54 = *((_QWORD *)v11 + 5) - *((_QWORD *)v11 + 4);
          v55 = 1;
        }
        v59 = v53 - v52;
        v60 = *(_QWORD *)&v49[16 * v51 + 8] - *(_QWORD *)&v49[16 * v51];
        if (v59 + v60 < v54)
          goto LABEL_72;
        v61 = v54 < v60;
LABEL_75:
        if (v61)
          v51 = v55;
LABEL_77:
        v62 = &v49[16 * v51 - 16];
        v63 = *(_QWORD *)v62;
        v64 = &v49[16 * v51];
        v65 = *((_QWORD *)v64 + 1);
        sub_1B1DF518C((char *)(v10 + 32 * *(_QWORD *)v62), (char *)(v10 + 32 * *(_QWORD *)v64), v10 + 32 * v65, __dst);
        if (v1)
          goto LABEL_89;
        *(_QWORD *)v62 = v63;
        *((_QWORD *)v62 + 1) = v65;
        v66 = *((_QWORD *)v11 + 2);
        v12 = v66 - 1;
        memmove(&v49[16 * v51], v64 + 16, 16 * (v66 - 1 - v51));
        *((_QWORD *)v11 + 2) = v66 - 1;
        if (v66 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v3 = v78;
  }
  while (v9 < v78);
  v8 = v76;
  v2 = v75;
LABEL_83:
  v76 = v8;
  if (v12 >= 2)
  {
    v67 = *v2;
    do
    {
      v68 = *(_QWORD *)&v11[16 * v12];
      v69 = &v11[16 * v12 + 16];
      v70 = *((_QWORD *)v69 + 1);
      sub_1B1DF518C((char *)(v67 + 32 * v68), (char *)(v67 + 32 * *(_QWORD *)v69), v67 + 32 * v70, __dst);
      if (v1)
        break;
      v71 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v71 = sub_1B216D510((uint64_t)v11);
      v72 = v71 + 32;
      v73 = &v71[16 * v12];
      *(_QWORD *)v73 = v68;
      *((_QWORD *)v73 + 1) = v70;
      v11 = v71;
      v74 = *((_QWORD *)v71 + 2);
      memmove(&v72[16 * v12 - 16], &v72[16 * v12], 16 * (v74 - v12));
      *((_QWORD *)v11 + 2) = v74 - 1;
      v12 = v74 - 1;
    }
    while (v74 > 2);
  }
LABEL_89:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v76 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DF4048(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[13];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v20 = result;
  v31 = a3;
  if (a3 != a2)
  {
    v5 = 104 * v31;
    do
    {
      v6 = v20;
      v22 = v5;
      while (1)
      {
        v7 = *a4 + v5;
        sub_1B1B9DC78(v7, (uint64_t)&v24, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
        sub_1B1B9DC78(v7 - 104, (uint64_t)v23, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
        if ((_QWORD)v24 == v23[0] && *((_QWORD *)&v24 + 1) == v23[1])
          break;
        v9 = sub_1B2229D24();
        sub_1B1A057EC((uint64_t)v23, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
        result = sub_1B1A057EC((uint64_t)&v24, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
        if ((v9 & 1) != 0)
        {
          v10 = *a4 + v5;
          v27 = *(_OWORD *)(v10 + 48);
          v28 = *(_OWORD *)(v10 + 64);
          v29 = *(_OWORD *)(v10 + 80);
          v30 = *(_QWORD *)(v10 + 96);
          v24 = *(_OWORD *)v10;
          v25 = *(_OWORD *)(v10 + 16);
          v26 = *(_OWORD *)(v10 + 32);
          v11 = *(_OWORD *)(v10 - 88);
          *(_OWORD *)v10 = *(_OWORD *)(v10 - 104);
          *(_OWORD *)(v10 + 16) = v11;
          v12 = *(_OWORD *)(v10 - 72);
          *(_QWORD *)(v10 + 96) = *(_QWORD *)(v10 - 8);
          v13 = *(_OWORD *)(v10 - 24);
          *(_OWORD *)(v10 + 64) = *(_OWORD *)(v10 - 40);
          *(_OWORD *)(v10 + 80) = v13;
          v14 = *(_OWORD *)(v10 - 56);
          *(_OWORD *)(v10 + 32) = v12;
          *(_OWORD *)(v10 + 48) = v14;
          v15 = v24;
          v16 = v25;
          *(_OWORD *)(v10 - 72) = v26;
          *(_OWORD *)(v10 - 88) = v16;
          *(_OWORD *)(v10 - 104) = v15;
          v17 = v27;
          v18 = v28;
          v19 = v29;
          *(_QWORD *)(v10 - 8) = v30;
          *(_OWORD *)(v10 - 24) = v19;
          *(_OWORD *)(v10 - 40) = v18;
          *(_OWORD *)(v10 - 56) = v17;
          v5 -= 104;
          if (v31 != ++v6)
            continue;
        }
        goto LABEL_5;
      }
      sub_1B1A057EC((uint64_t)v23, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
      result = sub_1B1A057EC((uint64_t)&v24, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
LABEL_5:
      v5 = v22 + 104;
      ++v31;
    }
    while (v31 != a2);
  }
  return result;
}

uint64_t sub_1B1DF4278(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 8 * a3 - 8;
    do
    {
      v9 = *(_QWORD *)(v7 + 8 * v4);
      v10 = v6;
      v11 = (_QWORD *)v8;
      do
      {
        result = *(_QWORD *)(v9 + 40);
        if (result == *(_QWORD *)(*v11 + 40) && *(_QWORD *)(v9 + 48) == *(_QWORD *)(*v11 + 48))
          break;
        result = sub_1B2229D24();
        if ((result & 1) == 0)
          break;
        v13 = *v11;
        v9 = v11[1];
        *v11 = v9;
        v11[1] = v13;
        --v11;
        ++v10;
      }
      while (v4 != v10);
      ++v4;
      v8 += 8;
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_1B1DF432C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 40 * a3 + 32;
    do
    {
      v9 = (uint64_t *)(v7 + 40 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (_QWORD *)v8;
      do
      {
        v13 = v12 - 9;
        if (result == *(v12 - 9) && v10 == *(v12 - 8))
          break;
        result = sub_1B2229D24();
        if ((result & 1) == 0)
          break;
        v15 = *(v12 - 5);
        *(v12 - 5) = *v12;
        v12 -= 5;
        result = v12[1];
        v10 = v12[2];
        v16 = v12[3];
        v17 = v12[4];
        v18 = *((_OWORD *)v13 + 1);
        *(_OWORD *)(v13 + 5) = *(_OWORD *)v13;
        *(_OWORD *)(v13 + 7) = v18;
        v13[9] = v15;
        *(v12 - 4) = result;
        *(v12 - 3) = v10;
        *(v12 - 2) = v16;
        *(v12 - 1) = v17;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 40;
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_1B1DF4410(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 *v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 32 * a3 + 24;
    do
    {
      v9 = (uint64_t *)(v7 + 32 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (_QWORD *)v8;
      do
      {
        v13 = (__int128 *)(v12 - 7);
        if (result == *(v12 - 7) && v10 == *(v12 - 6))
          break;
        result = sub_1B2229D24();
        if ((result & 1) == 0)
          break;
        v16 = *v13;
        v15 = *(_OWORD *)(v12 - 5);
        *(v12 - 4) = *v12;
        v12 -= 4;
        result = v12[1];
        v10 = v12[2];
        v17 = v12[3];
        v13[2] = v16;
        v13[3] = v15;
        *(v12 - 3) = result;
        *(v12 - 2) = v10;
        *(v12 - 1) = v17;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 32;
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_1B1DF44E8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1B2229D24() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1B2229D24() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1B216CD50((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DF4780(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  unint64_t v19;
  char v21;
  char *v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;

  v4 = __dst;
  v5 = a2;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 104;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 104;
  v32 = __src;
  v31 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -103)
    {
      if (__dst != a2 || &a2[104 * v10] <= __dst)
        memmove(__dst, a2, 104 * v10);
      v17 = &v4[104 * v10];
      v30 = (unint64_t)v17;
      v32 = v5;
      if (__src < v5 && v9 >= 104)
      {
        v18 = (char *)(a3 - 104);
        do
        {
          sub_1B1B9DC78((uint64_t)(v17 - 104), (uint64_t)&v28, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
          v19 = (unint64_t)(v5 - 104);
          sub_1B1B9DC78((uint64_t)(v5 - 104), (uint64_t)&v26, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
          if (v28 == v26 && v29 == v27)
            v21 = 0;
          else
            v21 = sub_1B2229D24();
          v22 = v18 + 104;
          sub_1B1A057EC((uint64_t)&v26, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
          sub_1B1A057EC((uint64_t)&v28, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
          if ((v21 & 1) != 0)
          {
            if (v22 != v5 || v18 >= v5)
              memmove(v18, v5 - 104, 0x68uLL);
            v32 -= 104;
            v17 = (char *)v30;
            if (v30 <= (unint64_t)v4)
              break;
          }
          else
          {
            v23 = v30;
            v17 = (char *)(v30 - 104);
            v30 -= 104;
            if ((unint64_t)v22 < v23 || (unint64_t)v18 >= v23 || v22 != (char *)v23)
              memmove(v18, (const void *)(v23 - 104), 0x68uLL);
            v19 = (unint64_t)v5;
            if (v17 <= v4)
              break;
          }
          v18 -= 104;
          v5 = (char *)v19;
        }
        while (v19 > (unint64_t)__src);
      }
LABEL_51:
      sub_1B216CDF8((void **)&v32, (const void **)&v31, &v30);
      return 1;
    }
  }
  else if (v7 >= -103)
  {
    if (__dst != __src || &__src[104 * v8] <= __dst)
      memmove(__dst, __src, 104 * v8);
    v11 = (unint64_t)&v4[104 * v8];
    v30 = v11;
    if ((unint64_t)v5 < a3 && v7 >= 104)
    {
      while (1)
      {
        sub_1B1B9DC78((uint64_t)v5, (uint64_t)&v28, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
        sub_1B1B9DC78((uint64_t)v4, (uint64_t)&v26, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1E01D20);
        if (v28 == v26 && v29 == v27)
          break;
        v13 = sub_1B2229D24();
        sub_1B1A057EC((uint64_t)&v26, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
        sub_1B1A057EC((uint64_t)&v28, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
        if ((v13 & 1) == 0)
          goto LABEL_18;
        v14 = v32;
        v15 = (unint64_t)(v5 + 104);
        if (v32 >= v5 && (unint64_t)v32 < v15 && v32 == v5)
          v14 = v5;
        else
          memmove(v32, v5, 0x68uLL);
LABEL_22:
        v32 = v14 + 104;
        v4 = v31;
        if ((unint64_t)v31 < v11)
        {
          v5 = (char *)v15;
          if (v15 < a3)
            continue;
        }
        goto LABEL_51;
      }
      sub_1B1A057EC((uint64_t)&v26, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
      sub_1B1A057EC((uint64_t)&v28, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
LABEL_18:
      v14 = v32;
      v16 = v31 + 104;
      if (v32 != v31 || v32 >= v16)
        memmove(v32, v31, 0x68uLL);
      v31 = v16;
      v15 = (unint64_t)v5;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DF4C14(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t result;
  char *v26;
  char *v27;
  char *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v28 = __src;
  v27 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v17 = &v4[8 * v13];
      v26 = v17;
      v28 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v18 = (char *)(a3 - 8);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 8;
          v21 = *((_QWORD *)v17 - 1);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 8;
          v23 = *(_QWORD *)(v22 + 48);
          v24 = *(_QWORD *)(v21 + 40) == *(_QWORD *)(v22 + 40) && *(_QWORD *)(v21 + 48) == v23;
          if (v24 || (sub_1B2229D24() & 1) == 0)
          {
            v26 = v17 - 8;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_QWORD *)v18 = *((_QWORD *)v17 - 1);
            v19 = v6;
            v17 -= 8;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_QWORD *)v18 = *(_QWORD *)v19;
            v28 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 8;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        v15 = *(_QWORD *)(*(_QWORD *)v6 + 40) == *(_QWORD *)(*(_QWORD *)v4 + 40)
           && *(_QWORD *)(*(_QWORD *)v6 + 48) == *(_QWORD *)(*(_QWORD *)v4 + 48);
        if (v15 || (sub_1B2229D24() & 1) == 0)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v27 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 8;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v28 = v7;
    }
LABEL_50:
    sub_1B216D018(&v28, &v27, &v26);
    return 1;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DF4EBC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t result;
  char *v31;
  char *v32;
  char *v33;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v33 = __src;
  v32 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst)
        memmove(__dst, a2, 40 * v11);
      v19 = &v4[40 * v11];
      v31 = v19;
      v33 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        v20 = a3 - 40;
        v21 = v6;
        while (1)
        {
          v22 = (char *)(v20 + 40);
          v23 = *((_QWORD *)v21 - 5);
          v24 = *((_QWORD *)v21 - 4);
          v21 -= 40;
          v25 = *((_QWORD *)v19 - 5) == v23 && *((_QWORD *)v19 - 4) == v24;
          if (v25 || (sub_1B2229D24() & 1) == 0)
          {
            v31 = v19 - 40;
            if (v22 < v19 || v20 >= (unint64_t)v19 || v22 != v19)
            {
              v28 = *(_OWORD *)(v19 - 40);
              v29 = *(_OWORD *)(v19 - 24);
              *(_QWORD *)(v20 + 32) = *((_QWORD *)v19 - 1);
              *(_OWORD *)v20 = v28;
              *(_OWORD *)(v20 + 16) = v29;
            }
            v21 = v6;
            v19 -= 40;
            if (v6 <= v7)
              goto LABEL_46;
          }
          else
          {
            if (v22 != v6 || v20 >= (unint64_t)v6)
            {
              v26 = *(_OWORD *)v21;
              v27 = *((_OWORD *)v21 + 1);
              *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
              *(_OWORD *)v20 = v26;
              *(_OWORD *)(v20 + 16) = v27;
            }
            v33 = v21;
            if (v21 <= v7)
              goto LABEL_46;
          }
          v20 -= 40;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_46;
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = &v4[40 * v9];
    v31 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        v13 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v13 || (sub_1B2229D24() & 1) == 0)
        {
          if (v7 != v4)
          {
            v17 = *(_OWORD *)v4;
            v18 = *((_OWORD *)v4 + 1);
            *((_QWORD *)v7 + 4) = *((_QWORD *)v4 + 4);
            *(_OWORD *)v7 = v17;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 40;
          v32 = v4;
          v14 = v6;
        }
        else
        {
          v14 = v6 + 40;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            v15 = *(_OWORD *)v6;
            v16 = *((_OWORD *)v6 + 1);
            *((_QWORD *)v7 + 4) = *((_QWORD *)v6 + 4);
            *(_OWORD *)v7 = v15;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 40;
        if (v4 >= v12)
          break;
        v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      v33 = v7;
    }
LABEL_46:
    sub_1B216D30C((void **)&v33, (const void **)&v32, &v31);
    return 1;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DF518C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v19 = &v4[32 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v20 = (char *)(a3 - 32);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 32;
          v23 = *((_QWORD *)v21 - 4);
          v24 = *((_QWORD *)v21 - 3);
          v21 -= 32;
          v25 = *((_QWORD *)v19 - 4) == v23 && *((_QWORD *)v19 - 3) == v24;
          if (v25 || (sub_1B2229D24() & 1) == 0)
          {
            v29 = v19 - 32;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
            {
              v27 = *((_OWORD *)v19 - 1);
              *(_OWORD *)v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v27;
            }
            v21 = v6;
            v19 -= 32;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
            {
              v26 = *((_OWORD *)v21 + 1);
              *(_OWORD *)v20 = *(_OWORD *)v21;
              *((_OWORD *)v20 + 1) = v26;
            }
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 32;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[32 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1B2229D24() & 1) == 0)
        {
          if (v7 != v4)
          {
            v18 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 32;
          v30 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 32;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
          {
            v17 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        v7 += 32;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_1B216D3C4((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1DF5424(uint64_t a1)
{
  return sub_1B1DF54C8(a1, 0xEA00000000006E49);
}

uint64_t sub_1B1DF5474(uint64_t a1)
{
  return sub_1B1DF54C8(a1, 0xEB0000000074754FLL);
}

uint64_t sub_1B1DF54C8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v3 = v2;
  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1B1DF562C((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4);
    if (v2)
      swift_willThrow();
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v3 = sub_1B1DF562C((unint64_t *)v9, v6, v4);
    MEMORY[0x1B5E23F88](v9, -1, -1);
  }
  return v3;
}

uint64_t sub_1B1DF562C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  _BYTE v24[96];
  int64_t v25;

  v19 = 0;
  v4 = 0;
  v5 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  v20 = a3 + 104;
  v21 = v25 - 5;
  if (!v8)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v10 = v9 | (v4 << 6);
  while (1)
  {
    v11 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    sub_1B19F8F0C(*(_QWORD *)(a3 + 56) + 88 * v10, (uint64_t)v24);
    v22[0] = v12;
    v22[1] = v13;
    sub_1B19F8F0C((uint64_t)v24, (uint64_t)&v23);
    swift_bridgeObjectRetain_n();
    LOBYTE(v12) = sub_1B2228920();
    sub_1B1A057EC((uint64_t)v22, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
    sub_1B1A203C4((uint64_t)v24);
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      ++v19;
      if (v8)
        goto LABEL_4;
    }
    else if (v8)
    {
      goto LABEL_4;
    }
LABEL_7:
    v14 = v4 + 1;
    if (v4 + 1 >= v25)
      return sub_1B1C04EA0(a1, a2, v19, a3);
    v15 = *(_QWORD *)(v5 + 8 * v14);
    if (!v15)
    {
      v14 = v4 + 2;
      if (v4 + 2 >= v25)
        return sub_1B1C04EA0(a1, a2, v19, a3);
      v15 = *(_QWORD *)(v5 + 8 * v14);
      if (!v15)
      {
        v14 = v4 + 3;
        if (v4 + 3 >= v25)
          return sub_1B1C04EA0(a1, a2, v19, a3);
        v15 = *(_QWORD *)(v5 + 8 * v14);
        if (!v15)
        {
          v14 = v4 + 4;
          if (v4 + 4 >= v25)
            return sub_1B1C04EA0(a1, a2, v19, a3);
          v15 = *(_QWORD *)(v5 + 8 * v14);
          if (!v15)
            break;
        }
      }
    }
LABEL_18:
    v8 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v14 << 6);
    v4 = v14;
  }
  while (v21 != v4)
  {
    v15 = *(_QWORD *)(v20 + 8 * v4++);
    if (v15)
    {
      v14 = v4 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C04EA0(a1, a2, v19, a3);
}

uint64_t sub_1B1DF5860(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_1B1DF5D60();
  if (!v8)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B19F8D30();
    return swift_release();
  }
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = (_QWORD *)*a5;
  v17 = sub_1B1DC3B00(v7, v8);
  v18 = v16;
  v19 = v15[2] + ((v16 & 1) == 0);
  if (v15[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
    }
    else
    {
      sub_1B1EA8664();
      v22 = (_QWORD *)*a5;
      if ((v18 & 1) != 0)
        goto LABEL_8;
    }
LABEL_10:
    v22[(v17 >> 6) + 8] |= 1 << v17;
    v24 = (uint64_t *)(v22[6] + 16 * v17);
    *v24 = v11;
    v24[1] = v12;
    v25 = (_QWORD *)(v22[7] + 16 * v17);
    *v25 = v13;
    v25[1] = v14;
    ++v22[2];
LABEL_11:
    v26 = sub_1B1DF5D60();
    if (v27)
    {
      v30 = v26;
      v31 = v27;
      v32 = v28;
      v33 = v29;
      do
      {
        v39 = (_QWORD *)*a5;
        v40 = sub_1B1DC3B00(v30, v31);
        v42 = v41;
        v43 = v39[2] + ((v41 & 1) == 0);
        if (v39[3] < v43)
        {
          sub_1B1E91634(v43, 1);
          v44 = sub_1B1DC3B00(v30, v31);
          if ((v42 & 1) != (v45 & 1))
            goto LABEL_21;
          v40 = v44;
        }
        v46 = (_QWORD *)*a5;
        if ((v42 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v47 = (_QWORD *)(v46[7] + 16 * v40);
          swift_bridgeObjectRelease();
          *v47 = v32;
          v47[1] = v33;
        }
        else
        {
          v46[(v40 >> 6) + 8] |= 1 << v40;
          v34 = (uint64_t *)(v46[6] + 16 * v40);
          *v34 = v30;
          v34[1] = v31;
          v35 = (_QWORD *)(v46[7] + 16 * v40);
          *v35 = v32;
          v35[1] = v33;
          ++v46[2];
        }
        v30 = sub_1B1DF5D60();
        v31 = v36;
        v32 = v37;
        v33 = v38;
      }
      while (v36);
    }
    goto LABEL_20;
  }
  sub_1B1E91634(v19, a4 & 1);
  v20 = sub_1B1DC3B00(v11, v12);
  if ((v18 & 1) == (v21 & 1))
  {
    v17 = v20;
    v22 = (_QWORD *)*a5;
    if ((v18 & 1) == 0)
      goto LABEL_10;
LABEL_8:
    swift_bridgeObjectRelease();
    v23 = (_QWORD *)(v22[7] + 16 * v17);
    swift_bridgeObjectRelease();
    *v23 = v13;
    v23[1] = v14;
    goto LABEL_11;
  }
LABEL_21:
  result = sub_1B2229FC4();
  __break(1u);
  return result;
}

double sub_1B1DF5B48@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  double result;
  _OWORD v21[6];
  uint64_t v22;
  _OWORD v23[6];
  uint64_t v24;
  __int128 v25;
  _OWORD v26[5];
  uint64_t v27;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_1B19F8F0C(*(_QWORD *)(v3 + 56) + 88 * v10, (uint64_t)v26);
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  v14 = (unint64_t)(v6 + 64) >> 6;
  v15 = v5 + 1;
  if (v5 + 1 < v14)
  {
    v16 = *(_QWORD *)(v4 + 8 * v15);
    if (v16)
    {
LABEL_6:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v15 << 6);
      v7 = v15;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_9:
        v15 = v17;
        goto LABEL_6;
      }
      v15 = v5 + 3;
      v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        v16 = *(_QWORD *)(v4 + 8 * v15);
        if (v16)
          goto LABEL_6;
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_9;
          v15 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            v16 = *(_QWORD *)(v4 + 8 * v15);
            if (v16)
              goto LABEL_6;
            v7 = v14 - 1;
            v18 = v5 + 6;
            while (v14 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v15 = v18 - 1;
                goto LABEL_6;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v27 = 0;
  v25 = 0u;
  memset(v26, 0, sizeof(v26));
LABEL_21:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  sub_1B1A025EC((uint64_t)&v25, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1B1E01FF4);
  if (*((_QWORD *)&v23[0] + 1))
  {
    v21[4] = v23[4];
    v21[5] = v23[5];
    v22 = v24;
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    v21[3] = v23[3];
    v19(v21);
    sub_1B1A057EC((uint64_t)v21, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
  }
  else
  {
    *(_QWORD *)(a1 + 96) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B1DF5D60()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  _QWORD v24[4];

  v1 = *v0;
  v2 = v0[3];
  v3 = v0[4];
  v4 = v2;
  if (v3)
  {
    v5 = __clz(__rbit64(v3));
    v6 = (v3 - 1) & v3;
    v7 = v5 | (v2 << 6);
LABEL_3:
    v8 = 16 * v7;
    v9 = (uint64_t *)(*(_QWORD *)(v1 + 48) + v8);
    v10 = *v9;
    v11 = v9[1];
    v12 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v8);
    v13 = *v12;
    v14 = v12[1];
    v0[3] = v4;
    v0[4] = v6;
    v15 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v24[0] = v10;
    v24[1] = v11;
    v24[2] = v13;
    v24[3] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(&v23, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
  v17 = (unint64_t)(v0[2] + 64) >> 6;
  v18 = v2 + 1;
  if (v2 + 1 < v17)
  {
    v19 = v0[1];
    v20 = *(_QWORD *)(v19 + 8 * v18);
    if (v20)
    {
LABEL_6:
      v6 = (v20 - 1) & v20;
      v7 = __clz(__rbit64(v20)) + (v18 << 6);
      v4 = v18;
      goto LABEL_3;
    }
    v21 = v2 + 2;
    v4 = v2 + 1;
    if (v2 + 2 < v17)
    {
      v20 = *(_QWORD *)(v19 + 8 * v21);
      if (v20)
      {
LABEL_9:
        v18 = v21;
        goto LABEL_6;
      }
      v18 = v2 + 3;
      v4 = v2 + 2;
      if (v2 + 3 < v17)
      {
        v20 = *(_QWORD *)(v19 + 8 * v18);
        if (v20)
          goto LABEL_6;
        v21 = v2 + 4;
        v4 = v2 + 3;
        if (v2 + 4 < v17)
        {
          v20 = *(_QWORD *)(v19 + 8 * v21);
          if (v20)
            goto LABEL_9;
          v18 = v2 + 5;
          v4 = v2 + 4;
          if (v2 + 5 < v17)
          {
            v20 = *(_QWORD *)(v19 + 8 * v18);
            if (v20)
              goto LABEL_6;
            v4 = v17 - 1;
            v22 = v2 + 6;
            while (v17 != v22)
            {
              v20 = *(_QWORD *)(v19 + 8 * v22++);
              if (v20)
              {
                v18 = v22 - 1;
                goto LABEL_6;
              }
            }
          }
        }
      }
    }
  }
  result = 0;
  v0[3] = v4;
  v0[4] = 0;
  return result;
}

uint64_t sub_1B1DF5EEC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1DF5F20(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1B2229D24(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_BYTE *)(a2 + 16);
    v8 = sub_1B1FBAEF8(*(_BYTE *)(a1 + 16));
    v10 = v9;
    if (v8 == sub_1B1FBAEF8(v7) && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v13 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v13 & 1) == 0)
        return result;
    }
    if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32))
      return 1;
    else
      return sub_1B2229D24();
  }
  return result;
}

uint64_t sub_1B1DF6020(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  char v9;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1B2229D24(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1B2229D24(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (v9 = sub_1B2229D24(), result = 0, (v9 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7])
          return 1;
        else
          return sub_1B2229D24();
      }
    }
  }
  return result;
}

uint64_t sub_1B1DF60EC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = 0;
  v21 = swift_bridgeObjectRetain() + 112;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v18 = v8 + 1;
    if (v8 + 1 >= v7)
      return swift_release();
    v19 = *(_QWORD *)(v22 + 8 * v18);
    if (!v19)
    {
      v18 = v8 + 2;
      if (v8 + 2 >= v7)
        return swift_release();
      v19 = *(_QWORD *)(v22 + 8 * v18);
      if (!v19)
      {
        v18 = v8 + 3;
        if (v8 + 3 >= v7)
          return swift_release();
        v19 = *(_QWORD *)(v22 + 8 * v18);
        if (!v19)
        {
          v18 = v8 + 4;
          if (v8 + 4 >= v7)
            return swift_release();
          v19 = *(_QWORD *)(v22 + 8 * v18);
          if (!v19)
          {
            v18 = v8 + 5;
            if (v8 + 5 >= v7)
              return swift_release();
            v19 = *(_QWORD *)(v22 + 8 * v18);
            if (!v19)
              break;
          }
        }
      }
    }
LABEL_20:
    v6 = (v19 - 1) & v19;
    v10 = __clz(__rbit64(v19)) + (v18 << 6);
    v8 = v18;
LABEL_5:
    v11 = 16 * v10;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v13 = *v12;
    v14 = v12[1];
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v11);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v13, v14, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  while (v7 - 6 != v8)
  {
    v19 = *(_QWORD *)(v21 + 8 * v8++);
    if (v19)
    {
      v18 = v8 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B1DF62A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[32];
  _QWORD v25[6];

  sub_1B1791524(0, (unint64_t *)&qword_1ED4BA860, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEC990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = (char *)&v22 - v2;
  v4 = sub_1B2229610();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B22287A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2228788();
  v23 = sub_1B2228758();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  sub_1B2227CB4();
  swift_allocObject();
  sub_1B2227CA8();
  sub_1B2229604();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  v16 = type metadata accessor for SerializationContext();
  swift_allocObject();
  LOBYTE(v25[0]) = 1;
  v17 = sub_1B20696D4(0, 2048, 0, 0x100000000);
  v25[3] = v16;
  v25[0] = v17;
  v18 = (void (*)(_BYTE *, _QWORD))sub_1B2227C90();
  sub_1B20E0F5C((uint64_t)v25, (uint64_t)v8);
  v18(v24, 0);
  if (v15 >> 60 == 15)
  {
    swift_release();
    return 0;
  }
  else
  {
    _s7ContextCMa();
    v20 = v23;
    sub_1B1A0DC90(v23, v15);
    sub_1B19E52CC(&qword_1EEF5C5A0, (uint64_t (*)(uint64_t))_s7ContextCMa, (uint64_t)&unk_1B22963AC);
    v21 = v25[5];
    sub_1B2227C84();
    sub_1B1A0DAC8(v20, v15);
    if (v21)
    {
      swift_release();
      return sub_1B1A0DAC8(v20, v15);
    }
    else
    {
      sub_1B1A0DAC8(v20, v15);
      swift_release();
      return v25[0];
    }
  }
}

uint64_t sub_1B1DF6580(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1B2029FFC(0, v2, 0);
    v3 = v18;
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 1272);
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      swift_bridgeObjectRetain();
      v9 = a2;
      v10 = v17(v7, v8);
      v12 = v11;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v18 + 16);
      v13 = *(_QWORD *)(v18 + 24);
      if (v14 >= v13 >> 1)
        sub_1B2029FFC(v13 > 1, v14 + 1, 1);
      v6 += 2;
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = v18 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      --v2;
      a2 = v9;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1B1DF6698()
{
  unint64_t v0;

  v0 = sub_1B2229F64();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11)
    return 17;
  else
    return v0;
}

uint64_t sub_1B1DF66E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44495565736162 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795465736162 && a2 == 0xE800000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xED0000656D614E72)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_1B1DF6860(_QWORD *result, uint64_t a2, void (*a3)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v17;
  uint64_t i;
  _QWORD v19[5];
  uint64_t v20;

  v3 = result[2];
  if (v3)
  {
    v4 = a2;
    v5 = *(_QWORD *)(a2 + 16);
    if (v5)
    {
      v6 = result;
      v7 = result[4];
      v8 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = 0;
      v20 = v5 - 1;
      v17 = v6 + 7;
      for (i = v3 - 1; ; --i)
      {
        v10 = v4;
        v11 = v9;
        v12 = v4 + v9;
        sub_1B19FA278(v12 + 32, (uint64_t)v19);
        v14 = *(_QWORD *)(v12 + 32);
        v13 = *(_QWORD *)(v12 + 40);
        sub_1B19F8C58(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
        a3(v7, v8, v19);
        swift_bridgeObjectRelease();
        sub_1B19F9FEC(v14, v13);
        v15 = v20;
        if (!i || !v20)
          break;
        v7 = *(v17 - 1);
        v8 = *v17;
        swift_bridgeObjectRetain();
        v20 = v15 - 1;
        v17 += 2;
        v9 = v11 + 40;
        v4 = v10;
      }
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B1DF69B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v17;

  result = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 1440);
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v8 = *(i - 1);
      v9 = *i;
      swift_bridgeObjectRetain();
      v10 = v6(v8, v9);
      if (v10)
      {
        if (*(_QWORD *)(*(_QWORD *)(a3 + 256) + 16))
        {
          v11 = *(_QWORD *)(v10 + 40);
          v12 = *(_QWORD *)(v10 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B1DC3B00(v11, v12);
          v14 = v13;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = swift_bridgeObjectRelease();
          if ((v14 & 1) != 0)
          {
            MEMORY[0x1B5E2064C](v15);
            if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1B2228AF4();
            sub_1B2228B30();
            sub_1B2228AD0();
            goto LABEL_4;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_4:
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
  }
  return result;
}

uint64_t sub_1B1DF6B30@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v24;
  int64_t v25;

  v5 = result;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(result + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(result + 64);
  v24 = result + 64;
  v25 = (unint64_t)(v7 + 63) >> 6;
  v22 = result + 112;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_20;
    }
    v12 = v6 + 1;
    if (v6 + 1 >= v25)
      goto LABEL_28;
    v13 = *(_QWORD *)(v24 + 8 * v12);
    if (!v13)
    {
      v12 = v6 + 2;
      if (v6 + 2 >= v25)
        goto LABEL_28;
      v13 = *(_QWORD *)(v24 + 8 * v12);
      if (!v13)
      {
        v12 = v6 + 3;
        if (v6 + 3 >= v25)
          goto LABEL_28;
        v13 = *(_QWORD *)(v24 + 8 * v12);
        if (!v13)
        {
          v12 = v6 + 4;
          if (v6 + 4 >= v25)
            goto LABEL_28;
          v13 = *(_QWORD *)(v24 + 8 * v12);
          if (!v13)
          {
            v12 = v6 + 5;
            if (v6 + 5 >= v25)
              goto LABEL_28;
            v13 = *(_QWORD *)(v24 + 8 * v12);
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_19:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
LABEL_20:
    v14 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v11);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v11);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    if (*v17 == a2 && v19 == a3)
    {
      v18 = a2;
      v19 = a3;
LABEL_27:
      swift_retain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    result = sub_1B2229D24();
    if ((result & 1) != 0)
      goto LABEL_27;
  }
  while (v25 - 6 != v6)
  {
    v13 = *(_QWORD *)(v22 + 8 * v6++);
    if (v13)
    {
      v12 = v6 + 5;
      goto LABEL_19;
    }
  }
LABEL_28:
  v15 = 0;
  v16 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
LABEL_29:
  *a4 = v15;
  a4[1] = v16;
  a4[2] = v18;
  a4[3] = v19;
  a4[4] = v20;
  return result;
}

uint64_t sub_1B1DF6D2C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;

  result = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 1456);
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v7 = *(i - 1);
      v8 = *i;
      swift_bridgeObjectRetain();
      v9 = v5(v7, v8);
      if (v9)
      {
        v11 = *(_QWORD *)(v9 + 40);
        v10 = *(_QWORD *)(v9 + 48);
        swift_bridgeObjectRetain();
        v12 = swift_bridgeObjectRetain();
        sub_1B1DF6B30(v12, v11, v10, v14);
        swift_bridgeObjectRelease();
        sub_1B1A025EC((uint64_t)v14, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1B1E01C50);
        if (v16)
        {
          sub_1B19F8C58(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1E01C6C);
          swift_bridgeObjectRelease();
          v13 = swift_bridgeObjectRelease();
          MEMORY[0x1B5E2064C](v13);
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B2228AF4();
          sub_1B2228B30();
          sub_1B2228AD0();
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_bridgeObjectRelease();
LABEL_4:
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
  }
  return result;
}

uint64_t sub_1B1DF6ECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = 0;
  v3 = a1 + 40;
  v4 = -v1;
  v5 = MEMORY[0x1E0DEE9D8];
  v14 = a1 + 40;
  do
  {
    v6 = (uint64_t *)(v3 + 16 * v2++);
    while (1)
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      v9 = sub_1B2228914();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
        break;
      v6 += 2;
      swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1)
        return v5;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1B2029FFC(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v11 = *(_QWORD *)(v5 + 16);
    v10 = *(_QWORD *)(v5 + 24);
    if (v11 >= v10 >> 1)
      sub_1B2029FFC(v10 > 1, v11 + 1, 1);
    *(_QWORD *)(v5 + 16) = v11 + 1;
    v12 = v5 + 16 * v11;
    *(_QWORD *)(v12 + 32) = v8;
    *(_QWORD *)(v12 + 40) = v7;
    v3 = v14;
  }
  while (v4 + v2);
  return v5;
}

uint64_t sub_1B1DF7044(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v22;

  v7 = 0;
  v8 = 0;
  v9 = a3 + 64;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v22 = a3 + 104;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_19;
    }
    v16 = v8 + 1;
    if (v8 + 1 >= v13)
      return sub_1B1C0574C(a1, a2, v7, a3);
    v17 = *(_QWORD *)(v9 + 8 * v16);
    if (!v17)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        return sub_1B1C0574C(a1, a2, v7, a3);
      v17 = *(_QWORD *)(v9 + 8 * v16);
      if (!v17)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          return sub_1B1C0574C(a1, a2, v7, a3);
        v17 = *(_QWORD *)(v9 + 8 * v16);
        if (!v17)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            return sub_1B1C0574C(a1, a2, v7, a3);
          v17 = *(_QWORD *)(v9 + 8 * v16);
          if (!v17)
            break;
        }
      }
    }
LABEL_18:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v8 = v16;
LABEL_19:
    v18 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v15);
    v19 = *v18 == *(_QWORD *)(a4 + 40) && v18[1] == *(_QWORD *)(a4 + 48);
    if (v19 || (sub_1B2229D24() & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      ++v7;
    }
  }
  while (v13 - 5 != v8)
  {
    v17 = *(_QWORD *)(v22 + 8 * v8++);
    if (v17)
    {
      v16 = v8 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C0574C(a1, a2, v7, a3);
}

uint64_t sub_1B1DF71E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  _QWORD *v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v45 = a3;
  v49 = a2;
  v51 = *MEMORY[0x1E0C80C00];
  v48 = *(_QWORD *)(a1 + 16);
  if (v48)
  {
    v3 = 0;
    v47 = a1 + 32;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v44 = v4;
      while (1)
      {
        v8 = v3++;
        v9 = *(_QWORD **)(v49 + 40);
        v10 = v9[2];
        if (!v10)
          goto LABEL_7;
        v11 = (uint64_t *)(v47 + 16 * v8);
        v13 = *v11;
        v12 = v11[1];
        if (v9[4] != *v11 || v9[5] != v12)
        {
          if ((sub_1B2229D24() & 1) == 0)
          {
            if (v10 == 1)
              goto LABEL_7;
            v30 = v9[6] == v13 && v9[7] == v12;
            if (!v30 && (sub_1B2229D24() & 1) == 0)
            {
              v31 = v10 - 2;
              if (v10 == 2)
                goto LABEL_7;
              v32 = v9 + 9;
              while (1)
              {
                v33 = *(v32 - 1) == v13 && *v32 == v12;
                if (v33 || (sub_1B2229D24() & 1) != 0)
                  break;
                v32 += 2;
                if (!--v31)
                  goto LABEL_7;
              }
            }
          }
          if ((sub_1B2229D24() & 1) == 0)
          {
            v34 = v9 + 7;
            v35 = 1;
            while (v10 != v35)
            {
              v15 = v35;
              if (*(v34 - 1) != v13 || *v34 != v12)
              {
                v37 = sub_1B2229D24();
                v35 = v15 + 1;
                v34 += 2;
                if ((v37 & 1) == 0)
                  continue;
              }
              goto LABEL_16;
            }
            goto LABEL_7;
          }
        }
        v15 = 0;
LABEL_16:
        v16 = *(_QWORD *)(v49 + 56);
        if (v16 >> 62)
          break;
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v15 < v17)
          goto LABEL_18;
LABEL_6:
        swift_bridgeObjectRelease();
LABEL_7:
        if (v3 == v48)
          return v44;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = sub_1B22296AC();
      swift_bridgeObjectRelease();
      if (v15 >= v38)
        goto LABEL_6;
LABEL_18:
      v18 = *(_QWORD *)(v49 + 56);
      if ((v18 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v19 = MEMORY[0x1B5E21018](v15, v18);
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = *(_QWORD *)(v18 + 8 * v15 + 32);
        swift_retain();
      }
      v20 = *(_QWORD *)(v45 + 256);
      v21 = *(_BYTE *)(v20 + 32);
      v22 = v21 & 0x3F;
      v23 = (unint64_t)((1 << v21) + 63) >> 6;
      v24 = 8 * v23;
      swift_retain_n();
      isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v22 <= 0xD
        || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
      {
        MEMORY[0x1E0C80A78](isStackAllocationSafe, v26);
        bzero((char *)&v44 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0), v24);
        swift_retain();
        v5 = v46;
        v6 = sub_1B1DF7044((unint64_t *)((char *)&v44 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0)), v23, v20, v19);
        swift_release();
        v46 = v5;
        if (v5)
        {
          swift_willThrow();
LABEL_61:
          result = swift_release();
          __break(1u);
          return result;
        }
      }
      else
      {
        v27 = (void *)swift_slowAlloc();
        bzero(v27, v24);
        swift_retain();
        v28 = v46;
        v29 = sub_1B1DF7044((unint64_t *)v27, v23, v20, v19);
        v46 = v28;
        if (v28)
        {
          swift_release();
          MEMORY[0x1B5E23F88](v27, -1, -1);
          goto LABEL_61;
        }
        v6 = v29;
        swift_release();
        MEMORY[0x1B5E23F88](v27, -1, -1);
      }
      swift_release_n();
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(v6 + 16);
      swift_release();
      if (v7)
        goto LABEL_6;
      v4 = v44;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v50 = v4;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B2029FFC(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v50;
      }
      v41 = *(_QWORD *)(v4 + 16);
      v40 = *(_QWORD *)(v4 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_1B2029FFC(v40 > 1, v41 + 1, 1);
        v4 = v50;
      }
      *(_QWORD *)(v4 + 16) = v41 + 1;
      v42 = v4 + 16 * v41;
      *(_QWORD *)(v42 + 32) = v13;
      *(_QWORD *)(v42 + 40) = v12;
      if (v3 == v48)
        return v4;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B1DF7670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = 0;
  v6 = a1 + 40;
  v7 = *(_QWORD *)(a1 + 16) + 1;
  v8 = MEMORY[0x1E0DEE9D8];
  v19 = a1 + 40;
LABEL_2:
  v9 = (uint64_t *)(v6 + 16 * v5);
  while (1)
  {
    v10 = v5++;
    if (v7 == v5)
      return v8;
    v11 = *(v9 - 1);
    v12 = *v9;
    if (v11 == a2 && v12 == a3)
    {
      v11 = a2;
      v12 = a3;
LABEL_11:
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1B2029FFC(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v15 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v8 + 24);
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_1B2029FFC(v14 > 1, v15 + 1, 1);
        v16 = v15 + 1;
      }
      v5 = v10 + 1;
      *(_QWORD *)(v8 + 16) = v16;
      v17 = v8 + 16 * v15;
      *(_QWORD *)(v17 + 32) = v11;
      *(_QWORD *)(v17 + 40) = v12;
      v6 = v19;
      goto LABEL_2;
    }
    v9 += 2;
    if ((sub_1B2229D24() & 1) != 0)
      goto LABEL_11;
  }
}

uint64_t sub_1B1DF77B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_1B1A2044C();
  sub_1B1A20490();
  v3 = 0;
  v4 = a1 + 40;
  v5 = -v1;
  v6 = MEMORY[0x1E0DEE9D8];
  v15 = v4;
  do
  {
    v7 = (uint64_t *)(v4 + 16 * v3++);
    while (1)
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      swift_bridgeObjectRetain();
      if ((sub_1B222862C() & 1) != 0)
        break;
      v7 += 2;
      swift_bridgeObjectRelease();
      ++v3;
      if (v5 + v3 == 1)
        return v6;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1B2029FFC(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v11 = *(_QWORD *)(v6 + 16);
    v10 = *(_QWORD *)(v6 + 24);
    v12 = v11 + 1;
    if (v11 >= v10 >> 1)
    {
      sub_1B2029FFC(v10 > 1, v11 + 1, 1);
      v12 = v11 + 1;
    }
    *(_QWORD *)(v6 + 16) = v12;
    v13 = v6 + 16 * v11;
    *(_QWORD *)(v13 + 32) = v8;
    *(_QWORD *)(v13 + 40) = v9;
    v4 = v15;
  }
  while (v5 + v3);
  return v6;
}

uint64_t sub_1B1DF793C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    v6 = sub_1B22296AC();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      v17 = v6;
      v7 = 0;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x1B5E21018](v7, a1);
        }
        else
        {
          v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
          swift_retain();
        }
        sub_1B1A06460();
        swift_bridgeObjectRetain();
        v9 = (_QWORD *)sub_1B2229280();
        swift_bridgeObjectRelease();
        if (v9[2] < 2uLL)
        {
          swift_bridgeObjectRelease();
          v14 = *(_QWORD *)(v8 + 24);
          v13 = *(_QWORD *)(v8 + 32);
          swift_bridgeObjectRetain();
          if (v14 != a2)
            goto LABEL_16;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1B1FFEE34(v9);
          --v9[2];
          swift_bridgeObjectRelease();
          v10 = MEMORY[0x1E0DEBAF0];
          sub_1B1A02758(0, (unint64_t *)&qword_1EEF5D530, MEMORY[0x1E0DEBAF0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1B1BCBBF8(&qword_1EEF5D538, (unint64_t *)&qword_1EEF5D530, v10, MEMORY[0x1E0DEAF38]);
          sub_1B1A06504();
          sub_1B22289BC();
          swift_bridgeObjectRelease();
          v11 = sub_1B2228968();
          v13 = v12;
          v6 = v17;
          if (v11 != a2)
            goto LABEL_16;
        }
        if (v13 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          sub_1B2229520();
          sub_1B2229568();
          sub_1B2229574();
          sub_1B2229538();
          goto LABEL_5;
        }
LABEL_16:
        v15 = sub_1B2229D24();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          goto LABEL_17;
        swift_release();
LABEL_5:
        if (v6 == ++v7)
          return v18;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B1DF7C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;

  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v4 = 0;
  v12 = (unint64_t)(v1 + 63) >> 6;
  v10 = swift_bridgeObjectRetain() + 112;
  while (v3)
  {
    v3 &= v3 - 1;
LABEL_5:
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_1B2228914();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
    {
      v8 = 1;
      goto LABEL_23;
    }
  }
  v6 = v4 + 1;
  if (v4 + 1 >= v12)
    goto LABEL_22;
  v7 = *(_QWORD *)(v11 + 8 * v6);
  if (v7)
    goto LABEL_20;
  v6 = v4 + 2;
  if (v4 + 2 >= v12)
    goto LABEL_22;
  v7 = *(_QWORD *)(v11 + 8 * v6);
  if (v7)
    goto LABEL_20;
  v6 = v4 + 3;
  if (v4 + 3 >= v12)
    goto LABEL_22;
  v7 = *(_QWORD *)(v11 + 8 * v6);
  if (v7)
    goto LABEL_20;
  v6 = v4 + 4;
  if (v4 + 4 >= v12)
    goto LABEL_22;
  v7 = *(_QWORD *)(v11 + 8 * v6);
  if (v7)
    goto LABEL_20;
  v6 = v4 + 5;
  if (v4 + 5 >= v12)
    goto LABEL_22;
  v7 = *(_QWORD *)(v11 + 8 * v6);
  if (v7)
  {
LABEL_20:
    v3 = (v7 - 1) & v7;
    v4 = v6;
    goto LABEL_5;
  }
  while (v12 - 6 != v4)
  {
    v7 = *(_QWORD *)(v10 + 8 * v4++);
    if (v7)
    {
      v6 = v4 + 5;
      goto LABEL_20;
    }
  }
LABEL_22:
  v8 = 0;
LABEL_23:
  swift_release();
  return v8;
}

uint64_t sub_1B1DF7E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v17;

  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v17 = a1 + 112;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_20:
    v14 = (_QWORD *)(*(_QWORD *)(a1 + 56) + 24 * v11);
    v15 = *v14 == *(_QWORD *)(a2 + 40) && v14[1] == *(_QWORD *)(a2 + 48);
    if (v15 || (sub_1B2229D24() & 1) != 0)
      return 1;
  }
  v12 = v4 + 1;
  if (v4 + 1 >= v9)
    return 0;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  if (v13)
    goto LABEL_19;
  v12 = v4 + 2;
  if (v4 + 2 >= v9)
    return 0;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  if (v13)
    goto LABEL_19;
  v12 = v4 + 3;
  if (v4 + 3 >= v9)
    return 0;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  if (v13)
    goto LABEL_19;
  v12 = v4 + 4;
  if (v4 + 4 >= v9)
    return 0;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  if (v13)
    goto LABEL_19;
  v12 = v4 + 5;
  if (v4 + 5 >= v9)
    return 0;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  if (v13)
  {
LABEL_19:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v4 = v12;
    goto LABEL_20;
  }
  while (v9 - 6 != v4)
  {
    v13 = *(_QWORD *)(v17 + 8 * v4++);
    if (v13)
    {
      v12 = v4 + 5;
      goto LABEL_19;
    }
  }
  return 0;
}

uint64_t sub_1B1DF7F88(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = 0;
  v22 = (unint64_t)(v4 + 63) >> 6;
  v20 = swift_bridgeObjectRetain() + 112;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v17 = v7 + 1;
    if (v7 + 1 >= v22)
      return swift_release();
    v18 = *(_QWORD *)(v21 + 8 * v17);
    if (!v18)
    {
      v17 = v7 + 2;
      if (v7 + 2 >= v22)
        return swift_release();
      v18 = *(_QWORD *)(v21 + 8 * v17);
      if (!v18)
      {
        v17 = v7 + 3;
        if (v7 + 3 >= v22)
          return swift_release();
        v18 = *(_QWORD *)(v21 + 8 * v17);
        if (!v18)
        {
          v17 = v7 + 4;
          if (v7 + 4 >= v22)
            return swift_release();
          v18 = *(_QWORD *)(v21 + 8 * v17);
          if (!v18)
          {
            v17 = v7 + 5;
            if (v7 + 5 >= v22)
              return swift_release();
            v18 = *(_QWORD *)(v21 + 8 * v17);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_20:
    v6 = (v18 - 1) & v18;
    v9 = __clz(__rbit64(v18)) + (v17 << 6);
    v7 = v17;
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 24 * v9);
    v14 = *v13;
    v15 = v13[1];
    v16 = v13[2];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v11, v12, v14, v15, v16);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  while (v22 - 6 != v7)
  {
    v18 = *(_QWORD *)(v20 + 8 * v7++);
    if (v18)
    {
      v17 = v7 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B1DF8174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;

  v14 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  v6 = swift_bridgeObjectRetain();
  v7 = 0;
  v13 = v6 + 112;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      v16 = v7;
      goto LABEL_5;
    }
    v10 = v7 + 1;
    if (v7 + 1 >= v5)
      return swift_release();
    v11 = *(_QWORD *)(v14 + 8 * v10);
    if (!v11)
    {
      v10 = v7 + 2;
      if (v7 + 2 >= v5)
        return swift_release();
      v11 = *(_QWORD *)(v14 + 8 * v10);
      if (!v11)
      {
        v10 = v7 + 3;
        if (v7 + 3 >= v5)
          return swift_release();
        v11 = *(_QWORD *)(v14 + 8 * v10);
        if (!v11)
        {
          v10 = v7 + 4;
          if (v7 + 4 >= v5)
            return swift_release();
          v11 = *(_QWORD *)(v14 + 8 * v10);
          if (!v11)
          {
            v10 = v7 + 5;
            if (v7 + 5 >= v5)
              return swift_release();
            v11 = *(_QWORD *)(v14 + 8 * v10);
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_20:
    v4 = (v11 - 1) & v11;
    v16 = v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1B1B7E230(MEMORY[0x1E0DEE9D8]);
    MEMORY[0x1E0C80A78](v17, v8);
    v9 = swift_bridgeObjectRetain();
    sub_1B1DF7F88(v9, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E01F78);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 256) = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v16;
  }
  while (v5 - 6 != v7)
  {
    v11 = *(_QWORD *)(v13 + 8 * v7++);
    if (v11)
    {
      v10 = v7 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B1DF83C4(uint64_t a1, uint64_t a2, _QWORD *a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD v27[5];
  int v28;

  v5 = v4;
  v28 = a4;
  v26 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v13 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v15 = v14 | (v13 << 6);
  while (1)
  {
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v15);
    v19 = *v18;
    v20 = v18[1];
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 24 * v15);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v27[0] = v19;
    v27[1] = v20;
    v27[2] = v22;
    v27[3] = v23;
    v27[4] = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1DEDE28((uint64_t)v27, a2, a3, v28);
    if (v5)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_4;
LABEL_5:
    v16 = v13 + 1;
    if (v13 + 1 >= v12)
      return swift_release();
    v17 = *(_QWORD *)(v26 + 8 * v16);
    if (!v17)
    {
      v16 = v13 + 2;
      if (v13 + 2 >= v12)
        return swift_release();
      v17 = *(_QWORD *)(v26 + 8 * v16);
      if (!v17)
      {
        v16 = v13 + 3;
        if (v13 + 3 >= v12)
          return swift_release();
        v17 = *(_QWORD *)(v26 + 8 * v16);
        if (!v17)
        {
          v16 = v13 + 4;
          if (v13 + 4 >= v12)
            return swift_release();
          v17 = *(_QWORD *)(v26 + 8 * v16);
          if (!v17)
          {
            v16 = v13 + 5;
            if (v13 + 5 >= v12)
              return swift_release();
            v17 = *(_QWORD *)(v26 + 8 * v16);
            if (!v17)
            {
              while (v12 - 6 != v13)
              {
                v17 = *(_QWORD *)(a1 + 8 * v13++ + 112);
                if (v17)
                {
                  v16 = v13 + 5;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v13 = v16;
  }
}

uint64_t sub_1B1DF85F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 *v49;
  _OWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _OWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _OWORD v67[2];
  _QWORD v68[4];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  _OWORD v76[2];
  _OWORD v77[2];
  uint64_t v78;
  _QWORD v79[5];
  _QWORD v80[6];

  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v2, v3);
  v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B2228110();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v52 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 56);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v9 = sub_1B22296AC();
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v9)
    {
LABEL_3:
      v10 = 0;
      v60 = v8 & 0xC000000000000001;
      v56 = v76;
      v54 = (uint64_t)v77 + 8;
      v49 = &v62;
      v50 = (__int128 *)((char *)&v64 + 8);
      v11 = MEMORY[0x1E0DEB940];
      v53 = MEMORY[0x1E0DEE9B8] + 8;
      v59 = v9;
      do
      {
        if (v60)
        {
          v12 = MEMORY[0x1B5E21018](v10, v8);
        }
        else
        {
          v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
          swift_retain();
        }
        Strong = swift_weakLoadStrong();
        if (Strong)
        {
          v14 = Strong;
          v15 = (uint64_t)v11;
          v16 = *(_QWORD *)(v12 + 32);
          *(_QWORD *)&v61 = *(_QWORD *)(v12 + 24);
          *((_QWORD *)&v61 + 1) = v16;
          swift_bridgeObjectRetain_n();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v17 = *((_QWORD *)&v61 + 1);
          v18 = *(_QWORD *)(v14 + 16);
          if (v18 && *(_QWORD *)(v18 + 16))
          {
            v19 = v61;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v20 = sub_1B1DC3B00(v19, v17);
            if ((v21 & 1) != 0)
            {
              sub_1B19F8F0C(*(_QWORD *)(v18 + 56) + 88 * v20, (uint64_t)&v69);
            }
            else
            {
              v74 = 0;
              v72 = 0u;
              v73 = 0u;
              v70 = 0u;
              v71 = 0u;
              v69 = 0u;
            }
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v9 = v59;
          }
          else
          {
            v74 = 0;
            v72 = 0u;
            v73 = 0u;
            v70 = 0u;
            v71 = 0u;
            v69 = 0u;
            swift_release();
          }
          swift_bridgeObjectRelease();
          v11 = (uint64_t (*)(void))v15;
          if (*((_QWORD *)&v69 + 1))
          {
            v76[1] = v71;
            v77[0] = v72;
            v77[1] = v73;
            v78 = v74;
            v75 = v69;
            v76[0] = v70;
            sub_1B19FA278((uint64_t)v56, (uint64_t)v80);
            sub_1B19F8C58(v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
            if (sub_1B1E03DBC() == 5001813 && v22 == 0xE300000000000000)
            {
              swift_bridgeObjectRelease();
              sub_1B19F8C58(v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
              goto LABEL_23;
            }
            v23 = sub_1B2229D24();
            swift_bridgeObjectRelease();
            sub_1B19F8C58(v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
            if ((v23 & 1) != 0)
            {
LABEL_23:
              sub_1B1B9DC78(v54, (uint64_t)&v69, (uint64_t)&qword_1ED4BB150, v53, v15, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
              if (*((_QWORD *)&v70 + 1))
              {
                v24 = (uint64_t)v55;
                v25 = v58;
                v26 = swift_dynamicCast();
                v27 = v57;
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v24, v26 ^ 1u, 1, v25);
                v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
                v11 = (uint64_t (*)(void))v15;
                if (v28(v24, 1, v25) != 1)
                {
                  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v52, v24, v58);
                  v29 = sub_1B222802C();
                  v68[3] = MEMORY[0x1E0DEA968];
                  v68[0] = v29;
                  v68[1] = v30;
                  v31 = swift_weakLoadStrong();
                  if (v31)
                  {
                    v32 = v31;
                    v33 = *(_QWORD *)(v12 + 32);
                    *(_QWORD *)&v69 = *(_QWORD *)(v12 + 24);
                    *((_QWORD *)&v69 + 1) = v33;
                    swift_bridgeObjectRetain_n();
                    sub_1B2228890();
                    swift_bridgeObjectRelease();
                    v35 = *((_QWORD *)&v69 + 1);
                    v34 = v69;
                    if (!*(_QWORD *)(v32 + 16))
                    {
                      *(_QWORD *)(v32 + 16) = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
                      swift_bridgeObjectRelease();
                    }
                    sub_1B1A02864((uint64_t)v68, (uint64_t)v67);
                    v36 = v50;
                    *v50 = 0u;
                    v36[1] = 0u;
                    *(_QWORD *)&v61 = v34;
                    *((_QWORD *)&v61 + 1) = v35;
                    swift_bridgeObjectRetain_n();
                    sub_1B1E0E5B0(v67, v79);
                    sub_1B19FA278((uint64_t)v79, (uint64_t)v49);
                    v51 = v34;
                    sub_1B1A057EC((uint64_t)v36, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, v15, (uint64_t (*)(_QWORD))sub_1B1A02758);
                    sub_1B1A0DDAC(v67, v36);
                    v71 = v63;
                    v72 = v64;
                    v73 = v65;
                    v74 = v66;
                    v69 = v61;
                    v70 = v62;
                    if (*((_QWORD *)&v61 + 1))
                    {
                      v63 = v71;
                      v64 = v72;
                      v65 = v73;
                      v66 = v74;
                      v61 = v69;
                      v62 = v70;
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      *(_QWORD *)&v67[0] = *(_QWORD *)(v32 + 16);
                      *(_QWORD *)(v32 + 16) = 0x8000000000000000;
                      sub_1B1B8440C((uint64_t)&v61, v51, v35, isUniquelyReferenced_nonNull_native);
                      *(_QWORD *)(v32 + 16) = *(_QWORD *)&v67[0];
                      swift_release();
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease();
                      v11 = (uint64_t (*)(void))v15;
                    }
                    else
                    {
                      sub_1B1A057EC((uint64_t)&v69, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, v15, (uint64_t (*)(_QWORD))sub_1B1A02758);
                      swift_bridgeObjectRetain();
                      v38 = sub_1B1DC3B00(v51, v35);
                      v40 = v39;
                      swift_bridgeObjectRelease();
                      if ((v40 & 1) != 0)
                      {
                        v41 = swift_isUniquelyReferenced_nonNull_native();
                        v42 = *(_QWORD *)(v32 + 16);
                        *(_QWORD *)&v67[0] = v42;
                        *(_QWORD *)(v32 + 16) = 0x8000000000000000;
                        if ((v41 & 1) == 0)
                        {
                          sub_1B1EA805C();
                          v42 = *(_QWORD *)&v67[0];
                        }
                        swift_bridgeObjectRelease();
                        v43 = *(_QWORD *)(v42 + 56) + 88 * v38;
                        v44 = *(_OWORD *)(v43 + 16);
                        v61 = *(_OWORD *)v43;
                        v62 = v44;
                        v46 = *(_OWORD *)(v43 + 48);
                        v45 = *(_OWORD *)(v43 + 64);
                        v47 = *(_OWORD *)(v43 + 32);
                        v66 = *(_QWORD *)(v43 + 80);
                        v64 = v46;
                        v65 = v45;
                        v63 = v47;
                        sub_1B1EA4748(v38, v42);
                        *(_QWORD *)(v32 + 16) = v42;
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        v66 = 0;
                        v64 = 0u;
                        v65 = 0u;
                        v62 = 0u;
                        v63 = 0u;
                        v61 = 0u;
                      }
                      swift_bridgeObjectRelease();
                      v11 = (uint64_t (*)(void))v15;
                      sub_1B1A057EC((uint64_t)&v61, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, v15, (uint64_t (*)(_QWORD))sub_1B1A02758);
                      swift_release();
                      swift_bridgeObjectRelease();
                    }
                  }
                  (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v58);
                  sub_1B1A203C4((uint64_t)&v75);
                  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v68);
                  goto LABEL_40;
                }
              }
              else
              {
                sub_1B1A057EC((uint64_t)&v69, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, v15, (uint64_t (*)(_QWORD))sub_1B1A02758);
                v24 = (uint64_t)v55;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v55, 1, 1, v58);
              }
              sub_1B1A203C4((uint64_t)&v75);
              sub_1B1A04628(v24, (uint64_t (*)(_QWORD))sub_1B17928A0);
            }
            else
            {
              sub_1B1A203C4((uint64_t)&v75);
            }
LABEL_40:
            swift_release();
            v9 = v59;
            goto LABEL_6;
          }
        }
        else
        {
          v74 = 0;
          v72 = 0u;
          v73 = 0u;
          v70 = 0u;
          v71 = 0u;
          v69 = 0u;
        }
        sub_1B1A057EC((uint64_t)&v69, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1B1A02758);
        swift_release();
LABEL_6:
        ++v10;
      }
      while (v9 != v10);
    }
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B1DF8DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  int64_t v20;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  v20 = v9 - 6;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v12 = v11 | (v10 << 6);
  while (1)
  {
    v15 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v16 = v15[1];
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    v19[0] = *v15;
    v19[1] = v16;
    v19[2] = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B1DEF9E4((uint64_t)v19, a2);
    if (v2)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v10 + 1;
    if (v10 + 1 >= v9)
      return swift_release();
    v14 = *(_QWORD *)(v5 + 8 * v13);
    if (!v14)
    {
      v13 = v10 + 2;
      if (v10 + 2 >= v9)
        return swift_release();
      v14 = *(_QWORD *)(v5 + 8 * v13);
      if (!v14)
      {
        v13 = v10 + 3;
        if (v10 + 3 >= v9)
          return swift_release();
        v14 = *(_QWORD *)(v5 + 8 * v13);
        if (!v14)
        {
          v13 = v10 + 4;
          if (v10 + 4 >= v9)
            return swift_release();
          v14 = *(_QWORD *)(v5 + 8 * v13);
          if (!v14)
          {
            v13 = v10 + 5;
            if (v10 + 5 >= v9)
              return swift_release();
            v14 = *(_QWORD *)(v5 + 8 * v13);
            if (!v14)
            {
              while (v20 != v10)
              {
                v14 = *(_QWORD *)(a1 + 8 * v10++ + 112);
                if (v14)
                {
                  v13 = v10 + 5;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v13 << 6);
    v10 = v13;
  }
}

uint64_t sub_1B1DF8F7C(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  _QWORD v19[2];
  _BYTE v20[88];
  uint64_t v21;

  v4 = *(_QWORD *)(a1 + 64);
  v21 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = 0;
  v18 = swift_bridgeObjectRetain() + 112;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (v9 + 1 >= v8)
      return swift_release();
    v16 = *(_QWORD *)(v21 + 8 * v15);
    if (!v16)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v8)
        return swift_release();
      v16 = *(_QWORD *)(v21 + 8 * v15);
      if (!v16)
      {
        v15 = v9 + 3;
        if (v9 + 3 >= v8)
          return swift_release();
        v16 = *(_QWORD *)(v21 + 8 * v15);
        if (!v16)
        {
          v15 = v9 + 4;
          if (v9 + 4 >= v8)
            return swift_release();
          v16 = *(_QWORD *)(v21 + 8 * v15);
          if (!v16)
          {
            v15 = v9 + 5;
            if (v9 + 5 >= v8)
              return swift_release();
            v16 = *(_QWORD *)(v21 + 8 * v15);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_20:
    v7 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v15 << 6);
    v9 = v15;
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_1B19F8F0C(*(_QWORD *)(a1 + 56) + 88 * v11, (uint64_t)v20);
    v19[0] = v13;
    v19[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v20);
    sub_1B1A057EC((uint64_t)v19, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
  }
  while (v8 - 6 != v9)
  {
    v16 = *(_QWORD *)(v18 + 8 * v9++);
    if (v16)
    {
      v15 = v9 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

_QWORD *sub_1B1DF9158(_QWORD *result, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;

  v3 = result[2];
  if (v3)
  {
    v5 = *(_QWORD *)(a2 + 16);
    if (v5)
    {
      v6 = result;
      v7 = result[4];
      v8 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = 0;
      v10 = v5 - 1;
      for (i = v3 - 1; ; --i)
      {
        swift_bridgeObjectRetain();
        v12 = *(_QWORD *)(a2 + v9 * 8 + 32);
        v13 = *(_QWORD *)(a2 + v9 * 8 + 40);
        swift_bridgeObjectRetain();
        a3(v7, v8, v12, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!i || !v10)
          break;
        v7 = v6[v9 + 6];
        v8 = v6[v9 + 7];
        --v10;
        v9 += 2;
      }
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B1DF9248(uint64_t a1, void (*a2)(uint64_t, uint64_t, _OWORD *))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  _OWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v19 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = 0;
  v20 = (unint64_t)(v2 + 63) >> 6;
  v24 = swift_bridgeObjectRetain();
  v18 = v24 + 112;
  while (1)
  {
    if (v4)
    {
      v6 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v7 = v6 | (v5 << 6);
      goto LABEL_5;
    }
    v15 = v5 + 1;
    if (v5 + 1 >= v20)
      return swift_release();
    v16 = *(_QWORD *)(v19 + 8 * v15);
    if (!v16)
    {
      v15 = v5 + 2;
      if (v5 + 2 >= v20)
        return swift_release();
      v16 = *(_QWORD *)(v19 + 8 * v15);
      if (!v16)
      {
        v15 = v5 + 3;
        if (v5 + 3 >= v20)
          return swift_release();
        v16 = *(_QWORD *)(v19 + 8 * v15);
        if (!v16)
        {
          v15 = v5 + 4;
          if (v5 + 4 >= v20)
            return swift_release();
          v16 = *(_QWORD *)(v19 + 8 * v15);
          if (!v16)
          {
            v15 = v5 + 5;
            if (v5 + 5 >= v20)
              return swift_release();
            v16 = *(_QWORD *)(v19 + 8 * v15);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_20:
    v4 = (v16 - 1) & v16;
    v7 = __clz(__rbit64(v16)) + (v15 << 6);
    v5 = v15;
LABEL_5:
    v8 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 16 * v7);
    v9 = *v8;
    v10 = v8[1];
    v11 = *(_QWORD *)(v24 + 56) + 56 * v7;
    v13 = *(_OWORD *)(v11 + 16);
    v12 = *(_OWORD *)(v11 + 32);
    v14 = *(_OWORD *)v11;
    v23 = *(_QWORD *)(v11 + 48);
    v22[1] = v13;
    v22[2] = v12;
    v22[0] = v14;
    swift_bridgeObjectRetain();
    sub_1B1E01510((uint64_t)v22);
    a2(v9, v10, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  while (v20 - 6 != v5)
  {
    v16 = *(_QWORD *)(v18 + 8 * v5++);
    if (v16)
    {
      v15 = v5 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B1DF9460(_QWORD *a1, _QWORD *a2, unint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v5 = a1[2];
  if (!v5 || !a2[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  v20 = a2[2];
  v6 = a1[5];
  v26 = a1[4];
  v7 = a2[5];
  v25 = a2[4];
  v8 = a2[6];
  v9 = a2[7];
  v22 = a3 >> 62;
  if (!(a3 >> 62))
  {
    v10 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1B22296AC();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_17;
LABEL_5:
  v11 = 0;
  v12 = a2 + 11;
  v23 = v5 - 1;
  v13 = a1 + 7;
  v21 = v20 - 1;
  while (1)
  {
    if ((a3 & 0xC000000000000001) != 0)
    {
      v15 = MEMORY[0x1B5E21018](v11, a3);
    }
    else
    {
      v15 = *(_QWORD *)(a3 + 32 + 8 * v11);
      swift_retain();
    }
    a4(v26, v6, v25, v7, v8, v9, v15);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23 == v11 || v21 == v11)
      break;
    v6 = *v13;
    v26 = *(v13 - 1);
    v7 = *(v12 - 2);
    v25 = *(v12 - 3);
    v8 = *(v12 - 1);
    v9 = *v12;
    if (v22)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1B22296AC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    ++v11;
    v12 += 4;
    v13 += 2;
    if (v11 == v14)
      goto LABEL_17;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DF9728(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t *i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  char v16;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = 0;
  v18 = a2[2];
  for (i = (unint64_t *)(a1 + 40); ; i += 8)
  {
    v6 = *(i - 1);
    v7 = *i;
    if (v18)
    {
      v8 = a2[4];
      v9 = a2[5];
      v11 = a2[6];
      v10 = a2[7];
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = 0;
      v9 = 0;
      v11 = 0;
      v10 = 0;
    }
    v12 = (v7 & 0x2000000000000000) != 0 ? HIBYTE(v7) & 0xF : v6 & 0xFFFFFFFFFFFFLL;
    v13 = v6 == v11 && v10 == v7;
    v14 = v13 && v8 >> 16 == 0;
    if (v14 && v12 == v9 >> 16)
      break;
    v16 = sub_1B22299F4();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      return v4;
    if (v2 == ++v4)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B1DF9854(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t Strong;
  uint64_t v23;
  char v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _OWORD v54[3];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  _QWORD v61[4];
  _OWORD v62[2];
  _QWORD v63[6];
  uint64_t v64;

  v44 = 0;
  v4 = 0;
  v7 = *(_QWORD *)(a3 + 64);
  v5 = a3 + 64;
  v6 = v7;
  v8 = 1 << *(_BYTE *)(v5 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v45 = v5;
  v46 = (unint64_t)(v8 + 63) >> 6;
  v41 = v5 + 40;
  v47 = MEMORY[0x1E0DEE9B8] + 8;
  if ((v9 & v6) != 0)
    goto LABEL_10;
LABEL_12:
  v15 = v4 + 1;
  if (v4 + 1 < v46)
  {
    v16 = *(_QWORD *)(v45 + 8 * v15);
    if (v16)
    {
LABEL_16:
      v14 = MEMORY[0x1E0DEB940];
LABEL_17:
      v10 = (v16 - 1) & v16;
      v13 = __clz(__rbit64(v16)) + (v15 << 6);
      v4 = v15;
      while (1)
      {
        v17 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 24 * v13);
        v18 = v17[1];
        v19 = *(_QWORD *)(*(_QWORD *)(a4 + 264) + 16);
        v64 = v4;
        v49 = v13;
        if (v19)
        {
          v20 = *v17;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1B1DC3B00(v20, v18);
          if ((v21 & 1) != 0)
            swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        Strong = swift_weakLoadStrong();
        v61[3] = MEMORY[0x1E0DEA968];
        v61[0] = 0;
        v61[1] = 0xE000000000000000;
        v23 = *(_QWORD *)(Strong + 16);
        if (v23)
        {
          if (!*(_QWORD *)(v23 + 16))
            goto LABEL_30;
        }
        else
        {
          *(_QWORD *)(Strong + 16) = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
          swift_bridgeObjectRelease();
          v23 = *(_QWORD *)(Strong + 16);
          if (!*(_QWORD *)(v23 + 16))
          {
LABEL_30:
            if (!v23)
              goto LABEL_28;
            goto LABEL_31;
          }
        }
        swift_bridgeObjectRetain();
        sub_1B1DC3B00(1701667182, 0xE400000000000000);
        v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 1) != 0)
          goto LABEL_33;
        if (!*(_QWORD *)(Strong + 16))
        {
LABEL_28:
          *(_QWORD *)(Strong + 16) = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
          swift_bridgeObjectRelease();
        }
LABEL_31:
        sub_1B1A02864((uint64_t)v61, (uint64_t)v62);
        memset((char *)v54 + 8, 0, 32);
        *(_QWORD *)&v51 = 1701667182;
        *((_QWORD *)&v51 + 1) = 0xE400000000000000;
        sub_1B1E0E5B0(v62, v63);
        sub_1B19FA278((uint64_t)v63, (uint64_t)&v52);
        sub_1B1A057EC((uint64_t)v54 + 8, (uint64_t)&qword_1ED4BB150, v47, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B1A02758);
        sub_1B1A0DDAC(v62, (_OWORD *)((char *)v54 + 8));
        v57 = v53;
        v58 = v54[0];
        v59 = v54[1];
        v60 = *(_QWORD *)&v54[2];
        v55 = v51;
        v56 = v52;
        if (*((_QWORD *)&v51 + 1))
        {
          v53 = v57;
          v54[0] = v58;
          v54[1] = v59;
          *(_QWORD *)&v54[2] = v60;
          v51 = v55;
          v52 = v56;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v62[0] = *(_QWORD *)(Strong + 16);
          *(_QWORD *)(Strong + 16) = 0x8000000000000000;
          sub_1B1B8440C((uint64_t)&v51, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(Strong + 16) = *(_QWORD *)&v62[0];
          swift_bridgeObjectRelease();
LABEL_33:
          v27 = *(_QWORD *)(Strong + 16);
          if (!v27)
            goto LABEL_7;
          goto LABEL_41;
        }
        sub_1B1A057EC((uint64_t)&v55, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B1A02758);
        swift_bridgeObjectRetain();
        v28 = sub_1B1DC3B00(1701667182, 0xE400000000000000);
        v30 = v29;
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
        {
          v31 = swift_isUniquelyReferenced_nonNull_native();
          v32 = *(_QWORD *)(Strong + 16);
          *(_QWORD *)&v62[0] = v32;
          *(_QWORD *)(Strong + 16) = 0x8000000000000000;
          if ((v31 & 1) == 0)
          {
            sub_1B1EA805C();
            v32 = *(_QWORD *)&v62[0];
          }
          swift_bridgeObjectRelease();
          v33 = *(_QWORD *)(v32 + 56) + 88 * v28;
          v34 = *(_OWORD *)(v33 + 16);
          v51 = *(_OWORD *)v33;
          v52 = v34;
          v36 = *(_OWORD *)(v33 + 48);
          v35 = *(_OWORD *)(v33 + 64);
          v37 = *(_OWORD *)(v33 + 32);
          *(_QWORD *)&v54[2] = *(_QWORD *)(v33 + 80);
          v54[0] = v36;
          v54[1] = v35;
          v53 = v37;
          sub_1B1EA4748(v28, v32);
          *(_QWORD *)(Strong + 16) = v32;
          swift_bridgeObjectRelease();
        }
        else
        {
          memset(v54, 0, 40);
          v52 = 0u;
          v53 = 0u;
          v51 = 0u;
        }
        sub_1B1A057EC((uint64_t)&v51, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B1A02758);
        v27 = *(_QWORD *)(Strong + 16);
        if (!v27)
          goto LABEL_7;
LABEL_41:
        if (!*(_QWORD *)(v27 + 16))
        {
          v60 = 0;
          v58 = 0u;
          v59 = 0u;
          v56 = 0u;
          v57 = 0u;
          v55 = 0u;
          swift_bridgeObjectRetain();
LABEL_6:
          sub_1B1A057EC((uint64_t)&v55, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B1A02758);
          swift_bridgeObjectRelease();
LABEL_7:
          memset(v62, 0, sizeof(v62));
          goto LABEL_8;
        }
        swift_bridgeObjectRetain();
        v38 = sub_1B1DC3B00(1701667182, 0xE400000000000000);
        if ((v39 & 1) == 0)
        {
          v60 = 0;
          v58 = 0u;
          v59 = 0u;
          v56 = 0u;
          v57 = 0u;
          v55 = 0u;
          goto LABEL_6;
        }
        sub_1B19F8F0C(*(_QWORD *)(v27 + 56) + 88 * v38, (uint64_t)&v55);
        if (!*((_QWORD *)&v55 + 1))
          goto LABEL_6;
        sub_1B19F8F0C((uint64_t)&v55, (uint64_t)&v51);
        sub_1B1A057EC((uint64_t)&v55, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1B1A02758);
        swift_bridgeObjectRelease();
        sub_1B1B9DC78((uint64_t)v54 + 8, (uint64_t)v62, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)v14, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
        sub_1B1A203C4((uint64_t)&v51);
LABEL_8:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v61);
        sub_1B1A0DDAC(v62, &v55);
        swift_dynamicCast();
        v55 = v51;
        *(_QWORD *)&v51 = 0x657461756C617645;
        *((_QWORD *)&v51 + 1) = 0xE90000000000005FLL;
        sub_1B1A2044C();
        sub_1B1A20490();
        v11 = sub_1B222862C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        v4 = v64;
        if ((v11 & 1) != 0)
        {
          if (!v10)
            goto LABEL_12;
        }
        else
        {
          *(unint64_t *)((char *)a1 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
          ++v44;
          if (!v10)
            goto LABEL_12;
        }
LABEL_10:
        v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v13 = v12 | (v4 << 6);
        v14 = MEMORY[0x1E0DEB940];
      }
    }
    v15 = v4 + 2;
    if (v4 + 2 < v46)
    {
      v16 = *(_QWORD *)(v45 + 8 * v15);
      if (v16)
        goto LABEL_16;
      v15 = v4 + 3;
      v14 = MEMORY[0x1E0DEB940];
      if (v4 + 3 < v46)
      {
        v16 = *(_QWORD *)(v45 + 8 * v15);
        if (v16)
          goto LABEL_17;
        v15 = v4 + 4;
        if (v4 + 4 < v46)
        {
          v16 = *(_QWORD *)(v45 + 8 * v15);
          if (!v16)
          {
            do
            {
              if (v46 - 5 == v4)
                return sub_1B1C0574C(a1, a2, v44, a3);
              v16 = *(_QWORD *)(v41 + 8 * v4++);
            }
            while (!v16);
            v15 = v4 + 4;
          }
          goto LABEL_17;
        }
      }
    }
  }
  return sub_1B1C0574C(a1, a2, v44, a3);
}

uint64_t sub_1B1DF9F98(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  result = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(result + 16);
  if (v3 && *(_BYTE *)(a1 + 24) == 2)
  {
    v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228890();
      sub_1B2228890();
      v5 = *(_QWORD **)(a1 + 128);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a1 + 128) = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v5 = sub_1B1C63044(0, v5[2] + 1, 1, v5);
        *(_QWORD *)(a1 + 128) = v5;
      }
      v8 = v5[2];
      v7 = v5[3];
      if (v8 >= v7 >> 1)
      {
        v5 = sub_1B1C63044(v7 > 1, v8 + 1, 1, v5);
        *(_QWORD *)(a1 + 128) = v5;
      }
      v4 += 16;
      v5[2] = v8 + 1;
      v9 = &v5[2 * v8];
      v9[4] = 0x2074726F706D69;
      v9[5] = 0xE700000000000000;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1DFA10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  unsigned __int8 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t *i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _OWORD v59[2];
  uint64_t v60;
  uint64_t v61[5];
  _OWORD v62[2];
  _OWORD v63[2];
  uint64_t v64;

  sub_1B1B9DC78(a3 + 56, (uint64_t)v62, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
  sub_1B1A0DDAC(v62, v63);
  v10 = MEMORY[0x1E0DEA968];
  swift_dynamicCast();
  sub_1B1E0E85C(v61[0], v61[1], (uint64_t *)v59);
  v63[0] = v59[0];
  v63[1] = v59[1];
  v64 = v60;
  v11 = sub_1B2228920();
  swift_bridgeObjectRetain();
  if ((v11 & 1) != 0)
  {
    sub_1B2228830();
    v12 = sub_1B1D3A13C();
    v14 = v13;
    v16 = v15;
    v18 = v17;
    swift_bridgeObjectRelease();
    v57 = MEMORY[0x1B5E20388](v12, v14, v16, v18);
    a2 = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
    v57 = a1;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 64);
  if (*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRetain();
    v21 = sub_1B1DC3EBC((uint64_t)v63);
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD **)(*(_QWORD *)(v20 + 56) + 8 * v21);
      swift_retain();
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  sub_1B19F8C58(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
  sub_1B1ED6EB0(*(_BYTE *)(*a5 + 24));
  v24 = sub_1B1FB34E8();
  if (sub_1B1FBAEF8(v24) == 0x45747865746E6F43 && v25 == 0xEB00000000746978)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
LABEL_25:
      v39 = v23;
      if (*(_QWORD *)(v23[20] + 16))
        swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*a6 + 1272))(v57, a2);
      swift_bridgeObjectRelease();
      sub_1B1FC0A9C();
      swift_bridgeObjectRelease();
      sub_1B1A06460();
      sub_1B222922C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = MEMORY[0x1E0DEE9D8];
      v41 = (_QWORD *)sub_1B2229214();
      swift_bridgeObjectRelease();
      v42 = v23[26];
      if (v23[25])
        v43 = v23[25];
      else
        v43 = v40;
      if (v42)
        v40 = v39[26];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = (_QWORD *)sub_1B1ED6BEC(v43, v40);
      swift_bridgeObjectRelease();
      v45 = swift_bridgeObjectRelease();
      v46 = a6[12];
      MEMORY[0x1E0C80A78](v45, v47);
      swift_bridgeObjectRetain();
      sub_1B1DF9460(v41, v44, v46, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1E01C28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = *a5;
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, v10, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1B1BCBBF8((unint64_t *)&qword_1ED4BA4A0, (unint64_t *)&qword_1ED4BA490, v10, MEMORY[0x1E0DEAF20]);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B2228644();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v49 = *(_QWORD **)(v48 + 128);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v48 + 128) = v49;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v49 = sub_1B1C63044(0, v49[2] + 1, 1, v49);
        *(_QWORD *)(v48 + 128) = v49;
      }
      v52 = v49[2];
      v51 = v49[3];
      if (v52 >= v51 >> 1)
      {
        v49 = sub_1B1C63044(v51 > 1, v52 + 1, 1, v49);
        *(_QWORD *)(v48 + 128) = v49;
      }
      v49[2] = v52 + 1;
      v53 = &v49[2 * v52];
      v53[4] = 8201;
      v53[5] = 0xE200000000000000;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  swift_bridgeObjectRetain();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_1B1DF6ECC(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v55 = a2;
    v56 = v23;
    v54 = a5;
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(*a6 + 1456);
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(v28 + 40); ; i += 2)
    {
      v32 = *(i - 1);
      v33 = *i;
      swift_bridgeObjectRetain();
      v34 = v30(v32, v33);
      if (v34)
      {
        v36 = *(_QWORD *)(v34 + 40);
        v35 = *(_QWORD *)(v34 + 48);
        swift_bridgeObjectRetain_n();
        v37 = swift_bridgeObjectRetain();
        sub_1B1DF6B30(v37, v36, v35, v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B1A025EC((uint64_t)v61, (uint64_t)v62, (uint64_t (*)(_QWORD))sub_1B1E01C50);
        if (*((_QWORD *)&v62[0] + 1))
        {
          sub_1B19F8C58(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1E01C6C);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_release();
          a5 = v54;
          v23 = v56;
          v10 = MEMORY[0x1E0DEA968];
          a2 = v55;
          goto LABEL_25;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (!--v29)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DFA9AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t Strong;
  char v20;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int64_t v28;

  v24 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v27 = a3 + 64;
  v28 = (unint64_t)(v7 + 63) >> 6;
  v25 = a3 + 104;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v6 << 6);
LABEL_19:
    if (*(_QWORD *)(*(_QWORD *)(a4 + 264) + 16))
    {
      v14 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 24 * v11);
      v15 = *v14;
      v16 = v14[1];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(v15, v16);
      if ((v17 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        Strong = swift_weakLoadStrong();
        swift_release();
        if (Strong)
        {
          if (*(_QWORD *)(Strong + 24) == *(_QWORD *)(a5 + 24) && *(_QWORD *)(Strong + 32) == *(_QWORD *)(a5 + 32))
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_30;
          }
          v20 = sub_1B2229D24();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((v20 & 1) != 0)
          {
LABEL_30:
            *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
            ++v24;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  v12 = v6 + 1;
  if (v6 + 1 >= v28)
    return sub_1B1C0574C(a1, a2, v24, a3);
  v13 = *(_QWORD *)(v27 + 8 * v12);
  if (v13)
    goto LABEL_18;
  v12 = v6 + 2;
  if (v6 + 2 >= v28)
    return sub_1B1C0574C(a1, a2, v24, a3);
  v13 = *(_QWORD *)(v27 + 8 * v12);
  if (v13)
    goto LABEL_18;
  v12 = v6 + 3;
  if (v6 + 3 >= v28)
    return sub_1B1C0574C(a1, a2, v24, a3);
  v13 = *(_QWORD *)(v27 + 8 * v12);
  if (v13)
    goto LABEL_18;
  v12 = v6 + 4;
  if (v6 + 4 >= v28)
    return sub_1B1C0574C(a1, a2, v24, a3);
  v13 = *(_QWORD *)(v27 + 8 * v12);
  if (v13)
  {
LABEL_18:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
    goto LABEL_19;
  }
  while (v28 - 5 != v6)
  {
    v13 = *(_QWORD *)(v25 + 8 * v6++);
    if (v13)
    {
      v12 = v6 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C0574C(a1, a2, v24, a3);
}

uint64_t sub_1B1DFAC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E00418(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1B1DFA9AC);
}

uint64_t sub_1B1DFACDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, char a7)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v70)(uint64_t, uint64_t);
  _OWORD v72[2];
  uint64_t v73;
  _OWORD v74[2];
  uint64_t v75;
  _OWORD v76[2];
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;

  sub_1B1B9DC78(a3 + 56, (uint64_t)v76, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
  sub_1B1A0DDAC(v76, v78);
  swift_dynamicCast();
  sub_1B1E0E85C(*(uint64_t *)&v74[0], *((uint64_t *)&v74[0] + 1), (uint64_t *)v72);
  v78[0] = v72[0];
  v78[1] = v72[1];
  v79 = v73;
  v11 = sub_1B2228920();
  swift_bridgeObjectRetain();
  if ((v11 & 1) != 0)
  {
    sub_1B2228830();
    v12 = sub_1B1D3A13C();
    v14 = v13;
    v16 = v15;
    v18 = v17;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1B5E20388](v12, v14, v16, v18);
    a2 = v19;
    swift_bridgeObjectRelease();
  }
  v68 = a2;
  v20 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 56);
  if (*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRetain();
    v21 = sub_1B1DC3EBC((uint64_t)v78);
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
      swift_retain();
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  sub_1B19F8C58(v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
  sub_1B1ED6EB0(*(_BYTE *)(*a5 + 24));
  v24 = sub_1B1FB34E8();
  if (sub_1B1FBAEF8(v24) == 0x45747865746E6F43 && v25 == 0xEB00000000746978)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      v39 = a2;
LABEL_26:
      if ((sub_1B1FB4544() & 1) == 0
        || ((v40 = a6[8] + 16 * (*(uint64_t (**)(void))(*a6 + 896))(), *(_QWORD *)(v40 + 32) == a1)
          ? (v41 = *(_QWORD *)(v40 + 40) == v39)
          : (v41 = 0),
            v41 || (sub_1B2229D24() & 1) != 0))
      {
        v67 = a1;
        v70 = *(void (**)(uint64_t, uint64_t))(*a6 + 1272);
        v70(a1, v39);
        v42 = sub_1B1FC0A9C();
        v44 = v43;
        swift_bridgeObjectRelease();
        v45 = *(_QWORD *)(v23 + 208);
        v65 = v23;
        if (*(_QWORD *)(v23 + 200))
          v46 = *(_QWORD *)(v23 + 200);
        else
          v46 = MEMORY[0x1E0DEE9D8];
        if (v45)
          v47 = v45;
        else
          v47 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48 = (_QWORD *)sub_1B1ED6BEC(v46, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v48[2])
        {
          v49 = v48[6];
          v50 = v48[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v49 = 0;
          v50 = 0;
        }
        swift_bridgeObjectRelease();
        if ((a7 & 1) != 0)
        {
          v51 = *(_BYTE *)(*a5 + 24);
          swift_bridgeObjectRelease();
          sub_1B1E0E85C(v49, v50, (uint64_t *)v74);
          v76[0] = v74[0];
          v76[1] = v74[1];
          v77 = v75;
          sub_1B1C39E78((uint64_t)v76, v42, v44, 0, v51);
          swift_bridgeObjectRelease();
          sub_1B19F8C58(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1B2228890();
        swift_bridgeObjectRetain();
        sub_1B2228890();
        swift_bridgeObjectRelease_n();
        v52 = *(_QWORD *)(v65 + 160);
        if (v52)
        {
          v53 = *(_QWORD *)(v52 + 16);
          if (v53)
          {
            v62 = a5;
            v54 = swift_bridgeObjectRetain() + 40;
            do
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1B2228890();
              v70(v67, v68);
              sub_1B2228890();
              sub_1B2228890();
              sub_1B1FC0A9C();
              swift_bridgeObjectRelease();
              sub_1B1A06460();
              sub_1B222922C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v54 += 16;
              --v53;
            }
            while (v53);
            swift_bridgeObjectRelease();
            a5 = v62;
          }
        }
        swift_bridgeObjectRelease();
        v55 = *a5;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        v56 = *(_QWORD **)(v55 + 128);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v55 + 128) = v56;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v56 = sub_1B1C63044(0, v56[2] + 1, 1, v56);
          *(_QWORD *)(v55 + 128) = v56;
        }
        v59 = v56[2];
        v58 = v56[3];
        if (v59 >= v58 >> 1)
        {
          v56 = sub_1B1C63044(v58 > 1, v59 + 1, 1, v56);
          *(_QWORD *)(v55 + 128) = v56;
        }
        v56[2] = v59 + 1;
        v60 = &v56[2 * v59];
        v60[4] = 8201;
        v60[5] = 0xE200000000000000;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  v63 = a7;
  swift_bridgeObjectRetain();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_1B1DF6ECC(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v61 = a5;
    v64 = v23;
    v66 = a1;
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(*a6 + 1440);
    swift_bridgeObjectRetain();
    v31 = (uint64_t *)(v28 + 40);
    do
    {
      v32 = *(v31 - 1);
      v33 = *v31;
      swift_bridgeObjectRetain();
      v34 = v30(v32, v33);
      if (v34)
      {
        if (*(_QWORD *)(*(_QWORD *)(a4 + 256) + 16))
        {
          v35 = *(_QWORD *)(v34 + 40);
          v36 = *(_QWORD *)(v34 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B1DC3B00(v35, v36);
          LOBYTE(v35) = v37;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v35 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            a1 = v66;
            v39 = v68;
            a5 = v61;
            v23 = v64;
            a7 = v63;
            goto LABEL_26;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v31 += 2;
      --v29;
    }
    while (v29);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1DFB4EC(_QWORD *a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t Strong;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[6];

  v2 = sub_1B1FB4544();
  v3 = *a1;
  if ((v2 & 1) == 0)
  {
    v15 = (*(uint64_t (**)(void))(v3 + 1424))();
    v16 = *(void (**)(uint64_t))(*a1 + 904);
    v17 = swift_bridgeObjectRetain();
    v16(v17);
    return v15;
  }
  v4 = (*(uint64_t (**)(void))(v3 + 896))();
  v5 = v4;
  v6 = a1[8];
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = v6 + 16 * v4;
    v8 = *(_QWORD *)(v7 + 32);
    v9 = *(_QWORD *)(v7 + 40);
    v10 = (uint64_t *)(v7 + 32);
    v11 = a1[5] + 16 * v5;
    v12 = v8 == *(_QWORD *)(v11 + 32) && v9 == *(_QWORD *)(v11 + 40);
    if (!v12 && (sub_1B2229D24() & 1) == 0)
    {
      v29 = *v10;
      v30 = v10[1];
      swift_bridgeObjectRetain();
      v31 = swift_bridgeObjectRetain();
      v32 = sub_1B1DF793C(v31, v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32 >> 62)
      {
        v33 = sub_1B22296AC();
        if (v33)
        {
LABEL_18:
          *(_QWORD *)&v78 = MEMORY[0x1E0DEE9D8];
          v68 = v33 & ~(v33 >> 63);
          sub_1B2029FFC(0, v68, 0);
          v34 = 0;
          v35 = v78;
          v71 = v32 & 0xC000000000000001;
          do
          {
            if (v71)
            {
              v36 = MEMORY[0x1B5E21018](v34, v32);
            }
            else
            {
              v36 = *(_QWORD *)(v32 + 8 * v34 + 32);
              swift_retain();
            }
            v38 = *(_QWORD *)(v36 + 40);
            v37 = *(_QWORD *)(v36 + 48);
            swift_bridgeObjectRetain();
            swift_release();
            *(_QWORD *)&v78 = v35;
            v40 = *(_QWORD *)(v35 + 16);
            v39 = *(_QWORD *)(v35 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_1B2029FFC(v39 > 1, v40 + 1, 1);
              v35 = v78;
            }
            ++v34;
            *(_QWORD *)(v35 + 16) = v40 + 1;
            v41 = v35 + 16 * v40;
            *(_QWORD *)(v41 + 32) = v38;
            *(_QWORD *)(v41 + 40) = v37;
          }
          while (v33 != v34);
          v67 = v35;
          *(_QWORD *)&v78 = MEMORY[0x1E0DEE9D8];
          sub_1B202A3C4(0, v68, 0);
          v42 = 0;
          v43 = v78;
          v69 = v32;
          v70 = v33;
          do
          {
            if (v71)
            {
              v44 = (_QWORD *)MEMORY[0x1B5E21018](v42, v32);
            }
            else
            {
              v44 = *(_QWORD **)(v32 + 8 * v42 + 32);
              swift_retain();
            }
            v45 = v44[7];
            v46 = v44[8];
            v48 = v44[9];
            v47 = v44[10];
            v49 = v44[11];
            sub_1B19FA2B4(v45, v46);
            swift_release();
            *(_QWORD *)&v78 = v43;
            v51 = *(_QWORD *)(v43 + 16);
            v50 = *(_QWORD *)(v43 + 24);
            if (v51 >= v50 >> 1)
            {
              sub_1B202A3C4(v50 > 1, v51 + 1, 1);
              v43 = v78;
            }
            ++v42;
            *(_QWORD *)(v43 + 16) = v51 + 1;
            v52 = (_QWORD *)(v43 + 40 * v51);
            v52[4] = v45;
            v52[5] = v46;
            v52[6] = v48;
            v52[7] = v47;
            v52[8] = v49;
            v32 = v69;
          }
          while (v70 != v42);
          v84 = MEMORY[0x1E0DEE9D8];
          sub_1B202B058(0, v68, 0);
          v53 = 0;
          while (1)
          {
            if (v71)
            {
              v54 = MEMORY[0x1B5E21018](v53, v32);
            }
            else
            {
              v54 = *(_QWORD *)(v32 + 8 * v53 + 32);
              swift_retain();
            }
            Strong = swift_weakLoadStrong();
            if (!Strong)
              break;
            v56 = Strong;
            v57 = *(_QWORD *)(v54 + 32);
            *(_QWORD *)&v78 = *(_QWORD *)(v54 + 24);
            *((_QWORD *)&v78 + 1) = v57;
            swift_bridgeObjectRetain_n();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            v58 = *((_QWORD *)&v78 + 1);
            v59 = *(_QWORD *)(v56 + 16);
            if (v59 && *(_QWORD *)(v59 + 16))
            {
              v60 = v78;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v61 = sub_1B1DC3B00(v60, v58);
              if ((v62 & 1) != 0)
              {
                sub_1B19F8F0C(*(_QWORD *)(v59 + 56) + 88 * v61, (uint64_t)&v72);
              }
              else
              {
                v77 = 0;
                v75 = 0u;
                v76 = 0u;
                v73 = 0u;
                v74 = 0u;
                v72 = 0u;
              }
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              v77 = 0;
              v75 = 0u;
              v76 = 0u;
              v73 = 0u;
              v74 = 0u;
              v72 = 0u;
              swift_release();
            }
            swift_bridgeObjectRelease();
            v32 = v69;
            v63 = v70;
            if (!*((_QWORD *)&v72 + 1))
              goto LABEL_47;
            v80 = v74;
            v81 = v75;
            v82 = v76;
            v83 = v77;
            v78 = v72;
            v79 = v73;
LABEL_48:
            swift_release();
            v64 = v84;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B202B058(0, *(_QWORD *)(v64 + 16) + 1, 1);
              v64 = v84;
            }
            v66 = *(_QWORD *)(v64 + 16);
            v65 = *(_QWORD *)(v64 + 24);
            if (v66 >= v65 >> 1)
            {
              sub_1B202B058(v65 > 1, v66 + 1, 1);
              v64 = v84;
            }
            ++v53;
            *(_QWORD *)(v64 + 16) = v66 + 1;
            sub_1B1A18378((uint64_t)&v78, v64 + 88 * v66 + 32, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
            if (v63 == v53)
            {
              swift_bridgeObjectRelease();
              return v67;
            }
          }
          v77 = 0;
          v75 = 0u;
          v76 = 0u;
          v73 = 0u;
          v74 = 0u;
          v72 = 0u;
          v63 = v70;
LABEL_47:
          sub_1B19FA278(v54 + 56, (uint64_t)v85);
          sub_1B19F8C58(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
          sub_1B1E02E1C(v85, 1, (uint64_t)&v78);
          sub_1B19F8C58(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
          sub_1B1A057EC((uint64_t)&v72, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
          goto LABEL_48;
        }
      }
      else
      {
        v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v33)
          goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
  }
  v13 = a1[7];
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v14 = (_QWORD *)MEMORY[0x1B5E21018](v5, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD **)(v13 + 8 * v5 + 32);
    swift_retain();
  }
  sub_1B201D450((uint64_t)&v72);
  if (*((_QWORD *)&v72 + 1))
  {
    v80 = v74;
    v81 = v75;
    v82 = v76;
    v83 = v77;
    v78 = v72;
    v79 = v73;
  }
  else
  {
    sub_1B19FA278((uint64_t)(v14 + 7), (uint64_t)v85);
    sub_1B19F8C58(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    sub_1B1E02E1C(v85, 1, (uint64_t)&v78);
    sub_1B19F8C58(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    sub_1B1A057EC((uint64_t)&v72, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
  }
  v18 = MEMORY[0x1E0DED1E8];
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1B226D240;
  v20 = v14[6];
  *(_QWORD *)(v19 + 32) = v14[5];
  *(_QWORD *)(v19 + 40) = v20;
  sub_1B1A02758(0, (unint64_t *)&unk_1EEF5CBD0, (uint64_t)&_s12MetadataTypeON, (uint64_t (*)(_QWORD, uint64_t))v18);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1B226D240;
  v22 = v14[7];
  v23 = v14[8];
  v24 = v14[9];
  v25 = v14[10];
  v26 = v14[11];
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v23;
  *(_QWORD *)(v21 + 48) = v24;
  *(_QWORD *)(v21 + 56) = v25;
  *(_QWORD *)(v21 + 64) = v26;
  sub_1B1BBD808();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1B226D240;
  sub_1B1A18378((uint64_t)&v78, v27 + 32, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
  swift_bridgeObjectRetain();
  v15 = v19;
  sub_1B19FA2B4(v22, v23);
  swift_release();
  return v15;
}

uint64_t sub_1B1DFBC64(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  _QWORD *Strong;
  _BOOL4 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v52 = sub_1B1FC0A9C();
  v53 = v14;
  v55 = sub_1B1FC0A9C();
  v16 = v15;
  v60 = 0;
  v61 = 0xE000000000000000;
  v17 = sub_1B1E03DBC();
  v19 = v18;
  if (v17 == sub_1B1E03DBC() && v19 == v20)
    v21 = 1;
  else
    v21 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (sub_1B1E03DBC() == 0x676E69727453 && v22 == 0xE600000000000000)
    goto LABEL_7;
  v23 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    goto LABEL_9;
  if (sub_1B1E03DBC() == 5001813 && v38 == 0xE300000000000000)
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
      goto LABEL_40;
  }
LABEL_9:
  if (sub_1B1E03DBC() != 0x676E69727453 || v24 != 0xE600000000000000)
  {
    v25 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_13;
    if (sub_1B1E03DBC() != 5001813 || v40 != 0xE300000000000000)
    {
      v41 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0)
        goto LABEL_40;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
LABEL_13:
  if ((*(_BYTE *)(a9 + 26) & 1) == 0 && *(_QWORD *)(*(_QWORD *)(v54 + 264) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1DC3B00(a2, a3);
    if ((v26 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Strong = (_QWORD *)swift_weakLoadStrong();
      swift_release();
      if (Strong)
      {
        v28 = *Strong == (_QWORD)_TtCO3VFX21GraphV1CodeGeneration11ContextExit;
        swift_release();
        if (((v28 | v21) & 1) == 0)
          goto LABEL_18;
LABEL_41:
        sub_1B1E03DBC();
        v45 = sub_1B2228920();
        swift_bridgeObjectRelease();
        if ((v45 & 1) != 0 && (sub_1B1E03DBC(), v46 = sub_1B2228920(), swift_bridgeObjectRelease(), (v46 & 1) != 0))
        {
          v47 = sub_1B1DDD484(a2, a3, a7);
          sub_1B1C4B7DC(v55, v16, (uint64_t)a1, v52, v53, a8 & 1, v47, a9, a7);
        }
        else
        {
          sub_1B1C4BE0C(a4, v55, v16, a1, v52, v53, a8 & 1, a7);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v56 = 8201;
        v57 = 0xE200000000000000;
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        return v60;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
LABEL_40:
  if ((v21 & 1) != 0)
    goto LABEL_41;
LABEL_18:
  v50 = a2;
  v29 = sub_1B1DDCF30(a1, a4, v55, v16, a7);
  v31 = v30;
  v49 = v32;
  v34 = v33;
  sub_1B1E03DBC();
  v35 = sub_1B2228920();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0 && (sub_1B1E03DBC(), v36 = sub_1B2228920(), swift_bridgeObjectRelease(), (v36 & 1) != 0))
  {
    if (v31)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = sub_1B1DDD484(v50, a3, a7);
      sub_1B1C4A4A0(v55, v16, (uint64_t)a1, v52, v53, v29, v31, a8 & 1, v37, a9, a7);
      goto LABEL_24;
    }
  }
  else if (v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1C4AEEC(a4, v55, v16, a1, v52, v53, v29, v31, a8 & 1, a7);
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = 8201;
    v57 = 0xE200000000000000;
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v34)
    {
      v56 = 8201;
      v57 = 0xE200000000000000;
      v58 = v49;
      v59 = v34;
      sub_1B1FC0A9C();
      sub_1B1A06460();
      sub_1B222922C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
    }
    return v60;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED4BF430 != -1)
    swift_once();
  v56 = 0;
  v57 = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  v58 = 0;
  v59 = 0xE000000000000000;
  sub_1B2228890();
  sub_1B19FA278((uint64_t)a1, (uint64_t)&v56);
  sub_1B22295EC();
  sub_1B2228890();
  sub_1B19FA278(a4, (uint64_t)&v56);
  sub_1B22295EC();
  v43 = v58;
  v42 = v59;
  v44 = sub_1B2228E9C();
  if (qword_1ED4BF658 != -1)
    swift_once();
  v56 = 0;
  swift_retain();
  sub_1B1F1AD70(v44, &v56, v43, v42);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v60;
}

unint64_t sub_1B1DFC474()
{
  unint64_t result;

  result = qword_1EEF5EA30;
  if (!qword_1EEF5EA30)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295AA8, &_s7ContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EA30);
  }
  return result;
}

unint64_t sub_1B1DFC4B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EA40;
  if (!qword_1EEF5EA40)
  {
    sub_1B1DFCDA0(255, (unint64_t *)&qword_1EEF5EA38, (void (*)(uint64_t))_s7ContextCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5C5A0, (uint64_t (*)(uint64_t))_s7ContextCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EA40);
  }
  return result;
}

unint64_t sub_1B1DFC548()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EA50;
  if (!qword_1EEF5EA50)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA48, (void (*)(uint64_t))type metadata accessor for GraphV1CodeGeneration.BaseObject);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EA58, (uint64_t (*)(uint64_t))type metadata accessor for GraphV1CodeGeneration.BaseObject, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EA50);
  }
  return result;
}

unint64_t sub_1B1DFC5D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EA68;
  if (!qword_1EEF5EA68)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA60, (void (*)(uint64_t))_s20ArraySequenceSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EA70, (uint64_t (*)(uint64_t))_s20ArraySequenceSnippetCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EA68);
  }
  return result;
}

unint64_t sub_1B1DFC668()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EA88;
  if (!qword_1EEF5EA88)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA80, (void (*)(uint64_t))_s11ContextExitCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EA90, (uint64_t (*)(uint64_t))_s11ContextExitCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EA88);
  }
  return result;
}

unint64_t sub_1B1DFC6F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EAA0;
  if (!qword_1EEF5EAA0)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA98, (void (*)(uint64_t))_s12ContextEntryCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EAA8, (uint64_t (*)(uint64_t))_s12ContextEntryCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EAA0);
  }
  return result;
}

unint64_t sub_1B1DFC788()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EAB8;
  if (!qword_1EEF5EAB8)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EAB0, (void (*)(uint64_t))_s10SubContextCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EAC0, (uint64_t (*)(uint64_t))_s10SubContextCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EAB8);
  }
  return result;
}

unint64_t sub_1B1DFC818()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EAC8;
  if (!qword_1EEF5EAC8)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA60, (void (*)(uint64_t))_s20ArraySequenceSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EAD0, (uint64_t (*)(uint64_t))_s20ArraySequenceSnippetCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EAC8);
  }
  return result;
}

unint64_t sub_1B1DFC8A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EAD8;
  if (!qword_1EEF5EAD8)
  {
    sub_1B1DFCDA0(255, (unint64_t *)&qword_1EEF5EA38, (void (*)(uint64_t))_s7ContextCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5C5B0, (uint64_t (*)(uint64_t))_s7ContextCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EAD8);
  }
  return result;
}

unint64_t sub_1B1DFC938()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EAE8;
  if (!qword_1EEF5EAE8)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EAE0, (void (*)(uint64_t))_s17CustomCodeSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EAF0, (uint64_t (*)(uint64_t))_s17CustomCodeSnippetCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EAE8);
  }
  return result;
}

unint64_t sub_1B1DFC9C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EB00;
  if (!qword_1EEF5EB00)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EAF8, (void (*)(uint64_t))_s17TypedArraySnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EB08, (uint64_t (*)(uint64_t))_s17TypedArraySnippetCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB00);
  }
  return result;
}

unint64_t sub_1B1DFCA58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EB18;
  if (!qword_1EEF5EB18)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EB10, (void (*)(uint64_t))_s19StaticSwitchSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EB20, (uint64_t (*)(uint64_t))_s19StaticSwitchSnippetCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB18);
  }
  return result;
}

unint64_t sub_1B1DFCAE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EB28;
  if (!qword_1EEF5EB28)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA48, (void (*)(uint64_t))type metadata accessor for GraphV1CodeGeneration.BaseObject);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EB30, (uint64_t (*)(uint64_t))type metadata accessor for GraphV1CodeGeneration.BaseObject, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB28);
  }
  return result;
}

unint64_t sub_1B1DFCB78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EB40;
  if (!qword_1EEF5EB40)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EB38, (void (*)(uint64_t))_s15VariableSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EB48, (uint64_t (*)(uint64_t))_s15VariableSnippetCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB40);
  }
  return result;
}

unint64_t sub_1B1DFCC08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EB58;
  if (!qword_1EEF5EB58)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EB50, (void (*)(uint64_t))_s24VariableReferenceSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EB60, (uint64_t (*)(uint64_t))_s24VariableReferenceSnippetCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB58);
  }
  return result;
}

uint64_t sub_1B1DFCC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1DF1878(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

unint64_t sub_1B1DFCCA0()
{
  unint64_t result;

  result = qword_1EEF5EB78;
  if (!qword_1EEF5EB78)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B227A4A4, &_s11CodeSnippetC17SerializationInfoVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB78);
  }
  return result;
}

unint64_t sub_1B1DFCCE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEF5EB88;
  if (!qword_1EEF5EB88)
  {
    sub_1B1A02758(255, &qword_1EEF5EB80, (uint64_t)&_s7ContextC14AssignmentInfoVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1B1DFCD5C();
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB88);
  }
  return result;
}

unint64_t sub_1B1DFCD5C()
{
  unint64_t result;

  result = qword_1EEF5EB90;
  if (!qword_1EEF5EB90)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295A80, &_s7ContextC14AssignmentInfoVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB90);
  }
  return result;
}

void sub_1B1DFCDA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1B22285A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1B1DFCDFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EB98;
  if (!qword_1EEF5EB98)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5C5B8, (void (*)(uint64_t))_s11MetadataSetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1ED4BB370, (uint64_t (*)(uint64_t))_s11MetadataSetCMa, (uint64_t)&unk_1B2296384);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EB98);
  }
  return result;
}

uint64_t sub_1B1DFCE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v11 = sub_1B1FC0A9C();
  v13 = v12;
  sub_1B1E03DBC();
  v14 = sub_1B2228920();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    sub_1B1C3AAC8(a1, v11, v13, 0, 1, a4, a5, a7, a6);
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = sub_1B1FC0A9C();
    sub_1B1C39E78(a1, v15, v16, 0, a6);
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
  }
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B1DFD054(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  _BYTE v24[96];
  uint64_t *v25;

  v18 = 0;
  v4 = 0;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v25 = &v23;
  v20 = a3 + 64;
  v21 = (unint64_t)(v5 + 63) >> 6;
  v19 = a3 + 104;
  if (!v7)
    goto LABEL_7;
LABEL_4:
  v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v9 = v8 | (v4 << 6);
  while (1)
  {
    v10 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    sub_1B19F8F0C(*(_QWORD *)(a3 + 56) + 88 * v9, (uint64_t)v24);
    v22[0] = v11;
    v22[1] = v12;
    sub_1B19F8F0C((uint64_t)v24, (uint64_t)v25);
    sub_1B1A2044C();
    sub_1B1A20490();
    swift_bridgeObjectRetain_n();
    LOBYTE(v11) = sub_1B222862C();
    sub_1B1A057EC((uint64_t)v22, (uint64_t)&qword_1EEF5C490, (uint64_t)&_s8MetadataVN, (uint64_t)"key value ", (uint64_t (*)(_QWORD))sub_1B1E01D20);
    sub_1B1A203C4((uint64_t)v24);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      ++v18;
      if (v7)
        goto LABEL_4;
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    v13 = v4 + 1;
    if (v4 + 1 >= v21)
      return sub_1B1C04EA0(a1, a2, v18, a3);
    v14 = *(_QWORD *)(v20 + 8 * v13);
    if (!v14)
    {
      v13 = v4 + 2;
      if (v4 + 2 >= v21)
        return sub_1B1C04EA0(a1, a2, v18, a3);
      v14 = *(_QWORD *)(v20 + 8 * v13);
      if (!v14)
      {
        v13 = v4 + 3;
        if (v4 + 3 >= v21)
          return sub_1B1C04EA0(a1, a2, v18, a3);
        v14 = *(_QWORD *)(v20 + 8 * v13);
        if (!v14)
        {
          v13 = v4 + 4;
          if (v4 + 4 >= v21)
            return sub_1B1C04EA0(a1, a2, v18, a3);
          v14 = *(_QWORD *)(v20 + 8 * v13);
          if (!v14)
            break;
        }
      }
    }
LABEL_18:
    v7 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v4 = v13;
  }
  while (v21 - 5 != v4)
  {
    v14 = *(_QWORD *)(v19 + 8 * v4++);
    if (v14)
    {
      v13 = v4 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C04EA0(a1, a2, v18, a3);
}

uint64_t sub_1B1DFD2C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t i;
  unint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t (*v24)(void);
  uint64_t v26;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _OWORD v33[3];
  _OWORD v34[2];
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[3];
  _QWORD v40[4];
  _OWORD v41[2];
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[6];
  uint64_t v45;

  v29 = 0;
  v5 = 0;
  v45 = a3;
  v8 = *(_QWORD *)(a3 + 64);
  v6 = a3 + 64;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v30 = v6;
  v31 = (unint64_t)(v9 + 63) >> 6;
  v26 = v6 + 40;
  v32 = MEMORY[0x1E0DEE9B8] + 8;
  if ((v10 & v7) != 0)
    goto LABEL_10;
LABEL_12:
  v14 = v5 + 1;
  if (v5 + 1 < v31)
  {
    v16 = *(_QWORD *)(v30 + 8 * v14);
    if (v16)
      goto LABEL_23;
    v14 = v5 + 2;
    if (v5 + 2 >= v31)
      return sub_1B1C05FF8(a1, a2, v29, v45);
    v16 = *(_QWORD *)(v30 + 8 * v14);
    if (v16)
      goto LABEL_23;
    v14 = v5 + 3;
    if (v5 + 3 >= v31)
      return sub_1B1C05FF8(a1, a2, v29, v45);
    v16 = *(_QWORD *)(v30 + 8 * v14);
    if (v16)
    {
LABEL_23:
      v11 = (v16 - 1) & v16;
      for (i = __clz(__rbit64(v16)) + (v14 << 6); ; i = v13 | (v5 << 6))
      {
        v42 = 0;
        v43 = 0xE000000000000000;
        v40[3] = MEMORY[0x1E0DEA968];
        v40[0] = 0;
        v40[1] = 0xE000000000000000;
        v17 = *(_QWORD *)(a4 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (!*(_QWORD *)(v17 + 16))
            goto LABEL_26;
        }
        else
        {
          *(_QWORD *)(a4 + 16) = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
          swift_bridgeObjectRelease();
          v17 = *(_QWORD *)(a4 + 16);
          if (!*(_QWORD *)(v17 + 16))
          {
LABEL_26:
            if (!v17)
              goto LABEL_36;
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRetain();
        sub_1B1DC3B00(1701667182, 0xE400000000000000);
        v20 = v19;
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          if (!*(_QWORD *)(a4 + 16))
          {
LABEL_36:
            *(_QWORD *)(a4 + 16) = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
            swift_bridgeObjectRelease();
          }
LABEL_27:
          sub_1B1A02864((uint64_t)v40, (uint64_t)v41);
          memset((char *)v39 + 8, 0, 32);
          *(_QWORD *)&v36 = 1701667182;
          *((_QWORD *)&v36 + 1) = 0xE400000000000000;
          sub_1B1E0E5B0(v41, v44);
          sub_1B19FA278((uint64_t)v44, (uint64_t)&v37);
          sub_1B1A057EC((uint64_t)v39 + 8, (uint64_t)&qword_1ED4BB150, v32, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
          sub_1B1A0DDAC(v41, (_OWORD *)((char *)v39 + 8));
          v33[2] = v38;
          v34[0] = v39[0];
          v34[1] = v39[1];
          v35 = *(_QWORD *)&v39[2];
          v33[0] = v36;
          v33[1] = v37;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v36 = *(_QWORD *)(a4 + 16);
          *(_QWORD *)(a4 + 16) = 0x8000000000000000;
          sub_1B1B8440C((uint64_t)v33, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(a4 + 16) = v36;
          swift_bridgeObjectRelease();
        }
        v21 = *(_QWORD *)(a4 + 16);
        if (!v21)
          goto LABEL_7;
        if (!*(_QWORD *)(v21 + 16))
        {
          memset(v39, 0, 40);
          v37 = 0u;
          v38 = 0u;
          v36 = 0u;
          swift_bridgeObjectRetain();
LABEL_6:
          sub_1B1A057EC((uint64_t)&v36, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
          swift_bridgeObjectRelease();
LABEL_7:
          memset(v41, 0, sizeof(v41));
          goto LABEL_8;
        }
        swift_bridgeObjectRetain();
        v22 = sub_1B1DC3B00(1701667182, 0xE400000000000000);
        if ((v23 & 1) == 0)
        {
          memset(v39, 0, 40);
          v37 = 0u;
          v38 = 0u;
          v36 = 0u;
          goto LABEL_6;
        }
        sub_1B19F8F0C(*(_QWORD *)(v21 + 56) + 88 * v22, (uint64_t)&v36);
        if (!*((_QWORD *)&v36 + 1))
          goto LABEL_6;
        sub_1B19F8F0C((uint64_t)&v36, (uint64_t)v33);
        v24 = MEMORY[0x1E0DEB940];
        sub_1B1A057EC((uint64_t)&v36, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
        swift_bridgeObjectRelease();
        sub_1B1B9DC78((uint64_t)v34 + 8, (uint64_t)v41, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)v24, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
        sub_1B1A203C4((uint64_t)v33);
LABEL_8:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v40);
        sub_1B1A0DDAC(v41, &v36);
        swift_dynamicCast();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        v12 = sub_1B2228914();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = v14;
        if ((v12 & 1) != 0)
        {
          *(unint64_t *)((char *)a1 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
          ++v29;
          if (!v11)
            goto LABEL_12;
        }
        else if (!v11)
        {
          goto LABEL_12;
        }
LABEL_10:
        v13 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v14 = v5;
      }
    }
    v14 = v5 + 4;
    if (v5 + 4 < v31)
    {
      v16 = *(_QWORD *)(v30 + 8 * v14);
      if (!v16)
      {
        do
        {
          if (v31 - 5 == v5)
            return sub_1B1C05FF8(a1, a2, v29, v45);
          v16 = *(_QWORD *)(v26 + 8 * v5++);
        }
        while (!v16);
        v14 = v5 + 4;
      }
      goto LABEL_23;
    }
  }
  return sub_1B1C05FF8(a1, a2, v29, v45);
}

_QWORD *sub_1B1DFD7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v58;
  _QWORD *v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  __objc2_class *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _OWORD v97[2];
  _OWORD v98[2];
  uint64_t v99;
  _OWORD v100[2];
  uint64_t v101;

  sub_1B1B9DC78(a3 + 56, (uint64_t)v97, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
  sub_1B1A0DDAC(v97, v100);
  swift_dynamicCast();
  sub_1B1E0E85C(v95, v96, (uint64_t *)v98);
  v100[0] = v98[0];
  v100[1] = v98[1];
  v101 = v99;
  v12 = sub_1B2228920();
  swift_bridgeObjectRetain();
  if ((v12 & 1) != 0)
  {
    sub_1B2228830();
    v13 = sub_1B1D3A13C();
    v15 = v14;
    v17 = v16;
    v18 = a6;
    v19 = a7;
    v20 = a4;
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1B5E20388](v13, v15, v17, v22);
    a2 = v24;
    a4 = v20;
    a7 = v19;
    a6 = v18;
    a1 = v23;
    swift_bridgeObjectRelease();
  }
  sub_1B1D3724C();
  v25 = swift_bridgeObjectRetain();
  v26 = sub_1B1DFE52C(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 16);
  swift_release();
  if (!v27)
  {
    swift_bridgeObjectRelease();
    return sub_1B19F8C58(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
  }
  v28 = *(_QWORD *)(*(_QWORD *)(a6 + 136) + 64);
  if (*(_QWORD *)(v28 + 16))
  {
    swift_bridgeObjectRetain();
    v29 = sub_1B1DC3EBC((uint64_t)v100);
    if ((v30 & 1) != 0)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
      swift_retain();
    }
    else
    {
      v31 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
  }
  sub_1B19F8C58(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
  *(_QWORD *)&v97[0] = sub_1B1ED6EB0(*(_BYTE *)(*a7 + 24));
  *((_QWORD *)&v97[0] + 1) = v33;
  _s17TypedArraySnippetCMa();
  if (swift_dynamicCastClass())
  {
    v34 = 4;
  }
  else
  {
    _s19StaticSwitchSnippetCMa();
    if (swift_dynamicCastClass())
    {
      v34 = 5;
    }
    else
    {
      _s15VariableSnippetCMa();
      if (swift_dynamicCastClass())
      {
        v34 = 1;
      }
      else
      {
        _s24VariableReferenceSnippetCMa();
        if (swift_dynamicCastClass())
        {
          v34 = 2;
        }
        else
        {
          _s20ArraySequenceSnippetCMa();
          if (swift_dynamicCastClass())
          {
            v34 = 9;
          }
          else
          {
            v81 = *(__objc2_class **)a4;
            if (*(__objc2_class **)a4 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
            {
              v34 = 0;
            }
            else
            {
              _s17CustomCodeSnippetCMa();
              if (swift_dynamicCastClass())
              {
                v34 = 3;
              }
              else if (v81 == _TtCO3VFX21GraphV1CodeGeneration11ContextExit)
              {
                v34 = 6;
              }
              else if (v81 == _TtCO3VFX21GraphV1CodeGeneration12ContextEntry)
              {
                v34 = 7;
              }
              else
              {
                _s10SubContextCMa();
                if (swift_dynamicCastClass())
                  v34 = 8;
                else
                  v34 = 10;
              }
            }
          }
        }
      }
    }
  }
  if (sub_1B1FBAEF8(v34) == 0x45747865746E6F43 && v35 == 0xEB00000000746978)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
LABEL_72:
      v84 = a1;
      v86 = a7;
      v90 = a4;
      v88 = v31;
      v61 = a6;
      if (*(_QWORD *)(*(_QWORD *)(v31 + 160) + 16))
        swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B1D3724C();
      sub_1B1FC0A9C();
      v62 = a2;
      swift_bridgeObjectRelease();
      sub_1B1A06460();
      v63 = sub_1B222922C();
      v65 = v64;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v97[0] = v63;
      *((_QWORD *)&v97[0] + 1) = v65;
      if (*(_QWORD *)(v88 + 200))
        v66 = *(_QWORD *)(v88 + 200);
      else
        v66 = MEMORY[0x1E0DEE9D8];
      if (*(_QWORD *)(v88 + 208))
        v67 = *(_QWORD *)(v88 + 208);
      else
        v67 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = sub_1B1ED6BEC(v66, v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v69 = *(_QWORD *)(v68 + 16);
      if (v69)
      {
        swift_bridgeObjectRetain();
        v70 = (uint64_t *)(v68 + 56);
        do
        {
          v71 = *(v70 - 3);
          v72 = *(v70 - 2);
          v73 = *(v70 - 1);
          v74 = *v70;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B1DEC4D8(v71, v72, v73, v74, v90, v84, v62, v61, (uint64_t)v86, (uint64_t *)v97);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v70 += 4;
          --v69;
        }
        while (v69);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1B222922C();
      swift_bridgeObjectRelease();
      v75 = *v86;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v76 = *(_QWORD **)(v75 + 128);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v75 + 128) = v76;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v76 = sub_1B1C63044(0, v76[2] + 1, 1, v76);
        *(_QWORD *)(v75 + 128) = v76;
      }
      v79 = v76[2];
      v78 = v76[3];
      if (v79 >= v78 >> 1)
      {
        v76 = sub_1B1C63044(v78 > 1, v79 + 1, 1, v76);
        *(_QWORD *)(v75 + 128) = v76;
      }
      v76[2] = v79 + 1;
      v80 = &v76[2 * v79];
      v80[4] = 8201;
      v80[5] = 0xE200000000000000;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_release();
    }
  }
  swift_bridgeObjectRetain();
  v37 = swift_bridgeObjectRetain();
  v38 = sub_1B1DF6ECC(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v92 = *(_QWORD *)(v38 + 16);
  if (v92)
  {
    v87 = v31;
    v82 = a2;
    v83 = a1;
    v93 = a6;
    v85 = a7;
    v91 = v38 + 32;
    swift_bridgeObjectRetain();
    v39 = 0;
    v89 = a4;
    while (1)
    {
      v40 = *(_QWORD **)(a4 + 40);
      v41 = v40[2];
      if (v41)
      {
        v42 = (uint64_t *)(v91 + 16 * v39);
        v44 = *v42;
        v43 = v42[1];
        if (v40[4] == *v42 && v40[5] == v43)
          goto LABEL_43;
        if ((sub_1B2229D24() & 1) != 0)
          goto LABEL_42;
        if (v41 != 1)
        {
          v46 = v40[6] == v44 && v40[7] == v43;
          if (v46 || (sub_1B2229D24() & 1) != 0)
            goto LABEL_42;
          if (v41 != 2)
          {
            if (v40[8] == v44 && v40[9] == v43 || (sub_1B2229D24() & 1) != 0)
              goto LABEL_42;
            v58 = v41 - 3;
            if (v41 != 3)
              break;
          }
        }
      }
LABEL_29:
      if (++v39 == v92)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return (_QWORD *)swift_bridgeObjectRelease();
      }
    }
    v59 = v40 + 11;
    while (1)
    {
      v60 = *(v59 - 1) == v44 && *v59 == v43;
      if (v60 || (sub_1B2229D24() & 1) != 0)
        break;
      v59 += 2;
      if (!--v58)
        goto LABEL_29;
    }
LABEL_42:
    if ((sub_1B2229D24() & 1) == 0)
    {
      v54 = 0;
      v55 = v40 + 7;
      v56 = 1;
      while (v41 != v56)
      {
        ++v54;
        if (*(v55 - 1) == v44 && *v55 == v43)
        {
          v47 = v54;
          goto LABEL_44;
        }
        v47 = v56++;
        v55 += 2;
        if ((sub_1B2229D24() & 1) != 0)
          goto LABEL_44;
      }
    }
LABEL_43:
    v47 = 0;
LABEL_44:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)(a4 + 48) + 40 * v47;
    v49 = *(_QWORD *)(v48 + 32);
    v50 = *(_QWORD *)(v48 + 40);
    swift_weakInit();
    swift_weakAssign();
    v94 = v49;
    v51 = *(_QWORD *)(*(_QWORD *)(v93 + 256) + 16);
    sub_1B19FA2B4(v49, v50);
    if (v51)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(1599362383, 0xE400000000000000);
      v53 = v52;
      swift_bridgeObjectRelease();
      swift_weakDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B19F9FEC(v94, v50);
      swift_bridgeObjectRelease();
      if ((v53 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        a7 = v85;
        v31 = v87;
        a2 = v82;
        a1 = v83;
        a6 = v93;
        a4 = v89;
        goto LABEL_72;
      }
    }
    else
    {
      swift_weakDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B19F9FEC(v49, v50);
    }
    swift_bridgeObjectRelease();
    a4 = v89;
    goto LABEL_29;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (_QWORD *)swift_bridgeObjectRelease();
}

uint64_t sub_1B1DFE338(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;

  v15 = 0;
  v4 = 0;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v18 = (unint64_t)(v5 + 63) >> 6;
  v17 = a3 + 64;
  v16 = a3 + 104;
  if (!v7)
    goto LABEL_7;
LABEL_4:
  v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v9 = v8 | (v4 << 6);
  while (1)
  {
    sub_1B1A2044C();
    sub_1B1A20490();
    if ((sub_1B222862C() & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      ++v15;
      if (v7)
        goto LABEL_4;
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    v10 = v4 + 1;
    if (v4 + 1 >= v18)
      return sub_1B1C0574C(a1, a2, v15, a3);
    v11 = *(_QWORD *)(v17 + 8 * v10);
    if (!v11)
    {
      v10 = v4 + 2;
      if (v4 + 2 >= v18)
        return sub_1B1C0574C(a1, a2, v15, a3);
      v11 = *(_QWORD *)(v17 + 8 * v10);
      if (!v11)
      {
        v10 = v4 + 3;
        if (v4 + 3 >= v18)
          return sub_1B1C0574C(a1, a2, v15, a3);
        v11 = *(_QWORD *)(v17 + 8 * v10);
        if (!v11)
        {
          v10 = v4 + 4;
          if (v4 + 4 >= v18)
            return sub_1B1C0574C(a1, a2, v15, a3);
          v11 = *(_QWORD *)(v17 + 8 * v10);
          if (!v11)
            break;
        }
      }
    }
LABEL_18:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v10 << 6);
    v4 = v10;
  }
  while (v18 - 5 != v4)
  {
    v11 = *(_QWORD *)(v16 + 8 * v4++);
    if (v11)
    {
      v10 = v4 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C0574C(a1, a2, v15, a3);
}

uint64_t sub_1B1DFE52C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  unsigned int v4;
  unint64_t v5;
  size_t v6;
  uint64_t isStackAllocationSafe;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(a1 + 32);
  v4 = v3 & 0x3F;
  v5 = (unint64_t)((1 << v3) + 63) >> 6;
  v6 = 8 * v5;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v4 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, v8);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    swift_bridgeObjectRetain();
    v9 = sub_1B1DFE338((_QWORD *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a1);
    swift_bridgeObjectRelease();
    if (v1)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v6);
    swift_bridgeObjectRetain();
    v9 = sub_1B1DFE338((unint64_t *)v10, v5, a1);
    swift_bridgeObjectRelease();
    MEMORY[0x1B5E23F88](v10, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v9;
}

_QWORD *sub_1B1DFE6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  _QWORD *v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  _QWORD *v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  __objc2_class *v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[2];
  _OWORD v82[2];
  uint64_t v83;
  _OWORD v84[2];
  uint64_t v85;

  sub_1B1B9DC78(a3 + 56, (uint64_t)v81, (uint64_t)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1B1A02758);
  sub_1B1A0DDAC(v81, v84);
  swift_dynamicCast();
  sub_1B1E0E85C(v79, v80, (uint64_t *)v82);
  v84[0] = v82[0];
  v84[1] = v82[1];
  v85 = v83;
  v9 = sub_1B2228920();
  swift_bridgeObjectRetain();
  v78 = a4;
  if ((v9 & 1) != 0)
  {
    sub_1B2228830();
    v10 = sub_1B1D3A13C();
    v12 = v11;
    v14 = v13;
    v16 = v15;
    swift_bridgeObjectRelease();
    MEMORY[0x1B5E20388](v10, v12, v14, v16);
    swift_bridgeObjectRelease();
  }
  sub_1B1D3724C();
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1B1DFE52C(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  swift_release();
  if (!v19)
  {
    swift_bridgeObjectRelease();
    return sub_1B19F8C58(v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
  }
  v20 = *(_QWORD *)(*(_QWORD *)(a6 + 136) + 56);
  if (*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRetain();
    v21 = sub_1B1DC3EBC((uint64_t)v84);
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
      swift_retain();
    }
    else
    {
      v23 = 0;
    }
    v25 = a4;
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
    v25 = a4;
  }
  sub_1B19F8C58(v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
  sub_1B1ED6EB0(*(_BYTE *)(*a7 + 24));
  _s17TypedArraySnippetCMa();
  if (swift_dynamicCastClass())
  {
    v26 = 4;
  }
  else
  {
    _s19StaticSwitchSnippetCMa();
    if (swift_dynamicCastClass())
    {
      v26 = 5;
    }
    else
    {
      _s15VariableSnippetCMa();
      if (swift_dynamicCastClass())
      {
        v26 = 1;
      }
      else
      {
        _s24VariableReferenceSnippetCMa();
        if (swift_dynamicCastClass())
        {
          v26 = 2;
        }
        else
        {
          _s20ArraySequenceSnippetCMa();
          if (swift_dynamicCastClass())
          {
            v26 = 9;
          }
          else
          {
            v70 = *(__objc2_class **)v25;
            if (*(__objc2_class **)v25 == _TtCO3VFX21GraphV1CodeGeneration11CodeSnippet)
            {
              v26 = 0;
            }
            else
            {
              _s17CustomCodeSnippetCMa();
              if (swift_dynamicCastClass())
              {
                v26 = 3;
              }
              else if (v70 == _TtCO3VFX21GraphV1CodeGeneration11ContextExit)
              {
                v26 = 6;
              }
              else if (v70 == _TtCO3VFX21GraphV1CodeGeneration12ContextEntry)
              {
                v26 = 7;
              }
              else
              {
                _s10SubContextCMa();
                if (swift_dynamicCastClass())
                  v26 = 8;
                else
                  v26 = 10;
              }
            }
          }
        }
      }
    }
  }
  if (sub_1B1FBAEF8(v26) == 0x45747865746E6F43 && v27 == 0xEB00000000746978)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
LABEL_72:
      sub_1B1D3724C();
      v54 = sub_1B1FC0A9C();
      v56 = v55;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v81[0] = v54;
      *((_QWORD *)&v81[0] + 1) = v56;
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease_n();
      v57 = *((_QWORD *)&v81[0] + 1);
      v58 = *(_QWORD *)&v81[0];
      v59 = *(_QWORD *)(v23 + 160);
      if (v59 && (v60 = *(_QWORD *)(v59 + 16)) != 0)
      {
        v72 = a7;
        swift_bridgeObjectRetain_n();
        v61 = v59 + 40;
        do
        {
          *(_QWORD *)&v81[0] = v58;
          *((_QWORD *)&v81[0] + 1) = v57;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2228890();
          swift_bridgeObjectRetain();
          sub_1B2228890();
          swift_bridgeObjectRetain();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          sub_1B2228890();
          sub_1B1FC0A9C();
          swift_bridgeObjectRelease();
          sub_1B1A06460();
          v58 = sub_1B222922C();
          v63 = v62;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v57 = v63;
          v61 += 16;
          --v60;
        }
        while (v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        a7 = v72;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v64 = *a7;
      *(_QWORD *)&v81[0] = 8201;
      *((_QWORD *)&v81[0] + 1) = 0xE200000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v65 = v81[0];
      v66 = *(_QWORD **)(v64 + 128);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v64 + 128) = v66;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v66 = sub_1B1C63044(0, v66[2] + 1, 1, v66);
        *(_QWORD *)(v64 + 128) = v66;
      }
      v69 = v66[2];
      v68 = v66[3];
      if (v69 >= v68 >> 1)
      {
        v66 = sub_1B1C63044(v68 > 1, v69 + 1, 1, v66);
        *(_QWORD *)(v64 + 128) = v66;
      }
      v66[2] = v69 + 1;
      *(_OWORD *)&v66[2 * v69 + 4] = v65;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_release();
    }
  }
  swift_bridgeObjectRetain();
  v29 = swift_bridgeObjectRetain();
  v30 = sub_1B1DF6ECC(v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v76 = *(_QWORD *)(v30 + 16);
  if (v76)
  {
    v73 = v23;
    v71 = a7;
    v74 = v30 + 32;
    swift_bridgeObjectRetain();
    v31 = 0;
    while (1)
    {
      v32 = *(_QWORD **)(v25 + 40);
      v33 = v32[2];
      if (v33)
      {
        v34 = (uint64_t *)(v74 + 16 * v31);
        v36 = *v34;
        v35 = v34[1];
        if (v32[4] == *v34 && v32[5] == v35)
          goto LABEL_43;
        if ((sub_1B2229D24() & 1) != 0)
          goto LABEL_42;
        if (v33 != 1)
        {
          v38 = v32[6] == v36 && v32[7] == v35;
          if (v38 || (sub_1B2229D24() & 1) != 0)
            goto LABEL_42;
          if (v33 != 2)
          {
            if (v32[8] == v36 && v32[9] == v35 || (sub_1B2229D24() & 1) != 0)
              goto LABEL_42;
            v51 = v33 - 3;
            if (v33 != 3)
              break;
          }
        }
      }
LABEL_29:
      if (++v31 == v76)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return (_QWORD *)swift_bridgeObjectRelease();
      }
    }
    v52 = v32 + 11;
    while (1)
    {
      v53 = *(v52 - 1) == v36 && *v52 == v35;
      if (v53 || (sub_1B2229D24() & 1) != 0)
        break;
      v52 += 2;
      if (!--v51)
        goto LABEL_29;
    }
LABEL_42:
    if ((sub_1B2229D24() & 1) == 0)
    {
      v47 = 0;
      v48 = v32 + 7;
      v49 = 1;
      while (v33 != v49)
      {
        ++v47;
        if (*(v48 - 1) == v36 && *v48 == v35)
        {
          v39 = v47;
          goto LABEL_44;
        }
        v39 = v49++;
        v48 += 2;
        if ((sub_1B2229D24() & 1) != 0)
          goto LABEL_44;
      }
    }
LABEL_43:
    v39 = 0;
LABEL_44:
    *(_QWORD *)&v81[0] = 1599362383;
    *((_QWORD *)&v81[0] + 1) = 0xE400000000000000;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v40 = *((_QWORD *)&v81[0] + 1);
    v77 = *(_QWORD *)&v81[0];
    v41 = *(_QWORD *)(v25 + 48) + 40 * v39;
    v43 = *(_QWORD *)(v41 + 32);
    v42 = *(_QWORD *)(v41 + 40);
    swift_weakInit();
    swift_weakAssign();
    v44 = *(_QWORD *)(*(_QWORD *)(a6 + 256) + 16);
    sub_1B19FA2B4(v43, v42);
    if (v44)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(v77, v40);
      v46 = v45;
      swift_bridgeObjectRelease();
      swift_weakDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B19F9FEC(v43, v42);
      swift_bridgeObjectRelease();
      if ((v46 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        a7 = v71;
        v23 = v73;
        goto LABEL_72;
      }
    }
    else
    {
      swift_weakDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B19F9FEC(v43, v42);
    }
    swift_bridgeObjectRelease();
    v25 = v78;
    goto LABEL_29;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (_QWORD *)swift_bridgeObjectRelease();
}

uint64_t sub_1B1DFF1F0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v11;
  unsigned int v12;
  unint64_t v13;
  size_t v14;
  uint64_t isStackAllocationSafe;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v11 = *(_BYTE *)(a1 + 32);
  v12 = v11 & 0x3F;
  v13 = (unint64_t)((1 << v11) + 63) >> 6;
  v14 = 8 * v13;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v12 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v20[0] = v20;
    MEMORY[0x1E0C80A78](isStackAllocationSafe, v16);
    bzero((char *)v20 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v14);
    swift_bridgeObjectRetain();
    v17 = sub_1B1DFF3D8((uint64_t)v20 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v13, a1, a2 & 1, a3, a4, a5);
    swift_bridgeObjectRelease();
    if (v5)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v18 = (void *)swift_slowAlloc();
    bzero(v18, v14);
    swift_bridgeObjectRetain();
    v17 = sub_1B1DFF3D8((uint64_t)v18, v13, a1, a2 & 1, a3, a4, a5);
    swift_bridgeObjectRelease();
    MEMORY[0x1B5E23F88](v18, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v17;
}

uint64_t sub_1B1DFF3D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v7;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  int64_t v26;

  v7 = a4;
  v22 = 0;
  i = 0;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 64);
  v25 = a3 + 64;
  v26 = (unint64_t)(v10 + 63) >> 6;
  v23 = a3 + 104;
  if (v12)
    goto LABEL_7;
LABEL_8:
  v15 = i + 1;
  if (i + 1 < v26)
  {
    v16 = *(_QWORD *)(v25 + 8 * v15);
    if (v16)
      goto LABEL_19;
    v15 = i + 2;
    if (i + 2 >= v26)
      return a7(a1, a2, v22, a3);
    v16 = *(_QWORD *)(v25 + 8 * v15);
    if (v16)
      goto LABEL_19;
    v15 = i + 3;
    if (i + 3 >= v26)
      return a7(a1, a2, v22, a3);
    v16 = *(_QWORD *)(v25 + 8 * v15);
    if (v16)
    {
LABEL_19:
      v12 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v15 << 6);
      for (i = v15; ; v14 = v13 | (i << 6))
      {
        if ((v7 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1B2228890();
          sub_1B1A06460();
          v17 = sub_1B2229274();
          swift_bridgeObjectRelease();
          swift_release();
          v7 = a4;
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
LABEL_6:
            if (!v12)
              goto LABEL_8;
            goto LABEL_7;
          }
        }
        else
        {
          sub_1B1A06460();
          if ((sub_1B2229274() & 1) == 0)
            goto LABEL_6;
        }
        *(_QWORD *)(a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        ++v22;
        if (!v12)
          goto LABEL_8;
LABEL_7:
        v13 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
      }
    }
    v15 = i + 4;
    if (i + 4 < v26)
    {
      v16 = *(_QWORD *)(v25 + 8 * v15);
      if (!v16)
      {
        do
        {
          if (v26 - 5 == i)
            return a7(a1, a2, v22, a3);
          v16 = *(_QWORD *)(v23 + 8 * i++);
        }
        while (!v16);
        v15 = i + 4;
      }
      goto LABEL_19;
    }
  }
  return a7(a1, a2, v22, a3);
}

uint64_t sub_1B1DFF678(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;

  v18 = 0;
  i = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v20 = a3 + 64;
  v21 = (unint64_t)(v7 + 63) >> 6;
  v19 = a3 + 104;
  if (v9)
    goto LABEL_7;
LABEL_8:
  v12 = i + 1;
  if (i + 1 < v21)
  {
    v13 = *(_QWORD *)(v20 + 8 * v12);
    if (v13)
      goto LABEL_19;
    v12 = i + 2;
    if (i + 2 >= v21)
      return sub_1B1C05A0C(a1, a2, v18, a3);
    v13 = *(_QWORD *)(v20 + 8 * v12);
    if (v13)
      goto LABEL_19;
    v12 = i + 3;
    if (i + 3 >= v21)
      return sub_1B1C05A0C(a1, a2, v18, a3);
    v13 = *(_QWORD *)(v20 + 8 * v12);
    if (v13)
    {
LABEL_19:
      v9 = (v13 - 1) & v13;
      v11 = __clz(__rbit64(v13)) + (v12 << 6);
      for (i = v12; ; v11 = v10 | (i << 6))
      {
        if ((a4 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          v14 = sub_1B2228920();
          swift_bridgeObjectRelease();
          swift_release();
          if ((v14 & 1) == 0)
          {
LABEL_6:
            if (!v9)
              goto LABEL_8;
            goto LABEL_7;
          }
        }
        else
        {
          sub_1B1A06460();
          if ((sub_1B2229274() & 1) == 0)
            goto LABEL_6;
        }
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        ++v18;
        if (!v9)
          goto LABEL_8;
LABEL_7:
        v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
      }
    }
    v12 = i + 4;
    if (i + 4 < v21)
    {
      v13 = *(_QWORD *)(v20 + 8 * v12);
      if (!v13)
      {
        do
        {
          if (v21 - 5 == i)
            return sub_1B1C05A0C(a1, a2, v18, a3);
          v13 = *(_QWORD *)(v19 + 8 * i++);
        }
        while (!v13);
        v12 = i + 4;
      }
      goto LABEL_19;
    }
  }
  return sub_1B1C05A0C(a1, a2, v18, a3);
}

uint64_t sub_1B1DFF8B4(uint64_t a1, char a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, v10);
    bzero((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v11 = sub_1B1DFF678((_QWORD *)((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2 & 1);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    v11 = sub_1B1DFF678((unint64_t *)v12, v7, a1, a2 & 1);
    swift_bridgeObjectRelease();
    MEMORY[0x1B5E23F88](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_1B1DFFA88(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v31 = (unint64_t)(v7 + 63) >> 6;
  v29 = 0;
  v30 = a3 + 64;
  v26 = a3 + 104;
  v28 = a4 + 7;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v6 << 6);
    v12 = a4[2];
    if (v12)
    {
LABEL_20:
      v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
      v16 = *v15;
      v17 = v15[1];
      v18 = a4[4] == *v15 && a4[5] == v17;
      if (!v18 && (sub_1B2229D24() & 1) == 0)
      {
        v19 = v12 - 1;
        if (!v19)
          goto LABEL_4;
        v20 = v28;
        while (1)
        {
          v21 = *(v20 - 1);
          v22 = *v20;
          v20 += 2;
          v23 = v21 == v16 && v22 == v17;
          if (v23 || (sub_1B2229D24() & 1) != 0)
            break;
          if (!--v19)
            goto LABEL_4;
        }
      }
    }
    else
    {
LABEL_4:
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      ++v29;
    }
  }
  v13 = v6 + 1;
  if (v6 + 1 >= v31)
    return sub_1B1C0628C(a1, a2, v29, a3);
  v14 = *(_QWORD *)(v30 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v13 = v6 + 2;
  if (v6 + 2 >= v31)
    return sub_1B1C0628C(a1, a2, v29, a3);
  v14 = *(_QWORD *)(v30 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v13 = v6 + 3;
  if (v6 + 3 >= v31)
    return sub_1B1C0628C(a1, a2, v29, a3);
  v14 = *(_QWORD *)(v30 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v13 = v6 + 4;
  if (v6 + 4 >= v31)
    return sub_1B1C0628C(a1, a2, v29, a3);
  v14 = *(_QWORD *)(v30 + 8 * v13);
  if (v14)
  {
LABEL_19:
    v9 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v13 << 6);
    v6 = v13;
    v12 = a4[2];
    if (!v12)
      goto LABEL_4;
    goto LABEL_20;
  }
  while (v31 - 5 != v6)
  {
    v14 = *(_QWORD *)(v26 + 8 * v6++);
    if (v14)
    {
      v13 = v6 + 4;
      goto LABEL_19;
    }
  }
  return sub_1B1C0628C(a1, a2, v29, a3);
}

uint64_t sub_1B1DFFCB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, v10);
    bzero((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v11 = sub_1B1DFFA88((_QWORD *)((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    v11 = sub_1B1DFFA88((unint64_t *)v12, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1B5E23F88](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_1B1DFFE68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t Strong;
  char v20;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v25 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v26 = a3 + 64;
  v27 = (unint64_t)(v7 + 63) >> 6;
  v23 = a3 + 104;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_19;
    }
    v12 = v6 + 1;
    if (v6 + 1 >= v27)
      return sub_1B1C0574C(a1, a2, v25, a3);
    v13 = *(_QWORD *)(v26 + 8 * v12);
    if (!v13)
    {
      v12 = v6 + 2;
      if (v6 + 2 >= v27)
        return sub_1B1C0574C(a1, a2, v25, a3);
      v13 = *(_QWORD *)(v26 + 8 * v12);
      if (!v13)
      {
        v12 = v6 + 3;
        if (v6 + 3 >= v27)
          return sub_1B1C0574C(a1, a2, v25, a3);
        v13 = *(_QWORD *)(v26 + 8 * v12);
        if (!v13)
        {
          v12 = v6 + 4;
          if (v6 + 4 >= v27)
            return sub_1B1C0574C(a1, a2, v25, a3);
          v13 = *(_QWORD *)(v26 + 8 * v12);
          if (!v13)
            break;
        }
      }
    }
LABEL_18:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
LABEL_19:
    if (!*(_QWORD *)(*(_QWORD *)(a4 + 264) + 16))
      goto LABEL_31;
    v14 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v15 = *v14;
    v16 = v14[1];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1DC3B00(v15, v16);
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    swift_retain();
    swift_bridgeObjectRelease();
    Strong = swift_weakLoadStrong();
    swift_release();
    if (!Strong)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_30;
    }
    if (*(_QWORD *)(Strong + 24) == *(_QWORD *)(a5 + 24) && *(_QWORD *)(Strong + 32) == *(_QWORD *)(a5 + 32))
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      v20 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v20 & 1) == 0)
      {
LABEL_31:
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        ++v25;
      }
    }
  }
  while (v27 - 5 != v6)
  {
    v13 = *(_QWORD *)(v23 + 8 * v6++);
    if (v13)
    {
      v12 = v6 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C0574C(a1, a2, v25, a3);
}

uint64_t sub_1B1E00140(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t Strong;
  char v20;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v25 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v26 = a3 + 64;
  v27 = (unint64_t)(v7 + 63) >> 6;
  v23 = a3 + 104;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_19;
    }
    v12 = v6 + 1;
    if (v6 + 1 >= v27)
      return sub_1B1C0574C(a1, a2, v25, a3);
    v13 = *(_QWORD *)(v26 + 8 * v12);
    if (!v13)
    {
      v12 = v6 + 2;
      if (v6 + 2 >= v27)
        return sub_1B1C0574C(a1, a2, v25, a3);
      v13 = *(_QWORD *)(v26 + 8 * v12);
      if (!v13)
      {
        v12 = v6 + 3;
        if (v6 + 3 >= v27)
          return sub_1B1C0574C(a1, a2, v25, a3);
        v13 = *(_QWORD *)(v26 + 8 * v12);
        if (!v13)
        {
          v12 = v6 + 4;
          if (v6 + 4 >= v27)
            return sub_1B1C0574C(a1, a2, v25, a3);
          v13 = *(_QWORD *)(v26 + 8 * v12);
          if (!v13)
            break;
        }
      }
    }
LABEL_18:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
LABEL_19:
    if (!*(_QWORD *)(*(_QWORD *)(a4 + 264) + 16))
      goto LABEL_31;
    v14 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 24 * v11);
    v15 = *v14;
    v16 = v14[1];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1DC3B00(v15, v16);
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    swift_retain();
    swift_bridgeObjectRelease();
    Strong = swift_weakLoadStrong();
    swift_release();
    if (!Strong)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_30;
    }
    if (*(_QWORD *)(Strong + 24) == *(_QWORD *)(a5 + 24) && *(_QWORD *)(Strong + 32) == *(_QWORD *)(a5 + 32))
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      v20 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v20 & 1) == 0)
      {
LABEL_31:
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        ++v25;
      }
    }
  }
  while (v27 - 5 != v6)
  {
    v13 = *(_QWORD *)(v23 + 8 * v6++);
    if (v13)
    {
      v12 = v6 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C0574C(a1, a2, v25, a3);
}

uint64_t sub_1B1E00418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  char v10;
  unsigned int v11;
  unint64_t v12;
  size_t v13;
  uint64_t isStackAllocationSafe;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];

  v6 = v4;
  v20[1] = *MEMORY[0x1E0C80C00];
  v10 = *(_BYTE *)(a1 + 32);
  v11 = v10 & 0x3F;
  v12 = (unint64_t)((1 << v10) + 63) >> 6;
  v13 = 8 * v12;
  swift_retain_n();
  isStackAllocationSafe = swift_retain_n();
  if (v11 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, v15);
    bzero((char *)v20 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    swift_retain();
    swift_retain();
    v16 = v6;
    v17 = a4((char *)v20 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v12, a1, a2, a3);
    swift_release();
    swift_release();
    if (v16)
      swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v18 = (void *)swift_slowAlloc();
    bzero(v18, v13);
    swift_retain();
    swift_retain();
    v17 = a4((char *)v18, v12, a1, a2, a3);
    swift_release();
    swift_release();
    MEMORY[0x1B5E23F88](v18, -1, -1);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_1B1E00640(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t Strong;
  char v18;
  uint64_t v22;
  uint64_t v23;

  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v22 = a3 + 104;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_19;
    }
    v14 = v6 + 1;
    if (v6 + 1 >= v11)
      return sub_1B1C05A0C(a1, a2, v23, a3);
    v15 = *(_QWORD *)(v7 + 8 * v14);
    if (!v15)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v11)
        return sub_1B1C05A0C(a1, a2, v23, a3);
      v15 = *(_QWORD *)(v7 + 8 * v14);
      if (!v15)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v11)
          return sub_1B1C05A0C(a1, a2, v23, a3);
        v15 = *(_QWORD *)(v7 + 8 * v14);
        if (!v15)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v11)
            return sub_1B1C05A0C(a1, a2, v23, a3);
          v15 = *(_QWORD *)(v7 + 8 * v14);
          if (!v15)
            break;
        }
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v14 << 6);
    v6 = v14;
LABEL_19:
    Strong = swift_weakLoadStrong();
    if (!Strong)
      goto LABEL_25;
    if (*(_QWORD *)(Strong + 24) == *(_QWORD *)(a4 + 24) && *(_QWORD *)(Strong + 32) == *(_QWORD *)(a4 + 32))
    {
      swift_release();
    }
    else
    {
      v18 = sub_1B2229D24();
      swift_release();
      if ((v18 & 1) == 0)
      {
LABEL_25:
        *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        ++v23;
      }
    }
  }
  while (v11 - 5 != v6)
  {
    v15 = *(_QWORD *)(v22 + 8 * v6++);
    if (v15)
    {
      v14 = v6 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C05A0C(a1, a2, v23, a3);
}

uint64_t sub_1B1E00810(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v21;
  uint64_t v22;

  v7 = 0;
  v8 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v21 = a3 + 104;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_19;
    }
    v15 = v7 + 1;
    if (v7 + 1 >= v12)
      return sub_1B1C0574C(a1, a2, v22, a3);
    v16 = *(_QWORD *)(v8 + 8 * v15);
    if (!v16)
    {
      v15 = v7 + 2;
      if (v7 + 2 >= v12)
        return sub_1B1C0574C(a1, a2, v22, a3);
      v16 = *(_QWORD *)(v8 + 8 * v15);
      if (!v16)
      {
        v15 = v7 + 3;
        if (v7 + 3 >= v12)
          return sub_1B1C0574C(a1, a2, v22, a3);
        v16 = *(_QWORD *)(v8 + 8 * v15);
        if (!v16)
        {
          v15 = v7 + 4;
          if (v7 + 4 >= v12)
            return sub_1B1C0574C(a1, a2, v22, a3);
          v16 = *(_QWORD *)(v8 + 8 * v15);
          if (!v16)
            break;
        }
      }
    }
LABEL_18:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v7 = v15;
LABEL_19:
    v17 = (_QWORD *)(*(_QWORD *)(a3 + 56) + 24 * v14);
    v18 = *v17 == *(_QWORD *)(a4 + 40) && v17[1] == *(_QWORD *)(a4 + 48);
    if (v18 || (sub_1B2229D24() & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      ++v22;
    }
  }
  while (v12 - 5 != v7)
  {
    v16 = *(_QWORD *)(v21 + 8 * v7++);
    if (v16)
    {
      v15 = v7 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C0574C(a1, a2, v22, a3);
}

uint64_t sub_1B1E009B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  char v8;
  unsigned int v9;
  unint64_t v10;
  size_t v11;
  uint64_t isStackAllocationSafe;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];

  v5 = v3;
  v18[1] = *MEMORY[0x1E0C80C00];
  v8 = *(_BYTE *)(a1 + 32);
  v9 = v8 & 0x3F;
  v10 = (unint64_t)((1 << v8) + 63) >> 6;
  v11 = 8 * v10;
  isStackAllocationSafe = swift_retain_n();
  if (v9 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, v13);
    bzero((char *)v18 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    swift_retain();
    v14 = v5;
    v15 = a3((char *)v18 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v10, a1, a2);
    swift_release();
    if (v14)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v16 = (void *)swift_slowAlloc();
    bzero(v16, v11);
    swift_retain();
    v15 = a3((char *)v16, v10, a1, a2);
    swift_release();
    MEMORY[0x1B5E23F88](v16, -1, -1);
    swift_release_n();
  }
  return v15;
}

uint64_t sub_1B1E00B70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  char v25;
  unsigned __int8 v26;
  char v27;

  v22 = a2;
  sub_1B19F8E54(0, &qword_1EEF5ECA8, (uint64_t (*)(void))sub_1B1E02388, (uint64_t)&_s7ContextC14AssignmentInfoV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v21 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E02388();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v6;
  v11 = v22;
  v27 = 0;
  v12 = sub_1B22297CC();
  v14 = v13;
  v25 = 1;
  sub_1B1E02410();
  swift_bridgeObjectRetain();
  sub_1B2229814();
  v23 = v26;
  v24 = 2;
  v15 = sub_1B22297CC();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19 = v15;
  v18(v9, v5);
  swift_bridgeObjectRetain();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v11 = v12;
  *(_QWORD *)(v11 + 8) = v14;
  *(_BYTE *)(v11 + 16) = v23;
  *(_QWORD *)(v11 + 24) = v19;
  *(_QWORD *)(v11 + 32) = v17;
  return result;
}

uint64_t sub_1B1E00D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;

  v9 = sub_1B2228920();
  swift_bridgeObjectRetain();
  v10 = a1;
  v11 = a2;
  if ((v9 & 1) != 0)
  {
    sub_1B2228830();
    v12 = sub_1B1D3A13C();
    v14 = v13;
    v16 = v15;
    v18 = v17;
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1B5E20388](v12, v14, v16, v18);
    v11 = v19;
    swift_bridgeObjectRelease();
  }
  if ((sub_1B1DB8EB4(v10, v11, *(_QWORD **)(a4 + 40)) & 1) != 0
    || (swift_bridgeObjectRetain(),
        v20 = swift_bridgeObjectRetain(),
        v21 = sub_1B1DF77B4(v20),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        v22 = *(_QWORD *)(v21 + 16),
        swift_bridgeObjectRelease(),
        v22))
  {
    v23 = swift_bridgeObjectRetain();
    v24 = sub_1B1DF7670(v23, v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v24 + 16);
    result = swift_bridgeObjectRelease();
    if (v25 != 1)
      return result;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v27 = (_QWORD *)*a5;
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  *a5 = (uint64_t)v27;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1B1C63044(0, v27[2] + 1, 1, v27);
    v27 = (_QWORD *)result;
    *a5 = result;
  }
  v29 = v27[2];
  v28 = v27[3];
  if (v29 >= v28 >> 1)
  {
    result = (uint64_t)sub_1B1C63044(v28 > 1, v29 + 1, 1, v27);
    v27 = (_QWORD *)result;
    *a5 = result;
  }
  v27[2] = v29 + 1;
  v30 = &v27[2 * v29];
  v30[4] = a1;
  v30[5] = a2;
  return result;
}

uint64_t sub_1B1E00FB0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t *v13;
  double (*v14)(_QWORD);
  uint64_t *v15;
  unint64_t v16;
  char v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[4];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v2 = MEMORY[0x1E0DEE9D8];
  v49 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1B1FB74F8();
  if (v3)
  {
    v4 = v3[2];
    if (!v4)
    {
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v2 + 16);
      if (!v6)
        goto LABEL_22;
      goto LABEL_7;
    }
    v5 = (uint64_t)(v3 + 6);
    do
    {
      sub_1B1E00D90(*(_QWORD *)(v5 - 16), *(_QWORD *)(v5 - 8), v5, a1, &v49);
      v5 += 104;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v2 = v49;
  }
  v6 = *(_QWORD *)(v2 + 16);
  if (!v6)
    goto LABEL_22;
LABEL_7:
  swift_bridgeObjectRetain_n();
  v7 = (uint64_t *)(v2 + 40);
  do
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8 && *(_QWORD *)(v8 + 16))
    {
      v9 = *(v7 - 1);
      v10 = *v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(v9, v10);
      v12 = v11;
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
        v14 = sub_1B1E029E8();
        if (*v13)
        {
          v15 = v13;
          swift_bridgeObjectRetain();
          v16 = sub_1B1DC3B00(v9, v10);
          v18 = v17;
          swift_bridgeObjectRelease();
          if ((v18 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v41 = *v15;
            *v15 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1B1EA805C();
            swift_bridgeObjectRelease();
            v20 = *(_QWORD *)(v41 + 56) + 88 * v16;
            v21 = *(_OWORD *)(v20 + 16);
            v43 = *(_OWORD *)v20;
            v44 = v21;
            v23 = *(_OWORD *)(v20 + 48);
            v22 = *(_OWORD *)(v20 + 64);
            v24 = *(_OWORD *)(v20 + 32);
            v48 = *(_QWORD *)(v20 + 80);
            v46 = v23;
            v47 = v22;
            v45 = v24;
            sub_1B1EA4748(v16, v41);
            *v15 = v41;
            swift_bridgeObjectRelease();
          }
          else
          {
            v48 = 0;
            v46 = 0u;
            v47 = 0u;
            v44 = 0u;
            v45 = 0u;
            v43 = 0u;
          }
          sub_1B1A057EC((uint64_t)&v43, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
          ((void (*)(_QWORD *, _QWORD))v14)(v42, 0);
        }
        else
        {
          ((void (*)(_QWORD *, _QWORD))v14)(v42, 0);
          v43 = 0u;
          v44 = 0u;
          v45 = 0u;
          v46 = 0u;
          v47 = 0u;
          v48 = 0;
          sub_1B1A057EC((uint64_t)&v43, (uint64_t)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1B1A02758);
        }
      }
      swift_bridgeObjectRelease();
    }
    v7 += 2;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease_n();
LABEL_22:
  v25 = *(_QWORD **)(a1 + 40);
  if (v25[2])
  {
    v26 = v25[5];
    *(_QWORD *)&v43 = v25[4];
    *((_QWORD *)&v43 + 1) = v26;
    sub_1B1A06460();
    swift_bridgeObjectRetain();
    v27 = MEMORY[0x1E0DEA968];
    v28 = (_QWORD *)sub_1B2229280();
    swift_bridgeObjectRelease();
    if (v28[2] != 2)
      goto LABEL_27;
    v29 = v28[4];
    v30 = v28[5];
    v31 = v28[6];
    v32 = v28[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1B5E20388](v29, v30, v31, v32);
    v35 = v34;
    swift_bridgeObjectRelease();
    if ((sub_1B1FB9644(v33, v35) & 1) != 0)
      goto LABEL_27;
    swift_bridgeObjectRetain();
    v36 = swift_bridgeObjectRetain();
    v37 = sub_1B1DF77B4(v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = *(_QWORD *)(v37 + 16);
    swift_bridgeObjectRelease();
    if (v38 > 1 && v38 < 5)
    {
      *(_QWORD *)&v43 = v33;
      *((_QWORD *)&v43 + 1) = v35;
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v40 = v43;
      *(_QWORD *)&v43 = 0x74616F6C46;
      *((_QWORD *)&v43 + 1) = 0xE500000000000000;
      v42[0] = v38;
      sub_1B2229A0C();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      *((_QWORD *)&v44 + 1) = v27;
      sub_1B1E02AF4(v40, *((uint64_t *)&v40 + 1), (uint64_t)&v43);
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v43);
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_1B1E01404()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EBA0)
  {
    sub_1B1B9C50C();
    v0 = sub_1B22285A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EBA0);
  }
}

unint64_t sub_1B1E01460()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEF5EBA8;
  if (!qword_1EEF5EBA8)
  {
    sub_1B1E01404();
    v2 = v1;
    v3[0] = sub_1B1E014C0();
    v3[1] = v3[0];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EEF5EBA8);
  }
  return result;
}

unint64_t sub_1B1E014C0()
{
  unint64_t result;

  result = qword_1EEF5EBB0;
  if (!qword_1EEF5EBB0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295A18, &_s7ContextC14AssignmentInfoVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EBB0);
  }
  return result;
}

uint64_t sub_1B1E01504(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1B1DF0F64(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD ***)(v3 + 32), *(uint64_t **)(v3 + 40));
}

uint64_t sub_1B1E01510(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1B1E01560()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BB3D8)
  {
    sub_1B1E015C4(255, (unint64_t *)&qword_1ED4BB3C8);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BB3D8);
  }
}

void sub_1B1E015C4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1B22285A8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1B1E01614(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1B1E015C4(255, &qword_1EEF5EB68);
    v10 = v9;
    v11[0] = a3;
    v11[1] = a2();
    result = MEMORY[0x1B5E23E74](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1E01694()
{
  unint64_t result;

  result = qword_1EEF5EBC0;
  if (!qword_1EEF5EBC0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B227A4CC, &_s11CodeSnippetC17SerializationInfoVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EBC0);
  }
  return result;
}

uint64_t sub_1B1E016D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1B1DF09D0(a1, a2, a3, v3);
}

unint64_t sub_1B1E016E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EBC8;
  if (!qword_1EEF5EBC8)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EB10, (void (*)(uint64_t))_s19StaticSwitchSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EBD0, (uint64_t (*)(uint64_t))_s19StaticSwitchSnippetCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EBC8);
  }
  return result;
}

uint64_t sub_1B1E01770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DF0680(a1, a2, a3);
}

unint64_t sub_1B1E01788()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EBD8;
  if (!qword_1EEF5EBD8)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EAF8, (void (*)(uint64_t))_s17TypedArraySnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EBE0, (uint64_t (*)(uint64_t))_s17TypedArraySnippetCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EBD8);
  }
  return result;
}

unint64_t sub_1B1E01818()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EBE8;
  if (!qword_1EEF5EBE8)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EB50, (void (*)(uint64_t))_s24VariableReferenceSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EBF0, (uint64_t (*)(uint64_t))_s24VariableReferenceSnippetCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EBE8);
  }
  return result;
}

unint64_t sub_1B1E018A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EBF8;
  if (!qword_1EEF5EBF8)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EB38, (void (*)(uint64_t))_s15VariableSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EC00, (uint64_t (*)(uint64_t))_s15VariableSnippetCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EBF8);
  }
  return result;
}

unint64_t sub_1B1E01938()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EC08;
  if (!qword_1EEF5EC08)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EAE0, (void (*)(uint64_t))_s17CustomCodeSnippetCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EC10, (uint64_t (*)(uint64_t))_s17CustomCodeSnippetCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC08);
  }
  return result;
}

unint64_t sub_1B1E019C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EC18;
  if (!qword_1EEF5EC18)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EAB0, (void (*)(uint64_t))_s10SubContextCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EC20, (uint64_t (*)(uint64_t))_s10SubContextCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC18);
  }
  return result;
}

uint64_t sub_1B1E01A58(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_1B1DF0564(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD ***)(v3 + 24));
}

unint64_t sub_1B1E01A60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EC28;
  if (!qword_1EEF5EC28)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA98, (void (*)(uint64_t))_s12ContextEntryCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EC30, (uint64_t (*)(uint64_t))_s12ContextEntryCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC28);
  }
  return result;
}

unint64_t sub_1B1E01AF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5EC38;
  if (!qword_1EEF5EC38)
  {
    sub_1B1DFCDA0(255, &qword_1EEF5EA80, (void (*)(uint64_t))_s11ContextExitCMa);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1EEF5EC40, (uint64_t (*)(uint64_t))_s11ContextExitCMa, (uint64_t)&unk_1B22963AC);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC38);
  }
  return result;
}

uint64_t sub_1B1E01B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1DEF698(a1, a2, a3);
}

uint64_t *sub_1B1E01B88(uint64_t *a1)
{
  sub_1B1E01BD0(*a1, a1[1]);
  return a1;
}

uint64_t sub_1B1E01BD0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1E01C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_1B1DEC230(a1, a2, a3, a4, a5, a6, a7, *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD ***)(v7 + 32));
}

void sub_1B1E01C50(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1EEF5EC50, (uint64_t (*)(uint64_t))sub_1B1DCC018, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1B1E01C6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1E01CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1DEA524(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_1B1E01CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1B1DEE3F8(a1, a2, a3, a4, *(_QWORD **)(v4 + 16));
}

uint64_t sub_1B1E01CB8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1E01CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1B1DEC8E8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(unsigned __int8 *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD ***)(v4 + 56), *(uint64_t **)(v4 + 64));
}

void sub_1B1E01D20(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1B1E01D6C(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1EEF5EC58, (uint64_t (*)(uint64_t))sub_1B1E01D88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1B1E01D88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t TupleTypeMetadata;
  uint64_t v4;

  v2 = qword_1EEF5EC60;
  if (!qword_1EEF5EC60)
  {
    MEMORY[0x1E0C80A78](a1, a2);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v2 = TupleTypeMetadata;
    if (!v4)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EEF5EC60);
  }
  return v2;
}

uint64_t sub_1B1E01E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1B1DEA6BC(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD **)(v5 + 24));
}

uint64_t sub_1B1E01E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1B1DEA890(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD **)(v5 + 24));
}

uint64_t sub_1B1E01E7C()
{
  uint64_t v0;

  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1B1E01EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE90C8);
}

uint64_t sub_1B1E01EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE9244);
}

uint64_t sub_1B1E01EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE93C0);
}

uint64_t sub_1B1E01EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE953C);
}

uint64_t sub_1B1E01ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE96B8);
}

uint64_t sub_1B1E01EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE9834);
}

uint64_t sub_1B1E01EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE99B0);
}

uint64_t sub_1B1E01EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE9B2C);
}

uint64_t sub_1B1E01F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE9CA8);
}

uint64_t sub_1B1E01F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1E01F18(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1DE9E60);
}

uint64_t sub_1B1E01F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

uint64_t sub_1B1E01F48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_1B1DEA018(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_BYTE *)(v3 + 48), *(_QWORD *)(v3 + 56), *(uint64_t **)(v3 + 64));
}

uint64_t sub_1B1E01F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1B1DEA20C(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1B1E01F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1B1DEA398(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1B1E01F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1B1DE8EEC(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(uint64_t **)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48));
}

uint64_t sub_1B1E01FC0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_1B1DE8140(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t **)(v3 + 24));
}

uint64_t sub_1B1E01FC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B1E01FEC()
{
  return sub_1B1DE8104();
}

void sub_1B1E01FF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EC68)
  {
    sub_1B1E01D20(255, (unint64_t *)&qword_1EEF5C490);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EC68);
  }
}

uint64_t _s7ContextC14AssignmentInfoVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7ContextC14AssignmentInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7ContextC14AssignmentInfoVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7ContextC14AssignmentInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s7ContextC14AssignmentInfoVMa()
{
  return &_s7ContextC14AssignmentInfoVN;
}

uint64_t _s7ContextC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1B1E021E8 + 4 * byte_1B22956ED[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1B1E0221C + 4 * byte_1B22956E8[v4]))();
}

uint64_t sub_1B1E0221C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1E02224(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1E0222CLL);
  return result;
}

uint64_t sub_1B1E02238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1E02240);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1B1E02244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1E0224C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7ContextC10CodingKeysOMa()
{
  return &_s7ContextC10CodingKeysON;
}

unint64_t sub_1B1E0226C()
{
  unint64_t result;

  result = qword_1EEF5EC70;
  if (!qword_1EEF5EC70)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22959C8, &_s7ContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC70);
  }
  return result;
}

unint64_t sub_1B1E022B4()
{
  unint64_t result;

  result = qword_1EEF5EC78;
  if (!qword_1EEF5EC78)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22959F0, &_s7ContextC14AssignmentInfoVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC78);
  }
  return result;
}

unint64_t sub_1B1E022FC()
{
  unint64_t result;

  result = qword_1EEF5EC80;
  if (!qword_1EEF5EC80)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295900, &_s7ContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC80);
  }
  return result;
}

unint64_t sub_1B1E02344()
{
  unint64_t result;

  result = qword_1EEF5EC88;
  if (!qword_1EEF5EC88)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295928, &_s7ContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC88);
  }
  return result;
}

unint64_t sub_1B1E02388()
{
  unint64_t result;

  result = qword_1EEF5EC98;
  if (!qword_1EEF5EC98)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295BB0, &_s7ContextC14AssignmentInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EC98);
  }
  return result;
}

unint64_t sub_1B1E023CC()
{
  unint64_t result;

  result = qword_1EEF5ECA0;
  if (!qword_1EEF5ECA0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22AA9B0, &type metadata for GraphV1CodeGeneration.BaseObject.Type);
    atomic_store(result, (unint64_t *)&qword_1EEF5ECA0);
  }
  return result;
}

unint64_t sub_1B1E02410()
{
  unint64_t result;

  result = qword_1EEF5ECB0;
  if (!qword_1EEF5ECB0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22AA9D8, &type metadata for GraphV1CodeGeneration.BaseObject.Type);
    atomic_store(result, (unint64_t *)&qword_1EEF5ECB0);
  }
  return result;
}

uint64_t _s7ContextC14AssignmentInfoV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1E024A0 + 4 * byte_1B22956F7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1E024D4 + 4 * byte_1B22956F2[v4]))();
}

uint64_t sub_1B1E024D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1E024DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1E024E4);
  return result;
}

uint64_t sub_1B1E024F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1E024F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1E024FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1E02504(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7ContextC14AssignmentInfoV10CodingKeysOMa()
{
  return &_s7ContextC14AssignmentInfoV10CodingKeysON;
}

unint64_t sub_1B1E02524()
{
  unint64_t result;

  result = qword_1EEF5ECB8;
  if (!qword_1EEF5ECB8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295B88, &_s7ContextC14AssignmentInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5ECB8);
  }
  return result;
}

unint64_t sub_1B1E0256C()
{
  unint64_t result;

  result = qword_1EEF5ECC0;
  if (!qword_1EEF5ECC0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295AF8, &_s7ContextC14AssignmentInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5ECC0);
  }
  return result;
}

unint64_t sub_1B1E025B4()
{
  unint64_t result;

  result = qword_1EEF5ECC8;
  if (!qword_1EEF5ECC8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2295B20, &_s7ContextC14AssignmentInfoV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5ECC8);
  }
  return result;
}

BOOL sub_1B1E025FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t *i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v21;
  uint64_t v22;
  _OWORD v23[5];
  uint64_t v24;
  _QWORD v25[11];
  uint64_t v26[11];
  _OWORD v27[5];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return *(_QWORD *)(a1 + 16) == 0;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v4 = sub_1B1C01874(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain_n();
  v5 = sub_1B1DC8A90(v2);
  swift_bridgeObjectRelease();
  v26[0] = (uint64_t)v5;
  sub_1B1E03A18(v26);
  swift_bridgeObjectRelease();
  v6 = v26[0];
  v7 = *(_QWORD *)(v26[0] + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_retain();
  v8 = 0;
  v22 = -v7;
  v9 = v6 + 40;
  v10 = 1;
  do
  {
    v21 = v10;
    for (i = (uint64_t *)(v9 + 16 * v8++); ; i += 2)
    {
      v13 = *(i - 1);
      v12 = *i;
      if (*(_QWORD *)(v2 + 16))
      {
        swift_bridgeObjectRetain_n();
        v14 = sub_1B1DC3B00(v13, v12);
        if ((v15 & 1) != 0)
        {
          sub_1B19F8F0C(*(_QWORD *)(v2 + 56) + 88 * v14, (uint64_t)&v35);
        }
        else
        {
          v40 = 0;
          v38 = 0u;
          v39 = 0u;
          v36 = 0u;
          v37 = 0u;
          v35 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v3 + 16))
        {
LABEL_11:
          v34 = 0;
          v32 = 0u;
          v33 = 0u;
          v30 = 0u;
          v31 = 0u;
          v29 = 0u;
          goto LABEL_18;
        }
      }
      else
      {
        v40 = 0;
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v35 = 0u;
        swift_bridgeObjectRetain();
        if (!*(_QWORD *)(v3 + 16))
          goto LABEL_11;
      }
      swift_bridgeObjectRetain();
      v16 = sub_1B1DC3B00(v13, v12);
      if ((v17 & 1) != 0)
      {
        sub_1B19F8F0C(*(_QWORD *)(v3 + 56) + 88 * v16, (uint64_t)&v29);
      }
      else
      {
        v34 = 0;
        v32 = 0u;
        v33 = 0u;
        v30 = 0u;
        v31 = 0u;
        v29 = 0u;
      }
      swift_bridgeObjectRelease();
LABEL_18:
      sub_1B1E10010((uint64_t)&v35, (uint64_t)v26, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
      sub_1B1E10010((uint64_t)&v29, (uint64_t)v27, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
      if (v26[1])
      {
        sub_1B1E10010((uint64_t)v26, (uint64_t)v25, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
        if (*((_QWORD *)&v27[0] + 1))
        {
          v23[2] = v27[2];
          v23[3] = v27[3];
          v23[4] = v27[4];
          v24 = v28;
          v23[0] = v27[0];
          v23[1] = v27[1];
          v18 = sub_1B1E0AD6C(v25, v23);
          sub_1B1A203C4((uint64_t)v23);
          sub_1B1A203C4((uint64_t)v25);
          sub_1B1B1F3E4((uint64_t)v26, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
          goto LABEL_25;
        }
        sub_1B1A203C4((uint64_t)v25);
      }
      else if (!*((_QWORD *)&v27[0] + 1))
      {
        sub_1B1B1F3E4((uint64_t)v26, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
        v18 = 1;
        goto LABEL_25;
      }
      sub_1B1A04628((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1B1E11DEC);
      v18 = 0;
LABEL_25:
      sub_1B1B1F3E4((uint64_t)&v29, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
      sub_1B1B1F3E4((uint64_t)&v35, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
        break;
      ++v8;
      if (v22 + v8 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        return v21;
      }
    }
    v10 = 0;
    v9 = v6 + 40;
  }
  while (v22 + v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  return 0;
}

double (*sub_1B1E029E8())(_QWORD)
{
  return nullsub_16;
}

uint64_t sub_1B1E029F8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  double (*v8)(_QWORD);
  _QWORD *v9;
  _BYTE v10[32];
  _OWORD v11[5];
  uint64_t v12;

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    if (*(_QWORD *)(v3 + 16))
    {
      v5 = result;
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(v5, a2);
      v7 = v6;
      result = swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        v8 = sub_1B1E029E8();
        if (*v9)
        {
          sub_1B1B8371C(v5, a2, (uint64_t)v11);
          sub_1B1B1F3E4((uint64_t)v11, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
          return ((uint64_t (*)(_BYTE *, _QWORD))v8)(v10, 0);
        }
        else
        {
          ((void (*)(_BYTE *, _QWORD))v8)(v10, 0);
          memset(v11, 0, sizeof(v11));
          v12 = 0;
          return sub_1B1B1F3E4((uint64_t)v11, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B1E02AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  __int128 v10;
  _OWORD v11[2];
  _BYTE v12[40];
  _OWORD v13[2];
  _OWORD v14[5];
  uint64_t v15;
  _QWORD v16[5];

  v8 = *(_QWORD *)(v3 + 16);
  v7 = (_QWORD *)(v3 + 16);
  if (!v8)
  {
    *v7 = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
  }
  sub_1B1A02864(a3, (uint64_t)v13);
  memset(&v12[8], 0, 32);
  *(_QWORD *)&v10 = a1;
  *((_QWORD *)&v10 + 1) = a2;
  swift_bridgeObjectRetain_n();
  sub_1B1E0E5B0(v13, v16);
  sub_1B19FA278((uint64_t)v16, (uint64_t)v11);
  sub_1B1B1F3E4((uint64_t)&v12[8], (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
  sub_1B1A0DDAC(v13, &v12[8]);
  v14[3] = *(_OWORD *)v12;
  v14[4] = *(_OWORD *)&v12[16];
  v15 = *(_QWORD *)&v12[32];
  v14[0] = v10;
  v14[1] = v11[0];
  v14[2] = v11[1];
  return sub_1B20E0CF0((uint64_t)v14, a1, a2);
}

double sub_1B1E02C04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  char v9;
  double result;
  _BYTE v11[56];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    if (*(_QWORD *)(v5 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = sub_1B1DC3B00(a1, a2);
      if ((v9 & 1) != 0)
      {
        sub_1B19F8F0C(*(_QWORD *)(v5 + 56) + 88 * v8, (uint64_t)&v13);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v13 + 1))
        {
          sub_1B19F8F0C((uint64_t)&v13, (uint64_t)v11);
          sub_1B1B1F3E4((uint64_t)&v13, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
          swift_bridgeObjectRelease();
          sub_1B1E10010((uint64_t)&v12, (uint64_t)a3, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
          sub_1B1A203C4((uint64_t)v11);
          return result;
        }
      }
      else
      {
        v18 = 0;
        v16 = 0u;
        v17 = 0u;
        v14 = 0u;
        v15 = 0u;
        v13 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v18 = 0;
      v16 = 0u;
      v17 = 0u;
      v14 = 0u;
      v15 = 0u;
      v13 = 0u;
      swift_bridgeObjectRetain();
    }
    sub_1B1B1F3E4((uint64_t)&v13, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN);
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

double sub_1B1E02D58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  char v11;
  char v12;

  v5 = v4;
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_6;
  }
  else
  {
    *(_QWORD *)(v5 + 16) = sub_1B1B7DB30(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16))
    {
LABEL_6:
      sub_1B1E02AF4(a1, a2, a3);
      return sub_1B1E02C04(a1, a2, a4);
    }
  }
  swift_bridgeObjectRetain();
  sub_1B1DC3B00(a1, a2);
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    goto LABEL_6;
  return sub_1B1E02C04(a1, a2, a4);
}

double sub_1B1E02E1C@<D0>(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  __int128 v6;
  int v7;
  double result;
  unint64_t *v9;
  uint64_t v10;
  ValueMetadata *v11;
  ValueMetadata *v12;
  ValueMetadata *v13;
  ValueMetadata *v14;
  unint64_t *v15;
  unint64_t (*v16)();
  uint64_t v17;
  __int128 v18;
  ValueMetadata *v19;
  unint64_t *v20;
  unint64_t (*v21)();
  uint64_t v22;
  ValueMetadata *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  ValueMetadata *v25;
  uint64_t v26;
  ValueMetadata *v27;
  ValueMetadata *v28;
  uint64_t v29;
  ValueMetadata *v30;
  ValueMetadata *v31;
  _OWORD *v32;
  ValueMetadata *v33;
  _QWORD *v34;
  ValueMetadata *v35;
  uint64_t v36;
  ValueMetadata *v37;
  _OWORD *v38;
  uint64_t v39;
  ValueMetadata *v40;
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  ValueMetadata *v45;
  ValueMetadata *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  ValueMetadata *v52;
  __int128 v53;
  _OWORD v54[2];
  _BYTE v55[40];
  _OWORD v56[2];
  _BYTE v57[8];
  uint64_t v58;

  sub_1B19FA278((uint64_t)a1, (uint64_t)v57);
  switch(v58)
  {
    case 0:
      v11 = (ValueMetadata *)MEMORY[0x1E0DEAFA0];
      goto LABEL_17;
    case 1:
      v11 = (ValueMetadata *)MEMORY[0x1E0DEDE70];
      goto LABEL_17;
    case 2:
      v12 = (ValueMetadata *)MEMORY[0x1E0DEE068];
      goto LABEL_19;
    case 3:
      v13 = (ValueMetadata *)MEMORY[0x1E0DEE0F8];
      goto LABEL_27;
    case 4:
      v14 = (ValueMetadata *)MEMORY[0x1E0DEE190];
      goto LABEL_56;
    case 5:
      v11 = (ValueMetadata *)MEMORY[0x1E0DEDA70];
LABEL_17:
      v52 = v11;
      LOBYTE(v50) = 0;
      goto LABEL_70;
    case 6:
      v12 = (ValueMetadata *)MEMORY[0x1E0DEDB58];
LABEL_19:
      v52 = v12;
      LOWORD(v50) = 0;
      goto LABEL_70;
    case 7:
      v13 = (ValueMetadata *)MEMORY[0x1E0DEDBC8];
      goto LABEL_27;
    case 8:
      v14 = (ValueMetadata *)MEMORY[0x1E0DEDC60];
      goto LABEL_56;
    case 9:
      v52 = (ValueMetadata *)MEMORY[0x1E0DEB418];
      *(_QWORD *)&v50 = 1;
      goto LABEL_70;
    case 10:
      v15 = &qword_1ED4BB090;
      v16 = sub_1B1AF0D08;
      v17 = MEMORY[0x1E0DEE0F8];
      goto LABEL_29;
    case 11:
      sub_1B1BF3ED8(0, 0, 0);
      v49 = v18;
      sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
      v52 = v19;
      *(_QWORD *)&v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v49;
      goto LABEL_70;
    case 12:
      v20 = &qword_1ED4BB0F8;
      v21 = sub_1B1AF0D08;
      v22 = MEMORY[0x1E0DEE0F8];
      goto LABEL_33;
    case 13:
      v13 = (ValueMetadata *)MEMORY[0x1E0DEB188];
LABEL_27:
      v52 = v13;
      goto LABEL_30;
    case 14:
      v15 = &qword_1ED4BB080;
      v16 = sub_1B19F8DCC;
      v17 = MEMORY[0x1E0DEB188];
LABEL_29:
      sub_1B19F8E54(0, v15, (uint64_t (*)(void))v16, v17, MEMORY[0x1E0DEDD20]);
      v52 = v23;
      DWORD1(v50) = 0;
LABEL_30:
      LODWORD(v50) = 0;
      goto LABEL_70;
    case 15:
      v20 = (unint64_t *)&qword_1ED4BB0A0;
      v21 = sub_1B19F8DCC;
      v22 = MEMORY[0x1E0DEB188];
      v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50];
      goto LABEL_34;
    case 16:
      v20 = (unint64_t *)&qword_1ED4BB0E0;
      v21 = sub_1B19F8DCC;
      v22 = MEMORY[0x1E0DEB188];
LABEL_33:
      v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8];
LABEL_34:
      sub_1B19F8E54(0, v20, (uint64_t (*)(void))v21, v22, v24);
      v52 = v25;
      v26 = swift_allocObject();
      *(_QWORD *)&v50 = v26;
      *(_QWORD *)(v26 + 16) = 0;
      *(_QWORD *)(v26 + 24) = 0;
      goto LABEL_70;
    case 17:
      type metadata accessor for simd_float2x2(0);
      v52 = v27;
      goto LABEL_40;
    case 18:
      type metadata accessor for simd_float2x3(0);
      goto LABEL_38;
    case 19:
      type metadata accessor for simd_float2x4(0);
LABEL_38:
      v52 = v28;
      v29 = swift_allocObject();
      *(_QWORD *)&v50 = v29;
      *(_OWORD *)(v29 + 16) = xmmword_1B2244DB0;
      *(_OWORD *)(v29 + 32) = xmmword_1B2244DD0;
      goto LABEL_70;
    case 20:
      type metadata accessor for simd_float3x2(0);
      v51 = 0;
      v52 = v30;
LABEL_40:
      *(_QWORD *)&v50 = 1065353216;
      *((_QWORD *)&v50 + 1) = 0x3F80000000000000;
      goto LABEL_70;
    case 21:
      type metadata accessor for simd_float3x3(0);
      goto LABEL_43;
    case 22:
      type metadata accessor for simd_float3x4(0);
LABEL_43:
      v52 = v31;
      v32 = (_OWORD *)swift_allocObject();
      *(_QWORD *)&v50 = v32;
      v32[1] = xmmword_1B2244DB0;
      v32[2] = xmmword_1B2244DD0;
      v32[3] = xmmword_1B2244D90;
      goto LABEL_70;
    case 23:
      type metadata accessor for simd_float4x2(0);
      v52 = v33;
      v34 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v50 = v34;
      v34[2] = 1065353216;
      v34[3] = 0x3F80000000000000;
      v34[4] = 0;
      v34[5] = 0;
      goto LABEL_70;
    case 24:
      type metadata accessor for simd_float4x3(0);
      v52 = v35;
      v36 = swift_allocObject();
      *(_QWORD *)&v50 = v36;
      *(_OWORD *)(v36 + 16) = xmmword_1B2244DB0;
      *(_OWORD *)(v36 + 32) = xmmword_1B2244DD0;
      *(_OWORD *)(v36 + 48) = xmmword_1B2244D90;
      *(_QWORD *)(v36 + 64) = 0;
      *(_QWORD *)(v36 + 72) = 0;
      goto LABEL_70;
    case 25:
      type metadata accessor for simd_float4x4(0);
      v52 = v37;
      v38 = (_OWORD *)swift_allocObject();
      *(_QWORD *)&v50 = v38;
      v38[1] = xmmword_1B2244DB0;
      v38[2] = xmmword_1B2244DD0;
      v38[3] = xmmword_1B2244D90;
      v38[4] = xmmword_1B2244E20;
      goto LABEL_70;
    case 26:
      v14 = (ValueMetadata *)MEMORY[0x1E0DEB070];
      goto LABEL_56;
    case 27:
    case 42:
      if ((a2 & 1) != 0)
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        *(_QWORD *)&v53 = 0;
        *((_QWORD *)&v53 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        v56[0] = v53;
        sub_1B2228890();
        sub_1B19FA278((uint64_t)a1, (uint64_t)&v53);
        sub_1B22295EC();
        v6 = v56[0];
        v7 = sub_1B2228E9C();
        if (qword_1ED4BF658 != -1)
          swift_once();
        *(_QWORD *)&v53 = 0;
        swift_retain();
        sub_1B1F1AD70(v7, (uint64_t *)&v53, v6, *((uint64_t *)&v6 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      *(_QWORD *)(a3 + 80) = 0;
      result = 0.0;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)(a3 + 64) = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)a3 = 0u;
      return result;
    case 28:
      v52 = &type metadata for ColorRamp;
      *(_QWORD *)&v50 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)&v50 + 1) = MEMORY[0x1E0DEE9D8];
      LOBYTE(v51) = 1;
      goto LABEL_70;
    case 30:
      v52 = &_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVN;
      v39 = swift_allocObject();
      *(_QWORD *)&v50 = v39;
      *(_OWORD *)(v39 + 16) = xmmword_1B2295C00;
      *(_OWORD *)(v39 + 32) = xmmword_1B2295C10;
      *(_QWORD *)(v39 + 48) = 0;
      goto LABEL_70;
    case 34:
    case 35:
      v52 = (ValueMetadata *)MEMORY[0x1E0DEA968];
      *(_QWORD *)&v50 = 0;
      *((_QWORD *)&v50 + 1) = 0xE000000000000000;
      goto LABEL_70;
    case 36:
      type metadata accessor for simd_quatf(0);
      v52 = v40;
      *(_QWORD *)&v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1B2244E20;
      goto LABEL_70;
    case 37:
      sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
      v52 = v41;
      v42 = swift_allocObject();
      *(_QWORD *)&v50 = v42;
      v43 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v42 + 16) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v42 + 24) = v43;
      *(_QWORD *)(v42 + 32) = 0;
      *(_BYTE *)(v42 + 40) = 1;
      goto LABEL_70;
    case 39:
      sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
      v52 = v44;
      v50 = xmmword_1B2244C80;
      goto LABEL_70;
    case 40:
      sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
      v52 = v45;
      *(_QWORD *)&v50 = 0x3F80000000000000;
      goto LABEL_70;
    case 41:
      v14 = (ValueMetadata *)MEMORY[0x1E0DEB418];
LABEL_56:
      v52 = v14;
      *(_QWORD *)&v50 = 0;
      goto LABEL_70;
    case 43:
      v9 = &qword_1EEF5CA48;
      v10 = MEMORY[0x1E0DEAFA0];
      goto LABEL_68;
    case 44:
      v9 = &qword_1ED4BA510;
      v10 = MEMORY[0x1E0DEDE70];
      goto LABEL_68;
    case 45:
      v9 = &qword_1ED4BA528;
      v10 = MEMORY[0x1E0DEE068];
      goto LABEL_68;
    case 46:
      v9 = &qword_1EEF5CA40;
      v10 = MEMORY[0x1E0DEE0F8];
      goto LABEL_68;
    case 47:
      v9 = &qword_1EEF5CA38;
      v10 = MEMORY[0x1E0DEE190];
      goto LABEL_68;
    case 48:
      v9 = &qword_1EEF5CA30;
      v10 = MEMORY[0x1E0DEDA70];
      goto LABEL_68;
    case 49:
      v9 = &qword_1EEF5CA28;
      v10 = MEMORY[0x1E0DEDB58];
      goto LABEL_68;
    case 50:
      v9 = &qword_1EEF5CA20;
      v10 = MEMORY[0x1E0DEDBC8];
      goto LABEL_68;
    case 51:
      v9 = &qword_1EEF5CA18;
      v10 = MEMORY[0x1E0DEDC60];
      goto LABEL_68;
    case 52:
      v9 = &qword_1ED4BA4D0;
      v10 = MEMORY[0x1E0DEB418];
      goto LABEL_68;
    case 53:
      v9 = (unint64_t *)&qword_1ED4BA4C0;
      v10 = MEMORY[0x1E0DEB188];
      goto LABEL_68;
    case 54:
      sub_1B1E0F368();
      goto LABEL_69;
    case 55:
      sub_1B1E0F3DC();
      goto LABEL_69;
    case 56:
      sub_1B1E0F450();
      goto LABEL_69;
    case 57:
    case 58:
      v9 = (unint64_t *)&qword_1ED4BA490;
      v10 = MEMORY[0x1E0DEA968];
LABEL_68:
      sub_1B1A02758(0, v9, v10, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
LABEL_69:
      v52 = v46;
      *(_QWORD *)&v50 = MEMORY[0x1E0DEE9D8];
LABEL_70:
      memset(&v55[8], 0, 32);
      strcpy((char *)&v53, "defaultValue");
      BYTE13(v53) = 0;
      HIWORD(v53) = -5120;
      sub_1B1E0E5B0(&v50, v56);
      sub_1B19FA278((uint64_t)v56, (uint64_t)v54);
      sub_1B1B1F3E4((uint64_t)&v55[8], (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v50, &v55[8]);
      break;
    default:
      memset(v56, 0, sizeof(v56));
      memset(&v55[8], 0, 32);
      strcpy((char *)&v53, "defaultValue");
      BYTE13(v53) = 0;
      HIWORD(v53) = -5120;
      sub_1B19FA278((uint64_t)a1, (uint64_t)v54);
      sub_1B19F8C58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
      sub_1B1C4BD9C((uint64_t)v56, (uint64_t)&v55[8]);
      break;
  }
  v47 = *(_OWORD *)v55;
  *(_OWORD *)(a3 + 32) = v54[1];
  *(_OWORD *)(a3 + 48) = v47;
  *(_OWORD *)(a3 + 64) = *(_OWORD *)&v55[16];
  *(_QWORD *)(a3 + 80) = *(_QWORD *)&v55[32];
  result = *(double *)&v53;
  v48 = v54[0];
  *(_OWORD *)a3 = v53;
  *(_OWORD *)(a3 + 16) = v48;
  return result;
}

uint64_t sub_1B1E03728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _QWORD v22[5];
  _QWORD v23[5];

  if (qword_1ED4BB388 != -1)
    swift_once();
  v0 = qword_1ED4D0F28;
  v1 = *(_QWORD *)(qword_1ED4D0F28 + 16);
  if (!v1)
    return 0;
  sub_1B19FA278(qword_1ED4D0F28 + 32, (uint64_t)v23);
  swift_bridgeObjectRetain();
  sub_1B19F8C58(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  v2 = sub_1B1E03DBC();
  v4 = v3;
  if (v2 != sub_1B1E03DBC() || v4 != v5)
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B19F8C58(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    if ((v6 & 1) != 0)
      goto LABEL_8;
    if (v1 == 1)
      goto LABEL_10;
    sub_1B19FA278(v0 + 72, (uint64_t)v22);
    sub_1B19F8C58(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
    v9 = sub_1B1E03DBC();
    v11 = v10;
    if (v9 == sub_1B1E03DBC() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
      sub_1B19F8C58(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
    }
    else
    {
      v13 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B19F8C58(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      if ((v13 & 1) == 0)
      {
        v14 = v0 + 112;
        v15 = 2;
        while (v1 != v15)
        {
          v7 = v15;
          sub_1B19FA278(v14, (uint64_t)v21);
          sub_1B19F8C58(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
          v17 = sub_1B1E03DBC();
          v19 = v18;
          if (v17 == sub_1B1E03DBC() && v19 == v20)
          {
            swift_bridgeObjectRelease_n();
            sub_1B19F8C58(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
LABEL_24:
            swift_bridgeObjectRelease();
            return v7;
          }
          v16 = sub_1B2229D24();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B19F8C58(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
          v15 = v7 + 1;
          v14 += 40;
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
LABEL_10:
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRelease_n();
  sub_1B19F8C58(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
LABEL_8:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B1E03A18(uint64_t *a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  uint64_t *v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1B216D588(v2);
  v3 = *(uint64_t **)(v2 + 16);
  v5[0] = (uint64_t *)(v2 + 32);
  v5[1] = v3;
  result = sub_1B1DF1F90(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B1E03A80@<X0>(uint64_t *a1@<X8>)
{
  char v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[5];
  char v22[8];
  uint64_t v23;
  char v24[40];

  sub_1B1E03DBC();
  v2 = sub_1B2228920();
  result = swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    goto LABEL_5;
  v4 = sub_1B1E03DBC();
  v6 = v5;
  if ((sub_1B2228920() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1B2228830();
    v7 = sub_1B1D3A13C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1B5E20388](v7, v9, v11, v13);
    v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v15;
  }
  sub_1B1E0E85C(v4, v6, v21);
  v16 = v21[0];
  v17 = v21[1];
  v18 = v21[2];
  v19 = v21[3];
  v20 = v21[4];
  result = sub_1B1A18378((uint64_t)v21, (uint64_t)v22, &qword_1EEF58BF0, (uint64_t)&_s12MetadataTypeON);
  if (v23 != 59)
  {
    result = sub_1B19FA278((uint64_t)v22, (uint64_t)v24);
  }
  else
  {
LABEL_5:
    v16 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v17 = 42;
  }
  *a1 = v16;
  a1[1] = v17;
  a1[2] = v18;
  a1[3] = v19;
  a1[4] = v20;
  return result;
}

uint64_t sub_1B1E03BF8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  _BYTE v11[8];
  unint64_t v12;

  sub_1B19FA278(v0, (uint64_t)v11);
  v1 = v12;
  if (sub_1B1E03DBC() == 1819242306 && v2 == 0xE400000000000000)
    goto LABEL_3;
  v3 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
    return 1;
  if (sub_1B1E03DBC() == 0x676E69727453 && v5 == 0xE600000000000000)
    goto LABEL_3;
  v6 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return 1;
  if (sub_1B1E03DBC() == 5001813 && v7 == 0xE300000000000000)
    goto LABEL_3;
  v8 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return 1;
  if (sub_1B1E03DBC() == 0x74616F6C46 && v9 == 0xE500000000000000)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 1;
  }
  v10 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    return 1;
  if (v1 > 0x10)
    return 0;
  else
    return (0x1C3FEu >> v1) & 1;
}

uint64_t sub_1B1E03DBC()
{
  uint64_t v0;
  uint64_t result;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE v7[8];
  uint64_t v8;

  sub_1B19FA278(v0, (uint64_t)v7);
  result = 1819242306;
  switch(v8)
  {
    case 0:
      return result;
    case 1:
      return 0x38746E4955;
    case 2:
      return 0x3631746E4955;
    case 3:
      return 0x3233746E4955;
    case 4:
      return 0x3436746E4955;
    case 5:
      return 947154505;
    case 6:
      return 0x3631746E49;
    case 7:
      return 0x3233746E49;
    case 8:
      return 0x3436746E49;
    case 9:
      return 7630409;
    case 10:
      return 0x32783233746E4955;
    case 11:
      return 0x33783233746E4955;
    case 12:
      return 0x34783233746E4955;
    case 13:
      return 0x74616F6C46;
    case 14:
      return 0x3274616F6C46;
    case 15:
      return 0x3374616F6C46;
    case 16:
      return 0x3474616F6C46;
    case 17:
      return 0x32783274616F6C46;
    case 18:
      return 0x33783274616F6C46;
    case 19:
      return 0x34783274616F6C46;
    case 20:
      return 0x32783374616F6C46;
    case 21:
      return 0x33783374616F6C46;
    case 22:
      return 0x34783374616F6C46;
    case 23:
      return 0x32783474616F6C46;
    case 24:
      return 0x33783474616F6C46;
    case 25:
      return 0x34783474616F6C46;
    case 26:
      return 0x656C62756F44;
    case 27:
      return 0x3855726F6C6F43;
    case 28:
      return 0x6D6152726F6C6F43;
    case 29:
    case 31:
    case 32:
    case 33:
      return 0xD000000000000010;
    case 30:
      return 0xD000000000000015;
    case 34:
      return 0x676E69727453;
    case 35:
      return 5001813;
    case 36:
      return 0x696E726574617551;
    case 37:
      return 0x466576727543;
    case 38:
      return 0x7865546576727543;
    case 39:
      return 0x65676E6152746E49;
    case 40:
      return 0x6E615274616F6C46;
    case 41:
      return 0x6156686374697753;
    case 42:
      return 0x6E776F6E6B6E55;
    case 43:
      v2 = 1819242306;
      return v2 | 0x6172724100000000;
    case 44:
      v3 = 0x4138746E4955;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7272000000000000;
    case 45:
      v4 = 0x3631746E4955;
      goto LABEL_59;
    case 46:
      v4 = 0x3233746E4955;
      goto LABEL_59;
    case 47:
      v4 = 0x3436746E4955;
      goto LABEL_59;
    case 48:
      v2 = 947154505;
      return v2 | 0x6172724100000000;
    case 49:
      v3 = 0x413631746E49;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7272000000000000;
    case 50:
      v3 = 0x413233746E49;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7272000000000000;
    case 51:
      v3 = 0x413436746E49;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7272000000000000;
    case 52:
      v5 = 1098149449;
      goto LABEL_61;
    case 53:
      v3 = 0x4174616F6C46;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7272000000000000;
    case 54:
      v4 = 0x3274616F6C46;
      goto LABEL_59;
    case 55:
      v4 = 0x3374616F6C46;
      goto LABEL_59;
    case 56:
      v4 = 0x3474616F6C46;
      goto LABEL_59;
    case 57:
      v4 = 0x676E69727453;
LABEL_59:
      result = v4 & 0xFFFFFFFFFFFFLL | 0x7241000000000000;
      break;
    case 58:
      v5 = 1095520853;
LABEL_61:
      result = v5 | 0x7961727200000000;
      break;
    default:
      v6 = *(_QWORD *)aCustomtype;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      result = v6;
      break;
  }
  return result;
}

uint64_t sub_1B1E04334(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v6[24];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v3 = v1;
  sub_1B19FA278(v3, (uint64_t)v8);
  if (*((_QWORD *)&v8[0] + 1) >= 0x3BuLL)
  {
    v10 = v8[0];
    v11 = v8[1];
    v12 = v9;
    sub_1B19FA070(a1, a1[3]);
    sub_1B222A15C();
    sub_1B1E03DBC();
    sub_1B19FC264((uint64_t)v6, v7);
    sub_1B2229B68();
    if (!v2)
    {
      swift_bridgeObjectRelease();
      sub_1B19FC264((uint64_t)v6, v7);
      sub_1B1E11C5C();
      sub_1B2229BA4();
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    }
  }
  else
  {
    sub_1B19FA070(a1, a1[3]);
    sub_1B222A168();
    sub_1B1E03DBC();
    sub_1B19FC264((uint64_t)v6, v7);
    sub_1B2229DB4();
  }
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
}

uint64_t sub_1B1E044E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5EF70, (uint64_t (*)(void))sub_1B1E11B04, (uint64_t)&_s12MetadataTypeO6CustomV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E11B04();
  sub_1B222A180();
  v15 = 0;
  sub_1B2229910();
  if (!v2)
  {
    v14 = 1;
    sub_1B2229910();
    v12[1] = *(_QWORD *)(v3 + 32);
    v13 = 2;
    sub_1B1E11B48();
    sub_1B1E11BA8(&qword_1EEF5EF78, (uint64_t (*)(void))sub_1B1C23584, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1B2229958();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B1E0467C(char *a1, char *a2)
{
  return sub_1B1F95AC4(*a1, *a2);
}

uint64_t sub_1B1E04688()
{
  char *v0;

  return *(_QWORD *)&aType_30[8 * *v0];
}

uint64_t sub_1B1E046A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1E0F530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1E046C4()
{
  sub_1B1E11B04();
  return sub_1B222A1D4();
}

uint64_t sub_1B1E046EC()
{
  sub_1B1E11B04();
  return sub_1B222A1E0();
}

double sub_1B1E04714@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1B1E11874(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B1E04758(_QWORD *a1)
{
  return sub_1B1E044E0(a1);
}

uint64_t sub_1B1E0476C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (qword_1ED4BB388 != -1)
    swift_once();
  v0 = qword_1ED4D0F28;
  if (*(_QWORD *)(qword_1ED4D0F28 + 16))
  {
    sub_1B1C1F5A0(0, (unint64_t *)&unk_1ED4BB480, (uint64_t)&_s12MetadataTypeON, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
    v1 = sub_1B22296DC();
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9E0];
  }
  v3 = v1;
  swift_bridgeObjectRetain_n();
  sub_1B1E0A9F4(v0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B1E04870, 0, 1, &v3);
  result = swift_bridgeObjectRelease();
  qword_1ED4D0F20 = v3;
  return result;
}

_QWORD *sub_1B1E04870@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _QWORD v5[5];

  sub_1B19FA278(a1, (uint64_t)v5);
  *a2 = sub_1B1E03DBC();
  a2[1] = v3;
  sub_1B19FA278((uint64_t)v5, (uint64_t)(a2 + 2));
  return sub_1B19F8C58(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
}

void sub_1B1E048D0()
{
  qword_1ED4D0F28 = (uint64_t)&unk_1E63A1690;
}

uint64_t sub_1B1E048E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t *v5;

  a3[3] = a2;
  v5 = sub_1B1A137F4(a3);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v5, a1, a2);
}

uint64_t sub_1B1E04920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1B22286F8();
  MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA5D8], v2);
  v3 = sub_1B2228B9C();
  result = sub_1B2228B6C();
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1B1E049B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  _BYTE v10[40];

  sub_1B19FA278(a1, (uint64_t)v10);
  sub_1B19FA278(a2, (uint64_t)&v9);
  v3 = sub_1B1E03DBC();
  v5 = v4;
  if (v3 == sub_1B1E03DBC() && v5 == v6)
    v7 = 1;
  else
    v7 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B1E04A58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5[5];

  result = sub_1B1E11610(a1, v5);
  if (!v2)
    return sub_1B19FA278((uint64_t)v5, a2);
  return result;
}

uint64_t sub_1B1E04A9C(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v4[40];

  sub_1B19FA278(v1, (uint64_t)v4);
  return sub_1B1E04334(a1);
}

uint64_t sub_1B1E04AE8()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1B19FA278(v0, (uint64_t)v2);
  sub_1B222A06C();
  sub_1B1E03DBC();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1E04B50()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1B19FA278(v0, (uint64_t)v2);
  sub_1B1E03DBC();
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1E04BA8()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_1B19FA278(v0, (uint64_t)v2);
  sub_1B222A06C();
  sub_1B1E03DBC();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1E04C14()
{
  return sub_1B1BB8F94();
}

uint64_t sub_1B1E04C24()
{
  return sub_1B2228824();
}

uint64_t sub_1B1E04C34()
{
  return sub_1B1BB8FE0();
}

uint64_t sub_1B1E04C44@<X0>(BOOL *a1@<X8>)
{
  return sub_1B1BB9034(a1);
}

void sub_1B1E04C50(_QWORD *a1@<X8>)
{
  *a1 = 1684366707;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1B1E04C64()
{
  return 1684366707;
}

uint64_t sub_1B1E04C74@<X0>(BOOL *a1@<X8>)
{
  return sub_1B1BB908C(a1);
}

uint64_t sub_1B1E04C80()
{
  sub_1B1E12300();
  return sub_1B222A1D4();
}

uint64_t sub_1B1E04CA8()
{
  sub_1B1E12300();
  return sub_1B222A1E0();
}

double sub_1B1E04CD0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1B1E12168(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B1E04D14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1B19F8E54(0, &qword_1EEF5EFE0, (uint64_t (*)(void))sub_1B1E12300, (uint64_t)&_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v5);
  v7 = (char *)&v9 - v6;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E12300();
  sub_1B222A180();
  sub_1B22299B8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B1E04E14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  __int128 v64;
  __int128 v65;
  __int128 *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)();
  uint64_t v90;
  unint64_t *v91;
  unint64_t (*v92)();
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  __int128 v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  _QWORD v116[2];
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  _BYTE v120[40];
  _QWORD *v121;

  v106 = a2;
  sub_1B19F8E54(0, &qword_1ED4BAB20, (uint64_t (*)(void))sub_1B1C78FEC, (uint64_t)&type metadata for StringCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v99 - v8;
  v10 = v120;
  memset(v120, 0, 32);
  v11 = a1[3];
  v121 = a1;
  sub_1B19FA070(a1, v11);
  sub_1B1C78FEC();
  sub_1B222A150();
  if (v2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v121);
  }
  else
  {
    v105 = v6;
    v104 = v120;
    *(_QWORD *)&v110 = 0;
    BYTE8(v110) = 1;
    *(_QWORD *)&v111 = 0x656D614E79656BLL;
    *((_QWORD *)&v111 + 1) = 0xE700000000000000;
    v13 = sub_1B22297CC();
    v15 = v14;
    v116[0] = v13;
    v116[1] = v14;
    *(_QWORD *)&v114 = 0;
    BYTE8(v114) = 1;
    *(_QWORD *)&v115 = 0x70795465756C6176;
    *((_QWORD *)&v115 + 1) = 0xE900000000000065;
    sub_1B19FA154();
    sub_1B2229814();
    *(_QWORD *)&v103 = 0;
    v102 = v5;
    v16 = v110;
    v17 = v111;
    v18 = v112;
    v117 = v110;
    v118 = v111;
    v119 = v112;
    switch(*((_QWORD *)&v110 + 1))
    {
      case 0:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v24 = sub_1B22297D8();
        *((_QWORD *)&v111 + 1) = MEMORY[0x1E0DEAFA0];
        LOBYTE(v110) = v24 & 1;
        goto LABEL_89;
      case 1:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v25 = sub_1B2229850();
        v26 = MEMORY[0x1E0DEDE70];
        goto LABEL_13;
      case 2:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v27 = sub_1B222985C();
        v28 = MEMORY[0x1E0DEE068];
        goto LABEL_15;
      case 3:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v29 = sub_1B2229868();
        v30 = MEMORY[0x1E0DEE0F8];
        goto LABEL_17;
      case 4:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v31 = sub_1B2229874();
        v32 = MEMORY[0x1E0DEE190];
        goto LABEL_20;
      case 5:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v25 = sub_1B2229820();
        v26 = MEMORY[0x1E0DEDA70];
LABEL_13:
        *((_QWORD *)&v111 + 1) = v26;
        LOBYTE(v110) = v25;
        goto LABEL_89;
      case 6:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v27 = sub_1B222982C();
        v28 = MEMORY[0x1E0DEDB58];
LABEL_15:
        *((_QWORD *)&v111 + 1) = v28;
        LOWORD(v110) = v27;
        goto LABEL_89;
      case 7:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v29 = sub_1B2229838();
        v30 = MEMORY[0x1E0DEDBC8];
LABEL_17:
        *((_QWORD *)&v111 + 1) = v30;
        LODWORD(v110) = v29;
        goto LABEL_89;
      case 8:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v31 = sub_1B2229844();
        v32 = MEMORY[0x1E0DEDC60];
        goto LABEL_20;
      case 9:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v31 = sub_1B22297FC();
        v32 = MEMORY[0x1E0DEB418];
LABEL_20:
        *((_QWORD *)&v111 + 1) = v32;
        *(_QWORD *)&v110 = v31;
        goto LABEL_89;
      case 0xALL:
        sub_1B19F8E54(0, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEDD20]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v33;
        sub_1B1E0FFA8();
        goto LABEL_74;
      case 0xBLL:
        sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v34;
        *(_QWORD *)&v110 = swift_allocObject();
        sub_1B1E0FF40();
        goto LABEL_74;
      case 0xCLL:
        sub_1B19F8E54(0, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v35;
        *(_QWORD *)&v110 = swift_allocObject();
        sub_1B1E0FED8();
        goto LABEL_74;
      case 0xDLL:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        sub_1B22297F0();
        *((_QWORD *)&v111 + 1) = MEMORY[0x1E0DEB188];
        LODWORD(v110) = v36;
        goto LABEL_89;
      case 0xELL:
        sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v37;
        sub_1B1C38A10();
        goto LABEL_74;
      case 0xFLL:
        sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v38;
        *(_QWORD *)&v110 = swift_allocObject();
        sub_1B1E0F6E8();
        goto LABEL_74;
      case 0x10:
        sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v39;
        *(_QWORD *)&v110 = swift_allocObject();
        sub_1B1E0F750();
        goto LABEL_74;
      case 0x11:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        sub_1B1B2BE68();
        v23 = v102;
        v22 = v103;
        v40 = v103;
        sub_1B2229814();
        if (v40)
          goto LABEL_58;
        v41 = v107;
        type metadata accessor for simd_float2x2(0);
        *((_QWORD *)&v111 + 1) = v42;
        v110 = v41;
        goto LABEL_89;
      case 0x12:
        *(_QWORD *)&v107 = 0;
        BYTE8(v107) = 1;
        v108 = v13;
        v109 = v15;
        sub_1B1B2BE24();
        v23 = v102;
        v22 = v103;
        v43 = v103;
        sub_1B2229814();
        if (v43)
          goto LABEL_58;
        v103 = v114;
        v101 = v115;
        type metadata accessor for simd_float2x3(0);
        goto LABEL_34;
      case 0x13:
        *(_QWORD *)&v107 = 0;
        BYTE8(v107) = 1;
        v108 = v13;
        v109 = v15;
        sub_1B1B2BDE0();
        v23 = v102;
        v22 = v103;
        v45 = v103;
        sub_1B2229814();
        if (v45)
          goto LABEL_58;
        v103 = v114;
        v101 = v115;
        type metadata accessor for simd_float2x4(0);
LABEL_34:
        *((_QWORD *)&v111 + 1) = v44;
        v46 = swift_allocObject();
        *(_QWORD *)&v110 = v46;
        v47 = v101;
        *(_OWORD *)(v46 + 16) = v103;
        *(_OWORD *)(v46 + 32) = v47;
        goto LABEL_89;
      case 0x14:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        sub_1B1B2BD9C();
        v23 = v102;
        v22 = v103;
        v48 = v103;
        sub_1B2229814();
        if (v48)
          goto LABEL_58;
        v103 = v107;
        v49 = v108;
        type metadata accessor for simd_float3x2(0);
        *((_QWORD *)&v111 + 1) = v50;
        v110 = v103;
        *(_QWORD *)&v111 = v49;
        goto LABEL_89;
      case 0x15:
        *(_QWORD *)&v107 = 0;
        BYTE8(v107) = 1;
        v108 = v13;
        v109 = v15;
        sub_1B1B2BD58();
        v23 = v102;
        v22 = v103;
        v51 = v103;
        sub_1B2229814();
        if (v51)
          goto LABEL_58;
        v103 = v110;
        v101 = v111;
        v100 = v112;
        type metadata accessor for simd_float3x3(0);
        goto LABEL_41;
      case 0x16:
        *(_QWORD *)&v107 = 0;
        BYTE8(v107) = 1;
        v108 = v13;
        v109 = v15;
        sub_1B1B2BD14();
        v23 = v102;
        v22 = v103;
        v53 = v103;
        sub_1B2229814();
        if (v53)
          goto LABEL_58;
        v103 = v110;
        v101 = v111;
        v100 = v112;
        type metadata accessor for simd_float3x4(0);
LABEL_41:
        *((_QWORD *)&v115 + 1) = v52;
        v54 = (_OWORD *)swift_allocObject();
        *(_QWORD *)&v114 = v54;
        v55 = v101;
        v54[1] = v103;
        v54[2] = v55;
        v54[3] = v100;
        goto LABEL_49;
      case 0x17:
        *(_QWORD *)&v107 = 0;
        BYTE8(v107) = 1;
        v108 = v13;
        v109 = v15;
        sub_1B1B2BCD0();
        v23 = v102;
        v22 = v103;
        v56 = v103;
        sub_1B2229814();
        if (v56)
          goto LABEL_58;
        v103 = v114;
        v57 = v115;
        type metadata accessor for simd_float4x2(0);
        *((_QWORD *)&v111 + 1) = v58;
        v59 = swift_allocObject();
        *(_QWORD *)&v110 = v59;
        *(_OWORD *)(v59 + 16) = v103;
        *(_OWORD *)(v59 + 32) = v57;
        goto LABEL_89;
      case 0x18:
        *(_QWORD *)&v107 = 0;
        BYTE8(v107) = 1;
        v108 = v13;
        v109 = v15;
        sub_1B1B2BC8C();
        v23 = v102;
        v22 = v103;
        v60 = v103;
        sub_1B2229814();
        if (v60)
          goto LABEL_58;
        v103 = v110;
        v101 = v111;
        v100 = v112;
        v99 = v113;
        type metadata accessor for simd_float4x3(0);
        goto LABEL_48;
      case 0x19:
        *(_QWORD *)&v107 = 0;
        BYTE8(v107) = 1;
        v108 = v13;
        v109 = v15;
        sub_1B1B2BC48();
        v23 = v102;
        v22 = v103;
        v62 = v103;
        sub_1B2229814();
        if (v62)
          goto LABEL_58;
        v103 = v110;
        v101 = v111;
        v100 = v112;
        v99 = v113;
        type metadata accessor for simd_float4x4(0);
LABEL_48:
        *((_QWORD *)&v115 + 1) = v61;
        v63 = (_OWORD *)swift_allocObject();
        *(_QWORD *)&v114 = v63;
        v64 = v101;
        v63[1] = v103;
        v63[2] = v64;
        v65 = v99;
        v63[3] = v100;
        v63[4] = v65;
LABEL_49:
        (*(void (**)(char *, uint64_t))(v105 + 8))(v9, v23);
        v66 = &v114;
        goto LABEL_90;
      case 0x1ALL:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        sub_1B22297E4();
        *((_QWORD *)&v111 + 1) = MEMORY[0x1E0DEB070];
        *(_QWORD *)&v110 = v67;
        goto LABEL_89;
      case 0x1BLL:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = &type metadata for ColorU8;
        sub_1B1E0F7B8();
        goto LABEL_74;
      case 0x1CLL:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = &type metadata for ColorRamp;
        sub_1B1D3DB38();
        goto LABEL_74;
      case 0x1ELL:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = &_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVN;
        *(_QWORD *)&v110 = swift_allocObject();
        sub_1B1E0F864();
        goto LABEL_85;
      case 0x22:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        v23 = v102;
        v70 = sub_1B22297CC();
        *((_QWORD *)&v111 + 1) = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v110 = v70;
        *((_QWORD *)&v110 + 1) = v71;
        goto LABEL_89;
      case 0x23:
        v72 = sub_1B2228110();
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v72;
        sub_1B1A137F4((uint64_t *)&v110);
        sub_1B1E0F8DC((unint64_t *)&qword_1ED4B7B20, MEMORY[0x1E0CB0038]);
        goto LABEL_74;
      case 0x24:
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        sub_1B1B4E740();
        v23 = v102;
        v22 = v103;
        v73 = v103;
        sub_1B2229814();
        if (!v73)
        {
          v103 = v107;
          type metadata accessor for simd_quatf(0);
          *((_QWORD *)&v111 + 1) = v98;
          *(_QWORD *)&v110 = swift_allocObject();
          *(_OWORD *)(v110 + 16) = v103;
LABEL_89:
          (*(void (**)(char *, uint64_t))(v105 + 8))(v9, v23);
          v66 = &v110;
LABEL_90:
          sub_1B1C4BD9C((uint64_t)v66, (uint64_t)v104);
          v68 = v106;
          v69 = (uint64_t)v121;
LABEL_91:
          sub_1B19F8F0C((uint64_t)v116, v68);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v69);
          return sub_1B1A203C4((uint64_t)v116);
        }
LABEL_58:
        (*(void (**)(char *, uint64_t))(v105 + 8))(v9, v23);
LABEL_76:
        v10 = v104;
        v21 = (uint64_t)v121;
LABEL_77:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v21);
        swift_bridgeObjectRelease();
        if (!v22)
LABEL_87:
          sub_1B19F9FEC(v117, *((unint64_t *)&v117 + 1));
        break;
      case 0x25:
        sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v74;
        *(_QWORD *)&v110 = swift_allocObject();
        sub_1B1E0F7FC();
        goto LABEL_74;
      case 0x27:
        sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v75;
        sub_1B1E0FE5C(&qword_1ED4BA5C0, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEB8B0]);
        goto LABEL_74;
      case 0x28:
        sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v76;
        sub_1B1E10800((unint64_t *)&qword_1ED4BA5B0, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEB8B0]);
        goto LABEL_74;
      case 0x29:
      case 0x2ALL:
        *(_QWORD *)&v110 = 0;
        *((_QWORD *)&v110 + 1) = 0xE000000000000000;
        sub_1B2229430();
        v114 = v110;
        sub_1B2228890();
        v110 = v16;
        v111 = v17;
        *(_QWORD *)&v112 = v18;
        sub_1B22295EC();
        v19 = v114;
        sub_1B1B6AE48();
        swift_allocError();
        *(_OWORD *)v20 = v19;
        *(_BYTE *)(v20 + 16) = 32;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v105 + 8))(v9, v102);
        v10 = v104;
        v21 = (uint64_t)v121;
        v22 = v103;
        goto LABEL_77;
      case 0x2BLL:
        sub_1B1A02758(0, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v77;
        sub_1B1E0FDEC();
        goto LABEL_74;
      case 0x2CLL:
        sub_1B1A02758(0, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v78;
        sub_1B1E0FD7C();
        goto LABEL_74;
      case 0x2DLL:
        sub_1B1A02758(0, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v79;
        sub_1B1E0FD0C();
        goto LABEL_74;
      case 0x2ELL:
        sub_1B1A02758(0, &qword_1EEF5CA40, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v80;
        sub_1B1E0FC9C();
        goto LABEL_74;
      case 0x2FLL:
        sub_1B1A02758(0, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v81;
        sub_1B1E0FC2C();
        goto LABEL_74;
      case 0x30:
        sub_1B1A02758(0, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v82;
        sub_1B1E0FBBC();
        goto LABEL_74;
      case 0x31:
        sub_1B1A02758(0, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v83;
        sub_1B1E0FB4C();
        goto LABEL_74;
      case 0x32:
        sub_1B1A02758(0, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v84;
        sub_1B1E0FADC();
        goto LABEL_74;
      case 0x33:
        sub_1B1A02758(0, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v85;
        sub_1B1E0FA6C();
        goto LABEL_74;
      case 0x34:
        sub_1B1A02758(0, &qword_1ED4BA4D0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v86;
        sub_1B1E0F9FC();
        goto LABEL_74;
      case 0x35:
        sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v87;
        sub_1B1E0F98C();
LABEL_74:
        v23 = v102;
        v22 = v103;
        v88 = v103;
        sub_1B2229814();
        if (!v88)
          goto LABEL_89;
        (*(void (**)(char *, uint64_t))(v105 + 8))(v9, v23);
        sub_1B1E0F8A8((uint64_t)&v110);
        goto LABEL_76;
      case 0x36:
        sub_1B1E0F368();
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        v89 = sub_1B1E0F368;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v90;
        v91 = (unint64_t *)&unk_1EEF5EE60;
        v92 = sub_1B1C38A10;
        goto LABEL_82;
      case 0x37:
        sub_1B1E0F3DC();
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        v89 = sub_1B1E0F3DC;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v93;
        v91 = (unint64_t *)&unk_1EEF5EE58;
        v92 = sub_1B1E0F6E8;
        goto LABEL_82;
      case 0x38:
        sub_1B1E0F450();
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        v89 = sub_1B1E0F450;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v94;
        v91 = (unint64_t *)&unk_1ED4BA508;
        v92 = sub_1B1E0F750;
LABEL_82:
        sub_1B1E10264(v91, (uint64_t (*)(uint64_t))v89, (uint64_t (*)(void))v92, MEMORY[0x1E0DEAF40]);
        goto LABEL_85;
      case 0x39:
        sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v95;
        sub_1B1E0F91C();
        goto LABEL_85;
      case 0x3ALL:
        sub_1B1AEB244(0);
        *(_QWORD *)&v114 = 0;
        BYTE8(v114) = 1;
        *(_QWORD *)&v115 = v13;
        *((_QWORD *)&v115 + 1) = v15;
        *((_QWORD *)&v111 + 1) = v96;
        sub_1B1E100AC((unint64_t *)&unk_1EEF63660, (unint64_t *)&qword_1ED4B7B20, MEMORY[0x1E0CB0038], MEMORY[0x1E0DEAF40]);
LABEL_85:
        v23 = v102;
        v97 = v103;
        sub_1B2229814();
        if (!v97)
          goto LABEL_89;
        (*(void (**)(char *, uint64_t))(v105 + 8))(v9, v23);
        sub_1B1E0F8A8((uint64_t)&v110);
        v10 = v104;
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v121);
        swift_bridgeObjectRelease();
        goto LABEL_87;
      default:
        (*(void (**)(char *, uint64_t))(v105 + 8))(v9, v102);
        v68 = v106;
        v69 = (uint64_t)v121;
        goto LABEL_91;
    }
  }
  return sub_1B1B1F3E4((uint64_t)v10, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
}

uint64_t sub_1B1E07578(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)();
  uint64_t v134;
  uint64_t v135;
  unint64_t *v136;
  unint64_t (*v137)();
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD v146[2];
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  char v164;
  __int128 v165;
  __int128 v166;
  _BYTE v167[80];
  uint64_t v168;

  v2 = sub_1B2228110();
  v150 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v151 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)v146 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B19F8E54(0, &qword_1EEF5EEC0, (uint64_t (*)(void))sub_1B1C78FEC, (uint64_t)&type metadata for StringCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = (char *)v146 - v10;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C78FEC();
  v12 = v168;
  sub_1B222A180();
  *(_QWORD *)v167 = 0;
  v167[8] = 1;
  strcpy(&v167[16], "keyName");
  *(_QWORD *)&v167[24] = 0xE700000000000000;
  v13 = v152;
  sub_1B2229910();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v149 = v5;
  v15 = v7;
  v16 = v151;
  *(_QWORD *)v167 = *(_QWORD *)(v12 + 16);
  v152 = *(_OWORD *)(v12 + 24);
  *(_OWORD *)&v167[8] = v152;
  *(_OWORD *)&v167[24] = *(_OWORD *)(v12 + 40);
  *(_QWORD *)&v153 = 0;
  BYTE8(v153) = 1;
  *(_QWORD *)&v154 = 0x70795465756C6176;
  *((_QWORD *)&v154 + 1) = 0xE900000000000065;
  sub_1B19FA094();
  sub_1B2229958();
  v146[1] = 0;
  v147 = v11;
  v148 = v15;
  v17 = v8;
  if ((unint64_t)v152 <= 0x26 && ((1 << v152) & 0x43A0000000) != 0)
  {
    sub_1B19F8F0C(v12, (uint64_t)v167);
    sub_1B1A203C4((uint64_t)v167);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v147, v148);
  }
  sub_1B19F8F0C(v12, (uint64_t)v167);
  *(_QWORD *)&v152 = v8;
  v18 = *(_QWORD *)&v167[24];
  sub_1B1A203C4((uint64_t)v167);
  v19 = v18 >= 0x3B;
  v17 = v152;
  if (v19)
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v147, v148);
  v20 = *(_QWORD *)(v12 + 24);
  switch(v20)
  {
    case 0:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v21 = *(_QWORD *)v12;
      v22 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v21;
      *((_QWORD *)&v166 + 1) = v22;
      v23 = v147;
      v24 = v148;
      sub_1B222991C();
      goto LABEL_72;
    case 1:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v25 = *(_QWORD *)v12;
      v26 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v25;
      *((_QWORD *)&v166 + 1) = v26;
      v23 = v147;
      v24 = v148;
      sub_1B2229994();
      goto LABEL_72;
    case 2:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v27 = *(_QWORD *)v12;
      v28 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v27;
      *((_QWORD *)&v166 + 1) = v28;
      v23 = v147;
      v24 = v148;
      sub_1B22299A0();
      goto LABEL_72;
    case 3:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v29 = *(_QWORD *)v12;
      v30 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v29;
      *((_QWORD *)&v166 + 1) = v30;
      v23 = v147;
      v24 = v148;
      sub_1B22299AC();
      goto LABEL_72;
    case 4:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v31 = *(_QWORD *)v12;
      v32 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v31;
      *((_QWORD *)&v166 + 1) = v32;
      v23 = v147;
      v24 = v148;
      sub_1B22299B8();
      goto LABEL_72;
    case 5:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v33 = *(_QWORD *)v12;
      v34 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v33;
      *((_QWORD *)&v166 + 1) = v34;
      v23 = v147;
      v24 = v148;
      sub_1B2229964();
      goto LABEL_72;
    case 6:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v35 = *(_QWORD *)v12;
      v36 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v35;
      *((_QWORD *)&v166 + 1) = v36;
      v23 = v147;
      v24 = v148;
      sub_1B2229970();
      goto LABEL_72;
    case 7:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v37 = *(_QWORD *)v12;
      v38 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v37;
      *((_QWORD *)&v166 + 1) = v38;
      v23 = v147;
      v24 = v148;
      sub_1B222997C();
      goto LABEL_72;
    case 8:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v39 = *(_QWORD *)v12;
      v40 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v39;
      *((_QWORD *)&v166 + 1) = v40;
      v23 = v147;
      v24 = v148;
      sub_1B2229988();
      goto LABEL_72;
    case 9:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v41 = *(_QWORD *)v12;
      v42 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v41;
      *((_QWORD *)&v166 + 1) = v42;
      v23 = v147;
      v24 = v148;
      sub_1B2229940();
      goto LABEL_72;
    case 10:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B19F8E54(0, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEDD20]);
      swift_dynamicCast();
      *(_QWORD *)&v156 = v162;
      v43 = *(_QWORD *)v12;
      v44 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v43;
      *((_QWORD *)&v166 + 1) = v44;
      sub_1B1E109F8();
      goto LABEL_51;
    case 11:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
      swift_dynamicCast();
      v156 = v162;
      v45 = *(_QWORD *)v12;
      v46 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v45;
      *((_QWORD *)&v166 + 1) = v46;
      sub_1B1E10990();
      goto LABEL_51;
    case 12:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B19F8E54(0, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
      swift_dynamicCast();
      v156 = v162;
      v47 = *(_QWORD *)v12;
      v48 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v47;
      *((_QWORD *)&v166 + 1) = v48;
      sub_1B1E10928();
      goto LABEL_51;
    case 13:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v49 = *(_QWORD *)v12;
      v50 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v49;
      *((_QWORD *)&v166 + 1) = v50;
      v23 = v147;
      v24 = v148;
      sub_1B2229934();
      goto LABEL_72;
    case 14:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
      swift_dynamicCast();
      *(_QWORD *)&v156 = v162;
      v51 = *(_QWORD *)v12;
      v52 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v51;
      *((_QWORD *)&v166 + 1) = v52;
      sub_1B1E102C8();
      goto LABEL_51;
    case 15:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
      swift_dynamicCast();
      v156 = v162;
      v53 = *(_QWORD *)v12;
      v54 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v53;
      *((_QWORD *)&v166 + 1) = v54;
      sub_1B1E101FC();
      goto LABEL_51;
    case 16:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
      swift_dynamicCast();
      v156 = v162;
      v55 = *(_QWORD *)v12;
      v56 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v55;
      *((_QWORD *)&v166 + 1) = v56;
      sub_1B1E10194();
      goto LABEL_51;
    case 17:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      type metadata accessor for simd_float2x2(0);
      swift_dynamicCast();
      v159 = v165;
      v57 = *(_QWORD *)v12;
      v58 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v153 = 0;
      BYTE8(v153) = 1;
      *(_QWORD *)&v154 = v57;
      *((_QWORD *)&v154 + 1) = v58;
      sub_1B1B2C0CC();
      goto LABEL_47;
    case 18:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      type metadata accessor for simd_float2x3(0);
      swift_dynamicCast();
      v153 = v165;
      v154 = v166;
      v59 = *(_QWORD *)v12;
      v60 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v159 = 0;
      BYTE8(v159) = 1;
      *(_QWORD *)&v160 = v59;
      *((_QWORD *)&v160 + 1) = v60;
      sub_1B1B2C088();
      goto LABEL_47;
    case 19:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      type metadata accessor for simd_float2x4(0);
      swift_dynamicCast();
      v153 = v165;
      v154 = v166;
      v61 = *(_QWORD *)v12;
      v62 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v159 = 0;
      BYTE8(v159) = 1;
      *(_QWORD *)&v160 = v61;
      *((_QWORD *)&v160 + 1) = v62;
      sub_1B1B2C044();
      goto LABEL_47;
    case 20:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      type metadata accessor for simd_float3x2(0);
      swift_dynamicCast();
      v159 = v165;
      *(_QWORD *)&v160 = v166;
      v63 = *(_QWORD *)v12;
      v64 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v153 = 0;
      BYTE8(v153) = 1;
      *(_QWORD *)&v154 = v63;
      *((_QWORD *)&v154 + 1) = v64;
      sub_1B1B2C000();
      goto LABEL_47;
    case 21:
      sub_1B1E10010(v12 + 56, (uint64_t)&v165, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v165, &v159);
      type metadata accessor for simd_float3x3(0);
      swift_dynamicCast();
      v65 = *(_QWORD *)v12;
      v66 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v159 = 0;
      BYTE8(v159) = 1;
      *(_QWORD *)&v160 = v65;
      *((_QWORD *)&v160 + 1) = v66;
      sub_1B1B2BFBC();
      goto LABEL_47;
    case 22:
      sub_1B1E10010(v12 + 56, (uint64_t)&v165, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v165, &v159);
      type metadata accessor for simd_float3x4(0);
      swift_dynamicCast();
      v67 = *(_QWORD *)v12;
      v68 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v159 = 0;
      BYTE8(v159) = 1;
      *(_QWORD *)&v160 = v67;
      *((_QWORD *)&v160 + 1) = v68;
      sub_1B1B2BF78();
      goto LABEL_47;
    case 23:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      type metadata accessor for simd_float4x2(0);
      swift_dynamicCast();
      v153 = v165;
      v154 = v166;
      v69 = *(_QWORD *)v12;
      v70 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v159 = 0;
      BYTE8(v159) = 1;
      *(_QWORD *)&v160 = v69;
      *((_QWORD *)&v160 + 1) = v70;
      sub_1B1B2BF34();
      goto LABEL_47;
    case 24:
      sub_1B1E10010(v12 + 56, (uint64_t)&v165, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v165, &v159);
      type metadata accessor for simd_float4x3(0);
      swift_dynamicCast();
      v71 = *(_QWORD *)v12;
      v72 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v159 = 0;
      BYTE8(v159) = 1;
      *(_QWORD *)&v160 = v71;
      *((_QWORD *)&v160 + 1) = v72;
      sub_1B1B2BEF0();
      goto LABEL_47;
    case 25:
      sub_1B1E10010(v12 + 56, (uint64_t)&v165, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v165, &v159);
      type metadata accessor for simd_float4x4(0);
      swift_dynamicCast();
      v73 = *(_QWORD *)v12;
      v74 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v159 = 0;
      BYTE8(v159) = 1;
      *(_QWORD *)&v160 = v73;
      *((_QWORD *)&v160 + 1) = v74;
      sub_1B1B2BEAC();
      goto LABEL_47;
    case 26:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v75 = *(_QWORD *)v12;
      v76 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v75;
      *((_QWORD *)&v166 + 1) = v76;
      v23 = v147;
      v24 = v148;
      sub_1B2229928();
      goto LABEL_72;
    case 27:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      LODWORD(v156) = v162;
      v77 = *(_QWORD *)v12;
      v78 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v77;
      *((_QWORD *)&v166 + 1) = v78;
      sub_1B1E108E4();
      goto LABEL_51;
    case 28:
      v79 = v152;
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v80 = v147;
      v156 = v162;
      LOBYTE(v157) = v163;
      v81 = *(_QWORD *)v12;
      v82 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v81;
      *((_QWORD *)&v166 + 1) = v82;
      sub_1B1D3DBB0();
      v83 = v148;
      sub_1B2229958();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v80, v83);
    case 30:
      sub_1B1E10010(v12 + 56, (uint64_t)&v162, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v162, &v165);
      swift_dynamicCast();
      v159 = v153;
      v160 = v154;
      v161 = v155;
      v90 = *(_QWORD *)v12;
      v91 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v156 = 0;
      BYTE8(v156) = 1;
      v157 = v90;
      v158 = v91;
      sub_1B1E10068();
      goto LABEL_51;
    case 34:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      swift_dynamicCast();
      v92 = v147;
      v93 = *(_QWORD *)v12;
      v94 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v93;
      *((_QWORD *)&v166 + 1) = v94;
      swift_bridgeObjectRetain();
      v95 = v148;
      sub_1B2229910();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v92, v95);
    case 35:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      v96 = v149;
      swift_dynamicCast();
      v97 = *(_QWORD *)v12;
      v98 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v97;
      *((_QWORD *)&v166 + 1) = v98;
      sub_1B1E0F8DC(&qword_1EEF62990, MEMORY[0x1E0CB0010]);
      swift_bridgeObjectRetain();
      v99 = v147;
      v100 = v148;
      sub_1B2229958();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v152 + 8))(v99, v100);
      return (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v96, v16);
    case 36:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      type metadata accessor for simd_quatf(0);
      swift_dynamicCast();
      v101 = *(_QWORD *)v12;
      v102 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v153 = 0;
      BYTE8(v153) = 1;
      *(_QWORD *)&v154 = v101;
      *((_QWORD *)&v154 + 1) = v102;
      sub_1B1B4E784();
LABEL_47:
      v24 = v148;
      goto LABEL_52;
    case 37:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
      swift_dynamicCast();
      v103 = v147;
      v104 = v148;
      v156 = v162;
      v157 = v163;
      LOBYTE(v158) = v164;
      v105 = *(_QWORD *)v12;
      v106 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v105;
      *((_QWORD *)&v166 + 1) = v106;
      sub_1B1E1087C();
      sub_1B2229958();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v152 + 8))(v103, v104);
    case 39:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
      swift_dynamicCast();
      v156 = v162;
      v107 = *(_QWORD *)v12;
      v108 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v107;
      *((_QWORD *)&v166 + 1) = v108;
      sub_1B1E0FE5C(&qword_1EEF5D0A0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEB880]);
      goto LABEL_51;
    case 40:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
      swift_dynamicCast();
      *(_QWORD *)&v156 = v162;
      v109 = *(_QWORD *)v12;
      v110 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v109;
      *((_QWORD *)&v166 + 1) = v110;
      sub_1B1E10800(qword_1EEF5B108, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEB880]);
LABEL_51:
      v24 = v148;
LABEL_52:
      v23 = v147;
      sub_1B2229958();
      goto LABEL_72;
    case 43:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v111 = *(_QWORD *)v12;
      v112 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v111;
      *((_QWORD *)&v166 + 1) = v112;
      sub_1B1E10790();
      goto LABEL_71;
    case 44:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v113 = *(_QWORD *)v12;
      v114 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v113;
      *((_QWORD *)&v166 + 1) = v114;
      sub_1B1E10720();
      goto LABEL_71;
    case 45:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v115 = *(_QWORD *)v12;
      v116 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v115;
      *((_QWORD *)&v166 + 1) = v116;
      sub_1B1E106B0();
      goto LABEL_71;
    case 46:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1EEF5CA40, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v117 = *(_QWORD *)v12;
      v118 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v117;
      *((_QWORD *)&v166 + 1) = v118;
      sub_1B1E10640();
      goto LABEL_71;
    case 47:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v119 = *(_QWORD *)v12;
      v120 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v119;
      *((_QWORD *)&v166 + 1) = v120;
      sub_1B1E105D0();
      goto LABEL_71;
    case 48:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v121 = *(_QWORD *)v12;
      v122 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v121;
      *((_QWORD *)&v166 + 1) = v122;
      sub_1B1E10560();
      goto LABEL_71;
    case 49:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v123 = *(_QWORD *)v12;
      v124 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v123;
      *((_QWORD *)&v166 + 1) = v124;
      sub_1B1E104F0();
      goto LABEL_71;
    case 50:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v125 = *(_QWORD *)v12;
      v126 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v125;
      *((_QWORD *)&v166 + 1) = v126;
      sub_1B1E10480();
      goto LABEL_71;
    case 51:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v127 = *(_QWORD *)v12;
      v128 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v127;
      *((_QWORD *)&v166 + 1) = v128;
      sub_1B1E10410();
      goto LABEL_71;
    case 52:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, &qword_1ED4BA4D0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v129 = *(_QWORD *)v12;
      v130 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v129;
      *((_QWORD *)&v166 + 1) = v130;
      sub_1B1E103A0();
      goto LABEL_71;
    case 53:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v131 = *(_QWORD *)v12;
      v132 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v131;
      *((_QWORD *)&v166 + 1) = v132;
      sub_1B1E10330();
      goto LABEL_71;
    case 54:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1E0F368();
      v133 = sub_1B1E0F368;
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v134 = *(_QWORD *)v12;
      v135 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v134;
      *((_QWORD *)&v166 + 1) = v135;
      v136 = (unint64_t *)&unk_1EEF5EEE0;
      v137 = sub_1B1E102C8;
      goto LABEL_68;
    case 55:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1E0F3DC();
      v133 = sub_1B1E0F3DC;
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v138 = *(_QWORD *)v12;
      v139 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v138;
      *((_QWORD *)&v166 + 1) = v139;
      v136 = (unint64_t *)&unk_1EEF5EED8;
      v137 = sub_1B1E101FC;
      goto LABEL_68;
    case 56:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1E0F450();
      v133 = sub_1B1E0F450;
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v140 = *(_QWORD *)v12;
      v141 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v140;
      *((_QWORD *)&v166 + 1) = v141;
      v136 = (unint64_t *)&unk_1EEF63250;
      v137 = sub_1B1E10194;
LABEL_68:
      sub_1B1E10264(v136, (uint64_t (*)(uint64_t))v133, (uint64_t (*)(void))v137, MEMORY[0x1E0DEAF10]);
      goto LABEL_71;
    case 57:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v142 = *(_QWORD *)v12;
      v143 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v142;
      *((_QWORD *)&v166 + 1) = v143;
      sub_1B1E10124();
      goto LABEL_71;
    case 58:
      sub_1B1E10010(v12 + 56, (uint64_t)&v159, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
      sub_1B1A0DDAC(&v159, &v153);
      sub_1B1AEB244(0);
      swift_dynamicCast();
      v23 = v147;
      *(_QWORD *)&v156 = v162;
      v144 = *(_QWORD *)v12;
      v145 = *(_QWORD *)(v12 + 8);
      *(_QWORD *)&v165 = 0;
      BYTE8(v165) = 1;
      *(_QWORD *)&v166 = v144;
      *((_QWORD *)&v166 + 1) = v145;
      sub_1B1E100AC(&qword_1EEF5EED0, &qword_1EEF62990, MEMORY[0x1E0CB0010], MEMORY[0x1E0DEAF10]);
LABEL_71:
      v24 = v148;
      sub_1B2229958();
      swift_bridgeObjectRelease();
LABEL_72:
      result = (*(uint64_t (**)(char *, uint64_t))(v152 + 8))(v23, v24);
      break;
    default:
      v84 = v12;
      v85 = *(_QWORD *)(v12 + 48);
      v151 = *(_OWORD *)(v12 + 32);
      v86 = v152;
      v87 = *(_QWORD *)(v84 + 16);
      *(_QWORD *)v167 = 0;
      *(_QWORD *)&v167[8] = 0xE000000000000000;
      sub_1B2229430();
      v153 = *(_OWORD *)v167;
      sub_1B2228890();
      *(_QWORD *)v167 = v87;
      *(_QWORD *)&v167[8] = v20;
      *(_OWORD *)&v167[16] = v151;
      *(_QWORD *)&v167[32] = v85;
      sub_1B22295EC();
      v88 = v153;
      sub_1B1B6AE48();
      swift_allocError();
      *(_OWORD *)v89 = v88;
      *(_BYTE *)(v89 + 16) = 32;
      swift_willThrow();
      result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v147, v148);
      break;
  }
  return result;
}

uint64_t sub_1B1E096D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1E04E14(a1, a2);
}

uint64_t sub_1B1E096EC(_QWORD *a1)
{
  return sub_1B1E07578(a1);
}

uint64_t sub_1B1E09700(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_1B2229D24();
}

uint64_t sub_1B1E09730(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  if (v3 == *a1 && v4 == a1[1])
    v6 = 1;
  else
    v6 = sub_1B2229D24() ^ 1;
  return v6 & 1;
}

uint64_t sub_1B1E09770(_QWORD *a1, _QWORD *a2)
{
  char v3;

  if (*a1 == *a2 && a1[1] == a2[1])
    v3 = 1;
  else
    v3 = sub_1B2229D24() ^ 1;
  return v3 & 1;
}

uint64_t sub_1B1E097B8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  if (v3 == *a1 && v4 == a1[1])
    return 0;
  else
    return sub_1B2229D24();
}

uint64_t sub_1B1E097E4()
{
  return sub_1B1BB8F94();
}

uint64_t sub_1B1E09804()
{
  return sub_1B2228824();
}

uint64_t sub_1B1E09824()
{
  return sub_1B1BB8FE0();
}

uint64_t sub_1B1E09844@<X0>(BOOL *a1@<X8>)
{
  return sub_1B1BB9034(a1);
}

void sub_1B1E09850(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "metadataDict");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1B1E09874()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1B1E09894@<X0>(BOOL *a1@<X8>)
{
  return sub_1B1BB908C(a1);
}

uint64_t sub_1B1E098A0()
{
  sub_1B1E11CA0();
  return sub_1B222A1D4();
}

uint64_t sub_1B1E098C8()
{
  sub_1B1E11CA0();
  return sub_1B222A1E0();
}

uint64_t sub_1B1E098F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = v1;
  sub_1B19F8E54(0, &qword_1EEF5EF90, (uint64_t (*)(void))sub_1B1E11CA0, (uint64_t)&_s11MetadataSetC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)v14 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E11CA0();
  sub_1B222A180();
  if (!*(_QWORD *)(v2 + 16))
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v10 = swift_bridgeObjectRetain();
  v12 = sub_1B1E0A650(v10, v11);
  swift_bridgeObjectRelease();
  v14[1] = v12;
  sub_1B1C1F5A0(0, (unint64_t *)&qword_1ED4BB3C8, (uint64_t)&_s8MetadataVN, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1B1E11D64(&qword_1EEF5ABB0, (uint64_t (*)(void))sub_1B1B25B0C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1B2229958();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return swift_release();
}

uint64_t sub_1B1E09A88(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1B1E09AD4(a1);
  return v2;
}

uint64_t sub_1B1E09AD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1B19F8E54(0, &qword_1ED4BB4A8, (uint64_t (*)(void))sub_1B1E11CA0, (uint64_t)&_s11MetadataSetC10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v13 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v12 - v7;
  *(_QWORD *)(v1 + 16) = 0;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E11CA0();
  sub_1B222A150();
  if (v2)
  {
    swift_release();
  }
  else
  {
    sub_1B1E01560();
    sub_1B1E11CE4();
    v9 = v13;
    sub_1B22297B4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v9);
    v10 = v14;
    if (v14 == 1)
      v10 = swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 16) = v10;
    swift_bridgeObjectRelease();
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v1;
}

uint64_t _s11MetadataSetCMa()
{
  return objc_opt_self();
}

unint64_t _s8MetadataVwxx(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result >= 0x3B)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 80))
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
  return result;
}

uint64_t _s8MetadataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 >= 0x3B)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  v8 = (_OWORD *)(a1 + 56);
  v9 = (_OWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 80);
  if (v10)
  {
    *(_QWORD *)(a1 + 80) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 72);
    *v8 = *v9;
    *(_OWORD *)(a1 + 72) = v11;
  }
  return a1;
}

uint64_t _s8MetadataVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >= 0x3BuLL)
  {
    if (v6 >= 0x3B)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B1C203F0(a1 + 16);
      v9 = *(_QWORD *)(a2 + 48);
      v10 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 48) = v9;
    }
  }
  else if (v6 >= 0x3B)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *v5;
    v8 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *v4 = v7;
    *(_OWORD *)(a1 + 32) = v8;
  }
  v11 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 80) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, a2 + 56);
      return a1;
    }
LABEL_14:
    v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    return a1;
  }
  if (!v11)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
    goto LABEL_14;
  }
  sub_1B1B7D784((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t _s8MetadataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) < 0x3BuLL)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 24);
  if (v5 < 0x3B)
  {
    sub_1B1C203F0(a1 + 16);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(_QWORD *)(a1 + 80))
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
  v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v8;
  return a1;
}

uint64_t _s8MetadataVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s8MetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s8MetadataVMa()
{
  return &_s8MetadataVN;
}

uint64_t _s12MetadataTypeO6CustomVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12MetadataTypeO6CustomVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s12MetadataTypeO6CustomVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12MetadataTypeO6CustomVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s12MetadataTypeO6CustomVMa()
{
  return &_s12MetadataTypeO6CustomVN;
}

unint64_t _s12MetadataTypeOwxx(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s12MetadataTypeOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *_s12MetadataTypeOwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)a2;
    v6 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v5;
    *((_OWORD *)a1 + 1) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12MetadataTypeOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12MetadataTypeOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFC4 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483589);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 58;
  if (v4 >= 0x3C)
    return v5;
  else
    return 0;
}

uint64_t _s12MetadataTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFC5)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483589;
    if (a3 >= 0x7FFFFFC5)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFC5)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 58;
  }
  return result;
}

double sub_1B1E0A530(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *_s12MetadataTypeOMa()
{
  return &_s12MetadataTypeON;
}

unint64_t sub_1B1E0A570()
{
  unint64_t result;

  result = qword_1EEF5ECF0;
  if (!qword_1EEF5ECF0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229624C, &_s12MetadataTypeON);
    atomic_store(result, (unint64_t *)&qword_1EEF5ECF0);
  }
  return result;
}

unint64_t sub_1B1E0A5B8()
{
  unint64_t result;

  result = qword_1EEF5ECF8;
  if (!qword_1EEF5ECF8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22962C4, &_s8MetadataVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5ECF8);
  }
  return result;
}

uint64_t sub_1B1E0A5FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 128))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1B1E0A628()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

uint64_t sub_1B1E0A650(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(isStackAllocationSafe + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1B1E0A7A0((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3);
    if (v2)
      swift_willThrow();
    else
      return v7;
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v3 = sub_1B1E0A7A0((unint64_t *)v8, v5, v3);
    MEMORY[0x1B5E23F88](v8, -1, -1);
  }
  return v3;
}

uint64_t sub_1B1E0A7A0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  _BYTE v24[96];
  uint64_t *v25;

  v18 = 0;
  v4 = 0;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v25 = &v23;
  v20 = a3 + 64;
  v21 = (unint64_t)(v5 + 63) >> 6;
  v19 = a3 + 104;
  if (!v7)
    goto LABEL_7;
LABEL_4:
  v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v9 = v8 | (v4 << 6);
  while (1)
  {
    v10 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v9);
    v12 = *v10;
    v11 = v10[1];
    sub_1B19F8F0C(*(_QWORD *)(a3 + 56) + 88 * v9, (uint64_t)v24);
    v22[0] = v12;
    v22[1] = v11;
    sub_1B19F8F0C((uint64_t)v24, (uint64_t)v25);
    sub_1B1A2044C();
    sub_1B1A20490();
    swift_bridgeObjectRetain_n();
    LOBYTE(v12) = sub_1B222862C();
    sub_1B1A04628((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1B1C190A8);
    sub_1B1A203C4((uint64_t)v24);
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      if (v7)
        goto LABEL_4;
    }
    else
    {
      *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      ++v18;
      if (v7)
        goto LABEL_4;
    }
LABEL_7:
    v13 = v4 + 1;
    if (v4 + 1 >= v21)
      return sub_1B1C04EA0(a1, a2, v18, a3);
    v14 = *(_QWORD *)(v20 + 8 * v13);
    if (!v14)
    {
      v13 = v4 + 2;
      if (v4 + 2 >= v21)
        return sub_1B1C04EA0(a1, a2, v18, a3);
      v14 = *(_QWORD *)(v20 + 8 * v13);
      if (!v14)
      {
        v13 = v4 + 3;
        if (v4 + 3 >= v21)
          return sub_1B1C04EA0(a1, a2, v18, a3);
        v14 = *(_QWORD *)(v20 + 8 * v13);
        if (!v14)
        {
          v13 = v4 + 4;
          if (v4 + 4 >= v21)
            return sub_1B1C04EA0(a1, a2, v18, a3);
          v14 = *(_QWORD *)(v20 + 8 * v13);
          if (!v14)
            break;
        }
      }
    }
LABEL_18:
    v7 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v4 = v13;
  }
  while (v21 - 5 != v4)
  {
    v14 = *(_QWORD *)(v19 + 8 * v4++);
    if (v14)
    {
      v13 = v4 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B1C04EA0(a1, a2, v18, a3);
}

void sub_1B1E0A9F4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t *v26;
  void *v27;
  id v28;
  _QWORD *v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;

  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v36 = v7;
  if (v7)
  {
    v8 = (uint64_t *)(a1 + 64);
    v30 = a5;
    do
    {
      v9 = *(v8 - 4);
      v10 = *(v8 - 3);
      v11 = *(v8 - 2);
      v12 = *(v8 - 1);
      v13 = *v8;
      v37 = v9;
      v38 = v10;
      v39 = v11;
      v40 = v12;
      v41 = v13;
      sub_1B19FA2B4(v9, v10);
      a2(&v42, &v37);
      sub_1B19F9FEC(v9, v10);
      v14 = v43;
      if (!v43)
        break;
      v15 = v42;
      v16 = v44;
      v37 = v42;
      v38 = v43;
      v32 = v45;
      v33 = v46;
      v34 = v47;
      v35 = v48;
      v17 = *a5;
      v19 = sub_1B1DC3B00(v42, v43);
      v20 = v18;
      v21 = *(_QWORD *)(v17 + 16) + ((v18 & 1) == 0);
      if (*(_QWORD *)(v17 + 24) >= v21)
      {
        if ((a4 & 1) != 0)
        {
          if ((v18 & 1) != 0)
            goto LABEL_13;
        }
        else
        {
          sub_1B1EA8444();
          if ((v20 & 1) != 0)
          {
LABEL_13:
            v27 = (void *)swift_allocError();
            swift_willThrow();
            v49 = v27;
            v28 = v27;
            sub_1B1A203F8();
            if ((swift_dynamicCast() & 1) == 0)
            {
              swift_release();
              swift_bridgeObjectRelease();
              sub_1B19F9FEC(v16, v32);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              return;
            }
            goto LABEL_17;
          }
        }
      }
      else
      {
        sub_1B1E912F0(v21, a4 & 1);
        v22 = sub_1B1DC3B00(v15, v14);
        if ((v20 & 1) != (v23 & 1))
        {
          sub_1B2229FC4();
          __break(1u);
LABEL_17:
          sub_1B2229430();
          sub_1B2228890();
          sub_1B22295EC();
          sub_1B2228890();
          sub_1B2229688();
          __break(1u);
          return;
        }
        v19 = v22;
        if ((v20 & 1) != 0)
          goto LABEL_13;
      }
      v8 += 5;
      a5 = v30;
      v24 = (_QWORD *)*v30;
      a4 = 1;
      *(_QWORD *)(*v30 + 8 * (v19 >> 6) + 64) |= 1 << v19;
      v25 = (uint64_t *)(v24[6] + 16 * v19);
      *v25 = v15;
      v25[1] = v14;
      v26 = (uint64_t *)(v24[7] + 40 * v19);
      *v26 = v16;
      v26[1] = v32;
      v26[2] = v33;
      v26[3] = v34;
      v26[4] = v35;
      ++v24[2];
      --v36;
    }
    while (v36);
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
}

uint64_t sub_1B1E0AD6C(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  int v19;
  __int32 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int32x2_t v24;
  int32x2_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  uint64_t v31;
  float32x2_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint32x2_t v39;
  uint64_t v40;
  uint32x4_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  float32x2_t v45;
  int8x8_t v46;
  int8x8_t v47;
  uint64_t v48;
  int8x16_t v49;
  int8x16_t v50;
  uint64_t v51;
  int8x16_t v52;
  int8x16_t v53;
  uint64_t v54;
  float32x4_t v55;
  float32x4_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  int v64;
  uint64_t v65;
  int v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  float32x2_t *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  float32x2_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  float v111;
  float v112;
  float v113;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  float32x4_t v131;
  float32x4_t v132;
  float32x4_t v133;
  float32x4_t v134;
  float32x4_t v135;
  float32x4_t v136;
  __int128 v137;
  __int128 v138;
  float32x4_t v139;
  __int128 v140;
  float32x4_t v141;
  __int128 v142;
  float32x4_t v143;
  __int128 v144;
  float32x4_t v145;
  __int128 v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  float32x4_t v152;
  float32x4_t v153;
  __int128 v154;
  float32x2_t *v155;
  char v156;
  float32x4_t v157;
  float32x4_t v158;
  float32x4_t v159;
  float32x4_t v160;
  _OWORD v161[2];
  float32x4_t v162;
  float32x4_t v163;
  char v164[40];
  _BYTE v165[40];
  char v166[8];
  uint64_t v167;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (LOBYTE(v5) = 0, (sub_1B2229D24() & 1) != 0))
  {
    sub_1B19FA278((uint64_t)(a1 + 2), (uint64_t)v165);
    sub_1B19FA278((uint64_t)(a2 + 2), (uint64_t)v164);
    v6 = sub_1B1E03DBC();
    v8 = v7;
    if (v6 == sub_1B1E03DBC() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v10 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v5) = 0;
      if ((v10 & 1) == 0)
        return v5 & 1;
    }
    sub_1B19FA278((uint64_t)v165, (uint64_t)v166);
    switch(v167)
    {
      case 0:
        v5 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v17 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v5);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        LOBYTE(v5) = v17 ^ v152.i8[0] ^ 1;
        return v5 & 1;
      case 1:
      case 5:
        v18 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v19 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v18);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v20 = v152.u8[0];
        goto LABEL_55;
      case 2:
      case 6:
        v21 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v19 = (unsigned __int16)v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v21);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v20 = v152.u16[0];
        goto LABEL_55;
      case 3:
      case 7:
      case 27:
        v61 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v19 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v61);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v20 = v152.i32[0];
LABEL_55:
        LOBYTE(v5) = v19 == v20;
        return v5 & 1;
      case 4:
      case 8:
      case 9:
        v5 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v22 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v5);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        LOBYTE(v5) = v22 == v152.i64[0];
        return v5 & 1;
      case 10:
        v23 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B19F8E54(0, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEDD20]);
        swift_dynamicCast();
        v24 = (int32x2_t)v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v23);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v25 = vceq_s32(v24, *(int32x2_t *)v152.f32);
        goto LABEL_32;
      case 11:
        v26 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
        swift_dynamicCast();
        v127 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v26);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v27 = 0;
LABEL_90:
        v138 = v127;
        v109 = *(_DWORD *)((unint64_t)&v138 & 0xFFFFFFFFFFFFFFF3 | (4 * (v27 & 3)));
        v139 = v152;
        LOBYTE(v5) = v109 == *(_DWORD *)((unint64_t)&v139 & 0xFFFFFFFFFFFFFFF3 | (4 * (v27 & 3)));
        while (v27 != 2)
        {
          ++v27;
          if ((v5 & 1) != 0)
            goto LABEL_90;
          LOBYTE(v5) = 0;
        }
        return v5 & 1;
      case 12:
        v28 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B19F8E54(0, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
        swift_dynamicCast();
        v128 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v28);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v29 = 0;
LABEL_94:
        v140 = v128;
        v110 = *(_DWORD *)((unint64_t)&v140 & 0xFFFFFFFFFFFFFFF3 | (4 * (v29 & 3)));
        v141 = v152;
        LOBYTE(v5) = v110 == *(_DWORD *)((unint64_t)&v141 & 0xFFFFFFFFFFFFFFF3 | (4 * (v29 & 3)));
        while (v29 != 3)
        {
          ++v29;
          if ((v5 & 1) != 0)
            goto LABEL_94;
          LOBYTE(v5) = 0;
        }
        return v5 & 1;
      case 13:
        v5 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v30 = *(float *)&v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v5);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        LOBYTE(v5) = v30 == v152.f32[0];
        return v5 & 1;
      case 14:
        v31 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
        swift_dynamicCast();
        v32 = (float32x2_t)v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v31);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v25 = vceq_f32(v32, *(float32x2_t *)v152.f32);
LABEL_32:
        LOBYTE(v5) = v25.i8[0] & v25.i8[4];
        return v5 & 1;
      case 15:
        v33 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
        swift_dynamicCast();
        v129 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v33);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v34 = 0;
LABEL_98:
        v142 = v129;
        v111 = *(float *)((unint64_t)&v142 & 0xFFFFFFFFFFFFFFF3 | (4 * (v34 & 3)));
        v143 = v152;
        LOBYTE(v5) = v111 == *(float *)((unint64_t)&v143 & 0xFFFFFFFFFFFFFFF3 | (4 * (v34 & 3)));
        while (v34 != 2)
        {
          ++v34;
          if ((v5 & 1) != 0)
            goto LABEL_98;
          LOBYTE(v5) = 0;
        }
        return v5 & 1;
      case 16:
        v35 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
        swift_dynamicCast();
        v130 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v35);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v36 = 0;
LABEL_102:
        v144 = v130;
        v112 = *(float *)((unint64_t)&v144 & 0xFFFFFFFFFFFFFFF3 | (4 * (v36 & 3)));
        v145 = v152;
        LOBYTE(v5) = v112 == *(float *)((unint64_t)&v145 & 0xFFFFFFFFFFFFFFF3 | (4 * (v36 & 3)));
        while (v36 != 3)
        {
          ++v36;
          if ((v5 & 1) != 0)
            goto LABEL_102;
          LOBYTE(v5) = 0;
        }
        return v5 & 1;
      case 17:
        v37 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        type metadata accessor for simd_float2x2(0);
        swift_dynamicCast();
        v38 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v37);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v39 = (uint32x2_t)vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)((char *)&v38 + 8), *(float32x2_t *)&v152.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)&v38, *(float32x2_t *)v152.f32));
        goto LABEL_45;
      case 18:
        v40 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        type metadata accessor for simd_float2x3(0);
        swift_dynamicCast();
        v121 = v163;
        v131 = v162;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)&v154, (unint64_t *)&qword_1ED4BB150, v40);
        sub_1B1A0DDAC(&v154, v161);
        swift_dynamicCast();
        v41 = (uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(v121, v153), (int8x16_t)vceqq_f32(v131, v152));
        goto LABEL_48;
      case 19:
        v42 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        type metadata accessor for simd_float2x4(0);
        swift_dynamicCast();
        v122 = v163;
        v132 = v162;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)&v154, (unint64_t *)&qword_1ED4BB150, v42);
        sub_1B1A0DDAC(&v154, v161);
        swift_dynamicCast();
        v41 = (uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(v122, v153), (int8x16_t)vceqq_f32(v132, v152));
        goto LABEL_51;
      case 20:
        v43 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        type metadata accessor for simd_float3x2(0);
        swift_dynamicCast();
        v44 = v154;
        v45 = (float32x2_t)v155;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v43);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v46 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)((char *)&v44 + 8), *(float32x2_t *)&v152.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)&v44, *(float32x2_t *)v152.f32));
        v47 = (int8x8_t)vceq_f32(v45, *(float32x2_t *)v153.f32);
        goto LABEL_44;
      case 21:
        v48 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(v161, &v162);
        type metadata accessor for simd_float3x3(0);
        swift_dynamicCast();
        v123 = v158;
        v133 = v157;
        v117 = v159;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)&v152, (unint64_t *)&qword_1ED4BB150, v48);
        sub_1B1A0DDAC(&v152, &v154);
        swift_dynamicCast();
        v49 = vandq_s8((int8x16_t)vceqq_f32(v123, v149), (int8x16_t)vceqq_f32(v133, v148));
        v50 = (int8x16_t)vceqq_f32(v117, v150);
        goto LABEL_47;
      case 22:
        v51 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(v161, &v162);
        type metadata accessor for simd_float3x4(0);
        swift_dynamicCast();
        v124 = v158;
        v134 = v157;
        v118 = v159;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)&v152, (unint64_t *)&qword_1ED4BB150, v51);
        sub_1B1A0DDAC(&v152, &v154);
        swift_dynamicCast();
        v52 = vandq_s8((int8x16_t)vceqq_f32(v124, v149), (int8x16_t)vceqq_f32(v134, v148));
        v53 = (int8x16_t)vceqq_f32(v118, v150);
        goto LABEL_50;
      case 23:
        v54 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        type metadata accessor for simd_float4x2(0);
        swift_dynamicCast();
        v55 = v162;
        v56 = v163;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)&v154, (unint64_t *)&qword_1ED4BB150, v54);
        sub_1B1A0DDAC(&v154, v161);
        swift_dynamicCast();
        v46 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)&v55.u32[2], *(float32x2_t *)&v152.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)v55.f32, *(float32x2_t *)v152.f32));
        v47 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)v56.f32, *(float32x2_t *)v153.f32), (int8x8_t)vceq_f32(*(float32x2_t *)&v56.u32[2], *(float32x2_t *)&v153.u32[2]));
LABEL_44:
        v39 = (uint32x2_t)vand_s8(v46, v47);
LABEL_45:
        v57 = vpmin_u32(v39, v39).u32[0];
        goto LABEL_52;
      case 24:
        v58 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(v161, &v162);
        type metadata accessor for simd_float4x3(0);
        swift_dynamicCast();
        v125 = v158;
        v135 = v157;
        v115 = v159;
        v119 = v160;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)&v152, (unint64_t *)&qword_1ED4BB150, v58);
        sub_1B1A0DDAC(&v152, &v154);
        swift_dynamicCast();
        v49 = vandq_s8((int8x16_t)vceqq_f32(v125, v149), (int8x16_t)vceqq_f32(v135, v148));
        v50 = vandq_s8((int8x16_t)vceqq_f32(v115, v150), (int8x16_t)vceqq_f32(v119, v151));
LABEL_47:
        v41 = (uint32x4_t)vandq_s8(v49, v50);
LABEL_48:
        v41.i32[3] = v41.i32[2];
        goto LABEL_51;
      case 25:
        v59 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(v161, &v162);
        type metadata accessor for simd_float4x4(0);
        swift_dynamicCast();
        v126 = v158;
        v136 = v157;
        v116 = v159;
        v120 = v160;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)&v152, (unint64_t *)&qword_1ED4BB150, v59);
        sub_1B1A0DDAC(&v152, &v154);
        swift_dynamicCast();
        v52 = vandq_s8((int8x16_t)vceqq_f32(v126, v149), (int8x16_t)vceqq_f32(v136, v148));
        v53 = vandq_s8((int8x16_t)vceqq_f32(v116, v150), (int8x16_t)vceqq_f32(v120, v151));
LABEL_50:
        v41 = (uint32x4_t)vandq_s8(v52, v53);
LABEL_51:
        v57 = vminvq_u32(v41);
LABEL_52:
        LODWORD(v5) = v57 >> 31;
        return v5 & 1;
      case 26:
        v5 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v60 = *(double *)&v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v5);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        LOBYTE(v5) = v60 == *(double *)v152.i64;
        return v5 & 1;
      case 28:
        v62 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v63 = v154;
        v64 = v155;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v62);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v65 = v152.i64[1];
        v66 = v153.u8[0];
        if (sub_1B1CC9434(v63, v152.i64[0]))
        {
          v67 = sub_1B1CC94F4(*((uint64_t *)&v63 + 1), v65);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v5) = v67 && v64 == v66;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_16:
          LOBYTE(v5) = 0;
        }
        return v5 & 1;
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 38:
      case 41:
LABEL_11:
        if (qword_1ED4BF430 != -1)
          swift_once();
        v157.i64[0] = 0;
        v157.i64[1] = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        v148 = v157;
        sub_1B2228890();
        sub_1B19FA278((uint64_t)v165, (uint64_t)&v157);
        sub_1B22295EC();
        v11 = sub_1B2228E90();
        if (qword_1ED4BF658 != -1)
          swift_once();
        v157.i64[0] = 0;
        swift_retain();
        sub_1B1F1AD70(v11, (uint64_t *)&v157, v148.i64[0], v148.i64[1]);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_16;
      case 34:
      case 35:
        v12 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        swift_dynamicCast();
        v13 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v12);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        if (v13 == *(_OWORD *)&v152)
          LOBYTE(v5) = 1;
        else
          LOBYTE(v5) = sub_1B2229D24();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v5 & 1;
      case 36:
        v68 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        type metadata accessor for simd_quatf(0);
        swift_dynamicCast();
        v137 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v68);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        v69 = 0;
        break;
      case 37:
        v5 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
        swift_dynamicCast();
        v70 = v154;
        v71 = v155;
        v72 = (uint64_t)(a2 + 7);
        v73 = v156;
        sub_1B1E10010(v72, (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v5);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        LOBYTE(v5) = sub_1B1E1A8CC(v70, *((uint64_t *)&v70 + 1), v71, v73, v152.i64[0], v152.i64[1], (float32x2_t *)v153.i64[0], v153.i8[8]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v5 & 1;
      case 39:
        v74 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
        swift_dynamicCast();
        v75 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v74);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        LOBYTE(v5) = (_QWORD)v75 == v152.i64[0] && *((_QWORD *)&v75 + 1) == v152.i64[1];
        return v5 & 1;
      case 40:
        v77 = MEMORY[0x1E0DEE9B8] + 8;
        sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
        sub_1B1A0DDAC(&v148, &v157);
        sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
        swift_dynamicCast();
        v78 = v154;
        sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v77);
        sub_1B1A0DDAC(v161, &v162);
        swift_dynamicCast();
        LOBYTE(v5) = *((float *)&v78 + 1) == v152.f32[1] && *(float *)&v78 == v152.f32[0];
        return v5 & 1;
      default:
        switch(v167)
        {
          case '*':
            goto LABEL_11;
          case '+':
            v14 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v15 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v14);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9978(v15, v152.i64[0]);
            goto LABEL_89;
          case ',':
            v79 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v80 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v79);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC99FC(v80, v152.i64[0]);
            goto LABEL_89;
          case '-':
            v81 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v82 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v81);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9A00(v82, v152.i64[0]);
            goto LABEL_89;
          case '.':
            v83 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1EEF5CA40, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v84 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v83);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9A04(v84, v152.i64[0]);
            goto LABEL_89;
          case '/':
            v85 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v86 = (_QWORD *)v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v85);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9A08(v86, v152.i64[0]);
            goto LABEL_89;
          case '0':
            v87 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v88 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v87);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC99FC(v88, v152.i64[0]);
            goto LABEL_89;
          case '1':
            v89 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v90 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v89);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9A00(v90, v152.i64[0]);
            goto LABEL_89;
          case '2':
            v91 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v92 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v91);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9A04(v92, v152.i64[0]);
            goto LABEL_89;
          case '3':
            v93 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v94 = (_QWORD *)v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v93);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9A08(v94, v152.i64[0]);
            goto LABEL_89;
          case '4':
            v95 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, &qword_1ED4BA4D0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v96 = (_QWORD *)v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v95);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9A08(v96, v152.i64[0]);
            goto LABEL_89;
          case '5':
            v97 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v98 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v97);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC94F4(v98, v152.i64[0]);
            goto LABEL_89;
          case '6':
            v99 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1E0F368();
            swift_dynamicCast();
            v100 = (float32x2_t *)v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v99);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9BDC(v100, (float32x2_t *)v152.i64[0]);
            goto LABEL_89;
          case '7':
            v101 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1E0F3DC();
            swift_dynamicCast();
            v102 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v101);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9C48(v102, v152.i64[0]);
            goto LABEL_89;
          case '8':
            v103 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1E0F450();
            swift_dynamicCast();
            v104 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v103);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9434(v104, v152.i64[0]);
            goto LABEL_89;
          case '9':
            v105 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            swift_dynamicCast();
            v106 = (_QWORD *)v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v105);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9D08(v106, v152.i64[0]);
            goto LABEL_89;
          case ':':
            v107 = MEMORY[0x1E0DEE9B8] + 8;
            sub_1B1E10010((uint64_t)(a1 + 7), (uint64_t)&v148, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
            sub_1B1A0DDAC(&v148, &v157);
            sub_1B1AEB244(0);
            swift_dynamicCast();
            v108 = v154;
            sub_1B1E10010((uint64_t)(a2 + 7), (uint64_t)v161, (unint64_t *)&qword_1ED4BB150, v107);
            sub_1B1A0DDAC(v161, &v162);
            swift_dynamicCast();
            v16 = sub_1B1CC9DC4(v108, v152.i64[0]);
LABEL_89:
            LOBYTE(v5) = v16;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          default:
            LOBYTE(v5) = 1;
            break;
        }
        return v5 & 1;
    }
LABEL_106:
    v146 = v137;
    v113 = *(float *)((unint64_t)&v146 & 0xFFFFFFFFFFFFFFF3 | (4 * (v69 & 3)));
    v147 = v152;
    LOBYTE(v5) = v113 == *(float *)((unint64_t)&v147 & 0xFFFFFFFFFFFFFFF3 | (4 * (v69 & 3)));
    while (v69 != 3)
    {
      ++v69;
      if ((v5 & 1) != 0)
        goto LABEL_106;
      LOBYTE(v5) = 0;
    }
  }
  return v5 & 1;
}

uint64_t sub_1B1E0D3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13[40];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  result = swift_dynamicCastMetatype();
  v5 = 0uLL;
  if (result)
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
  }
  else
  {
    sub_1B1A02758(0, &qword_1EEF5ED00, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    result = swift_dynamicCastMetatype();
    if (result)
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
    }
    else
    {
      result = swift_dynamicCastMetatype();
      if (result
        || (sub_1B1A02758(0, &qword_1EEF5ED08, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
      {
        v6 = 0;
        v8 = 0;
        v7 = 1;
      }
      else
      {
        result = swift_dynamicCastMetatype();
        if (result
          || (sub_1B1A02758(0, &qword_1EEF5ED10, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
        {
          v6 = 0;
          v8 = 0;
          v7 = 2;
        }
        else
        {
          result = swift_dynamicCastMetatype();
          if (result
            || (sub_1B1A02758(0, &qword_1EEF5ED18, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
          {
            v6 = 0;
            v8 = 0;
            v7 = 3;
          }
          else
          {
            result = swift_dynamicCastMetatype();
            if (result
              || (sub_1B1A02758(0, &qword_1EEF5D7F8, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
            {
              v6 = 0;
              v8 = 0;
              v7 = 4;
            }
            else
            {
              result = swift_dynamicCastMetatype();
              if (result
                || (sub_1B1A02758(0, &qword_1EEF5ED20, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
              {
                v6 = 0;
                v8 = 0;
                v7 = 5;
              }
              else
              {
                result = swift_dynamicCastMetatype();
                if (result
                  || (sub_1B1A02758(0, &qword_1EEF5ED28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                {
                  v6 = 0;
                  v8 = 0;
                  v7 = 6;
                }
                else
                {
                  result = swift_dynamicCastMetatype();
                  if (result
                    || (sub_1B1A02758(0, &qword_1ED4BB048, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                  {
                    v6 = 0;
                    v8 = 0;
                    v7 = 7;
                  }
                  else
                  {
                    result = swift_dynamicCastMetatype();
                    if (result
                      || (sub_1B1A02758(0, &qword_1EEF5ED30, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                    {
                      v6 = 0;
                      v8 = 0;
                      v7 = 8;
                    }
                    else
                    {
                      result = swift_dynamicCastMetatype();
                      if (result
                        || (sub_1B1A02758(0, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                      {
                        v6 = 0;
                        v8 = 0;
                        v7 = 9;
                      }
                      else
                      {
                        sub_1B19F8E54(0, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEDD20]);
                        result = swift_dynamicCastMetatype();
                        if (result || (sub_1B1E0EC04(), (result = swift_dynamicCastMetatype()) != 0))
                        {
                          v6 = 0;
                          v8 = 0;
                          v7 = 10;
                        }
                        else
                        {
                          sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                          result = swift_dynamicCastMetatype();
                          if (result || (sub_1B1E0EC78(), (result = swift_dynamicCastMetatype()) != 0))
                          {
                            v6 = 0;
                            v8 = 0;
                            v7 = 11;
                          }
                          else
                          {
                            sub_1B19F8E54(0, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
                            result = swift_dynamicCastMetatype();
                            if (result || (sub_1B1E0ECEC(), (result = swift_dynamicCastMetatype()) != 0))
                            {
                              v6 = 0;
                              v8 = 0;
                              v7 = 12;
                            }
                            else
                            {
                              result = swift_dynamicCastMetatype();
                              if (result
                                || (sub_1B1A02758(0, &qword_1EEF59F50, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                              {
                                v6 = 0;
                                v8 = 0;
                                v7 = 13;
                              }
                              else
                              {
                                sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
                                result = swift_dynamicCastMetatype();
                                if (result || (sub_1B1E0ED60(), (result = swift_dynamicCastMetatype()) != 0))
                                {
                                  v6 = 0;
                                  v8 = 0;
                                  v7 = 14;
                                }
                                else
                                {
                                  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                                  result = swift_dynamicCastMetatype();
                                  if (result || (sub_1B1AFA498(), (result = swift_dynamicCastMetatype()) != 0))
                                  {
                                    v6 = 0;
                                    v8 = 0;
                                    v7 = 15;
                                  }
                                  else
                                  {
                                    sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
                                    result = swift_dynamicCastMetatype();
                                    if (result || (sub_1B1E0EDD4(), (result = swift_dynamicCastMetatype()) != 0))
                                    {
                                      v6 = 0;
                                      v8 = 0;
                                      v7 = 16;
                                    }
                                    else
                                    {
                                      type metadata accessor for simd_float2x2(0);
                                      result = swift_dynamicCastMetatype();
                                      if (result
                                        || (sub_1B1791524(0, &qword_1EEF5ED60, (uint64_t (*)(uint64_t))type metadata accessor for simd_float2x2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                      {
                                        v6 = 0;
                                        v8 = 0;
                                        v7 = 17;
                                      }
                                      else
                                      {
                                        type metadata accessor for simd_float2x3(0);
                                        result = swift_dynamicCastMetatype();
                                        if (result
                                          || (sub_1B1791524(0, &qword_1EEF5ED68, (uint64_t (*)(uint64_t))type metadata accessor for simd_float2x3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                        {
                                          v6 = 0;
                                          v8 = 0;
                                          v7 = 18;
                                        }
                                        else
                                        {
                                          type metadata accessor for simd_float2x4(0);
                                          result = swift_dynamicCastMetatype();
                                          if (result
                                            || (sub_1B1791524(0, &qword_1EEF5ED70, (uint64_t (*)(uint64_t))type metadata accessor for simd_float2x4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                          {
                                            v6 = 0;
                                            v8 = 0;
                                            v7 = 19;
                                          }
                                          else
                                          {
                                            type metadata accessor for simd_float3x2(0);
                                            result = swift_dynamicCastMetatype();
                                            if (result
                                              || (sub_1B1791524(0, &qword_1EEF5ED78, (uint64_t (*)(uint64_t))type metadata accessor for simd_float3x2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                            {
                                              v6 = 0;
                                              v8 = 0;
                                              v7 = 20;
                                            }
                                            else
                                            {
                                              type metadata accessor for simd_float3x3(0);
                                              result = swift_dynamicCastMetatype();
                                              if (result
                                                || (sub_1B1791524(0, &qword_1EEF5ED80, (uint64_t (*)(uint64_t))type metadata accessor for simd_float3x3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                              {
                                                v6 = 0;
                                                v8 = 0;
                                                v7 = 21;
                                              }
                                              else
                                              {
                                                type metadata accessor for simd_float3x4(0);
                                                result = swift_dynamicCastMetatype();
                                                if (result
                                                  || (sub_1B1791524(0, &qword_1EEF5ED88, (uint64_t (*)(uint64_t))type metadata accessor for simd_float3x4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                {
                                                  v6 = 0;
                                                  v8 = 0;
                                                  v7 = 22;
                                                }
                                                else
                                                {
                                                  type metadata accessor for simd_float4x2(0);
                                                  result = swift_dynamicCastMetatype();
                                                  if (result
                                                    || (sub_1B1791524(0, &qword_1EEF5ED90, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                  {
                                                    v6 = 0;
                                                    v8 = 0;
                                                    v7 = 23;
                                                  }
                                                  else
                                                  {
                                                    type metadata accessor for simd_float4x3(0);
                                                    result = swift_dynamicCastMetatype();
                                                    if (result
                                                      || (sub_1B1791524(0, &qword_1EEF5ED98, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                    {
                                                      v6 = 0;
                                                      v8 = 0;
                                                      v7 = 24;
                                                    }
                                                    else
                                                    {
                                                      type metadata accessor for simd_float4x4(0);
                                                      result = swift_dynamicCastMetatype();
                                                      if (result
                                                        || (sub_1B1791524(0, (unint64_t *)&qword_1ED4B79B0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                      {
                                                        v6 = 0;
                                                        v8 = 0;
                                                        v7 = 25;
                                                      }
                                                      else
                                                      {
                                                        result = swift_dynamicCastMetatype();
                                                        if (result
                                                          || (sub_1B1A02758(0, &qword_1EEF5D580, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                        {
                                                          v6 = 0;
                                                          v8 = 0;
                                                          v7 = 26;
                                                        }
                                                        else
                                                        {
                                                          result = swift_dynamicCastMetatype();
                                                          if (result
                                                            || (sub_1B1A02758(0, &qword_1EEF5EDA0, (uint64_t)&type metadata for ColorU8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                          {
                                                            v6 = 0;
                                                            v8 = 0;
                                                            v7 = 27;
                                                          }
                                                          else
                                                          {
                                                            result = swift_dynamicCastMetatype();
                                                            if (result
                                                              || (sub_1B1A02758(0, &qword_1EEF5EDA8, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                            {
                                                              v6 = 0;
                                                              v8 = 0;
                                                              v7 = 28;
                                                            }
                                                            else
                                                            {
                                                              result = swift_dynamicCastMetatype();
                                                              if (result
                                                                || (sub_1B1A02758(0, &qword_1EEF5EDB0, (uint64_t)&_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                              {
                                                                v6 = 0;
                                                                v8 = 0;
                                                                v7 = 30;
                                                              }
                                                              else
                                                              {
                                                                result = swift_dynamicCastMetatype();
                                                                if (result
                                                                  || (sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                                {
                                                                  v6 = 0;
                                                                  v8 = 0;
                                                                  v7 = 34;
                                                                }
                                                                else
                                                                {
                                                                  sub_1B2228110();
                                                                  result = swift_dynamicCastMetatype();
                                                                  if (result
                                                                    || (sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                                  {
                                                                    v6 = 0;
                                                                    v8 = 0;
                                                                    v7 = 35;
                                                                  }
                                                                  else
                                                                  {
                                                                    type metadata accessor for simd_quatf(0);
                                                                    result = swift_dynamicCastMetatype();
                                                                    if (result
                                                                      || (sub_1B1791524(0, &qword_1EEF5EDB8, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                                    {
                                                                      v6 = 0;
                                                                      v8 = 0;
                                                                      v7 = 36;
                                                                    }
                                                                    else
                                                                    {
                                                                      sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
                                                                      result = swift_dynamicCastMetatype();
                                                                      if (result
                                                                        || (sub_1B1AF7598(),
                                                                            (result = swift_dynamicCastMetatype()) != 0))
                                                                      {
                                                                        v6 = 0;
                                                                        v8 = 0;
                                                                        v7 = 37;
                                                                      }
                                                                      else
                                                                      {
                                                                        sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
                                                                        result = swift_dynamicCastMetatype();
                                                                        if (result
                                                                          || (sub_1B1E0EE48(),
                                                                              (result = swift_dynamicCastMetatype()) != 0))
                                                                        {
                                                                          v6 = 0;
                                                                          v8 = 0;
                                                                          v7 = 39;
                                                                        }
                                                                        else
                                                                        {
                                                                          sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
                                                                          result = swift_dynamicCastMetatype();
                                                                          if (result
                                                                            || (sub_1B1E0EEBC(),
                                                                                (result = swift_dynamicCastMetatype()) != 0))
                                                                          {
                                                                            v6 = 0;
                                                                            v8 = 0;
                                                                            v7 = 40;
                                                                          }
                                                                          else
                                                                          {
                                                                            sub_1B1A02758(0, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                            result = swift_dynamicCastMetatype();
                                                                            if (result
                                                                              || (sub_1B1E0EF30(),
                                                                                  (result = swift_dynamicCastMetatype()) != 0))
                                                                            {
                                                                              v6 = 0;
                                                                              v8 = 0;
                                                                              v7 = 43;
                                                                            }
                                                                            else
                                                                            {
                                                                              sub_1B1A02758(0, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                              result = swift_dynamicCastMetatype();
                                                                              if (result
                                                                                || (sub_1B1E0EF9C(),
                                                                                    (result = swift_dynamicCastMetatype()) != 0))
                                                                              {
                                                                                v6 = 0;
                                                                                v8 = 0;
                                                                                v7 = 44;
                                                                              }
                                                                              else
                                                                              {
                                                                                sub_1B1A02758(0, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                result = swift_dynamicCastMetatype();
                                                                                if (result
                                                                                  || (sub_1B1E0F008(),
                                                                                      (result = swift_dynamicCastMetatype()) != 0))
                                                                                {
                                                                                  v6 = 0;
                                                                                  v8 = 0;
                                                                                  v7 = 45;
                                                                                }
                                                                                else
                                                                                {
                                                                                  sub_1B1A02758(0, &qword_1EEF5CA40, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                  result = swift_dynamicCastMetatype();
                                                                                  if (result
                                                                                    || (sub_1B1E0F074(),
                                                                                        (result = swift_dynamicCastMetatype()) != 0))
                                                                                  {
                                                                                    v6 = 0;
                                                                                    v8 = 0;
                                                                                    v7 = 46;
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    sub_1B1A02758(0, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                    result = swift_dynamicCastMetatype();
                                                                                    if (result
                                                                                      || (sub_1B1E0F0E0(),
                                                                                          (result = swift_dynamicCastMetatype()) != 0))
                                                                                    {
                                                                                      v6 = 0;
                                                                                      v8 = 0;
                                                                                      v7 = 47;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      sub_1B1A02758(0, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                      result = swift_dynamicCastMetatype();
                                                                                      if (result
                                                                                        || (sub_1B1E0F14C(),
                                                                                            (result = swift_dynamicCastMetatype()) != 0))
                                                                                      {
                                                                                        v6 = 0;
                                                                                        v8 = 0;
                                                                                        v7 = 48;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        sub_1B1A02758(0, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                        result = swift_dynamicCastMetatype();
                                                                                        if (result
                                                                                          || (sub_1B1E0F1B8(),
                                                                                              (result = swift_dynamicCastMetatype()) != 0))
                                                                                        {
                                                                                          v6 = 0;
                                                                                          v8 = 0;
                                                                                          v7 = 49;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          sub_1B1A02758(0, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                          result = swift_dynamicCastMetatype();
                                                                                          if (result
                                                                                            || (sub_1B1E0F224(),
                                                                                                (result = swift_dynamicCastMetatype()) != 0))
                                                                                          {
                                                                                            v6 = 0;
                                                                                            v8 = 0;
                                                                                            v7 = 50;
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            sub_1B1A02758(0, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                            result = swift_dynamicCastMetatype();
                                                                                            if (result
                                                                                              || (sub_1B1E0F290(),
                                                                                                  (result = swift_dynamicCastMetatype()) != 0))
                                                                                            {
                                                                                              v6 = 0;
                                                                                              v8 = 0;
                                                                                              v7 = 51;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              sub_1B1A02758(0, &qword_1ED4BA4D0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                              result = swift_dynamicCastMetatype();
                                                                                              if (result
                                                                                                || (sub_1B1AE717C(),
                                                                                                    (result = swift_dynamicCastMetatype()) != 0))
                                                                                              {
                                                                                                v6 = 0;
                                                                                                v8 = 0;
                                                                                                v7 = 52;
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                                result = swift_dynamicCastMetatype();
                                                                                                if (result || (sub_1B1E0F2FC(), (result = swift_dynamicCastMetatype()) != 0))
                                                                                                {
                                                                                                  v6 = 0;
                                                                                                  v8 = 0;
                                                                                                  v7 = 53;
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  sub_1B1E0F368();
                                                                                                  result = swift_dynamicCastMetatype();
                                                                                                  if (result || (sub_1B1791524(0, &qword_1EEF5EE20, (uint64_t (*)(uint64_t))sub_1B1E0F368, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                                                                  {
                                                                                                    v6 = 0;
                                                                                                    v8 = 0;
                                                                                                    v7 = 54;
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    sub_1B1E0F3DC();
                                                                                                    result = swift_dynamicCastMetatype();
                                                                                                    if (result || (sub_1B1791524(0, &qword_1EEF5EE28, (uint64_t (*)(uint64_t))sub_1B1E0F3DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                                                                    {
                                                                                                      v6 = 0;
                                                                                                      v8 = 0;
                                                                                                      v7 = 55;
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      sub_1B1E0F450();
                                                                                                      result = swift_dynamicCastMetatype();
                                                                                                      if (result || (sub_1B1791524(0, &qword_1EEF5EE30, (uint64_t (*)(uint64_t))sub_1B1E0F450, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                                                                      {
                                                                                                        v6 = 0;
                                                                                                        v8 = 0;
                                                                                                        v7 = 56;
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
                                                                                                        result = swift_dynamicCastMetatype();
                                                                                                        if (result || (sub_1B1E0F4C4(), (result = swift_dynamicCastMetatype()) != 0))
                                                                                                        {
                                                                                                          v6 = 0;
                                                                                                          v8 = 0;
                                                                                                          v7 = 57;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          sub_1B1AEB244(0);
                                                                                                          result = swift_dynamicCastMetatype();
                                                                                                          if (result || (sub_1B1791524(0, &qword_1EEF5EE38, (uint64_t (*)(uint64_t))sub_1B1AEB244, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]), (result = swift_dynamicCastMetatype()) != 0))
                                                                                                          {
                                                                                                            v6 = 0;
                                                                                                            v8 = 0;
                                                                                                            v7 = 58;
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            v14 = sub_1B207A300();
                                                                                                            v15 = v9;
                                                                                                            strcpy(v13, "Swift.Optional");
                                                                                                            v13[15] = -18;
                                                                                                            sub_1B1A2044C();
                                                                                                            sub_1B1A20490();
                                                                                                            v10 = sub_1B222862C();
                                                                                                            result = swift_bridgeObjectRelease();
                                                                                                            if ((v10 & 1) == 0)
                                                                                                            {
                                                                                                              v14 = a1;
                                                                                                              sub_1B1B9CCA4();
                                                                                                              v11 = sub_1B22287AC();
                                                                                                              sub_1B1E8DB68(v11, v12, MEMORY[0x18], v13);
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              result = sub_1B1A18378((uint64_t)v13, (uint64_t)&v14, &qword_1EEF5EE40, (uint64_t)&_s12MetadataTypeO6CustomVN);
                                                                                                              v7 = v15;
                                                                                                              if (v15)
                                                                                                              {
                                                                                                                v6 = v14;
                                                                                                                v8 = v16;
                                                                                                                v5 = v17;
                                                                                                                goto LABEL_9;
                                                                                                              }
                                                                                                            }
                                                                                                            v6 = 0;
                                                                                                            v8 = 0;
                                                                                                            v7 = 42;
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v5 = 0uLL;
  }
LABEL_9:
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t sub_1B1E0E5B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  ValueMetadata *DynamicType;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v30[5];

  sub_1B1791524(0, (unint64_t *)&qword_1EEF5DA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEDFC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v30[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v30[-1] - v10;
  v12 = sub_1B222A108();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v30[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A02864((uint64_t)a1, (uint64_t)v30);
  sub_1B222A0D8();
  sub_1B19FA070(a1, a1[3]);
  DynamicType = (ValueMetadata *)swift_getDynamicType();
  sub_1B222A0F0();
  v18 = sub_1B222A0E4();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18) == 1)
    goto LABEL_15;
  sub_1B1B25C14((uint64_t)v11, (uint64_t)v7);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v7, v18);
  if (v20 == *MEMORY[0x1E0DEDFB8])
  {
    if (DynamicType == &type metadata for Entity)
    {
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 42;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      goto LABEL_17;
    }
LABEL_15:
    sub_1B1E0D3EC((uint64_t)DynamicType, (uint64_t)v30);
    v21 = v30[0];
    v25 = v30[1];
    v22 = v30[2];
    v23 = v30[3];
    v24 = v30[4];
    goto LABEL_16;
  }
  if (v20 == *MEMORY[0x1E0DEDFB0])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 42;
  }
  else
  {
    if (v20 != *MEMORY[0x1E0DEDFA8])
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    sub_1B19FA070(a1, a1[3]);
    v26 = swift_getDynamicType();
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    if (swift_conformsToProtocol2())
      v27 = v26;
    else
      v27 = 0;
    if (v27)
      v25 = 41;
    else
      v25 = 42;
  }
LABEL_17:
  result = sub_1B1E0EBB0((uint64_t)v11);
  *a2 = v21;
  a2[1] = v25;
  a2[2] = v22;
  a2[3] = v23;
  a2[4] = v24;
  return result;
}

uint64_t sub_1B1E0E85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  int v29;
  uint64_t v30;
  unint64_t v31;

  if (qword_1ED4BB380 != -1)
    swift_once();
  v6 = qword_1ED4D0F20;
  if (!*(_QWORD *)(qword_1ED4D0F20 + 16))
  {
LABEL_7:
    v30 = a1;
    v31 = a2;
    sub_1B1A2044C();
    sub_1B1A20490();
    if ((sub_1B222862C() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      if ((sub_1B2228914() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1B2228830();
        v15 = sub_1B1DCD8E8();
        v17 = v16;
        v19 = v18;
        v21 = v20;
        swift_bridgeObjectRelease();
        a1 = MEMORY[0x1B5E20388](v15, v17, v19, v21);
        v23 = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v23;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v25 = MEMORY[0x10];
      if (*(_QWORD *)(MEMORY[0x10] + 16))
      {
        swift_bridgeObjectRetain();
        v26 = sub_1B1DC3B00(a1, a2);
        if ((v27 & 1) != 0)
        {
          v28 = (uint64_t *)(*(_QWORD *)(v25 + 56) + 40 * v26);
          v10 = *v28;
          v11 = v28[1];
          v12 = v28[2];
          v13 = v28[3];
          v14 = v28[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      if (qword_1ED4BF430 != -1)
        swift_once();
      v31 = 0xE000000000000000;
      swift_retain();
      sub_1B2229430();
      sub_1B2228890();
      sub_1B2228890();
      v29 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v30 = 0;
      swift_retain();
      sub_1B1F1AD70(v29, &v30, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_release();
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
    v10 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v11 = 59;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1B1DC3B00(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v9 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 40 * v7);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  v14 = v9[4];
  sub_1B19FA2B4(*v9, v11);
LABEL_15:
  result = swift_bridgeObjectRelease_n();
LABEL_23:
  *a3 = v10;
  a3[1] = v11;
  a3[2] = v12;
  a3[3] = v13;
  a3[4] = v14;
  return result;
}

uint64_t sub_1B1E0EBB0(uint64_t a1)
{
  uint64_t v2;

  sub_1B1791524(0, (unint64_t *)&qword_1EEF5DA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEDFC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B1E0EC04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5ED38)
  {
    sub_1B19F8E54(255, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEDD20]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5ED38);
  }
}

void sub_1B1E0EC78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5ED40)
  {
    sub_1B19F8E54(255, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5ED40);
  }
}

void sub_1B1E0ECEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5ED48)
  {
    sub_1B19F8E54(255, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5ED48);
  }
}

void sub_1B1E0ED60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5ED50)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5ED50);
  }
}

void sub_1B1E0EDD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5ED58)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5ED58);
  }
}

void sub_1B1E0EE48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDC0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDC0);
  }
}

void sub_1B1E0EEBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDC8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDC8);
  }
}

void sub_1B1E0EF30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDD0)
  {
    sub_1B1A02758(255, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDD0);
  }
}

void sub_1B1E0EF9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDD8)
  {
    sub_1B1A02758(255, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDD8);
  }
}

void sub_1B1E0F008()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDE0)
  {
    sub_1B1A02758(255, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDE0);
  }
}

void sub_1B1E0F074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDE8)
  {
    sub_1B1A02758(255, &qword_1EEF5CA40, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDE8);
  }
}

void sub_1B1E0F0E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDF0)
  {
    sub_1B1A02758(255, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDF0);
  }
}

void sub_1B1E0F14C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EDF8)
  {
    sub_1B1A02758(255, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EDF8);
  }
}

void sub_1B1E0F1B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EE00)
  {
    sub_1B1A02758(255, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EE00);
  }
}

void sub_1B1E0F224()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EE08)
  {
    sub_1B1A02758(255, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EE08);
  }
}

void sub_1B1E0F290()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EE10)
  {
    sub_1B1A02758(255, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EE10);
  }
}

void sub_1B1E0F2FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EE18)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EE18);
  }
}

void sub_1B1E0F368()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5B478)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    v0 = sub_1B2228B6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5B478);
  }
}

void sub_1B1E0F3DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5B468)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v0 = sub_1B2228B6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5B468);
  }
}

void sub_1B1E0F450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BA500)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v0 = sub_1B2228B6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BA500);
  }
}

void sub_1B1E0F4C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BA4B8)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BA4B8);
  }
}

uint64_t sub_1B1E0F530(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1B1E0F654()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1E0F688()
{
  return swift_deallocObject();
}

uint64_t sub_1B1E0F698()
{
  return swift_deallocObject();
}

uint64_t sub_1B1E0F6A8()
{
  return swift_deallocObject();
}

uint64_t sub_1B1E0F6B8()
{
  return swift_deallocObject();
}

uint64_t sub_1B1E0F6C8()
{
  return swift_deallocObject();
}

uint64_t sub_1B1E0F6D8()
{
  return swift_deallocObject();
}

unint64_t sub_1B1E0F6E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4B7310;
  if (!qword_1ED4B7310)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDD70], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4B7310);
  }
  return result;
}

unint64_t sub_1B1E0F750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4B7330;
  if (!qword_1ED4B7330)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDDC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4B7330);
  }
  return result;
}

unint64_t sub_1B1E0F7B8()
{
  unint64_t result;

  result = qword_1EEF5EE48;
  if (!qword_1EEF5EE48)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22829D0, &type metadata for ColorU8);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE48);
  }
  return result;
}

unint64_t sub_1B1E0F7FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4B9F30;
  if (!qword_1ED4B9F30)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
    result = MEMORY[0x1B5E23E74](&unk_1B22B9C94, v1);
    atomic_store(result, (unint64_t *)&qword_1ED4B9F30);
  }
  return result;
}

unint64_t sub_1B1E0F864()
{
  unint64_t result;

  result = qword_1EEF5EE50;
  if (!qword_1EEF5EE50)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296678, &_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE50);
  }
  return result;
}

uint64_t sub_1B1E0F8A8(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1B5E23F88);
  return result;
}

uint64_t sub_1B1E0F8DC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1B2228110();
    result = MEMORY[0x1B5E23E74](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1E0F91C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED4BA4A8;
  if (!qword_1ED4BA4A8)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED4BA4A8);
  }
  return result;
}

unint64_t sub_1B1E0F98C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED4BA4C8;
  if (!qword_1ED4BA4C8)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEB1C0];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED4BA4C8);
  }
  return result;
}

unint64_t sub_1B1E0F9FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED4BA4D8;
  if (!qword_1ED4BA4D8)
  {
    sub_1B1A02758(255, &qword_1ED4BA4D0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEB448];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED4BA4D8);
  }
  return result;
}

unint64_t sub_1B1E0FA6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EE68;
  if (!qword_1EEF5EE68)
  {
    sub_1B1A02758(255, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDC90];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE68);
  }
  return result;
}

unint64_t sub_1B1E0FADC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EE70;
  if (!qword_1EEF5EE70)
  {
    sub_1B1A02758(255, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDBF8];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE70);
  }
  return result;
}

unint64_t sub_1B1E0FB4C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EE78;
  if (!qword_1EEF5EE78)
  {
    sub_1B1A02758(255, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDB78];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE78);
  }
  return result;
}

unint64_t sub_1B1E0FBBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EE80;
  if (!qword_1EEF5EE80)
  {
    sub_1B1A02758(255, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDA90];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE80);
  }
  return result;
}

unint64_t sub_1B1E0FC2C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EE88;
  if (!qword_1EEF5EE88)
  {
    sub_1B1A02758(255, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEE1C0];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE88);
  }
  return result;
}

unint64_t sub_1B1E0FC9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EE90;
  if (!qword_1EEF5EE90)
  {
    sub_1B1A02758(255, &qword_1EEF5CA40, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEE128];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE90);
  }
  return result;
}

unint64_t sub_1B1E0FD0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EE98;
  if (!qword_1EEF5EE98)
  {
    sub_1B1A02758(255, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEE098];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EE98);
  }
  return result;
}

unint64_t sub_1B1E0FD7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EEA0;
  if (!qword_1EEF5EEA0)
  {
    sub_1B1A02758(255, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDE98];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEA0);
  }
  return result;
}

unint64_t sub_1B1E0FDEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EEA8;
  if (!qword_1EEF5EEA8)
  {
    sub_1B1A02758(255, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEAFC0];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEA8);
  }
  return result;
}

uint64_t sub_1B1E0FE5C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v8 = a2;
    result = MEMORY[0x1B5E23E74](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1E0FED8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5EEB0;
  if (!qword_1EEF5EEB0)
  {
    sub_1B19F8E54(255, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDDC8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEB0);
  }
  return result;
}

unint64_t sub_1B1E0FF40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5E220;
  if (!qword_1EEF5E220)
  {
    sub_1B19F8E54(255, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDD70], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5E220);
  }
  return result;
}

unint64_t sub_1B1E0FFA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5EEB8;
  if (!qword_1EEF5EEB8)
  {
    sub_1B19F8E54(255, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEDD20]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDD40], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEB8);
  }
  return result;
}

uint64_t sub_1B1E10010(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1B1A02758(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1B1E10068()
{
  unint64_t result;

  result = qword_1EEF5EEC8;
  if (!qword_1EEF5EEC8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296650, &_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEC8);
  }
  return result;
}

uint64_t sub_1B1E100AC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1B1AEB244(255);
    v10 = v9;
    v11 = sub_1B1E0F8DC(a2, a3);
    result = MEMORY[0x1B5E23E74](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1E10124()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5AC40;
  if (!qword_1EEF5AC40)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5AC40);
  }
  return result;
}

unint64_t sub_1B1E10194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4B7318;
  if (!qword_1ED4B7318)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDDB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4B7318);
  }
  return result;
}

unint64_t sub_1B1E101FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4B72F8;
  if (!qword_1ED4B72F8)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDD60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4B72F8);
  }
  return result;
}

uint64_t sub_1B1E10264(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9 = a3();
    result = MEMORY[0x1B5E23E74](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1E102C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4B72D8;
  if (!qword_1ED4B72D8)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDD30], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4B72D8);
  }
  return result;
}

unint64_t sub_1B1E10330()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF58BD8;
  if (!qword_1EEF58BD8)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEB198];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF58BD8);
  }
  return result;
}

unint64_t sub_1B1E103A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EEE8;
  if (!qword_1EEF5EEE8)
  {
    sub_1B1A02758(255, &qword_1ED4BA4D0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEB420];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEE8);
  }
  return result;
}

unint64_t sub_1B1E10410()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EEF0;
  if (!qword_1EEF5EEF0)
  {
    sub_1B1A02758(255, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDC68];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEF0);
  }
  return result;
}

unint64_t sub_1B1E10480()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EEF8;
  if (!qword_1EEF5EEF8)
  {
    sub_1B1A02758(255, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDBD0];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EEF8);
  }
  return result;
}

unint64_t sub_1B1E104F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EF00;
  if (!qword_1EEF5EF00)
  {
    sub_1B1A02758(255, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDB60];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF00);
  }
  return result;
}

unint64_t sub_1B1E10560()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EF08;
  if (!qword_1EEF5EF08)
  {
    sub_1B1A02758(255, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDA78];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF08);
  }
  return result;
}

unint64_t sub_1B1E105D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EF10;
  if (!qword_1EEF5EF10)
  {
    sub_1B1A02758(255, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEE198];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF10);
  }
  return result;
}

unint64_t sub_1B1E10640()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EF18;
  if (!qword_1EEF5EF18)
  {
    sub_1B1A02758(255, &qword_1EEF5CA40, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEE100];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF18);
  }
  return result;
}

unint64_t sub_1B1E106B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EF20;
  if (!qword_1EEF5EF20)
  {
    sub_1B1A02758(255, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEE070];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF20);
  }
  return result;
}

unint64_t sub_1B1E10720()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EF28;
  if (!qword_1EEF5EF28)
  {
    sub_1B1A02758(255, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDE78];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF28);
  }
  return result;
}

unint64_t sub_1B1E10790()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5EF30;
  if (!qword_1EEF5EF30)
  {
    sub_1B1A02758(255, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEAFA8];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF30);
  }
  return result;
}

uint64_t sub_1B1E10800(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v8 = a2;
    result = MEMORY[0x1B5E23E74](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1E1087C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF63460;
  if (!qword_1EEF63460)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
    result = MEMORY[0x1B5E23E74](&unk_1B22B9C6C, v1);
    atomic_store(result, (unint64_t *)&qword_1EEF63460);
  }
  return result;
}

unint64_t sub_1B1E108E4()
{
  unint64_t result;

  result = qword_1EEF5EF38;
  if (!qword_1EEF5EF38)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22829A8, &type metadata for ColorU8);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF38);
  }
  return result;
}

unint64_t sub_1B1E10928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5EF40;
  if (!qword_1EEF5EF40)
  {
    sub_1B19F8E54(255, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDDB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF40);
  }
  return result;
}

unint64_t sub_1B1E10990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5E228;
  if (!qword_1EEF5E228)
  {
    sub_1B19F8E54(255, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDD60], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5E228);
  }
  return result;
}

unint64_t sub_1B1E109F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5EF48;
  if (!qword_1EEF5EF48)
  {
    sub_1B19F8E54(255, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEDD20]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDD30], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF48);
  }
  return result;
}

uint64_t sub_1B1E10A60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v67[5];
  uint64_t v68;
  unint64_t v69;

  sub_1B1791524(0, &qword_1EEF5EFA0, (uint64_t (*)(uint64_t))sub_1B1E11E64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B2295CC0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v3 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = v3;
  *(_OWORD *)(v2 + 80) = xmmword_1B2244C80;
  *(_QWORD *)(v2 + 96) = 0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_QWORD *)(v2 + 120) = MEMORY[0x1E0DEDE70];
  *(_OWORD *)(v2 + 128) = xmmword_1B228CCD0;
  *(_QWORD *)(v2 + 144) = 0;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_QWORD *)(v2 + 168) = MEMORY[0x1E0DEE068];
  *(_OWORD *)(v2 + 176) = xmmword_1B228CCC0;
  *(_OWORD *)(v2 + 192) = 0u;
  v4 = MEMORY[0x1E0DEE0F8];
  *(_QWORD *)(v2 + 208) = 0;
  *(_QWORD *)(v2 + 216) = v4;
  *(_OWORD *)(v2 + 224) = xmmword_1B2295C70;
  *(_OWORD *)(v2 + 240) = 0u;
  v5 = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v2 + 256) = 0;
  *(_QWORD *)(v2 + 264) = v5;
  *(_OWORD *)(v2 + 272) = xmmword_1B2295CA0;
  *(_OWORD *)(v2 + 288) = 0u;
  v6 = MEMORY[0x1E0DEDA70];
  *(_QWORD *)(v2 + 304) = 0;
  *(_QWORD *)(v2 + 312) = v6;
  *(_OWORD *)(v2 + 320) = xmmword_1B2295C90;
  *(_OWORD *)(v2 + 336) = 0u;
  v7 = MEMORY[0x1E0DEDB58];
  *(_QWORD *)(v2 + 352) = 0;
  *(_QWORD *)(v2 + 360) = v7;
  *(_OWORD *)(v2 + 368) = xmmword_1B226DD00;
  *(_OWORD *)(v2 + 384) = 0u;
  v8 = MEMORY[0x1E0DEDBC8];
  *(_QWORD *)(v2 + 400) = 0;
  *(_QWORD *)(v2 + 408) = v8;
  *(_OWORD *)(v2 + 416) = xmmword_1B2295C80;
  *(_OWORD *)(v2 + 432) = 0u;
  v9 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v2 + 448) = 0;
  *(_QWORD *)(v2 + 456) = v9;
  *(_OWORD *)(v2 + 464) = xmmword_1B2295CD0;
  *(_OWORD *)(v2 + 480) = 0u;
  v10 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v2 + 496) = 0;
  *(_QWORD *)(v2 + 504) = v10;
  *(_OWORD *)(v2 + 512) = xmmword_1B2295CE0;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD20];
  sub_1B19F8E54(0, &qword_1ED4BB090, (uint64_t (*)(void))sub_1B1AF0D08, v4, MEMORY[0x1E0DEDD20]);
  *(_QWORD *)(v2 + 528) = 0;
  *(_OWORD *)(v2 + 536) = 0u;
  *(_QWORD *)(v2 + 552) = v12;
  *(_OWORD *)(v2 + 560) = xmmword_1B2295CF0;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50];
  sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  *(_QWORD *)(v2 + 576) = 0;
  *(_OWORD *)(v2 + 584) = 0u;
  *(_QWORD *)(v2 + 600) = v14;
  *(_OWORD *)(v2 + 608) = xmmword_1B2295D00;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8];
  sub_1B19F8E54(0, &qword_1ED4BB0F8, (uint64_t (*)(void))sub_1B1AF0D08, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  *(_QWORD *)(v2 + 624) = 0;
  *(_OWORD *)(v2 + 632) = 0u;
  *(_QWORD *)(v2 + 648) = v16;
  *(_OWORD *)(v2 + 656) = xmmword_1B2295C60;
  *(_QWORD *)(v2 + 672) = 0;
  v17 = MEMORY[0x1E0DEB188];
  *(_OWORD *)(v2 + 680) = 0u;
  *(_QWORD *)(v2 + 696) = v17;
  *(_OWORD *)(v2 + 704) = xmmword_1B2285F70;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, v17, v11);
  *(_QWORD *)(v2 + 720) = 0;
  *(_OWORD *)(v2 + 728) = 0u;
  *(_QWORD *)(v2 + 744) = v18;
  *(_OWORD *)(v2 + 752) = xmmword_1B2285F60;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, v17, v13);
  *(_QWORD *)(v2 + 768) = 0;
  *(_OWORD *)(v2 + 776) = 0u;
  *(_QWORD *)(v2 + 792) = v19;
  *(_OWORD *)(v2 + 800) = xmmword_1B2285F50;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, v17, v15);
  *(_QWORD *)(v2 + 816) = 0;
  *(_OWORD *)(v2 + 824) = 0u;
  *(_QWORD *)(v2 + 840) = v20;
  *(_OWORD *)(v2 + 848) = xmmword_1B2295D10;
  type metadata accessor for simd_float2x2(0);
  *(_QWORD *)(v2 + 864) = 0;
  *(_OWORD *)(v2 + 872) = 0u;
  *(_QWORD *)(v2 + 888) = v21;
  *(_OWORD *)(v2 + 896) = xmmword_1B2295D20;
  type metadata accessor for simd_float2x3(0);
  *(_QWORD *)(v2 + 912) = 0;
  *(_OWORD *)(v2 + 920) = 0u;
  *(_QWORD *)(v2 + 936) = v22;
  *(_OWORD *)(v2 + 944) = xmmword_1B2295D30;
  type metadata accessor for simd_float2x4(0);
  *(_QWORD *)(v2 + 960) = 0;
  *(_OWORD *)(v2 + 968) = 0u;
  *(_QWORD *)(v2 + 984) = v23;
  *(_OWORD *)(v2 + 992) = xmmword_1B2295D40;
  type metadata accessor for simd_float3x2(0);
  *(_QWORD *)(v2 + 1008) = 0;
  *(_OWORD *)(v2 + 1016) = 0u;
  *(_QWORD *)(v2 + 1032) = v24;
  *(_OWORD *)(v2 + 1040) = xmmword_1B2295D50;
  type metadata accessor for simd_float3x3(0);
  *(_QWORD *)(v2 + 1056) = 0;
  *(_OWORD *)(v2 + 1064) = 0u;
  *(_QWORD *)(v2 + 1080) = v25;
  *(_OWORD *)(v2 + 1088) = xmmword_1B2295D60;
  type metadata accessor for simd_float3x4(0);
  *(_QWORD *)(v2 + 1104) = 0;
  *(_OWORD *)(v2 + 1112) = 0u;
  *(_QWORD *)(v2 + 1128) = v26;
  *(_OWORD *)(v2 + 1136) = xmmword_1B2295D70;
  type metadata accessor for simd_float4x2(0);
  *(_QWORD *)(v2 + 1152) = 0;
  *(_OWORD *)(v2 + 1160) = 0u;
  *(_QWORD *)(v2 + 1176) = v27;
  *(_OWORD *)(v2 + 1184) = xmmword_1B2295D80;
  type metadata accessor for simd_float4x3(0);
  *(_QWORD *)(v2 + 1200) = 0;
  *(_OWORD *)(v2 + 1208) = 0u;
  *(_QWORD *)(v2 + 1224) = v28;
  *(_OWORD *)(v2 + 1232) = xmmword_1B2295D90;
  type metadata accessor for simd_float4x4(0);
  *(_QWORD *)(v2 + 1248) = 0;
  *(_OWORD *)(v2 + 1256) = 0u;
  *(_QWORD *)(v2 + 1272) = v29;
  *(_OWORD *)(v2 + 1280) = xmmword_1B2295C50;
  *(_QWORD *)(v2 + 1296) = 0;
  *(_OWORD *)(v2 + 1304) = 0u;
  *(_QWORD *)(v2 + 1320) = MEMORY[0x1E0DEB070];
  *(_OWORD *)(v2 + 1328) = xmmword_1B2295C40;
  *(_QWORD *)(v2 + 1344) = 0;
  *(_OWORD *)(v2 + 1352) = 0u;
  *(_QWORD *)(v2 + 1368) = &type metadata for ColorU8;
  *(_OWORD *)(v2 + 1376) = xmmword_1B2295C30;
  *(_OWORD *)(v2 + 1392) = 0u;
  *(_QWORD *)(v2 + 1408) = 0;
  *(_QWORD *)(v2 + 1416) = &type metadata for ColorRamp;
  *(_OWORD *)(v2 + 1424) = xmmword_1B2295DA0;
  *(_OWORD *)(v2 + 1440) = 0u;
  *(_QWORD *)(v2 + 1456) = 0;
  *(_QWORD *)(v2 + 1464) = &type metadata for ColorRamp;
  *(_OWORD *)(v2 + 1472) = xmmword_1B2295DB0;
  type metadata accessor for __vfx_sampler1d(0);
  *(_QWORD *)(v2 + 1488) = 0;
  *(_QWORD *)(v2 + 1504) = 0;
  *(_QWORD *)(v2 + 1496) = 0;
  *(_QWORD *)(v2 + 1512) = v30;
  *(_OWORD *)(v2 + 1520) = xmmword_1B2295DC0;
  type metadata accessor for __vfx_sampler2d(0);
  *(_QWORD *)(v2 + 1536) = 0;
  *(_QWORD *)(v2 + 1552) = 0;
  *(_QWORD *)(v2 + 1544) = 0;
  *(_QWORD *)(v2 + 1560) = v31;
  *(_OWORD *)(v2 + 1568) = xmmword_1B2295DD0;
  type metadata accessor for __vfx_sampler3d(0);
  *(_QWORD *)(v2 + 1584) = 0;
  *(_QWORD *)(v2 + 1600) = 0;
  *(_QWORD *)(v2 + 1592) = 0;
  *(_QWORD *)(v2 + 1608) = v32;
  *(_OWORD *)(v2 + 1616) = xmmword_1B2295DE0;
  *(_QWORD *)(v2 + 1632) = 0;
  *(_QWORD *)(v2 + 1648) = 0;
  *(_QWORD *)(v2 + 1640) = 0;
  *(_QWORD *)(v2 + 1656) = &_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVN;
  *(_OWORD *)(v2 + 1664) = xmmword_1B2295CB0;
  *(_QWORD *)(v2 + 1680) = 0;
  *(_QWORD *)(v2 + 1696) = 0;
  *(_QWORD *)(v2 + 1688) = 0;
  v33 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 1704) = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v2 + 1712) = xmmword_1B2295DF0;
  v34 = sub_1B2228110();
  *(_QWORD *)(v2 + 1728) = 0;
  *(_QWORD *)(v2 + 1744) = 0;
  *(_QWORD *)(v2 + 1736) = 0;
  *(_QWORD *)(v2 + 1752) = v34;
  *(_OWORD *)(v2 + 1760) = xmmword_1B2295E00;
  type metadata accessor for simd_quatf(0);
  *(_QWORD *)(v2 + 1776) = 0;
  *(_QWORD *)(v2 + 1792) = 0;
  *(_QWORD *)(v2 + 1784) = 0;
  *(_QWORD *)(v2 + 1800) = v35;
  *(_OWORD *)(v2 + 1808) = xmmword_1B2295C20;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, v17, (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
  *(_QWORD *)(v2 + 1824) = 0;
  *(_QWORD *)(v2 + 1840) = 0;
  *(_QWORD *)(v2 + 1832) = 0;
  *(_QWORD *)(v2 + 1848) = v36;
  *(_OWORD *)(v2 + 1856) = xmmword_1B2295E10;
  *(_QWORD *)(v2 + 1872) = 0;
  *(_QWORD *)(v2 + 1888) = 0;
  *(_QWORD *)(v2 + 1880) = 0;
  *(_QWORD *)(v2 + 1896) = v36;
  *(_OWORD *)(v2 + 1904) = xmmword_1B2295E20;
  v37 = MEMORY[0x1E0DEB848];
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, v10, MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  *(_QWORD *)(v2 + 1920) = 0;
  *(_QWORD *)(v2 + 1936) = 0;
  *(_QWORD *)(v2 + 1928) = 0;
  *(_QWORD *)(v2 + 1944) = v38;
  *(_OWORD *)(v2 + 1952) = xmmword_1B2295E30;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, v17, MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))v37);
  *(_QWORD *)(v2 + 1968) = 0;
  *(_QWORD *)(v2 + 1984) = 0;
  *(_QWORD *)(v2 + 1976) = 0;
  *(_QWORD *)(v2 + 1992) = v39;
  *(_OWORD *)(v2 + 2000) = xmmword_1B2295E40;
  v40 = MEMORY[0x1E0DEAEC8];
  sub_1B1A02758(0, &qword_1EEF5CA48, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v2 + 2016) = 0;
  *(_QWORD *)(v2 + 2032) = 0;
  *(_QWORD *)(v2 + 2024) = 0;
  *(_QWORD *)(v2 + 2040) = v41;
  *(_OWORD *)(v2 + 2048) = xmmword_1B2295E50;
  sub_1B1A02758(0, &qword_1ED4BA510, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2064) = 0;
  *(_QWORD *)(v2 + 2080) = 0;
  *(_QWORD *)(v2 + 2072) = 0;
  *(_QWORD *)(v2 + 2088) = v42;
  *(_OWORD *)(v2 + 2096) = xmmword_1B2295E60;
  sub_1B1A02758(0, &qword_1ED4BA528, MEMORY[0x1E0DEE068], (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2112) = 0;
  *(_QWORD *)(v2 + 2128) = 0;
  *(_QWORD *)(v2 + 2120) = 0;
  *(_QWORD *)(v2 + 2136) = v43;
  *(_OWORD *)(v2 + 2144) = xmmword_1B2295E70;
  sub_1B1A02758(0, &qword_1EEF5CA40, v4, (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2160) = 0;
  *(_QWORD *)(v2 + 2168) = 0;
  *(_QWORD *)(v2 + 2176) = 0;
  *(_QWORD *)(v2 + 2184) = v44;
  *(_OWORD *)(v2 + 2192) = xmmword_1B2295E80;
  sub_1B1A02758(0, &qword_1EEF5CA38, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2208) = 0;
  *(_QWORD *)(v2 + 2216) = 0;
  *(_QWORD *)(v2 + 2224) = 0;
  *(_QWORD *)(v2 + 2232) = v45;
  *(_OWORD *)(v2 + 2240) = xmmword_1B2295E90;
  sub_1B1A02758(0, &qword_1EEF5CA30, MEMORY[0x1E0DEDA70], (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2256) = 0;
  *(_QWORD *)(v2 + 2264) = 0;
  *(_QWORD *)(v2 + 2272) = 0;
  *(_QWORD *)(v2 + 2280) = v46;
  *(_OWORD *)(v2 + 2288) = xmmword_1B2295EA0;
  sub_1B1A02758(0, &qword_1EEF5CA28, MEMORY[0x1E0DEDB58], (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2304) = 0;
  *(_QWORD *)(v2 + 2312) = 0;
  *(_QWORD *)(v2 + 2320) = 0;
  *(_QWORD *)(v2 + 2328) = v47;
  *(_OWORD *)(v2 + 2336) = xmmword_1B2295EB0;
  sub_1B1A02758(0, &qword_1EEF5CA20, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2352) = 0;
  *(_QWORD *)(v2 + 2360) = 0;
  *(_QWORD *)(v2 + 2368) = 0;
  *(_QWORD *)(v2 + 2376) = v48;
  *(_OWORD *)(v2 + 2384) = xmmword_1B2295EC0;
  sub_1B1A02758(0, &qword_1EEF5CA18, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2400) = 0;
  *(_QWORD *)(v2 + 2408) = 0;
  *(_QWORD *)(v2 + 2416) = 0;
  *(_QWORD *)(v2 + 2424) = v49;
  *(_OWORD *)(v2 + 2432) = xmmword_1B2295ED0;
  sub_1B1A02758(0, &qword_1ED4BA4D0, v10, (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2448) = 0;
  *(_QWORD *)(v2 + 2456) = 0;
  *(_QWORD *)(v2 + 2464) = 0;
  *(_QWORD *)(v2 + 2472) = v50;
  *(_OWORD *)(v2 + 2480) = xmmword_1B2285F30;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA4C0, v17, (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2496) = 0;
  *(_QWORD *)(v2 + 2504) = 0;
  *(_QWORD *)(v2 + 2512) = 0;
  *(_QWORD *)(v2 + 2520) = v51;
  *(_OWORD *)(v2 + 2528) = xmmword_1B2295EE0;
  sub_1B1E0F368();
  *(_QWORD *)(v2 + 2544) = 0;
  *(_QWORD *)(v2 + 2552) = 0;
  *(_QWORD *)(v2 + 2560) = 0;
  *(_QWORD *)(v2 + 2568) = v52;
  *(_OWORD *)(v2 + 2576) = xmmword_1B2295EF0;
  sub_1B1E0F3DC();
  *(_QWORD *)(v2 + 2592) = 0;
  *(_QWORD *)(v2 + 2600) = 0;
  *(_QWORD *)(v2 + 2608) = 0;
  *(_QWORD *)(v2 + 2616) = v53;
  *(_OWORD *)(v2 + 2624) = xmmword_1B2285F40;
  sub_1B1E0F450();
  *(_QWORD *)(v2 + 2640) = 0;
  *(_QWORD *)(v2 + 2648) = 0;
  *(_QWORD *)(v2 + 2656) = 0;
  *(_QWORD *)(v2 + 2664) = v54;
  *(_OWORD *)(v2 + 2672) = xmmword_1B2295F00;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, v33, (uint64_t (*)(_QWORD, uint64_t))v40);
  *(_QWORD *)(v2 + 2688) = 0;
  *(_QWORD *)(v2 + 2696) = 0;
  *(_QWORD *)(v2 + 2704) = 0;
  *(_QWORD *)(v2 + 2712) = v55;
  *(_OWORD *)(v2 + 2720) = xmmword_1B2295F10;
  sub_1B1AEB244(0);
  *(_QWORD *)(v2 + 2736) = 0;
  *(_QWORD *)(v2 + 2744) = 0;
  *(_QWORD *)(v2 + 2752) = 0;
  *(_QWORD *)(v2 + 2760) = v56;
  v57 = sub_1B1B8052C(v2);
  if (!v57[2] || (sub_1B1DC3EBC((uint64_t)a1), (v58 & 1) == 0))
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v67[0] = 0;
    v67[1] = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    v68 = 0;
    v69 = 0xE000000000000000;
    sub_1B2228890();
    sub_1B19FA278((uint64_t)a1, (uint64_t)v67);
    sub_1B22295EC();
    v59 = v68;
    v60 = v69;
    v61 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v67[0] = 0;
    swift_retain();
    sub_1B1F1AD70(v61, v67, v59, v60);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v62 = v57[2];
  sub_1B19F8C58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  if (v62 && (v63 = sub_1B1DC3EBC((uint64_t)a1), (v64 & 1) != 0))
    v65 = *(_QWORD *)(v57[7] + 8 * v63);
  else
    v65 = MEMORY[0x1E0DEB188];
  swift_bridgeObjectRelease();
  sub_1B19F8C58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  return v65;
}

uint64_t sub_1B1E11610@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[5];
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1B19FA070(a1, a1[3]);
  sub_1B222A138();
  if (v2)
  {
    sub_1B19FA070(a1, a1[3]);
    sub_1B222A12C();
    sub_1B19FC264((uint64_t)v20, v21);
    v6 = sub_1B2229A60();
    sub_1B1E0E85C(v6, v13, &v24);
    v8 = v25;
    v10 = v27;
    v12 = v28;
    if (v25 >= 0x3B)
    {
      v29 = v22;
      sub_1B19FC264((uint64_t)v20, v21);
      sub_1B1E11C18();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2229AA8();

      sub_1B19F8C58(&v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
      sub_1B19F8C58(&v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
      v9 = v15;
      v8 = v16;
      v11 = v17;
      v10 = v18;
      v12 = v19;
    }
    else
    {
      v11 = v26;
      v9 = v24;

    }
  }
  else
  {
    sub_1B19FA070(v20, v21);
    v5 = sub_1B2229D30();
    sub_1B1E0E85C(v5, v7, v23);
    v9 = v23[0];
    v8 = v23[1];
    v11 = v23[2];
    v10 = v23[3];
    v12 = v23[4];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v20);
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v8;
  a2[2] = v11;
  a2[3] = v10;
  a2[4] = v12;
  return result;
}

uint64_t sub_1B1E11874@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v24 = a2;
  sub_1B19F8E54(0, &qword_1EEF5EF50, (uint64_t (*)(void))sub_1B1E11B04, (uint64_t)&_s12MetadataTypeO6CustomV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v22 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E11B04();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v6;
  v28 = 0;
  v11 = v5;
  v12 = sub_1B22297CC();
  v14 = v13;
  v23 = v12;
  v27 = 1;
  swift_bridgeObjectRetain();
  v15 = sub_1B22297CC();
  v17 = v16;
  v22 = v15;
  sub_1B1E11B48();
  v26 = 2;
  sub_1B1E11BA8(&qword_1EEF5EF68, (uint64_t (*)(void))sub_1B1C23400, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  swift_bridgeObjectRetain();
  sub_1B2229814();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
  v18 = v25;
  swift_bridgeObjectRetain();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v20 = v17;
  v21 = v24;
  *v24 = v23;
  v21[1] = v14;
  v21[2] = v22;
  v21[3] = v20;
  v21[4] = v18;
  return result;
}

unint64_t sub_1B1E11B04()
{
  unint64_t result;

  result = qword_1EEF5EF58;
  if (!qword_1EEF5EF58)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296600, &_s12MetadataTypeO6CustomV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF58);
  }
  return result;
}

void sub_1B1E11B48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5EF60)
  {
    sub_1B1B9C7E0();
    v0 = sub_1B22285A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5EF60);
  }
}

uint64_t sub_1B1E11BA8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1B1E11B48();
    v10 = v9;
    v11[0] = a2();
    v11[1] = a3;
    result = MEMORY[0x1B5E23E74](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1E11C18()
{
  unint64_t result;

  result = qword_1EEF5EF80;
  if (!qword_1EEF5EF80)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229629C, &_s12MetadataTypeO6CustomVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF80);
  }
  return result;
}

unint64_t sub_1B1E11C5C()
{
  unint64_t result;

  result = qword_1EEF5EF88;
  if (!qword_1EEF5EF88)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296274, &_s12MetadataTypeO6CustomVN);
    atomic_store(result, (unint64_t *)&qword_1EEF5EF88);
  }
  return result;
}

unint64_t sub_1B1E11CA0()
{
  unint64_t result;

  result = qword_1ED4BB358;
  if (!qword_1ED4BB358)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22965B0, &_s11MetadataSetC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED4BB358);
  }
  return result;
}

unint64_t sub_1B1E11CE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED4BB3E0;
  if (!qword_1ED4BB3E0)
  {
    sub_1B1E01560();
    v2 = v1;
    v3 = sub_1B1E11D64(&qword_1ED4BB3D0, (uint64_t (*)(void))sub_1B1B259A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEE9A0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED4BB3E0);
  }
  return result;
}

uint64_t sub_1B1E11D64(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1B1C1F5A0(255, (unint64_t *)&qword_1ED4BB3C8, (uint64_t)&_s8MetadataVN, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v10 = v9;
    v11[0] = a3;
    v11[1] = a2();
    result = MEMORY[0x1B5E23E74](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B1E11DEC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF5EF98)
  {
    sub_1B1A02758(255, (unint64_t *)&unk_1ED4BB3A0, (uint64_t)&_s8MetadataVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF5EF98);
  }
}

void sub_1B1E11E64()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF5EFA8)
  {
    sub_1B1B9CCA4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF5EFA8);
  }
}

ValueMetadata *_s11MetadataSetC10CodingKeysOMa()
{
  return &_s11MetadataSetC10CodingKeysON;
}

uint64_t _s12MetadataTypeO6CustomV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1E11F28 + 4 * byte_1B2296179[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1E11F5C + 4 * byte_1B2296174[v4]))();
}

uint64_t sub_1B1E11F5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1E11F64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1E11F6CLL);
  return result;
}

uint64_t sub_1B1E11F78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1E11F80);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1E11F84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1E11F8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12MetadataTypeO6CustomV10CodingKeysOMa()
{
  return &_s12MetadataTypeO6CustomV10CodingKeysON;
}

ValueMetadata *_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVMa()
{
  return &_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedVN;
}

unint64_t sub_1B1E11FBC()
{
  unint64_t result;

  result = qword_1EEF5EFB0;
  if (!qword_1EEF5EFB0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296498, &_s12MetadataTypeO6CustomV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EFB0);
  }
  return result;
}

unint64_t sub_1B1E12004()
{
  unint64_t result;

  result = qword_1EEF5EFB8;
  if (!qword_1EEF5EFB8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296588, &_s11MetadataSetC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EFB8);
  }
  return result;
}

unint64_t sub_1B1E1204C()
{
  unint64_t result;

  result = qword_1ED4BB368;
  if (!qword_1ED4BB368)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22964C0, &_s11MetadataSetC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED4BB368);
  }
  return result;
}

unint64_t sub_1B1E12094()
{
  unint64_t result;

  result = qword_1ED4BB360;
  if (!qword_1ED4BB360)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22964E8, &_s11MetadataSetC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED4BB360);
  }
  return result;
}

unint64_t sub_1B1E120DC()
{
  unint64_t result;

  result = qword_1EEF5EFC0;
  if (!qword_1EEF5EFC0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296408, &_s12MetadataTypeO6CustomV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EFC0);
  }
  return result;
}

unint64_t sub_1B1E12124()
{
  unint64_t result;

  result = qword_1EEF5EFC8;
  if (!qword_1EEF5EFC8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296430, &_s12MetadataTypeO6CustomV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EFC8);
  }
  return result;
}

uint64_t sub_1B1E12168@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;

  v14 = a2;
  sub_1B19F8E54(0, &qword_1EEF5EFD0, (uint64_t (*)(void))sub_1B1E12300, (uint64_t)&_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v13 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1E12300();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v14;
  v11 = sub_1B2229874();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *v10 = v11;
  v10[1] = v11 + 0x76E15D3EFEFDCBBFLL;
  v10[2] = 0xC5004E441C522FB3 * v11 - 0x3AFFB1BBE3ADD04DLL;
  v10[3] = 0x77710069854EE241 - v11;
  v10[4] = 0x39109BB02ACBE635 * v11;
  return result;
}

unint64_t sub_1B1E12300()
{
  unint64_t result;

  result = qword_1EEF5EFD8;
  if (!qword_1EEF5EFD8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2296790, &_s8MetadataV36RandomNumberGeneratorXoshiroWithSeedV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEF5EFD8);
  }
  return result;
}

uint64_t _s11MetadataSetC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1E12384 + 4 * byte_1B229617E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1E123A4 + 4 * byte_1B2296183[v4]))();
}

_BYTE *sub_1B1E12384(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1E123A4(_BYTE *result)
{
  *result = 0;
  return result;
}

