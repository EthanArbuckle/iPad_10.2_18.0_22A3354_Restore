uint64_t assignWithCopy for BindingPropertyDescription.BindingInfo(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B1A708C8(a1 + 24);
      v7 = *(_QWORD *)(a2 + 40);
      *v4 = *v5;
      *(_QWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v5;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *v4 = v8;
  }
  return a1;
}

uint64_t sub_1B1A708C8(uint64_t a1)
{
  destroy for Bindings.Value.EnumInfo();
  return a1;
}

uint64_t assignWithTake for BindingPropertyDescription.BindingInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 32);
  if (!v5)
  {
    sub_1B1A708C8(a1 + 24);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    return a1;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BindingPropertyDescription.BindingInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BindingPropertyDescription.BindingInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BindingPropertyDescription.BindingInfo()
{
  return &type metadata for BindingPropertyDescription.BindingInfo;
}

uint64_t sub_1B1A70A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70A48, (uint64_t (*)(void))sub_1B1A70A8C);
}

unint64_t sub_1B1A70A48()
{
  unint64_t result;

  result = qword_1EEF58D38;
  if (!qword_1EEF58D38)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A00E0, &type metadata for Composition.Operation);
    atomic_store(result, (unint64_t *)&qword_1EEF58D38);
  }
  return result;
}

unint64_t sub_1B1A70A8C()
{
  unint64_t result;

  result = qword_1EEF58D40;
  if (!qword_1EEF58D40)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A00B8, &type metadata for Composition.Operation);
    atomic_store(result, (unint64_t *)&qword_1EEF58D40);
  }
  return result;
}

uint64_t sub_1B1A70AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70AE4, (uint64_t (*)(void))sub_1B1A70B28);
}

unint64_t sub_1B1A70AE4()
{
  unint64_t result;

  result = qword_1EEF5BD80;
  if (!qword_1EEF5BD80)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B227EBD4, &type metadata for VideoCapture.OrientationMode);
    atomic_store(result, (unint64_t *)&qword_1EEF5BD80);
  }
  return result;
}

unint64_t sub_1B1A70B28()
{
  unint64_t result;

  result = qword_1EEF5BD90;
  if (!qword_1EEF5BD90)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B227EBAC, &type metadata for VideoCapture.OrientationMode);
    atomic_store(result, (unint64_t *)&qword_1EEF5BD90);
  }
  return result;
}

uint64_t sub_1B1A70B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70B80, (uint64_t (*)(void))sub_1B1A70BC4);
}

unint64_t sub_1B1A70B80()
{
  unint64_t result;

  result = qword_1EEF58D48;
  if (!qword_1EEF58D48)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22822AC, &type metadata for KillShape.Shape);
    atomic_store(result, (unint64_t *)&qword_1EEF58D48);
  }
  return result;
}

unint64_t sub_1B1A70BC4()
{
  unint64_t result;

  result = qword_1EEF58D50;
  if (!qword_1EEF58D50)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2282284, &type metadata for KillShape.Shape);
    atomic_store(result, (unint64_t *)&qword_1EEF58D50);
  }
  return result;
}

uint64_t sub_1B1A70C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70C1C, (uint64_t (*)(void))sub_1B1A70C60);
}

unint64_t sub_1B1A70C1C()
{
  unint64_t result;

  result = qword_1EEF58D58;
  if (!qword_1EEF58D58)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2281DD0, &type metadata for OrientationConstraint.Mode);
    atomic_store(result, (unint64_t *)&qword_1EEF58D58);
  }
  return result;
}

unint64_t sub_1B1A70C60()
{
  unint64_t result;

  result = qword_1EEF58D60;
  if (!qword_1EEF58D60)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2281DA8, &type metadata for OrientationConstraint.Mode);
    atomic_store(result, (unint64_t *)&qword_1EEF58D60);
  }
  return result;
}

uint64_t sub_1B1A70CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70CB8, (uint64_t (*)(void))sub_1B1A70CFC);
}

unint64_t sub_1B1A70CB8()
{
  unint64_t result;

  result = qword_1ED4BA0D8;
  if (!qword_1ED4BA0D8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228E320, &type metadata for Material.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED4BA0D8);
  }
  return result;
}

unint64_t sub_1B1A70CFC()
{
  unint64_t result;

  result = qword_1EEF58D68;
  if (!qword_1EEF58D68)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228E2F8, &type metadata for Material.Kind);
    atomic_store(result, (unint64_t *)&qword_1EEF58D68);
  }
  return result;
}

uint64_t sub_1B1A70D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70D54, (uint64_t (*)(void))sub_1B1A70D98);
}

unint64_t sub_1B1A70D54()
{
  unint64_t result;

  result = qword_1ED4B93A0;
  if (!qword_1ED4B93A0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2284E2C, &type metadata for ProjectionDirection);
    atomic_store(result, (unint64_t *)&qword_1ED4B93A0);
  }
  return result;
}

unint64_t sub_1B1A70D98()
{
  unint64_t result;

  result = qword_1EEF58D70;
  if (!qword_1EEF58D70)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2284E04, &type metadata for ProjectionDirection);
    atomic_store(result, (unint64_t *)&qword_1EEF58D70);
  }
  return result;
}

uint64_t sub_1B1A70DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70DF0, (uint64_t (*)(void))sub_1B1A70E34);
}

unint64_t sub_1B1A70DF0()
{
  unint64_t result;

  result = qword_1EEF58D78;
  if (!qword_1EEF58D78)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B7BAC, &type metadata for PointCache.Distribution);
    atomic_store(result, (unint64_t *)&qword_1EEF58D78);
  }
  return result;
}

unint64_t sub_1B1A70E34()
{
  unint64_t result;

  result = qword_1EEF58D80;
  if (!qword_1EEF58D80)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B7B84, &type metadata for PointCache.Distribution);
    atomic_store(result, (unint64_t *)&qword_1EEF58D80);
  }
  return result;
}

uint64_t sub_1B1A70E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70E8C, (uint64_t (*)(void))sub_1B1A70ED0);
}

unint64_t sub_1B1A70E8C()
{
  unint64_t result;

  result = qword_1ED4B8BA0;
  if (!qword_1ED4B8BA0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0130, &type metadata for TextureChannel);
    atomic_store(result, (unint64_t *)&qword_1ED4B8BA0);
  }
  return result;
}

unint64_t sub_1B1A70ED0()
{
  unint64_t result;

  result = qword_1EEF58D88;
  if (!qword_1EEF58D88)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0108, &type metadata for TextureChannel);
    atomic_store(result, (unint64_t *)&qword_1EEF58D88);
  }
  return result;
}

uint64_t sub_1B1A70F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70F28, (uint64_t (*)(void))sub_1B1A70F6C);
}

unint64_t sub_1B1A70F28()
{
  unint64_t result;

  result = qword_1EEF58D90;
  if (!qword_1EEF58D90)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B0DC4, &type metadata for ParticleColorOverPosition.GradientMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58D90);
  }
  return result;
}

unint64_t sub_1B1A70F6C()
{
  unint64_t result;

  result = qword_1EEF58D98;
  if (!qword_1EEF58D98)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B0D9C, &type metadata for ParticleColorOverPosition.GradientMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58D98);
  }
  return result;
}

uint64_t sub_1B1A70FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A70FC4, (uint64_t (*)(void))sub_1B1A71008);
}

unint64_t sub_1B1A70FC4()
{
  unint64_t result;

  result = qword_1ED4B8E60;
  if (!qword_1ED4B8E60)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2287794, &type metadata for ParticleSubSpawn.Mode);
    atomic_store(result, (unint64_t *)&qword_1ED4B8E60);
  }
  return result;
}

unint64_t sub_1B1A71008()
{
  unint64_t result;

  result = qword_1EEF58DA0;
  if (!qword_1EEF58DA0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228776C, &type metadata for ParticleSubSpawn.Mode);
    atomic_store(result, (unint64_t *)&qword_1EEF58DA0);
  }
  return result;
}

uint64_t sub_1B1A7104C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71060, (uint64_t (*)(void))sub_1B1A710A4);
}

unint64_t sub_1B1A71060()
{
  unint64_t result;

  result = qword_1EEF58DA8;
  if (!qword_1EEF58DA8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22BEF9C, &type metadata for ToneMappingOperator);
    atomic_store(result, (unint64_t *)&qword_1EEF58DA8);
  }
  return result;
}

unint64_t sub_1B1A710A4()
{
  unint64_t result;

  result = qword_1EEF58DB0;
  if (!qword_1EEF58DB0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22BEF74, &type metadata for ToneMappingOperator);
    atomic_store(result, (unint64_t *)&qword_1EEF58DB0);
  }
  return result;
}

uint64_t sub_1B1A710E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A710FC, (uint64_t (*)(void))sub_1B1A71140);
}

unint64_t sub_1B1A710FC()
{
  unint64_t result;

  result = qword_1EEF58DB8;
  if (!qword_1EEF58DB8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22BEFEC, &type metadata for LensBlurQuality);
    atomic_store(result, (unint64_t *)&qword_1EEF58DB8);
  }
  return result;
}

unint64_t sub_1B1A71140()
{
  unint64_t result;

  result = qword_1EEF58DC0;
  if (!qword_1EEF58DC0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22BEFC4, &type metadata for LensBlurQuality);
    atomic_store(result, (unint64_t *)&qword_1EEF58DC0);
  }
  return result;
}

uint64_t sub_1B1A71184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71198, (uint64_t (*)(void))sub_1B1A711DC);
}

unint64_t sub_1B1A71198()
{
  unint64_t result;

  result = qword_1EEF58DC8;
  if (!qword_1EEF58DC8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0180, &type metadata for FluidSolver2DSolverBorderType);
    atomic_store(result, (unint64_t *)&qword_1EEF58DC8);
  }
  return result;
}

unint64_t sub_1B1A711DC()
{
  unint64_t result;

  result = qword_1EEF58DD0;
  if (!qword_1EEF58DD0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0158, &type metadata for FluidSolver2DSolverBorderType);
    atomic_store(result, (unint64_t *)&qword_1EEF58DD0);
  }
  return result;
}

uint64_t sub_1B1A71220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71234, (uint64_t (*)(void))sub_1B1A71278);
}

unint64_t sub_1B1A71234()
{
  unint64_t result;

  result = qword_1EEF58DD8;
  if (!qword_1EEF58DD8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A01D0, &type metadata for FluidSolver2DSolverSetupType);
    atomic_store(result, (unint64_t *)&qword_1EEF58DD8);
  }
  return result;
}

unint64_t sub_1B1A71278()
{
  unint64_t result;

  result = qword_1EEF58DE0;
  if (!qword_1EEF58DE0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A01A8, &type metadata for FluidSolver2DSolverSetupType);
    atomic_store(result, (unint64_t *)&qword_1EEF58DE0);
  }
  return result;
}

uint64_t sub_1B1A712BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A712D0, (uint64_t (*)(void))sub_1B1A71314);
}

unint64_t sub_1B1A712D0()
{
  unint64_t result;

  result = qword_1EEF58DE8;
  if (!qword_1EEF58DE8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0220, &type metadata for FlockingSizeMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58DE8);
  }
  return result;
}

unint64_t sub_1B1A71314()
{
  unint64_t result;

  result = qword_1EEF58DF0;
  if (!qword_1EEF58DF0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A01F8, &type metadata for FlockingSizeMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58DF0);
  }
  return result;
}

uint64_t sub_1B1A71358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A7136C, (uint64_t (*)(void))sub_1B1A713B0);
}

unint64_t sub_1B1A7136C()
{
  unint64_t result;

  result = qword_1EEF58DF8;
  if (!qword_1EEF58DF8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0270, &type metadata for FlockingLocalAxis);
    atomic_store(result, (unint64_t *)&qword_1EEF58DF8);
  }
  return result;
}

unint64_t sub_1B1A713B0()
{
  unint64_t result;

  result = qword_1EEF58E00;
  if (!qword_1EEF58E00)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0248, &type metadata for FlockingLocalAxis);
    atomic_store(result, (unint64_t *)&qword_1EEF58E00);
  }
  return result;
}

uint64_t sub_1B1A713F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71408, (uint64_t (*)(void))sub_1B1A7144C);
}

unint64_t sub_1B1A71408()
{
  unint64_t result;

  result = qword_1ED4BA1C8;
  if (!qword_1ED4BA1C8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A02C0, &type metadata for NoiseKind);
    atomic_store(result, (unint64_t *)&qword_1ED4BA1C8);
  }
  return result;
}

unint64_t sub_1B1A7144C()
{
  unint64_t result;

  result = qword_1EEF58E08;
  if (!qword_1EEF58E08)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0298, &type metadata for NoiseKind);
    atomic_store(result, (unint64_t *)&qword_1EEF58E08);
  }
  return result;
}

uint64_t sub_1B1A71490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A714A4, (uint64_t (*)(void))sub_1B1A714E8);
}

unint64_t sub_1B1A714A4()
{
  unint64_t result;

  result = qword_1ED4B9B48;
  if (!qword_1ED4B9B48)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B945C, &type metadata for ParticleRibbonTextureMode);
    atomic_store(result, (unint64_t *)&qword_1ED4B9B48);
  }
  return result;
}

unint64_t sub_1B1A714E8()
{
  unint64_t result;

  result = qword_1EEF58E10;
  if (!qword_1EEF58E10)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B9434, &type metadata for ParticleRibbonTextureMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E10);
  }
  return result;
}

uint64_t sub_1B1A7152C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71540, (uint64_t (*)(void))sub_1B1A71584);
}

unint64_t sub_1B1A71540()
{
  unint64_t result;

  result = qword_1ED4B9848;
  if (!qword_1ED4B9848)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B94AC, &type metadata for ParticleRibbonProfile);
    atomic_store(result, (unint64_t *)&qword_1ED4B9848);
  }
  return result;
}

unint64_t sub_1B1A71584()
{
  unint64_t result;

  result = qword_1EEF58E18;
  if (!qword_1EEF58E18)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B9484, &type metadata for ParticleRibbonProfile);
    atomic_store(result, (unint64_t *)&qword_1EEF58E18);
  }
  return result;
}

uint64_t sub_1B1A715C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A715DC, (uint64_t (*)(void))sub_1B1A71620);
}

unint64_t sub_1B1A715DC()
{
  unint64_t result;

  result = qword_1ED4B9A08;
  if (!qword_1ED4B9A08)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228D954, &type metadata for ParticleOrientationMode);
    atomic_store(result, (unint64_t *)&qword_1ED4B9A08);
  }
  return result;
}

unint64_t sub_1B1A71620()
{
  unint64_t result;

  result = qword_1EEF58E20;
  if (!qword_1EEF58E20)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228D92C, &type metadata for ParticleOrientationMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E20);
  }
  return result;
}

uint64_t sub_1B1A71664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71678, (uint64_t (*)(void))sub_1B1A716BC);
}

unint64_t sub_1B1A71678()
{
  unint64_t result;

  result = qword_1ED4B9820;
  if (!qword_1ED4B9820)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228D9A4, &type metadata for ParticleAnimationMode);
    atomic_store(result, (unint64_t *)&qword_1ED4B9820);
  }
  return result;
}

unint64_t sub_1B1A716BC()
{
  unint64_t result;

  result = qword_1EEF58E28;
  if (!qword_1EEF58E28)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228D97C, &type metadata for ParticleAnimationMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E28);
  }
  return result;
}

uint64_t sub_1B1A71700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71714, (uint64_t (*)(void))sub_1B1A71758);
}

unint64_t sub_1B1A71714()
{
  unint64_t result;

  result = qword_1EEF58E30;
  if (!qword_1EEF58E30)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A70C8, &type metadata for ParticlePrimitiveRenderer.Shape);
    atomic_store(result, (unint64_t *)&qword_1EEF58E30);
  }
  return result;
}

unint64_t sub_1B1A71758()
{
  unint64_t result;

  result = qword_1EEF58E38;
  if (!qword_1EEF58E38)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A70A0, &type metadata for ParticlePrimitiveRenderer.Shape);
    atomic_store(result, (unint64_t *)&qword_1EEF58E38);
  }
  return result;
}

uint64_t sub_1B1A7179C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A717B0, (uint64_t (*)(void))sub_1B1A717F4);
}

unint64_t sub_1B1A717B0()
{
  unint64_t result;

  result = qword_1ED4B95E8;
  if (!qword_1ED4B95E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2286090, &type metadata for ParticleQuadRenderer.Shape);
    atomic_store(result, (unint64_t *)&qword_1ED4B95E8);
  }
  return result;
}

unint64_t sub_1B1A717F4()
{
  unint64_t result;

  result = qword_1EEF58E40;
  if (!qword_1EEF58E40)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2286068, &type metadata for ParticleQuadRenderer.Shape);
    atomic_store(result, (unint64_t *)&qword_1EEF58E40);
  }
  return result;
}

uint64_t sub_1B1A71838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A7184C, (uint64_t (*)(void))sub_1B1A71890);
}

unint64_t sub_1B1A7184C()
{
  unint64_t result;

  result = qword_1ED4B9258;
  if (!qword_1ED4B9258)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22915F8, &type metadata for MotionDistribution);
    atomic_store(result, (unint64_t *)&qword_1ED4B9258);
  }
  return result;
}

unint64_t sub_1B1A71890()
{
  unint64_t result;

  result = qword_1EEF58E48;
  if (!qword_1EEF58E48)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22915D0, &type metadata for MotionDistribution);
    atomic_store(result, (unint64_t *)&qword_1EEF58E48);
  }
  return result;
}

uint64_t sub_1B1A718D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A718E8, (uint64_t (*)(void))sub_1B1A7192C);
}

unint64_t sub_1B1A718E8()
{
  unint64_t result;

  result = qword_1ED4B8560;
  if (!qword_1ED4B8560)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291648, &type metadata for EmissionOrder);
    atomic_store(result, (unint64_t *)&qword_1ED4B8560);
  }
  return result;
}

unint64_t sub_1B1A7192C()
{
  unint64_t result;

  result = qword_1EEF58E50;
  if (!qword_1EEF58E50)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291620, &type metadata for EmissionOrder);
    atomic_store(result, (unint64_t *)&qword_1EEF58E50);
  }
  return result;
}

uint64_t sub_1B1A71970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71984, (uint64_t (*)(void))sub_1B1A719C8);
}

unint64_t sub_1B1A71984()
{
  unint64_t result;

  result = qword_1ED4B8E38;
  if (!qword_1ED4B8E38)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B4DBC, &type metadata for ParticleSortMode);
    atomic_store(result, (unint64_t *)&qword_1ED4B8E38);
  }
  return result;
}

unint64_t sub_1B1A719C8()
{
  unint64_t result;

  result = qword_1EEF58E58;
  if (!qword_1EEF58E58)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B4D94, &type metadata for ParticleSortMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E58);
  }
  return result;
}

uint64_t sub_1B1A71A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71A20, (uint64_t (*)(void))sub_1B1A71A64);
}

unint64_t sub_1B1A71A20()
{
  unint64_t result;

  result = qword_1EEF58E60;
  if (!qword_1EEF58E60)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22C5670, &type metadata for OrientationOverVelocity.DirectionAxis);
    atomic_store(result, (unint64_t *)&qword_1EEF58E60);
  }
  return result;
}

unint64_t sub_1B1A71A64()
{
  unint64_t result;

  result = qword_1EEF58E68;
  if (!qword_1EEF58E68)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22C5648, &type metadata for OrientationOverVelocity.DirectionAxis);
    atomic_store(result, (unint64_t *)&qword_1EEF58E68);
  }
  return result;
}

uint64_t sub_1B1A71AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71ABC, (uint64_t (*)(void))sub_1B1A71B00);
}

unint64_t sub_1B1A71ABC()
{
  unint64_t result;

  result = qword_1ED4BA1D8;
  if (!qword_1ED4BA1D8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0310, &type metadata for ScaleMode);
    atomic_store(result, (unint64_t *)&qword_1ED4BA1D8);
  }
  return result;
}

unint64_t sub_1B1A71B00()
{
  unint64_t result;

  result = qword_1EEF58E70;
  if (!qword_1EEF58E70)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A02E8, &type metadata for ScaleMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E70);
  }
  return result;
}

uint64_t sub_1B1A71B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71B58, (uint64_t (*)(void))sub_1B1A71B9C);
}

unint64_t sub_1B1A71B58()
{
  unint64_t result;

  result = qword_1ED4BA0A0;
  if (!qword_1ED4BA0A0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2290474, &type metadata for FillMode);
    atomic_store(result, (unint64_t *)&qword_1ED4BA0A0);
  }
  return result;
}

unint64_t sub_1B1A71B9C()
{
  unint64_t result;

  result = qword_1EEF58E78;
  if (!qword_1EEF58E78)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229044C, &type metadata for FillMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E78);
  }
  return result;
}

uint64_t sub_1B1A71BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71BF4, (uint64_t (*)(void))sub_1B1A71C38);
}

unint64_t sub_1B1A71BF4()
{
  unint64_t result;

  result = qword_1EEF63F90;
  if (!qword_1EEF63F90)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22C1728, &type metadata for TextureMipFilterMode);
    atomic_store(result, (unint64_t *)&qword_1EEF63F90);
  }
  return result;
}

unint64_t sub_1B1A71C38()
{
  unint64_t result;

  result = qword_1EEF63FB0;
  if (!qword_1EEF63FB0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22C1700, &type metadata for TextureMipFilterMode);
    atomic_store(result, (unint64_t *)&qword_1EEF63FB0);
  }
  return result;
}

uint64_t sub_1B1A71C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71C90, (uint64_t (*)(void))sub_1B1A71CD4);
}

unint64_t sub_1B1A71C90()
{
  unint64_t result;

  result = qword_1EEF58E80;
  if (!qword_1EEF58E80)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0040, &type metadata for FilterMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E80);
  }
  return result;
}

unint64_t sub_1B1A71CD4()
{
  unint64_t result;

  result = qword_1EEF58E88;
  if (!qword_1EEF58E88)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0018, &type metadata for FilterMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E88);
  }
  return result;
}

uint64_t sub_1B1A71D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71D2C, (uint64_t (*)(void))sub_1B1A71D70);
}

unint64_t sub_1B1A71D2C()
{
  unint64_t result;

  result = qword_1ED4B7C30;
  if (!qword_1ED4B7C30)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0090, &type metadata for AddressMode);
    atomic_store(result, (unint64_t *)&qword_1ED4B7C30);
  }
  return result;
}

unint64_t sub_1B1A71D70()
{
  unint64_t result;

  result = qword_1EEF58E90;
  if (!qword_1EEF58E90)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22A0068, &type metadata for AddressMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58E90);
  }
  return result;
}

uint64_t sub_1B1A71DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71DC8, (uint64_t (*)(void))sub_1B1A71E0C);
}

unint64_t sub_1B1A71DC8()
{
  unint64_t result;

  result = qword_1EEF58E98;
  if (!qword_1EEF58E98)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229C360, &type metadata for EntitySpace);
    atomic_store(result, (unint64_t *)&qword_1EEF58E98);
  }
  return result;
}

unint64_t sub_1B1A71E0C()
{
  unint64_t result;

  result = qword_1EEF58EA0;
  if (!qword_1EEF58EA0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229C338, &type metadata for EntitySpace);
    atomic_store(result, (unint64_t *)&qword_1EEF58EA0);
  }
  return result;
}

uint64_t sub_1B1A71E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71E64, (uint64_t (*)(void))sub_1B1A71EA8);
}

unint64_t sub_1B1A71E64()
{
  unint64_t result;

  result = qword_1EEF58EA8;
  if (!qword_1EEF58EA8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B4028, &type metadata for EvolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58EA8);
  }
  return result;
}

unint64_t sub_1B1A71EA8()
{
  unint64_t result;

  result = qword_1EEF58EB0;
  if (!qword_1EEF58EB0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B4000, &type metadata for EvolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58EB0);
  }
  return result;
}

uint64_t sub_1B1A71EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71F00, (uint64_t (*)(void))sub_1B1A71F44);
}

unint64_t sub_1B1A71F00()
{
  unint64_t result;

  result = qword_1ED4B7FD0;
  if (!qword_1ED4B7FD0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291698, &type metadata for EmitterShape.Shape);
    atomic_store(result, (unint64_t *)&qword_1ED4B7FD0);
  }
  return result;
}

unint64_t sub_1B1A71F44()
{
  unint64_t result;

  result = qword_1EEF58EB8;
  if (!qword_1EEF58EB8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291670, &type metadata for EmitterShape.Shape);
    atomic_store(result, (unint64_t *)&qword_1EEF58EB8);
  }
  return result;
}

uint64_t sub_1B1A71F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A71F9C, (uint64_t (*)(void))sub_1B1A71FE0);
}

unint64_t sub_1B1A71F9C()
{
  unint64_t result;

  result = qword_1ED4B9100;
  if (!qword_1ED4B9100)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22C4A6C, &type metadata for ParticleColorInit.Mode);
    atomic_store(result, (unint64_t *)&qword_1ED4B9100);
  }
  return result;
}

unint64_t sub_1B1A71FE0()
{
  unint64_t result;

  result = qword_1EEF64530;
  if (!qword_1EEF64530)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22C4A44, &type metadata for ParticleColorInit.Mode);
    atomic_store(result, (unint64_t *)&qword_1EEF64530);
  }
  return result;
}

uint64_t sub_1B1A72024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A72038, (uint64_t (*)(void))sub_1B1A7207C);
}

unint64_t sub_1B1A72038()
{
  unint64_t result;

  result = qword_1ED4B8A70;
  if (!qword_1ED4B8A70)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22904C4, &type metadata for EasingFunction);
    atomic_store(result, (unint64_t *)&qword_1ED4B8A70);
  }
  return result;
}

unint64_t sub_1B1A7207C()
{
  unint64_t result;

  result = qword_1EEF58EC0;
  if (!qword_1EEF58EC0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229049C, &type metadata for EasingFunction);
    atomic_store(result, (unint64_t *)&qword_1EEF58EC0);
  }
  return result;
}

uint64_t sub_1B1A720C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A720D4, (uint64_t (*)(void))sub_1B1A72118);
}

unint64_t sub_1B1A720D4()
{
  unint64_t result;

  result = qword_1ED4BA140;
  if (!qword_1ED4BA140)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229A944, &type metadata for BlendMode);
    atomic_store(result, (unint64_t *)&qword_1ED4BA140);
  }
  return result;
}

unint64_t sub_1B1A72118()
{
  unint64_t result;

  result = qword_1EEF58EC8;
  if (!qword_1EEF58EC8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B229A91C, &type metadata for BlendMode);
    atomic_store(result, (unint64_t *)&qword_1EEF58EC8);
  }
  return result;
}

uint64_t sub_1B1A7215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A72170, (uint64_t (*)(void))sub_1B1A721B4);
}

unint64_t sub_1B1A72170()
{
  unint64_t result;

  result = qword_1ED4B8008;
  if (!qword_1ED4B8008)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22916E8, &type metadata for EmitterShape.Direction);
    atomic_store(result, (unint64_t *)&qword_1ED4B8008);
  }
  return result;
}

unint64_t sub_1B1A721B4()
{
  unint64_t result;

  result = qword_1EEF58ED0;
  if (!qword_1EEF58ED0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22916C0, &type metadata for EmitterShape.Direction);
    atomic_store(result, (unint64_t *)&qword_1EEF58ED0);
  }
  return result;
}

uint64_t sub_1B1A721F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A70054(a1, a2, a3, (uint64_t (*)(void))sub_1B1A7220C, (uint64_t (*)(void))sub_1B1A72250);
}

unint64_t sub_1B1A7220C()
{
  unint64_t result;

  result = qword_1ED4B9158;
  if (!qword_1ED4B9158)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291738, &type metadata for ShapeDistribution);
    atomic_store(result, (unint64_t *)&qword_1ED4B9158);
  }
  return result;
}

unint64_t sub_1B1A72250()
{
  unint64_t result;

  result = qword_1EEF58ED8;
  if (!qword_1EEF58ED8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2291710, &type metadata for ShapeDistribution);
    atomic_store(result, (unint64_t *)&qword_1EEF58ED8);
  }
  return result;
}

uint64_t sub_1B1A72294(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *i;

  v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v7 = v6 + 12 * (int)a1;
    if ((_DWORD)v4 != -1 && *(_DWORD *)(v7 + 8) != (_DWORD)v4)
      return 0;
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32);
    v9 = *(_QWORD *)(v8 + 48);
    v10 = *(_QWORD *)(v9 + 16);
    if (!v10)
      return 0;
    for (i = (_QWORD *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Name; i += 5)
    {
      if (!--v10)
        return 0;
    }
    a2(*(_QWORD *)(v8 + 128) + *i + 16 * *(__int16 *)(v7 + 4));
    return 1;
  }
  return result;
}

uint64_t sub_1B1A72380(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *i;

  v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v7 = v6 + 12 * (int)a1;
    if ((_DWORD)v4 != -1 && *(_DWORD *)(v7 + 8) != (_DWORD)v4)
      return 0;
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32);
    v9 = *(_QWORD *)(v8 + 48);
    v10 = *(_QWORD *)(v9 + 16);
    if (!v10)
      return 0;
    for (i = (_QWORD *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Color; i += 5)
    {
      if (!--v10)
        return 0;
    }
    a2(*(_QWORD *)(v8 + 128) + *i + 16 * *(__int16 *)(v7 + 4));
    return 1;
  }
  return result;
}

uint64_t sub_1B1A7246C(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *i;

  v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v7 = v6 + 12 * (int)a1;
    if ((_DWORD)v4 != -1 && *(_DWORD *)(v7 + 8) != (_DWORD)v4)
      return 0;
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32);
    v9 = *(_QWORD *)(v8 + 48);
    v10 = *(_QWORD *)(v9 + 16);
    if (!v10)
      return 0;
    for (i = (_QWORD *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Orientation; i += 5)
    {
      if (!--v10)
        return 0;
    }
    a2(*(_QWORD *)(v8 + 128) + *i + 16 * *(__int16 *)(v7 + 4));
    return 1;
  }
  return result;
}

uint64_t sub_1B1A72558(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *i;

  v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v7 = v6 + 12 * (int)a1;
    if ((_DWORD)v4 != -1 && *(_DWORD *)(v7 + 8) != (_DWORD)v4)
      return 0;
    v8 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32);
    v9 = *(_QWORD *)(v8 + 48);
    v10 = *(_QWORD *)(v9 + 16);
    if (!v10)
      return 0;
    for (i = (_QWORD *)(v9 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Position; i += 5)
    {
      if (!--v10)
        return 0;
    }
    a2(*(_QWORD *)(v8 + 128) + *i + 16 * *(__int16 *)(v7 + 4));
    return 1;
  }
  return result;
}

uint64_t sub_1B1A72644(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBA4B8(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 144, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A726E8(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBBC1C(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 224, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72794(uint64_t a1, void (*a2)(unsigned __int8 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBC7B4(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 1, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72840(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EB9B80(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 656, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A728E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 56, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72994(uint64_t a1, void (*a2)(unsigned __int8 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBD1F4(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 3, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72A40(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBE364(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 80, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72AEC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBEB84(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 112, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72B90(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBEE84(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 88, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72C3C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBB198(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 20, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72CE0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A74284(a1, a2, a3, type metadata accessor for ParticleInitScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA458) & 1;
}

uint64_t sub_1B1A72D08(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBF3D8(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 176, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72DB4(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBF76C(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 168, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72E60(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBFA30(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 60, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 48, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A72FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A74034(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA598) & 1;
}

uint64_t sub_1B1A72FCC(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EC06E8(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 144, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73078(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A74284(a1, a2, a3, type metadata accessor for ParticleUpdateScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA3F8) & 1;
}

uint64_t sub_1B1A730A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 112, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 36, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 64, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A732A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 4, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73358(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EC2150(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 72, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 44, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A734B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 12, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73564(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBA528(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 96, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 28, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A736B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 40, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73760(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EC3E98(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 28, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A7380C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 24, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A738BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 48, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A7396C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 64, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 56, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 8, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 4, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 32, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A73CEC(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB998C) & 1;
}

uint64_t sub_1B1A73CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 8, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73D94(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBA6E8(*(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 104, a2, a3, v3, a1) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73E40(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EC4FA4(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 2, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 1, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A73F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 16, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A74034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 32, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A740DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 16, a2, a3, v4) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A7418C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 40, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A74234(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A74284(a1, a2, a3, type metadata accessor for TriggerScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA190) & 1;
}

uint64_t sub_1B1A7425C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A74284(a1, a2, a3, type metadata accessor for GraphScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA1F0) & 1;
}

uint64_t sub_1B1A74284(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v5;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = HIDWORD(a1);
  v11 = *(_QWORD *)(a4(0) - 8);
  if (*(_QWORD *)(v11 + 64))
  {
    v12 = *(_QWORD *)(v11 + 72);
    if ((_DWORD)a1 != -1)
      goto LABEL_6;
  }
  else
  {
    v12 = 0;
    if ((_DWORD)a1 != -1)
      goto LABEL_6;
  }
  if (!(_DWORD)v10)
    return 0;
LABEL_6:
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001)
    return 0;
  if ((int)a1 >= *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    return 0;
  v13 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if ((_DWORD)v10 != -1 && *(_DWORD *)(v13 + 12 * (int)a1 + 8) != (_DWORD)v10)
    return 0;
  return a5(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * *(int *)(v13 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v13 + 12 * (int)a1 + 4), v12, a2, a3, v5, a1) & 1;
}

uint64_t sub_1B1A74384(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBACCC) & 1;
}

uint64_t sub_1B1A743BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBA914) & 1;
}

uint64_t sub_1B1A743F4(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v12 = HIDWORD(a1);
  sub_1B19F8EB0(0, a4, a5, a6);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_QWORD *)(v14 + 64))
  {
    v15 = *(_QWORD *)(v14 + 72);
    if ((_DWORD)a1 != -1)
      goto LABEL_6;
  }
  else
  {
    v15 = 0;
    if ((_DWORD)a1 != -1)
      goto LABEL_6;
  }
  if (!(_DWORD)v12)
    return 0;
LABEL_6:
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001)
    return 0;
  if ((int)a1 >= *(_QWORD *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    return 0;
  v16 = *(_QWORD *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if ((_DWORD)v12 != -1 && *(_DWORD *)(v16 + 12 * (int)a1 + 8) != (_DWORD)v12)
    return 0;
  return a7(*(_QWORD *)(*(_QWORD *)(v7 + 136) + 8 * *(int *)(v16 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v16 + 12 * (int)a1 + 4), v15, a2, a3) & 1;
}

uint64_t sub_1B1A744F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAA30) & 1;
}

uint64_t sub_1B1A74530(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAB4C) & 1;
}

uint64_t sub_1B1A74568(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBABAC) & 1;
}

uint64_t sub_1B1A745A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAC0C) & 1;
}

uint64_t sub_1B1A745D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAC6C) & 1;
}

uint64_t sub_1B1A74610(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A743F4(a1, a2, a3, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAD2C) & 1;
}

uint64_t sub_1B1A74648(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B1EBAD5C(*(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 248, a2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B1A746EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A7470C(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9BF0) & 1;
}

uint64_t sub_1B1A7470C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v5 + 12 * (int)a1 + 4), 24, a2, a3) & 1;
  }
  else
  {
    return 0;
  }
}

_QWORD *sub_1B1A747B4(_QWORD *result, int a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v7 = result;
  v8 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v9 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    v13[0] = a2;
    MEMORY[0x1E0C80A78](v10, v11);
    sub_1B1A72644(a4, (void (*)(uint64_t))sub_1B1ADF784);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v13[0] = a4;
      v13[1] = v8;
      v14 = v9;
      sub_1B1AF7F74();
      v17 = v12;
      v18 = &off_1E639B2E0;
      v15 = a3;
      v16 = a2;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v13);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v13);
    }
  }
  return result;
}

_QWORD *sub_1B1A74910(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72644, (uint64_t (*)(_QWORD))sub_1B1AF8214);
}

_QWORD *sub_1B1A7493C(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72644, (uint64_t (*)(_QWORD))sub_1B1AF82B0);
}

_QWORD *sub_1B1A74968(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  _QWORD v19[7];
  char v20;
  uint64_t v21;

  v21 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v19[0] = a2;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a7(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = __PAIR64__(v12, a4);
      v19[1] = v13;
      v19[5] = a8(0);
      v19[6] = &off_1E639B2E0;
      v19[2] = v21;
      v19[3] = a2;
      v20 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A74AD8(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72644, (uint64_t (*)(_QWORD))sub_1B1AF85E4);
}

_QWORD *sub_1B1A74B04(_QWORD *result, uint64_t a2, unint64_t a3, float a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  _DWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  float v24;
  uint64_t v25;
  _UNKNOWN **v26;
  char v27;

  v12 = result;
  v13 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    *(float *)v21 = a4;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a8(a3, a6, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v21[0] = a3;
      v21[1] = v13;
      v22 = v14;
      v25 = a9(0);
      v26 = &off_1E639B2E0;
      v23 = a2;
      v24 = a4;
      v27 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v21);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v21);
    }
  }
  return result;
}

_QWORD *sub_1B1A74C80(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  _QWORD v19[7];
  char v20;
  uint64_t v21;

  v21 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v19[0] = a2;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a8(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = __PAIR64__(v12, a4);
      v19[1] = v13;
      v19[5] = a9(0);
      v19[6] = &off_1E639B2E0;
      v19[2] = v21;
      v19[3] = a2;
      v20 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A74DF8(_QWORD *result, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  double v18;
  _DWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _UNKNOWN **v25;
  char v26;
  uint64_t v27;

  v27 = a3;
  v12 = result;
  v13 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    v16 = a2 & 1;
    LOBYTE(v20[0]) = v16;
    v18 = MEMORY[0x1E0C80A78](v15, v17);
    a8(a4, a6, v18);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20[0] = a4;
      v20[1] = v13;
      v21 = v14;
      v24 = a9(0);
      v25 = &off_1E639B2E0;
      v22 = v27;
      v23 = v16;
      v26 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A74F6C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73200(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBBACC);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE52CC(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A750E8(_QWORD *result, unint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  __n128 v14;
  __n128 *v15;
  uint64_t v16;
  _UNKNOWN **v17;
  char v18;

  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v14 = a4;
    MEMORY[0x1E0C80A78](v9, v10);
    sub_1B1A7246C(a3, (void (*)(uint64_t))sub_1B1AE0BB4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14.n128_u64[0] = __PAIR64__(v7, a3);
      v14.n128_u64[1] = v8;
      sub_1B1AE0924(0, &qword_1EEF59010, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1E6371540);
      v16 = v11;
      v17 = &off_1E639B2E0;
      v12 = (__n128 *)swift_allocObject();
      v15 = v12;
      v12[1].n128_u64[0] = a2;
      v12[2] = a4;
      v18 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v14);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v14);
    }
  }
  return result;
}

_QWORD *sub_1B1A7527C(_QWORD *result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  int v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  unint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  _UNKNOWN **v27;
  char v28;
  uint64_t v29;

  v29 = a3;
  v10 = a2;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v19 = HIDWORD(a2);
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v20 = v10;
    v21 = v19;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a7(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20 = a4;
      v21 = v12;
      v22 = v13;
      v26 = a8(0);
      v27 = &off_1E639B2E0;
      v23 = v29;
      v24 = v10;
      v25 = v19;
      v28 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A753F8(_QWORD *result, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  _DWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char v25;
  uint64_t v26;

  v26 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    LOBYTE(v19[0]) = a2;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a7(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = a4;
      v19[1] = v12;
      v20 = v13;
      v23 = a8(0);
      v24 = &off_1E639B2E0;
      v21 = v26;
      v22 = a2;
      v25 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A7556C(_QWORD *result, unint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  char v24;
  int v25;

  v25 = a4;
  v18 = a3;
  v9 = result;
  v10 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v19 = a2;
    v20 = v18;
    LOBYTE(v21) = v25;
    MEMORY[0x1E0C80A78](v12, v13);
    v17[2] = a5;
    v17[3] = &v19;
    sub_1B1A726E8(a6, (void (*)(__int128 *))sub_1B1AF16E0, (uint64_t)v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19 = __PAIR64__(v10, a6);
      v20 = v11;
      sub_1B1AF1724(0);
      v22 = v14;
      v23 = &off_1E639B2E0;
      v15 = swift_allocObject();
      v21 = v15;
      *(_QWORD *)(v15 + 16) = a5;
      v16 = v18;
      *(_QWORD *)(v15 + 32) = a2;
      *(_QWORD *)(v15 + 40) = v16;
      *(_BYTE *)(v15 + 48) = v25;
      v24 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A75700(_QWORD *result, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  double v17;
  _DWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _UNKNOWN **v25;
  char v26;
  uint64_t v27;

  v27 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v15 = a2 & 1;
    LOBYTE(v20[0]) = v15;
    v17 = MEMORY[0x1E0C80A78](v14, v16);
    a7(a4, a6, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20[0] = a4;
      v20[1] = v12;
      v21 = v13;
      v24 = a8(0);
      v25 = &off_1E639B2E0;
      v22 = v27;
      v23 = v15;
      v26 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A75874(_QWORD *result, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  _DWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char v25;
  uint64_t v26;

  v26 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v19[0] = a2;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a7(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = a4;
      v19[1] = v12;
      v20 = v13;
      v23 = a8(0);
      v24 = &off_1E639B2E0;
      v21 = v26;
      v22 = a2;
      v25 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A759E8(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A726E8(a3, (void (*)(__int128 *))sub_1B1AE0BB4, (uint64_t)v13);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AF1CCC(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A75B5C(_QWORD *result, unint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6, uint64_t a7, void (*a8)(__int128 *), uint64_t (*a9)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN **v26;
  char v27;
  int v28;

  v28 = a4;
  v20 = a2;
  v21 = a3;
  v12 = result;
  v13 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    v22 = v20;
    v23 = v21;
    LOBYTE(v24) = v28;
    MEMORY[0x1E0C80A78](v15, v16);
    v19[2] = a5;
    v19[3] = &v22;
    sub_1B1A726E8(a6, a8, (uint64_t)v19);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v22 = __PAIR64__(v13, a6);
      v23 = v14;
      v25 = a9(0);
      v26 = &off_1E639B2E0;
      v17 = swift_allocObject();
      v24 = v17;
      *(_QWORD *)(v17 + 16) = a5;
      v18 = v21;
      *(_QWORD *)(v17 + 32) = v20;
      *(_QWORD *)(v17 + 40) = v18;
      *(_BYTE *)(v17 + 48) = v28;
      v27 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v22);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v22);
    }
  }
  return result;
}

_QWORD *sub_1B1A75CF4(_QWORD *result, uint64_t a2, unint64_t a3, float a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  _DWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  float v23;
  uint64_t v24;
  _UNKNOWN **v25;
  char v26;

  v12 = result;
  v13 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    *(float *)v20 = a4;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a7(a3, a6, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20[0] = a3;
      v20[1] = v13;
      v21 = v14;
      v24 = a8(0);
      v25 = &off_1E639B2E0;
      v22 = a2;
      v23 = a4;
      v26 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A75E68(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBBD9C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE34E4(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A75FE4(_QWORD *result, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  _DWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char v25;
  uint64_t v26;

  v26 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    LOBYTE(v19[0]) = a2;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a8(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = a4;
      v19[1] = v12;
      v20 = v13;
      v23 = a9(0);
      v24 = &off_1E639B2E0;
      v21 = v26;
      v22 = a2;
      v25 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A76160(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBC0C0);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE3604(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A762DC(_QWORD *result, char a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _DWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _UNKNOWN **v19;
  char v20;

  v7 = result;
  v8 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v9 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    LOBYTE(v14[0]) = a2;
    MEMORY[0x1E0C80A78](v10, v11);
    v13[2] = a3;
    v13[3] = v14;
    sub_1B1A74284(a4, (uint64_t)sub_1B1ADF68C, (uint64_t)v13, type metadata accessor for EmitterScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBC210);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = a4;
      v14[1] = v8;
      v15 = v9;
      sub_1B1B084B8(0, &qword_1EEF5A1C0, type metadata accessor for EmitterScript, (uint64_t)&type metadata for Language, (uint64_t)&off_1E637A0A8);
      v18 = v12;
      v19 = &off_1E639B2E0;
      v16 = a3;
      v17 = a2;
      v20 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v14);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v14);
    }
  }
  return result;
}

_QWORD *sub_1B1A76468(_QWORD *result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  int v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  unint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  _UNKNOWN **v27;
  char v28;
  uint64_t v29;

  v29 = a3;
  v11 = a2;
  v12 = result;
  v13 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v19 = HIDWORD(a2);
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    v20 = v11;
    v21 = v19;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a8(a4, a6, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20 = a4;
      v21 = v13;
      v22 = v14;
      v26 = a9(0);
      v27 = &off_1E639B2E0;
      v23 = v29;
      v24 = v11;
      v25 = v19;
      v28 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A765E4(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73C1C(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBC550);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AF8D50(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A76760(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73B74(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBC744);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE4068(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A768DC(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;
  _DWORD v23[2];
  uint64_t v24;
  uint64_t v25[5];
  char v26;
  uint64_t v27;

  v27 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a8(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23[0] = a4;
      v23[1] = v12;
      v24 = v13;
      v17 = a9(0);
      v25[3] = v17;
      v25[4] = (uint64_t)&off_1E639B2E0;
      v18 = sub_1B1A137F4(v25);
      v19 = (char *)v18 + *(int *)(v17 + 44);
      v20 = sub_1B2228110();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, a2, v20);
      *v18 = v27;
      v26 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A76A88(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBCE3C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE3954(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

double *sub_1B1A76C04(double *result, uint64_t a2, unint64_t a3, double a4, double a5)
{
  double *v9;
  unint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  unint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  _UNKNOWN **v22;
  char v23;

  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v16 = *(_QWORD *)&a4;
    v17 = a5;
    MEMORY[0x1E0C80A78](v12, v13);
    v15[2] = a2;
    v15[3] = &v16;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v15, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBCEAC);
    swift_release();
    result = (double *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (double *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16 = __PAIR64__(v10, a3);
      v17 = v11;
      sub_1B1AE0924(0, &qword_1EEF592B0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1E63806F8);
      v21 = v14;
      v22 = &off_1E639B2E0;
      v18 = a2;
      v19 = a4;
      v20 = a5;
      v23 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v16);
      swift_release();
      return (double *)sub_1B1ADF058((uint64_t)&v16);
    }
  }
  return result;
}

_QWORD *sub_1B1A76D8C(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADFE94, (uint64_t)sub_1B1EBCEAC, (void (*)(unint64_t, uint64_t, double))sub_1B1A74034, (uint64_t (*)(_QWORD))sub_1B1AE6278);
}

_QWORD *sub_1B1A76DCC(_QWORD *result, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  _DWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char v25;
  uint64_t v26;

  v26 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v19[0] = a2;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a8(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = a4;
      v19[1] = v12;
      v20 = v13;
      v23 = a9(0);
      v24 = &off_1E639B2E0;
      v21 = v26;
      v22 = a2;
      v25 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A76F48(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBD114);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B075AC(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A770C4(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v18[4];
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v21 = a6;
  v22 = a7;
  v19 = a4;
  v20 = a5;
  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = v22;
    MEMORY[0x1E0C80A78](v12, v13);
    v18[2] = a2;
    v18[3] = &v23;
    sub_1B1A73200(a3, (uint64_t)sub_1B1AE0910, (uint64_t)v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EB9C60);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23.n128_u64[0] = __PAIR64__(v10, a3);
      v23.n128_u64[1] = v11;
      sub_1B1AE0924(0, &qword_1EEF58FC8, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00);
      v25.n128_u64[1] = v14;
      v26.n128_u64[0] = (unint64_t)&off_1E639B2E0;
      v15 = swift_allocObject();
      v24.n128_u64[0] = v15;
      *(_QWORD *)(v15 + 16) = a2;
      v16 = v20;
      *(__n128 *)(v15 + 32) = v19;
      *(__n128 *)(v15 + 48) = v16;
      v17 = v22;
      *(__n128 *)(v15 + 64) = v21;
      *(__n128 *)(v15 + 80) = v17;
      v26.n128_u8[8] = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A77284(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBD184);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE2584(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A77400(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBD330, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B08E04);
}

_QWORD *sub_1B1A77440(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBD330, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B08EA8);
}

_QWORD *sub_1B1A77480(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7418C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBD330);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B08F44(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A775FC(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBD330, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B09008);
}

_QWORD *sub_1B1A77630(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7418C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBD330);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B090A4(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A777AC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBD330, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B09194);
}

_QWORD *sub_1B1A777EC(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v18[4];
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v21 = a6;
  v22 = a7;
  v19 = a4;
  v20 = a5;
  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = v22;
    MEMORY[0x1E0C80A78](v12, v13);
    v18[2] = a2;
    v18[3] = &v23;
    sub_1B1A73A1C(a3, (uint64_t)sub_1B1AE4234, (uint64_t)v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBD938);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23.n128_u64[0] = __PAIR64__(v10, a3);
      v23.n128_u64[1] = v11;
      sub_1B1AE0924(0, &qword_1EEF5A6E8, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t)&type metadata for CameraController, (uint64_t)&off_1E63864C8);
      v25.n128_u64[1] = v14;
      v26.n128_u64[0] = (unint64_t)&off_1E639B2E0;
      v15 = swift_allocObject();
      v24.n128_u64[0] = v15;
      *(_QWORD *)(v15 + 16) = a2;
      v16 = v20;
      *(__n128 *)(v15 + 32) = v19;
      *(__n128 *)(v15 + 48) = v16;
      v17 = v22;
      *(__n128 *)(v15 + 64) = v21;
      *(__n128 *)(v15 + 80) = v17;
      v26.n128_u8[8] = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A779AC(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, double a5)
{
  return sub_1B1A7C3A8(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBD938, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0924C);
}

_QWORD *sub_1B1A779E0(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBD938, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09310);
}

_QWORD *sub_1B1A77A20(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBD938, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B093B4);
}

_QWORD *sub_1B1A77A54(_QWORD *result, uint64_t a2, unint64_t a3, float a4, float a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(unint64_t, uint64_t, double), uint64_t (*a10)(_QWORD))
{
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  float v22;
  float v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  _UNKNOWN **v29;
  char v30;
  uint64_t v31;

  v31 = a2;
  v14 = result;
  v15 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v16 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v17 = swift_unownedRetainStrong();
    v22 = a4;
    v23 = a5;
    v19 = MEMORY[0x1E0C80A78](v17, v18);
    a9(a3, a7, v19);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v14 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v22 = *(float *)&a3;
      v23 = *(float *)&v15;
      v24 = v16;
      v28 = a10(0);
      v29 = &off_1E639B2E0;
      v25 = v31;
      v26 = a4;
      v27 = a5;
      v30 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v22);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v22);
    }
  }
  return result;
}

_QWORD *sub_1B1A77BD4(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v18[4];
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v21 = a6;
  v22 = a7;
  v19 = a4;
  v20 = a5;
  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = v22;
    MEMORY[0x1E0C80A78](v12, v13);
    v18[2] = a2;
    v18[3] = &v23;
    sub_1B1A73200(a3, (uint64_t)sub_1B1AE0910, (uint64_t)v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB87C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23.n128_u64[0] = __PAIR64__(v10, a3);
      v23.n128_u64[1] = v11;
      sub_1B1AE0924(0, &qword_1EEF59180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t)&type metadata for ProjectionMatrix, (uint64_t)&off_1E638A398);
      v25.n128_u64[1] = v14;
      v26.n128_u64[0] = (unint64_t)&off_1E639B2E0;
      v15 = swift_allocObject();
      v24.n128_u64[0] = v15;
      *(_QWORD *)(v15 + 16) = a2;
      v16 = v20;
      *(__n128 *)(v15 + 32) = v19;
      *(__n128 *)(v15 + 48) = v16;
      v17 = v22;
      *(__n128 *)(v15 + 64) = v21;
      *(__n128 *)(v15 + 80) = v17;
      v26.n128_u8[8] = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A77D94(_QWORD *result, unint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  _UNKNOWN **v21;
  char v22;
  int v23;

  v23 = a3;
  v8 = result;
  v9 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v10 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v11 = swift_unownedRetainStrong();
    v15 = a2;
    LOBYTE(v16) = v23 & 1;
    MEMORY[0x1E0C80A78](v11, v12);
    v14[2] = a4;
    v14[3] = &v15;
    sub_1B1A72B90(a5, (void (*)(__int128 *))sub_1B1ADFB94, (uint64_t)v14);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v8 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15 = __PAIR64__(v9, a5);
      v16 = v10;
      sub_1B1ADFBD8(0);
      v20 = v13;
      v21 = &off_1E639B2E0;
      v17 = a4;
      v18 = a2;
      v19 = v23 & 1;
      v22 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A77F08(_QWORD *result, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char v18;
  _DWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char v25;
  uint64_t v26;

  v26 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v18 = a2 & 1;
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    LOBYTE(v19[0]) = v18;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a7(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = a4;
      v19[1] = v12;
      v20 = v13;
      v23 = a8(0);
      v24 = &off_1E639B2E0;
      v21 = v26;
      v22 = v18;
      v25 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A78080(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1ADFCB4, (uint64_t)sub_1B1EBF0A4, (void (*)(unint64_t, uint64_t, double))sub_1B1A73200, (uint64_t (*)(_QWORD))sub_1B1B0B010);
}

_QWORD *sub_1B1A780B4(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73200(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBF0A4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B0B0AC(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A78230(_QWORD *result, uint64_t a2, unint64_t a3, float a4, float a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  float v26;
  uint64_t v27;
  _UNKNOWN **v28;
  char v29;
  uint64_t v30;

  v30 = a2;
  v14 = result;
  v15 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v16 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v17 = swift_unownedRetainStrong();
    v21 = a4;
    v22 = a5;
    v19 = MEMORY[0x1E0C80A78](v17, v18);
    a8(a3, a7, v19);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v14 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v21 = *(float *)&a3;
      v22 = *(float *)&v15;
      v23 = v16;
      v27 = a9(0);
      v28 = &off_1E639B2E0;
      v24 = v30;
      v25 = a4;
      v26 = a5;
      v29 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v21);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v21);
    }
  }
  return result;
}

_QWORD *sub_1B1A783A8(_QWORD *result, char a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _DWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _UNKNOWN **v19;
  char v20;

  v7 = result;
  v8 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v9 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    LOBYTE(v14[0]) = a2;
    MEMORY[0x1E0C80A78](v10, v11);
    v13[2] = a3;
    v13[3] = v14;
    sub_1B1A74284(a4, (uint64_t)sub_1B1ADF68C, (uint64_t)v13, type metadata accessor for ParticleInitScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA458);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = a4;
      v14[1] = v8;
      v15 = v9;
      sub_1B1B084B8(0, &qword_1EEF5A1D0, type metadata accessor for ParticleInitScript, (uint64_t)&type metadata for Language, (uint64_t)&off_1E6394B78);
      v18 = v12;
      v19 = &off_1E639B2E0;
      v16 = a3;
      v17 = a2;
      v20 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v14);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v14);
    }
  }
  return result;
}

_QWORD *sub_1B1A78534(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A75700(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADFFBC, (void (*)(unint64_t, uint64_t, double))sub_1B1A72D08, (uint64_t (*)(_QWORD))sub_1B1B0856C);
}

_QWORD *sub_1B1A78560(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72D08, (uint64_t (*)(_QWORD))sub_1B1B08610);
}

_QWORD *sub_1B1A7858C(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A75CF4(a1, a2, a3, a5, a4, (uint64_t)sub_1B1ADFCB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72D08, (uint64_t (*)(_QWORD))sub_1B1B087F0);
}

_QWORD *sub_1B1A785B8(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A753F8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADFFBC, (void (*)(unint64_t, uint64_t, double))sub_1B1A72D08, (uint64_t (*)(_QWORD))sub_1B1B08994);
}

_QWORD *sub_1B1A785E4(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72D08, (uint64_t (*)(_QWORD))sub_1B1B08A38);
}

_QWORD *sub_1B1A78610(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72DB4, (uint64_t (*)(_QWORD))sub_1B1B0B810);
}

_QWORD *sub_1B1A7863C(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADFE94, (void (*)(unint64_t, uint64_t, double))sub_1B1A72DB4, (uint64_t (*)(_QWORD))sub_1B1B0B98C);
}

_QWORD *sub_1B1A78668(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72DB4, (uint64_t (*)(_QWORD))sub_1B1B0BA30);
}

_QWORD *sub_1B1A78694(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBF950, (void (*)(unint64_t, uint64_t, double))sub_1B1A74034, (uint64_t (*)(_QWORD))sub_1B1B0B498);
}

_QWORD *sub_1B1A786C8(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBF950);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B0B534(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A78844(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v18[4];
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v21 = a6;
  v22 = a7;
  v19 = a4;
  v20 = a5;
  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = v22;
    MEMORY[0x1E0C80A78](v12, v13);
    v18[2] = a2;
    v18[3] = &v23;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE0910, (uint64_t)v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBF9C0);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23.n128_u64[0] = __PAIR64__(v10, a3);
      v23.n128_u64[1] = v11;
      sub_1B1AE0924(0, &qword_1EEF5A8F0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t)&type metadata for WorldIBLController, (uint64_t)&off_1E6396F88);
      v25.n128_u64[1] = v14;
      v26.n128_u64[0] = (unint64_t)&off_1E639B2E0;
      v15 = swift_allocObject();
      v24.n128_u64[0] = v15;
      *(_QWORD *)(v15 + 16) = a2;
      v16 = v20;
      *(__n128 *)(v15 + 32) = v19;
      *(__n128 *)(v15 + 48) = v16;
      v17 = v22;
      *(__n128 *)(v15 + 64) = v21;
      *(__n128 *)(v15 + 80) = v17;
      v26.n128_u8[8] = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A78A04(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBF9C0, (void (*)(unint64_t, uint64_t, double))sub_1B1A74034, (uint64_t (*)(_QWORD))sub_1B1B0B294);
}

_QWORD *sub_1B1A78A38(_QWORD *result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  _UNKNOWN **v21;
  char v22;
  unint64_t v23;

  v23 = a2;
  v8 = result;
  v9 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v10 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v11 = swift_unownedRetainStrong();
    v14 = v23;
    LODWORD(v15) = a3;
    BYTE4(v15) = BYTE4(a3);
    MEMORY[0x1E0C80A78](v11, v12);
    sub_1B1A72E60(a5, (void (*)(uint64_t))sub_1B1B07E4C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v8 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14 = __PAIR64__(v9, a5);
      v15 = v10;
      sub_1B1B07E98();
      v20 = v13;
      v21 = &off_1E639B2E0;
      v16 = a4;
      v17 = v23;
      v18 = a3;
      v19 = BYTE4(a3);
      v22 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v14);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v14);
    }
  }
  return result;
}

_QWORD *sub_1B1A78BB4(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  _UNKNOWN **v26;
  char v27;
  uint64_t v28;

  v28 = a3;
  v12 = result;
  v13 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    v19 = a2;
    LOBYTE(v20) = BYTE4(a2) & 1;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a8(a4, a6, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19 = a4;
      v20 = v13;
      v21 = v14;
      v25 = a9(0);
      v26 = &off_1E639B2E0;
      v22 = v28;
      v23 = a2;
      v24 = BYTE4(a2) & 1;
      v27 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A78D34(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7396C(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBFCD4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AEE768(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A78EB0(_QWORD *result, uint64_t a2, unint64_t a3, float a4)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _DWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  float v17;
  uint64_t v18;
  _UNKNOWN **v19;
  char v20;

  v7 = result;
  v8 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v9 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    *(float *)v14 = a4;
    MEMORY[0x1E0C80A78](v10, v11);
    v13[2] = a2;
    v13[3] = v14;
    sub_1B1A73150(a3, (uint64_t)sub_1B1ADFCB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC01B0);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = a3;
      v14[1] = v8;
      v15 = v9;
      sub_1B1AFCE58();
      v18 = v12;
      v19 = &off_1E639B2E0;
      v16 = a2;
      v17 = a4;
      v20 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v14);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v14);
    }
  }
  return result;
}

_QWORD *sub_1B1A79014(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A75FE4(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBA598, (void (*)(unint64_t, uint64_t, double))sub_1B1A74034, (uint64_t (*)(_QWORD))sub_1B1B0BF64);
}

_QWORD *sub_1B1A79054(_QWORD *result, uint64_t a2, unint64_t a3, double a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  _QWORD v20[7];
  char v21;

  v12 = result;
  v13 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    *(double *)v20 = a4;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a7(a3, a6, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20[0] = __PAIR64__(v13, a3);
      v20[1] = v14;
      v20[5] = a8(0);
      v20[6] = &off_1E639B2E0;
      v20[2] = a2;
      *(double *)&v20[3] = a4;
      v21 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A791C8(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADFE94, (void (*)(unint64_t, uint64_t, double))sub_1B1A72FCC, (uint64_t (*)(_QWORD))sub_1B1B02238);
}

_QWORD *sub_1B1A791F4(_QWORD *result, unint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(unint64_t, uint64_t, double), uint64_t (*a10)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  _UNKNOWN **v26;
  char v27;
  uint64_t v28;

  v28 = a4;
  v12 = result;
  v13 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    v20 = a2;
    LOBYTE(v21) = a3 & 1;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a9(a5, a7, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20 = __PAIR64__(v13, a5);
      v21 = v14;
      v25 = a10(0);
      v26 = &off_1E639B2E0;
      v22 = v28;
      v23 = a2;
      v24 = a3 & 1;
      v27 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A7938C(_QWORD *result, char a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _DWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _UNKNOWN **v19;
  char v20;

  v7 = result;
  v8 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v9 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    LOBYTE(v14[0]) = a2;
    MEMORY[0x1E0C80A78](v10, v11);
    v13[2] = a3;
    v13[3] = v14;
    sub_1B1A74284(a4, (uint64_t)sub_1B1ADF68C, (uint64_t)v13, type metadata accessor for ParticleUpdateScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA3F8);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = a4;
      v14[1] = v8;
      v15 = v9;
      sub_1B1B084B8(0, &qword_1EEF5A1E0, type metadata accessor for ParticleUpdateScript, (uint64_t)&type metadata for Language, (uint64_t)&off_1E639E488);
      v18 = v12;
      v19 = &off_1E639B2E0;
      v16 = a3;
      v17 = a2;
      v20 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v14);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v14);
    }
  }
  return result;
}

_QWORD *sub_1B1A79518(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0AA34);
}

_QWORD *sub_1B1A79558(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0AB04);
}

_QWORD *sub_1B1A79598(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0AB94);
}

_QWORD *sub_1B1A795D8(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7418C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC0D68);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B0ABF0(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A79754(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0ACE0);
}

_QWORD *sub_1B1A79794(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0AD94);
}

_QWORD *sub_1B1A797D4(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0AE38);
}

_QWORD *sub_1B1A79808(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0AF08);
}

_QWORD *sub_1B1A79848(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0D68, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0AF6C);
}

_QWORD *sub_1B1A79888(_QWORD *result, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char v18;
  _DWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char v25;
  uint64_t v26;

  v26 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v18 = a2 & 1;
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    LOBYTE(v19[0]) = v18;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a8(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19[0] = a4;
      v19[1] = v12;
      v20 = v13;
      v23 = a9(0);
      v24 = &off_1E639B2E0;
      v21 = v26;
      v22 = v18;
      v25 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A79A08(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC15F0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A774);
}

_QWORD *sub_1B1A79A3C(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC15F0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A818);
}

_QWORD *sub_1B1A79A7C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73A1C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC15F0);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B0A8B4(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A79BF8(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73A1C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC15F0);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B0A970(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A79D74(_QWORD *result, unint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  char v24;
  int v25;

  v25 = a4;
  v18 = a3;
  v9 = result;
  v10 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v19 = a2;
    v20 = v18;
    LOBYTE(v21) = v25 & 1;
    MEMORY[0x1E0C80A78](v12, v13);
    v17[2] = a5;
    v17[3] = &v19;
    sub_1B1A730A0(a6, (uint64_t)sub_1B1AF16E0, (uint64_t)v17, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBB3D4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19 = __PAIR64__(v10, a6);
      v20 = v11;
      sub_1B1AE0924(0, &qword_1EEF59EC8, (uint64_t (*)(uint64_t))sub_1B1AFA498, (uint64_t)&type metadata for ParticleFlockingSolver, (uint64_t)&off_1E63A8470);
      v22 = v14;
      v23 = &off_1E639B2E0;
      v15 = swift_allocObject();
      v21 = v15;
      *(_QWORD *)(v15 + 16) = a5;
      v16 = v18;
      *(_QWORD *)(v15 + 32) = a2;
      *(_QWORD *)(v15 + 40) = v16;
      *(_BYTE *)(v15 + 48) = v25 & 1;
      v24 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A79F38(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC1CE4, (void (*)(unint64_t, uint64_t, double))sub_1B1A74034, (uint64_t (*)(_QWORD))sub_1B1B0B338);
}

_QWORD *sub_1B1A79F6C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC1CE4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B0B3D4(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7A0E8(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v18[4];
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v21 = a6;
  v22 = a7;
  v19 = a4;
  v20 = a5;
  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = v22;
    MEMORY[0x1E0C80A78](v12, v13);
    v18[2] = a2;
    v18[3] = &v23;
    sub_1B1A73200(a3, (uint64_t)sub_1B1AE0910, (uint64_t)v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB8EC);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23.n128_u64[0] = __PAIR64__(v10, a3);
      v23.n128_u64[1] = v11;
      sub_1B1AE0924(0, &qword_1EEF58FD0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t)&type metadata for LastFrameWorldTransform, (uint64_t)&off_1E63AA960);
      v25.n128_u64[1] = v14;
      v26.n128_u64[0] = (unint64_t)&off_1E639B2E0;
      v15 = swift_allocObject();
      v24.n128_u64[0] = v15;
      *(_QWORD *)(v15 + 16) = a2;
      v16 = v20;
      *(__n128 *)(v15 + 32) = v19;
      *(__n128 *)(v15 + 48) = v16;
      v17 = v22;
      *(__n128 *)(v15 + 64) = v21;
      *(__n128 *)(v15 + 80) = v17;
      v26.n128_u8[8] = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A7A2A8(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73200(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB8EC);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE0BF0(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7A424(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v18[4];
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v21 = a6;
  v22 = a7;
  v19 = a4;
  v20 = a5;
  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = v22;
    MEMORY[0x1E0C80A78](v12, v13);
    v18[2] = a2;
    v18[3] = &v23;
    sub_1B1A7418C(a3, (uint64_t)sub_1B1AE4234, (uint64_t)v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB80C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23.n128_u64[0] = __PAIR64__(v10, a3);
      v23.n128_u64[1] = v11;
      sub_1B1AE0924(0, &qword_1EEF5A670, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t)&type metadata for NodeTransformController, (uint64_t)&off_1E63AAF00);
      v25.n128_u64[1] = v14;
      v26.n128_u64[0] = (unint64_t)&off_1E639B2E0;
      v15 = swift_allocObject();
      v24.n128_u64[0] = v15;
      *(_QWORD *)(v15 + 16) = a2;
      v16 = v20;
      *(__n128 *)(v15 + 32) = v19;
      *(__n128 *)(v15 + 48) = v16;
      v17 = v22;
      *(__n128 *)(v15 + 64) = v21;
      *(__n128 *)(v15 + 80) = v17;
      v26.n128_u8[8] = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A7A5E4(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7418C(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB80C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE0924(0, &qword_1EEF5A678, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t)&type metadata for NodeTransformController, (uint64_t)&off_1E63AAF00);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7A780(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7418C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB80C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B08B54(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7A8FC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBB79C, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B08C18);
}

_QWORD *sub_1B1A7A93C(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBB79C, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B08CBC);
}

_QWORD *sub_1B1A7A970(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBB79C, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B08D60);
}

_QWORD *sub_1B1A7A9B0(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5)
{
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _QWORD v15[4];
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  char v22;

  v16 = a4;
  v17 = a5;
  v7 = result;
  v8 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v9 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    v18 = v16;
    v19 = v17;
    MEMORY[0x1E0C80A78](v10, v11);
    v15[2] = a2;
    v15[3] = &v18;
    sub_1B1A738BC(a3, (uint64_t)sub_1B1AE079C, (uint64_t)v15, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC2860);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v18.n128_u64[0] = __PAIR64__(v8, a3);
      v18.n128_u64[1] = v9;
      sub_1B1AFF2F8();
      v20 = v12;
      v21 = &off_1E639B2E0;
      v13 = swift_allocObject();
      v19.n128_u64[0] = v13;
      *(_QWORD *)(v13 + 16) = a2;
      v14 = v17;
      *(__n128 *)(v13 + 32) = v16;
      *(__n128 *)(v13 + 48) = v14;
      v22 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v18);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v18);
    }
  }
  return result;
}

_QWORD *sub_1B1A7AB34(_QWORD *result, unint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  _UNKNOWN **v21;
  char v22;
  int v23;

  v23 = a3;
  v8 = result;
  v9 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v10 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v11 = swift_unownedRetainStrong();
    v15 = a2;
    LOBYTE(v16) = v23;
    MEMORY[0x1E0C80A78](v11, v12);
    v14[2] = a4;
    v14[3] = &v15;
    sub_1B1A738BC(a5, (uint64_t)sub_1B1ADFB94, (uint64_t)v14, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC2980);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v8 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15 = __PAIR64__(v9, a5);
      v16 = v10;
      sub_1B1B07358();
      v20 = v13;
      v21 = &off_1E639B2E0;
      v17 = a4;
      v18 = a2;
      v19 = v23;
      v22 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7ACA8(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC2D98, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0A640);
}

_QWORD *sub_1B1A7ACDC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC2D98, (void (*)(unint64_t, uint64_t, double))sub_1B1A7418C, (uint64_t (*)(_QWORD))sub_1B1B0A710);
}

_QWORD *sub_1B1A7AD1C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _QWORD v18[4];
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v21 = a6;
  v22 = a7;
  v19 = a4;
  v20 = a5;
  v9 = result;
  v10 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v11 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = v22;
    MEMORY[0x1E0C80A78](v12, v13);
    v18[2] = a2;
    v18[3] = &v23;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE0910, (uint64_t)v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC3408);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v9 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v23.n128_u64[0] = __PAIR64__(v10, a3);
      v23.n128_u64[1] = v11;
      sub_1B1AE0924(0, &qword_1EEF5A8E0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t)&type metadata for WorldBackgroundController, (uint64_t)&off_1E63B12C0);
      v25.n128_u64[1] = v14;
      v26.n128_u64[0] = (unint64_t)&off_1E639B2E0;
      v15 = swift_allocObject();
      v24.n128_u64[0] = v15;
      *(_QWORD *)(v15 + 16) = a2;
      v16 = v20;
      *(__n128 *)(v15 + 32) = v19;
      *(__n128 *)(v15 + 48) = v16;
      v17 = v22;
      *(__n128 *)(v15 + 64) = v21;
      *(__n128 *)(v15 + 80) = v17;
      v26.n128_u8[8] = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v23);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v23);
    }
  }
  return result;
}

_QWORD *sub_1B1A7AEDC(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC3408, (void (*)(unint64_t, uint64_t, double))sub_1B1A74034, (uint64_t (*)(_QWORD))sub_1B1B0B1B0);
}

_QWORD *sub_1B1A7AF10(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC3478, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A4F8);
}

_QWORD *sub_1B1A7AF44(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC3478, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A59C);
}

_QWORD *sub_1B1A7AF84(_QWORD *result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(unint64_t, uint64_t, double), uint64_t (*a10)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN **v26;
  char v27;
  uint64_t v28;

  v28 = a4;
  v12 = result;
  v13 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    v20 = a2;
    v21 = a3;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a9(a5, a7, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20 = __PAIR64__(v13, a5);
      v21 = v14;
      v25 = a10(0);
      v26 = &off_1E639B2E0;
      v22 = v28;
      v23 = a2;
      v24 = a3;
      v27 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A7B110(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC36A8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09458);
}

_QWORD *sub_1B1A7B150(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73A1C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC36A8);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B094F4(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7B2CC(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC36A8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B095B8);
}

_QWORD *sub_1B1A7B300(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC36A8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0965C);
}

_QWORD *sub_1B1A7B340(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC3718, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09B68);
}

_QWORD *sub_1B1A7B374(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC3718, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09C0C);
}

_QWORD *sub_1B1A7B3B4(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC3DB8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B098D8);
}

_QWORD *sub_1B1A7B3E8(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC3DB8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0997C);
}

_QWORD *sub_1B1A7B428(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC3E28, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09A20);
}

_QWORD *sub_1B1A7B45C(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC3E28, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09AC4);
}

_QWORD *sub_1B1A7B49C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7396C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC4078);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AF9C5C(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7B618(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC4164, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09CB0);
}

_QWORD *sub_1B1A7B64C(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC4164, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09D54);
}

_QWORD *sub_1B1A7B68C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A738BC(a3, (uint64_t)sub_1B1AE0BB4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC41D4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AF9540(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7B808(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A7396C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC42E0);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AF9FAC(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7B984(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC43CC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09700);
}

_QWORD *sub_1B1A7B9B8(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADFE94, (uint64_t)sub_1B1EC43CC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B097D0);
}

_QWORD *sub_1B1A7B9F8(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC43CC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09834);
}

_QWORD *sub_1B1A7BA38(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74C80(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC443C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09DF8);
}

_QWORD *sub_1B1A7BA78(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC443C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09E9C);
}

_QWORD *sub_1B1A7BAAC(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC443C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B09F40);
}

_QWORD *sub_1B1A7BAEC(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, double a5)
{
  return sub_1B1A7C3A8(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC44AC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A2EC);
}

_QWORD *sub_1B1A7BB20(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC44AC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A3B0);
}

_QWORD *sub_1B1A7BB54(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC44AC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A454);
}

_QWORD *sub_1B1A7BB94(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73C1C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC451C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AF990C(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7BD10(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73A1C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC4740);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B09FDC(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7BE8C(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, double a5)
{
  return sub_1B1A7C3A8(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC4740, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A098);
}

_QWORD *sub_1B1A7BEC0(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, float a5)
{
  return sub_1B1A74B04(a1, a2, a3, a5, a4, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC4740, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A15C);
}

_QWORD *sub_1B1A7BEF4(_QWORD *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74DF8(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC4740, (void (*)(unint64_t, uint64_t, double))sub_1B1A73A1C, (uint64_t (*)(_QWORD))sub_1B1B0A200);
}

_QWORD *sub_1B1A7BF34(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC4940);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE2344(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7C0B0(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC4B00);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE0F00(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7C22C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC4BE0);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1B0831C(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7C3A8(_QWORD *result, uint64_t a2, unint64_t a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(unint64_t, uint64_t, double), uint64_t (*a9)(_QWORD))
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  _QWORD v21[7];
  char v22;

  v12 = result;
  v13 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v14 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    *(double *)v21 = a4;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a8(a3, a6, v17);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v21[0] = __PAIR64__(v13, a3);
      v21[1] = v14;
      v21[5] = a9(0);
      v21[6] = &off_1E639B2E0;
      v21[2] = a2;
      *(double *)&v21[3] = a4;
      v22 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v21);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v21);
    }
  }
  return result;
}

_QWORD *sub_1B1A7C524(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBAFD8);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE2224(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7C6A0(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE8EA4);
}

_QWORD *sub_1B1A7C6CC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE9018);
}

_QWORD *sub_1B1A7C6F8(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1B1A74968(a1, a2, a3, a4, a5, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE90B4);
}

_QWORD *sub_1B1A7C724(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  _UNKNOWN **v26;
  char v27;
  uint64_t v28;

  v28 = a3;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v19 = a2;
    LOBYTE(v20) = BYTE4(a2) & 1;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a7(a4, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19 = a4;
      v20 = v12;
      v21 = v13;
      v25 = a8(0);
      v26 = &off_1E639B2E0;
      v22 = v28;
      v23 = a2;
      v24 = BYTE4(a2) & 1;
      v27 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v19);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v19);
    }
  }
  return result;
}

_QWORD *sub_1B1A7C8A4(_QWORD *result, unint64_t a2, unint64_t a3, __n128 a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  __n128 *v17;
  __n128 v20;
  __n128 *v21;
  uint64_t v22;
  _UNKNOWN **v23;
  char v24;
  unint64_t v25;

  v25 = a2;
  v11 = result;
  v12 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v13 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v20 = a4;
    v16 = MEMORY[0x1E0C80A78](v14, v15);
    a7(a3, a6, v16);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20.n128_u64[0] = __PAIR64__(v12, a3);
      v20.n128_u64[1] = v13;
      v22 = a8(0);
      v23 = &off_1E639B2E0;
      v17 = (__n128 *)swift_allocObject();
      v21 = v17;
      v17[1].n128_u64[0] = v25;
      v17[2] = a4;
      v24 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v20);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v20);
    }
  }
  return result;
}

_QWORD *sub_1B1A7CA30(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC4F34);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE2464(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7CBAC(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB72C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE03C0(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7CD28(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC51C4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE3A74(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7CEA4(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC5234);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE3B94(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7D020(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC52A4);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE3CB4(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7D19C(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A73F8C(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC5314);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE3DD4(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7D318(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  char v19;

  v14 = a4;
  v6 = result;
  v7 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v8 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v9 = swift_unownedRetainStrong();
    v15 = v14;
    MEMORY[0x1E0C80A78](v9, v10);
    v13[2] = a2;
    v13[3] = &v15;
    sub_1B1A74034(a3, (uint64_t)sub_1B1AE03AC, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC5384);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15.n128_u64[0] = __PAIR64__(v7, a3);
      v15.n128_u64[1] = v8;
      sub_1B1AE0684(0);
      v17 = v11;
      v18 = &off_1E639B2E0;
      v12 = swift_allocObject();
      v16 = v12;
      *(_QWORD *)(v12 + 16) = a2;
      *(__n128 *)(v12 + 32) = v14;
      v19 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v15);
    }
  }
  return result;
}

_QWORD *sub_1B1A7D494(_QWORD *result, uint64_t a2, unint64_t a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(_QWORD), uint64_t a10)
{
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _QWORD v20[4];
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  char v29;
  uint64_t v30;

  v30 = a2;
  v23 = a4;
  v24 = a5;
  v13 = result;
  v14 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v21 = a9;
    v22 = a10;
    v15 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v16 = swift_unownedRetainStrong();
    v25 = v23;
    v26 = v24;
    MEMORY[0x1E0C80A78](v16, v17);
    v20[2] = v30;
    v20[3] = &v25;
    sub_1B1A74034(a3, a7, (uint64_t)v20, a8);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v13 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v25.n128_u64[0] = __PAIR64__(v14, a3);
      v25.n128_u64[1] = v15;
      v27 = v21(0);
      v28 = &off_1E639B2E0;
      v18 = swift_allocObject();
      v26.n128_u64[0] = v18;
      *(_QWORD *)(v18 + 16) = v30;
      v19 = v24;
      *(__n128 *)(v18 + 32) = v23;
      *(__n128 *)(v18 + 48) = v19;
      v29 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)&v25);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)&v25);
    }
  }
  return result;
}

_QWORD *sub_1B1A7D62C(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  _DWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  char v20;

  v7 = result;
  v8 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v9 = *result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    MEMORY[0x1E0C80A78](v10, v11);
    v14[2] = a3;
    v14[3] = a2;
    sub_1B1A7418C(a4, (uint64_t)sub_1B1B0B5D4, (uint64_t)v14, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC552C);
    swift_release();
    result = (_QWORD *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (_QWORD *)swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15[0] = a4;
      v15[1] = v8;
      v16 = v9;
      sub_1B1B0B624();
      v18 = v12;
      v19 = &off_1E639B2E0;
      v13 = swift_allocObject();
      v17 = v13;
      sub_1B1A02864(a2, v13 + 24);
      *(_QWORD *)(v13 + 16) = a3;
      v20 = 11;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v15);
      swift_release();
      return (_QWORD *)sub_1B1ADF058((uint64_t)v15);
    }
  }
  return result;
}

__int128 *sub_1B1A7D7AC(__int128 *result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  char v36;
  id v37[2];
  __int128 v38;
  __int128 v39;

  v4 = v3;
  v7 = result;
  v8 = *(_QWORD *)result;
  v9 = *((_QWORD *)result + 1);
  v10 = result + 1;
  v30 = *((_QWORD *)result + 2);
  v31 = v9;
  v11 = *((_QWORD *)result + 3);
  v12 = (uint64_t)(result + 2);
  v28 = *((_QWORD *)result + 4);
  v29 = v11;
  v27 = *((_QWORD *)result + 5);
  if (a3 != 0xFFFFFFFF)
  {
    v25 = HIDWORD(a3);
    v26 = v8;
    v13 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v15 = v7[1];
    v32 = *v7;
    v33 = v15;
    v34 = v7[2];
    MEMORY[0x1E0C80A78](v14, v16);
    v24[2] = a2;
    v24[3] = &v32;
    sub_1B1A73A1C(a3, (uint64_t)sub_1B1AE76D4, (uint64_t)v24, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBBBAC);
    swift_release();
    result = (__int128 *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (__int128 *)swift_unknownObjectRelease();
    v17 = v26;
    if (*((_BYTE *)v4 + 24) == 1)
    {
      v18 = v25;
      swift_unownedRetainStrong();
      *(_QWORD *)&v32 = __PAIR64__(v18, a3);
      *((_QWORD *)&v32 + 1) = v13;
      v19 = *v7;
      v38 = *v10;
      v39 = v19;
      sub_1B1AE72F4(v12, (uint64_t)v37);
      sub_1B1B06AE4();
      *((_QWORD *)&v34 + 1) = v20;
      v35 = &off_1E639B2E0;
      v21 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v33 = v21;
      v21[2] = a2;
      v21[3] = v17;
      v22 = v30;
      v21[4] = v31;
      v21[5] = v22;
      v23 = v28;
      v21[6] = v29;
      v21[7] = v23;
      v21[8] = v27;
      v36 = 11;
      swift_retain();
      sub_1B1AE7408((uint64_t)&v39);
      sub_1B1AE7408((uint64_t)&v38);
      sub_1B1AE7430(v37);
      sub_1B1E2DB30((uint64_t)&v32);
      swift_release();
      return (__int128 *)sub_1B1ADF058((uint64_t)&v32);
    }
  }
  return result;
}

uint64_t sub_1B1A7D9CC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t, uint64_t, double), uint64_t (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD *v10;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v19;
  _QWORD v20[7];
  char v21;

  v10 = v7;
  v19 = result;
  v13 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v14 = *v7;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v15 = swift_unownedRetainStrong();
    v20[0] = v19;
    v17 = MEMORY[0x1E0C80A78](v15, v16);
    a6(a3, a4, v17);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v10 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20[0] = __PAIR64__(v13, a3);
      v20[1] = v14;
      v20[5] = a7(0);
      v20[6] = &off_1E639B2E0;
      v20[2] = a2;
      v20[3] = v19;
      v21 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)v20);
      swift_release();
      return sub_1B1ADF058((uint64_t)v20);
    }
  }
  return result;
}

uint64_t sub_1B1A7DB3C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  char v23;

  v5 = v4;
  v9 = result;
  v10 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v11 = *v4;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v16 = v9;
    v17 = a2;
    MEMORY[0x1E0C80A78](v12, v13);
    v15[2] = a3;
    v15[3] = &v16;
    sub_1B1A74284(a4, (uint64_t)sub_1B1AE2950, (uint64_t)v15, type metadata accessor for EmitterScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBC210);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16 = __PAIR64__(v10, a4);
      v17 = v11;
      sub_1B1B084B8(0, &qword_1EEF5A1A8, type metadata accessor for EmitterScript, MEMORY[0x1E0DEA968], (uint64_t)&off_1E637A0A8);
      v21 = v14;
      v22 = &off_1E639B2E0;
      v18 = a3;
      v19 = v9;
      v20 = a2;
      v23 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v16);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v16);
    }
  }
  return result;
}

uint64_t sub_1B1A7DCC8(uint64_t result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  _QWORD v14[7];
  char v15;

  v4 = v3;
  v7 = result;
  v8 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v9 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    v14[0] = v7;
    MEMORY[0x1E0C80A78](v10, v11);
    v13[2] = a2;
    v13[3] = v14;
    sub_1B1A728E4(a3, (uint64_t)sub_1B1AE725C, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBC270);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = __PAIR64__(v8, a3);
      v14[1] = v9;
      sub_1B1AE0924(0, &qword_1EEF593B0, (uint64_t (*)(uint64_t))sub_1B1AE717C, (uint64_t)&type metadata for MeshFileAsset, (uint64_t)&off_1E637B4A8);
      v14[5] = v12;
      v14[6] = &off_1E639B2E0;
      v14[2] = a2;
      v14[3] = v7;
      v15 = 11;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B1E2DB30((uint64_t)v14);
      swift_release();
      return sub_1B1ADF058((uint64_t)v14);
    }
  }
  return result;
}

__int128 *sub_1B1A7DE44(__int128 *result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  char v36;
  id v37[2];
  __int128 v38;
  __int128 v39;

  v4 = v3;
  v7 = result;
  v8 = *(_QWORD *)result;
  v9 = *((_QWORD *)result + 1);
  v10 = result + 1;
  v30 = *((_QWORD *)result + 2);
  v31 = v9;
  v11 = *((_QWORD *)result + 3);
  v12 = (uint64_t)(result + 2);
  v28 = *((_QWORD *)result + 4);
  v29 = v11;
  v27 = *((_QWORD *)result + 5);
  if (a3 != 0xFFFFFFFF)
  {
    v25 = HIDWORD(a3);
    v26 = v8;
    v13 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v15 = v7[1];
    v32 = *v7;
    v33 = v15;
    v34 = v7[2];
    MEMORY[0x1E0C80A78](v14, v16);
    v24[2] = a2;
    v24[3] = &v32;
    sub_1B1A728E4(a3, (uint64_t)sub_1B1B0D3C0, (uint64_t)v24, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBC270);
    swift_release();
    result = (__int128 *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (__int128 *)swift_unknownObjectRelease();
    v17 = v26;
    if (*((_BYTE *)v4 + 24) == 1)
    {
      v18 = v25;
      swift_unownedRetainStrong();
      *(_QWORD *)&v32 = __PAIR64__(v18, a3);
      *((_QWORD *)&v32 + 1) = v13;
      v19 = *v7;
      v38 = *v10;
      v39 = v19;
      sub_1B1AE72F4(v12, (uint64_t)v37);
      sub_1B1AE73A0();
      *((_QWORD *)&v34 + 1) = v20;
      v35 = &off_1E639B2E0;
      v21 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v33 = v21;
      v21[2] = a2;
      v21[3] = v17;
      v22 = v30;
      v21[4] = v31;
      v21[5] = v22;
      v23 = v28;
      v21[6] = v29;
      v21[7] = v23;
      v21[8] = v27;
      v36 = 11;
      swift_retain();
      sub_1B1AE7408((uint64_t)&v39);
      sub_1B1AE7408((uint64_t)&v38);
      sub_1B1AE7430(v37);
      sub_1B1E2DB30((uint64_t)&v32);
      swift_release();
      return (__int128 *)sub_1B1ADF058((uint64_t)&v32);
    }
  }
  return result;
}

uint64_t sub_1B1A7E064(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t, uint64_t, double), uint64_t (*a8)(_QWORD))
{
  _QWORD *v8;
  _QWORD *v11;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  unint64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;
  char v29;

  v11 = v8;
  v20 = result;
  v14 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v15 = *v8;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v16 = swift_unownedRetainStrong();
    v22 = v20;
    v23 = a2;
    v18 = MEMORY[0x1E0C80A78](v16, v17);
    a7(a4, a5, v18);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v22 = __PAIR64__(v14, a4);
      v23 = v15;
      v27 = a8(0);
      v28 = &off_1E639B2E0;
      v24 = a3;
      v25 = v20;
      v26 = a2;
      v29 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v22);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v22);
    }
  }
  return result;
}

__int128 *sub_1B1A7E1DC(__int128 *result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  char v36;
  id v37[2];
  __int128 v38;
  __int128 v39;

  v4 = v3;
  v7 = result;
  v8 = *(_QWORD *)result;
  v9 = *((_QWORD *)result + 1);
  v10 = result + 1;
  v30 = *((_QWORD *)result + 2);
  v31 = v9;
  v11 = *((_QWORD *)result + 3);
  v12 = (uint64_t)(result + 2);
  v28 = *((_QWORD *)result + 4);
  v29 = v11;
  v27 = *((_QWORD *)result + 5);
  if (a3 != 0xFFFFFFFF)
  {
    v25 = HIDWORD(a3);
    v26 = v8;
    v13 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v15 = v7[1];
    v32 = *v7;
    v33 = v15;
    v34 = v7[2];
    MEMORY[0x1E0C80A78](v14, v16);
    v24[2] = a2;
    v24[3] = &v32;
    sub_1B1A7396C(a3, (uint64_t)sub_1B1AE76D4, (uint64_t)v24, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBCF8C);
    swift_release();
    result = (__int128 *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (__int128 *)swift_unknownObjectRelease();
    v17 = v26;
    if (*((_BYTE *)v4 + 24) == 1)
    {
      v18 = v25;
      swift_unownedRetainStrong();
      *(_QWORD *)&v32 = __PAIR64__(v18, a3);
      *((_QWORD *)&v32 + 1) = v13;
      v19 = *v7;
      v38 = *v10;
      v39 = v19;
      sub_1B1AE72F4(v12, (uint64_t)v37);
      sub_1B1B06844();
      *((_QWORD *)&v34 + 1) = v20;
      v35 = &off_1E639B2E0;
      v21 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v33 = v21;
      v21[2] = a2;
      v21[3] = v17;
      v22 = v30;
      v21[4] = v31;
      v21[5] = v22;
      v23 = v28;
      v21[6] = v29;
      v21[7] = v23;
      v21[8] = v27;
      v36 = 11;
      swift_retain();
      sub_1B1AE7408((uint64_t)&v39);
      sub_1B1AE7408((uint64_t)&v38);
      sub_1B1AE7430(v37);
      sub_1B1E2DB30((uint64_t)&v32);
      swift_release();
      return (__int128 *)sub_1B1ADF058((uint64_t)&v32);
    }
  }
  return result;
}

__int128 *sub_1B1A7E3FC(__int128 *result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  char v36;
  id v37[2];
  __int128 v38;
  __int128 v39;

  v4 = v3;
  v7 = result;
  v8 = *(_QWORD *)result;
  v9 = *((_QWORD *)result + 1);
  v10 = result + 1;
  v30 = *((_QWORD *)result + 2);
  v31 = v9;
  v11 = *((_QWORD *)result + 3);
  v12 = (uint64_t)(result + 2);
  v28 = *((_QWORD *)result + 4);
  v29 = v11;
  v27 = *((_QWORD *)result + 5);
  if (a3 != 0xFFFFFFFF)
  {
    v25 = HIDWORD(a3);
    v26 = v8;
    v13 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v15 = v7[1];
    v32 = *v7;
    v33 = v15;
    v34 = v7[2];
    MEMORY[0x1E0C80A78](v14, v16);
    v24[2] = a2;
    v24[3] = &v32;
    sub_1B1A738BC(a3, (uint64_t)sub_1B1AE76D4, (uint64_t)v24, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBD604);
    swift_release();
    result = (__int128 *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (__int128 *)swift_unknownObjectRelease();
    v17 = v26;
    if (*((_BYTE *)v4 + 24) == 1)
    {
      v18 = v25;
      swift_unownedRetainStrong();
      *(_QWORD *)&v32 = __PAIR64__(v18, a3);
      *((_QWORD *)&v32 + 1) = v13;
      v19 = *v7;
      v38 = *v10;
      v39 = v19;
      sub_1B1AE72F4(v12, (uint64_t)v37);
      sub_1B1AE76EC();
      *((_QWORD *)&v34 + 1) = v20;
      v35 = &off_1E639B2E0;
      v21 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v33 = v21;
      v21[2] = a2;
      v21[3] = v17;
      v22 = v30;
      v21[4] = v31;
      v21[5] = v22;
      v23 = v28;
      v21[6] = v29;
      v21[7] = v23;
      v21[8] = v27;
      v36 = 11;
      swift_retain();
      sub_1B1AE7408((uint64_t)&v39);
      sub_1B1AE7408((uint64_t)&v38);
      sub_1B1AE7430(v37);
      sub_1B1E2DB30((uint64_t)&v32);
      swift_release();
      return (__int128 *)sub_1B1ADF058((uint64_t)&v32);
    }
  }
  return result;
}

uint64_t sub_1B1A7E61C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  char v23;

  v5 = v4;
  v9 = result;
  v10 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v11 = *v4;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v16 = v9;
    v17 = a2;
    MEMORY[0x1E0C80A78](v12, v13);
    v15[2] = a3;
    v15[3] = &v16;
    sub_1B1A740DC(a4, (uint64_t)sub_1B1AEB7D0, (uint64_t)v15, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBD79C);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16 = __PAIR64__(v10, a4);
      v17 = v11;
      sub_1B1AEB824(0);
      v21 = v14;
      v22 = &off_1E639B2E0;
      v18 = a3;
      v19 = v9;
      v20 = a2;
      v23 = 11;
      swift_retain();
      sub_1B1AEB720(v9, a2);
      sub_1B1E2DB30((uint64_t)&v16);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v16);
    }
  }
  return result;
}

uint64_t sub_1B1A7E784(uint64_t result, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  char v24;

  v6 = v5;
  v18 = a2;
  v10 = result;
  v11 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v12 = *v5;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v13 = swift_unownedRetainStrong();
    v19 = v10;
    v20 = v18;
    LOBYTE(v21) = a3;
    MEMORY[0x1E0C80A78](v13, v14);
    v17[2] = a4;
    v17[3] = &v19;
    sub_1B1A72A40(a5, (void (*)(__int128 *))sub_1B1AE6AB0, (uint64_t)v17);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19 = __PAIR64__(v11, a5);
      v20 = v12;
      sub_1B1AF01EC();
      v22 = v15;
      v23 = &off_1E639B2E0;
      v16 = swift_allocObject();
      v21 = v16;
      *(_QWORD *)(v16 + 16) = a4;
      *(_QWORD *)(v16 + 24) = v10;
      *(_QWORD *)(v16 + 32) = v18;
      *(_BYTE *)(v16 + 40) = a3;
      v24 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v19);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v19);
    }
  }
  return result;
}

uint64_t sub_1B1A7E918(uint64_t result, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  char v24;

  v6 = v5;
  v18 = a2;
  v10 = result;
  v11 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v12 = *v5;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v13 = swift_unownedRetainStrong();
    v19 = v10;
    v20 = v18;
    LOBYTE(v21) = a3;
    MEMORY[0x1E0C80A78](v13, v14);
    v17[2] = a4;
    v17[3] = &v19;
    sub_1B1A7380C(a5, (uint64_t)sub_1B1AE6AB0, (uint64_t)v17, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBEC64);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19 = __PAIR64__(v11, a5);
      v20 = v12;
      sub_1B1AE6AC8();
      v22 = v15;
      v23 = &off_1E639B2E0;
      v16 = swift_allocObject();
      v21 = v16;
      *(_QWORD *)(v16 + 16) = a4;
      *(_QWORD *)(v16 + 24) = v10;
      *(_QWORD *)(v16 + 32) = v18;
      *(_BYTE *)(v16 + 40) = a3;
      v24 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v19);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v19);
    }
  }
  return result;
}

uint64_t sub_1B1A7EAB4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  char v23;

  v5 = v4;
  v9 = result;
  v10 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v11 = *v4;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v16 = v9;
    v17 = a2;
    MEMORY[0x1E0C80A78](v12, v13);
    v15[2] = a3;
    v15[3] = &v16;
    sub_1B1A74284(a4, (uint64_t)sub_1B1AE2950, (uint64_t)v15, type metadata accessor for ParticleInitScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA458);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16 = __PAIR64__(v10, a4);
      v17 = v11;
      sub_1B1B084B8(0, &qword_1EEF5A1C8, type metadata accessor for ParticleInitScript, MEMORY[0x1E0DEA968], (uint64_t)&off_1E6394B78);
      v21 = v14;
      v22 = &off_1E639B2E0;
      v18 = a3;
      v19 = v9;
      v20 = a2;
      v23 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v16);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v16);
    }
  }
  return result;
}

uint64_t sub_1B1A7EC40(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, float a5)
{
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  char v24;

  v6 = v5;
  v11 = result;
  v12 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v13 = *v5;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v19 = v11;
    v20 = a2;
    *(float *)&v21 = a5;
    MEMORY[0x1E0C80A78](v14, v15);
    v18[2] = a3;
    v18[3] = &v19;
    sub_1B1A72D08(a4, (void (*)(__int128 *))sub_1B1B086CC, (uint64_t)v18);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v19 = __PAIR64__(v12, a4);
      v20 = v13;
      sub_1B1B08720();
      v22 = v16;
      v23 = &off_1E639B2E0;
      v17 = swift_allocObject();
      v21 = v17;
      *(_QWORD *)(v17 + 16) = a3;
      *(_QWORD *)(v17 + 24) = v11;
      *(_QWORD *)(v17 + 32) = a2;
      *(float *)(v17 + 40) = a5;
      v24 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v19);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v19);
    }
  }
  return result;
}

uint64_t sub_1B1A7EDC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B1A7EDE4(a1, a2, a3, a4, (uint64_t)sub_1B1AE7504, (void (*)(unint64_t, uint64_t, double))sub_1B1A72D08, (uint64_t (*)(_QWORD))sub_1B1B08894);
}

uint64_t sub_1B1A7EDE4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(unint64_t, uint64_t, double), uint64_t (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD *v10;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _UNKNOWN **v27;
  char v28;

  v10 = v7;
  v20 = result;
  v14 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v15 = *v7;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v16 = swift_unownedRetainStrong();
    v21 = v20;
    v22 = a2;
    v18 = MEMORY[0x1E0C80A78](v16, v17);
    a6(a4, a5, v18);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v10 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v21 = __PAIR64__(v14, a4);
      v22 = v15;
      v26 = a7(0);
      v27 = &off_1E639B2E0;
      v23 = a3;
      v24 = v20;
      v25 = a2;
      v28 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v21);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v21);
    }
  }
  return result;
}

uint64_t sub_1B1A7EF54(uint64_t result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  _QWORD v14[7];
  char v15;

  v4 = v3;
  v7 = result;
  v8 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v9 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    v14[0] = v7;
    MEMORY[0x1E0C80A78](v10, v11);
    v13[2] = a2;
    v13[3] = v14;
    sub_1B1A72DB4(a3, (void (*)(__int128 *))sub_1B1AE725C, (uint64_t)v13);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = __PAIR64__(v8, a3);
      v14[1] = v9;
      sub_1B1AE0924(0, &qword_1EEF5A940, (uint64_t (*)(uint64_t))sub_1B1B0B6B8, (uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1E6396640);
      v14[5] = v12;
      v14[6] = &off_1E639B2E0;
      v14[2] = a2;
      v14[3] = v7;
      v15 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)v14);
      swift_release();
      return sub_1B1ADF058((uint64_t)v14);
    }
  }
  return result;
}

uint64_t sub_1B1A7F0C8(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD v19[5];
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _UNKNOWN **v27;
  char v28;

  v7 = v6;
  v20 = a2;
  v21 = a3;
  v11 = result;
  v12 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v13 = *v6;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v22 = v11;
    v23 = v20;
    v24 = v21;
    v25 = a4;
    MEMORY[0x1E0C80A78](v14, v15);
    v19[2] = a5;
    v19[3] = &v22;
    sub_1B1A72DB4(a6, (void (*)(__int128 *))sub_1B1B0B88C, (uint64_t)v19);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v22 = __PAIR64__(v12, a6);
      v23 = v13;
      sub_1B1B0B8A4();
      v26 = v16;
      v27 = &off_1E639B2E0;
      v17 = (_QWORD *)swift_allocObject();
      v24 = v17;
      v17[2] = a5;
      v17[3] = v11;
      v18 = v21;
      v17[4] = v20;
      v17[5] = v18;
      v17[6] = a4;
      v28 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v22);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v22);
    }
  }
  return result;
}

uint64_t sub_1B1A7F270(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B1A7EDE4(a1, a2, a3, a4, (uint64_t)sub_1B1AE7504, (void (*)(unint64_t, uint64_t, double))sub_1B1A72DB4, (uint64_t (*)(_QWORD))sub_1B1B0BA94);
}

uint64_t sub_1B1A7F28C(uint64_t result, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;
  char v25;

  v6 = v5;
  v19 = a2;
  v10 = result;
  v11 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v12 = *v5;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v13 = swift_unownedRetainStrong();
    v20 = v10;
    v21 = v19;
    LOBYTE(v22) = a3 & 1;
    MEMORY[0x1E0C80A78](v13, v14);
    v18[2] = a4;
    v18[3] = &v20;
    sub_1B1A72DB4(a5, (void (*)(__int128 *))sub_1B1B0BB88, (uint64_t)v18);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v6 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v20 = __PAIR64__(v11, a5);
      v21 = v12;
      sub_1B1B0BBE4();
      v23 = v15;
      v24 = &off_1E639B2E0;
      v16 = swift_allocObject();
      v22 = v16;
      *(_QWORD *)(v16 + 16) = a4;
      *(_QWORD *)(v16 + 24) = v10;
      v17 = v19;
      *(_QWORD *)(v16 + 32) = v19;
      *(_BYTE *)(v16 + 40) = a3 & 1;
      v25 = 11;
      swift_retain();
      sub_1B1B0BB50(v10, v17, a3 & 1);
      sub_1B1E2DB30((uint64_t)&v20);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v20);
    }
  }
  return result;
}

uint64_t sub_1B1A7F428(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  char v23;

  v5 = v4;
  v9 = result;
  v10 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v11 = *v4;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v16 = v9;
    v17 = a2;
    MEMORY[0x1E0C80A78](v12, v13);
    v15[2] = a3;
    v15[3] = &v16;
    sub_1B1A74284(a4, (uint64_t)sub_1B1AE2950, (uint64_t)v15, type metadata accessor for MetalFunctionScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBFAA0);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16 = __PAIR64__(v10, a4);
      v17 = v11;
      sub_1B1B084B8(0, &qword_1EEF5A5F0, type metadata accessor for MetalFunctionScript, MEMORY[0x1E0DEA968], (uint64_t)&off_1E63982A0);
      v21 = v14;
      v22 = &off_1E639B2E0;
      v18 = a3;
      v19 = v9;
      v20 = a2;
      v23 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v16);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v16);
    }
  }
  return result;
}

__int128 *sub_1B1A7F5B4(__int128 *result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  char v36;
  id v37[2];
  __int128 v38;
  __int128 v39;

  v4 = v3;
  v7 = result;
  v8 = *(_QWORD *)result;
  v9 = *((_QWORD *)result + 1);
  v10 = result + 1;
  v30 = *((_QWORD *)result + 2);
  v31 = v9;
  v11 = *((_QWORD *)result + 3);
  v12 = (uint64_t)(result + 2);
  v28 = *((_QWORD *)result + 4);
  v29 = v11;
  v27 = *((_QWORD *)result + 5);
  if (a3 != 0xFFFFFFFF)
  {
    v25 = HIDWORD(a3);
    v26 = v8;
    v13 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v15 = v7[1];
    v32 = *v7;
    v33 = v15;
    v34 = v7[2];
    MEMORY[0x1E0C80A78](v14, v16);
    v24[2] = a2;
    v24[3] = &v32;
    sub_1B1A738BC(a3, (uint64_t)sub_1B1B0D3C0, (uint64_t)v24, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBFE58);
    swift_release();
    result = (__int128 *)swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = (__int128 *)swift_unknownObjectRelease();
    v17 = v26;
    if (*((_BYTE *)v4 + 24) == 1)
    {
      v18 = v25;
      swift_unownedRetainStrong();
      *(_QWORD *)&v32 = __PAIR64__(v18, a3);
      *((_QWORD *)&v32 + 1) = v13;
      v19 = *v7;
      v38 = *v10;
      v39 = v19;
      sub_1B1AE72F4(v12, (uint64_t)v37);
      sub_1B1AE9558();
      *((_QWORD *)&v34 + 1) = v20;
      v35 = &off_1E639B2E0;
      v21 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v33 = v21;
      v21[2] = a2;
      v21[3] = v17;
      v22 = v30;
      v21[4] = v31;
      v21[5] = v22;
      v23 = v28;
      v21[6] = v29;
      v21[7] = v23;
      v21[8] = v27;
      v36 = 11;
      swift_retain();
      sub_1B1AE7408((uint64_t)&v39);
      sub_1B1AE7408((uint64_t)&v38);
      sub_1B1AE7430(v37);
      sub_1B1E2DB30((uint64_t)&v32);
      swift_release();
      return (__int128 *)sub_1B1ADF058((uint64_t)&v32);
    }
  }
  return result;
}

uint64_t sub_1B1A7F7D4(uint64_t result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  _QWORD v15[7];
  char v16;

  v4 = v3;
  v7 = (void *)result;
  v8 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v9 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    v15[0] = v7;
    MEMORY[0x1E0C80A78](v10, v11);
    v14[2] = a2;
    v14[3] = v15;
    sub_1B1A72F04(a3, (uint64_t)sub_1B1AE9768, (uint64_t)v14, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBFFF0);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v15[0] = __PAIR64__(v8, a3);
      v15[1] = v9;
      sub_1B1AE0924(0, &qword_1EEF59590, (uint64_t (*)(uint64_t))sub_1B1AE9640, (uint64_t)&type metadata for PointCacheFromModel, (uint64_t)&off_1E6399898);
      v15[5] = v12;
      v15[6] = &off_1E639B2E0;
      v15[2] = a2;
      v15[3] = v7;
      v16 = 11;
      v13 = v7;
      swift_retain();
      sub_1B1E2DB30((uint64_t)v15);
      swift_release();
      return sub_1B1ADF058((uint64_t)v15);
    }
  }
  return result;
}

uint64_t sub_1B1A7F94C(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[5];
  int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _UNKNOWN **v27;
  char v28;

  v7 = v6;
  v20 = a4;
  v21 = result;
  v12 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v13 = *v6;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v22 = v21;
    v23 = a2;
    v24 = a3;
    v25 = v20;
    MEMORY[0x1E0C80A78](v14, v15);
    v19[2] = a5;
    v19[3] = &v22;
    sub_1B1A730A0(a6, (uint64_t)sub_1B1AE6D70, (uint64_t)v19, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC08AC);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v22 = __PAIR64__(v12, a6);
      v23 = v13;
      sub_1B1AF3580(0);
      v26 = v16;
      v27 = &off_1E639B2E0;
      v17 = swift_allocObject();
      v24 = v17;
      v18 = v21;
      *(_QWORD *)(v17 + 16) = a5;
      *(_QWORD *)(v17 + 24) = v18;
      *(_QWORD *)(v17 + 32) = a2;
      *(_QWORD *)(v17 + 40) = a3;
      *(_BYTE *)(v17 + 48) = v20;
      v28 = 11;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v22);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v22);
    }
  }
  return result;
}

uint64_t sub_1B1A7FB00(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  char v23;

  v5 = v4;
  v9 = result;
  v10 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    v11 = *v4;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v12 = swift_unownedRetainStrong();
    v16 = v9;
    v17 = a2;
    MEMORY[0x1E0C80A78](v12, v13);
    v15[2] = a3;
    v15[3] = &v16;
    sub_1B1A74284(a4, (uint64_t)sub_1B1AE2950, (uint64_t)v15, type metadata accessor for ParticleUpdateScript, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1B1EBA3F8);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16 = __PAIR64__(v10, a4);
      v17 = v11;
      sub_1B1B084B8(0, &qword_1EEF5A1D8, type metadata accessor for ParticleUpdateScript, MEMORY[0x1E0DEA968], (uint64_t)&off_1E639E488);
      v21 = v14;
      v22 = &off_1E639B2E0;
      v18 = a3;
      v19 = v9;
      v20 = a2;
      v23 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v16);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v16);
    }
  }
  return result;
}

uint64_t sub_1B1A7FC8C(uint64_t result, uint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a8)(_QWORD))
{
  _QWORD *v8;
  _QWORD *v11;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  _QWORD v21[4];
  uint64_t (*v22)(_QWORD);
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _UNKNOWN **v29;
  char v30;

  v11 = v8;
  v23 = a3;
  v24 = a2;
  v14 = result;
  v15 = HIDWORD(a5);
  if (a5 != 0xFFFFFFFF)
  {
    v22 = a8;
    v16 = *v8;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v17 = swift_unownedRetainStrong();
    v25 = v14;
    v26 = v24;
    LOBYTE(v27) = v23;
    MEMORY[0x1E0C80A78](v17, v18);
    v21[2] = a4;
    v21[3] = &v25;
    sub_1B1A736B0(a5, a6, (uint64_t)v21, a7);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    v19 = v22;
    if (*((_BYTE *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v25 = __PAIR64__(v15, a5);
      v26 = v16;
      v28 = v19(0);
      v29 = &off_1E639B2E0;
      v20 = swift_allocObject();
      v27 = v20;
      *(_QWORD *)(v20 + 16) = a4;
      *(_QWORD *)(v20 + 24) = v14;
      *(_QWORD *)(v20 + 32) = v24;
      *(_BYTE *)(v20 + 40) = v23;
      v30 = 11;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v25);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v25);
    }
  }
  return result;
}

uint64_t sub_1B1A7FE34(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t (*a8)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(_QWORD))
{
  _QWORD *v9;
  _QWORD *v12;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[4];
  int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _UNKNOWN **v32;
  char v33;

  v12 = v9;
  v24 = a4;
  v25 = result;
  v26 = a2;
  v16 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v17 = *v9;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v18 = swift_unownedRetainStrong();
    v27 = v25;
    v28 = v26;
    v29 = a3;
    v30 = v24;
    MEMORY[0x1E0C80A78](v18, v19);
    v23[2] = a5;
    v23[3] = &v27;
    sub_1B1A73C1C(a6, a7, (uint64_t)v23, a8);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v27 = __PAIR64__(v16, a6);
      v28 = v17;
      v31 = a9(0);
      v32 = &off_1E639B2E0;
      v20 = swift_allocObject();
      v29 = v20;
      v22 = v25;
      v21 = v26;
      *(_QWORD *)(v20 + 16) = a5;
      *(_QWORD *)(v20 + 24) = v22;
      *(_QWORD *)(v20 + 32) = v21;
      *(_QWORD *)(v20 + 40) = a3;
      *(_BYTE *)(v20 + 48) = v24;
      v33 = 11;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v27);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v27);
    }
  }
  return result;
}

uint64_t sub_1B1A7FFE4(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[5];
  int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _UNKNOWN **v27;
  char v28;

  v7 = v6;
  v20 = a4;
  v21 = result;
  v12 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v13 = *v6;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v22 = v21;
    v23 = a2;
    v24 = a3;
    v25 = v20;
    MEMORY[0x1E0C80A78](v14, v15);
    v19[2] = a5;
    v19[3] = &v22;
    sub_1B1A738BC(a6, (uint64_t)sub_1B1AE6D70, (uint64_t)v19, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC2980);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v22 = __PAIR64__(v12, a6);
      v23 = v13;
      sub_1B1B06FC8(0);
      v26 = v16;
      v27 = &off_1E639B2E0;
      v17 = swift_allocObject();
      v24 = v17;
      v18 = v21;
      *(_QWORD *)(v17 + 16) = a5;
      *(_QWORD *)(v17 + 24) = v18;
      *(_QWORD *)(v17 + 32) = a2;
      *(_QWORD *)(v17 + 40) = a3;
      *(_BYTE *)(v17 + 48) = v20;
      v28 = 11;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v22);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v22);
    }
  }
  return result;
}

uint64_t sub_1B1A80198(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[5];
  int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _UNKNOWN **v27;
  char v28;

  v7 = v6;
  v20 = a4;
  v21 = result;
  v12 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v13 = *v6;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v14 = swift_unownedRetainStrong();
    v22 = v21;
    v23 = a2;
    v24 = a3;
    v25 = v20;
    MEMORY[0x1E0C80A78](v14, v15);
    v19[2] = a5;
    v19[3] = &v22;
    sub_1B1A736B0(a6, (uint64_t)sub_1B1AE6D70, (uint64_t)v19, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC3874);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v22 = __PAIR64__(v12, a6);
      v23 = v13;
      sub_1B1AF4178(0);
      v26 = v16;
      v27 = &off_1E639B2E0;
      v17 = swift_allocObject();
      v24 = v17;
      v18 = v21;
      *(_QWORD *)(v17 + 16) = a5;
      *(_QWORD *)(v17 + 24) = v18;
      *(_QWORD *)(v17 + 32) = a2;
      *(_QWORD *)(v17 + 40) = a3;
      *(_BYTE *)(v17 + 48) = v20;
      v28 = 11;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1E2DB30((uint64_t)&v22);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v22);
    }
  }
  return result;
}

uint64_t sub_1B1A8034C(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t (*a8)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(_QWORD))
{
  _QWORD *v9;
  _QWORD *v12;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _UNKNOWN **v31;
  char v32;

  v12 = v9;
  v25 = a4;
  v23 = a2;
  v24 = a3;
  v15 = result;
  v16 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    v17 = *v9;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v18 = swift_unownedRetainStrong();
    v26 = v15;
    v27 = v23;
    v28 = v24;
    v29 = v25;
    MEMORY[0x1E0C80A78](v18, v19);
    v22[2] = a5;
    v22[3] = &v26;
    sub_1B1A736B0(a6, a7, (uint64_t)v22, a8);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v12 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v26 = __PAIR64__(v16, a6);
      v27 = v17;
      v30 = a9(0);
      v31 = &off_1E639B2E0;
      v20 = swift_allocObject();
      v28 = v20;
      *(_QWORD *)(v20 + 16) = a5;
      *(_QWORD *)(v20 + 24) = v15;
      v21 = v24;
      *(_QWORD *)(v20 + 32) = v23;
      *(_QWORD *)(v20 + 40) = v21;
      *(_BYTE *)(v20 + 48) = v25;
      v32 = 11;
      swift_retain();
      sub_1B1AF7674(v15);
      sub_1B1E2DB30((uint64_t)&v26);
      swift_release();
      return sub_1B1ADF058((uint64_t)&v26);
    }
  }
  return result;
}

uint64_t sub_1B1A804F8(uint64_t result, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  _QWORD v14[7];
  char v15;

  v4 = v3;
  v7 = result;
  v8 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    v9 = *v3;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong())
      swift_unknownObjectRelease();
    v10 = swift_unownedRetainStrong();
    v14[0] = v7;
    MEMORY[0x1E0C80A78](v10, v11);
    v13[2] = a2;
    v13[3] = v14;
    sub_1B1A740DC(a3, (uint64_t)sub_1B1AE81F4, (uint64_t)v13, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EC5014);
    swift_release();
    result = swift_unknownObjectUnownedLoadStrong();
    if (result)
      result = swift_unknownObjectRelease();
    if (*((_BYTE *)v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = __PAIR64__(v8, a3);
      v14[1] = v9;
      sub_1B1AE0924(0, &qword_1EEF59460, (uint64_t (*)(uint64_t))sub_1B1AE8014, (uint64_t)&type metadata for MeshModel, (uint64_t)&off_1E63C4480);
      v14[5] = v12;
      v14[6] = &off_1E639B2E0;
      v14[2] = a2;
      v14[3] = v7;
      v15 = 11;
      swift_retain();
      swift_retain();
      sub_1B1E2DB30((uint64_t)v14);
      swift_release();
      return sub_1B1ADF058((uint64_t)v14);
    }
  }
  return result;
}

uint64_t sub_1B1A80674(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int16 a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  char v35;
  uint64_t v36;
  uint64_t result;

  *(_OWORD *)(v21 + 64) = 0u;
  *(_OWORD *)(v21 + 80) = 0u;
  *(_OWORD *)(v21 + 96) = 0u;
  *(_BYTE *)(v21 + 112) = 1;
  *(_QWORD *)(v21 + 128) = 0;
  *(_QWORD *)(v21 + 136) = 0;
  *(_QWORD *)(v21 + 120) = 0;
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v21 + 168) = 0;
  *(_QWORD *)(v21 + 176) = 0;
  *(_QWORD *)(v21 + 160) = v24;
  *(_DWORD *)(v21 + 184) = 0;
  *(_BYTE *)(v21 + 188) = 1;
  *(_DWORD *)(v21 + 192) = 0;
  *(_BYTE *)(v21 + 196) = 1;
  *(_QWORD *)(v21 + 200) = 0x1000100000000;
  *(_BYTE *)(v21 + 208) = 1;
  *(_WORD *)(v21 + 210) = 0;
  *(_QWORD *)(v21 + 216) = 0;
  swift_bridgeObjectRetain();
  v25 = sub_1B2229310();
  v27 = v26;
  swift_retain();
  swift_bridgeObjectRelease();
  v28 = 0;
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  *(_QWORD *)(v21 + 32) = a13;
  *(_QWORD *)(v21 + 40) = a21;
  *(_QWORD *)(v21 + 48) = v25;
  *(_BYTE *)(v21 + 56) = v27 & 1;
  *(_WORD *)(v21 + 58) = a19;
  v29 = *(double *)&a3;
  v30 = v29;
  if ((a4 & 1) != 0)
    v30 = 0.0;
  *(float *)(v21 + 184) = v30;
  *(_BYTE *)(v21 + 188) = a4 & 1;
  v31 = *(double *)&a5;
  v32 = v31;
  if ((a6 & 1) != 0)
    v32 = 0.0;
  *(float *)(v21 + 192) = v32;
  *(_BYTE *)(v21 + 196) = a6 & 1;
  v33 = *(double *)&a7;
  v34 = v33;
  if ((a8 & 1) != 0)
    v34 = 0.0;
  *(float *)(v21 + 200) = v34;
  *(_BYTE *)(v21 + 204) = a8 & 1;
  if ((a10 & 1) != 0 || (v28 = a9, (a9 & 0x8000000000000000) == 0) && a9 < 0x100)
  {
    *(_BYTE *)(v21 + 205) = v28;
    *(_BYTE *)(v21 + 206) = a10 & 1;
    if ((a12 & 1) != 0)
    {
      swift_release();
      v35 = 0;
LABEL_15:
      *(_BYTE *)(v21 + 207) = v35;
      *(_BYTE *)(v21 + 208) = a12 & 1;
      v36 = *(_QWORD *)(v21 + 64);
      *(_QWORD *)(v21 + 64) = 0;
      *(_QWORD *)(v21 + 72) = 0;
      sub_1B19E5A18(v36);
      *(_QWORD *)(v21 + 96) = a14;
      swift_release();
      *(_WORD *)(v21 + 210) = a19;
      *(_QWORD *)(v21 + 144) = a15;
      *(_QWORD *)(v21 + 152) = a16;
      *(_QWORD *)(v21 + 168) = a17;
      *(_QWORD *)(v21 + 176) = a18;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 160) = a20;
      swift_bridgeObjectRelease();
      return v21;
    }
    v35 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
    {
      swift_release();
      goto LABEL_15;
    }
  }
  result = sub_1B222967C();
  __break(1u);
  return result;
}

uint64_t sub_1B1A80914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t)@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityValueAccessors);
  v13 = v12;
  swift_allocObject();
  swift_retain();
  result = a6(a1, a2, a3);
  a7[3] = v13;
  a7[4] = (uint64_t)&off_1E6382A70;
  *a7 = result;
  return result;
}

uint64_t sub_1B1A809B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t)@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1B1791524(0, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityValueAccessors);
  v13 = v12;
  swift_allocObject();
  swift_retain();
  result = a6(a1, a2, a3);
  a7[3] = v13;
  a7[4] = (uint64_t)&off_1E6382A70;
  *a7 = result;
  return result;
}

uint64_t sub_1B1A80A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t result;

  v11 = a4(0);
  swift_allocObject();
  swift_retain();
  result = a5(a1, a2, a3);
  a6[3] = v11;
  a6[4] = (uint64_t)&off_1E6382A70;
  *a6 = result;
  return result;
}

uint64_t sub_1B1A80AE0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  swift_retain();
  sub_1B1A83144(a1, (uint64_t)&type metadata for TextureFileData, a2, a3);
  return swift_release();
}

uint64_t sub_1B1A80B3C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_retain();
  sub_1B1A82954(a1, a3, a2, a4);
  return swift_release();
}

uint64_t sub_1B1A80BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  swift_retain();
  sub_1B1A86EF0(a1, (uint64_t)&type metadata for MorpherController, a2, a3);
  return swift_release();
}

unint64_t sub_1B1A80C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) == -1 || *(_DWORD *)(*v11 + 12 * (int)a1 + 8) == HIDWORD(a1))
      {
        v12 = (unsigned int *)(*v11 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
        if (v13)
        {
          sub_1B1E1A9A0((uint64_t)&type metadata for CollisionLayerSet, v13, a4, a2);
          v9 = 0;
          v8 = v13;
          goto LABEL_3;
        }
      }
      goto LABEL_2;
    }
  }
LABEL_3:
  LOBYTE(v13) = v9;
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B1A80D1C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0((uint64_t)&type metadata for Entity, v13, a4, a2);
      return v13;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B1A80E38(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A814F4(a1, a2, a3, a4, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
}

uint64_t sub_1B1A80E4C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0(MEMORY[0x1E0DEE190], v13, a4, a2);
      return v13;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B1A80F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) == -1 || *(_DWORD *)(*v11 + 12 * (int)a1 + 8) == HIDWORD(a1))
      {
        v12 = (unsigned int *)(*v11 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
        if (v13)
        {
          sub_1B1E1A9A0(MEMORY[0x1E0DEB188], v13, a4, a2);
          v9 = 0;
          v8 = v13;
          goto LABEL_3;
        }
      }
      goto LABEL_2;
    }
  }
LABEL_3:
  LOBYTE(v13) = v9;
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B1A81084(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 2;
  result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0(MEMORY[0x1E0DEAFA0], v13, a4, a2);
        return v13;
      }
      return 2;
    }
  }
  return result;
}

uint64_t sub_1B1A8118C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0(MEMORY[0x1E0DEDC60], v13, a4, a2);
      return v13;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B1A812A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) == -1 || *(_DWORD *)(*v11 + 12 * (int)a1 + 8) == HIDWORD(a1))
      {
        v12 = (unsigned int *)(*v11 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
        if (v13)
        {
          sub_1B1E1A9A0(MEMORY[0x1E0DEE0F8], v13, a4, a2);
          v9 = 0;
          v8 = v13;
          goto LABEL_3;
        }
      }
      goto LABEL_2;
    }
  }
LABEL_3:
  LOBYTE(v13) = v9;
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B1A813C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0(MEMORY[0x1E0DEB418], v13, a4, a2);
      return v13;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B1A814E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A814F4(a1, a2, a3, a4, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
}

uint64_t sub_1B1A814F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;

  v10 = HIDWORD(a1);
  sub_1B19F8E54(0, a5, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], a6);
  v12 = v11;
  if ((_DWORD)a1 == -1 && !(_DWORD)v10)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v14 = *(_QWORD *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v10 == -1 || *(_DWORD *)(v14 + 12 * (int)a1 + 8) == (_DWORD)v10)
    {
      v15 = (unsigned int *)(v14 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v6 + 136) + 8 * (int)*v15 + 32), a2, *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v15+ 2) << 32), v6, &v16);
      if (v16)
      {
        sub_1B1E1A9A0(v12, v16, a4, a2);
        return v16;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A81660(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  type metadata accessor for simd_quatf(0);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v8)
    {
      v13 = (unsigned int *)(v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A817B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unsigned int *v15;
  uint64_t v16[4];
  __int128 v17;

  v5 = v4;
  v9 = 0uLL;
  if (result == 0xFFFFFFFFLL)
    goto LABEL_2;
  v10 = 0;
  if (result << 32 < (uint64_t)0xFFFFFFFF00000001
    || (v14 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries),
        (int)result >= *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)))
  {
    v11 = 0;
    v12 = 0;
    v13 = 0;
    goto LABEL_10;
  }
  if (HIDWORD(result) == -1 || *(_DWORD *)(*v14 + 12 * (int)result + 8) == HIDWORD(result))
  {
    v15 = (unsigned int *)(*v14 + 12 * (int)result);
    result = sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v15 + 32), a2, *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v15 + 2) << 32), v5, v16);
    if (v16[0])
    {
      result = sub_1B1E1A9A0((uint64_t)&type metadata for Asset, v16[0], a3, a2);
      v10 = v16[0];
      v11 = v16[1];
      v12 = v16[2];
      v13 = v16[3];
      v9 = v17;
    }
    else
    {
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v9 = 0uLL;
    }
  }
  else
  {
LABEL_2:
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
  }
LABEL_10:
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v11;
  *(_QWORD *)(a4 + 16) = v12;
  *(_QWORD *)(a4 + 24) = v13;
  *(_OWORD *)(a4 + 32) = v9;
  return result;
}

uint64_t sub_1B1A81910(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for AddressMode, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A81A18(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for MotionDistribution, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A81B20(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B1A02758(0, &qword_1ED4B8010, (uint64_t)&type metadata for EmitterShape.Direction, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v8)
    {
      v13 = (unsigned int *)(v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A81C8C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for EmitterShape.Direction, v13, a4, a2);
        return v13;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A81DC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v8)
    {
      v13 = (unsigned int *)(v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A81F38(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for EmissionOrder, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A82040(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ShapeDistribution, v13, a4, a2);
        return v13;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A82178(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 != -1 && *(_DWORD *)(v12 + 12 * (int)a1 + 8) != (_DWORD)v8)
      return 0;
    v13 = (unsigned int *)(v12 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13 + 2) << 32), v4, &v14);
    if (v14)
    {
      sub_1B1E1A9A0(v10, v14, a4, a2);
      return v14;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B1A822D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) != -1 && *(_DWORD *)(*v11 + 12 * (int)a1 + 8) != HIDWORD(a1))
        goto LABEL_2;
      v12 = (unsigned int *)(*v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v14);
      if (!v14)
        goto LABEL_2;
      sub_1B1E1A9A0((uint64_t)&type metadata for EmitterShape.Shape, v14, a4, a2);
      v9 = 0;
      v13 = 0x100000000;
      if (!BYTE4(v14))
        v13 = 0;
      v8 = v13 | v14;
    }
  }
LABEL_3:
  LOBYTE(v14) = v9;
  return v8 | ((unint64_t)v9 << 40);
}

uint64_t sub_1B1A82400(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if ((_DWORD)a1 != -1 || (result = 0, (_DWORD)v9))
  {
    result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
      {
        v12 = (unsigned int *)(v11 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
        if (v13)
        {
          sub_1B1E1A9A0(MEMORY[0x1E0DEA968], v13, a4, a2);
          return v13;
        }
        else
        {
          return 0;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B1A82528(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for VideoCapture.OrientationMode, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A82630(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for Language, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A82738(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A84EC4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1B1AE717C);
}

uint64_t sub_1B1A82744(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 5;
  result = 5;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for EntitySpace, v13, a4, a2);
        return v13;
      }
      return 5;
    }
  }
  return result;
}

uint64_t sub_1B1A8284C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for NoiseKind, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A82954@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;

  v9 = HIDWORD(a1);
  v10 = sub_1B2228110();
  if ((_DWORD)a1 == -1 && !(_DWORD)v9)
  {
LABEL_3:
    v11 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, v11, 1, v10);
  }
  v11 = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v13 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v14 = (unsigned int *)(v13 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v14 + 32), a2, *v14 | ((unint64_t)*((unsigned __int16 *)v14 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v14+ 2) << 32), v4, &v15);
      if (v15)
      {
        sub_1B1E1A9A0(v10, v15, a3, a2);
        v11 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, v11, 1, v10);
      }
      goto LABEL_3;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, v11, 1, v10);
}

uint64_t sub_1B1A82A90(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for LensBlurQuality, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A82B98(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 != -1 && *(_DWORD *)(v12 + 12 * (int)a1 + 8) != (_DWORD)v8)
      return 0;
    v13 = (unsigned int *)(v12 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13 + 2) << 32), v4, &v14);
    if (v14)
    {
      sub_1B1E1A9A0(v10, v14, a4, a2);
      return v14;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A82D10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  type metadata accessor for CGSize(0);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v8)
    {
      v13 = (unsigned int *)(v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A82E64(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for MTLPixelFormat);
}

unint64_t sub_1B1A82E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) == -1 || *(_DWORD *)(*v11 + 12 * (int)a1 + 8) == HIDWORD(a1))
      {
        v12 = (unsigned int *)(*v11 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
        if (v13)
        {
          sub_1B1E1A9A0(MEMORY[0x1E0DEDBC8], v13, a4, a2);
          v9 = 0;
          v8 = v13;
          goto LABEL_3;
        }
      }
      goto LABEL_2;
    }
  }
LABEL_3:
  LOBYTE(v13) = v9;
  return v8 | ((unint64_t)v9 << 32);
}

void sub_1B1A82F8C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  unsigned int *v22;
  uint64_t v23[10];

  v9 = HIDWORD(a1);
  type metadata accessor for simd_float4x4(0);
  v11 = v10;
  if ((_DWORD)a1 == -1 && !(_DWORD)v9)
  {
LABEL_3:
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 1;
    goto LABEL_4;
  }
  v12 = 0;
  v20 = 1;
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    goto LABEL_4;
  }
  v21 = (_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  if ((int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    if ((_DWORD)v9 == -1 || *(_DWORD *)(*v21 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v22 = (unsigned int *)(*v21 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v22 + 32), a2, *v22 | ((unint64_t)*((unsigned __int16 *)v22 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v22+ 2) << 32), v4, v23);
      if (v23[0])
      {
        sub_1B1E1A9A0(v11, v23[0], a3, a2);
        v20 = 0;
        v12 = v23[0];
        v13 = v23[1];
        v14 = v23[2];
        v15 = v23[3];
        v16 = v23[4];
        v17 = v23[5];
        v18 = v23[6];
        v19 = v23[7];
        goto LABEL_4;
      }
    }
    goto LABEL_3;
  }
LABEL_4:
  *(_QWORD *)a4 = v12;
  *(_QWORD *)(a4 + 8) = v13;
  *(_QWORD *)(a4 + 16) = v14;
  *(_QWORD *)(a4 + 24) = v15;
  *(_QWORD *)(a4 + 32) = v16;
  *(_QWORD *)(a4 + 40) = v17;
  *(_QWORD *)(a4 + 48) = v18;
  *(_QWORD *)(a4 + 56) = v19;
  *(_BYTE *)(a4 + 64) = v20;
}

uint64_t sub_1B1A83138(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for VFXLightType);
}

void sub_1B1A83144(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v9 = HIDWORD(a1);
  sub_1B1A02758(0, &qword_1EEF596E0, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = v10;
  if (((_DWORD)a1 != -1 || (_DWORD)v9)
    && (uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries), (_DWORD)v9 == -1)
     || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v9)
    && (v13 = (unsigned int *)(v12 + 12 * (int)a1),
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14), v14))
  {
    sub_1B1E1A9A0(v11, v14, a3, a2);
  }
  else
  {
    *a4 = xmmword_1B226E580;
  }
}

uint64_t sub_1B1A83284(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 != -1 && *(_DWORD *)(v12 + 12 * (int)a1 + 8) != (_DWORD)v8)
      return 0;
    v13 = (unsigned int *)(v12 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13 + 2) << 32), v4, &v14);
    if (v14)
    {
      sub_1B1E1A9A0(v10, v14, a4, a2);
      return v14;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B1A833DC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B1A02758(0, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001)
  {
    v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if ((_DWORD)v8 == -1 || *(_DWORD *)(*v12 + 12 * (int)a1 + 8) == (_DWORD)v8)
      {
        v13 = (unsigned int *)(*v12 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
        if (v14)
        {
          sub_1B1E1A9A0(v10, v14, a4, a2);
          return v14;
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A83534(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for TargetDataKind, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A8363C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 8;
  result = 8;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for SourceDataKind, v13, a4, a2);
        return v13;
      }
      return 8;
    }
  }
  return result;
}

uint64_t sub_1B1A83744(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ScaleMode, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A8384C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleSubSpawn.Mode, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A83954(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ToneMappingOperator, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A83A5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0((uint64_t)&type metadata for ColorRamp, v13, a4, a2);
      return v13;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1B1A83B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) != -1 && *(_DWORD *)(*v11 + 12 * (int)a1 + 8) != HIDWORD(a1))
        goto LABEL_2;
      v12 = (unsigned int *)(*v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v14);
      if (!v14)
        goto LABEL_2;
      sub_1B1E1A9A0((uint64_t)&type metadata for ParticleColorInit.Mode, v14, a4, a2);
      v9 = 0;
      v13 = 0x100000000;
      if (!BYTE4(v14))
        v13 = 0;
      v8 = v13 | v14;
    }
  }
LABEL_3:
  LOBYTE(v14) = v9;
  return v8 | ((unint64_t)v9 << 40);
}

uint64_t sub_1B1A83CB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for Composition.Operation, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A83DC0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 2;
  result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ProjectionDirection, v13, a4, a2);
        return v13;
      }
      return 2;
    }
  }
  return result;
}

uint64_t sub_1B1A83EC8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for TextureFallback, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A83FD0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 2;
  result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for EmitterDescription.PhysicsSimulation, v13, a4, a2);
        return v13;
      }
      return 2;
    }
  }
  return result;
}

uint64_t sub_1B1A840D8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v8)
    {
      v13 = (unsigned int *)(v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A8424C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0((uint64_t)&type metadata for SimpleFontDescription, v13, a4, a2);
      return v13;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A84378(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 10;
  result = 10;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for PrimitiveGenerator.PrimitiveType, v13, a4, a2);
        return v13;
      }
      return 10;
    }
  }
  return result;
}

uint64_t sub_1B1A84480(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 5;
  result = 5;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for TextureChannel, v13, a4, a2);
        return v13;
      }
      return 5;
    }
  }
  return result;
}

uint64_t sub_1B1A84588(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A84594(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1B1B0B6B8);
}

uint64_t sub_1B1A84594(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v9 = HIDWORD(a1);
  v10 = a5(0);
  if ((_DWORD)a1 != -1 || (result = 0, (_DWORD)v9))
  {
    result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (((_DWORD)v9 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v9)
        && (v13 = (unsigned int *)(v12 + 12 * (int)a1),
            sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13 + 2) << 32), v5, &v14), v14))
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B1A846BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for MTLStorageMode);
}

uint64_t sub_1B1A846C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if ((_DWORD)a1 != -1 || (result = 0, (_DWORD)v9))
  {
    result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
      {
        v12 = (unsigned int *)(v11 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
        if (v13)
        {
          sub_1B1E1A9A0((uint64_t)&type metadata for MetalFunctionReflection, v13, a4, a2);
          return v13;
        }
        else
        {
          return 0;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B1A84814(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for KernelReference, v13, a4, a2);
        return v13;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B1A8494C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for FillMode, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A84A54(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0((uint64_t)&type metadata for EasingFunction, v13, a4, a2);
      return v13;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B1A84B78(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleAnimationMode, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A84C80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 7;
  result = 7;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleSortMode, v13, a4, a2);
        return v13;
      }
      return 7;
    }
  }
  return result;
}

unint64_t sub_1B1A84D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) != -1 && *(_DWORD *)(*v11 + 12 * (int)a1 + 8) != HIDWORD(a1))
        goto LABEL_2;
      v12 = (unsigned int *)(*v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v14);
      if (!v14)
        goto LABEL_2;
      sub_1B1E1A9A0((uint64_t)&type metadata for BlendMode, v14, a4, a2);
      v9 = 0;
      v13 = 0x100000000;
      if (!BYTE4(v14))
        v13 = 0;
      v8 = v13 | v14;
    }
  }
LABEL_3:
  LOBYTE(v14) = v9;
  return v8 | ((unint64_t)v9 << 40);
}

uint64_t sub_1B1A84EB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A84EC4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1B1AE9640);
}

uint64_t sub_1B1A84EC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v9 = HIDWORD(a1);
  v10 = a5(0);
  if ((_DWORD)a1 == -1 && !(_DWORD)v9)
    return 1;
  result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v13 = (unsigned int *)(v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v5, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1B1A84FE8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for PointCache.Distribution, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

unint64_t sub_1B1A850F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD *v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  if (a1 == 0xFFFFFFFFLL)
  {
LABEL_2:
    v8 = 0;
    v9 = 1;
    goto LABEL_3;
  }
  v8 = 0;
  v9 = 1;
  if (a1 << 32 >= (uint64_t)0xFFFFFFFF00000001)
  {
    v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if (HIDWORD(a1) == -1 || *(_DWORD *)(*v11 + 12 * (int)a1 + 8) == HIDWORD(a1))
      {
        v12 = (unsigned int *)(*v11 + 12 * (int)a1);
        sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
        if (v13)
        {
          sub_1B1E1A9A0((uint64_t)&type metadata for AngleF, v13, a4, a2);
          v9 = 0;
          v8 = v13;
          goto LABEL_3;
        }
      }
      goto LABEL_2;
    }
  }
LABEL_3:
  LOBYTE(v13) = v9;
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B1A8520C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 7;
  result = 7;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for GraphScriptingConfig.Mode, v13, a4, a2);
        return v13;
      }
      return 7;
    }
  }
  return result;
}

uint64_t sub_1B1A85314(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 5;
  result = 5;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleOrientationMode, v13, a4, a2);
        return v13;
      }
      return 5;
    }
  }
  return result;
}

uint64_t sub_1B1A8541C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleQuadRenderer.Shape, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A85524(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldCullMode);
}

uint64_t sub_1B1A85530(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldScope);
}

uint64_t sub_1B1A8553C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldShape);
}

uint64_t sub_1B1A85548(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldType);
}

uint64_t sub_1B1A85554(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 2;
  result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for OrientationConstraint.Mode, v13, a4, a2);
        return v13;
      }
      return 2;
    }
  }
  return result;
}

uint64_t sub_1B1A8565C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A84594(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1B1AEB244);
}

uint64_t sub_1B1A85668(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;

  v10 = HIDWORD(a1);
  sub_1B1A02758(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v12 = v11;
  if ((_DWORD)a1 != -1 || (result = 0, (_DWORD)v10))
  {
    result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(_QWORD *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      v14 = *(_QWORD *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (((_DWORD)v10 == -1 || *(_DWORD *)(v14 + 12 * (int)a1 + 8) == (_DWORD)v10)
        && (v15 = (unsigned int *)(v14 + 12 * (int)a1),
            sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v6 + 136) + 8 * (int)*v15 + 32), a2, *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v15 + 2) << 32), v6, &v16), v16))
      {
        sub_1B1E1A9A0(v12, v16, a4, a2);
        return v16;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B1A857A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B1AF7598();
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 1;
  result = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v8 == -1 || *(_DWORD *)(v12 + 12 * (int)a1 + 8) == (_DWORD)v8)
    {
      v13 = (unsigned int *)(v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1B1A858EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  unsigned int *v13;
  uint64_t v14;

  v8 = HIDWORD(a1);
  sub_1B1AFA498();
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001)
  {
    v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if ((_DWORD)v8 != -1 && *(_DWORD *)(*v12 + 12 * (int)a1 + 8) != (_DWORD)v8)
        return 0;
      v13 = (unsigned int *)(*v12 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13+ 2) << 32), v4, &v14);
      if (v14)
      {
        sub_1B1E1A9A0(v10, v14, a4, a2);
        return v14;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B1A85A44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for FlockingSizeMode, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A85B4C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleRibbonTextureMode, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A85C54(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 5;
  result = 5;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleRibbonProfile, v13, a4, a2);
        return v13;
      }
      return 5;
    }
  }
  return result;
}

uint64_t sub_1B1A85D5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 2;
  result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for OrientationOverVelocity.DirectionAxis, v13, a4, a2);
        return v13;
      }
      return 2;
    }
  }
  return result;
}

uint64_t sub_1B1A85E64@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  unsigned int *v15;
  uint64_t v16[6];

  v5 = v4;
  if (result == 0xFFFFFFFFLL)
  {
LABEL_2:
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 1;
    goto LABEL_3;
  }
  v9 = 0;
  v13 = 1;
  if (result << 32 < (uint64_t)0xFFFFFFFF00000001)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    goto LABEL_3;
  }
  v14 = (_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  if ((int)result < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    if (HIDWORD(result) == -1 || *(_DWORD *)(*v14 + 12 * (int)result + 8) == HIDWORD(result))
    {
      v15 = (unsigned int *)(*v14 + 12 * (int)result);
      result = sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v15 + 32), a2, *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v15 + 2) << 32), v5, v16);
      if (v16[0])
      {
        result = sub_1B1E1A9A0((uint64_t)&type metadata for AABB, v16[0], a3, a2);
        v13 = 0;
        v9 = v16[0];
        v10 = v16[1];
        v11 = v16[2];
        v12 = v16[3];
        goto LABEL_3;
      }
    }
    goto LABEL_2;
  }
LABEL_3:
  *(_QWORD *)a4 = v9;
  *(_QWORD *)(a4 + 8) = v10;
  *(_QWORD *)(a4 + 16) = v11;
  *(_QWORD *)(a4 + 24) = v12;
  *(_BYTE *)(a4 + 32) = v13;
  return result;
}

uint64_t sub_1B1A85FB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v12 = (unsigned int *)(v11 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v13);
    if (v13)
    {
      sub_1B1E1A9A0((uint64_t)&type metadata for EvolutionMode, v13, a4, a2);
      return v13;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B1A860D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for VFXParametricModelType);
}

uint64_t sub_1B1A860E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticleColorOverPosition.GradientMode, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A861E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 5;
  result = 5;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ParticlePrimitiveRenderer.Shape, v13, a4, a2);
        return v13;
      }
      return 5;
    }
  }
  return result;
}

unint64_t sub_1B1A862F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  _QWORD *v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;

  v8 = HIDWORD(a1);
  sub_1B1A02758(0, &qword_1EEF59F50, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = v9;
  if ((_DWORD)a1 == -1 && !(_DWORD)v8)
  {
LABEL_3:
    v11 = 0;
    v12 = 1;
    goto LABEL_4;
  }
  v11 = 0;
  v12 = 1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001)
  {
    v14 = (_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a1 < *(_QWORD *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      if ((_DWORD)v8 != -1 && *(_DWORD *)(*v14 + 12 * (int)a1 + 8) != (_DWORD)v8)
        goto LABEL_3;
      v15 = (unsigned int *)(*v14 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * (int)*v15 + 32), a2, *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v15+ 2) << 32), v4, &v17);
      if (!v17)
        goto LABEL_3;
      sub_1B1E1A9A0(v10, v17, a4, a2);
      v12 = 0;
      v16 = 0x100000000;
      if (!BYTE4(v17))
        v16 = 0;
      v11 = v16 | v17;
    }
  }
LABEL_4:
  LOBYTE(v17) = v12;
  return v11 | ((unint64_t)v12 << 40);
}

uint64_t sub_1B1A86458(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 7;
  result = 7;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for FluidSolver2DSolverBorderType, v13, a4, a2);
        return v13;
      }
      return 7;
    }
  }
  return result;
}

uint64_t sub_1B1A86560(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 8;
  result = 8;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for FluidSolver2DSolverSetupType, v13, a4, a2);
        return v13;
      }
      return 8;
    }
  }
  return result;
}

uint64_t sub_1B1A86668(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 6;
  result = 6;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for FlockingLocalAxis, v13, a4, a2);
        return v13;
      }
      return 6;
    }
  }
  return result;
}

uint64_t sub_1B1A86770(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A86A94(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for VFXCameraToneMappingMode);
}

uint64_t sub_1B1A8677C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 4;
  result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for ImageResizingMode, v13, a4, a2);
        return v13;
      }
      return 4;
    }
  }
  return result;
}

uint64_t sub_1B1A86884(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for TextureMipFilterMode, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A8698C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 2;
  result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for FilterMode, v13, a4, a2);
        return v13;
      }
      return 2;
    }
  }
  return result;
}

uint64_t sub_1B1A86A94(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;

  v9 = HIDWORD(a1);
  v10 = a5(0);
  if ((_DWORD)a1 == -1 && !(_DWORD)v9)
    return 0;
  result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 != -1 && *(_DWORD *)(v12 + 12 * (int)a1 + 8) != (_DWORD)v9)
      return 0;
    v13 = (unsigned int *)(v12 + 12 * (int)a1);
    sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v13 + 32), a2, *v13 | ((unint64_t)*((unsigned __int16 *)v13 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v13 + 2) << 32), v5, &v14);
    if (v14)
    {
      sub_1B1E1A9A0(v10, v14, a4, a2);
      return v14;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B1A86BCC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for Material.Kind, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A86CD4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 3;
  result = 3;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for KillShape.Shape, v13, a4, a2);
        return v13;
      }
      return 3;
    }
  }
  return result;
}

uint64_t sub_1B1A86DDC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A84EC4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1B1AE8014);
}

uint64_t sub_1B1A86DE8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;

  v5 = v4;
  v9 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
    return 2;
  result = 2;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((_DWORD)v9 == -1 || *(_DWORD *)(v11 + 12 * (int)a1 + 8) == (_DWORD)v9)
    {
      v12 = (unsigned int *)(v11 + 12 * (int)a1);
      sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v12 + 32), a2, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12+ 2) << 32), v5, &v13);
      if (v13)
      {
        sub_1B1E1A9A0((uint64_t)&type metadata for MeshImportOptions.Loader, v13, a4, a2);
        return v13;
      }
      return 2;
    }
  }
  return result;
}

uint64_t sub_1B1A86EF0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;

  v5 = v4;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    v9 = *(_QWORD *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v9 + 12 * (int)result + 8) == HIDWORD(result))
    {
      v10 = (unsigned int *)(v9 + 12 * (int)result);
      result = sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * (int)*v10 + 32), a2, *v10 | ((unint64_t)*((unsigned __int16 *)v10 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v10 + 2) << 32), v5, &v11);
      if (v11)
        return sub_1B1E1A9A0(MEMORY[0x1E0DEE9B8] + 8, v11, a3, a2);
    }
  }
  *a4 = 0u;
  a4[1] = 0u;
  return result;
}

uint64_t sub_1B1A87000(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1A870AC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1B0B5B8);
    return swift_release();
  }
  return result;
}

_QWORD *sub_1B1A87150(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7EA8;
  v8[5] = a3;
  v8[2] = sub_1B1AF7ED8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF7F28;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8725C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7E40;
  v8[5] = a3;
  v8[2] = sub_1B1AF7E70;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87368(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7DBC;
  v8[5] = a3;
  v8[2] = sub_1B1AF7DF4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF80C0;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8745C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59D18, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldCullMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7D58;
  v8[5] = a3;
  v8[2] = sub_1B1AF7D88;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF81CC;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87568(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59D10, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldShape, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7D08;
  v8[5] = a3;
  v8[2] = sub_1B1AF7D38;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF8268;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87674(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF595A8, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7CB8;
  v8[5] = a3;
  v8[2] = sub_1B1AF7CE8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF8304;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87780(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7C38;
  v8[5] = a3;
  v8[2] = sub_1B1AF7C68;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF83F0;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8788C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7BE8;
  v8[5] = a3;
  v8[2] = sub_1B1AF7C18;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87998(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59D08, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7B98;
  v8[5] = a3;
  v8[2] = sub_1B1AF7BC8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF859C;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87AA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7B48;
  v8[5] = a3;
  v8[2] = sub_1B1AF7B78;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF8638;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87BB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3190;
  v8[5] = a3;
  v8[2] = sub_1B1AE31C0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE3210;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87CBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD31C;
  v8[5] = a3;
  v8[2] = sub_1B1AFD34C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87DC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADEED8;
  v8[5] = a3;
  v8[2] = sub_1B1ADEF08;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1ADEF7C;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87ED4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE514C;
  v8[5] = a3;
  v8[2] = sub_1B1AE517C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A87FE0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE50F4;
  v8[5] = a3;
  v8[2] = sub_1B1AE512C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE528C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A880D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE50A4;
  v8[5] = a3;
  v8[2] = sub_1B1AE50D4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A881E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5054;
  v8[5] = a3;
  v8[2] = sub_1B1AE5084;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A882EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE108C;
  v8[5] = a3;
  v8[2] = sub_1B1AE10C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A883E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE101C;
  v8[5] = a3;
  v8[2] = sub_1B1AE1054;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A884D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1ED4B8118, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE0F94;
  v8[5] = a3;
  v8[2] = sub_1B1AE0FC4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE160C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A885E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3688;
  v8[5] = a3;
  v8[2] = sub_1B1AE36B8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A886EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD434;
  v8[5] = a3;
  v8[2] = sub_1B1AFD464;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A887F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AEABCC(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B068FC;
  v8[5] = a3;
  v8[2] = sub_1B1B06934;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0697C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C038;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A888EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59388, (uint64_t)&type metadata for Asset, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B068B4;
  v8[5] = a3;
  v8[2] = sub_1B1B068DC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D460;
  v3[3] = v9;
  v3[4] = sub_1B1B0C034;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A889F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8048, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF1230;
  v8[5] = a3;
  v8[2] = sub_1B1AF1260;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF12B0;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A88B04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF1184;
  v8[5] = a3;
  v8[2] = sub_1B1AF11B4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A88C10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8090, (uint64_t)&type metadata for MotionDistribution, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF1134;
  v8[5] = a3;
  v8[2] = sub_1B1AF1164;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF145C;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A88D1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AF0FE0(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0FB8;
  v8[5] = a3;
  v8[2] = sub_1B1AF0FD8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF15E8;
  v3[3] = v9;
  v3[4] = sub_1B1AF15F4;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A88E10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0F08;
  v8[5] = a3;
  v8[2] = sub_1B1AF0F40;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A88F04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8060, (uint64_t)&type metadata for EmitterShape.Direction, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0E70;
  v8[5] = a3;
  v8[2] = sub_1B1AF0E90;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF18D4;
  v3[3] = v9;
  v3[4] = sub_1B1AF1900;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89010(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0DF8;
  v8[5] = a3;
  v8[2] = sub_1B1AF0E28;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8911C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0DA8;
  v8[5] = a3;
  v8[2] = sub_1B1AF0DD8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89228(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AF0C94(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0C5C;
  v8[5] = a3;
  v8[2] = sub_1B1AF0C8C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF1BC4;
  v3[3] = v9;
  v3[4] = sub_1B1AF1BE8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8931C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8070, (uint64_t)&type metadata for EmissionOrder, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0B88;
  v8[5] = a3;
  v8[2] = sub_1B1AF0BB8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF1D94;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89428(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8088, (uint64_t)&type metadata for ShapeDistribution, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0AF8;
  v8[5] = a3;
  v8[2] = sub_1B1AF0B18;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF1E80;
  v3[3] = v9;
  v3[4] = sub_1B1AF1900;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89534(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0A00;
  v8[5] = a3;
  v8[2] = sub_1B1AF0A30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF1FFC;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89628(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF0988;
  v8[5] = a3;
  v8[2] = sub_1B1AF09B8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89734(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8058, (uint64_t)&type metadata for EmitterShape.Shape, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF08F0;
  v8[5] = a3;
  v8[2] = sub_1B1AF0920;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF21F4;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89840(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF08A0;
  v8[5] = a3;
  v8[2] = sub_1B1AF08D0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8994C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6904;
  v8[5] = a3;
  v8[2] = sub_1B1AE6934;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89A58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3448;
  v8[5] = a3;
  v8[2] = sub_1B1AE3480;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89B4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFBC94;
  v8[5] = a3;
  v8[2] = sub_1B1AFBCC4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89C58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFBC44;
  v8[5] = a3;
  v8[2] = sub_1B1AFBC74;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89D64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE1B10;
  v8[5] = a3;
  v8[2] = sub_1B1AE1B40;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89E70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7874;
  v8[5] = a3;
  v8[2] = sub_1B1AE789C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE78EC;
  v3[3] = v9;
  v3[4] = sub_1B1AE7908;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A89F7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF593E8, (uint64_t)&type metadata for VideoCapture.OrientationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7824;
  v8[5] = a3;
  v8[2] = sub_1B1AE7854;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE79EC;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A088(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE77D4;
  v8[5] = a3;
  v8[2] = sub_1B1AE7804;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A194(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7754;
  v8[5] = a3;
  v8[2] = sub_1B1AE7784;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A2A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3568;
  v8[5] = a3;
  v8[2] = sub_1B1AE35A0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A394(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEAA4C;
  v8[5] = a3;
  v8[2] = sub_1B1AEAA7C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A4A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEAC68;
  v8[5] = a3;
  v8[2] = sub_1B1AEAC98;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A5AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AEABCC(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEAB74;
  v8[5] = a3;
  v8[2] = sub_1B1AEABAC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4C4;
  v3[3] = v9;
  v3[4] = sub_1B1B0C038;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A6A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF778;
  v8[5] = a3;
  v8[2] = sub_1B1AFF7A0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A7AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A1A0, (uint64_t)&type metadata for Language, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF728;
  v8[5] = a3;
  v8[2] = sub_1B1AFF750;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFF83C;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A8B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59390, (uint64_t (*)(uint64_t))sub_1B1AE717C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE712C;
  v8[5] = a3;
  v8[2] = sub_1B1AE715C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE7218;
  v3[3] = v9;
  v3[4] = sub_1B1AE7224;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8A9C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59388, (uint64_t)&type metadata for Asset, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE70E4;
  v8[5] = a3;
  v8[2] = sub_1B1AE710C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D460;
  v3[3] = v9;
  v3[4] = sub_1B1B0C034;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8AAD0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7C40;
  v8[5] = a3;
  v8[2] = sub_1B1AE7C70;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8ABDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3E58;
  v8[5] = a3;
  v8[2] = sub_1B1AE3E88;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8ACE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2E48;
  v8[5] = a3;
  v8[2] = sub_1B1AE2E78;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8ADF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF590A8, (uint64_t)&type metadata for EntitySpace, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8B2C;
  v8[5] = a3;
  v8[2] = sub_1B1AF8B5C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A4;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8AF00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8ADC;
  v8[5] = a3;
  v8[2] = sub_1B1AF8B0C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B00C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8A54;
  v8[5] = a3;
  v8[2] = sub_1B1AF8A8C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B100(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFC5A8;
  v8[5] = a3;
  v8[2] = sub_1B1AFC5D8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B20C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFC558;
  v8[5] = a3;
  v8[2] = sub_1B1AFC588;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B318(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFC508;
  v8[5] = a3;
  v8[2] = sub_1B1AFC538;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B424(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80D0, (uint64_t)&type metadata for NoiseKind, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFC4B8;
  v8[5] = a3;
  v8[2] = sub_1B1AFC4E8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFC880;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B530(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFC468;
  v8[5] = a3;
  v8[2] = sub_1B1AFC498;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B63C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3FCC;
  v8[5] = a3;
  v8[2] = sub_1B1AE4004;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B730(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF590A8, (uint64_t)&type metadata for EntitySpace, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2688;
  v8[5] = a3;
  v8[2] = sub_1B1AE26B8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE2708;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B83C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2638;
  v8[5] = a3;
  v8[2] = sub_1B1AE2668;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8B948(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEB8A0;
  v8[5] = a3;
  v8[2] = sub_1B1AEB8C8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8BA54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1ED4B8038, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA758;
  v8[5] = a3;
  v8[2] = sub_1B1AEA780;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AEA7D0;
  v3[3] = v9;
  v3[4] = sub_1B1AEA7EC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8BB60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA710;
  v8[5] = a3;
  v8[2] = sub_1B1AEA738;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8BC6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5600;
  v8[5] = a3;
  v8[2] = sub_1B1AE5630;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8BD78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59218, (uint64_t)&type metadata for LensBlurQuality, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE55B0;
  v8[5] = a3;
  v8[2] = sub_1B1AE55E0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE5748;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8BE84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5560;
  v8[5] = a3;
  v8[2] = sub_1B1AE5590;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8BF90(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE54E0;
  v8[5] = a3;
  v8[2] = sub_1B1AE5510;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C09C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE6B80(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6B30;
  v8[5] = a3;
  v8[2] = sub_1B1AE6B60;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE6C90;
  v3[3] = v9;
  v3[4] = sub_1B1AE6CAC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C190(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF067C;
  v8[5] = a3;
  v8[2] = sub_1B1AF06AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C29C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF062C;
  v8[5] = a3;
  v8[2] = sub_1B1AF065C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C3A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA478;
  v8[5] = a3;
  v8[2] = sub_1B1AEA4A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C4B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1ED4B8038, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA430;
  v8[5] = a3;
  v8[2] = sub_1B1AEA458;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D46C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C03C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C5C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA3E8;
  v8[5] = a3;
  v8[2] = sub_1B1AEA410;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C6CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE38B8;
  v8[5] = a3;
  v8[2] = sub_1B1AE38F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C7C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59298, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6054;
  v8[5] = a3;
  v8[2] = sub_1B1AE6084;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE60BC;
  v3[3] = v9;
  v3[4] = sub_1B1AE60C8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C8CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6004;
  v8[5] = a3;
  v8[2] = sub_1B1AE6034;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8C9D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59290, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5FB4;
  v8[5] = a3;
  v8[2] = sub_1B1AE5FE4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE6230;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8CAE4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59058, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE1C3C;
  v8[5] = a3;
  v8[2] = sub_1B1AE1C6C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE1CBC;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8CBF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59388, (uint64_t)&type metadata for Asset, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B067B0;
  v8[5] = a3;
  v8[2] = sub_1B1B067D8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D460;
  v3[3] = v9;
  v3[4] = sub_1B1B0C034;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8CCFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B07510;
  v8[5] = a3;
  v8[2] = sub_1B1B07548;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8CDF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B074C0;
  v8[5] = a3;
  v8[2] = sub_1B1B074F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8CEFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8130, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE083C;
  v8[5] = a3;
  v8[2] = sub_1B1AE0864;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE08BC;
  v3[3] = v9;
  v3[4] = sub_1B1AE08D8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D008(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE24E8;
  v8[5] = a3;
  v8[2] = sub_1B1AE2520;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D0FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA93C;
  v8[5] = a3;
  v8[2] = sub_1B1AEA96C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D208(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08DF4;
  v8[5] = a3;
  v8[2] = sub_1B1B08DFC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D314(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08E98;
  v8[5] = a3;
  v8[2] = sub_1B1B08EA0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D420(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08F34;
  v8[5] = a3;
  v8[2] = sub_1B1B08F3C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D514(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08FF8;
  v8[5] = a3;
  v8[2] = sub_1B1B09000;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D620(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09094;
  v8[5] = a3;
  v8[2] = sub_1B1B0909C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D714(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF5A6D0, (uint64_t (*)(uint64_t))type metadata accessor for VFXLightType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09158;
  v8[5] = a3;
  v8[2] = sub_1B1B09160;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B09168;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D820(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD7CC;
  v8[5] = a3;
  v8[2] = sub_1B1AFD7FC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8D92C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD77C;
  v8[5] = a3;
  v8[2] = sub_1B1AFD7AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8DA38(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDCE0;
  v8[5] = a3;
  v8[2] = sub_1B1AEDD10;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8DB44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AECF90;
  v8[5] = a3;
  v8[2] = sub_1B1AECFC0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8DC50(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59388, (uint64_t)&type metadata for Asset, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE75B4;
  v8[5] = a3;
  v8[2] = sub_1B1AE75DC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE762C;
  v3[3] = v9;
  v3[4] = sub_1B1AE7648;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8DD5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AEB608(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEB5F8;
  v8[5] = a3;
  v8[2] = sub_1B1AEB600;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AEB708;
  v3[3] = v9;
  v3[4] = sub_1B1AEB714;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8DE50(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1ED4B8038, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEAF7C;
  v8[5] = a3;
  v8[2] = sub_1B1AEAFA4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D46C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C03C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8DF5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEAF34;
  v8[5] = a3;
  v8[2] = sub_1B1AEAF5C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E068(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8130, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B091E8;
  v8[5] = a3;
  v8[2] = sub_1B1B091F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D434;
  v3[3] = v9;
  v3[4] = sub_1B1B0C02C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E174(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09220;
  v8[5] = a3;
  v8[2] = sub_1B1B09228;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B09230;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E268(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09300;
  v8[5] = a3;
  v8[2] = sub_1B1B09308;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E374(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B093A4;
  v8[5] = a3;
  v8[2] = sub_1B1B093AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E480(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5C30;
  v8[5] = a3;
  v8[2] = sub_1B1AE5C60;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E58C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD204;
  v8[5] = a3;
  v8[2] = sub_1B1AFD234;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E698(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1ADF9C4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFBF64;
  v8[5] = a3;
  v8[2] = sub_1B1AFBF8C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFBFD4;
  v3[3] = v9;
  v3[4] = sub_1B1ADFB00;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E78C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59FD8, (uint64_t)&type metadata for TargetDataKind, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFBF14;
  v8[5] = a3;
  v8[2] = sub_1B1AFBF44;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFC168;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E898(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59FD0, (uint64_t)&type metadata for SourceDataKind, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFBEC4;
  v8[5] = a3;
  v8[2] = sub_1B1AFBEF4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFC25C;
  v3[3] = v9;
  v3[4] = sub_1B1AFBA30;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8E9A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFBE74;
  v8[5] = a3;
  v8[2] = sub_1B1AFBEA4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8EAB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2D30;
  v8[5] = a3;
  v8[2] = sub_1B1AE2D60;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8EBBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEEAFC;
  v8[5] = a3;
  v8[2] = sub_1B1AEEB2C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8ECC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEEAAC;
  v8[5] = a3;
  v8[2] = sub_1B1AEEADC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8EDBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE37A0;
  v8[5] = a3;
  v8[2] = sub_1B1AE37D0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8EEC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEE97C;
  v8[5] = a3;
  v8[2] = sub_1B1AEE9AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8EFBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEF4CC;
  v8[5] = a3;
  v8[2] = sub_1B1AEF4FC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F0B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80D8, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEF47C;
  v8[5] = a3;
  v8[2] = sub_1B1AEF4AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AEF654;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F1BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEF42C;
  v8[5] = a3;
  v8[2] = sub_1B1AEF45C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F2C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59818, (uint64_t)&type metadata for ParticleSubSpawn.Mode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDF68;
  v8[5] = a3;
  v8[2] = sub_1B1AEDF98;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AEDFE8;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F3D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDF18;
  v8[5] = a3;
  v8[2] = sub_1B1AEDF48;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F4E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDE98;
  v8[5] = a3;
  v8[2] = sub_1B1AEDEC8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F5EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDE48;
  v8[5] = a3;
  v8[2] = sub_1B1AEDE78;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F6F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDDF8;
  v8[5] = a3;
  v8[2] = sub_1B1AEDE28;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F804(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8130, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4168;
  v8[5] = a3;
  v8[2] = sub_1B1AE4190;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D434;
  v3[3] = v9;
  v3[4] = sub_1B1B0C02C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8F910(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1ED4B8038, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA1AC;
  v8[5] = a3;
  v8[2] = sub_1B1AEA1D4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D46C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C03C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8FA1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEA164;
  v8[5] = a3;
  v8[2] = sub_1B1AEA18C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8FB28(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4CB4;
  v8[5] = a3;
  v8[2] = sub_1B1AF4CE4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8FC34(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4C64;
  v8[5] = a3;
  v8[2] = sub_1B1AF4C94;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8FD40(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59250, (uint64_t)&type metadata for ToneMappingOperator, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5A20;
  v8[5] = a3;
  v8[2] = sub_1B1AE5A50;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE5AA0;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8FE4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE59D0;
  v8[5] = a3;
  v8[2] = sub_1B1AE5A00;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A8FF58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEF910;
  v8[5] = a3;
  v8[2] = sub_1B1AEF940;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9004C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFF70;
  v8[5] = a3;
  v8[2] = sub_1B1AEFFA0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90158(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFF18;
  v8[5] = a3;
  v8[2] = sub_1B1AEFF50;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9024C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C8, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFEB8;
  v8[5] = a3;
  v8[2] = sub_1B1AEFEE0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D47C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C040;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90358(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59930, (uint64_t)&type metadata for ParticleColorInit.Mode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFE08;
  v8[5] = a3;
  v8[2] = sub_1B1AEFE38;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF02C0;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90464(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFD70;
  v8[5] = a3;
  v8[2] = sub_1B1AEFDA0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90570(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFD20;
  v8[5] = a3;
  v8[2] = sub_1B1AEFD50;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF04B0;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9067C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFCD0;
  v8[5] = a3;
  v8[2] = sub_1B1AEFD00;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90788(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2C18;
  v8[5] = a3;
  v8[2] = sub_1B1AE2C48;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90894(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEF7E0;
  v8[5] = a3;
  v8[2] = sub_1B1AEF810;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90988(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2B00;
  v8[5] = a3;
  v8[2] = sub_1B1AE2B30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90A94(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4518;
  v8[5] = a3;
  v8[2] = sub_1B1AE4548;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90B88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8098, (uint64_t)&type metadata for ProjectionDirection, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE44C8;
  v8[5] = a3;
  v8[2] = sub_1B1AE44F8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE46A8;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90C94(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4478;
  v8[5] = a3;
  v8[2] = sub_1B1AE44A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90DA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4394;
  v8[5] = a3;
  v8[2] = sub_1B1AE43C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90E94(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE42C4;
  v8[5] = a3;
  v8[2] = sub_1B1AE42F4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A90FA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8090, (uint64_t)&type metadata for MotionDistribution, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2530;
  v8[5] = a3;
  v8[2] = sub_1B1AF2560;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D488;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A910AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF24E0;
  v8[5] = a3;
  v8[2] = sub_1B1AF2510;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A911B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2460;
  v8[5] = a3;
  v8[2] = sub_1B1AF2490;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A912C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2410;
  v8[5] = a3;
  v8[2] = sub_1B1AF2440;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A913D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF23C0;
  v8[5] = a3;
  v8[2] = sub_1B1AF23F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A914C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2370;
  v8[5] = a3;
  v8[2] = sub_1B1AF23A0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A915D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2A98;
  v8[5] = a3;
  v8[2] = sub_1B1AF2AC8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A916DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2A48;
  v8[5] = a3;
  v8[2] = sub_1B1AF2A78;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A917E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59728, (uint64_t)&type metadata for TextureFallback, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AECA68;
  v8[5] = a3;
  v8[2] = sub_1B1AECA98;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D474;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A918F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEC9F0;
  v8[5] = a3;
  v8[2] = sub_1B1AECA20;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A91A00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEB4E8;
  v8[5] = a3;
  v8[2] = sub_1B1AEB510;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A91B0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5D98;
  v8[5] = a3;
  v8[2] = sub_1B1AE5DD0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A91C00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE5D48;
  v8[5] = a3;
  v8[2] = sub_1B1AE5D78;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A91D0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4F3C;
  v8[5] = a3;
  v8[2] = sub_1B1AE4F6C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A91E18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C8, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6A1C;
  v8[5] = a3;
  v8[2] = sub_1B1AE6A44;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D47C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C040;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A91F24(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFCEBC;
  v8[5] = a3;
  v8[2] = sub_1B1AFCEEC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92030(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1ADF9C4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADF97C;
  v8[5] = a3;
  v8[2] = sub_1B1ADF9A4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D470;
  v3[3] = v9;
  v3[4] = sub_1B1ADFB00;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92124(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADF92C;
  v8[5] = a3;
  v8[2] = sub_1B1ADF95C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92230(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF58F10, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADF8DC;
  v8[5] = a3;
  v8[2] = sub_1B1ADF90C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1ADFD7C;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9233C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADF88C;
  v8[5] = a3;
  v8[2] = sub_1B1ADF8BC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92448(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADF81C;
  v8[5] = a3;
  v8[2] = sub_1B1ADF84C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92554(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B000;
  v8[5] = a3;
  v8[2] = sub_1B1B0B008;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92660(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B09C;
  v8[5] = a3;
  v8[2] = sub_1B1B0B0A4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92754(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7458;
  v8[5] = a3;
  v8[2] = sub_1B1AE7480;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92860(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4BD4;
  v8[5] = a3;
  v8[2] = sub_1B1AE4C04;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92954(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4B84;
  v8[5] = a3;
  v8[2] = sub_1B1AE4BB4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92A60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8098, (uint64_t)&type metadata for ProjectionDirection, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4B34;
  v8[5] = a3;
  v8[2] = sub_1B1AE4B64;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D454;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92B6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE4AE4;
  v8[5] = a3;
  v8[2] = sub_1B1AE4B14;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92C78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AED570(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AED520;
  v8[5] = a3;
  v8[2] = sub_1B1AED550;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AED6C8;
  v3[3] = v9;
  v3[4] = sub_1B1AED6E4;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92D6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8744;
  v8[5] = a3;
  v8[2] = sub_1B1AF8774;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92E78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF86F4;
  v8[5] = a3;
  v8[2] = sub_1B1AF8724;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A92F84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF94C;
  v8[5] = a3;
  v8[2] = sub_1B1AFF974;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A93090(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A1A0, (uint64_t)&type metadata for Language, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF8B0;
  v8[5] = a3;
  v8[2] = sub_1B1AFF8D8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B0;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9319C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDBC8;
  v8[5] = a3;
  v8[2] = sub_1B1AEDBF8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A932A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0855C;
  v8[5] = a3;
  v8[2] = sub_1B1B08564;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A933B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08600;
  v8[5] = a3;
  v8[2] = sub_1B1B08608;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A934C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A620, (uint64_t)&type metadata for SimpleFontDescription, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B086A4;
  v8[5] = a3;
  v8[2] = sub_1B1B086AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B086B4;
  v3[3] = v9;
  v3[4] = sub_1B1B086C0;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A935CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B087E0;
  v8[5] = a3;
  v8[2] = sub_1B1B087E8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A936D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08884;
  v8[5] = a3;
  v8[2] = sub_1B1B0888C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A937E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A650, (uint64_t)&type metadata for PrimitiveGenerator.PrimitiveType, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08928;
  v8[5] = a3;
  v8[2] = sub_1B1B08930;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B08938;
  v3[3] = v9;
  v3[4] = sub_1B1B08944;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A938F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08A28;
  v8[5] = a3;
  v8[2] = sub_1B1B08A30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A939FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEB9F8;
  v8[5] = a3;
  v8[2] = sub_1B1AEBA28;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A93B08(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEC720;
  v8[5] = a3;
  v8[2] = sub_1B1AEC750;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A93C14(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8078, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEC6D0;
  v8[5] = a3;
  v8[2] = sub_1B1AEC700;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D494;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A93D20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEC680;
  v8[5] = a3;
  v8[2] = sub_1B1AEC6B0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A93E2C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&qword_1EEF5A930, (uint64_t (*)(uint64_t))sub_1B1B0B6B8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B74C;
  v8[5] = a3;
  v8[2] = sub_1B1B0B754;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0B75C;
  v3[3] = v9;
  v3[4] = sub_1B1B0B788;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A93F38(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1EEF63540, (uint64_t (*)(uint64_t))type metadata accessor for MTLStorageMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B7D4;
  v8[5] = a3;
  v8[2] = sub_1B1B0B7DC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0B7E4;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94044(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A968, (uint64_t)&type metadata for MetalFunctionReflection, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B864;
  v8[5] = a3;
  v8[2] = sub_1B1B0B86C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0B874;
  v3[3] = v9;
  v3[4] = sub_1B1B0B880;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94150(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B97C;
  v8[5] = a3;
  v8[2] = sub_1B1B0B984;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9425C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59290, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0BA20;
  v8[5] = a3;
  v8[2] = sub_1B1B0BA28;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4CC;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94368(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0BA84;
  v8[5] = a3;
  v8[2] = sub_1B1B0BA8C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94474(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A998, (uint64_t)&type metadata for KernelReference, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0BB28;
  v8[5] = a3;
  v8[2] = sub_1B1B0BB30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0BB38;
  v3[3] = v9;
  v3[4] = sub_1B1B0BB44;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94580(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B488;
  v8[5] = a3;
  v8[2] = sub_1B1B0B490;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9468C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B524;
  v8[5] = a3;
  v8[2] = sub_1B1B0B52C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94780(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8130, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B244;
  v8[5] = a3;
  v8[2] = sub_1B1B0B24C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D434;
  v3[3] = v9;
  v3[4] = sub_1B1B0C02C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9488C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B284;
  v8[5] = a3;
  v8[2] = sub_1B1B0B28C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94998(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A588, (uint64_t)&type metadata for FillMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B07A84;
  v8[5] = a3;
  v8[2] = sub_1B1B07AB4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B07B34;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94AA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B07894;
  v8[5] = a3;
  v8[2] = sub_1B1B078C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94B98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A580, (uint64_t)&type metadata for EasingFunction, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B077C0;
  v8[5] = a3;
  v8[2] = sub_1B1B077C8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B07DB0;
  v3[3] = v9;
  v3[4] = sub_1B1B07DBC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94CA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B07770;
  v8[5] = a3;
  v8[2] = sub_1B1B077A0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94DB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B076F8;
  v8[5] = a3;
  v8[2] = sub_1B1B07728;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94EBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B083E8;
  v8[5] = a3;
  v8[2] = sub_1B1B08410;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A94FC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE418;
  v8[5] = a3;
  v8[2] = sub_1B1AFE448;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A950D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE3C8;
  v8[5] = a3;
  v8[2] = sub_1B1AFE3F8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A951E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE378;
  v8[5] = a3;
  v8[2] = sub_1B1AFE3A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A952EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B029B8;
  v8[5] = a3;
  v8[2] = sub_1B1B029E8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B02A38;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A953F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B02968;
  v8[5] = a3;
  v8[2] = sub_1B1B02998;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95504(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B02918;
  v8[5] = a3;
  v8[2] = sub_1B1B02948;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B02C0C;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95610(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B028C8;
  v8[5] = a3;
  v8[2] = sub_1B1B028F8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9571C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B02878;
  v8[5] = a3;
  v8[2] = sub_1B1B028A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95828(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B02828;
  v8[5] = a3;
  v8[2] = sub_1B1B02858;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B02E90;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95934(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B027D8;
  v8[5] = a3;
  v8[2] = sub_1B1B02808;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95A40(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B02788;
  v8[5] = a3;
  v8[2] = sub_1B1B027B8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95B4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEE544;
  v8[5] = a3;
  v8[2] = sub_1B1AEE574;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95C58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEE4F4;
  v8[5] = a3;
  v8[2] = sub_1B1AEE524;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95D64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEE49C;
  v8[5] = a3;
  v8[2] = sub_1B1AEE4D4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95E58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80D0, (uint64_t)&type metadata for NoiseKind, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEE44C;
  v8[5] = a3;
  v8[2] = sub_1B1AEE47C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4AC;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A95F64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEE3FC;
  v8[5] = a3;
  v8[2] = sub_1B1AEE42C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96070(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE9C0;
  v8[5] = a3;
  v8[2] = sub_1B1AFE9F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9617C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE970;
  v8[5] = a3;
  v8[2] = sub_1B1AFE9A0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96288(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE920;
  v8[5] = a3;
  v8[2] = sub_1B1AFE950;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96394(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59388, (uint64_t)&type metadata for Asset, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE94C4;
  v8[5] = a3;
  v8[2] = sub_1B1AE94EC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D460;
  v3[3] = v9;
  v3[4] = sub_1B1B0C034;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A964A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59570, (uint64_t (*)(uint64_t))sub_1B1AE9640, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE95F0;
  v8[5] = a3;
  v8[2] = sub_1B1AE9620;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE96C8;
  v3[3] = v9;
  v3[4] = sub_1B1AE96F4;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A965AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF595A8, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE9BEC;
  v8[5] = a3;
  v8[2] = sub_1B1AE9C1C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D49C;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A966B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE9A70;
  v8[5] = a3;
  v8[2] = sub_1B1AE9AA0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A967C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF595A0, (uint64_t)&type metadata for PointCache.Distribution, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE99E4;
  v8[5] = a3;
  v8[2] = sub_1B1AE9A14;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE9DFC;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A968D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE9994;
  v8[5] = a3;
  v8[2] = sub_1B1AE99C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A969DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE9914;
  v8[5] = a3;
  v8[2] = sub_1B1AE9944;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96AE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE98C4;
  v8[5] = a3;
  v8[2] = sub_1B1AE98F4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96BF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFCAE4;
  v8[5] = a3;
  v8[2] = sub_1B1AFCB14;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96D00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFCA94;
  v8[5] = a3;
  v8[2] = sub_1B1AFCAC4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96E0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFCA44;
  v8[5] = a3;
  v8[2] = sub_1B1AFCA74;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A96F18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A048, (uint64_t)&type metadata for AngleF, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFCA0C;
  v8[5] = a3;
  v8[2] = sub_1B1AFCA3C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFCDBC;
  v3[3] = v9;
  v3[4] = sub_1B1AFCDE8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97024(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AECCE8;
  v8[5] = a3;
  v8[2] = sub_1B1AECD18;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97130(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AECC98;
  v8[5] = a3;
  v8[2] = sub_1B1AECCC8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9723C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AECC48;
  v8[5] = a3;
  v8[2] = sub_1B1AECC78;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97348(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5AA10, (uint64_t)&type metadata for GraphScriptingConfig.Mode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0BED8;
  v8[5] = a3;
  v8[2] = sub_1B1B0BEE0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0BEE8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97454(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00DFC;
  v8[5] = a3;
  v8[2] = sub_1B1B00E2C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97560(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B010F4;
  v8[5] = a3;
  v8[2] = sub_1B1B01124;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B4;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9766C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B010A4;
  v8[5] = a3;
  v8[2] = sub_1B1B010D4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97778(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B01054;
  v8[5] = a3;
  v8[2] = sub_1B1B01084;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97884(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B01004;
  v8[5] = a3;
  v8[2] = sub_1B1B01034;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97990(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00FB4;
  v8[5] = a3;
  v8[2] = sub_1B1B00FE4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97A9C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00F64;
  v8[5] = a3;
  v8[2] = sub_1B1B00F94;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97BA8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00F14;
  v8[5] = a3;
  v8[2] = sub_1B1B00F44;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97CB4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFED20;
  v8[5] = a3;
  v8[2] = sub_1B1AFED50;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97DC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFECD0;
  v8[5] = a3;
  v8[2] = sub_1B1AFED00;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97ECC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFEC80;
  v8[5] = a3;
  v8[2] = sub_1B1AFECB0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A97FD8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B05C70;
  v8[5] = a3;
  v8[2] = sub_1B1B05CA0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A980E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B05C20;
  v8[5] = a3;
  v8[2] = sub_1B1B05C50;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A981F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B05BD0;
  v8[5] = a3;
  v8[2] = sub_1B1B05C00;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A982FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B05B50;
  v8[5] = a3;
  v8[2] = sub_1B1B05B80;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98408(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8078, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B01A88;
  v8[5] = a3;
  v8[2] = sub_1B1B01AB8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D494;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98514(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B01A08;
  v8[5] = a3;
  v8[2] = sub_1B1B01A38;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98620(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B019B8;
  v8[5] = a3;
  v8[2] = sub_1B1B019E8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98714(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B01968;
  v8[5] = a3;
  v8[2] = sub_1B1B01998;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98820(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B01918;
  v8[5] = a3;
  v8[2] = sub_1B1B01948;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9892C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B018C0;
  v8[5] = a3;
  v8[2] = sub_1B1B018F8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98A20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80B0, (uint64_t)&type metadata for ParticleOrientationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0185C;
  v8[5] = a3;
  v8[2] = sub_1B1B0188C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B02018;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98B2C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A0, (uint64_t)&type metadata for ParticleQuadRenderer.Shape, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B017DC;
  v8[5] = a3;
  v8[2] = sub_1B1B0180C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B02104;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98C38(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8120, (uint64_t (*)(uint64_t))type metadata accessor for MTLCullMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0175C;
  v8[5] = a3;
  v8[2] = sub_1B1B0178C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B021F0;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98D44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0170C;
  v8[5] = a3;
  v8[2] = sub_1B1B0173C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98E50(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0240C;
  v8[5] = a3;
  v8[2] = sub_1B1B0243C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B4;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A98F5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B023BC;
  v8[5] = a3;
  v8[2] = sub_1B1B023EC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99068(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0236C;
  v8[5] = a3;
  v8[2] = sub_1B1B0239C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99174(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0231C;
  v8[5] = a3;
  v8[2] = sub_1B1B0234C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99280(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8EBC;
  v8[5] = a3;
  v8[2] = sub_1B1AF8EEC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9938C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8E6C;
  v8[5] = a3;
  v8[2] = sub_1B1AF8E9C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99498(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1ADF9C4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8E24;
  v8[5] = a3;
  v8[2] = sub_1B1AF8E4C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D470;
  v3[3] = v9;
  v3[4] = sub_1B1ADFB00;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9958C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF8DD4;
  v8[5] = a3;
  v8[2] = sub_1B1AF8E04;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99698(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE6B80(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF34EC;
  v8[5] = a3;
  v8[2] = sub_1B1AF351C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D48C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C044;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9978C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80D8, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF349C;
  v8[5] = a3;
  v8[2] = sub_1B1AF34CC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D490;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99898(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF341C;
  v8[5] = a3;
  v8[2] = sub_1B1AF344C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A999A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF33CC;
  v8[5] = a3;
  v8[2] = sub_1B1AF37C8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99AB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF337C;
  v8[5] = a3;
  v8[2] = sub_1B1AF33AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99BBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3078;
  v8[5] = a3;
  v8[2] = sub_1B1AE30A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99CC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFFAB4;
  v8[5] = a3;
  v8[2] = sub_1B1AFFADC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99DD4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A1A0, (uint64_t)&type metadata for Language, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFFA64;
  v8[5] = a3;
  v8[2] = sub_1B1AFFA8C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B0;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99EE0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEEE14;
  v8[5] = a3;
  v8[2] = sub_1B1AEEE44;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A99FD4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEEDC4;
  v8[5] = a3;
  v8[2] = sub_1B1AEEDF4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A0E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEED74;
  v8[5] = a3;
  v8[2] = sub_1B1AEEDA4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A1EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEED24;
  v8[5] = a3;
  v8[2] = sub_1B1AEED54;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A2F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1ADF9C4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEBD40;
  v8[5] = a3;
  v8[2] = sub_1B1AEBD68;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D470;
  v3[3] = v9;
  v3[4] = sub_1B1ADFB00;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A3EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF595A8, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0AA24;
  v8[5] = a3;
  v8[2] = sub_1B1B0AA2C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D49C;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A4F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1EEF61470, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldCullMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0AAC8;
  v8[5] = a3;
  v8[2] = sub_1B1B0AAD0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0AAD8;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A604(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF5A860, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldScope, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0AB58;
  v8[5] = a3;
  v8[2] = sub_1B1B0AB60;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0AB68;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A710(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0ABE0;
  v8[5] = a3;
  v8[2] = sub_1B1B0ABE8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A804(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1EEF61460, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldShape, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0ACA4;
  v8[5] = a3;
  v8[2] = sub_1B1B0ACAC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0ACB4;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9A910(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0AD34;
  v8[5] = a3;
  v8[2] = sub_1B1B0AD3C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9AA1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0AE28;
  v8[5] = a3;
  v8[2] = sub_1B1B0AE30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9AB28(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF5A8B0, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0AECC;
  v8[5] = a3;
  v8[2] = sub_1B1B0AED4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0AEDC;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9AC34(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0AF5C;
  v8[5] = a3;
  v8[2] = sub_1B1B0AF64;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9AD40(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF71D4;
  v8[5] = a3;
  v8[2] = sub_1B1AF7204;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9AE4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59C98, (uint64_t)&type metadata for OrientationConstraint.Mode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7184;
  v8[5] = a3;
  v8[2] = sub_1B1AF71B4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF731C;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9AF58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7134;
  v8[5] = a3;
  v8[2] = sub_1B1AF7164;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B064(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04794;
  v8[5] = a3;
  v8[2] = sub_1B1B047C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B170(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2F60;
  v8[5] = a3;
  v8[2] = sub_1B1AE2F90;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B27C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2F10;
  v8[5] = a3;
  v8[2] = sub_1B1AF2F40;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B388(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C8, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2EC8;
  v8[5] = a3;
  v8[2] = sub_1B1AF2EF0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D47C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C040;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B494(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2E78;
  v8[5] = a3;
  v8[2] = sub_1B1AF2EA8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B5A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2E28;
  v8[5] = a3;
  v8[2] = sub_1B1AF2E58;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B6AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2DD8;
  v8[5] = a3;
  v8[2] = sub_1B1AF2E08;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B7B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B048AC;
  v8[5] = a3;
  v8[2] = sub_1B1B048DC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B8C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFDD58;
  v8[5] = a3;
  v8[2] = sub_1B1AFDD88;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9B9D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFDAAC;
  v8[5] = a3;
  v8[2] = sub_1B1AFDADC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9BADC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD9C4;
  v8[5] = a3;
  v8[2] = sub_1B1AFD9F4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9BBE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFFC08;
  v8[5] = a3;
  v8[2] = sub_1B1AFFC38;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9BCDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFFBB8;
  v8[5] = a3;
  v8[2] = sub_1B1AFFBE8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9BDE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B006B0;
  v8[5] = a3;
  v8[2] = sub_1B1B006E0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B4;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9BEF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00568;
  v8[5] = a3;
  v8[2] = sub_1B1B00598;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C000(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00494;
  v8[5] = a3;
  v8[2] = sub_1B1B004C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C10C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00274;
  v8[5] = a3;
  v8[2] = sub_1B1B002A4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C218(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B00110;
  v8[5] = a3;
  v8[2] = sub_1B1B00140;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C324(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B000C0;
  v8[5] = a3;
  v8[2] = sub_1B1B000F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C430(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFFEAC;
  v8[5] = a3;
  v8[2] = sub_1B1AFFEDC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C53C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEDAB0;
  v8[5] = a3;
  v8[2] = sub_1B1AEDAE0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C648(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AED3F0;
  v8[5] = a3;
  v8[2] = sub_1B1AED420;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C73C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A764;
  v8[5] = a3;
  v8[2] = sub_1B1B0A76C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C848(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A808;
  v8[5] = a3;
  v8[2] = sub_1B1B0A810;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9C954(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A8A4;
  v8[5] = a3;
  v8[2] = sub_1B1B0A8AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9CA48(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A960;
  v8[5] = a3;
  v8[2] = sub_1B1B0A968;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9CB3C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE97B4;
  v8[5] = a3;
  v8[2] = sub_1B1AE97DC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9CC48(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B064FC;
  v8[5] = a3;
  v8[2] = sub_1B1B0652C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0657C;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9CD54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B064AC;
  v8[5] = a3;
  v8[2] = sub_1B1B064DC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B06670;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9CE60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59698, (uint64_t (*)(uint64_t))sub_1B1AEB244, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEB1F4;
  v8[5] = a3;
  v8[2] = sub_1B1AEB224;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AEB290;
  v3[3] = v9;
  v3[4] = sub_1B1B0C038;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9CF6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AEB188(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEB130;
  v8[5] = a3;
  v8[2] = sub_1B1AEB168;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AEB3A8;
  v3[3] = v9;
  v3[4] = sub_1B1B0C038;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D060(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEBFD8;
  v8[5] = a3;
  v8[2] = sub_1B1AEC008;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D16C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59CC8, (uint64_t (*)(uint64_t))sub_1B1AF7598, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7548;
  v8[5] = a3;
  v8[2] = sub_1B1AF7578;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF763C;
  v3[3] = v9;
  v3[4] = sub_1B1AF7658;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D278(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF74F8;
  v8[5] = a3;
  v8[2] = sub_1B1AF7528;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D384(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA50C;
  v8[5] = a3;
  v8[2] = sub_1B1AFA53C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D490(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59EA0, (uint64_t (*)(uint64_t))sub_1B1AFA498, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA488;
  v8[5] = a3;
  v8[2] = sub_1B1AFA490;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFA654;
  v3[3] = v9;
  v3[4] = sub_1B1AFA660;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D59C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59E98, (uint64_t)&type metadata for FlockingSizeMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA438;
  v8[5] = a3;
  v8[2] = sub_1B1AFA468;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFA710;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D6A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA3E8;
  v8[5] = a3;
  v8[2] = sub_1B1AFA418;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D7B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA368;
  v8[5] = a3;
  v8[2] = sub_1B1AFA398;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D8C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA318;
  v8[5] = a3;
  v8[2] = sub_1B1AFA348;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9D9CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04F0C;
  v8[5] = a3;
  v8[2] = sub_1B1B04F3C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9DAC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A430, (uint64_t)&type metadata for ParticleRibbonTextureMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04EBC;
  v8[5] = a3;
  v8[2] = sub_1B1B04EEC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0506C;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9DBCC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A428, (uint64_t)&type metadata for ParticleRibbonProfile, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04E34;
  v8[5] = a3;
  v8[2] = sub_1B1B04E64;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B05160;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9DCD8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04DB4;
  v8[5] = a3;
  v8[2] = sub_1B1B04DE4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9DDE4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04D64;
  v8[5] = a3;
  v8[2] = sub_1B1B04D94;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B4;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9DEF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04CE4;
  v8[5] = a3;
  v8[2] = sub_1B1B04D14;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9DFFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04C94;
  v8[5] = a3;
  v8[2] = sub_1B1B04CC4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E108(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04BCC;
  v8[5] = a3;
  v8[2] = sub_1B1B04BFC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E214(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04B7C;
  v8[5] = a3;
  v8[2] = sub_1B1B04BAC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E320(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04B2C;
  v8[5] = a3;
  v8[2] = sub_1B1B04B5C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E42C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80B0, (uint64_t)&type metadata for ParticleOrientationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04A94;
  v8[5] = a3;
  v8[2] = sub_1B1B04AC4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4C0;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E538(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B04A44;
  v8[5] = a3;
  v8[2] = sub_1B1B04A74;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E644(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B049C4;
  v8[5] = a3;
  v8[2] = sub_1B1B049F4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E750(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE0B8;
  v8[5] = a3;
  v8[2] = sub_1B1AFE0E8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E85C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE068;
  v8[5] = a3;
  v8[2] = sub_1B1AFE098;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9E968(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE018;
  v8[5] = a3;
  v8[2] = sub_1B1AFE048;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9EA74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03328;
  v8[5] = a3;
  v8[2] = sub_1B1B03358;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B4;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9EB80(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B032D8;
  v8[5] = a3;
  v8[2] = sub_1B1B03308;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9EC8C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03288;
  v8[5] = a3;
  v8[2] = sub_1B1B032B8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9ED98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03238;
  v8[5] = a3;
  v8[2] = sub_1B1B03268;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9EEA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B031E8;
  v8[5] = a3;
  v8[2] = sub_1B1B03218;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9EFB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B037A8;
  v8[5] = a3;
  v8[2] = sub_1B1B031C8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F0BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03148;
  v8[5] = a3;
  v8[2] = sub_1B1B03178;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F1C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B030F8;
  v8[5] = a3;
  v8[2] = sub_1B1B03128;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F2D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B328;
  v8[5] = a3;
  v8[2] = sub_1B1B0B330;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F3E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B3C4;
  v8[5] = a3;
  v8[2] = sub_1B1B0B3CC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F4D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8130, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE0AB4;
  v8[5] = a3;
  v8[2] = sub_1B1AE0ADC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D434;
  v3[3] = v9;
  v3[4] = sub_1B1B0C02C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F5E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE0A5C;
  v8[5] = a3;
  v8[2] = sub_1B1AE0A94;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F6D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8130, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08ACC;
  v8[5] = a3;
  v8[2] = sub_1B1B08AD4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D434;
  v3[3] = v9;
  v3[4] = sub_1B1B0C02C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F7E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1ED4B8118, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08B0C;
  v8[5] = a3;
  v8[2] = sub_1B1B08B14;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4C8;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F8EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08B44;
  v8[5] = a3;
  v8[2] = sub_1B1B08B4C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9F9E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59B38, (uint64_t)&type metadata for OrientationOverVelocity.DirectionAxis, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF43A0;
  v8[5] = a3;
  v8[2] = sub_1B1AF43D0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF4420;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9FAEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4350;
  v8[5] = a3;
  v8[2] = sub_1B1AF4380;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9FBF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF42E0;
  v8[5] = a3;
  v8[2] = sub_1B1AF4310;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9FD04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AED0A8;
  v8[5] = a3;
  v8[2] = sub_1B1AED0D8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9FE10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE6B80(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF3948;
  v8[5] = a3;
  v8[2] = sub_1B1AF3978;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D48C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C044;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9FF04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEF19C;
  v8[5] = a3;
  v8[2] = sub_1B1AEF1CC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1A9FFF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF58DC;
  v8[5] = a3;
  v8[2] = sub_1B1AF590C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA00EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF588C;
  v8[5] = a3;
  v8[2] = sub_1B1AF58BC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA01E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80D8, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF583C;
  v8[5] = a3;
  v8[2] = sub_1B1AF586C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D490;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA02EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8048, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF57BC;
  v8[5] = a3;
  v8[2] = sub_1B1AF57EC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D484;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA03F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8078, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF573C;
  v8[5] = a3;
  v8[2] = sub_1B1AF576C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF5CE4;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0504(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF56BC;
  v8[5] = a3;
  v8[2] = sub_1B1AF56EC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0610(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF566C;
  v8[5] = a3;
  v8[2] = sub_1B1AF569C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA071C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF561C;
  v8[5] = a3;
  v8[2] = sub_1B1AF564C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0828(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF55CC;
  v8[5] = a3;
  v8[2] = sub_1B1AF55FC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0934(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03A00;
  v8[5] = a3;
  v8[2] = sub_1B1B03A30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0A40(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEBB60;
  v8[5] = a3;
  v8[2] = sub_1B1AEBB90;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0B4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEBB10;
  v8[5] = a3;
  v8[2] = sub_1B1AEBB40;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0C58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08C08;
  v8[5] = a3;
  v8[2] = sub_1B1B08C10;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0D64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08CAC;
  v8[5] = a3;
  v8[2] = sub_1B1B08CB4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0E70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08D50;
  v8[5] = a3;
  v8[2] = sub_1B1B08D58;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA0F7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0467C;
  v8[5] = a3;
  v8[2] = sub_1B1B046AC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1088(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF5084;
  v8[5] = a3;
  v8[2] = sub_1B1AF50B4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA117C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8048, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF5034;
  v8[5] = a3;
  v8[2] = sub_1B1AF5064;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D484;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1288(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4FB4;
  v8[5] = a3;
  v8[2] = sub_1B1AF4FE4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1394(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4F64;
  v8[5] = a3;
  v8[2] = sub_1B1AF4F94;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA14A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4F14;
  v8[5] = a3;
  v8[2] = sub_1B1AF4F44;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA15AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4EC4;
  v8[5] = a3;
  v8[2] = sub_1B1AF4EF4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA16B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59D20, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE728;
  v8[5] = a3;
  v8[2] = sub_1B1AFE758;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A0;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA17C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFE6D8;
  v8[5] = a3;
  v8[2] = sub_1B1AFE708;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA18D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06100;
  v8[5] = a3;
  v8[2] = sub_1B1B06130;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA19DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B060B0;
  v8[5] = a3;
  v8[2] = sub_1B1B060E0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1AE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06060;
  v8[5] = a3;
  v8[2] = sub_1B1B06090;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1BF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06010;
  v8[5] = a3;
  v8[2] = sub_1B1B06040;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1D00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF0C8;
  v8[5] = a3;
  v8[2] = sub_1B1AFF0F8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1E0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF078;
  v8[5] = a3;
  v8[2] = sub_1B1AFF0A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA1F18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF58F78, (uint64_t)&type metadata for AABB, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF030;
  v8[5] = a3;
  v8[2] = sub_1B1AFF058;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D430;
  v3[3] = v9;
  v3[4] = sub_1B1B0C028;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2024(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE6B80(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06EF0;
  v8[5] = a3;
  v8[2] = sub_1B1B06F20;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D48C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C044;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2118(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06EA0;
  v8[5] = a3;
  v8[2] = sub_1B1B06ED0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA220C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06DF8;
  v8[5] = a3;
  v8[2] = sub_1B1B06E28;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2318(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A530, (uint64_t)&type metadata for EvolutionMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06D9C;
  v8[5] = a3;
  v8[2] = sub_1B1B06DA4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B072D0;
  v3[3] = v9;
  v3[4] = sub_1B1B072DC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2424(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06D4C;
  v8[5] = a3;
  v8[2] = sub_1B1B06D7C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2530(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4814;
  v8[5] = a3;
  v8[2] = sub_1B1AF4844;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2624(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80D8, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF47C4;
  v8[5] = a3;
  v8[2] = sub_1B1AF47F4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D490;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2730(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4744;
  v8[5] = a3;
  v8[2] = sub_1B1AF4774;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA283C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF46F4;
  v8[5] = a3;
  v8[2] = sub_1B1AF4724;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2948(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF46A4;
  v8[5] = a3;
  v8[2] = sub_1B1AF46D4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2A54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFB70;
  v8[5] = a3;
  v8[2] = sub_1B1AEFBA0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2B48(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59728, (uint64_t)&type metadata for TextureFallback, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEBE60;
  v8[5] = a3;
  v8[2] = sub_1B1AEBE90;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AEBEE0;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2C54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A630;
  v8[5] = a3;
  v8[2] = sub_1B1B0A638;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2D60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF5A800, (uint64_t (*)(uint64_t))type metadata accessor for VFXParametricModelType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A6D4;
  v8[5] = a3;
  v8[2] = sub_1B1B0A6DC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0A6E4;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2E6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEFA40;
  v8[5] = a3;
  v8[2] = sub_1B1AEFA70;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA2F60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C8, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6B28;
  v8[5] = a3;
  v8[2] = sub_1B1AF6B50;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF6BA0;
  v3[3] = v9;
  v3[4] = sub_1B1AF6BBC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA306C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8048, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6AD8;
  v8[5] = a3;
  v8[2] = sub_1B1AF6B08;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D484;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3178(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59C50, (uint64_t)&type metadata for ParticleColorOverPosition.GradientMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6A58;
  v8[5] = a3;
  v8[2] = sub_1B1AF6A88;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AF6DF8;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3284(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF69A8;
  v8[5] = a3;
  v8[2] = sub_1B1AF69D8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3390(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6958;
  v8[5] = a3;
  v8[2] = sub_1B1AF6988;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA349C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6A28;
  v8[5] = a3;
  v8[2] = sub_1B1AF6938;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA35A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C8, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF3C48;
  v8[5] = a3;
  v8[2] = sub_1B1AF3C70;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D47C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C040;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA36B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF3BF8;
  v8[5] = a3;
  v8[2] = sub_1B1AF3C28;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA37A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF3BA8;
  v8[5] = a3;
  v8[2] = sub_1B1AF3BD8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA38B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8050, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF3B58;
  v8[5] = a3;
  v8[2] = sub_1B1AF3B88;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D480;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA39C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF3B08;
  v8[5] = a3;
  v8[2] = sub_1B1AF3B38;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3ACC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A3B0, (uint64_t)&type metadata for ParticlePrimitiveRenderer.Shape, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03CB0;
  v8[5] = a3;
  v8[2] = sub_1B1B03CE0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B03D30;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3BD8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03C60;
  v8[5] = a3;
  v8[2] = sub_1B1B03C90;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3CE4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80A8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0409C;
  v8[5] = a3;
  v8[2] = sub_1B1B040CC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B4;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3DF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0404C;
  v8[5] = a3;
  v8[2] = sub_1B1B0407C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA3EFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8080, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03FFC;
  v8[5] = a3;
  v8[2] = sub_1B1B0402C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4B8;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4008(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03FAC;
  v8[5] = a3;
  v8[2] = sub_1B1B03FDC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4114(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03F5C;
  v8[5] = a3;
  v8[2] = sub_1B1B03F8C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4220(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03F0C;
  v8[5] = a3;
  v8[2] = sub_1B1B03F3C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA432C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03EBC;
  v8[5] = a3;
  v8[2] = sub_1B1B03EEC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4438(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AED210;
  v8[5] = a3;
  v8[2] = sub_1B1AED240;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4544(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AED1C0;
  v8[5] = a3;
  v8[2] = sub_1B1AED1F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4650(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8130, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B160;
  v8[5] = a3;
  v8[2] = sub_1B1B0B168;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D434;
  v3[3] = v9;
  v3[4] = sub_1B1B0C02C;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA475C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0B1A0;
  v8[5] = a3;
  v8[2] = sub_1B1B0B1A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4868(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A4E8;
  v8[5] = a3;
  v8[2] = sub_1B1B0A4F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4974(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A58C;
  v8[5] = a3;
  v8[2] = sub_1B1B0A594;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4A80(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AED864;
  v8[5] = a3;
  v8[2] = sub_1B1AED894;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4B74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AED570(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AED814;
  v8[5] = a3;
  v8[2] = sub_1B1AED844;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D478;
  v3[3] = v9;
  v3[4] = sub_1B1AED6E4;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4C68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B03B18;
  v8[5] = a3;
  v8[2] = sub_1B1B03B48;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4D74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09448;
  v8[5] = a3;
  v8[2] = sub_1B1B09450;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4E80(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B094E4;
  v8[5] = a3;
  v8[2] = sub_1B1B094EC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA4F74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B095A8;
  v8[5] = a3;
  v8[2] = sub_1B1B095B0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5080(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0964C;
  v8[5] = a3;
  v8[2] = sub_1B1B09654;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA518C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09B58;
  v8[5] = a3;
  v8[2] = sub_1B1B09B60;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5298(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09BFC;
  v8[5] = a3;
  v8[2] = sub_1B1B09C04;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA53A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEF2CC;
  v8[5] = a3;
  v8[2] = sub_1B1AEF2FC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5498(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AFB524(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFB4D4;
  v8[5] = a3;
  v8[2] = sub_1B1AFB504;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFB624;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA558C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFB47C;
  v8[5] = a3;
  v8[2] = sub_1B1AFB4B4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5680(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFB42C;
  v8[5] = a3;
  v8[2] = sub_1B1AFB45C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA578C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59F40, (uint64_t)&type metadata for FluidSolver2DSolverBorderType, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFB3DC;
  v8[5] = a3;
  v8[2] = sub_1B1AFB40C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFB914;
  v3[3] = v9;
  v3[4] = sub_1B1AFB940;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5898(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59F38, (uint64_t)&type metadata for FluidSolver2DSolverSetupType, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFB35C;
  v8[5] = a3;
  v8[2] = sub_1B1AFB38C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFBA04;
  v3[3] = v9;
  v3[4] = sub_1B1AFBA30;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA59A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFB30C;
  v8[5] = a3;
  v8[2] = sub_1B1AFB33C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5AB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFB288;
  v8[5] = a3;
  v8[2] = sub_1B1AFB2B8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5BBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE6B80(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF40E4;
  v8[5] = a3;
  v8[2] = sub_1B1AF4114;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D48C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C044;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5CB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF4094;
  v8[5] = a3;
  v8[2] = sub_1B1AF40C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5DA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF62E0;
  v8[5] = a3;
  v8[2] = sub_1B1AF6310;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5EB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6290;
  v8[5] = a3;
  v8[2] = sub_1B1AF62C0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA5FA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6240;
  v8[5] = a3;
  v8[2] = sub_1B1AF6270;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA6098(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8048, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF61F0;
  v8[5] = a3;
  v8[2] = sub_1B1AF6220;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D484;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA61A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8078, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6170;
  v8[5] = a3;
  v8[2] = sub_1B1AF61A0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D494;
  v3[3] = v9;
  v3[4] = sub_1B1AE2734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA62B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF6120;
  v8[5] = a3;
  v8[2] = sub_1B1AF6150;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA63BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF60A0;
  v8[5] = a3;
  v8[2] = sub_1B1AF60D0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA64C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59E08, (uint64_t)&type metadata for FlockingLocalAxis, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFAB4C;
  v8[5] = a3;
  v8[2] = sub_1B1AFAB7C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFABCC;
  v3[3] = v9;
  v3[4] = sub_1B1AF96BC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA65D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFAAFC;
  v8[5] = a3;
  v8[2] = sub_1B1AFAB2C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA66E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFAA7C;
  v8[5] = a3;
  v8[2] = sub_1B1AFAAAC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA67D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFAA2C;
  v8[5] = a3;
  v8[2] = sub_1B1AFAA5C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA68E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFAFE0;
  v8[5] = a3;
  v8[2] = sub_1B1AFB010;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA69EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFAF90;
  v8[5] = a3;
  v8[2] = sub_1B1AFAFC0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA6AF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFAF40;
  v8[5] = a3;
  v8[2] = sub_1B1AFAF70;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA6C04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59CC8, (uint64_t (*)(uint64_t))sub_1B1AF7598, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF7908;
  v8[5] = a3;
  v8[2] = sub_1B1AF7938;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D498;
  v3[3] = v9;
  v3[4] = sub_1B1B0C048;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA6D10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF78B8;
  v8[5] = a3;
  v8[2] = sub_1B1AF78E8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA6E1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B098C8;
  v8[5] = a3;
  v8[2] = sub_1B1B098D0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA6F28(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0996C;
  v8[5] = a3;
  v8[2] = sub_1B1B09974;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7034(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09A10;
  v8[5] = a3;
  v8[2] = sub_1B1B09A18;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7140(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09AB4;
  v8[5] = a3;
  v8[2] = sub_1B1B09ABC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA724C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA148;
  v8[5] = a3;
  v8[2] = sub_1B1AFA178;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7358(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFA0F8;
  v8[5] = a3;
  v8[2] = sub_1B1AFA128;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7464(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE43E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF2C78;
  v8[5] = a3;
  v8[2] = sub_1B1AF2CA8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D450;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7558(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9B00;
  v8[5] = a3;
  v8[2] = sub_1B1AF9B30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7664(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9AA8;
  v8[5] = a3;
  v8[2] = sub_1B1AF9AE0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7758(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9A58;
  v8[5] = a3;
  v8[2] = sub_1B1AF9A88;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7864(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09CA0;
  v8[5] = a3;
  v8[2] = sub_1B1B09CA8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7970(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09D44;
  v8[5] = a3;
  v8[2] = sub_1B1B09D4C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7A7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF93E4;
  v8[5] = a3;
  v8[2] = sub_1B1AF9414;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7B88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF938C;
  v8[5] = a3;
  v8[2] = sub_1B1AF93C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7C7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF930C;
  v8[5] = a3;
  v8[2] = sub_1B1AF933C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7D88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59E08, (uint64_t)&type metadata for FlockingLocalAxis, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF92BC;
  v8[5] = a3;
  v8[2] = sub_1B1AF92EC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4A8;
  v3[3] = v9;
  v3[4] = sub_1B1AF96BC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7E94(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF926C;
  v8[5] = a3;
  v8[2] = sub_1B1AF929C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA7FA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9E50;
  v8[5] = a3;
  v8[2] = sub_1B1AF9E80;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA80AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9DF8;
  v8[5] = a3;
  v8[2] = sub_1B1AF9E30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA81A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9DA8;
  v8[5] = a3;
  v8[2] = sub_1B1AF9DD8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA82AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B096F0;
  v8[5] = a3;
  v8[2] = sub_1B1B096F8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA83B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1EEF61450, (uint64_t (*)(uint64_t))type metadata accessor for VFXCameraToneMappingMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09794;
  v8[5] = a3;
  v8[2] = sub_1B1B0979C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B097A4;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA84C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09824;
  v8[5] = a3;
  v8[2] = sub_1B1B0982C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA85D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09DE8;
  v8[5] = a3;
  v8[2] = sub_1B1B09DF0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA86DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09E8C;
  v8[5] = a3;
  v8[2] = sub_1B1B09E94;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA87E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09F30;
  v8[5] = a3;
  v8[2] = sub_1B1B09F38;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA88F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A28C;
  v8[5] = a3;
  v8[2] = sub_1B1B0A294;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA89E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A3A0;
  v8[5] = a3;
  v8[2] = sub_1B1B0A3A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA8AF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A444;
  v8[5] = a3;
  v8[2] = sub_1B1B0A44C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA8C00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9870;
  v8[5] = a3;
  v8[2] = sub_1B1AF98A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA8CF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF9820;
  v8[5] = a3;
  v8[2] = sub_1B1AF9850;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA8E00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEC36C;
  v8[5] = a3;
  v8[2] = sub_1B1AEC39C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA8F0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1ADF9C4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEC304;
  v8[5] = a3;
  v8[2] = sub_1B1AEC32C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D470;
  v3[3] = v9;
  v3[4] = sub_1B1ADFB00;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9000(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8100, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AEC2B4;
  v8[5] = a3;
  v8[2] = sub_1B1AEC2E4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D458;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA910C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B09FCC;
  v8[5] = a3;
  v8[2] = sub_1B1B09FD4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9200(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A088;
  v8[5] = a3;
  v8[2] = sub_1B1B0A090;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA92F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A14C;
  v8[5] = a3;
  v8[2] = sub_1B1B0A154;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9400(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B0A1F0;
  v8[5] = a3;
  v8[2] = sub_1B1B0A1F8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA950C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3330;
  v8[5] = a3;
  v8[2] = sub_1B1AE3360;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9618(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B80E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2888;
  v8[5] = a3;
  v8[2] = sub_1B1AE28B0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D45C;
  v3[3] = v9;
  v3[4] = sub_1B1B0C030;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9724(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADF5D4;
  v8[5] = a3;
  v8[2] = sub_1B1ADF604;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9830(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8178, MEMORY[0x1E0DEE0F8], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1ADF584;
  v8[5] = a3;
  v8[2] = sub_1B1ADF5B4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D448;
  v3[3] = v9;
  v3[4] = sub_1B1ADF734;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA993C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE29C8;
  v8[5] = a3;
  v8[2] = sub_1B1AE2A00;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9A30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE22A8;
  v8[5] = a3;
  v8[2] = sub_1B1AE22E0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9B24(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD024;
  v8[5] = a3;
  v8[2] = sub_1B1AFD054;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9C30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFCFD4;
  v8[5] = a3;
  v8[2] = sub_1B1AFD004;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9D3C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE19F8;
  v8[5] = a3;
  v8[2] = sub_1B1AE1A28;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9E48(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE0E64;
  v8[5] = a3;
  v8[2] = sub_1B1AE0E9C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AA9F3C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE1644;
  v8[5] = a3;
  v8[2] = sub_1B1AE1674;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA048(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE17C8(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7DA8;
  v8[5] = a3;
  v8[2] = sub_1B1AE7DE0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE7E28;
  v3[3] = v9;
  v3[4] = sub_1B1B0C038;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA13C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7D58;
  v8[5] = a3;
  v8[2] = sub_1B1AE7D88;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA248(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B08148;
  v8[5] = a3;
  v8[2] = sub_1B1B08178;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA354(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B080D4;
  v8[5] = a3;
  v8[2] = sub_1B1B0810C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA448(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE1DAC;
  v8[5] = a3;
  v8[2] = sub_1B1AE1DDC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA554(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE1F14(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE1EC4;
  v8[5] = a3;
  v8[2] = sub_1B1AE1EF4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D44C;
  v3[3] = v9;
  v3[4] = sub_1B1AE2024;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA648(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE2188;
  v8[5] = a3;
  v8[2] = sub_1B1AE21C0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA73C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD664;
  v8[5] = a3;
  v8[2] = sub_1B1AFD694;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA848(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF592D8, (uint64_t)&type metadata for ImageResizingMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6424;
  v8[5] = a3;
  v8[2] = sub_1B1AE6454;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE64A4;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAA954(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE63D4;
  v8[5] = a3;
  v8[2] = sub_1B1AE6404;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAAA60(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6384;
  v8[5] = a3;
  v8[2] = sub_1B1AE63B4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAAB6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE62EC;
  v8[5] = a3;
  v8[2] = sub_1B1AE631C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAAC78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE629C;
  v8[5] = a3;
  v8[2] = sub_1B1AE62CC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAAD84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AF893C;
  v8[5] = a3;
  v8[2] = sub_1B1AF896C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAAE90(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE17C8(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE1770;
  v8[5] = a3;
  v8[2] = sub_1B1AE17A8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D464;
  v3[3] = v9;
  v3[4] = sub_1B1B0C038;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAAF84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8048, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE88E0;
  v8[5] = a3;
  v8[2] = sub_1B1AE8910;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D484;
  v3[3] = v9;
  v3[4] = sub_1B1AE5ACC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB090(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59488, (uint64_t)&type metadata for TextureMipFilterMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE8860;
  v8[5] = a3;
  v8[2] = sub_1B1AE8890;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE8B54;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB19C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59480, (uint64_t)&type metadata for FilterMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE87C0;
  v8[5] = a3;
  v8[2] = sub_1B1AE87F0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE8C40;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB2A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE871C;
  v8[5] = a3;
  v8[2] = sub_1B1AE8754;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB39C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59478, (uint64_t (*)(uint64_t))type metadata accessor for MTLCompareFunction, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE869C;
  v8[5] = a3;
  v8[2] = sub_1B1AE86CC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE8E38;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB4A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE8640;
  v8[5] = a3;
  v8[2] = sub_1B1AE8670;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB5B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, (unint64_t *)&unk_1ED4B8120, (uint64_t (*)(uint64_t))type metadata accessor for MTLCullMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE85F0;
  v8[5] = a3;
  v8[2] = sub_1B1AE8620;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D4BC;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB6C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59470, (uint64_t (*)(uint64_t))type metadata accessor for MTLWinding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE8590;
  v8[5] = a3;
  v8[2] = sub_1B1AE85C0;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE906C;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB7CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE8530;
  v8[5] = a3;
  v8[2] = sub_1B1AE8560;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB8D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80C0, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE84E0;
  v8[5] = a3;
  v8[2] = sub_1B1AE8510;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D468;
  v3[3] = v9;
  v3[4] = sub_1B1AE6598;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAB9E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B8040, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE8448;
  v8[5] = a3;
  v8[2] = sub_1B1AE8478;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D438;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AABAF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59468, (uint64_t)&type metadata for Material.Kind, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE83E4;
  v8[5] = a3;
  v8[2] = sub_1B1AE8414;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE9348;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AABBFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE8394;
  v8[5] = a3;
  v8[2] = sub_1B1AE83C4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AABD08(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE0CD0;
  v8[5] = a3;
  v8[2] = sub_1B1AE0D08;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AABDFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE23C8;
  v8[5] = a3;
  v8[2] = sub_1B1AE2400;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AABEF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF42C;
  v8[5] = a3;
  v8[2] = sub_1B1AFF45C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AABFFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF5A170, (uint64_t)&type metadata for KillShape.Shape, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF3DC;
  v8[5] = a3;
  v8[2] = sub_1B1AFF40C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AFF56C;
  v3[3] = v9;
  v3[4] = sub_1B1AE5774;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC108(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, (unint64_t *)&unk_1ED4B8140, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFF38C;
  v8[5] = a3;
  v8[2] = sub_1B1AFF3BC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D444;
  v3[3] = v9;
  v3[4] = sub_1B1ADEFA8;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC214(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE0104;
  v8[5] = a3;
  v8[2] = sub_1B1AE013C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC308(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF58F78, (uint64_t)&type metadata for AABB, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE006C;
  v8[5] = a3;
  v8[2] = sub_1B1AE0094;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE0474;
  v3[3] = v9;
  v3[4] = sub_1B1AE0490;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC414(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE17C8(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE8030;
  v8[5] = a3;
  v8[2] = sub_1B1AE8068;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D464;
  v3[3] = v9;
  v3[4] = sub_1B1B0C038;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC508(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1791524(0, &qword_1EEF59438, (uint64_t (*)(uint64_t))sub_1B1AE8014, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE7FC4;
  v8[5] = a3;
  v8[2] = sub_1B1AE7FF4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE8190;
  v3[3] = v9;
  v3[4] = sub_1B1AE81BC;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC614(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1B06B88;
  v8[5] = a3;
  v8[2] = sub_1B1B06BB8;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC720(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F8, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AFD54C;
  v8[5] = a3;
  v8[2] = sub_1B1AFD57C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D43C;
  v3[3] = v9;
  v3[4] = sub_1B1ADFC84;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC82C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE39D8;
  v8[5] = a3;
  v8[2] = sub_1B1AE3A10;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AAC920(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3AF8;
  v8[5] = a3;
  v8[2] = sub_1B1AE3B30;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AACA14(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3C18;
  v8[5] = a3;
  v8[2] = sub_1B1AE3C50;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AACB08(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE10E4(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE3D38;
  v8[5] = a3;
  v8[2] = sub_1B1AE3D70;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D440;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AACBFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1AE015C(0);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE05C4;
  v8[5] = a3;
  v8[2] = sub_1B1AE05FC;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D42C;
  v3[3] = v9;
  v3[4] = sub_1B1AE0318;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AACCF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF58F78, (uint64_t)&type metadata for AABB, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE057C;
  v8[5] = a3;
  v8[2] = sub_1B1AE05A4;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D430;
  v3[3] = v9;
  v3[4] = sub_1B1B0C028;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AACDFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1EEF59360, (uint64_t)&type metadata for MeshImportOptions.Loader, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6ED8;
  v8[5] = a3;
  v8[2] = sub_1B1AE6F08;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1AE6F58;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

_QWORD *sub_1B1AACF08(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = a1;
  v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  sub_1B1A02758(0, &qword_1ED4B80F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for EntityGetSet);
  v8 = (_QWORD *)swift_allocObject();
  v8[4] = sub_1B1AE6E4C;
  v8[5] = a3;
  v8[2] = sub_1B1AE6E7C;
  v8[3] = a3;
  v8[6] = a3;
  v3[8] = v8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(_QWORD *)(v9 + 32) = a2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = v6;
  *(_DWORD *)(v10 + 28) = v7;
  *(_QWORD *)(v10 + 32) = a2;
  v3[2] = sub_1B1B0D428;
  v3[3] = v9;
  v3[4] = sub_1B1ADF654;
  v3[5] = v10;
  swift_retain();
  swift_retain_n();
  return v3;
}

double sub_1B1AAD014(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  if ((v11 & 1) == 0)
  {
    v8 = v10;
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v9 + 32) = v8;
  }
  return result;
}

double sub_1B1AAD0A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  int v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  if ((v10 & 0x100000000) == 0)
  {
    v8 = v10;
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_DWORD *)(v9 + 32) = v8;
  }
  return result;
}

uint64_t sub_1B1AAD134(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  uint64_t result;
  int v8;
  uint64_t v9;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v9, a2, a3);
  if ((v9 & 0x100000000) != 0)
    return MEMORY[0x1E0DEE9D8];
  v8 = v9;
  sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_DWORD *)(result + 32) = v8;
  return result;
}

double sub_1B1AAD1CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  if (v10 != 2)
  {
    v8 = v10 & 1;
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v9 + 32) = v8;
  }
  return result;
}

double sub_1B1AAD260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  if ((v8 & 1) == 0)
  {
    v4 = v7;
    v5 = HIDWORD(v7);
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE30, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
    *(_DWORD *)(v6 + 32) = v4;
    *(_DWORD *)(v6 + 36) = v5;
  }
  return result;
}

double sub_1B1AAD2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];
  unsigned __int8 v9;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v8, a2, a3);
  v4 = v9;
  if (v9 != 254)
  {
    v5 = v8[0];
    v6 = v8[1];
    sub_1B1AF1650();
    v7 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v7 + 32) = v5;
    *(_QWORD *)(v7 + 40) = v6;
    *(_BYTE *)(v7 + 48) = v4;
  }
  return result;
}

double sub_1B1AAD36C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  v8 = v10;
  if (v10 != 4)
  {
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v9 + 32) = v8;
  }
  return result;
}

uint64_t sub_1B1AAD3FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];
  unsigned __int8 v12;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v11, a2, a3);
  v7 = v12;
  if (v12 == 255)
    return MEMORY[0x1E0DEE9D8];
  v8 = v11[0];
  v9 = v11[1];
  sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v9;
  *(_BYTE *)(result + 48) = v7;
  return result;
}

uint64_t sub_1B1AAD49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v6, a2, a3);
  v3 = v7;
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  v4 = v6;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = v3;
  return result;
}

double sub_1B1AAD524(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  v8 = v10;
  if (v10 != 3)
  {
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v9 + 32) = v8;
  }
  return result;
}

double sub_1B1AAD5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v6, a2, a3);
  v4 = v6;
  if (v6 != 1)
  {
    sub_1B1791524(0, &qword_1EEF593A8, (uint64_t (*)(uint64_t))sub_1B1AE717C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v5 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v5 + 32) = v4;
  }
  return result;
}

uint64_t sub_1B1AAD63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  v3 = v11;
  if (!v11)
    return MEMORY[0x1E0DEE9D8];
  v4 = v10;
  v5 = v12;
  v6 = v13;
  v7 = v14;
  v8 = v15;
  sub_1B1A02758(0, &qword_1EEF593C0, (uint64_t)&type metadata for Asset, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = v3;
  *(_QWORD *)(result + 48) = v5;
  *(_QWORD *)(result + 56) = v6;
  *(_QWORD *)(result + 64) = v7;
  *(_QWORD *)(result + 72) = v8;
  return result;
}

double sub_1B1AAD6E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  v8 = v10;
  if (v10 != 5)
  {
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v9 + 32) = v8;
  }
  return result;
}

uint64_t sub_1B1AAD774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  unint64_t v18;
  uint64_t v20;

  sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v20 - v8;
  v10 = sub_1B2228110();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(a1 + 32))(a2, a3, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1B1AEA224((uint64_t)v9, (uint64_t)&qword_1ED4BF720, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v17(v15, v9, v10);
    sub_1B1791524(0, &qword_1EEF59608, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B226D240;
    v17((char *)(v16 + v18), v15, v10);
  }
  return v16;
}

uint64_t sub_1B1AAD904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v6, a2, a3);
  if ((v7 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v4 = v6[0];
  v5 = v6[1];
  sub_1B1791524(0, &qword_1EEF592A8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = v5;
  return result;
}

double sub_1B1AAD994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  v4 = v8;
  if (v8 >> 60 != 11)
  {
    v5 = v7;
    sub_1B1AEB748();
    v6 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v6 + 32) = v5;
    *(_QWORD *)(v6 + 40) = v4;
  }
  return result;
}

double sub_1B1AADA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  if ((v8 & 1) == 0)
  {
    v4 = v7;
    v5 = HIDWORD(v7);
    sub_1B1AE48D0();
    v6 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
    *(_DWORD *)(v6 + 32) = v4;
    *(_DWORD *)(v6 + 36) = v5;
  }
  return result;
}

double sub_1B1AADA80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  if ((v10 & 0x10000000000) == 0)
  {
    v8 = v10 | ((unint64_t)BYTE4(v10) << 32);
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_DWORD *)(v9 + 32) = v8;
    *(_BYTE *)(v9 + 36) = BYTE4(v8) & 1;
  }
  return result;
}

uint64_t sub_1B1AADB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v5, a2, a3);
  if ((v6 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v4 = v5;
  sub_1B1AE2028();
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v4;
  return result;
}

uint64_t sub_1B1AADB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  char v7;

  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v6, a2, a3);
  if (!(_QWORD)v6)
    return MEMORY[0x1E0DEE9D8];
  v3 = v7;
  v5 = v6;
  sub_1B1A02758(0, &qword_1EEF59338, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_OWORD *)(result + 32) = v5;
  *(_BYTE *)(result + 48) = v3;
  return result;
}

double sub_1B1AADC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  if ((v9 & 1) == 0)
  {
    v4 = v7;
    v5 = v8;
    sub_1B1ADFB04();
    v6 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v6 + 32) = v4;
    *(_BYTE *)(v6 + 40) = v5 & 1;
  }
  return result;
}

uint64_t sub_1B1AADCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  v3 = v8;
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
  v4 = v7;
  v5 = v9;
  sub_1B1A02758(0, &qword_1EEF5A628, (uint64_t)&type metadata for SimpleFontDescription, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = v3;
  *(_DWORD *)(result + 48) = v5;
  return result;
}

double sub_1B1AADD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  char v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v6, a2, a3);
  v4 = v6;
  if (v6 != 10)
  {
    sub_1B1A02758(0, &qword_1EEF5A658, (uint64_t)&type metadata for PrimitiveGenerator.PrimitiveType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v5 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v5 + 32) = v4;
  }
  return result;
}

_OWORD *sub_1B1AADDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *result;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];

  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v6, a2, a3);
  if (!*(_QWORD *)&v6[0])
    return (_OWORD *)MEMORY[0x1E0DEE9D8];
  v5 = v6[1];
  v4 = v6[0];
  sub_1B1A02758(0, &qword_1EEF5A970, (uint64_t)&type metadata for MetalFunctionReflection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_1B226D240;
  result[2] = v4;
  result[3] = v5;
  return result;
}

double sub_1B1AADE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];
  unsigned __int8 v9;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v8, a2, a3);
  v4 = v9;
  if (v9 != 255)
  {
    v5 = v8[0];
    v6 = v8[1];
    sub_1B1A02758(0, &qword_1EEF5A9A0, (uint64_t)&type metadata for KernelReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v7 + 32) = v5;
    *(_QWORD *)(v7 + 40) = v6;
    *(_BYTE *)(v7 + 48) = v4 & 1;
  }
  return result;
}

double sub_1B1AADF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  if (v9 != 255)
  {
    v4 = v7;
    v5 = v8 | ((unint64_t)v9 << 32);
    sub_1B1A02758(0, &qword_1EEF5A5B8, (uint64_t)&type metadata for EasingFunction, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v6 + 32) = v4;
    *(_DWORD *)(v6 + 40) = v5;
    *(_BYTE *)(v6 + 44) = BYTE4(v5);
  }
  return result;
}

double sub_1B1AADFAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  v8 = v10;
  if (v10 != 7)
  {
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v9 + 32) = v8;
  }
  return result;
}

uint64_t sub_1B1AAE03C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v9, a2, a3);
  v7 = v9;
  if (!v9)
    return MEMORY[0x1E0DEE9D8];
  sub_1B1791524(0, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v7;
  return result;
}

double sub_1B1AAE0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD v8[2];
  char v9;
  char v10;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v8, a2, a3);
  if ((v10 & 1) == 0)
  {
    v4 = v8[0];
    v5 = v8[1];
    v6 = v9;
    sub_1B1791524(0, &qword_1EEF59EC0, (uint64_t (*)(uint64_t))sub_1B1AFA498, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v5;
    *(_BYTE *)(v7 + 48) = v6 & 1;
  }
  return result;
}

double sub_1B1AAE164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  char v8;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v7, a2, a3);
  if ((v8 & 1) == 0)
  {
    v4 = v7[0];
    v5 = v7[1];
    sub_1B1791524(0, (unint64_t *)&unk_1EEF5AB30, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v6 + 32) = v4;
    *(_QWORD *)(v6 + 40) = v5;
  }
  return result;
}

uint64_t sub_1B1AAE1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unsigned __int8 v7;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v6, a2, a3);
  v3 = v7;
  if (v7 == 255)
    return MEMORY[0x1E0DEE9D8];
  v4 = v6;
  sub_1B1A02758(0, &qword_1EEF5A558, (uint64_t)&type metadata for EvolutionMode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v4;
  *(_BYTE *)(result + 40) = v3;
  return result;
}

double sub_1B1AAE27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[8];
  char v14;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v13, a2, a3);
  if ((v14 & 1) == 0)
  {
    v4 = v13[0];
    v5 = v13[1];
    v6 = v13[2];
    v7 = v13[3];
    v8 = v13[4];
    v9 = v13[5];
    v10 = v13[6];
    v11 = v13[7];
    sub_1B1791524(0, &qword_1EEF5CCB0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v12 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v12 + 32) = v4;
    *(_QWORD *)(v12 + 40) = v5;
    *(_QWORD *)(v12 + 48) = v6;
    *(_QWORD *)(v12 + 56) = v7;
    *(_QWORD *)(v12 + 64) = v8;
    *(_QWORD *)(v12 + 72) = v9;
    *(_QWORD *)(v12 + 80) = v10;
    *(_QWORD *)(v12 + 88) = v11;
  }
  return result;
}

double sub_1B1AAE334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  char v8;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v7, a2, a3);
  if ((v8 & 1) == 0)
  {
    v4 = v7[0];
    v5 = v7[1];
    sub_1B1AED6E8();
    v6 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v6 + 32) = v4;
    *(_QWORD *)(v6 + 40) = v5;
  }
  return result;
}

double sub_1B1AAE3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v6, a2, a3);
  if ((v6 & 0x10000000000) == 0)
  {
    v4 = v6 | ((unint64_t)BYTE4(v6) << 32);
    sub_1B1AFB630();
    v5 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v5 + 16) = xmmword_1B226D240;
    *(_DWORD *)(v5 + 32) = v4;
    *(_BYTE *)(v5 + 36) = BYTE4(v4) & 1;
  }
  return result;
}

double sub_1B1AAE424(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  double result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  v8 = v10;
  if (v10 != 8)
  {
    sub_1B1A02758(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v9 + 32) = v8;
  }
  return result;
}

uint64_t sub_1B1AAE4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;

  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  if (!(_QWORD)v7)
    return MEMORY[0x1E0DEE9D8];
  v3 = v8;
  v4 = v9;
  v6 = v7;
  sub_1B1AE6CC8();
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_OWORD *)(result + 32) = v6;
  *(_QWORD *)(result + 48) = v3;
  *(_BYTE *)(result + 56) = v4;
  return result;
}

double sub_1B1AAE538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[3];
  char v10;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v9, a2, a3);
  v4 = v9[0];
  if (v9[0] != 1)
  {
    v5 = v9[1];
    v6 = v9[2];
    v7 = v10;
    sub_1B1791524(0, &qword_1EEF59CD8, (uint64_t (*)(uint64_t))sub_1B1AF7598, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v8 + 32) = v4;
    *(_QWORD *)(v8 + 40) = v5;
    *(_QWORD *)(v8 + 48) = v6;
    *(_BYTE *)(v8 + 56) = v7;
  }
  return result;
}

double sub_1B1AAE5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  char v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v6, a2, a3);
  v4 = v6;
  if (v6 != 6)
  {
    sub_1B1A02758(0, &qword_1EEF59E30, (uint64_t)&type metadata for FlockingLocalAxis, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v5 + 16) = xmmword_1B226D240;
    *(_BYTE *)(v5 + 32) = v4;
  }
  return result;
}

double sub_1B1AAE660(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  if ((v11 & 1) == 0)
  {
    v8 = v10;
    sub_1B1791524(0, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v9 + 32) = v8;
  }
  return result;
}

double sub_1B1AAE6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  char v10;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v9, a2, a3);
  if ((v10 & 1) == 0)
  {
    v4 = v9[0];
    v5 = v9[1];
    v6 = v9[2];
    v7 = v9[3];
    sub_1B1A02758(0, &qword_1EEF58F98, (uint64_t)&type metadata for AABB, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v8 + 32) = v4;
    *(_QWORD *)(v8 + 40) = v5;
    *(_QWORD *)(v8 + 48) = v6;
    *(_QWORD *)(v8 + 56) = v7;
  }
  return result;
}

uint64_t sub_1B1AAE788(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v7, a2, a3);
  v5 = v7;
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  a4(0);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B226D240;
  *(_QWORD *)(result + 32) = v5;
  return result;
}

uint64_t sub_1B1AAE7F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v10, a2, a3);
  v7 = v10;
  if (v10 == 1)
    return MEMORY[0x1E0DEE9D8];
  sub_1B1791524(0, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v7;
  v10 = v9;
  sub_1B2228AD0();
  return v10;
}

double sub_1B1AAE898(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  char v10;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a1 + 32))(v9, a2, a3);
  if ((v10 & 1) == 0)
  {
    v6 = v9[0];
    v7 = v9[1];
    a4(0);
    v8 = swift_allocObject();
    *(_QWORD *)&result = 1;
    *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v8 + 32) = v6;
    *(_QWORD *)(v8 + 40) = v7;
  }
  return result;
}

uint64_t sub_1B1AAE914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 1;
  }
  v9 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(a2 + 16))(a3, a4, &v9);
  return sub_1B1AE7230(v7);
}

uint64_t sub_1B1AAE988(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[2];

  if (a1[2])
  {
    v7 = a1[4];
    v8 = a1[5];
    sub_1B1AEB720(v7, v8);
  }
  else
  {
    v7 = 0;
    v8 = 0xB000000000000000;
  }
  v10[0] = v7;
  v10[1] = v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v10);
  return sub_1B1AEB734(v7, v8);
}

uint64_t sub_1B1AAEA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;

  sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v19 - v10;
  v12 = sub_1B2228110();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t, double))(v13 + 16))(v11, a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v12, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    (*(void (**)(uint64_t, uint64_t, char *))(a2 + 16))(a3, a4, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v13 + 56))(v11, 1, 1, v12, v15);
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1AAEB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD v11[2];
  int v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 48);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
  }
  v11[0] = v7;
  v11[1] = v8;
  v12 = v9;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AAEC08(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  if (a1[2])
  {
    v7 = a1[4];
    v8 = a1[5];
    v9 = a1[6];
    v10 = a1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
  }
  v12[0] = v7;
  v12[1] = v8;
  v12[2] = v9;
  v12[3] = v10;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AAECC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[2];
  char v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(_BYTE *)(a1 + 48);
    sub_1B1B0BB50(v7, v8, v9);
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = -1;
  }
  v11[0] = v7;
  v11[1] = v8;
  v12 = v9 & 1;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v11);
  return sub_1B1B0BB60(v7, v8, v9);
}

void sub_1B1AAED68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;
  _QWORD v13[4];
  __int128 v14;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 48);
    v9 = *(_QWORD *)(a1 + 56);
    v12 = *(_OWORD *)(a1 + 64);
    v11 = (id)v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v10 = 0;
    v9 = 0;
    v12 = 0u;
  }
  v13[0] = v7;
  v13[1] = v8;
  v13[2] = v10;
  v13[3] = v9;
  v14 = v12;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void sub_1B1AAEE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = (id)v7;
  }
  else
  {
    v7 = 1;
  }
  v9 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(a2 + 16))(a3, a4, &v9);
  sub_1B1AE9700((id)v7);
}

uint64_t sub_1B1AAEEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[2];
  char v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(_BYTE *)(a1 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
  }
  v11[0] = v7;
  v11[1] = v8;
  v12 = v9;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AAEF38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[8];

  v4 = a1[2];
  if (v4)
  {
    v4 = a1[4];
    v5 = a1[5];
    v6 = a1[6];
    v7 = a1[7];
    v8 = a1[8];
    v9 = a1[9];
    v10 = a1[10];
    v11 = a1[11];
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  v13[0] = v4;
  v13[1] = v5;
  v13[2] = v6;
  v13[3] = v7;
  v13[4] = v8;
  v13[5] = v9;
  v13[6] = v10;
  v13[7] = v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v13);
}

uint64_t sub_1B1AAEFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[3];
  char v13;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 48);
    v10 = *(_BYTE *)(a1 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
  }
  v12[0] = v7;
  v12[1] = v8;
  v12[2] = v9;
  v13 = v10;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AAF070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[3];
  char v13;

  if (*(_QWORD *)(a1 + 16))
  {
    v8 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 48);
    v10 = *(_BYTE *)(a1 + 56);
    sub_1B1AF7674(v8);
  }
  else
  {
    v7 = 0;
    v9 = 0;
    v10 = 0;
    v8 = 1;
  }
  v12[0] = v8;
  v12[1] = v7;
  v12[2] = v9;
  v13 = v10;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v12);
  return sub_1B1AF76B0(v8);
}

uint64_t sub_1B1AAF120(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  if (a1[2])
  {
    v7 = a1[4];
    v8 = a1[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  v10[0] = v7;
  v10[1] = v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AAF198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
  }
  v9 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(a2 + 16))(a3, a4, &v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AAF20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16))
  {
    v7 = *(_QWORD *)(a1 + 32);
    swift_retain();
  }
  else
  {
    v7 = 1;
  }
  v9 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(a2 + 16))(a3, a4, &v9);
  return sub_1B1AE81C8(v7);
}

uint64_t sub_1B1AAF280(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v4 = a1[2];
  if (v4)
  {
    v4 = a1[4];
    v5 = a1[5];
    v6 = a1[6];
    v7 = a1[7];
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
  }
  v9[0] = v4;
  v9[1] = v5;
  v9[2] = v6;
  v9[3] = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(a2 + 16))(a3, a4, v9);
}

uint64_t sub_1B1AAF2E0()
{
  if (qword_1EEF57318 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1AAF320(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57318, (unint64_t *)&qword_1EEFD5438);
}

uint64_t sub_1B1AAF34C(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57318, &qword_1EEFD5438);
}

uint64_t sub_1B1AAF378(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1ADF1F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B1AAF380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17)
{
  return sub_1B1AB0AE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, (uint64_t)&off_1E63BE978);
}

uint64_t sub_1B1AAF3E0()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1B1A20B44((uint64_t)&unk_1E63BF1D8, (uint64_t)&v2, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation);
  sub_1B1B0BFC8(0, &qword_1EEF5AA28);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_1B1AAF458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1B2228110();
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AAF4F0()
{
  if (qword_1EEF573A0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1AAF530(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF573A0, (unint64_t *)&qword_1EEFD5658);
}

uint64_t sub_1B1AAF55C(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF573A0, &qword_1EEFD5658);
}

unint64_t sub_1B1AAF588(unint64_t a1)
{
  _BYTE *v1;
  unint64_t result;

  result = sub_1B1E83488(a1);
  *v1 = result;
  return result;
}

uint64_t sub_1B1AAF5A0(uint64_t a1, uint64_t a2)
{
  return sub_1B1A6E278(a1, a2, (void (*)(void))sub_1B1AB44A0, (uint64_t)&type metadata for PrimitiveGenerator.PrimitiveType, (uint64_t (*)(void))sub_1B1A20B44);
}

uint64_t sub_1B1AAF5BC(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF573E0);
}

uint64_t sub_1B1AAF5D8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF573E0, (unint64_t *)&qword_1EEFD56D0);
}

uint64_t sub_1B1AAF604(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF573E0, &qword_1EEFD56D0);
}

uint64_t sub_1B1AAF630(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF573E8);
}

uint64_t sub_1B1AAF64C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF573E8, (unint64_t *)&qword_1EEFD56D8);
}

uint64_t sub_1B1AAF678(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF573E8, &qword_1EEFD56D8);
}

uint64_t sub_1B1AAF6A4(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF573F0);
}

uint64_t sub_1B1AAF6C0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF573F0, (unint64_t *)&qword_1EEFD56E0);
}

uint64_t sub_1B1AAF6EC(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF573F0, &qword_1EEFD56E0);
}

uint64_t sub_1B1AAF718(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF573F8);
}

uint64_t sub_1B1AAF734(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF573F8, (unint64_t *)&qword_1EEFD56E8);
}

uint64_t sub_1B1AAF760(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF573F8, &qword_1EEFD56E8);
}

uint64_t sub_1B1AAF78C(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57400);
}

uint64_t sub_1B1AAF7A8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57400, (unint64_t *)&qword_1EEFD56F0);
}

uint64_t sub_1B1AAF7D4(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57400, &qword_1EEFD56F0);
}

uint64_t sub_1B1AAF800(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57408);
}

uint64_t sub_1B1AAF81C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57408, (unint64_t *)&qword_1EEFD56F8);
}

uint64_t sub_1B1AAF848(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57408, &qword_1EEFD56F8);
}

uint64_t sub_1B1AAF874(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57410);
}

uint64_t sub_1B1AAF890(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57410, (unint64_t *)&qword_1EEFD5700);
}

uint64_t sub_1B1AAF8BC(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57410, &qword_1EEFD5700);
}

uint64_t sub_1B1AAF8E8(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57418);
}

uint64_t sub_1B1AAF904(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57418, (unint64_t *)&qword_1EEFD5708);
}

uint64_t sub_1B1AAF930(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57418, &qword_1EEFD5708);
}

uint64_t sub_1B1AAF95C(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57420);
}

uint64_t sub_1B1AAF978(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57420, (unint64_t *)&qword_1EEFD5710);
}

uint64_t sub_1B1AAF9A4(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57420, &qword_1EEFD5710);
}

uint64_t sub_1B1AAF9D0(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57428);
}

uint64_t sub_1B1AAF9EC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57428, (unint64_t *)&qword_1EEFD5718);
}

uint64_t sub_1B1AAFA18(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57428, &qword_1EEFD5718);
}

uint64_t sub_1B1AAFA44(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57430);
}

uint64_t sub_1B1AAFA60(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57430, (unint64_t *)&qword_1EEFD5720);
}

uint64_t sub_1B1AAFA8C(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57430, &qword_1EEFD5720);
}

uint64_t sub_1B1AAFAB8(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57438);
}

uint64_t sub_1B1AAFAD4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57438, (unint64_t *)&qword_1EEFD5728);
}

uint64_t sub_1B1AAFB00(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57438, &qword_1EEFD5728);
}

uint64_t sub_1B1AAFB2C(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57440);
}

uint64_t sub_1B1AAFB48(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57440, (unint64_t *)&qword_1EEFD5730);
}

uint64_t sub_1B1AAFB74(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57440, &qword_1EEFD5730);
}

uint64_t sub_1B1AAFBA0(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57448);
}

uint64_t sub_1B1AAFBBC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57448, (unint64_t *)&qword_1EEFD5738);
}

uint64_t sub_1B1AAFBE8(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57448, &qword_1EEFD5738);
}

uint64_t sub_1B1AAFC14(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57450);
}

uint64_t sub_1B1AAFC30(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57450, (unint64_t *)&qword_1EEFD5740);
}

uint64_t sub_1B1AAFC5C(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57450, &qword_1EEFD5740);
}

uint64_t sub_1B1AAFC88(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57458);
}

uint64_t sub_1B1AAFCA4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57458, (unint64_t *)&qword_1EEFD5748);
}

uint64_t sub_1B1AAFCD0(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57458, &qword_1EEFD5748);
}

uint64_t sub_1B1AAFCFC(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57460);
}

uint64_t sub_1B1AAFD18(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57460, (unint64_t *)&qword_1EEFD5750);
}

uint64_t sub_1B1AAFD44(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57460, &qword_1EEFD5750);
}

uint64_t sub_1B1AAFD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17)
{
  return sub_1B1AB0AE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, (uint64_t)&off_1E6392228);
}

uint64_t sub_1B1AAFDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17)
{
  return sub_1B1AB0AE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, (uint64_t)&off_1E6384540);
}

uint64_t sub_1B1AAFE40(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57478);
}

uint64_t sub_1B1AAFE5C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57478, (unint64_t *)&qword_1EEFD5768);
}

uint64_t sub_1B1AAFE88(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57478, &qword_1EEFD5768);
}

uint64_t sub_1B1AAFEB4(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57480);
}

uint64_t sub_1B1AAFED0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57480, (unint64_t *)&qword_1EEFD5770);
}

uint64_t sub_1B1AAFEFC(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57480, &qword_1EEFD5770);
}

uint64_t sub_1B1AAFF28(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57488);
}

uint64_t sub_1B1AAFF44(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57488, (unint64_t *)&qword_1EEFD5778);
}

uint64_t sub_1B1AAFF70(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57488, &qword_1EEFD5778);
}

uint64_t sub_1B1AAFF9C(uint64_t a1, uint64_t a2)
{
  return sub_1B1A3BC14(a1, a2, &qword_1EEF57490);
}

uint64_t sub_1B1AAFFB8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1EEF57490, (unint64_t *)&qword_1EEFD5780);
}

uint64_t sub_1B1AAFFE4(uint64_t a1)
{
  return sub_1B1A2262C(a1, &qword_1EEF57490, &qword_1EEFD5780);
}

uint64_t sub_1B1AB0018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17)
{
  return sub_1B1AB0AE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, (uint64_t)&off_1E638D420);
}

uint64_t sub_1B1AB0078(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1ADF08C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1B1AB0080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17)
{
  return sub_1B1AB0AE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, (uint64_t)&off_1E6392500);
}

uint64_t sub_1B1AB00E0(char a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  char v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;

  v2 = v1;
  v4 = *v2;
  v5 = 0x6C6174656DLL;
  if (v4 != 1)
    v5 = 0x7466697773;
  if (*v2)
    v6 = v5;
  else
    v6 = 99;
  if (*v2)
    v7 = 0xE500000000000000;
  else
    v7 = 0xE100000000000000;
  if (a1)
  {
    if (a1 == 1)
      v8 = 0x6C6174656DLL;
    else
      v8 = 0x7466697773;
    v9 = 0xE500000000000000;
    if (v6 != v8)
      goto LABEL_18;
  }
  else
  {
    v9 = 0xE100000000000000;
    if (v6 != 99)
      goto LABEL_18;
  }
  if (v7 == v9)
    return swift_bridgeObjectRelease_n();
LABEL_18:
  v11 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    return result;
  if (a1)
  {
    if (a1 == 1)
    {
      if (v4)
        goto LABEL_38;
      return result;
    }
    v12 = 0xD0000000000000C2;
    v13 = 0x80000001B232DD70;
  }
  else
  {
    if (v4 == 1)
      return result;
    v12 = 0xD0000000000000C0;
    v13 = 0x80000001B232DE80;
  }
  if (v12 == *((_QWORD *)v2 + 1) && v13 == *((_QWORD *)v2 + 2))
    v14 = 1;
  else
    v14 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  sub_1B1A06460();
  v15 = MEMORY[0x1E0DEA968];
  v16 = sub_1B2229214();
  sub_1B1A206D8(v16);
  swift_bridgeObjectRelease();
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, v15, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  sub_1B2228644();
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 != 2)
    {
LABEL_38:
      result = sub_1B2229688();
      __break(1u);
      return result;
    }
    v17 = 0xD0000000000000C2;
    v18 = 0x80000001B232DD70;
    v19 = &unk_1E63BCBF8;
  }
  else
  {
    v17 = 0xD0000000000000C0;
    v18 = 0x80000001B232DE80;
    v19 = &unk_1E63BCBC8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)v2 + 2) = v18;
  *((_QWORD *)v2 + 3) = v19;
  *((_QWORD *)v2 + 1) = v17;
  if ((v14 & 1) == 0)
  {
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AB0434(char a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  char v20;

  v2 = v1;
  v4 = *v2;
  v5 = 0x6C6174656DLL;
  if (v4 != 1)
    v5 = 0x7466697773;
  if (*v2)
    v6 = v5;
  else
    v6 = 99;
  if (*v2)
    v7 = 0xE500000000000000;
  else
    v7 = 0xE100000000000000;
  if (a1)
  {
    if (a1 == 1)
      v8 = 0x6C6174656DLL;
    else
      v8 = 0x7466697773;
    v9 = 0xE500000000000000;
    if (v6 != v8)
      goto LABEL_18;
  }
  else
  {
    v9 = 0xE100000000000000;
    if (v6 != 99)
      goto LABEL_18;
  }
  if (v7 == v9)
    return swift_bridgeObjectRelease_n();
LABEL_18:
  v11 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    return result;
  if (!a1)
  {
    if (v4 == 1)
      return result;
LABEL_24:
    v12 = 0x80000001B232DFE0;
    v13 = 0xD0000000000000BFLL;
    goto LABEL_26;
  }
  if (a1 == 1)
  {
    if (!v4)
      return result;
    goto LABEL_24;
  }
  v12 = 0x80000001B232DF70;
  v13 = 0xD00000000000006DLL;
LABEL_26:
  if (v13 == *((_QWORD *)v2 + 1) && v12 == *((_QWORD *)v2 + 2))
    v20 = 1;
  else
    v20 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  sub_1B1A06460();
  v14 = MEMORY[0x1E0DEA968];
  v15 = sub_1B2229214();
  sub_1B1A206D8(v15);
  swift_bridgeObjectRelease();
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, v14, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  sub_1B2228644();
  swift_bridgeObjectRelease();
  v16 = v4 == 2;
  if (v4 == 2)
    v17 = &unk_1E63BCB38;
  else
    v17 = &unk_1E63BCB08;
  if (v4 == 2)
    v18 = 0xD00000000000006DLL;
  else
    v18 = 0xD0000000000000BFLL;
  if (v16)
    v19 = 0x80000001B232DF70;
  else
    v19 = 0x80000001B232DFE0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)v2 + 2) = v19;
  *((_QWORD *)v2 + 3) = v17;
  *((_QWORD *)v2 + 1) = v18;
  if ((v20 & 1) == 0)
  {
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AB073C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  char v20;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v2 + 24);
  v5 = 0x6C6174656DLL;
  if (v4 != 1)
    v5 = 0x7466697773;
  if (*(_BYTE *)(v2 + 24))
    v6 = v5;
  else
    v6 = 99;
  if (*(_BYTE *)(v2 + 24))
    v7 = 0xE500000000000000;
  else
    v7 = 0xE100000000000000;
  if (a1)
  {
    if (a1 == 1)
      v8 = 0x6C6174656DLL;
    else
      v8 = 0x7466697773;
    v9 = 0xE500000000000000;
    if (v6 != v8)
      goto LABEL_18;
  }
  else
  {
    v9 = 0xE100000000000000;
    if (v6 != 99)
      goto LABEL_18;
  }
  if (v7 == v9)
    return swift_bridgeObjectRelease_n();
LABEL_18:
  v11 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    return result;
  if (!a1)
  {
    if (v4 == 1)
      return result;
LABEL_24:
    v12 = 0x80000001B232E120;
    v13 = 0xD0000000000000C3;
    goto LABEL_26;
  }
  if (a1 == 1)
  {
    if (!v4)
      return result;
    goto LABEL_24;
  }
  v12 = 0x80000001B232E0A0;
  v13 = 0xD000000000000071;
LABEL_26:
  if (v13 == *(_QWORD *)v2 && v12 == *(_QWORD *)(v2 + 8))
    v20 = 1;
  else
    v20 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  sub_1B1A06460();
  v14 = MEMORY[0x1E0DEA968];
  v15 = sub_1B2229214();
  sub_1B1A206D8(v15);
  swift_bridgeObjectRelease();
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, v14, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  sub_1B2228644();
  swift_bridgeObjectRelease();
  v16 = v4 == 2;
  if (v4 == 2)
    v17 = &unk_1E63BCB98;
  else
    v17 = &unk_1E63BCB68;
  if (v4 == 2)
    v18 = 0xD000000000000071;
  else
    v18 = 0xD0000000000000C3;
  if (v16)
    v19 = 0x80000001B232E0A0;
  else
    v19 = 0x80000001B232E120;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = v19;
  *(_QWORD *)(v2 + 16) = v17;
  *(_QWORD *)v2 = v18;
  if ((v20 & 1) == 0)
  {
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1AB0A30()
{
  return sub_1B1A22B1C();
}

uint64_t sub_1B1AB0A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17)
{
  return sub_1B1AB0AE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, (uint64_t)&off_1E6396670);
}

uint64_t sub_1B1AB0AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_1B1A23334(a3, a14, a1, a2, a6, a7 & 1, a8, a9 & 1, a10, a11 & 1, a4, a5, a12, a13, a15, a16, a3, a18);
}

uint64_t sub_1B1AB0B5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1B22296AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1B5E21024](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_1B1AB0C18@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(_QWORD)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t result;

  swift_retain();
  v12 = sub_1B1A86A94(a1, a3, a4, a2, a5);
  LOBYTE(a4) = v13;
  result = swift_release();
  *(_QWORD *)a6 = v12;
  *(_BYTE *)(a6 + 8) = a4 & 1;
  return result;
}

uint64_t sub_1B1AB0CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t result;

  swift_retain();
  v12 = a5(a1, a3, a4, a2);
  LOBYTE(a4) = v13;
  result = swift_release();
  *(_QWORD *)a6 = v12;
  *(_BYTE *)(a6 + 8) = a4 & 1;
  return result;
}

uint64_t sub_1B1AB0D2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB0DD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB0E84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB0F30(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1AE1628);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB0FDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1088(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1AF16BC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB113C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB11E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;

  swift_retain();
  v12 = a5(a1, a3, a4, a2);
  v14 = v13;
  LOBYTE(a3) = v15;
  result = swift_release();
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v14;
  *(_BYTE *)(a6 + 16) = a3 & 1;
  return result;
}

uint64_t sub_1B1AB1274(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1AF1CAC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;

  swift_retain();
  v8 = a3(a1, &type metadata for EmitterShape, &off_1E63752C8, a2);
  v10 = v9;
  LOBYTE(a1) = v11;
  result = swift_release();
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v10;
  *(_BYTE *)(a4 + 16) = a1;
  return result;
}

uint64_t sub_1B1AB13A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1454(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;

  v3 = *(id *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AB1580(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1AE6118);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB162C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1AEB7B4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB16D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _BYTE v9[80];

  swift_retain();
  sub_1B1A82F8C(a1, a3, a2, (uint64_t)v9);
  swift_release();
  return sub_1B1AE09AC((uint64_t)v9, a4);
}

uint64_t sub_1B1AB1758(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB180C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AB1870(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1924()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AB19A0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_retain();
  v6 = sub_1B1A84A54(a1, (uint64_t)&type metadata for AnimationTimeSource, (uint64_t)&off_1E6397740, a2);
  v8 = v7;
  result = swift_release();
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 12) = BYTE4(v8);
  *(_DWORD *)(a3 + 8) = v8;
  return result;
}

uint64_t sub_1B1AB1A14(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1B07E20);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _BYTE v9[48];

  swift_retain();
  sub_1B1A817B4(a1, a3, a2, (uint64_t)v9);
  swift_release();
  return sub_1B1A18378((uint64_t)v9, a4, &qword_1EEF593D0, (uint64_t)&type metadata for Asset);
}

uint64_t sub_1B1AB1B60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t result;

  swift_retain();
  v12 = a5(a1, a3, a4, a2);
  result = swift_release();
  *a6 = v12;
  return result;
}

uint64_t sub_1B1AB1C98(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1AFCE38);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1D44(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB1E00()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AB1E74@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v9 = a3(0);
  swift_retain();
  v10 = sub_1B1A82400(a1, v9, a4, a2);
  v12 = v11;
  result = swift_release();
  *a5 = v10;
  a5[1] = v12;
  return result;
}

uint64_t sub_1B1AB1EF0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X4>, _BYTE *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  v9 = a3(0);
  swift_retain();
  LOBYTE(a4) = sub_1B1A82630(a1, v9, a4, a2);
  result = swift_release();
  *a5 = a4;
  return result;
}

uint64_t sub_1B1AB1F68@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  uint64_t result;

  swift_retain();
  v6 = sub_1B1A858EC(a1, (uint64_t)&type metadata for ParticleFlockingSolver, (uint64_t)&off_1E63A8470, a2);
  v8 = v7;
  v10 = v9;
  result = swift_release();
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = v10;
  *(_BYTE *)(a3 + 17) = HIBYTE(v10) & 1;
  return result;
}

uint64_t sub_1B1AB1FE8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1AFA6BC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB209C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t result;

  swift_retain();
  v6 = sub_1B1A85FB8(a1, (uint64_t)&type metadata for ParticleOpacityEvolution, (uint64_t)&off_1E63AE988, a2);
  LOBYTE(a1) = v7;
  result = swift_release();
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 8) = a1;
  return result;
}

uint64_t sub_1B1AB2108(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result != 0xFFFFFFFFLL)
  {
    v1 = swift_retain();
    MEMORY[0x1E0C80A78](v1, v2);
    sub_1B1D198D0(0, (void (*)(_BYTE *))sub_1B1B07334);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB21BC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;

  swift_retain();
  v10 = sub_1B1A83A5C(a1, a3, a4, a2);
  v12 = v11;
  LOBYTE(a2) = v13;
  result = swift_release();
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v12;
  *(_BYTE *)(a5 + 16) = a2;
  return result;
}

uint64_t sub_1B1AB2238(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB22E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;

  swift_retain();
  v12 = a5(a1, a3, a4, a2);
  v14 = v13;
  v16 = v15;
  LOBYTE(a2) = v17;
  result = swift_release();
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v14;
  *(_QWORD *)(a6 + 16) = v16;
  *(_BYTE *)(a6 + 24) = a2;
  return result;
}

uint64_t sub_1B1AB2374(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B1AF7674(*a3);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AB23DC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  __int16 v11;
  uint64_t result;

  swift_retain();
  v10 = sub_1B1A833DC(a1, a3, a4, a2);
  LOWORD(a3) = v11;
  result = swift_release();
  *(_QWORD *)a5 = v10;
  *(_BYTE *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 9) = BYTE1(a3) & 1;
  return result;
}

uint64_t sub_1B1AB245C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  swift_retain();
  v10 = sub_1B1A82400(a1, a3, a4, a2);
  v12 = v11;
  result = swift_release();
  *a5 = v10;
  a5[1] = v12;
  return result;
}

uint64_t sub_1B1AB24D0()
{
  swift_bridgeObjectRetain();
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AB251C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;

  swift_retain();
  v12 = a5(a1, a3, a4, a2);
  result = swift_release();
  *(_BYTE *)(a6 + 4) = BYTE4(v12);
  *(_DWORD *)a6 = v12;
  *(_BYTE *)(a6 + 5) = BYTE5(v12) & 1;
  return result;
}

uint64_t sub_1B1AB25A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB265C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;

  if (result != 0xFFFFFFFFLL)
  {
    v6 = swift_retain();
    MEMORY[0x1E0C80A78](v6, v7);
    sub_1B1D198D0(0, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1AB2708@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t *a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t result;

  swift_retain();
  v14 = sub_1B1A85668(a1, a3, a4, a2, a5, a6);
  result = swift_release();
  *a7 = v14;
  return result;
}

uint64_t sub_1B1AB2790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;

  swift_retain();
  v12 = a5(a1, a3, a4, a2);
  result = swift_release();
  *(_DWORD *)a6 = v12;
  *(_BYTE *)(a6 + 4) = BYTE4(v12) & 1;
  return result;
}

uint64_t sub_1B1AB2814@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t *a5@<X5>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;

  swift_retain();
  v14 = sub_1B1A814F4(a1, a3, a4, a2, a5, a6);
  v16 = v15;
  LOBYTE(a5) = v17;
  result = swift_release();
  *(_QWORD *)a7 = v14;
  *(_QWORD *)(a7 + 8) = v16;
  *(_BYTE *)(a7 + 16) = a5 & 1;
  return result;
}

uint64_t sub_1B1AB28AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _BYTE v9[48];

  swift_retain();
  sub_1B1A85E64(a1, a3, a2, (uint64_t)v9);
  swift_release();
  return sub_1B1A18378((uint64_t)v9, a4, &qword_1EEF58FA8, (uint64_t)&type metadata for AABB);
}

uint64_t sub_1B1AB293C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_retain();
}

uint64_t sub_1B1AB2948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, _BYTE *a6@<X8>)
{
  uint64_t result;

  swift_retain();
  LOBYTE(a5) = a5(a1, a3, a4, a2);
  result = swift_release();
  *a6 = (_BYTE)a5;
  return result;
}

unint64_t sub_1B1AB29C4(uint64_t a1, uint64_t a2)
{
  return sub_1B1E33C2C(a2);
}

uint64_t sub_1B1AB29E8()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A454(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for PointCache.Distribution;
  do
  {
    v2 = byte_1E63BF410[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A454(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB2B60()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A488(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for Composition.Operation;
  do
  {
    v2 = byte_1E63BF438[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A488(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB2CD8()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  if (qword_1ED4B7FC8 != -1)
    swift_once();
  v0 = qword_1ED4D0A20;
  v1 = *(_QWORD *)(qword_1ED4D0A20 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A4BC(0, v1, 0);
    v2 = v22;
    v3 = (_BYTE *)(v0 + 36);
    do
    {
      v4 = *((_DWORD *)v3 - 1);
      v5 = *v3;
      v6 = sub_1B22287AC();
      v8 = v7;
      sub_1B1DB9A94(40, 0xE100000000000000, v6, v7);
      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v10 = sub_1B2228974();
        v12 = v11;
        v14 = v13;
        v16 = v15;
        swift_bridgeObjectRelease_n();
        v6 = MEMORY[0x1B5E20388](v10, v12, v14, v16);
        v8 = v17;
        swift_bridgeObjectRelease();
      }
      v19 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      if (v19 >= v18 >> 1)
        sub_1B202A4BC(v18 > 1, v19 + 1, 1);
      *(_QWORD *)(v22 + 16) = v19 + 1;
      v20 = v22 + 24 * v19;
      *(_QWORD *)(v20 + 32) = v6;
      *(_QWORD *)(v20 + 40) = v8;
      *(_DWORD *)(v20 + 48) = v4;
      *(_BYTE *)(v20 + 52) = v5;
      v3 += 8;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1B1AB2E98()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  _BYTE *v3;
  ValueMetadata *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_1ED4B8000 != -1)
    swift_once();
  v0 = qword_1ED4D0A30;
  v1 = *(_QWORD *)(qword_1ED4D0A30 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A4F0(0, v1, 0);
    v2 = v25;
    v3 = (_BYTE *)(v0 + 48);
    v4 = &type metadata for EmitterShape.Direction;
    do
    {
      v5 = *((_QWORD *)v3 - 2);
      v24 = *((_QWORD *)v3 - 1);
      v23 = *v3;
      v6 = sub_1B22287AC();
      v8 = v7;
      sub_1B1DB9A94(40, 0xE100000000000000, v6, v7);
      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v10 = sub_1B2228974();
        v12 = v11;
        v14 = v13;
        v15 = v4;
        v17 = v16;
        swift_bridgeObjectRelease_n();
        v6 = MEMORY[0x1B5E20388](v10, v12, v14, v17);
        v8 = v18;
        v4 = v15;
        swift_bridgeObjectRelease();
      }
      v20 = *(_QWORD *)(v25 + 16);
      v19 = *(_QWORD *)(v25 + 24);
      if (v20 >= v19 >> 1)
        sub_1B202A4F0(v19 > 1, v20 + 1, 1);
      v3 += 32;
      *(_QWORD *)(v25 + 16) = v20 + 1;
      v21 = v25 + 48 * v20;
      *(_QWORD *)(v21 + 32) = v6;
      *(_QWORD *)(v21 + 40) = v8;
      *(_QWORD *)(v21 + 48) = v5;
      *(_QWORD *)(v21 + 56) = v24;
      *(_BYTE *)(v21 + 64) = v23;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1B1AB306C()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A524(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for VideoCapture.OrientationMode;
  do
  {
    v2 = byte_1E63BF460[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A524(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB31E4()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A558(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for EmissionOrder;
  do
  {
    v2 = byte_1E63BF488[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A558(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB335C()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  _BYTE *v3;
  ValueMetadata *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  if (qword_1EEF57518 != -1)
    swift_once();
  v0 = qword_1EEFD5828;
  v1 = *(_QWORD *)(qword_1EEFD5828 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A58C(0, v1, 0);
    v2 = v25;
    v3 = (_BYTE *)(v0 + 40);
    v4 = &type metadata for EvolutionMode;
    do
    {
      v5 = *((_QWORD *)v3 - 1);
      v6 = *v3;
      v7 = sub_1B22287AC();
      v9 = v8;
      sub_1B1DB9A94(40, 0xE100000000000000, v7, v8);
      if ((v10 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v11 = sub_1B2228974();
        v13 = v12;
        v15 = v14;
        v24 = v5;
        v16 = v4;
        v18 = v17;
        swift_bridgeObjectRelease_n();
        v7 = MEMORY[0x1B5E20388](v11, v13, v15, v18);
        v9 = v19;
        v4 = v16;
        v5 = v24;
        swift_bridgeObjectRelease();
      }
      v21 = *(_QWORD *)(v25 + 16);
      v20 = *(_QWORD *)(v25 + 24);
      if (v21 >= v20 >> 1)
        sub_1B202A58C(v20 > 1, v21 + 1, 1);
      v3 += 12;
      *(_QWORD *)(v25 + 16) = v21 + 1;
      v22 = v25 + 32 * v21;
      *(_QWORD *)(v22 + 32) = v7;
      *(_QWORD *)(v22 + 40) = v9;
      *(_QWORD *)(v22 + 48) = v5;
      *(_BYTE *)(v22 + 56) = v6;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1B1AB3520()
{
  uint64_t v0;
  char *v1;
  ValueMetadata *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  ValueMetadata *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v0 = 23;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1B202A5C0(0, 23, 0);
  v1 = &byte_1E637EFF4;
  v2 = &type metadata for EasingFunction;
  do
  {
    v3 = *(_QWORD *)(v1 - 12);
    v4 = *((_DWORD *)v1 - 1);
    v24 = *v1;
    v5 = sub_1B22287AC();
    v7 = v6;
    sub_1B1DB9A94(40, 0xE100000000000000, v5, v6);
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1B2228974();
      v11 = v10;
      v13 = v12;
      v23 = v3;
      v14 = v4;
      v15 = v2;
      v17 = v16;
      swift_bridgeObjectRelease_n();
      v5 = MEMORY[0x1B5E20388](v9, v11, v13, v17);
      v7 = v18;
      v2 = v15;
      v4 = v14;
      v3 = v23;
      swift_bridgeObjectRelease();
    }
    v20 = *(_QWORD *)(v25 + 16);
    v19 = *(_QWORD *)(v25 + 24);
    if (v20 >= v19 >> 1)
      sub_1B202A5C0(v19 > 1, v20 + 1, 1);
    v1 += 16;
    *(_QWORD *)(v25 + 16) = v20 + 1;
    v21 = v25 + 32 * v20;
    *(_QWORD *)(v21 + 32) = v5;
    *(_QWORD *)(v21 + 40) = v7;
    *(_QWORD *)(v21 + 48) = v3;
    *(_DWORD *)(v21 + 56) = v4;
    *(_BYTE *)(v21 + 60) = v24;
    --v0;
  }
  while (v0);
  return v25;
}

uint64_t sub_1B1AB36C4()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A5F4(0, 5, 0);
  v0 = 0;
  v1 = &type metadata for TextureChannel;
  do
  {
    v2 = byte_1E63BF4B8[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A5F4(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 5);
  return v20;
}

uint64_t sub_1B1AB383C()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A628(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for LensBlurQuality;
  do
  {
    v2 = byte_1E63BF4E0[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A628(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB39B4()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A65C(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for FlockingSizeMode;
  do
  {
    v2 = byte_1E63BF508[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A65C(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB3B2C()
{
  uint64_t v0;
  char *v1;
  ValueMetadata *v2;
  char v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v0 = 7;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1B202A690(0, 7, 0);
  v1 = &byte_1E6389A90;
  v2 = &type metadata for ParticleSortMode;
  do
  {
    v4 = *v1++;
    v3 = v4;
    v5 = sub_1B22287AC();
    v7 = v6;
    sub_1B1DB9A94(40, 0xE100000000000000, v5, v6);
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1B2228974();
      v11 = v10;
      v13 = v12;
      v14 = v2;
      v16 = v15;
      swift_bridgeObjectRelease_n();
      v5 = MEMORY[0x1B5E20388](v9, v11, v13, v16);
      v7 = v17;
      v2 = v14;
      swift_bridgeObjectRelease();
    }
    v19 = *(_QWORD *)(v22 + 16);
    v18 = *(_QWORD *)(v22 + 24);
    if (v19 >= v18 >> 1)
      sub_1B202A690(v18 > 1, v19 + 1, 1);
    *(_QWORD *)(v22 + 16) = v19 + 1;
    v20 = v22 + 24 * v19;
    *(_QWORD *)(v20 + 32) = v5;
    *(_QWORD *)(v20 + 40) = v7;
    *(_BYTE *)(v20 + 48) = v3;
    --v0;
  }
  while (v0);
  return v22;
}

uint64_t sub_1B1AB3CA4()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A6C4(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for ParticleSubSpawn.Mode;
  do
  {
    v2 = byte_1E63BF538[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A6C4(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB3E1C()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A6F8(0, 6, 0);
  v0 = 0;
  v1 = &type metadata for FlockingLocalAxis;
  do
  {
    v2 = byte_1E63BF560[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A6F8(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 6);
  return v20;
}

uint64_t sub_1B1AB3F94()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  if (qword_1EEF57580 != -1)
    swift_once();
  v0 = qword_1EEFD5908;
  v1 = *(_QWORD *)(qword_1EEFD5908 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A72C(0, v1, 0);
    v2 = v22;
    v3 = (_BYTE *)(v0 + 36);
    do
    {
      v4 = *((_DWORD *)v3 - 1);
      v5 = *v3;
      v6 = sub_1B22287AC();
      v8 = v7;
      sub_1B1DB9A94(40, 0xE100000000000000, v6, v7);
      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v10 = sub_1B2228974();
        v12 = v11;
        v14 = v13;
        v16 = v15;
        swift_bridgeObjectRelease_n();
        v6 = MEMORY[0x1B5E20388](v10, v12, v14, v16);
        v8 = v17;
        swift_bridgeObjectRelease();
      }
      v19 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      if (v19 >= v18 >> 1)
        sub_1B202A72C(v18 > 1, v19 + 1, 1);
      *(_QWORD *)(v22 + 16) = v19 + 1;
      v20 = v22 + 24 * v19;
      *(_QWORD *)(v20 + 32) = v6;
      *(_QWORD *)(v20 + 40) = v8;
      *(_DWORD *)(v20 + 48) = v4;
      *(_BYTE *)(v20 + 52) = v5;
      v3 += 8;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1B1AB4154()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  _BYTE *v3;
  ValueMetadata *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_1ED4B9150 != -1)
    swift_once();
  v0 = qword_1ED4D0CD8;
  v1 = *(_QWORD *)(qword_1ED4D0CD8 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A760(0, v1, 0);
    v2 = v25;
    v3 = (_BYTE *)(v0 + 48);
    v4 = &type metadata for ShapeDistribution;
    do
    {
      v5 = *((_QWORD *)v3 - 2);
      v24 = *((_QWORD *)v3 - 1);
      v23 = *v3;
      v6 = sub_1B22287AC();
      v8 = v7;
      sub_1B1DB9A94(40, 0xE100000000000000, v6, v7);
      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v10 = sub_1B2228974();
        v12 = v11;
        v14 = v13;
        v15 = v4;
        v17 = v16;
        swift_bridgeObjectRelease_n();
        v6 = MEMORY[0x1B5E20388](v10, v12, v14, v17);
        v8 = v18;
        v4 = v15;
        swift_bridgeObjectRelease();
      }
      v20 = *(_QWORD *)(v25 + 16);
      v19 = *(_QWORD *)(v25 + 24);
      if (v20 >= v19 >> 1)
        sub_1B202A760(v19 > 1, v20 + 1, 1);
      v3 += 32;
      *(_QWORD *)(v25 + 16) = v20 + 1;
      v21 = v25 + 48 * v20;
      *(_QWORD *)(v21 + 32) = v6;
      *(_QWORD *)(v21 + 40) = v8;
      *(_QWORD *)(v21 + 48) = v5;
      *(_QWORD *)(v21 + 56) = v24;
      *(_BYTE *)(v21 + 64) = v23;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1B1AB4328()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A794(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for MotionDistribution;
  do
  {
    v2 = byte_1E63BF588[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A794(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB44A0()
{
  uint64_t v0;
  char *v1;
  ValueMetadata *v2;
  char v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v0 = 10;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1B202A7C8(0, 10, 0);
  v1 = &byte_1E63954B0;
  v2 = &type metadata for PrimitiveGenerator.PrimitiveType;
  do
  {
    v4 = *v1++;
    v3 = v4;
    v5 = sub_1B22287AC();
    v7 = v6;
    sub_1B1DB9A94(40, 0xE100000000000000, v5, v6);
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1B2228974();
      v11 = v10;
      v13 = v12;
      v14 = v2;
      v16 = v15;
      swift_bridgeObjectRelease_n();
      v5 = MEMORY[0x1B5E20388](v9, v11, v13, v16);
      v7 = v17;
      v2 = v14;
      swift_bridgeObjectRelease();
    }
    v19 = *(_QWORD *)(v22 + 16);
    v18 = *(_QWORD *)(v22 + 24);
    if (v19 >= v18 >> 1)
      sub_1B202A7C8(v18 > 1, v19 + 1, 1);
    *(_QWORD *)(v22 + 16) = v19 + 1;
    v20 = v22 + 24 * v19;
    *(_QWORD *)(v20 + 32) = v5;
    *(_QWORD *)(v20 + 40) = v7;
    *(_BYTE *)(v20 + 48) = v3;
    --v0;
  }
  while (v0);
  return v22;
}

uint64_t sub_1B1AB4618()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A830(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for ToneMappingOperator;
  do
  {
    v2 = byte_1E63BF5D8[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A830(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB4790()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A864(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for ParticleQuadRenderer.Shape;
  do
  {
    v2 = byte_1E63BF600[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A864(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB4908()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A8CC(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for ParticleAnimationMode;
  do
  {
    v2 = byte_1E63BF658[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A8CC(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB4A80()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A900(0, 5, 0);
  v0 = 0;
  v1 = &type metadata for ParticleRibbonProfile;
  do
  {
    v2 = byte_1E63BF680[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A900(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 5);
  return v20;
}

uint64_t sub_1B1AB4BF8(void (*a1)(BOOL, uint64_t, uint64_t), char *a2, uint64_t a3, char *a4)
{
  char v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;

  v40 = MEMORY[0x1E0DEE9D8];
  a1(0, 2, 0);
  v7 = *a2;
  v8 = sub_1B22287AC();
  v10 = v9;
  sub_1B1DB9A94(40, 0xE100000000000000, v8, v9);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1B2228974();
    v14 = v13;
    v16 = v15;
    v18 = v17;
    swift_bridgeObjectRelease_n();
    v8 = MEMORY[0x1B5E20388](v12, v14, v16, v18);
    v10 = v19;
    swift_bridgeObjectRelease();
  }
  v21 = *(_QWORD *)(v40 + 16);
  v20 = *(_QWORD *)(v40 + 24);
  if (v21 >= v20 >> 1)
    a1(v20 > 1, v21 + 1, 1);
  *(_QWORD *)(v40 + 16) = v21 + 1;
  v22 = v40 + 24 * v21;
  *(_QWORD *)(v22 + 32) = v8;
  *(_QWORD *)(v22 + 40) = v10;
  *(_BYTE *)(v22 + 48) = v7;
  v23 = *a4;
  v24 = sub_1B22287AC();
  v26 = v25;
  sub_1B1DB9A94(40, 0xE100000000000000, v24, v25);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v28 = sub_1B2228974();
    v30 = v29;
    v32 = v31;
    v34 = v33;
    swift_bridgeObjectRelease_n();
    v24 = MEMORY[0x1B5E20388](v28, v30, v32, v34);
    v26 = v35;
    swift_bridgeObjectRelease();
  }
  v37 = *(_QWORD *)(v40 + 16);
  v36 = *(_QWORD *)(v40 + 24);
  if (v37 >= v36 >> 1)
    a1(v36 > 1, v37 + 1, 1);
  *(_QWORD *)(v40 + 16) = v37 + 1;
  v38 = v40 + 24 * v37;
  *(_QWORD *)(v38 + 32) = v24;
  *(_QWORD *)(v38 + 40) = v26;
  *(_BYTE *)(v38 + 48) = v23;
  return v40;
}

uint64_t sub_1B1AB4E28()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A968(0, 5, 0);
  v0 = 0;
  v1 = &type metadata for ParticleOrientationMode;
  do
  {
    v2 = byte_1E63BF6D0[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A968(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 5);
  return v20;
}

uint64_t sub_1B1AB4FA0()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A99C(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for ParticleColorOverPosition.GradientMode;
  do
  {
    v2 = byte_1E63BF6F8[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A99C(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB5118()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202A9D0(0, 5, 0);
  v0 = 0;
  v1 = &type metadata for ParticlePrimitiveRenderer.Shape;
  do
  {
    v2 = byte_1E63BF720[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202A9D0(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 5);
  return v20;
}

uint64_t sub_1B1AB5290()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202AA04(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for ParticleRibbonTextureMode;
  do
  {
    v2 = byte_1E63BF748[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202AA04(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB5408()
{
  uint64_t v0;
  char *v1;
  ValueMetadata *v2;
  char v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v0 = 8;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1B202AA38(0, 8, 0);
  v1 = &byte_1E63B3DD0;
  v2 = &type metadata for FluidSolver2DSolverSetupType;
  do
  {
    v4 = *v1++;
    v3 = v4;
    v5 = sub_1B22287AC();
    v7 = v6;
    sub_1B1DB9A94(40, 0xE100000000000000, v5, v6);
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1B2228974();
      v11 = v10;
      v13 = v12;
      v14 = v2;
      v16 = v15;
      swift_bridgeObjectRelease_n();
      v5 = MEMORY[0x1B5E20388](v9, v11, v13, v16);
      v7 = v17;
      v2 = v14;
      swift_bridgeObjectRelease();
    }
    v19 = *(_QWORD *)(v22 + 16);
    v18 = *(_QWORD *)(v22 + 24);
    if (v19 >= v18 >> 1)
      sub_1B202AA38(v18 > 1, v19 + 1, 1);
    *(_QWORD *)(v22 + 16) = v19 + 1;
    v20 = v22 + 24 * v19;
    *(_QWORD *)(v20 + 32) = v5;
    *(_QWORD *)(v20 + 40) = v7;
    *(_BYTE *)(v20 + 48) = v3;
    --v0;
  }
  while (v0);
  return v22;
}

uint64_t sub_1B1AB5580()
{
  uint64_t v0;
  char *v1;
  ValueMetadata *v2;
  char v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v0 = 7;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1B202AA6C(0, 7, 0);
  v1 = &byte_1E63B4BE8;
  v2 = &type metadata for FluidSolver2DSolverBorderType;
  do
  {
    v4 = *v1++;
    v3 = v4;
    v5 = sub_1B22287AC();
    v7 = v6;
    sub_1B1DB9A94(40, 0xE100000000000000, v5, v6);
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1B2228974();
      v11 = v10;
      v13 = v12;
      v14 = v2;
      v16 = v15;
      swift_bridgeObjectRelease_n();
      v5 = MEMORY[0x1B5E20388](v9, v11, v13, v16);
      v7 = v17;
      v2 = v14;
      swift_bridgeObjectRelease();
    }
    v19 = *(_QWORD *)(v22 + 16);
    v18 = *(_QWORD *)(v22 + 24);
    if (v19 >= v18 >> 1)
      sub_1B202AA6C(v18 > 1, v19 + 1, 1);
    *(_QWORD *)(v22 + 16) = v19 + 1;
    v20 = v22 + 24 * v19;
    *(_QWORD *)(v20 + 32) = v5;
    *(_QWORD *)(v20 + 40) = v7;
    *(_BYTE *)(v20 + 48) = v3;
    --v0;
  }
  while (v0);
  return v22;
}

uint64_t sub_1B1AB56F8()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202AAA0(0, 4, 0);
  v0 = 0;
  v1 = &type metadata for FillMode;
  do
  {
    v2 = byte_1E63BF770[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202AAA0(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 4);
  return v20;
}

uint64_t sub_1B1AB5870()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202AAD4(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for Material.Kind;
  do
  {
    v2 = byte_1E63BF798[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202AAD4(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB59E8()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202AB08(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for KillShape.Shape;
  do
  {
    v2 = byte_1E63BF7C8[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202AB08(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB5B60()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202AB3C(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for NoiseKind;
  do
  {
    v2 = byte_1E63BF7F0[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202AB3C(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB5CD8()
{
  uint64_t v0;
  ValueMetadata *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202AB70(0, 3, 0);
  v0 = 0;
  v1 = &type metadata for ScaleMode;
  do
  {
    v2 = byte_1E63BF818[v0 + 32];
    v3 = sub_1B22287AC();
    v5 = v4;
    sub_1B1DB9A94(40, 0xE100000000000000, v3, v4);
    if ((v6 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B2228974();
      v9 = v8;
      v11 = v10;
      v12 = v1;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v3 = MEMORY[0x1B5E20388](v7, v9, v11, v14);
      v5 = v15;
      v1 = v12;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202AB70(v16 > 1, v17 + 1, 1);
    ++v0;
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = v20 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v3;
    *(_QWORD *)(v18 + 40) = v5;
    *(_BYTE *)(v18 + 48) = v2;
  }
  while (v0 != 3);
  return v20;
}

uint64_t sub_1B1AB5E50()
{
  uint64_t i;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  sub_1B202ABA4(0, 3, 0);
  type metadata accessor for MTLCullMode(0);
  for (i = 0; i != 24; i += 8)
  {
    v1 = *(_QWORD *)((char *)&unk_1E63BF840 + i + 32);
    v2 = sub_1B22287AC();
    v4 = v3;
    sub_1B1DB9A94(40, 0xE100000000000000, v2, v3);
    if ((v5 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1B2228974();
      v8 = v7;
      v10 = v9;
      v12 = v11;
      swift_bridgeObjectRelease_n();
      v2 = MEMORY[0x1B5E20388](v6, v8, v10, v12);
      v4 = v13;
      swift_bridgeObjectRelease();
    }
    v15 = *(_QWORD *)(v18 + 16);
    v14 = *(_QWORD *)(v18 + 24);
    if (v15 >= v14 >> 1)
      sub_1B202ABA4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v18 + 16) = v15 + 1;
    v16 = (_QWORD *)(v18 + 24 * v15);
    v16[4] = v2;
    v16[5] = v4;
    v16[6] = v1;
  }
  return v18;
}

uint64_t sub_1B1AB5FC4()
{
  uint64_t i;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  sub_1B202ABD0(0, 5, 0);
  type metadata accessor for VFXCameraFillMode(0);
  for (i = 0; i != 40; i += 8)
  {
    v1 = *(_QWORD *)((char *)&unk_1E63BF880 + i + 32);
    v2 = sub_1B22287AC();
    v4 = v3;
    sub_1B1DB9A94(40, 0xE100000000000000, v2, v3);
    if ((v5 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1B2228974();
      v8 = v7;
      v10 = v9;
      v12 = v11;
      swift_bridgeObjectRelease_n();
      v2 = MEMORY[0x1B5E20388](v6, v8, v10, v12);
      v4 = v13;
      swift_bridgeObjectRelease();
    }
    v15 = *(_QWORD *)(v18 + 16);
    v14 = *(_QWORD *)(v18 + 24);
    if (v15 >= v14 >> 1)
      sub_1B202ABD0(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v18 + 16) = v15 + 1;
    v16 = (_QWORD *)(v18 + 24 * v15);
    v16[4] = v2;
    v16[5] = v4;
    v16[6] = v1;
  }
  return v18;
}

uint64_t sub_1B1AB6138()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v0 = 9;
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202ABFC(0, 9, 0);
  type metadata accessor for VFXForceFieldType(0);
  v1 = &qword_1E63C8018;
  do
  {
    v3 = *v1++;
    v2 = v3;
    v4 = sub_1B22287AC();
    v6 = v5;
    sub_1B1DB9A94(40, 0xE100000000000000, v4, v5);
    if ((v7 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1B2228974();
      v10 = v9;
      v12 = v11;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v4 = MEMORY[0x1B5E20388](v8, v10, v12, v14);
      v6 = v15;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202ABFC(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = (_QWORD *)(v20 + 24 * v17);
    v18[4] = v4;
    v18[5] = v6;
    v18[6] = v2;
    --v0;
  }
  while (v0);
  return v20;
}

uint64_t sub_1B1AB62AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v0 = 8;
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1B202AC28(0, 8, 0);
  type metadata accessor for MTLCompareFunction(0);
  v1 = &qword_1E63C8328;
  do
  {
    v3 = *v1++;
    v2 = v3;
    v4 = sub_1B22287AC();
    v6 = v5;
    sub_1B1DB9A94(40, 0xE100000000000000, v4, v5);
    if ((v7 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1B2228974();
      v10 = v9;
      v12 = v11;
      v14 = v13;
      swift_bridgeObjectRelease_n();
      v4 = MEMORY[0x1B5E20388](v8, v10, v12, v14);
      v6 = v15;
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)(v20 + 16);
    v16 = *(_QWORD *)(v20 + 24);
    if (v17 >= v16 >> 1)
      sub_1B202AC28(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v20 + 16) = v17 + 1;
    v18 = (_QWORD *)(v20 + 24 * v17);
    v18[4] = v4;
    v18[5] = v6;
    v18[6] = v2;
    --v0;
  }
  while (v0);
  return v20;
}

uint64_t sub_1B1AB6420(void (*a1)(BOOL, uint64_t, uint64_t), void (*a2)(_QWORD), uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v41;

  v41 = MEMORY[0x1E0DEE9D8];
  a1(0, 2, 0);
  a2(0);
  v8 = *a3;
  v9 = sub_1B22287AC();
  v11 = v10;
  sub_1B1DB9A94(40, 0xE100000000000000, v9, v10);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1B2228974();
    v15 = v14;
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRelease_n();
    v9 = MEMORY[0x1B5E20388](v13, v15, v17, v19);
    v11 = v20;
    swift_bridgeObjectRelease();
  }
  v22 = *(_QWORD *)(v41 + 16);
  v21 = *(_QWORD *)(v41 + 24);
  if (v22 >= v21 >> 1)
    a1(v21 > 1, v22 + 1, 1);
  *(_QWORD *)(v41 + 16) = v22 + 1;
  v23 = (_QWORD *)(v41 + 24 * v22);
  v23[4] = v9;
  v23[5] = v11;
  v23[6] = v8;
  v24 = *a4;
  v25 = sub_1B22287AC();
  v27 = v26;
  sub_1B1DB9A94(40, 0xE100000000000000, v25, v26);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v29 = sub_1B2228974();
    v31 = v30;
    v33 = v32;
    v35 = v34;
    swift_bridgeObjectRelease_n();
    v25 = MEMORY[0x1B5E20388](v29, v31, v33, v35);
    v27 = v36;
    swift_bridgeObjectRelease();
  }
  v38 = *(_QWORD *)(v41 + 16);
  v37 = *(_QWORD *)(v41 + 24);
  if (v38 >= v37 >> 1)
    a1(v37 > 1, v38 + 1, 1);
  *(_QWORD *)(v41 + 16) = v38 + 1;
  v39 = (_QWORD *)(v41 + 24 * v38);
  v39[4] = v25;
  v39[5] = v27;
  v39[6] = v24;
  return v41;
}

uint64_t sub_1B1AB665C()
{
  uint64_t i;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  sub_1B202ACAC(0, 3, 0);
  type metadata accessor for VFXCameraLensBlurFilterQuality(0);
  for (i = 0; i != 24; i += 8)
  {
    v1 = *(_QWORD *)((char *)&unk_1E63BF928 + i + 32);
    v2 = sub_1B22287AC();
    v4 = v3;
    sub_1B1DB9A94(40, 0xE100000000000000, v2, v3);
    if ((v5 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1B2228974();
      v8 = v7;
      v10 = v9;
      v12 = v11;
      swift_bridgeObjectRelease_n();
      v2 = MEMORY[0x1B5E20388](v6, v8, v10, v12);
      v4 = v13;
      swift_bridgeObjectRelease();
    }
    v15 = *(_QWORD *)(v18 + 16);
    v14 = *(_QWORD *)(v18 + 24);
    if (v15 >= v14 >> 1)
      sub_1B202ACAC(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v18 + 16) = v15 + 1;
    v16 = (_QWORD *)(v18 + 24 * v15);
    v16[4] = v2;
    v16[5] = v4;
    v16[6] = v1;
  }
  return v18;
}

uint64_t sub_1B1AB67D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD),uint64_t a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;

  v25 = (_QWORD *)v24;
  *(_OWORD *)(v24 + 64) = 0u;
  *(_OWORD *)(v24 + 80) = 0u;
  *(_OWORD *)(v24 + 96) = 0u;
  *(_BYTE *)(v24 + 112) = 1;
  *(_QWORD *)(v24 + 128) = 0;
  *(_QWORD *)(v24 + 136) = 0;
  *(_QWORD *)(v24 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v24 + 168) = 0;
  *(_QWORD *)(v24 + 176) = 0;
  *(_QWORD *)(v24 + 160) = v28;
  *(_DWORD *)(v24 + 184) = 0;
  *(_BYTE *)(v24 + 188) = 1;
  *(_DWORD *)(v24 + 192) = 0;
  *(_BYTE *)(v24 + 196) = 1;
  *(_QWORD *)(v24 + 200) = 0x1000100000000;
  *(_BYTE *)(v24 + 208) = 1;
  *(_WORD *)(v24 + 210) = 0;
  *(_QWORD *)(v24 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  v32 = a23(0);
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = a2;
  *(_QWORD *)(v24 + 32) = a17;
  *(_QWORD *)(v24 + 40) = v32;
  *(_QWORD *)(v24 + 48) = v29;
  *(_BYTE *)(v24 + 56) = v31 & 1;
  *(_WORD *)(v24 + 58) = a20;
  v34 = *(double *)&a3;
  v35 = v34;
  if ((a4 & 1) != 0)
    v35 = 0.0;
  *(float *)(v24 + 184) = v35;
  *(_BYTE *)(v24 + 188) = a4 & 1;
  v36 = *(double *)&a5;
  v37 = v36;
  if ((a6 & 1) != 0)
    v37 = 0.0;
  *(float *)(v24 + 192) = v37;
  *(_BYTE *)(v24 + 196) = a6 & 1;
  v38 = *(double *)&a7;
  v39 = v38;
  if ((a8 & 1) != 0)
    v39 = 0.0;
  *(float *)(v24 + 200) = v39;
  *(_BYTE *)(v24 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v24 + 205) = v33;
  *(_BYTE *)(v24 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v40 = 0;
LABEL_14:
  *(_BYTE *)(v24 + 207) = v40;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v44 = a24;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v45 = v32;
    v46 = swift_conformsToProtocol2();
    if (v46)
      v47 = v46;
    else
      v47 = 0;
    if (v46)
      v48 = v32;
    else
      v48 = 0;
    if (v48)
      v45 = (*(uint64_t (**)(void))(v47 + 8))();
    v44 = a24;
    v49 = swift_conformsToProtocol2();
    if (v49)
      v50 = v49;
    else
      v50 = 0;
    if (v49)
      v51 = v45;
    else
      v51 = 0;
    if (v51)
    {
      v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      v25[20] = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a17;
    v43 = a18;
  }
  v53 = v25[8];
  v25[8] = v44;
  v25[9] = v42;
  sub_1B19E5A18(v53);
  v25[21] = v43;
  v25[22] = a19;
  swift_bridgeObjectRelease();
  v25[27] = a22;
  swift_release();
  return (uint64_t)v25;
}

uint64_t sub_1B1AB6B90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF8098;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB6F6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE5264;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB7348(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE1320;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB7724(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE1158;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB7B00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,unint64_t *a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  _QWORD *v26;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v26 = (_QWORD *)v25;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_BYTE *)(v25 + 112) = 1;
  *(_QWORD *)(v25 + 128) = 0;
  *(_QWORD *)(v25 + 136) = 0;
  *(_QWORD *)(v25 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v25 + 168) = 0;
  *(_QWORD *)(v25 + 176) = 0;
  *(_QWORD *)(v25 + 160) = v29;
  *(_DWORD *)(v25 + 184) = 0;
  *(_BYTE *)(v25 + 188) = 1;
  *(_DWORD *)(v25 + 192) = 0;
  *(_BYTE *)(v25 + 196) = 1;
  *(_QWORD *)(v25 + 200) = 0x1000100000000;
  *(_BYTE *)(v25 + 208) = 1;
  *(_WORD *)(v25 + 210) = 0;
  *(_QWORD *)(v25 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  sub_1B1A02758(0, a23, a24, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v34 = v33;
  swift_retain();
  swift_bridgeObjectRelease();
  v35 = 0;
  *(_QWORD *)(v25 + 16) = a1;
  *(_QWORD *)(v25 + 24) = a2;
  *(_QWORD *)(v25 + 32) = a17;
  *(_QWORD *)(v25 + 40) = v34;
  *(_QWORD *)(v25 + 48) = v30;
  *(_BYTE *)(v25 + 56) = v32 & 1;
  *(_WORD *)(v25 + 58) = a20;
  v36 = *(double *)&a3;
  v37 = v36;
  if ((a4 & 1) != 0)
    v37 = 0.0;
  *(float *)(v25 + 184) = v37;
  *(_BYTE *)(v25 + 188) = a4 & 1;
  v38 = *(double *)&a5;
  v39 = v38;
  if ((a6 & 1) != 0)
    v39 = 0.0;
  *(float *)(v25 + 192) = v39;
  *(_BYTE *)(v25 + 196) = a6 & 1;
  v40 = *(double *)&a7;
  v41 = v40;
  if ((a8 & 1) != 0)
    v41 = 0.0;
  *(float *)(v25 + 200) = v41;
  *(_BYTE *)(v25 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v35 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v25 + 205) = v35;
  *(_BYTE *)(v25 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v42 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v42 = 0;
LABEL_14:
  *(_BYTE *)(v25 + 207) = v42;
  *(_BYTE *)(v25 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v25 + 64);
  *(_QWORD *)(v25 + 64) = 0;
  *(_QWORD *)(v25 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v25 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v25 + 144) = a14;
  *(_QWORD *)(v25 + 152) = a15;
  *(_QWORD *)(v25 + 80) = a16;
  *(_QWORD *)(v25 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v25 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v25 + 160) = a21;
    swift_bridgeObjectRelease();
    v45 = a19;
    v44 = a17;
    v46 = a25;
  }
  else
  {
    swift_bridgeObjectRelease();
    v47 = v34;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v47 = (*(uint64_t (**)(void))(v49 + 8))();
    v46 = a25;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v47;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      v26[20] = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v45 = a19;
    v44 = a17;
  }
  v55 = v26[8];
  v26[8] = v46;
  v26[9] = v44;
  sub_1B19E5A18(v55);
  v26[21] = a18;
  v26[22] = v45;
  swift_bridgeObjectRelease();
  v26[27] = a22;
  swift_release();
  return (uint64_t)v26;
}

uint64_t sub_1B1AB7ED8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for EmitterShape.Shape;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for EmitterShape.Shape;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for EmitterShape.Shape;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF21C4;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AB8294(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF1FD4;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB8670(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ShapeDistribution;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ShapeDistribution;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ShapeDistribution;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF1E50;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AB8A2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for EmissionOrder;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for EmissionOrder;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for EmissionOrder;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF1D64;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AB8DE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF1B28;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB91C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for EmitterShape.Direction;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for EmitterShape.Direction;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for EmitterShape.Direction;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF18A4;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AB9580(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF17C4;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB995C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE34A0;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AB9D38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for VideoCapture.OrientationMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for VideoCapture.OrientationMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for VideoCapture.OrientationMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE79BC;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ABA0F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE35C0;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABA4D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD),uint64_t a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;

  v25 = (_QWORD *)v24;
  *(_OWORD *)(v24 + 64) = 0u;
  *(_OWORD *)(v24 + 80) = 0u;
  *(_OWORD *)(v24 + 96) = 0u;
  *(_BYTE *)(v24 + 112) = 1;
  *(_QWORD *)(v24 + 128) = 0;
  *(_QWORD *)(v24 + 136) = 0;
  *(_QWORD *)(v24 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v24 + 168) = 0;
  *(_QWORD *)(v24 + 176) = 0;
  *(_QWORD *)(v24 + 160) = v28;
  *(_DWORD *)(v24 + 184) = 0;
  *(_BYTE *)(v24 + 188) = 1;
  *(_DWORD *)(v24 + 192) = 0;
  *(_BYTE *)(v24 + 196) = 1;
  *(_QWORD *)(v24 + 200) = 0x1000100000000;
  *(_BYTE *)(v24 + 208) = 1;
  *(_WORD *)(v24 + 210) = 0;
  *(_QWORD *)(v24 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  v32 = a23(0);
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = a2;
  *(_QWORD *)(v24 + 32) = a17;
  *(_QWORD *)(v24 + 40) = v32;
  *(_QWORD *)(v24 + 48) = v29;
  *(_BYTE *)(v24 + 56) = v31 & 1;
  *(_WORD *)(v24 + 58) = a20;
  v34 = *(double *)&a3;
  v35 = v34;
  if ((a4 & 1) != 0)
    v35 = 0.0;
  *(float *)(v24 + 184) = v35;
  *(_BYTE *)(v24 + 188) = a4 & 1;
  v36 = *(double *)&a5;
  v37 = v36;
  if ((a6 & 1) != 0)
    v37 = 0.0;
  *(float *)(v24 + 192) = v37;
  *(_BYTE *)(v24 + 196) = a6 & 1;
  v38 = *(double *)&a7;
  v39 = v38;
  if ((a8 & 1) != 0)
    v39 = 0.0;
  *(float *)(v24 + 200) = v39;
  *(_BYTE *)(v24 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_28;
  }
  *(_BYTE *)(v24 + 205) = v33;
  *(_BYTE *)(v24 + 206) = a10 & 1;
  if ((a12 & 1) != 0)
  {
    v40 = 0;
  }
  else
  {
    v40 = a11;
    if ((a11 & 0x8000000000000000) != 0 || a11 >= 0x100)
      goto LABEL_28;
  }
  *(_BYTE *)(v24 + 207) = v40;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
LABEL_26:
    v48 = v25[8];
    v25[8] = a24;
    v25[9] = a17;
    sub_1B19E5A18(v48);
    v25[21] = a18;
    v25[22] = a19;
    swift_bridgeObjectRelease();
    v25[27] = a22;
    swift_release();
    return (uint64_t)v25;
  }
  swift_bridgeObjectRelease();
  v42 = swift_conformsToProtocol2();
  if (v42)
  {
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v32, v42);
    v44 = swift_conformsToProtocol2();
    if (v44)
      v45 = v44;
    else
      v45 = 0;
    if (v44)
      v46 = v43;
    else
      v46 = 0;
    if (v46)
    {
      v47 = (*(uint64_t (**)(void))(v45 + 8))();
      swift_release();
      swift_release();
      v25[20] = v47;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    goto LABEL_26;
  }
  __break(1u);
LABEL_28:
  result = sub_1B222967C();
  __break(1u);
  return result;
}

uint64_t sub_1B1ABA86C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF8D0C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABAC48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE4024;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABB024(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for EntitySpace;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for EntitySpace;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for EntitySpace;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ABB3E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for LensBlurQuality;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for LensBlurQuality;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for LensBlurQuality;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE5718;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ABB7A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE6BF4;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABBB80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE3910;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABBF5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v33 = MEMORY[0x1E0DEDBC8];
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v33;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v34 = *(double *)&a3;
  v35 = v34;
  if ((a4 & 1) != 0)
    v35 = 0.0;
  *(float *)(v22 + 184) = v35;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v36 = *(double *)&a5;
  v37 = v36;
  if ((a6 & 1) != 0)
    v37 = 0.0;
  *(float *)(v22 + 192) = v37;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v38 = *(double *)&a7;
  v39 = v38;
  if ((a8 & 1) != 0)
    v39 = 0.0;
  *(float *)(v22 + 200) = v39;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v40 = 0;
LABEL_14:
  v41 = a22;
  *(_BYTE *)(v23 + 207) = v40;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v42 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v42);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v43 = a17;
    v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEDBC8];
    v46 = swift_conformsToProtocol2();
    if (v46)
      v47 = v46;
    else
      v47 = 0;
    if (v46)
      v48 = v45;
    else
      v48 = 0;
    if (v48)
      v45 = (*(uint64_t (**)(void))(v47 + 8))();
    v43 = a17;
    v44 = a18;
    v49 = swift_conformsToProtocol2();
    if (v49)
      v50 = v49;
    else
      v50 = 0;
    if (v49)
      v51 = v45;
    else
      v51 = 0;
    if (v51)
    {
      v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v41 = a22;
  }
  v53 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE1C8C;
  *(_QWORD *)(v23 + 72) = v43;
  sub_1B19E5A18(v53);
  *(_QWORD *)(v23 + 168) = v44;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B1ABC318(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B07568;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABC6F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE2540;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABCAD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for VFXLightType,
           (uint64_t)sub_1B1B09128);
}

uint64_t sub_1B1ABCB48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0906C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABCF24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B08FC8);
}

uint64_t sub_1B1ABCF94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B08F0C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABD370(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B08E68);
}

uint64_t sub_1B1ABD3E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD6CCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B08DC4);
}

uint64_t sub_1B1ABD450(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,unint64_t *a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  _QWORD *v26;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;

  v26 = (_QWORD *)v25;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_BYTE *)(v25 + 112) = 1;
  *(_QWORD *)(v25 + 128) = 0;
  *(_QWORD *)(v25 + 136) = 0;
  *(_QWORD *)(v25 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v25 + 168) = 0;
  *(_QWORD *)(v25 + 176) = 0;
  *(_QWORD *)(v25 + 160) = v29;
  *(_DWORD *)(v25 + 184) = 0;
  *(_BYTE *)(v25 + 188) = 1;
  *(_DWORD *)(v25 + 192) = 0;
  *(_BYTE *)(v25 + 196) = 1;
  *(_QWORD *)(v25 + 200) = 0x1000100000000;
  *(_BYTE *)(v25 + 208) = 1;
  *(_WORD *)(v25 + 210) = 0;
  *(_QWORD *)(v25 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  sub_1B1A02758(0, a23, a24, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v34 = v33;
  swift_retain();
  swift_bridgeObjectRelease();
  v35 = 0;
  *(_QWORD *)(v25 + 16) = a1;
  *(_QWORD *)(v25 + 24) = a2;
  *(_QWORD *)(v25 + 32) = a17;
  *(_QWORD *)(v25 + 40) = v34;
  *(_QWORD *)(v25 + 48) = v30;
  *(_BYTE *)(v25 + 56) = v32 & 1;
  *(_WORD *)(v25 + 58) = a20;
  v36 = *(double *)&a3;
  v37 = v36;
  if ((a4 & 1) != 0)
    v37 = 0.0;
  *(float *)(v25 + 184) = v37;
  *(_BYTE *)(v25 + 188) = a4 & 1;
  v38 = *(double *)&a5;
  v39 = v38;
  if ((a6 & 1) != 0)
    v39 = 0.0;
  *(float *)(v25 + 192) = v39;
  *(_BYTE *)(v25 + 196) = a6 & 1;
  v40 = *(double *)&a7;
  v41 = v40;
  if ((a8 & 1) != 0)
    v41 = 0.0;
  *(float *)(v25 + 200) = v41;
  *(_BYTE *)(v25 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v35 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_28;
  }
  *(_BYTE *)(v25 + 205) = v35;
  *(_BYTE *)(v25 + 206) = a10 & 1;
  if ((a12 & 1) != 0)
  {
    v42 = 0;
  }
  else
  {
    v42 = a11;
    if ((a11 & 0x8000000000000000) != 0 || a11 >= 0x100)
      goto LABEL_28;
  }
  *(_BYTE *)(v25 + 207) = v42;
  *(_BYTE *)(v25 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v25 + 64);
  *(_QWORD *)(v25 + 64) = 0;
  *(_QWORD *)(v25 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v25 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v25 + 144) = a14;
  *(_QWORD *)(v25 + 152) = a15;
  *(_QWORD *)(v25 + 80) = a16;
  *(_QWORD *)(v25 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v25 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v25 + 160) = a21;
    swift_bridgeObjectRelease();
LABEL_26:
    v50 = v26[8];
    v26[8] = a25;
    v26[9] = a17;
    sub_1B19E5A18(v50);
    v26[21] = a18;
    v26[22] = a19;
    swift_bridgeObjectRelease();
    v26[27] = a22;
    swift_release();
    return (uint64_t)v26;
  }
  swift_bridgeObjectRelease();
  v44 = swift_conformsToProtocol2();
  if (v44)
  {
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v34, v44);
    v46 = swift_conformsToProtocol2();
    if (v46)
      v47 = v46;
    else
      v47 = 0;
    if (v46)
      v48 = v45;
    else
      v48 = 0;
    if (v48)
    {
      v49 = (*(uint64_t (**)(void))(v47 + 8))();
      swift_release();
      swift_release();
      v26[20] = v49;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    goto LABEL_26;
  }
  __break(1u);
LABEL_28:
  result = sub_1B222967C();
  __break(1u);
  return result;
}

uint64_t sub_1B1ABD804(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09374);
}

uint64_t sub_1B1ABD874(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B092D0);
}

uint64_t sub_1B1ABD8E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B091F8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABDCC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for simd_float4x4,
           (uint64_t)sub_1B1B091B8);
}

uint64_t sub_1B1ABDD38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for SourceDataKind;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for SourceDataKind;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for SourceDataKind;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AFC22C;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ABE0F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for TargetDataKind;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for TargetDataKind;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for TargetDataKind;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AFC138;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ABE4B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEEC14;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABE88C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEE9CC;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABEC68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEF544;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABF044(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ParticleSubSpawn.Mode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ParticleSubSpawn.Mode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ParticleSubSpawn.Mode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AEDFB8;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ABF400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;

  v14 = swift_conformsToProtocol2();
  if (v14)
    v15 = v14;
  else
    v15 = 0;
  if (v14)
    v16 = a4;
  else
    v16 = 0;
  if (v16)
  {
    type metadata accessor for PropertyDescription();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v17 = sub_1B1BF5168(a2, a3, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, MEMORY[0x1E0DEE9B8] + 8, 0, 0, 4,
            MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)(v17 + 104) = a1;
    *(_BYTE *)(v17 + 112) = 0;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v16;
    v18[3] = v15;
    v18[4] = a6;
    v18[5] = a7;
    v18[6] = a4;
    v18[7] = a5;
    v19 = *(_QWORD *)(v17 + 120);
    *(_QWORD *)(v17 + 120) = sub_1B1ADFF50;
    *(_QWORD *)(v17 + 128) = v18;
    swift_bridgeObjectRetain();
    sub_1B19E5A18(v19);
    return v17;
  }
  else
  {
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1ABF5A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ToneMappingOperator;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ToneMappingOperator;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ToneMappingOperator;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE5A70;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ABF960(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEF960;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ABFD3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ParticleColorInit.Mode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ParticleColorInit.Mode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ParticleColorInit.Mode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF0290;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC00F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF0080;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC04D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEF830;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC08B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE4834;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC0C8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE4568;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC1068(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF28A0;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC1444(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for MotionDistribution;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for MotionDistribution;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for MotionDistribution;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AC1808(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE5DF0;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC1BE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for EmitterDescription.PhysicsSimulation;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for EmitterDescription.PhysicsSimulation;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for EmitterDescription.PhysicsSimulation;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1ADFD4C;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC1FA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0B074;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC237C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0AFD0);
}

uint64_t sub_1B1AC23EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for ProjectionDirection;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for ProjectionDirection;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for ProjectionDirection;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AC27B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE4C24;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC2B8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AED62C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC2F68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADBDA8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B089F8);
}

uint64_t sub_1B1AC2FD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for PrimitiveGenerator.PrimitiveType;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for PrimitiveGenerator.PrimitiveType;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for PrimitiveGenerator.PrimitiveType;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B088F8;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC3394(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD7928(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B08854);
}

uint64_t sub_1B1AC3404(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B087B0);
}

uint64_t sub_1B1AC3474(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for SimpleFontDescription;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for SimpleFontDescription;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for SimpleFontDescription;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B08674;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC3830(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD6CCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B085D0);
}

uint64_t sub_1B1AC38A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0852C);
}

uint64_t sub_1B1AC3910(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for KernelReference;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for KernelReference;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for KernelReference;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B0BAF8;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC3CCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD7928(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0BA54);
}

uint64_t sub_1B1AC3D3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for MTLPixelFormat,
           (uint64_t)sub_1B1B0B9F0);
}

uint64_t sub_1B1AC3DB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD6CCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0B94C);
}

uint64_t sub_1B1AC3E24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for MetalFunctionReflection;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for MetalFunctionReflection;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for MetalFunctionReflection;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B0B834;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC41E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for MTLStorageMode,
           (uint64_t)sub_1B1B0B7A4);
}

uint64_t sub_1B1AC4258(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))sub_1B1B0B6B8,
           (uint64_t)sub_1B1B0B71C);
}

uint64_t sub_1B1AC42D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0B4FC;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC46AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0B458);
}

uint64_t sub_1B1AC471C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0B254);
}

uint64_t sub_1B1AC478C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for simd_float4x4,
           (uint64_t)sub_1B1B0B214);
}

uint64_t sub_1B1AC4804(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for EasingFunction;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for EasingFunction;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for EasingFunction;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B07D80;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC4BC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B07CA8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC4F9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for FillMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for FillMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for FillMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B07B04;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC5358(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for NoiseKind;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for NoiseKind;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for NoiseKind;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AC571C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEE724;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC5AF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for Asset;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for Asset;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for Asset;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AC5EBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for PointCache.Distribution;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for PointCache.Distribution;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for PointCache.Distribution;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE9DCC;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC6278(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for AngleF;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for AngleF;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for AngleF;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AFCD8C;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC6634(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for GraphScriptingConfig.Mode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for GraphScriptingConfig.Mode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for GraphScriptingConfig.Mode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B0BEA8;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC69F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ParticleQuadRenderer.Shape;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ParticleQuadRenderer.Shape;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ParticleQuadRenderer.Shape;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B020D4;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC6DAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B01F08;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC7188(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B01C84;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC7564(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF353C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC7940(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for Language;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for Language;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for Language;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AC7D04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEEE64;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC80E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADBDA8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0AF2C);
}

uint64_t sub_1B1AC8150(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldType,
           (uint64_t)sub_1B1B0AE9C);
}

uint64_t sub_1B1AC81C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0ADF8);
}

uint64_t sub_1B1AC8238(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0AD04);
}

uint64_t sub_1B1AC82A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldShape,
           (uint64_t)sub_1B1B0AC74);
}

uint64_t sub_1B1AC8320(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0ABB8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC86FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldScope,
           (uint64_t)sub_1B1B0AB28);
}

uint64_t sub_1B1AC8774(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for VFXForceFieldCullMode,
           (uint64_t)sub_1B1B0AA98);
}

uint64_t sub_1B1AC87EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AC885C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A9F4);
}

uint64_t sub_1B1AC885C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = MEMORY[0x1E0DEE190];
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = v34;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v34 = (*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AC8C20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for OrientationConstraint.Mode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for OrientationConstraint.Mode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for OrientationConstraint.Mode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF72EC;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AC8FDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AFFC58;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC93B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AED440;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC9794(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0A938;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC9B70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0A87C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AC9F4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A7D8);
}

uint64_t sub_1B1AC9FBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A734);
}

uint64_t sub_1B1ACA02C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for FlockingSizeMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for FlockingSizeMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for FlockingSizeMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AFA6E0;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ACA3E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for ParticleOrientationMode;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for ParticleOrientationMode;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for ParticleOrientationMode;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ACA7AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ParticleRibbonProfile;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ParticleRibbonProfile;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ParticleRibbonProfile;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B05130;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ACAB68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ParticleRibbonTextureMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ParticleRibbonTextureMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ParticleRibbonTextureMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B0503C;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ACAF24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B04F5C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACB300(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0B39C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACB6DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0B2F8);
}

uint64_t sub_1B1ACB74C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE0B70;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACBB28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B08B1C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACBF04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for simd_quatf,
           (uint64_t)sub_1B1B08ADC);
}

uint64_t sub_1B1ACBF7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for simd_float4x4,
           (uint64_t)sub_1B1B08A9C);
}

uint64_t sub_1B1ACBFF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for OrientationOverVelocity.DirectionAxis;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for OrientationOverVelocity.DirectionAxis;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for OrientationOverVelocity.DirectionAxis;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF43F0;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ACC3B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF3998;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACC78C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEF1EC;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACCB68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF5A30;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACCF44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF592C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACD320(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B08D20);
}

uint64_t sub_1B1ACD390(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B08C7C);
}

uint64_t sub_1B1ACD400(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD6CCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B08BD8);
}

uint64_t sub_1B1ACD470(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF50D4;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACD84C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for CollisionLayerSet;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for CollisionLayerSet;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for CollisionLayerSet;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ACDC10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for EvolutionMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for EvolutionMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for EvolutionMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B072A0;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ACDFCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0708C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACE3A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B06F40;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACE784(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for ScaleMode;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for ScaleMode;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for ScaleMode;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ACEB48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF4864;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACEF24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEFBC0;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACF300(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for TextureFallback;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for TextureFallback;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for TextureFallback;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ACF6C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for VFXParametricModelType,
           (uint64_t)sub_1B1B0A6A4);
}

uint64_t sub_1B1ACF73C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A600);
}

uint64_t sub_1B1ACF7AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEFA90;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ACFB88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ParticleColorOverPosition.GradientMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ParticleColorOverPosition.GradientMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ParticleColorOverPosition.GradientMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AF6DC8;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ACFF44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for Composition.Operation;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for Composition.Operation;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for Composition.Operation;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD0308(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF3D5C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD06E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for ColorRamp;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for ColorRamp;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for ColorRamp;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD0AA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for ParticleSortMode;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for ParticleSortMode;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for ParticleSortMode;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD0E6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for ParticleAnimationMode;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for ParticleAnimationMode;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for ParticleAnimationMode;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD1230(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ParticlePrimitiveRenderer.Shape;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ParticlePrimitiveRenderer.Shape;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ParticlePrimitiveRenderer.Shape;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1B03D00;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AD15EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0B170);
}

uint64_t sub_1B1AD165C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for simd_float4x4,
           (uint64_t)sub_1B1B0B130);
}

uint64_t sub_1B1AD16D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A55C);
}

uint64_t sub_1B1AD1744(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A4B8);
}

uint64_t sub_1B1AD17B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AED994;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD1B90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AED8B4;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD1F6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0961C);
}

uint64_t sub_1B1AD1FDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09578);
}

uint64_t sub_1B1AD204C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B094BC;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD2428(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD6CCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09418);
}

uint64_t sub_1B1AD2498(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09BCC);
}

uint64_t sub_1B1AD2508(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09B28);
}

uint64_t sub_1B1AD2578(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AEF31C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD2954(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for FluidSolver2DSolverSetupType;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for FluidSolver2DSolverSetupType;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for FluidSolver2DSolverSetupType;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AFB9D4;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AD2D10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for FluidSolver2DSolverBorderType;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for FluidSolver2DSolverBorderType;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for FluidSolver2DSolverBorderType;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AFB8E4;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AD30CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AFB744;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD34A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF4200;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD3884(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF4134;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD3C60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for TextureChannel;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for TextureChannel;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for TextureChannel;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD4024(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF64D8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD4400(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF63F8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD47DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AFAD98;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD4BB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0993C);
}

uint64_t sub_1B1AD4C28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09898);
}

uint64_t sub_1B1AD4C98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09A84);
}

uint64_t sub_1B1AD4D08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B099E0);
}

uint64_t sub_1B1AD4D78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B1AED5E4(0, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF2CC8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD5154(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF9C18;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD5530(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09D14);
}

uint64_t sub_1B1AD55A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09C70);
}

uint64_t sub_1B1AD5610(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for FlockingLocalAxis;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for FlockingLocalAxis;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for FlockingLocalAxis;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD59D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF94FC;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD5DB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF9F68;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD618C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B097F4);
}

uint64_t sub_1B1AD61FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AB67D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(_QWORD))type metadata accessor for VFXCameraToneMappingMode,
           (uint64_t)sub_1B1B09764);
}

uint64_t sub_1B1AD6274(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B096C0);
}

uint64_t sub_1B1AD62E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09F00);
}

uint64_t sub_1B1AD6354(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09E5C);
}

uint64_t sub_1B1AD63C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1AD6CCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B09DB8);
}

uint64_t sub_1B1AD6434(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A414);
}

uint64_t sub_1B1AD64A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A370);
}

uint64_t sub_1B1AD6514(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0A264;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD68F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AF98C8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD6CCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = v34;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v34 = (*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD7090(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADE580(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A1C0);
}

uint64_t sub_1B1AD7100(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B1ADC904(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B1B0A11C);
}

uint64_t sub_1B1AD7170(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B0A060;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD754C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B09FA4;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD7928(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = v34;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v34 = (*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD7CEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = MEMORY[0x1E0DEE0F8];
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = v34;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v34 = (*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1AD80B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE2A20;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD848C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE2300;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD8868(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE0EBC;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD8C44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1B082D8;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD9020(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE1F88;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD93FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE21E0;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1AD97D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for ImageResizingMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for ImageResizingMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for ImageResizingMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE6474;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AD9B94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for Material.Kind;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for Material.Kind;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for Material.Kind;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE9318;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1AD9F50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for Entity;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for Entity;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for Entity;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ADA314(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for BlendMode;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for BlendMode;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for BlendMode;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ADA6D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE8D28;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADAAB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for FilterMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for FilterMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for FilterMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE8C10;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ADAE70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for TextureMipFilterMode;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for TextureMipFilterMode;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for TextureMipFilterMode;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE8B24;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ADB22C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for AddressMode;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for AddressMode;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for AddressMode;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ADB5F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE0D28;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADB9CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE2420;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADBDA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = v34;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v34 = (*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ADC16C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for KillShape.Shape;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for KillShape.Shape;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for KillShape.Shape;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AFF53C;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ADC528(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE027C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADC904(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = MEMORY[0x1E0DEB188];
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = v34;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v34 = (*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ADCCC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE3A30;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADD0A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE3B50;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADD480(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE3C70;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADD85C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE3D90;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADDC38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  ValueMetadata *v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = &type metadata for AABB;
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = &type metadata for AABB;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = &type metadata for AABB;
    else
      v50 = 0;
    if (v50)
      v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ADDFFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = (_QWORD *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v27 = sub_1B2229310();
  v29 = v28;
  sub_1B19F8E54(0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = v31;
  *(_QWORD *)(v22 + 48) = v27;
  *(_BYTE *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_34;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_34:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  *(_BYTE *)(v22 + 207) = v39;
  *(_BYTE *)(v22 + 208) = a12 & 1;
  v40 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  sub_1B19E5A18(v40);
  *(_QWORD *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = a15;
  *(_QWORD *)(v22 + 80) = a16;
  *(_QWORD *)(v22 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a19;
    v41 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = v31;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = v31;
    else
      v47 = 0;
    if (v47)
      v44 = (*(uint64_t (**)(void))(v46 + 8))();
    v42 = a19;
    v41 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  v52 = v23[8];
  v23[8] = sub_1B1AE061C;
  v23[9] = v41;
  sub_1B19E5A18(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B1ADE3D8(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;

  if ((a2 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a2) & 0xF;
  else
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16)
    return 1;
  else
    return sub_1B22299F4() & 1;
}

uint64_t sub_1B1ADE440(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B7BE0, (unint64_t *)&qword_1ED4D09C8);
}

uint64_t sub_1B1ADE45C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B7DA8, (unint64_t *)&qword_1ED4D09E8);
}

uint64_t sub_1B1ADE478(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B7DB0, (unint64_t *)&qword_1ED4D09F0);
}

uint64_t sub_1B1ADE494(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, qword_1ED4B8758, (unint64_t *)&qword_1ED4D0BB8);
}

uint64_t sub_1B1ADE4B0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B8828, (unint64_t *)&qword_1ED4D0BC0);
}

uint64_t sub_1B1ADE4CC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B8860, (unint64_t *)&qword_1ED4D0BD0);
}

uint64_t sub_1B1ADE4E8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B8AB0, (unint64_t *)&qword_1ED4D0BF0);
}

uint64_t sub_1B1ADE504(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, qword_1ED4B8C50, (unint64_t *)&qword_1ED4D0BF8);
}

uint64_t sub_1B1ADE520(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BB2D0, (unint64_t *)&qword_1ED4D0EF8);
}

uint64_t sub_1B1ADE53C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, qword_1ED4B8E18, (unint64_t *)&qword_1ED4D0CA8);
}

uint64_t sub_1B1ADE558(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 32))();
}

uint64_t sub_1B1ADE580(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;

  v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  v28 = (_QWORD *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 136) = 0;
  *(_QWORD *)(v23 + 120) = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 168) = 0;
  *(_QWORD *)(v23 + 176) = 0;
  *(_QWORD *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(_BYTE *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(_BYTE *)(v23 + 196) = 1;
  *(_QWORD *)(v23 + 200) = 0x1000100000000;
  *(_BYTE *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(_QWORD *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  v30 = sub_1B2229310();
  v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  v33 = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v34 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v23 + 32) = a17;
  *(_QWORD *)(v23 + 40) = v34;
  *(_QWORD *)(v23 + 48) = v30;
  *(_BYTE *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  v35 = *(double *)&a3;
  v36 = v35;
  if ((a4 & 1) != 0)
    v36 = 0.0;
  *(float *)(v23 + 184) = v36;
  *(_BYTE *)(v23 + 188) = a4 & 1;
  v37 = *(double *)&a5;
  v38 = v37;
  if ((a6 & 1) != 0)
    v38 = 0.0;
  *(float *)(v23 + 192) = v38;
  *(_BYTE *)(v23 + 196) = a6 & 1;
  v39 = *(double *)&a7;
  v40 = v39;
  if ((a8 & 1) != 0)
    v40 = 0.0;
  *(float *)(v23 + 200) = v40;
  *(_BYTE *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v23 + 205) = v33;
  *(_BYTE *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v41 = 0;
LABEL_14:
  v42 = a22;
  *(_BYTE *)(v24 + 207) = v41;
  *(_BYTE *)(v24 + 208) = a12 & 1;
  v43 = *(_QWORD *)(v24 + 64);
  *v28 = 0;
  *(_QWORD *)(v24 + 72) = 0;
  sub_1B19E5A18(v43);
  *(_QWORD *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v24 + 144) = a14;
  *(_QWORD *)(v24 + 152) = a15;
  *(_QWORD *)(v24 + 80) = a16;
  *(_QWORD *)(v24 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v34;
    else
      v50 = 0;
    if (v50)
      v34 = (*(uint64_t (**)(void))(v49 + 8))();
    v44 = a17;
    v46 = a18;
    v45 = a19;
    v47 = a23;
    v51 = swift_conformsToProtocol2();
    if (v51)
      v52 = v51;
    else
      v52 = 0;
    if (v51)
      v53 = v34;
    else
      v53 = 0;
    if (v53)
    {
      v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v42 = a22;
  }
  v55 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)(v24 + 64) = v47;
  *(_QWORD *)(v24 + 72) = v44;
  sub_1B19E5A18(v55);
  *(_QWORD *)(v24 + 168) = v46;
  *(_QWORD *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B1ADE944(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  ValueMetadata *v44;
  uint64_t v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  v27 = (_QWORD *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(_BYTE *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(v22 + 136) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 168) = 0;
  *(_QWORD *)(v22 + 176) = 0;
  *(_QWORD *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(_BYTE *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(_BYTE *)(v22 + 196) = 1;
  *(_QWORD *)(v22 + 200) = 0x1000100000000;
  *(_BYTE *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(_QWORD *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  v29 = sub_1B2229310();
  v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  v32 = 0;
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v22 + 32) = a17;
  *(_QWORD *)(v22 + 40) = &type metadata for MeshImportOptions.Loader;
  *(_QWORD *)(v22 + 48) = v29;
  *(_BYTE *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  v33 = *(double *)&a3;
  v34 = v33;
  if ((a4 & 1) != 0)
    v34 = 0.0;
  *(float *)(v22 + 184) = v34;
  *(_BYTE *)(v22 + 188) = a4 & 1;
  v35 = *(double *)&a5;
  v36 = v35;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  *(float *)(v22 + 192) = v36;
  *(_BYTE *)(v22 + 196) = a6 & 1;
  v37 = *(double *)&a7;
  v38 = v37;
  if ((a8 & 1) != 0)
    v38 = 0.0;
  *(float *)(v22 + 200) = v38;
  *(_BYTE *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100)
      goto LABEL_35;
  }
  *(_BYTE *)(v22 + 205) = v32;
  *(_BYTE *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100)
      goto LABEL_14;
LABEL_35:
    result = sub_1B222967C();
    __break(1u);
    return result;
  }
  v39 = 0;
LABEL_14:
  v40 = a22;
  *(_BYTE *)(v23 + 207) = v39;
  *(_BYTE *)(v23 + 208) = a12 & 1;
  v41 = *(_QWORD *)(v23 + 64);
  *v27 = 0;
  *(_QWORD *)(v23 + 72) = 0;
  sub_1B19E5A18(v41);
  *(_QWORD *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(_QWORD *)(v23 + 144) = a14;
  *(_QWORD *)(v23 + 152) = a15;
  *(_QWORD *)(v23 + 80) = a16;
  *(_QWORD *)(v23 + 88) = &off_1E63754E8;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(_QWORD *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(_QWORD *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    v42 = a17;
    v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = &type metadata for MeshImportOptions.Loader;
    v45 = swift_conformsToProtocol2();
    if (v45)
      v46 = v45;
    else
      v46 = 0;
    if (v45)
      v47 = &type metadata for MeshImportOptions.Loader;
    else
      v47 = 0;
    if (v47)
      v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    v42 = a17;
    v43 = a18;
    v48 = swift_conformsToProtocol2();
    if (v48)
      v49 = v48;
    else
      v49 = 0;
    if (v48)
      v50 = v44;
    else
      v50 = 0;
    if (v50)
    {
      v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(_QWORD *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v40 = a22;
  }
  v52 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = sub_1B1AE6F28;
  *(_QWORD *)(v23 + 72) = v42;
  sub_1B19E5A18(v52);
  *(_QWORD *)(v23 + 168) = v43;
  *(_QWORD *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B1ADED00(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BB328, (unint64_t *)&qword_1ED4D0F00);
}

uint64_t sub_1B1ADED1C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, qword_1ED4BB330, (unint64_t *)&qword_1ED4D0F08);
}

uint64_t sub_1B1ADED38(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, qword_1ED4B95C8, (unint64_t *)&qword_1ED4D0D78);
}

uint64_t sub_1B1ADED54(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B9608, (unint64_t *)&qword_1ED4D0D88);
}

uint64_t sub_1B1ADED70(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B9810, (unint64_t *)&qword_1ED4D0D90);
}

uint64_t sub_1B1ADED8C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, qword_1ED4B9DD8, (unint64_t *)&qword_1ED4D0DE0);
}

uint64_t sub_1B1ADEDA8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, qword_1ED4B9E18, (unint64_t *)&qword_1ED4D0DF0);
}

uint64_t sub_1B1ADEDC4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B9F78, (unint64_t *)&qword_1ED4D0DF8);
}

uint64_t sub_1B1ADEDE0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B9F80, (unint64_t *)&qword_1ED4D0E00);
}

uint64_t sub_1B1ADEDFC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4B9F88, (unint64_t *)&qword_1ED4D0E08);
}

uint64_t sub_1B1ADEE18(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BA0F8, (unint64_t *)&qword_1ED4D0E60);
}

uint64_t sub_1B1ADEE34(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BA138, (unint64_t *)&qword_1ED4D0E78);
}

uint64_t sub_1B1ADEE50(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BA1E8, (unint64_t *)&qword_1ED4D0E88);
}

uint64_t sub_1B1ADEE6C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BA1F0, (unint64_t *)&qword_1ED4D0E90);
}

uint64_t sub_1B1ADEE88(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BA1F8, (unint64_t *)&qword_1ED4D0E98);
}

uint64_t sub_1B1ADEEA4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1A21E18(a1, a2, a3, a4, &qword_1ED4BA200, (unint64_t *)&qword_1ED4D0EA0);
}

_QWORD *sub_1B1ADEEC0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_1B1ADEECC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B1ADEED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Scheduling, (uint64_t)&off_1E636F010, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1ADEF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADEFAC);
}

uint64_t sub_1B1ADEF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A87DC8, a3);
}

uint64_t sub_1B1ADEF58()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1B1ADEF7C()
{
  uint64_t *v0;

  return sub_1B1AAD014(v0[2], v0[3], v0[4], &qword_1ED4BAF28, MEMORY[0x1E0DEB418]);
}

_QWORD *sub_1B1ADEFAC(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBB9CC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1ADEFF4);
}

uint64_t sub_1B1ADEFE0()
{
  return sub_1B1ADFE94();
}

void sub_1B1ADEFF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58EE8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Scheduling, MEMORY[0x1E0DEB418], (uint64_t)&off_1E636F010);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58EE8);
  }
}

uint64_t sub_1B1ADF058(uint64_t a1)
{
  destroy for ReplicationEvent(a1);
  return a1;
}

uint64_t sub_1B1ADF08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (unint64_t)sub_1B1C6A62C(a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B1AB293C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
      goto LABEL_4;
LABEL_10:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1B22296AC();
  swift_release();
  if (!v6)
    goto LABEL_10;
LABEL_4:
  sub_1B2229328();
  v7 = 0;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x1B5E21018](v7, v5);
    }
    else
    {
      v8 = *(_QWORD *)(v5 + 8 * v7 + 32);
      swift_retain();
    }
    swift_retain_n();
    v9 = sub_1B22286E0();
    swift_release();
    swift_release();
    if ((v9 & 1) != 0)
      break;
    swift_release();
    if (v6 == ++v7)
      goto LABEL_10;
  }
  swift_release();
  return v8;
}

uint64_t sub_1B1ADF1F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  swift_bridgeObjectRetain();
  v3 = (unint64_t)sub_1B1DC8D00(a2);
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
      goto LABEL_4;
LABEL_10:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  v4 = sub_1B22296AC();
  swift_release();
  if (!v4)
    goto LABEL_10;
LABEL_4:
  sub_1B2229328();
  v5 = 0;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x1B5E21018](v5, v3);
    }
    else
    {
      v6 = *(_QWORD *)(v3 + 8 * v5 + 32);
      swift_retain();
    }
    swift_retain_n();
    v7 = sub_1B22286E0();
    swift_release();
    swift_release();
    if ((v7 & 1) != 0)
      break;
    swift_release();
    if (v4 == ++v5)
      goto LABEL_10;
  }
  swift_release();
  return v6;
}

uint64_t sub_1B1ADF340(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];
  _BYTE v7[24];
  uint64_t v8;

  v3 = (uint64_t)sub_1B19FA070(a1, a1[3]);
  sub_1B222A12C();
  if (!v1)
  {
    v3 = sub_1B19FC264((uint64_t)v7, v8);
    v4 = sub_1B2229A90();
    if (v4 == 1)
    {
      sub_1B19FC264((uint64_t)v7, v8);
      sub_1B1A08878();
      sub_1B2229AA8();
      v3 = v6[0];
      goto LABEL_12;
    }
    if (!v4)
    {
      sub_1B19FC264((uint64_t)v7, v8);
      v3 = sub_1B2229A60();
LABEL_12:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
      return v3;
    }
    sub_1B19FA198((uint64_t)v7, (uint64_t)v6);
    sub_1B22294CC();
    swift_allocError();
    sub_1B222949C();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1B1ADF508@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 4) & 1) == 0;
  return result;
}

void sub_1B1ADF51C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BAF00)
  {
    sub_1B1B0BFC8(255, (unint64_t *)&qword_1ED4BA350);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BAF00);
  }
}

uint64_t sub_1B1ADF584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for Seed, (uint64_t)&off_1E63B9E88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A812A8, a2);
}

uint64_t sub_1B1ADF5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB113C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADF738);
}

uint64_t sub_1B1ADF5D4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for Seed, (uint64_t)&off_1E63B9E88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1ADF604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADF658);
}

uint64_t sub_1B1ADF624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9724, a3);
}

_QWORD *sub_1B1ADF658(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC4820, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1ADF6A0);
}

uint64_t sub_1B1ADF68C()
{
  return sub_1B1ADFFBC();
}

void sub_1B1ADF6A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58EF8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Seed, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E63B9E88);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58EF8);
  }
}

uint64_t sub_1B1ADF704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F00, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9830, a3);
}

_QWORD *sub_1B1ADF738(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A76DCC(a1, **(_DWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)sub_1B1ADF784, (uint64_t)sub_1B1EC4820, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1ADF7B8);
}

uint64_t sub_1B1ADF784()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1ADF7B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58F08)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Seed, MEMORY[0x1E0DEE0F8], (uint64_t)&off_1E63B9E88);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58F08);
  }
}

uint64_t sub_1B1ADF81C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1ADF84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADFF90);
}

uint64_t sub_1B1ADF86C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 76);
  return result;
}

_BYTE *sub_1B1ADF878(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 76) = *result == 1;
  return result;
}

uint64_t sub_1B1ADF88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1ADF8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADFE68);
}

uint64_t sub_1B1ADF8DC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83FD0, a2);
}

uint64_t sub_1B1ADF90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADFDA8);
}

uint64_t sub_1B1ADF92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1ADF95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADFC88);
}

uint64_t sub_1B1ADF97C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB23DC(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, a2);
}

uint64_t sub_1B1ADF9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1870(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1ADFB70);
}

void sub_1B1ADF9C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1EEF58F18)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1EEF58F18);
  }
}

uint64_t sub_1B1ADFA30@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 74) & 0x40) != 0;
  return result;
}

_BYTE *sub_1B1ADFA40(_BYTE *result, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)(a2 + 74);
  if (*result == 1)
  {
    if ((v2 & 0x40) != 0)
      return result;
    v3 = v2 | 0x40;
  }
  else
  {
    if ((v2 & 0x40) == 0)
      return result;
    v3 = v2 & 0xFFBF;
  }
  *(_WORD *)(a2 + 74) = v3;
  return result;
}

uint64_t sub_1B1ADFA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1ADFA94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92030, a3);
}

void sub_1B1ADFA94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF58F20)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF58F20);
  }
}

void sub_1B1ADFB04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58F28)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58F28);
  }
}

_QWORD *sub_1B1ADFB70(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A77D94(a1, **(_QWORD **)(v1 + 16), *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 8), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1B1ADFB94()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1ADFBD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF58F30)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for EmitterDescription, v2, (uint64_t)&off_1E6391AC0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF58F30);
  }
}

uint64_t sub_1B1ADFC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92124, a3);
}

_QWORD *sub_1B1ADFC88(_QWORD *a1)
{
  return sub_1B1B08044(a1, (uint64_t)sub_1B1ADFCB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72B90, (uint64_t (*)(_QWORD))sub_1B1ADFCE8);
}

uint64_t sub_1B1ADFCB4()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1ADFCE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58F38)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for EmitterDescription, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6391AC0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58F38);
  }
}

uint64_t sub_1B1ADFD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F40, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92230, a3);
}

double sub_1B1ADFD7C()
{
  uint64_t *v0;

  return sub_1B1AAD1CC(v0[2], v0[3], v0[4], &qword_1EEF58F48, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation);
}

_QWORD *sub_1B1ADFDA8(_QWORD *a1)
{
  return sub_1B1AE8C98(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A72B90, (uint64_t (*)(_QWORD))sub_1B1ADFDD4);
}

void sub_1B1ADFDD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58F50)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation, (uint64_t)&off_1E6391AC0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58F50);
  }
}

uint64_t sub_1B1ADFE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9233C, a3);
}

_QWORD *sub_1B1ADFE68(_QWORD *a1)
{
  return sub_1B1B07F58(a1, (uint64_t)sub_1B1ADFE94, (void (*)(unint64_t, uint64_t, double))sub_1B1A72B90, (uint64_t (*)(_QWORD))sub_1B1ADFEC8);
}

uint64_t sub_1B1ADFE94()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1ADFEC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58F68)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for EmitterDescription, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E6391AC0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58F68);
  }
}

uint64_t sub_1B1ADFF2C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1ADFF50()
{
  uint64_t *v0;

  return sub_1B1A211B8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1B1ADFF60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92448, a3);
}

_QWORD *sub_1B1ADFF90(_QWORD *a1)
{
  return sub_1B1B01E78(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A72B90, (uint64_t (*)(_QWORD))sub_1B1ADFFF0);
}

uint64_t sub_1B1ADFFBC()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1ADFFF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58F70)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for EmitterDescription, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6391AC0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58F70);
  }
}

__n128 sub_1B1AE0054@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

__n128 sub_1B1AE0060(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1B1AE006C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB28AC(a1, v2, (uint64_t)&type metadata for LocalAABB, a2);
}

uint64_t sub_1B1AE0094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB265C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE04AC);
}

void sub_1B1AE00B4(__n128 *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B1AE01DC(a1, (double (*)(__n128, __n128))sub_1B1AE0244, a2);
}

void sub_1B1AE00C0(float32x4_t *a1, float32x4_t *a2)
{
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;

  v6 = *a1;
  *(double *)v3.i64 = sub_1B1AE0274(*a2, a2[1]);
  *(double *)v4.i64 = sub_1B1AE024C(v6, v3);
  *a2 = v4;
  a2[1] = v5;
}

uint64_t sub_1B1AE0104@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for LocalAABB, (uint64_t)&off_1E63C4128, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE013C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE0390);
}

void sub_1B1AE015C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B8160)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B8160);
  }
}

void sub_1B1AE01D0(__n128 *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B1AE01DC(a1, (double (*)(__n128, __n128))sub_1B1AE0274, a2);
}

void sub_1B1AE01DC(__n128 *a1@<X0>, double (*a2)(__n128, __n128)@<X3>, _OWORD *a3@<X8>)
{
  __int128 v4;

  *(double *)&v4 = a2(*a1, a1[1]);
  *a3 = v4;
}

void sub_1B1AE0204(float32x4_t *a1, float32x4_t *a2)
{
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;

  v6 = *a1;
  *(double *)v3.i64 = sub_1B1AE0244(*a2, a2[1]);
  *(double *)v4.i64 = sub_1B1AE024C(v3, v6);
  *a2 = v4;
  a2[1] = v5;
}

double sub_1B1AE0244(float32x4_t a1, float32x4_t a2)
{
  double result;

  *(_QWORD *)&result = vsubq_f32(a1, a2).u64[0];
  return result;
}

double sub_1B1AE024C(float32x4_t a1, float32x4_t a2)
{
  float32x4_t v2;

  a1.i32[3] = 1.0;
  a2.i32[3] = 1.0;
  v2.i64[0] = 0x3F0000003F000000;
  v2.i64[1] = 0x3F0000003F000000;
  a1.i64[0] = vmulq_f32(vaddq_f32(a1, a2), v2).u64[0];
  return *(double *)a1.i64;
}

double sub_1B1AE0274(float32x4_t a1, float32x4_t a2)
{
  double result;

  *(_QWORD *)&result = vaddq_f32(a1, a2).u64[0];
  return result;
}

uint64_t sub_1B1AE027C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAC214, a3);
}

void sub_1B1AE02A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF58F80)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF58F80);
  }
}

void sub_1B1AE031C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5CB50)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5CB50);
  }
}

uint64_t sub_1B1AE0390(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7CBAC);
}

uint64_t sub_1B1AE03AC()
{
  return sub_1B1AE0BB4();
}

void sub_1B1AE03C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF58F88)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for LocalAABB, v2, (uint64_t)&off_1E63C4128);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF58F88);
  }
}

uint64_t sub_1B1AE0444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F90, (uint64_t)&type metadata for AABB, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAC308, a3);
}

double sub_1B1AE0474()
{
  uint64_t *v0;

  return sub_1B1AAE6F0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AE0490(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1B1AAF280(a1, v1[2], v1[3], v1[4]);
}

_QWORD *sub_1B1AE04AC(_QWORD *a1)
{
  return sub_1B1AE076C(a1, (uint64_t)sub_1B1AE04E0, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EBB72C, (uint64_t (*)(_QWORD))sub_1B1AE04F4, (uint64_t)&unk_1E63DC090);
}

uint64_t sub_1B1AE04E0()
{
  return sub_1B1AE079C();
}

void sub_1B1AE04F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58FA0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for LocalAABB, (uint64_t)&type metadata for AABB, (uint64_t)&off_1E63C4128);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58FA0);
  }
}

uint64_t sub_1B1AE0558()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1AE057C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB28AC(a1, v2, (uint64_t)&type metadata for WorldAABB, a2);
}

uint64_t sub_1B1AE05A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB265C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE0738);
}

uint64_t sub_1B1AE05C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1E63C5FC8, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE05FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE0644);
}

uint64_t sub_1B1AE061C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AACBFC, a3);
}

uint64_t sub_1B1AE0644(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7D318);
}

uint64_t sub_1B1AE0660(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))
{
  _QWORD *v2;

  return a2(a1, v2[3], v2[4], v2[5], *(__n128 *)v2[2]);
}

void sub_1B1AE0684(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF58FB0)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for WorldAABB, v2, (uint64_t)&off_1E63C5FC8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF58FB0);
  }
}

uint64_t sub_1B1AE0708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F90, (uint64_t)&type metadata for AABB, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AACCF0, a3);
}

_QWORD *sub_1B1AE0738(_QWORD *a1)
{
  return sub_1B1AE076C(a1, (uint64_t)sub_1B1AE04E0, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_1B1EC5384, (uint64_t (*)(_QWORD))sub_1B1AE07D8, (uint64_t)&unk_1E63DC180);
}

_QWORD *sub_1B1AE076C(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t), uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;

  return sub_1B1A7D494(a1, *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(__n128 *)*(_QWORD *)(v5 + 16), *(__n128 *)(*(_QWORD *)(v5 + 16) + 16), *(_QWORD *)(v5 + 40), a2, a3, a4, a5);
}

uint64_t sub_1B1AE079C()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1AE07D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF58FB8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for WorldAABB, (uint64_t)&type metadata for AABB, (uint64_t)&off_1E63C5FC8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF58FB8);
  }
}

uint64_t sub_1B1AE083C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB16D8(a1, v2, (uint64_t)&type metadata for WorldTransform, a2);
}

uint64_t sub_1B1AE0864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1758(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE08F4);
}

uint64_t sub_1B1AE088C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF58FC0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8CEFC, a3);
}

double sub_1B1AE08BC()
{
  uint64_t *v0;

  return sub_1B1AAE27C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AE08D8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1B1AAEF38(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B1AE08F4(uint64_t a1)
{
  return sub_1B1AE0B48(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128, __n128))sub_1B1A770C4);
}

uint64_t sub_1B1AE0910()
{
  return sub_1B1AE4234();
}

void sub_1B1AE0924(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = type metadata accessor for ComponentValueWriter(a1, a4, v9, a5);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1B1AE0988()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1AE09AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1791524(0, (unint64_t *)&qword_1ED4B79B0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B1AE0A08(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;

  *(double *)&v3 = nullsub_16(a1);
  *a2 = v3;
}

void sub_1B1AE0A30(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  sub_1B1AE0C74();
  *(_OWORD *)(a2 + 48) = v3;
}

uint64_t sub_1B1AE0A5C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for LastFrameWorldTransform, (uint64_t)&off_1E63AA960, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE0A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE0B98);
}

uint64_t sub_1B1AE0AB4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB16D8(a1, v2, (uint64_t)&type metadata for LastFrameWorldTransform, a2);
}

uint64_t sub_1B1AE0ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1758(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE0B2C);
}

uint64_t sub_1B1AE0AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF58FC0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9F4D4, a3);
}

uint64_t sub_1B1AE0B2C(uint64_t a1)
{
  return sub_1B1AE0B48(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128, __n128))sub_1B1A7A0E8);
}

uint64_t sub_1B1AE0B48(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128, __n128))
{
  _QWORD *v2;

  return a2(a1, v2[3], v2[4], v2[5], *(__n128 *)v2[2], *(__n128 *)(v2[2] + 16), *(__n128 *)(v2[2] + 32), *(__n128 *)(v2[2] + 48));
}

uint64_t sub_1B1AE0B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9F5E0, a3);
}

uint64_t sub_1B1AE0B98(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7A2A8);
}

uint64_t sub_1B1AE0BB4()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1AE0BF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF58FD8)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for LastFrameWorldTransform, v2, (uint64_t)&off_1E63AA960);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF58FD8);
  }
}

void sub_1B1AE0C7C(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;

  *(double *)&v3 = nullsub_16(a1);
  *a2 = v3;
}

void sub_1B1AE0CA4(uint64_t a1, _OWORD *a2)
{
  __int128 v3;

  sub_1B1AE0C74();
  *a2 = v3;
}

uint64_t sub_1B1AE0CD0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE0D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE0D50);
}

uint64_t sub_1B1AE0D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AABD08, a3);
}

_QWORD *sub_1B1AE0D50(_QWORD *a1)
{
  return sub_1B1AE0D84(a1, (uint64_t)sub_1B1AE03AC, (void (*)(unint64_t, uint64_t, double))sub_1B1A72558, (uint64_t (*)(_QWORD))sub_1B1AE0DB4);
}

_QWORD *sub_1B1AE0D84(_QWORD *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  return sub_1B1A7C8A4(a1, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(__n128 *)*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40), a2, a3, a4);
}

void sub_1B1AE0DB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF58FE0)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Position, v2, (uint64_t)&off_1E63C2398);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF58FE0);
  }
}

void sub_1B1AE0E38(uint64_t a1, _OWORD *a2)
{
  __int128 v3;

  sub_1B1AE0C74();
  *a2 = v3;
}

uint64_t sub_1B1AE0E64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Normal, (uint64_t)&off_1E63BB738, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE0E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE0EE4);
}

uint64_t sub_1B1AE0EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9E48, a3);
}

uint64_t sub_1B1AE0EE4(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7C0B0);
}

void sub_1B1AE0F00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF58FE8)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Normal, v2, (uint64_t)&off_1E63BB738);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF58FE8);
  }
}

uint64_t sub_1B1AE0F84()
{
  return swift_deallocObject();
}

uint64_t sub_1B1AE0F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB11E8(a1, v2, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1E6371540, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81660, a2);
}

uint64_t sub_1B1AE0FC4(uint64_t result)
{
  return sub_1B1AB0F30(result);
}

void sub_1B1AE0FCC(float32x4_t *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;

  *(double *)&v3 = sub_1B1AE1490(*a1);
  *a2 = v3;
}

void sub_1B1AE0FF4(float32x4_t *a1, _OWORD *a2)
{
  __int128 v3;

  *(double *)&v3 = sub_1B1AE1400(*a1);
  *a2 = v3;
}

uint64_t sub_1B1AE101C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1E6371540, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE1054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE1348);
}

__n128 sub_1B1AE1074@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

__n128 sub_1B1AE1080(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B1AE108C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1E6371540, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE10C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE1268);
}

void sub_1B1AE10E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B8170)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B8170);
  }
}

uint64_t sub_1B1AE1158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A882EC, a3);
}

void sub_1B1AE1180(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF58FF0)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF58FF0);
  }
}

void sub_1B1AE11F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BAF90)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BAF90);
  }
}

_QWORD *sub_1B1AE1268(_QWORD *a1)
{
  return sub_1B1AE0D84(a1, (uint64_t)sub_1B1AE03AC, (void (*)(unint64_t, uint64_t, double))sub_1B1A7246C, (uint64_t (*)(_QWORD))sub_1B1AE129C);
}

void sub_1B1AE129C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF58FF8)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Orientation, v2, (uint64_t)&off_1E6371540);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF58FF8);
  }
}

uint64_t sub_1B1AE1320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A883E0, a3);
}

_QWORD *sub_1B1AE1348(_QWORD *a1)
{
  return sub_1B1AE0D84(a1, (uint64_t)sub_1B1AE03AC, (void (*)(unint64_t, uint64_t, double))sub_1B1A7246C, (uint64_t (*)(_QWORD))sub_1B1AE137C);
}

void sub_1B1AE137C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59000)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Orientation, v2, (uint64_t)&off_1E6371540);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59000);
  }
}

double sub_1B1AE1400(float32x4_t a1)
{
  float32x4_t v1;
  simd_float4 v2;
  double v5;
  simd_float4 x;
  simd_float4 v16;

  v1.i64[0] = 0x3F0000003F000000;
  v1.i64[1] = 0x3F0000003F000000;
  v2 = (simd_float4)vmulq_f32(a1, v1);
  v2.i32[3] = 0;
  x = v2;
  v16 = _simd_cos_f4(v2);
  _Q0 = _simd_sin_f4(x);
  _Q7 = v16;
  *(float *)&v5 = vmlas_n_f32(-(float)(v16.f32[0] * vmuls_lane_f32(_Q0.f32[1], (float32x4_t)_Q0, 2)), vmuls_lane_f32(v16.f32[1], (float32x4_t)v16, 2), _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v16.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  HIDWORD(v5) = _S5;
  return v5;
}

double sub_1B1AE1490(float32x4_t a1)
{
  int8x16_t v2;
  float v3;
  double v4;
  float v5;
  float v7;
  float v13;
  double v14;
  float v15;
  int *v16;
  float v17;
  float v18;
  uint64_t v19;
  float v21;
  float v22;
  float v23;
  float v24;

  _Q2 = a1;
  v2 = (int8x16_t)vmulq_f32(a1, a1);
  v3 = vaddv_f32(vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL)));
  v4 = 0.0;
  if (v3 != 0.0)
  {
    v5 = _Q2.f32[3];
    _S9 = _Q2.f32[1];
    v7 = _Q2.f32[2];
    __asm { FMLA            S1, S9, V2.S[3] }
    v13 = _S1 / v3;
    v14 = (float)(_S1 / v3);
    if (v14 <= 0.4999)
    {
      if (v14 >= -0.4999)
      {
        v18 = *(float *)&v2.i32[1];
        v19 = v2.i64[1];
        v21 = _Q2.f32[0];
        v22 = *(float *)v2.i32;
        v24 = atan2f((float)((float)(_Q2.f32[0] * _Q2.f32[3]) + (float)(_Q2.f32[1] * _Q2.f32[2]))+ (float)((float)(_Q2.f32[0] * _Q2.f32[3]) + (float)(_Q2.f32[1] * _Q2.f32[2])), *(float *)&v2.i32[3]+ (float)(*(float *)&v2.i32[2] + (float)((float)-*(float *)v2.i32 - *(float *)&v2.i32[1])));
        v23 = asinf(v13 + v13);
        atan2f((float)((float)(v7 * v5) + (float)(v21 * _S9)) + (float)((float)(v7 * v5) + (float)(v21 * _S9)), *((float *)&v19 + 1) + (float)((float)(v22 - v18) - *(float *)&v19));
        return COERCE_DOUBLE(__PAIR64__(LODWORD(v23), LODWORD(v24)));
      }
      v17 = atan2f(_Q2.f32[0], _Q2.f32[3]);
      *(float *)&v4 = v17 + v17;
      v16 = &dword_1B2245B80;
    }
    else
    {
      v15 = atan2f(_Q2.f32[0], _Q2.f32[3]);
      *(float *)&v4 = v15 + v15;
      v16 = &dword_1B2245B84;
    }
    HIDWORD(v4) = *v16;
  }
  return v4;
}

uint64_t sub_1B1AE15DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59008, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A884D4, a3);
}

double sub_1B1AE160C()
{
  uint64_t *v0;

  return sub_1B1AAE164(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AE1628(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A750E8);
}

uint64_t sub_1B1AE1644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Parent, (uint64_t)&off_1E63BB8E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AE1674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE16C4);
}

uint64_t sub_1B1AE1694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9F3C, a3);
}

_QWORD *sub_1B1AE16C4(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBAED8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AE170C);
}

uint64_t sub_1B1AE16F8()
{
  return sub_1B1AE20D0();
}

void sub_1B1AE170C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59020)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Parent, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E63BB8E8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59020);
  }
}

uint64_t sub_1B1AE1770@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2708(a1, v2, (uint64_t)&type metadata for Children, (uint64_t)&off_1E63BED58, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, a2);
}

uint64_t sub_1B1AE17A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE1934);
}

void sub_1B1AE17C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1EEF59028)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1EEF59028);
  }
}

uint64_t sub_1B1AE1834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE185C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAAE90, a3);
}

void sub_1B1AE185C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF59030)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF59030);
  }
}

void sub_1B1AE18C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59038)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59038);
  }
}

uint64_t sub_1B1AE1934(uint64_t a1)
{
  return sub_1B1B069D4(a1, (uint64_t)sub_1B1AE1968, (uint64_t)sub_1B1EB998C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AE197C);
}

uint64_t sub_1B1AE1968()
{
  return sub_1B1AE725C();
}

void sub_1B1AE197C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59040)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Children, v2, (uint64_t)&off_1E63BED58);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59040);
  }
}

uint64_t sub_1B1AE19F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for LookAt, (uint64_t)&off_1E63BB4E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AE1A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE1A78);
}

uint64_t sub_1B1AE1A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9D3C, a3);
}

_QWORD *sub_1B1AE1A78(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC4A90, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AE1AAC);
}

void sub_1B1AE1AAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59048)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for LookAt, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E63BB4E8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59048);
  }
}

uint64_t sub_1B1AE1B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for SmoothMotion, (uint64_t)&off_1E63779C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE1B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE1B90);
}

uint64_t sub_1B1AE1B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A89D64, a3);
}

_QWORD *sub_1B1AE1B90(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBBEEC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE1BD8);
}

uint64_t sub_1B1AE1BC4()
{
  return sub_1B1ADFCB4();
}

void sub_1B1AE1BD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59050)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for SmoothMotion, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63779C8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59050);
  }
}

uint64_t sub_1B1AE1C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for RenderingOrder, (uint64_t)&off_1E6380960, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82E70, a2);
}

uint64_t sub_1B1AE1C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB113C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE1CE8);
}

uint64_t sub_1B1AE1C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59060, MEMORY[0x1E0DEDBC8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8CAE4, a3);
}

double sub_1B1AE1CBC()
{
  uint64_t *v0;

  return sub_1B1AAD0A4(v0[2], v0[3], v0[4], (unint64_t *)&unk_1ED4BAF70, MEMORY[0x1E0DEDBC8]);
}

_QWORD *sub_1B1AE1CE8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A76DCC(a1, **(_DWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)sub_1B1AE1D34, (uint64_t)sub_1B1EBCF1C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE1D48);
}

uint64_t sub_1B1AE1D34()
{
  return sub_1B1ADF784();
}

void sub_1B1AE1D48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59068)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for RenderingOrder, MEMORY[0x1E0DEDBC8], (uint64_t)&off_1E6380960);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59068);
  }
}

uint64_t sub_1B1AE1DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for Scale1, (uint64_t)&off_1E63BC288, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE1DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE1E2C);
}

uint64_t sub_1B1AE1DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAA448, a3);
}

_QWORD *sub_1B1AE1E2C(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC4C50, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE1E60);
}

void sub_1B1AE1E60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59070)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Scale1, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63BC288);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59070);
  }
}

uint64_t sub_1B1AE1EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Scale2, (uint64_t)&off_1E63BC3F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83284, a2);
}

uint64_t sub_1B1AE1EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE209C);
}

void sub_1B1AE1F14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B8150)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B8150);
  }
}

uint64_t sub_1B1AE1F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1FB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAA554, a3);
}

void sub_1B1AE1FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF59078)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF59078);
  }
}

void sub_1B1AE2028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5CB60)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5CB60);
  }
}

_QWORD *sub_1B1AE209C(_QWORD *a1)
{
  return sub_1B1AE45C4(a1, (uint64_t)sub_1B1AE20D0, (uint64_t)sub_1B1EC4CC0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AE2104);
}

uint64_t sub_1B1AE20D0()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1AE2104(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59080)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Scale2, v2, (uint64_t)&off_1E63BC3F0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59080);
  }
}

uint64_t sub_1B1AE2188@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Scale3, (uint64_t)&off_1E63BC558, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE21C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2208);
}

uint64_t sub_1B1AE21E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAA648, a3);
}

uint64_t sub_1B1AE2208(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7C524);
}

void sub_1B1AE2224(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59088)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Scale3, v2, (uint64_t)&off_1E63BC558);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59088);
  }
}

uint64_t sub_1B1AE22A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Scale, (uint64_t)&off_1E63BA9B8, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE22E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2328);
}

uint64_t sub_1B1AE2300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9A30, a3);
}

uint64_t sub_1B1AE2328(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7BF34);
}

void sub_1B1AE2344(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59090)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Scale, v2, (uint64_t)&off_1E63BA9B8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59090);
  }
}

uint64_t sub_1B1AE23C8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE2400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2448);
}

uint64_t sub_1B1AE2420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AABDFC, a3);
}

uint64_t sub_1B1AE2448(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7CA30);
}

void sub_1B1AE2464(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59098)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Velocity, v2, (uint64_t)&off_1E63C30D0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59098);
  }
}

uint64_t sub_1B1AE24E8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for AngularVelocity, (uint64_t)&off_1E63831C0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE2520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2568);
}

uint64_t sub_1B1AE2540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8D008, a3);
}

uint64_t sub_1B1AE2568(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A77284);
}

void sub_1B1AE2584(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF590A0)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for AngularVelocity, v2, (uint64_t)&off_1E63831C0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF590A0);
  }
}

unsigned __int8 *sub_1B1AE2608@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B1AE2614(uint64_t *a1)
{
  return sub_1B1A25528(*a1);
}

uint64_t sub_1B1AE2638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for SpaceOverride, (uint64_t)&off_1E637D298, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE2668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE27F8);
}

uint64_t sub_1B1AE2688@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for SpaceOverride, (uint64_t)&off_1E637D298, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82744, a2);
}

uint64_t sub_1B1AE26B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2738);
}

uint64_t sub_1B1AE26D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590B0, (uint64_t)&type metadata for EntitySpace, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8B730, a3);
}

double sub_1B1AE2708()
{
  uint64_t *v0;

  return sub_1B1AAD6E4(v0[2], v0[3], v0[4], &qword_1EEF590B8, (uint64_t)&type metadata for EntitySpace);
}

_QWORD *sub_1B1AE2738(_QWORD *a1)
{
  return sub_1B1B07BDC(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A72794, (uint64_t (*)(_QWORD))sub_1B1AE2764);
}

void sub_1B1AE2764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF590C0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for SpaceOverride, (uint64_t)&type metadata for EntitySpace, (uint64_t)&off_1E637D298);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF590C0);
  }
}

uint64_t sub_1B1AE27C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8B83C, a3);
}

_QWORD *sub_1B1AE27F8(_QWORD *a1)
{
  return sub_1B1B07F58(a1, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72794, (uint64_t (*)(_QWORD))sub_1B1AE2824);
}

void sub_1B1AE2824()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF590C8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for SpaceOverride, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E637D298);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF590C8);
  }
}

uint64_t sub_1B1AE2888@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for Name, (uint64_t)&off_1E63B9AE8, a2);
}

uint64_t sub_1B1AE28B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2900);
}

uint64_t sub_1B1AE28D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9618, a3);
}

uint64_t sub_1B1AE2900()
{
  uint64_t v0;

  return sub_1B1A7EDE4(**(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 8), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t)sub_1B1AE2950, (void (*)(unint64_t, uint64_t, double))sub_1B1A72294, (uint64_t (*)(_QWORD))sub_1B1AE2964);
}

uint64_t sub_1B1AE2950()
{
  return sub_1B1AE7504();
}

void sub_1B1AE2964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF590D8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Name, MEMORY[0x1E0DEA968], (uint64_t)&off_1E63B9AE8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF590D8);
  }
}

uint64_t sub_1B1AE29C8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE2A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2A48);
}

uint64_t sub_1B1AE2A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA993C, a3);
}

_QWORD *sub_1B1AE2A48(_QWORD *a1)
{
  return sub_1B1AE0D84(a1, (uint64_t)sub_1B1AE03AC, (void (*)(unint64_t, uint64_t, double))sub_1B1A72380, (uint64_t (*)(_QWORD))sub_1B1AE2A7C);
}

void sub_1B1AE2A7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF590E0)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Color, v2, (uint64_t)&off_1E63BA190);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF590E0);
  }
}

uint64_t sub_1B1AE2B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleRoughness, (uint64_t)&off_1E638EAD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE2B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2B80);
}

uint64_t sub_1B1AE2B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90988, a3);
}

_QWORD *sub_1B1AE2B80(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBE630, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE2BB4);
}

void sub_1B1AE2BB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF590E8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleRoughness, MEMORY[0x1E0DEB188], (uint64_t)&off_1E638EAD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF590E8);
  }
}

uint64_t sub_1B1AE2C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleMetalness, (uint64_t)&off_1E638E578, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE2C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2C98);
}

uint64_t sub_1B1AE2C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90788, a3);
}

_QWORD *sub_1B1AE2C98(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBE4D4, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE2CCC);
}

void sub_1B1AE2CCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF590F0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleMetalness, MEMORY[0x1E0DEB188], (uint64_t)&off_1E638E578);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF590F0);
  }
}

uint64_t sub_1B1AE2D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleEmission, (uint64_t)&off_1E6388900, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE2D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2DB0);
}

uint64_t sub_1B1AE2D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8EAB0, a3);
}

_QWORD *sub_1B1AE2DB0(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBDA88, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE2DE4);
}

void sub_1B1AE2DE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF590F8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleEmission, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6388900);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF590F8);
  }
}

uint64_t sub_1B1AE2E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleAngle, (uint64_t)&off_1E637BD88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE2E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2EC8);
}

uint64_t sub_1B1AE2E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8ACE8, a3);
}

_QWORD *sub_1B1AE2EC8(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBC4E0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE2EFC);
}

void sub_1B1AE2EFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59100)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleAngle, MEMORY[0x1E0DEB188], (uint64_t)&off_1E637BD88);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59100);
  }
}

uint64_t sub_1B1AE2F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleAngleVelocity, (uint64_t)&off_1E63A3E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE2F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE2FE0);
}

uint64_t sub_1B1AE2FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9B170, a3);
}

_QWORD *sub_1B1AE2FE0(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC0F88, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE3014);
}

void sub_1B1AE3014()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59108)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleAngleVelocity, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63A3E30);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59108);
  }
}

uint64_t sub_1B1AE3078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleTextureFrame, (uint64_t)&off_1E639E080, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE30A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE30F8);
}

uint64_t sub_1B1AE30C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A99BBC, a3);
}

_QWORD *sub_1B1AE30F8(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC0AE8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE312C);
}

void sub_1B1AE312C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59110)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleTextureFrame, MEMORY[0x1E0DEB188], (uint64_t)&off_1E639E080);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59110);
  }
}

uint64_t sub_1B1AE3190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleID, (uint64_t)&off_1E636E760, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A812A8, a2);
}

uint64_t sub_1B1AE31C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB113C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE323C);
}

uint64_t sub_1B1AE31E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F00, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A87BB0, a3);
}

double sub_1B1AE3210()
{
  uint64_t *v0;

  return sub_1B1AAD0A4(v0[2], v0[3], v0[4], (unint64_t *)&unk_1EEF5AB20, MEMORY[0x1E0DEE0F8]);
}

_QWORD *sub_1B1AE323C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A76DCC(a1, **(_DWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)sub_1B1AE1D34, (uint64_t)sub_1B1EBB95C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE3288);
}

void sub_1B1AE3288()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59118)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleID, MEMORY[0x1E0DEE0F8], (uint64_t)&off_1E636E760);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59118);
  }
}

float sub_1B1AE32EC@<S0>(float *a1@<X0>, float *a2@<X8>)
{
  float result;

  result = 1.0 / *a1;
  *a2 = result;
  return result;
}

float *sub_1B1AE3300(float *result, float *a2)
{
  float v2;

  v2 = 1000.0;
  if (*result > 0.001)
    v2 = 1.0 / *result;
  *a2 = v2;
  return result;
}

uint64_t sub_1B1AE3330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for Mass, (uint64_t)&off_1E63B9850, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE3360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE33B0);
}

uint64_t sub_1B1AE3380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA950C, a3);
}

_QWORD *sub_1B1AE33B0(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC47B0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE33E4);
}

void sub_1B1AE33E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59120)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Mass, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63B9850);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59120);
  }
}

uint64_t sub_1B1AE3448@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for LinearFactor, (uint64_t)&off_1E6375C90, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE3480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE34C8);
}

uint64_t sub_1B1AE34A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A89A58, a3);
}

uint64_t sub_1B1AE34C8(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A75E68);
}

void sub_1B1AE34E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59128)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for LinearFactor, v2, (uint64_t)&off_1E6375C90);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59128);
  }
}

uint64_t sub_1B1AE3568@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for AngularFactor, (uint64_t)&off_1E6378E90, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE35A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE35E8);
}

uint64_t sub_1B1AE35C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A2A0, a3);
}

uint64_t sub_1B1AE35E8(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A76160);
}

void sub_1B1AE3604(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59130)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for AngularFactor, v2, (uint64_t)&off_1E6378E90);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59130);
  }
}

uint64_t sub_1B1AE3688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1E63717C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE36B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3708);
}

uint64_t sub_1B1AE36D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A885E0, a3);
}

_QWORD *sub_1B1AE3708(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBBB3C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE373C);
}

void sub_1B1AE373C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59138)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleAge, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63717C8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59138);
  }
}

uint64_t sub_1B1AE37A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1E6389120, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE37D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3820);
}

uint64_t sub_1B1AE37F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8EDBC, a3);
}

_QWORD *sub_1B1AE3820(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBDBD8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE3854);
}

void sub_1B1AE3854()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59140)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleLifetime, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6389120);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59140);
  }
}

uint64_t sub_1B1AE38B8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for ParticleTarget, (uint64_t)&off_1E63802C8, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE38F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3938);
}

uint64_t sub_1B1AE3910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C6CC, a3);
}

uint64_t sub_1B1AE3938(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A76A88);
}

void sub_1B1AE3954(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59148)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleTarget, v2, (uint64_t)&off_1E63802C8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59148);
  }
}

uint64_t sub_1B1AE39D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for UserData1, (uint64_t)&off_1E63C5800, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE3A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3A58);
}

uint64_t sub_1B1AE3A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAC82C, a3);
}

uint64_t sub_1B1AE3A58(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7CD28);
}

void sub_1B1AE3A74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59150)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for UserData1, v2, (uint64_t)&off_1E63C5800);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59150);
  }
}

uint64_t sub_1B1AE3AF8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for UserData2, (uint64_t)&off_1E63C59F8, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE3B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3B78);
}

uint64_t sub_1B1AE3B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAC920, a3);
}

uint64_t sub_1B1AE3B78(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7CEA4);
}

void sub_1B1AE3B94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59158)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for UserData2, v2, (uint64_t)&off_1E63C59F8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59158);
  }
}

uint64_t sub_1B1AE3C18@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for UserData3, (uint64_t)&off_1E63C5BF0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE3C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3C98);
}

uint64_t sub_1B1AE3C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AACA14, a3);
}

uint64_t sub_1B1AE3C98(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7D020);
}

void sub_1B1AE3CB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59160)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for UserData3, v2, (uint64_t)&off_1E63C5BF0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59160);
  }
}

uint64_t sub_1B1AE3D38@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for UserData4, (uint64_t)&off_1E63C5DE8, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE3D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3DB8);
}

uint64_t sub_1B1AE3D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AACB08, a3);
}

uint64_t sub_1B1AE3DB8(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A7D19C);
}

void sub_1B1AE3DD4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59168)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for UserData4, v2, (uint64_t)&off_1E63C5DE8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59168);
  }
}

uint64_t sub_1B1AE3E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for NeighborCount, (uint64_t)&off_1E637B9A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE3E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE3ED8);
}

uint64_t sub_1B1AE3EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8ABDC, a3);
}

_QWORD *sub_1B1AE3ED8(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBC470, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE3F0C);
}

void sub_1B1AE3F0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59170)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for NeighborCount, MEMORY[0x1E0DEB188], (uint64_t)&off_1E637B9A0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59170);
  }
}

void sub_1B1AE3F70(unsigned int *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;

  sub_1B1AE4138(*a1);
  *(double *)&v4 = nullsub_16(v3);
  *a2 = v4;
}

uint64_t sub_1B1AE3F9C(float32x4_t *a1, _DWORD *a2)
{
  float32x4_t v3;
  uint64_t result;

  v3 = *a1;
  v3.i32[3] = 1.0;
  result = sub_1B1AE40EC(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B1AE3FCC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for ParticlePivot, (uint64_t)&off_1E637C6B8, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AE4004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE404C);
}

uint64_t sub_1B1AE4024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8B63C, a3);
}

uint64_t sub_1B1AE404C(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A76760);
}

void sub_1B1AE4068(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59178)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticlePivot, v2, (uint64_t)&off_1E637C6B8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59178);
  }
}

uint64_t sub_1B1AE40EC(float32x4_t a1)
{
  float32x4_t v1;
  int8x16_t v2;
  int8x16_t v3;
  __int32 v4;

  v1.i64[0] = 0x3F0000003F000000;
  v1.i64[1] = 0x3F0000003F000000;
  v2.i64[0] = 0xFF000000FFLL;
  v2.i64[1] = 0xFF000000FFLL;
  v3 = vandq_s8((int8x16_t)vcvtq_s32_f32(vmlaq_f32(v1, (float32x4_t)vdupq_n_s32(0x437F0000u), a1)), v2);
  v4 = v3.i32[0] | (v3.i32[1] << 8);
  *(uint32x2_t *)v3.i8 = vshl_u32((uint32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL), (uint32x2_t)0x1800000010);
  return v4 | v3.i32[0] | v3.i32[1];
}

double sub_1B1AE4138(unsigned int a1)
{
  int8x16_t v1;
  double result;

  v1.i64[0] = 0xFF000000FFLL;
  v1.i64[1] = 0xFF000000FFLL;
  *(_QWORD *)&result = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(a1), (uint32x4_t)xmmword_1B2245E80), v1)), (float32x4_t)vdupq_n_s32(0x3B808081u)).u64[0];
  return result;
}

uint64_t sub_1B1AE4168@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB16D8(a1, v2, (uint64_t)&type metadata for ProjectionMatrix, a2);
}

uint64_t sub_1B1AE4190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1758(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4218);
}

void sub_1B1AE41B4(simd_float4x4 *a1@<X0>, simd_float4x4 *a2@<X8>)
{
  *a2 = j____invert_f4(*a1);
}

uint64_t sub_1B1AE41E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF58FC0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F804, a3);
}

uint64_t sub_1B1AE4218(uint64_t a1)
{
  return sub_1B1AE0B48(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128, __n128, __n128, __n128))sub_1B1A77BD4);
}

uint64_t sub_1B1AE4234()
{
  return swift_setAtWritableKeyPath();
}

float sub_1B1AE4278@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *(float *)(a1 + 4);
  *a2 = result;
  return result;
}

float sub_1B1AE4284(float *a1, float *a2)
{
  float v3;
  float v4;
  float result;

  v3 = *a1;
  a2[1] = *a1;
  v4 = atanf((float)(a2[3] * 0.5) / v3);
  result = v4 + v4;
  *a2 = result;
  return result;
}

uint64_t sub_1B1AE42C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1E638EDD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE42F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4A2C);
}

float sub_1B1AE4314@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *(float *)(a1 + 12);
  *a2 = result;
  return result;
}

float sub_1B1AE4320(float *a1, float *a2)
{
  float v3;
  float v4;
  float result;

  v3 = *a1;
  a2[3] = *a1;
  v4 = atanf((float)(v3 * 0.5) / a2[1]);
  result = v4 + v4;
  *a2 = result;
  return result;
}

float sub_1B1AE4360@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *(float *)(a1 + 12) / *(float *)(a1 + 16);
  *a2 = result;
  return result;
}

float sub_1B1AE4370(float *a1, uint64_t a2)
{
  float result;

  result = *(float *)(a2 + 12) / fmaxf(*a1, 0.01);
  *(float *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1B1AE4394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1E638EDD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AE43C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4944);
}

void sub_1B1AE43E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B8108)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B8108);
  }
}

uint64_t sub_1B1AE4458@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 33);
  return result;
}

_BYTE *sub_1B1AE4464(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 33) = *result == 1;
  return result;
}

uint64_t sub_1B1AE4478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1E638EDD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE44A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE479C);
}

uint64_t sub_1B1AE44C8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1E638EDD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83DC0, a2);
}

uint64_t sub_1B1AE44F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE46D4);
}

uint64_t sub_1B1AE4518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1E638EDD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83284, a2);
}

uint64_t sub_1B1AE4548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4590);
}

uint64_t sub_1B1AE4568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1FB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90A94, a3);
}

_QWORD *sub_1B1AE4590(_QWORD *a1)
{
  return sub_1B1AE45C4(a1, (uint64_t)sub_1B1AE20D0, (uint64_t)sub_1B1EBB128, (void (*)(unint64_t, uint64_t, double))sub_1B1A72F04, (uint64_t (*)(_QWORD))sub_1B1AE45F4);
}

_QWORD *sub_1B1AE45C4(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  return sub_1B1A7C3A8(a1, *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), **(double **)(v5 + 16), *(_QWORD *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B1AE45F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59188)
  {
    sub_1B19F8E54(255, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for PerspectiveCamera, v2, (uint64_t)&off_1E638EDD0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59188);
  }
}

uint64_t sub_1B1AE4678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59190, (uint64_t)&type metadata for ProjectionDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90B88, a3);
}

double sub_1B1AE46A8()
{
  uint64_t *v0;

  return sub_1B1AAD1CC(v0[2], v0[3], v0[4], &qword_1EEF59198, (uint64_t)&type metadata for ProjectionDirection);
}

_QWORD *sub_1B1AE46D4(_QWORD *a1)
{
  return sub_1B1AF737C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBB128, (void (*)(unint64_t, uint64_t, double))sub_1B1A72F04, (uint64_t (*)(_QWORD))sub_1B1AE4708);
}

void sub_1B1AE4708()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591A0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&type metadata for ProjectionDirection, (uint64_t)&off_1E638EDD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591A0);
  }
}

uint64_t sub_1B1AE476C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90C94, a3);
}

_QWORD *sub_1B1AE479C(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBB128, (void (*)(unint64_t, uint64_t, double))sub_1B1A72F04, (uint64_t (*)(_QWORD))sub_1B1AE47D0);
}

void sub_1B1AE47D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591A8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PerspectiveCamera, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E638EDD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591A8);
  }
}

uint64_t sub_1B1AE4834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90DA0, a3);
}

void sub_1B1AE485C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF591B0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF591B0);
  }
}

void sub_1B1AE48D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591B8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591B8);
  }
}

_QWORD *sub_1B1AE4944(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBB128, (void (*)(unint64_t, uint64_t, double))sub_1B1A72F04, (uint64_t (*)(_QWORD))sub_1B1AE4978);
}

void sub_1B1AE4978(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF591C0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for PerspectiveCamera, v2, (uint64_t)&off_1E638EDD0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF591C0);
  }
}

uint64_t sub_1B1AE49FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90E94, a3);
}

_QWORD *sub_1B1AE4A2C(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBB128, (void (*)(unint64_t, uint64_t, double))sub_1B1A72F04, (uint64_t (*)(_QWORD))sub_1B1AE4A60);
}

void sub_1B1AE4A60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591C8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PerspectiveCamera, MEMORY[0x1E0DEB188], (uint64_t)&off_1E638EDD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591C8);
  }
}

uint64_t sub_1B1AE4AC4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 4);
  return result;
}

_BYTE *sub_1B1AE4AD0(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 4) = *result == 1;
  return result;
}

uint64_t sub_1B1AE4AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1E6393BD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE4B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4EAC);
}

uint64_t sub_1B1AE4B34@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1E6393BD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83DC0, a2);
}

uint64_t sub_1B1AE4B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4DEC);
}

uint64_t sub_1B1AE4B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1E6393BD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE4BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4D2C);
}

uint64_t sub_1B1AE4BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1E6393BD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AE4C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4C4C);
}

uint64_t sub_1B1AE4C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92860, a3);
}

_QWORD *sub_1B1AE4C4C(_QWORD *a1)
{
  return sub_1B1AF5A84(a1, (uint64_t)sub_1B1AE20D0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72C3C, (uint64_t (*)(_QWORD))sub_1B1AE4C78);
}

void sub_1B1AE4C78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF591D0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for OrthographicCamera, v2, (uint64_t)&off_1E6393BD0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF591D0);
  }
}

uint64_t sub_1B1AE4CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92954, a3);
}

_QWORD *sub_1B1AE4D2C(_QWORD *a1)
{
  return sub_1B1B08044(a1, (uint64_t)sub_1B1ADFCB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72C3C, (uint64_t (*)(_QWORD))sub_1B1AE4D58);
}

void sub_1B1AE4D58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591D8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for OrthographicCamera, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6393BD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591D8);
  }
}

uint64_t sub_1B1AE4DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59190, (uint64_t)&type metadata for ProjectionDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92A60, a3);
}

_QWORD *sub_1B1AE4DEC(_QWORD *a1)
{
  return sub_1B1AE8C98(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A72C3C, (uint64_t (*)(_QWORD))sub_1B1AE4E18);
}

void sub_1B1AE4E18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591E0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&type metadata for ProjectionDirection, (uint64_t)&off_1E6393BD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591E0);
  }
}

uint64_t sub_1B1AE4E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92B6C, a3);
}

_QWORD *sub_1B1AE4EAC(_QWORD *a1)
{
  return sub_1B1B07F58(a1, (uint64_t)sub_1B1ADEFE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72C3C, (uint64_t (*)(_QWORD))sub_1B1AE4ED8);
}

void sub_1B1AE4ED8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591E8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for OrthographicCamera, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E6393BD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591E8);
  }
}

uint64_t sub_1B1AE4F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for CameraDepthOfField, (uint64_t)&off_1E6390DD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE4F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE4FBC);
}

uint64_t sub_1B1AE4F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A91D0C, a3);
}

_QWORD *sub_1B1AE4FBC(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBEBF4, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AE4FF0);
}

void sub_1B1AE4FF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591F0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraDepthOfField, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6390DD8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591F0);
  }
}

uint64_t sub_1B1AE5054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1E636FAA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE5084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5448);
}

uint64_t sub_1B1AE50A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1E636FAA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AE50D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5380);
}

uint64_t sub_1B1AE50F4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1E636FAA0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE512C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE52B0);
}

uint64_t sub_1B1AE514C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1E636FAA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AE517C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE51CC);
}

uint64_t sub_1B1AE519C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A87ED4, a3);
}

_QWORD *sub_1B1AE51CC(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBBACC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73200, (uint64_t (*)(_QWORD))sub_1B1AE5200);
}

void sub_1B1AE5200()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF591F8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraBloom, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E636FAA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF591F8);
  }
}

uint64_t sub_1B1AE5264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A87FE0, a3);
}

double sub_1B1AE528C()
{
  uint64_t *v0;

  return sub_1B1AAE898(v0[2], v0[3], v0[4], (void (*)(_QWORD))sub_1B1AE11F4);
}

uint64_t sub_1B1AE52B0(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A74F6C);
}

void sub_1B1AE52CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59200)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for CameraBloom, v2, (uint64_t)&off_1E636FAA0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59200);
  }
}

uint64_t sub_1B1AE5350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A880D4, a3);
}

_QWORD *sub_1B1AE5380(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADFE94, (uint64_t)sub_1B1EBBACC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73200, (uint64_t (*)(_QWORD))sub_1B1AE53B4);
}

void sub_1B1AE53B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59208)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraBloom, MEMORY[0x1E0DEB418], (uint64_t)&off_1E636FAA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59208);
  }
}

uint64_t sub_1B1AE5418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A881E0, a3);
}

_QWORD *sub_1B1AE5448(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBBACC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73200, (uint64_t (*)(_QWORD))sub_1B1AE547C);
}

void sub_1B1AE547C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59210)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraBloom, MEMORY[0x1E0DEB188], (uint64_t)&off_1E636FAA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59210);
  }
}

uint64_t sub_1B1AE54E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1E637E700, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE5510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5908);
}

uint64_t sub_1B1AE5530@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 4);
  return result;
}

unint64_t sub_1B1AE553C(unint64_t *a1)
{
  return sub_1B1A2D7E8(*a1);
}

uint64_t sub_1B1AE5560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1E637E700, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE5590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5840);
}

uint64_t sub_1B1AE55B0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1E637E700, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82A90, a2);
}

uint64_t sub_1B1AE55E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5778);
}

uint64_t sub_1B1AE5600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1E637E700, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AE5630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5680);
}

uint64_t sub_1B1AE5650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8BC6C, a3);
}

_QWORD *sub_1B1AE5680(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBCABC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73F8C, (uint64_t (*)(_QWORD))sub_1B1AE56B4);
}

void sub_1B1AE56B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59220)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraLensBlur, MEMORY[0x1E0DEB418], (uint64_t)&off_1E637E700);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59220);
  }
}

uint64_t sub_1B1AE5718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59228, (uint64_t)&type metadata for LensBlurQuality, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8BD78, a3);
}

double sub_1B1AE5748()
{
  uint64_t *v0;

  return sub_1B1AAD524(v0[2], v0[3], v0[4], &qword_1EEF59230, (uint64_t)&type metadata for LensBlurQuality);
}

_QWORD *sub_1B1AE5778(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBCABC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73F8C, (uint64_t (*)(_QWORD))sub_1B1AE57AC);
}

void sub_1B1AE57AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59238)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&type metadata for LensBlurQuality, (uint64_t)&off_1E637E700);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59238);
  }
}

uint64_t sub_1B1AE5810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8BE84, a3);
}

_QWORD *sub_1B1AE5840(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBCABC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73F8C, (uint64_t (*)(_QWORD))sub_1B1AE5874);
}

void sub_1B1AE5874()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59240)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraLensBlur, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E637E700);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59240);
  }
}

uint64_t sub_1B1AE58D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8BF90, a3);
}

_QWORD *sub_1B1AE5908(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBCABC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73F8C, (uint64_t (*)(_QWORD))sub_1B1AE593C);
}

void sub_1B1AE593C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59248)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraLensBlur, MEMORY[0x1E0DEB188], (uint64_t)&off_1E637E700);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59248);
  }
}

unsigned __int8 *sub_1B1AE59A0@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1B1AE59AC(unint64_t *a1)
{
  return sub_1B1A25554(*a1);
}

uint64_t sub_1B1AE59D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for CameraToneMapping, (uint64_t)&off_1E638B730, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE5A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5B98);
}

uint64_t sub_1B1AE5A20@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for CameraToneMapping, (uint64_t)&off_1E638B730, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83954, a2);
}

uint64_t sub_1B1AE5A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5AD0);
}

uint64_t sub_1B1AE5A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59258, (uint64_t)&type metadata for ToneMappingOperator, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8FD40, a3);
}

double sub_1B1AE5AA0()
{
  uint64_t *v0;

  return sub_1B1AAD36C(v0[2], v0[3], v0[4], &qword_1EEF59260, (uint64_t)&type metadata for ToneMappingOperator);
}

_QWORD *sub_1B1AE5AD0(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBE224, (void (*)(unint64_t, uint64_t, double))sub_1B1A73EE4, (uint64_t (*)(_QWORD))sub_1B1AE5B04);
}

void sub_1B1AE5B04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59268)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraToneMapping, (uint64_t)&type metadata for ToneMappingOperator, (uint64_t)&off_1E638B730);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59268);
  }
}

uint64_t sub_1B1AE5B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8FE4C, a3);
}

_QWORD *sub_1B1AE5B98(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBE224, (void (*)(unint64_t, uint64_t, double))sub_1B1A73EE4, (uint64_t (*)(_QWORD))sub_1B1AE5BCC);
}

void sub_1B1AE5BCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59270)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraToneMapping, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E638B730);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59270);
  }
}

uint64_t sub_1B1AE5C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for CameraVignetting, (uint64_t)&off_1E6386730, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE5C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5CB0);
}

uint64_t sub_1B1AE5C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8E480, a3);
}

_QWORD *sub_1B1AE5CB0(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBD9A8, (void (*)(unint64_t, uint64_t, double))sub_1B1A73F8C, (uint64_t (*)(_QWORD))sub_1B1AE5CE4);
}

void sub_1B1AE5CE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59278)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraVignetting, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6386730);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59278);
  }
}

uint64_t sub_1B1AE5D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for CameraColorGrading, (uint64_t)&off_1E6390B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE5D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5F24);
}

uint64_t sub_1B1AE5D98@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for CameraColorGrading, (uint64_t)&off_1E6390B50, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE5DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE5E18);
}

uint64_t sub_1B1AE5DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A91B0C, a3);
}

_QWORD *sub_1B1AE5E18(_QWORD *a1)
{
  return sub_1B1AE0D84(a1, (uint64_t)sub_1B1AE0BB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72AEC, (uint64_t (*)(_QWORD))sub_1B1AE5E4C);
}

void sub_1B1AE5E4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59280)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for CameraColorGrading, v2, (uint64_t)&off_1E6390B50);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59280);
  }
}

uint64_t sub_1B1AE5ED0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1AE5EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A91C00, a3);
}

_QWORD *sub_1B1AE5F24(_QWORD *a1)
{
  return sub_1B1B08044(a1, (uint64_t)sub_1B1ADFCB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72AEC, (uint64_t (*)(_QWORD))sub_1B1AE5F50);
}

void sub_1B1AE5F50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59288)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CameraColorGrading, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6390B50);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59288);
  }
}

uint64_t sub_1B1AE5FB4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0C18(a1, v2, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1E63806F8, (uint64_t (*)(_QWORD))type metadata accessor for MTLPixelFormat, a2);
}

uint64_t sub_1B1AE5FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE625C);
}

uint64_t sub_1B1AE6004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1E63806F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE6034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE6168);
}

uint64_t sub_1B1AE6054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB11E8(a1, v2, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1E63806F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82D10, a2);
}

uint64_t sub_1B1AE6084(uint64_t result)
{
  return sub_1B1AB1580(result);
}

uint64_t sub_1B1AE608C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF592A0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C7C0, a3);
}

uint64_t sub_1B1AE60BC()
{
  uint64_t *v0;

  return sub_1B1AAD904(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AE60C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v8;

  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  if (*(_QWORD *)(a1 + 16))
    v6 = *(_OWORD *)(a1 + 32);
  else
    v6 = 0uLL;
  v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int128 *))(v4 + 16))(v3, v5, &v8);
}

double *sub_1B1AE6118(double *a1)
{
  uint64_t v1;

  return sub_1B1A76C04(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), **(double **)(v1 + 16), *(double *)(*(_QWORD *)(v1 + 16) + 8));
}

uint64_t sub_1B1AE6138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C8CC, a3);
}

_QWORD *sub_1B1AE6168(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBCEAC, (void (*)(unint64_t, uint64_t, double))sub_1B1A74034, (uint64_t (*)(_QWORD))sub_1B1AE619C);
}

void sub_1B1AE619C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF592B8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for RenderSettings, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63806F8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF592B8);
  }
}

uint64_t sub_1B1AE6200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF592C0, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C9D8, a3);
}

double sub_1B1AE6230()
{
  uint64_t *v0;

  return sub_1B1AAE660(v0[2], v0[3], v0[4], &qword_1EEF592C8, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat);
}

uint64_t sub_1B1AE625C(uint64_t a1)
{
  return sub_1B1AE8E80(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A76D8C);
}

void sub_1B1AE6278(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF592D0, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1E63806F8);
}

uint64_t sub_1B1AE629C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1E63BD078, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AE62CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE686C);
}

uint64_t sub_1B1AE62EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1E63BD078, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE631C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE67A4);
}

uint64_t sub_1B1AE633C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_BYTE *)(result + 20) == 1)
    *a2 = *(unsigned int *)(result + 16);
  else
    *a2 = 3;
  return result;
}

uint64_t sub_1B1AE6360(uint64_t *a1)
{
  return sub_1B1A2F8DC(*a1);
}

uint64_t sub_1B1AE6384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1E63BD078, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE63B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE66A0);
}

uint64_t sub_1B1AE63D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB251C(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1E63BD078, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A84D88, a2);
}

uint64_t sub_1B1AE6404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB25A8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE659C);
}

uint64_t sub_1B1AE6424@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1E63BD078, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8677C, a2);
}

uint64_t sub_1B1AE6454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE64D0);
}

uint64_t sub_1B1AE6474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF592E0, (uint64_t)&type metadata for ImageResizingMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAA848, a3);
}

double sub_1B1AE64A4()
{
  uint64_t *v0;

  return sub_1B1AAD36C(v0[2], v0[3], v0[4], &qword_1EEF592E8, (uint64_t)&type metadata for ImageResizingMode);
}

_QWORD *sub_1B1AE64D0(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EC4D30, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE6504);
}

void sub_1B1AE6504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF592F0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Skybox, (uint64_t)&type metadata for ImageResizingMode, (uint64_t)&off_1E63BD078);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF592F0);
  }
}

uint64_t sub_1B1AE6568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF592F8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAA954, a3);
}

_QWORD *sub_1B1AE659C(_QWORD *a1)
{
  return sub_1B1B057F8(a1, (uint64_t)sub_1B1AE65D0, (uint64_t)sub_1B1EC4D30, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE660C);
}

uint64_t sub_1B1AE65D0()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B1AE660C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59308)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Skybox, (uint64_t)&type metadata for BlendMode, (uint64_t)&off_1E63BD078);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59308);
  }
}

uint64_t sub_1B1AE6670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAAA60, a3);
}

_QWORD *sub_1B1AE66A0(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADFE94, (uint64_t)sub_1B1EC4D30, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE66D4);
}

void sub_1B1AE66D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59310)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Skybox, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E63BD078);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59310);
  }
}

uint64_t sub_1B1AE6738(int *a1, uint64_t a2)
{
  initializeBufferWithCopyOfBuffer for QueryScope(a2, a1);
  return a2;
}

uint64_t sub_1B1AE6774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAAB6C, a3);
}

_QWORD *sub_1B1AE67A4(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1ADFCB4, (uint64_t)sub_1B1EC4D30, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE67D8);
}

void sub_1B1AE67D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59318)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Skybox, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63BD078);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59318);
  }
}

uint64_t sub_1B1AE683C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAAC78, a3);
}

_QWORD *sub_1B1AE686C(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE20D0, (uint64_t)sub_1B1EC4D30, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE68A0);
}

void sub_1B1AE68A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59320)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Skybox, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E63BD078);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59320);
  }
}

uint64_t sub_1B1AE6904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for IBLGenerator, (uint64_t)&off_1E6375A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE6934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE6984);
}

uint64_t sub_1B1AE6954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8994C, a3);
}

_QWORD *sub_1B1AE6984(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EB9F00, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AE69B8);
}

void sub_1B1AE69B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59328)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for IBLGenerator, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6375A98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59328);
  }
}

uint64_t sub_1B1AE6A1C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB21BC(a1, v2, (uint64_t)&type metadata for ColorRampComponent, (uint64_t)&off_1E6390FE0, a2);
}

uint64_t sub_1B1AE6A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB13A0(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE6A94);
}

uint64_t sub_1B1AE6A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59330, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A91E18, a3);
}

uint64_t sub_1B1AE6A94(uint64_t a1)
{
  return sub_1B1AF01AC(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A7E918);
}

uint64_t sub_1B1AE6AB0()
{
  return sub_1B1AB180C();
}

void sub_1B1AE6AC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59340)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ColorRampComponent, (uint64_t)&type metadata for ColorRamp, (uint64_t)&off_1E6390FE0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59340);
  }
}

uint64_t sub_1B1AE6B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB22E4(a1, v2, (uint64_t)&type metadata for CurveComponent, (uint64_t)&off_1E637EB48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82B98, a2);
}

uint64_t sub_1B1AE6B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1D44(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE6D3C);
}

void sub_1B1AE6B80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B80B8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B80B8);
  }
}

uint64_t sub_1B1AE6BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE6C1C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C09C, a3);
}

void sub_1B1AE6C1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF59348)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF59348);
  }
}

uint64_t sub_1B1AE6C90()
{
  uint64_t *v0;

  return sub_1B1AAE4B4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AE6CAC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B1AAEFB8(a1, v1[2], v1[3], v1[4]);
}

void sub_1B1AE6CC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59350)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59350);
  }
}

uint64_t sub_1B1AE6D3C(uint64_t a1)
{
  return sub_1B1AF39F4(a1, (uint64_t)sub_1B1AE6D70, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1EBCB2C, (uint64_t (*)(_QWORD))sub_1B1AE6D88);
}

uint64_t sub_1B1AE6D70()
{
  return sub_1B1AB1E00();
}

void sub_1B1AE6D88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59358)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4B9F38, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C66D8, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Curve);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for CurveComponent, v2, (uint64_t)&off_1E637EB48);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59358);
  }
}

_BYTE *sub_1B1AE6E10@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 2) != 0;
  return result;
}

_BYTE *sub_1B1AE6E20(_BYTE *result, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 2) != 0)
      return result;
    v3 = v2 | 2;
  }
  else
  {
    if ((v2 & 2) == 0)
      return result;
    v3 = v2 & 0xFFFFFFFFFFFFFFFDLL;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B1AE6E4C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for MeshImportOptions, (uint64_t)&off_1E638D208, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AE6E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE704C);
}

_BYTE *sub_1B1AE6E9C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result & 1;
  return result;
}

_BYTE *sub_1B1AE6EAC(_BYTE *result, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 1) != 0)
      return result;
    v3 = v2 | 1;
  }
  else
  {
    if ((v2 & 1) == 0)
      return result;
    v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B1AE6ED8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for MeshImportOptions, (uint64_t)&off_1E638D208, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A86DE8, a2);
}

uint64_t sub_1B1AE6F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE6F84);
}

uint64_t sub_1B1AE6F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59368, (uint64_t)&type metadata for MeshImportOptions.Loader, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AACDFC, a3);
}

double sub_1B1AE6F58()
{
  uint64_t *v0;

  return sub_1B1AAD1CC(v0[2], v0[3], v0[4], &qword_1EEF59370, (uint64_t)&type metadata for MeshImportOptions.Loader);
}

_QWORD *sub_1B1AE6F84(_QWORD *a1)
{
  return sub_1B1AF737C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC53F4, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AE6FB8);
}

void sub_1B1AE6FB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59378)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for MeshImportOptions, (uint64_t)&type metadata for MeshImportOptions.Loader, (uint64_t)&off_1E638D208);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59378);
  }
}

uint64_t sub_1B1AE701C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AACF08, a3);
}

_QWORD *sub_1B1AE704C(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC53F4, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AE7080);
}

void sub_1B1AE7080()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59380)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for MeshImportOptions, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E638D208);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59380);
  }
}

uint64_t sub_1B1AE70E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1AD0(a1, v2, (uint64_t)&type metadata for MeshFileAsset, a2);
}

uint64_t sub_1B1AE710C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1B60(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE72D8);
}

uint64_t sub_1B1AE712C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1C1C(a1, v2, (uint64_t)&type metadata for MeshFileAsset, (uint64_t)&off_1E637B4A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82738, a2);
}

uint64_t sub_1B1AE715C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7240);
}

void sub_1B1AE717C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59398)
  {
    sub_1B1A02758(255, &qword_1ED4BA4D0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59398);
  }
}

uint64_t sub_1B1AE71E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF593A0, (uint64_t (*)(uint64_t))sub_1B1AE717C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A8B8, a3);
}

double sub_1B1AE7218()
{
  uint64_t *v0;

  return sub_1B1AAD5B4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AE7224(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B1AAE914(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B1AE7230(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1B1AE7240(uint64_t a1)
{
  return sub_1B1AE972C(a1, sub_1B1A7DCC8);
}

uint64_t sub_1B1AE725C()
{
  swift_bridgeObjectRetain();
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AE72A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF593B8, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A9C4, a3);
}

uint64_t sub_1B1AE72D8(uint64_t a1)
{
  return sub_1B1AE7680(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B1A7DE44);
}

uint64_t sub_1B1AE72F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1AE7338();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B1AE7338()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BB320)
  {
    sub_1B1AEC268(255, (unint64_t *)&unk_1ED4BB310);
    v0 = sub_1B2229124();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BB320);
  }
}

void sub_1B1AE73A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF593C8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for MeshFileAsset, (uint64_t)&type metadata for Asset, (uint64_t)&off_1E637B4A8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF593C8);
  }
}

uint64_t sub_1B1AE7408(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

id *sub_1B1AE7430(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_1B1AE7458@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for MeshReferenceAsset, (uint64_t)&off_1E6392758, a2);
}

uint64_t sub_1B1AE7480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE74D0);
}

uint64_t sub_1B1AE74A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92754, a3);
}

uint64_t sub_1B1AE74D0(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE7504, (uint64_t)sub_1B1EBB208, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE7550);
}

uint64_t sub_1B1AE7504()
{
  swift_bridgeObjectRetain();
  return swift_setAtWritableKeyPath();
}

void sub_1B1AE7550()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF593D8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for MeshReferenceAsset, MEMORY[0x1E0DEA968], (uint64_t)&off_1E6392758);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF593D8);
  }
}

uint64_t sub_1B1AE75B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1AD0(a1, v2, (uint64_t)&type metadata for ShaderFileAsset, a2);
}

uint64_t sub_1B1AE75DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1B60(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7664);
}

uint64_t sub_1B1AE75FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF593B8, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8DC50, a3);
}

uint64_t sub_1B1AE762C()
{
  uint64_t *v0;

  return sub_1B1AAD63C(v0[2], v0[3], v0[4]);
}

void sub_1B1AE7648(uint64_t a1)
{
  uint64_t *v1;

  sub_1B1AAED68(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B1AE7664(uint64_t a1)
{
  return sub_1B1AE7680(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B1A7E3FC);
}

uint64_t sub_1B1AE7680(uint64_t a1, uint64_t (*a2)(_OWORD *, uint64_t, uint64_t))
{
  _QWORD *v2;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v9[3];

  v5 = (_OWORD *)v2[2];
  v4 = v2[3];
  v6 = v2[4];
  v7 = v5[1];
  v9[0] = *v5;
  v9[1] = v7;
  v9[2] = v5[2];
  return a2(v9, v4, v6);
}

uint64_t sub_1B1AE76D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1AB1500(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1B1AE76EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF593E0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ShaderFileAsset, (uint64_t)&type metadata for Asset, (uint64_t)&off_1E6385810);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF593E0);
  }
}

uint64_t sub_1B1AE7754@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1E6378AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AE7784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7BA8);
}

uint64_t sub_1B1AE77A4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 1);
  return result;
}

unint64_t sub_1B1AE77B0(unint64_t *a1)
{
  return sub_1B1A311EC(*a1);
}

uint64_t sub_1B1AE77D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1E6378AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE7804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7AE0);
}

uint64_t sub_1B1AE7824@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1E6378AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82528, a2);
}

uint64_t sub_1B1AE7854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7A18);
}

uint64_t sub_1B1AE7874@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1E6378AA0, a2);
}

uint64_t sub_1B1AE789C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7924);
}

uint64_t sub_1B1AE78BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A89E70, a3);
}

uint64_t sub_1B1AE78EC()
{
  uint64_t *v0;

  return sub_1B1AAD49C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AE7908(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1B1AAF120(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B1AE7924(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE2950, (uint64_t)sub_1B1EBBF5C, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AE7958);
}

void sub_1B1AE7958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF593F0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for VideoCapture, MEMORY[0x1E0DEA968], (uint64_t)&off_1E6378AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF593F0);
  }
}

uint64_t sub_1B1AE79BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF593F8, (uint64_t)&type metadata for VideoCapture.OrientationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A89F7C, a3);
}

double sub_1B1AE79EC()
{
  uint64_t *v0;

  return sub_1B1AAD36C(v0[2], v0[3], v0[4], &qword_1EEF59400, (uint64_t)&type metadata for VideoCapture.OrientationMode);
}

_QWORD *sub_1B1AE7A18(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBBF5C, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AE7A4C);
}

void sub_1B1AE7A4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59408)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for VideoCapture, (uint64_t)&type metadata for VideoCapture.OrientationMode, (uint64_t)&off_1E6378AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59408);
  }
}

uint64_t sub_1B1AE7AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A088, a3);
}

_QWORD *sub_1B1AE7AE0(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBBF5C, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AE7B14);
}

void sub_1B1AE7B14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59410)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for VideoCapture, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E6378AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59410);
  }
}

uint64_t sub_1B1AE7B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A194, a3);
}

_QWORD *sub_1B1AE7BA8(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBBF5C, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AE7BDC);
}

void sub_1B1AE7BDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59418)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for VideoCapture, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6378AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59418);
  }
}

uint64_t sub_1B1AE7C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ModelRenderer, (uint64_t)&off_1E637B750, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AE7C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7CC0);
}

uint64_t sub_1B1AE7C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8AAD0, a3);
}

_QWORD *sub_1B1AE7CC0(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBADCC, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AE7CF4);
}

void sub_1B1AE7CF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59420)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ModelRenderer, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E637B750);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59420);
  }
}

uint64_t sub_1B1AE7D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Prefab, (uint64_t)&off_1E63BBB38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AE7D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7F2C);
}

uint64_t sub_1B1AE7DA8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2708(a1, v2, (uint64_t)&type metadata for Prefab, (uint64_t)&off_1E63BBB38, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, a2);
}

uint64_t sub_1B1AE7DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE7E4C);
}

uint64_t sub_1B1AE7E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE185C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAA048, a3);
}

uint64_t sub_1B1AE7E28()
{
  uint64_t *v0;

  return sub_1B1AAE788(v0[2], v0[3], v0[4], (void (*)(_QWORD))sub_1B1AE18C8);
}

uint64_t sub_1B1AE7E4C(uint64_t a1)
{
  return sub_1B1B069D4(a1, (uint64_t)sub_1B1AE725C, (uint64_t)sub_1B1EC4B70, (void (*)(unint64_t, uint64_t, double))sub_1B1A7470C, (uint64_t (*)(_QWORD))sub_1B1AE7E80);
}

void sub_1B1AE7E80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59428)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Prefab, v2, (uint64_t)&off_1E63BBB38);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59428);
  }
}

uint64_t sub_1B1AE7EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAA13C, a3);
}

_QWORD *sub_1B1AE7F2C(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC4B70, (void (*)(unint64_t, uint64_t, double))sub_1B1A7470C, (uint64_t (*)(_QWORD))sub_1B1AE7F60);
}

void sub_1B1AE7F60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59430)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Prefab, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E63BBB38);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59430);
  }
}

uint64_t sub_1B1AE7FC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1C1C(a1, v2, (uint64_t)&type metadata for MeshModel, (uint64_t)&off_1E63C4480, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A86DDC, a2);
}

uint64_t sub_1B1AE7FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE81D8);
}

void sub_1B1AE8014(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1EEF59440, (uint64_t (*)(uint64_t))type metadata accessor for Mesh, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1B1AE8030@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2708(a1, v2, (uint64_t)&type metadata for MeshModel, (uint64_t)&off_1E63C4480, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, a2);
}

uint64_t sub_1B1AE8068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE80B0);
}

uint64_t sub_1B1AE8088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE185C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAC414, a3);
}

uint64_t sub_1B1AE80B0(uint64_t a1)
{
  return sub_1B1B069D4(a1, (uint64_t)sub_1B1AE725C, (uint64_t)sub_1B1EC5014, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AE80E4);
}

void sub_1B1AE80E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59448)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for MeshModel, v2, (uint64_t)&off_1E63C4480);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59448);
  }
}

uint64_t sub_1B1AE8160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59450, (uint64_t (*)(uint64_t))sub_1B1AE8014, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAC508, a3);
}

uint64_t sub_1B1AE8190()
{
  uint64_t *v0;

  return sub_1B1AAE7F8(v0[2], v0[3], v0[4], &qword_1EEF59458, (uint64_t (*)(uint64_t))sub_1B1AE8014);
}

uint64_t sub_1B1AE81BC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B1AAF20C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B1AE81C8(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_1B1AE81D8(uint64_t a1)
{
  return sub_1B1AE972C(a1, sub_1B1A804F8);
}

uint64_t sub_1B1AE81F4()
{
  swift_retain();
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AE8240(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)((char *)a2 + a3 - 8) + 24))(*a2, a2[1], *(_QWORD *)((char *)a2 + a3 - 24));
}

uint64_t sub_1B1AE8278()
{
  return 40;
}

uint64_t sub_1B1AE8284()
{
  return swift_bridgeObjectRelease();
}

__n128 sub_1B1AE828C(__n128 *a1, __n128 *a2)
{
  unint64_t v4;
  __n128 result;

  sub_1B1AE82C0((uint64_t)a1, (uint64_t)a2);
  v4 = a1[2].n128_u64[0];
  result = a1[1];
  a2[1] = result;
  a2[2].n128_u64[0] = v4;
  return result;
}

uint64_t sub_1B1AE82C0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B1AE8300()
{
  return sub_1B222892C();
}

__n128 sub_1B1AE830C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_OWORD *)a2 = *(_OWORD *)(a1 + 24);
  result = *(__n128 *)a1;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 16);
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1B1AE8328()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1AE834C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B1A23204(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1B1AE8358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1B1A232B4(a1, a2, a3, v3[5], v3[2], v3[3]);
}

unsigned __int8 *sub_1B1AE8364@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1B1AE8370(unint64_t *a1)
{
  return sub_1B1A25540(*a1);
}

uint64_t sub_1B1AE8394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE83C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9434);
}

uint64_t sub_1B1AE83E4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A86BCC, a2);
}

uint64_t sub_1B1AE8414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9374);
}

_BYTE *sub_1B1AE8434@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 2;
  return result;
}

uint64_t sub_1B1AE8448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AE8478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9288);
}

uint64_t sub_1B1AE8498@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_BYTE *)(result + 44) == 1)
    *a2 = *(unsigned int *)(result + 40);
  else
    *a2 = 3;
  return result;
}

uint64_t sub_1B1AE84BC(uint64_t *a1)
{
  return sub_1B1A37EAC(*a1);
}

uint64_t sub_1B1AE84E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB251C(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A84D88, a2);
}

uint64_t sub_1B1AE8510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB25A8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE91C8);
}

uint64_t sub_1B1AE8530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AE8560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9108);
}

uint64_t sub_1B1AE8580@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 72);
  return result;
}

uint64_t sub_1B1AE8590@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0C18(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(_QWORD))type metadata accessor for MTLWinding, a2);
}

uint64_t sub_1B1AE85C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9098);
}

uint64_t sub_1B1AE85E0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 80);
  return result;
}

uint64_t sub_1B1AE85F0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0C18(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(_QWORD))type metadata accessor for MTLCullMode, a2);
}

uint64_t sub_1B1AE8620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE8FFC);
}

uint64_t sub_1B1AE8640@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AE8670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE8F3C);
}

_QWORD *sub_1B1AE8690(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B1AE869C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0C18(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(_QWORD))type metadata accessor for MTLCompareFunction, a2);
}

uint64_t sub_1B1AE86CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE8E64);
}

_BYTE *sub_1B1AE86F0@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 1;
  return result;
}

_BYTE *sub_1B1AE8708@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

uint64_t sub_1B1AE871C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AE8754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE8D50);
}

BOOL sub_1B1AE8774@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1B1A38278();
  *a1 = result;
  return result;
}

uint64_t sub_1B1AE87A0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 1);
  return result;
}

_BYTE *sub_1B1AE87AC(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 1) = *result == 1;
  return result;
}

uint64_t sub_1B1AE87C0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8698C, a2);
}

uint64_t sub_1B1AE87F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE8C6C);
}

unsigned __int8 *sub_1B1AE8810@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_BYTE *sub_1B1AE881C(_BYTE *result, BOOL *a2)
{
  *a2 = *result == 1;
  return result;
}

uint64_t sub_1B1AE8830@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 2);
  return result;
}

unint64_t sub_1B1AE883C(unint64_t *a1)
{
  return sub_1B1A31CDC(*a1);
}

uint64_t sub_1B1AE8860@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A86884, a2);
}

uint64_t sub_1B1AE8890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE8B80);
}

uint64_t sub_1B1AE88B0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 3);
  return result;
}

uint64_t sub_1B1AE88BC(uint64_t *a1)
{
  return sub_1B1A31DA4(*a1);
}

uint64_t sub_1B1AE88E0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81910, a2);
}

uint64_t sub_1B1AE8910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE8A94);
}

uint64_t sub_1B1AE8930@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 4);
  return result;
}

uint64_t sub_1B1AE893C(uint64_t *a1)
{
  return sub_1B1A31DBC(*a1);
}

BOOL sub_1B1AE8960@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1B1A38478();
  *a1 = result;
  return result;
}

BOOL sub_1B1AE898C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1B1A385A8();
  *a1 = result;
  return result;
}

uint64_t sub_1B1AE89B8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B1A38B44(a1, a2);
}

BOOL sub_1B1AE89CC@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1B1A386DC();
  *a1 = result;
  return result;
}

BOOL sub_1B1AE89F8@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1B1A388EC();
  *a1 = result;
  return result;
}

uint64_t sub_1B1AE8A24@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B1A38B44(a1, a2);
}

BOOL sub_1B1AE8A38@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1B1A38C78();
  *a1 = result;
  return result;
}

uint64_t sub_1B1AE8A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59490, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAAF84, a3);
}

_QWORD *sub_1B1AE8A94(_QWORD *a1)
{
  return sub_1B1B07BDC(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE8AC0);
}

void sub_1B1AE8AC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF594A0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, (uint64_t)&type metadata for AddressMode, (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF594A0);
  }
}

uint64_t sub_1B1AE8B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF594A8, (uint64_t)&type metadata for TextureMipFilterMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB090, a3);
}

double sub_1B1AE8B54()
{
  uint64_t *v0;

  return sub_1B1AAD524(v0[2], v0[3], v0[4], &qword_1EEF594B0, (uint64_t)&type metadata for TextureMipFilterMode);
}

_QWORD *sub_1B1AE8B80(_QWORD *a1)
{
  return sub_1B1B07BDC(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE8BAC);
}

void sub_1B1AE8BAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF594B8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, (uint64_t)&type metadata for TextureMipFilterMode, (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF594B8);
  }
}

uint64_t sub_1B1AE8C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF594C0, (uint64_t)&type metadata for FilterMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB19C, a3);
}

double sub_1B1AE8C40()
{
  uint64_t *v0;

  return sub_1B1AAD1CC(v0[2], v0[3], v0[4], &qword_1EEF594C8, (uint64_t)&type metadata for FilterMode);
}

_QWORD *sub_1B1AE8C6C(_QWORD *a1)
{
  return sub_1B1AE8C98(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE8CC4);
}

_QWORD *sub_1B1AE8C98(_QWORD *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  return sub_1B1A77F08(a1, **(_BYTE **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a2, a3, a4);
}

void sub_1B1AE8CC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF594D0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, (uint64_t)&type metadata for FilterMode, (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF594D0);
  }
}

uint64_t sub_1B1AE8D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB2A8, a3);
}

_QWORD *sub_1B1AE8D50(_QWORD *a1)
{
  return sub_1B1AE0D84(a1, (uint64_t)sub_1B1AE0BB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE8D84);
}

void sub_1B1AE8D84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF594D8)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for Material, v2, (uint64_t)&off_1E63C1AA0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF594D8);
  }
}

uint64_t sub_1B1AE8E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF594E0, (uint64_t (*)(uint64_t))type metadata accessor for MTLCompareFunction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB39C, a3);
}

double sub_1B1AE8E38()
{
  uint64_t *v0;

  return sub_1B1AAE660(v0[2], v0[3], v0[4], &qword_1EEF594E8, (uint64_t (*)(uint64_t))type metadata accessor for MTLCompareFunction);
}

uint64_t sub_1B1AE8E64(uint64_t a1)
{
  return sub_1B1AE8E80(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A7C6A0);
}

uint64_t sub_1B1AE8E80(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, **(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_1B1AE8EA4(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF594F0, (uint64_t (*)(uint64_t))type metadata accessor for MTLCompareFunction, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0);
}

unint64_t sub_1B1AE8EC8()
{
  unint64_t result;

  result = qword_1EEF594F8;
  if (!qword_1EEF594F8)
  {
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEDCA0], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1EEF594F8);
  }
  return result;
}

uint64_t sub_1B1AE8F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB4A8, a3);
}

_QWORD *sub_1B1AE8F3C(_QWORD *a1)
{
  return sub_1B1B01E78(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE8F68);
}

void sub_1B1AE8F68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B9450)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B9450);
  }
}

uint64_t sub_1B1AE8FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59500, (uint64_t (*)(uint64_t))type metadata accessor for MTLCullMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB5B4, a3);
}

uint64_t sub_1B1AE8FFC(uint64_t a1)
{
  return sub_1B1AE8E80(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A7C6CC);
}

void sub_1B1AE9018(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF59510, (uint64_t (*)(uint64_t))type metadata accessor for MTLCullMode, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0);
}

uint64_t sub_1B1AE903C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59518, (uint64_t (*)(uint64_t))type metadata accessor for MTLWinding, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB6C0, a3);
}

double sub_1B1AE906C()
{
  uint64_t *v0;

  return sub_1B1AAE660(v0[2], v0[3], v0[4], &qword_1EEF59520, (uint64_t (*)(uint64_t))type metadata accessor for MTLWinding);
}

uint64_t sub_1B1AE9098(uint64_t a1)
{
  return sub_1B1AE8E80(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A7C6F8);
}

void sub_1B1AE90B4(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF59528, (uint64_t (*)(uint64_t))type metadata accessor for MTLWinding, (uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0);
}

uint64_t sub_1B1AE90D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB7CC, a3);
}

_QWORD *sub_1B1AE9108(_QWORD *a1)
{
  return sub_1B1B08044(a1, (uint64_t)sub_1B1ADFCB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE9134);
}

void sub_1B1AE9134()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59530)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59530);
  }
}

uint64_t sub_1B1AE9198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF592F8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB8D8, a3);
}

_QWORD *sub_1B1AE91C8(_QWORD *a1)
{
  return sub_1B1AF0318(a1, (uint64_t)sub_1B1AE65D0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE91F4);
}

void sub_1B1AE91F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59538)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, (uint64_t)&type metadata for BlendMode, (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59538);
  }
}

uint64_t sub_1B1AE9258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AAB9E4, a3);
}

_QWORD *sub_1B1AE9288(_QWORD *a1)
{
  return sub_1B1B01BF4(a1, (uint64_t)sub_1B1AE20D0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE92B4);
}

void sub_1B1AE92B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59540)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59540);
  }
}

uint64_t sub_1B1AE9318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59548, (uint64_t)&type metadata for Material.Kind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AABAF0, a3);
}

double sub_1B1AE9348()
{
  uint64_t *v0;

  return sub_1B1AAD524(v0[2], v0[3], v0[4], &qword_1EEF59550, (uint64_t)&type metadata for Material.Kind);
}

_QWORD *sub_1B1AE9374(_QWORD *a1)
{
  return sub_1B1B07BDC(a1, (uint64_t)sub_1B1ADF68C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE93A0);
}

void sub_1B1AE93A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59558)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, (uint64_t)&type metadata for Material.Kind, (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59558);
  }
}

uint64_t sub_1B1AE9404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AABBFC, a3);
}

_QWORD *sub_1B1AE9434(_QWORD *a1)
{
  return sub_1B1B07F58(a1, (uint64_t)sub_1B1ADFE94, (void (*)(unint64_t, uint64_t, double))sub_1B1A73D94, (uint64_t (*)(_QWORD))sub_1B1AE9460);
}

void sub_1B1AE9460()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59560)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for Material, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E63C1AA0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59560);
  }
}

uint64_t sub_1B1AE94C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1AD0(a1, v2, (uint64_t)&type metadata for PointCacheFileAsset, a2);
}

uint64_t sub_1B1AE94EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1B60(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE953C);
}

uint64_t sub_1B1AE950C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF593B8, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A96394, a3);
}

uint64_t sub_1B1AE953C(uint64_t a1)
{
  return sub_1B1AE7680(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B1A7F5B4);
}

void sub_1B1AE9558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59568)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PointCacheFileAsset, (uint64_t)&type metadata for Asset, (uint64_t)&off_1E63995A8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59568);
  }
}

void sub_1B1AE95C4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1B2082B70(v1);
}

uint64_t sub_1B1AE95F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1C1C(a1, v2, (uint64_t)&type metadata for PointCacheFromModel, (uint64_t)&off_1E6399898, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A84EB8, a2);
}

uint64_t sub_1B1AE9620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9710);
}

void sub_1B1AE9640(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1EEF59578, (uint64_t (*)(uint64_t))sub_1B1AE965C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1B1AE965C()
{
  unint64_t result;

  result = qword_1ED4BA7E0;
  if (!qword_1ED4BA7E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4BA7E0);
  }
  return result;
}

uint64_t sub_1B1AE9698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59580, (uint64_t (*)(uint64_t))sub_1B1AE9640, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A964A0, a3);
}

uint64_t sub_1B1AE96C8()
{
  uint64_t *v0;

  return sub_1B1AAE7F8(v0[2], v0[3], v0[4], &qword_1EEF59588, (uint64_t (*)(uint64_t))sub_1B1AE9640);
}

void sub_1B1AE96F4(uint64_t a1)
{
  uint64_t *v1;

  sub_1B1AAEE34(a1, v1[2], v1[3], v1[4]);
}

void sub_1B1AE9700(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_1B1AE9710(uint64_t a1)
{
  return sub_1B1AE972C(a1, sub_1B1A7F7D4);
}

uint64_t sub_1B1AE972C(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(**(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1B1AE9768()
{
  uint64_t v0;
  id v1;

  v1 = **(id **)(v0 + 24);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B1AE97B4@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for REMeshAssetPointCache, (uint64_t)&off_1E63A5D68, a2);
}

uint64_t sub_1B1AE97DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE982C);
}

uint64_t sub_1B1AE97FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9CB3C, a3);
}

uint64_t sub_1B1AE982C(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE2950, (uint64_t)sub_1B1EBB5DC, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AE9860);
}

void sub_1B1AE9860()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59598)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for REMeshAssetPointCache, MEMORY[0x1E0DEA968], (uint64_t)&off_1E63A5D68);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59598);
  }
}

uint64_t sub_1B1AE98C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1E6399B80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AE98F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA080);
}

uint64_t sub_1B1AE9914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1E6399B80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AE9944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9FB8);
}

uint64_t sub_1B1AE9964@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 16);
  return result;
}

uint64_t sub_1B1AE9970(uint64_t *a1)
{
  return sub_1B1A3A078(*a1);
}

uint64_t sub_1B1AE9994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1E6399B80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AE99C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9EF0);
}

uint64_t sub_1B1AE99E4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1E6399B80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A84FE8, a2);
}

uint64_t sub_1B1AE9A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9E28);
}

uint64_t sub_1B1AE9A34@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 18) & 1;
  return result;
}

_BYTE *sub_1B1AE9A44(_BYTE *result, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 1) != 0)
      return result;
    v3 = v2 | 1;
  }
  else
  {
    if ((v2 & 1) == 0)
      return result;
    v3 = v2 & 0xFFFE;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B1AE9A70@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1E6399B80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AE9AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9D34);
}

uint64_t sub_1B1AE9AC0@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 18) & 2) != 0;
  return result;
}

_BYTE *sub_1B1AE9AD0(_BYTE *result, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 2) != 0)
      return result;
    v3 = v2 | 2;
  }
  else
  {
    if ((v2 & 2) == 0)
      return result;
    v3 = v2 & 0xFFFD;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B1AE9AFC@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 18) & 4) != 0;
  return result;
}

_BYTE *sub_1B1AE9B0C(_BYTE *result, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 4) != 0)
      return result;
    v3 = v2 | 4;
  }
  else
  {
    if ((v2 & 4) == 0)
      return result;
    v3 = v2 & 0xFFFB;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B1AE9B38@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 18) & 8) != 0;
  return result;
}

_BYTE *sub_1B1AE9B48(_BYTE *result, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 8) != 0)
      return result;
    v3 = v2 | 8;
  }
  else
  {
    if ((v2 & 8) == 0)
      return result;
    v3 = v2 & 0xFFF7;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B1AE9B74@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 18) & 0x10) != 0;
  return result;
}

_BYTE *sub_1B1AE9B84(_BYTE *result, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 0x10) != 0)
      return result;
    v3 = v2 | 0x10;
  }
  else
  {
    if ((v2 & 0x10) == 0)
      return result;
    v3 = v2 & 0xFFEF;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B1AE9BB0@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_WORD *)(result + 18) & 0x400) != 0;
  return result;
}

_BYTE *sub_1B1AE9BC0(_BYTE *result, uint64_t a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((*(_WORD *)(a2 + 18) & 0x400) != 0)
      return result;
    v3 = v2 | 0x400;
  }
  else
  {
    if ((*(_WORD *)(a2 + 18) & 0x400) == 0)
      return result;
    v3 = v2 & 0xFBFF;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B1AE9BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1E6399B80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80E4C, a2);
}

uint64_t sub_1B1AE9C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AE9C6C);
}

uint64_t sub_1B1AE9C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF595B0, MEMORY[0x1E0DEE190], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A965AC, a3);
}

_QWORD *sub_1B1AE9C6C(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0060, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE9CA0);
}

void sub_1B1AE9CA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF595C0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PointCacheGenerator, MEMORY[0x1E0DEE190], (uint64_t)&off_1E6399B80);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF595C0);
  }
}

uint64_t sub_1B1AE9D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A966B8, a3);
}

_QWORD *sub_1B1AE9D34(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC0060, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE9D68);
}

void sub_1B1AE9D68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF595C8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PointCacheGenerator, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6399B80);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF595C8);
  }
}

uint64_t sub_1B1AE9DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF595D0, (uint64_t)&type metadata for PointCache.Distribution, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A967C4, a3);
}

double sub_1B1AE9DFC()
{
  uint64_t *v0;

  return sub_1B1AAD524(v0[2], v0[3], v0[4], &qword_1EEF595D8, (uint64_t)&type metadata for PointCache.Distribution);
}

_QWORD *sub_1B1AE9E28(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC0060, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE9E5C);
}

void sub_1B1AE9E5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF595E0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&type metadata for PointCache.Distribution, (uint64_t)&off_1E6399B80);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF595E0);
  }
}

uint64_t sub_1B1AE9EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A968D0, a3);
}

_QWORD *sub_1B1AE9EF0(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0060, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE9F24);
}

void sub_1B1AE9F24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF595E8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PointCacheGenerator, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E6399B80);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF595E8);
  }
}

uint64_t sub_1B1AE9F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A969DC, a3);
}

_QWORD *sub_1B1AE9FB8(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0060, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AE9FEC);
}

void sub_1B1AE9FEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF595F0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PointCacheGenerator, MEMORY[0x1E0DEB418], (uint64_t)&off_1E6399B80);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF595F0);
  }
}

uint64_t sub_1B1AEA050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A96AE8, a3);
}

_QWORD *sub_1B1AEA080(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC0060, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AEA0B4);
}

void sub_1B1AEA0B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF595F8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E6399B80);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF595F8);
  }
}

uint64_t sub_1B1AEA118()
{
  return sub_1B20F080C();
}

uint64_t sub_1B1AEA154@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1AEA164@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for TextureFileAsset, (uint64_t)&off_1E638AD98, a2);
}

uint64_t sub_1B1AEA18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA308);
}

uint64_t sub_1B1AEA1AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1A80B3C(a1, v2, (uint64_t)&type metadata for TextureFileAsset, a2);
}

uint64_t sub_1B1AEA1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1A87000(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA26C);
}

uint64_t sub_1B1AEA1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F910, a3);
}

uint64_t sub_1B1AEA224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

_QWORD *sub_1B1AEA26C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A768DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)sub_1B1B0D3D4, (uint64_t)sub_1B1EBDF80, (void (*)(unint64_t, uint64_t, double))sub_1B1A738BC, (uint64_t (*)(_QWORD))sub_1B1AEA2B4);
}

void sub_1B1AEA2B4(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF59610, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&type metadata for TextureFileAsset, (uint64_t)&off_1E638AD98);
}

uint64_t sub_1B1AEA2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8FA1C, a3);
}

uint64_t sub_1B1AEA308(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE2950, (uint64_t)sub_1B1EBDF80, (void (*)(unint64_t, uint64_t, double))sub_1B1A738BC, (uint64_t (*)(_QWORD))sub_1B1AEA33C);
}

void sub_1B1AEA33C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59618)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureFileAsset, MEMORY[0x1E0DEA968], (uint64_t)&off_1E638AD98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59618);
  }
}

uint64_t sub_1B1AEA3A0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1AEA3AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1B20F74BC(v1, v2);
}

uint64_t sub_1B1AEA3E8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for MovieFileAsset, (uint64_t)&off_1E637FD58, a2);
}

uint64_t sub_1B1AEA410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA674);
}

uint64_t sub_1B1AEA430@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1A80B3C(a1, v2, (uint64_t)&type metadata for MovieFileAsset, a2);
}

uint64_t sub_1B1AEA458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1A87000(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA5C0);
}

uint64_t sub_1B1AEA478@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for MovieFileAsset, (uint64_t)&off_1E637FD58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEA4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA4F8);
}

uint64_t sub_1B1AEA4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C3A8, a3);
}

_QWORD *sub_1B1AEA4F8(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBCCAC, (void (*)(unint64_t, uint64_t, double))sub_1B1A728E4, (uint64_t (*)(_QWORD))sub_1B1AEA52C);
}

void sub_1B1AEA52C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59620)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for MovieFileAsset, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E637FD58);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59620);
  }
}

uint64_t sub_1B1AEA590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C4B4, a3);
}

_QWORD *sub_1B1AEA5C0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A768DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)sub_1B1AEA608, (uint64_t)sub_1B1EBCCAC, (void (*)(unint64_t, uint64_t, double))sub_1B1A728E4, (uint64_t (*)(_QWORD))sub_1B1AEA620);
}

uint64_t sub_1B1AEA608(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1AAF458(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1B1AEA620(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF59628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&type metadata for MovieFileAsset, (uint64_t)&off_1E637FD58);
}

uint64_t sub_1B1AEA644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C5C0, a3);
}

uint64_t sub_1B1AEA674(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE7504, (uint64_t)sub_1B1EBCCAC, (void (*)(unint64_t, uint64_t, double))sub_1B1A728E4, (uint64_t (*)(_QWORD))sub_1B1AEA6A8);
}

void sub_1B1AEA6A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59630)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for MovieFileAsset, MEMORY[0x1E0DEA968], (uint64_t)&off_1E637FD58);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59630);
  }
}

uint64_t sub_1B1AEA710@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for AudioFileAsset, (uint64_t)&off_1E637DF38, a2);
}

uint64_t sub_1B1AEA738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA8A4);
}

uint64_t sub_1B1AEA758@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1A80B3C(a1, v2, (uint64_t)&type metadata for AudioFileAsset, a2);
}

uint64_t sub_1B1AEA780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1A87000(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA808);
}

uint64_t sub_1B1AEA7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8BA54, a3);
}

uint64_t sub_1B1AEA7D0()
{
  uint64_t *v0;

  return sub_1B1AAD774(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AEA7EC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B1AAEA08(a1, v1[2], v1[3], v1[4]);
}

_QWORD *sub_1B1AEA808(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A768DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)sub_1B1AEA608, (uint64_t)sub_1B1EBC924, (void (*)(unint64_t, uint64_t, double))sub_1B1A738BC, (uint64_t (*)(_QWORD))sub_1B1AEA850);
}

void sub_1B1AEA850(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF59638, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&type metadata for AudioFileAsset, (uint64_t)&off_1E637DF38);
}

uint64_t sub_1B1AEA874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8BB60, a3);
}

uint64_t sub_1B1AEA8A4(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE2950, (uint64_t)sub_1B1EBC924, (void (*)(unint64_t, uint64_t, double))sub_1B1A738BC, (uint64_t (*)(_QWORD))sub_1B1AEA8D8);
}

void sub_1B1AEA8D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59640)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for AudioFileAsset, MEMORY[0x1E0DEA968], (uint64_t)&off_1E637DF38);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59640);
  }
}

uint64_t sub_1B1AEA93C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for AudioController, (uint64_t)&off_1E6383488, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEA96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEA9BC);
}

uint64_t sub_1B1AEA98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8D0FC, a3);
}

_QWORD *sub_1B1AEA9BC(_QWORD *a1)
{
  return sub_1B1B01E78(a1, (uint64_t)sub_1B1ADFFBC, (void (*)(unint64_t, uint64_t, double))sub_1B1A72994, (uint64_t (*)(_QWORD))sub_1B1AEA9E8);
}

void sub_1B1AEA9E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59648)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for AudioController, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6383488);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59648);
  }
}

uint64_t sub_1B1AEAA4C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for AudioAnalyzer, (uint64_t)&off_1E6379118, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEAA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEAACC);
}

uint64_t sub_1B1AEAA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A394, a3);
}

_QWORD *sub_1B1AEAACC(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBC130, (void (*)(unint64_t, uint64_t, double))sub_1B1A73B74, (uint64_t (*)(_QWORD))sub_1B1AEAB00);
}

void sub_1B1AEAB00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59650)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for AudioAnalyzer, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6379118);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59650);
  }
}

uint64_t sub_1B1AEAB64@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1AEAB74@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2708(a1, v2, (uint64_t)&type metadata for AudioSpectrum, (uint64_t)&off_1E63793F8, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], a2);
}

uint64_t sub_1B1AEABAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEAE80);
}

void sub_1B1AEABCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1EEF59658)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1EEF59658);
  }
}

uint64_t sub_1B1AEAC38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B1AEAC48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

float sub_1B1AEAC58@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result;

  result = *(float *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1B1AEAC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for AudioSpectrum, (uint64_t)&off_1E63793F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEAC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEACE8);
}

uint64_t sub_1B1AEACB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A4A0, a3);
}

_QWORD *sub_1B1AEACE8(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBC1A0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73200, (uint64_t (*)(_QWORD))sub_1B1AEAD1C);
}

void sub_1B1AEAD1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59660)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for AudioSpectrum, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63793F8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59660);
  }
}

uint64_t sub_1B1AEAD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AEADA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8A5AC, a3);
}

void sub_1B1AEADA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF59668)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF59668);
  }
}

void sub_1B1AEAE14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59670)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59670);
  }
}

uint64_t sub_1B1AEAE80(uint64_t a1)
{
  return sub_1B1B069D4(a1, (uint64_t)sub_1B1AE725C, (uint64_t)sub_1B1EBC1A0, (void (*)(unint64_t, uint64_t, double))sub_1B1A73200, (uint64_t (*)(_QWORD))sub_1B1AEAEB4);
}

void sub_1B1AEAEB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59678)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA4C0, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for AudioSpectrum, v2, (uint64_t)&off_1E63793F8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59678);
  }
}

uint64_t sub_1B1AEAF34@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for CALayerFileAsset, (uint64_t)&off_1E63862D8, a2);
}

uint64_t sub_1B1AEAF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEB090);
}

uint64_t sub_1B1AEAF7C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1A80B3C(a1, v2, (uint64_t)&type metadata for CALayerFileAsset, a2);
}

uint64_t sub_1B1AEAFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1A87000(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEAFF4);
}

uint64_t sub_1B1AEAFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF59600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8DE50, a3);
}

_QWORD *sub_1B1AEAFF4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1A768DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)sub_1B1B0D3D4, (uint64_t)sub_1B1EBD8C8, (void (*)(unint64_t, uint64_t, double))sub_1B1A72F04, (uint64_t (*)(_QWORD))sub_1B1AEB03C);
}

void sub_1B1AEB03C(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF59680, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t)&type metadata for CALayerFileAsset, (uint64_t)&off_1E63862D8);
}

uint64_t sub_1B1AEB060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8DF5C, a3);
}

uint64_t sub_1B1AEB090(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE2950, (uint64_t)sub_1B1EBD8C8, (void (*)(unint64_t, uint64_t, double))sub_1B1A72F04, (uint64_t (*)(_QWORD))sub_1B1AEB0C4);
}

void sub_1B1AEB0C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59688)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for CALayerFileAsset, MEMORY[0x1E0DEA968], (uint64_t)&off_1E63862D8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59688);
  }
}

uint64_t sub_1B1AEB130@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2708(a1, v2, (uint64_t)&type metadata for TextureArrayFileAsset, (uint64_t)&off_1E63A69A0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], a2);
}

uint64_t sub_1B1AEB168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEB438);
}

void sub_1B1AEB188(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1EEF59690)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1EEF59690);
  }
}

uint64_t sub_1B1AEB1F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1C1C(a1, v2, (uint64_t)&type metadata for TextureArrayFileAsset, (uint64_t)&off_1E63A69A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8565C, a2);
}

uint64_t sub_1B1AEB224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEB2BC);
}

void sub_1B1AEB244(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1EEF596A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1B1AEB260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A809B4(a1, a2, v3, &qword_1EEF596A8, (uint64_t (*)(uint64_t))sub_1B1AEB244, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9CE60, a3);
}

uint64_t sub_1B1AEB290()
{
  uint64_t *v0;

  return sub_1B1AAE03C(v0[2], v0[3], v0[4], &qword_1EEF596B0, (uint64_t (*)(uint64_t))sub_1B1AEB244);
}

uint64_t sub_1B1AEB2BC(uint64_t a1)
{
  return sub_1B1B069D4(a1, (uint64_t)sub_1B1AE1968, (uint64_t)sub_1B1EC177C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AEB2F0);
}

void sub_1B1AEB2F0(uint64_t a1)
{
  sub_1B1AE0924(a1, &qword_1EEF596B8, (uint64_t (*)(uint64_t))sub_1B1AEB244, (uint64_t)&type metadata for TextureArrayFileAsset, (uint64_t)&off_1E63A69A0);
}

uint64_t sub_1B1AEB314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AEB33C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9CF6C, a3);
}

void sub_1B1AEB33C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF596C0)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF596C0);
  }
}

uint64_t sub_1B1AEB3A8()
{
  uint64_t *v0;

  return sub_1B1AAE788(v0[2], v0[3], v0[4], (void (*)(_QWORD))sub_1B1AEB3CC);
}

void sub_1B1AEB3CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B7A78)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B7A78);
  }
}

uint64_t sub_1B1AEB438(uint64_t a1)
{
  return sub_1B1B069D4(a1, (uint64_t)sub_1B1AE1968, (uint64_t)sub_1B1EC177C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AEB46C);
}

void sub_1B1AEB46C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF596C8)
  {
    sub_1B1A02758(255, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for TextureArrayFileAsset, v2, (uint64_t)&off_1E63A69A0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF596C8);
  }
}

uint64_t sub_1B1AEB4E8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for TextureNamedAsset, (uint64_t)&off_1E6390580, a2);
}

uint64_t sub_1B1AEB510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEB560);
}

uint64_t sub_1B1AEB530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A91A00, a3);
}

uint64_t sub_1B1AEB560(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE2950, (uint64_t)sub_1B1EBEA5C, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AEB594);
}

void sub_1B1AEB594()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF596D0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureNamedAsset, MEMORY[0x1E0DEA968], (uint64_t)&off_1E6390580);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF596D0);
  }
}

uint64_t sub_1B1AEB5F8@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1A80AE0(a1, v2, a2);
}

uint64_t sub_1B1AEB600(uint64_t result)
{
  return sub_1B1AB162C(result);
}

void sub_1B1AEB608(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1EEF596D8)
  {
    sub_1B1A02758(255, &qword_1EEF596E0, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1EEF596D8);
  }
}

uint64_t sub_1B1AEB674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AEB69C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8DD5C, a3);
}

void sub_1B1AEB69C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF596E8)
  {
    sub_1B1A02758(255, &qword_1EEF596E0, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF596E8);
  }
}

double sub_1B1AEB708()
{
  uint64_t *v0;

  return sub_1B1AAD994(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B1AEB714(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1B1AAE988(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B1AEB720(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1B1A0DC90(a1, a2);
  return a1;
}

uint64_t sub_1B1AEB734(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11)
    return sub_1B1A0DAC8(a1, a2);
  return a1;
}

void sub_1B1AEB748()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF596F0)
  {
    sub_1B1A02758(255, &qword_1EEF596E0, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF596F0);
  }
}

uint64_t sub_1B1AEB7B4(uint64_t a1)
{
  return sub_1B1B0847C(a1, sub_1B1A7E61C);
}

uint64_t sub_1B1AEB7D0()
{
  uint64_t v0;

  sub_1B1AEB720(**(_QWORD **)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 8));
  return swift_setAtWritableKeyPath();
}

void sub_1B1AEB824(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF596F8)
  {
    sub_1B1A02758(255, &qword_1EEF596E0, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for TextureFileData, v2, (uint64_t)&off_1E6385E20);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF596F8);
  }
}

uint64_t sub_1B1AEB8A0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB245C(a1, v2, (uint64_t)&type metadata for TextureClient, (uint64_t)&off_1E637D4F8, a2);
}

uint64_t sub_1B1AEB8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1454(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEB918);
}

uint64_t sub_1B1AEB8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF590D0, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8B948, a3);
}

uint64_t sub_1B1AEB918(uint64_t a1)
{
  return sub_1B1AEB94C(a1, (uint64_t)sub_1B1AE2950, (uint64_t)sub_1B1EBC8B4, (void (*)(unint64_t, uint64_t, double))sub_1B1A73F8C, (uint64_t (*)(_QWORD))sub_1B1AEB994);
}

uint64_t sub_1B1AEB94C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  return sub_1B1A7E064(**(_QWORD **)(v5 + 16), *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), a2, a3, a4, a5);
}

void sub_1B1AEB994()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59700)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureClient, MEMORY[0x1E0DEA968], (uint64_t)&off_1E637D4F8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59700);
  }
}

uint64_t sub_1B1AEB9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for TexturePlaceholder, (uint64_t)&off_1E6396060, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AEBA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEBA78);
}

uint64_t sub_1B1AEBA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A939FC, a3);
}

_QWORD *sub_1B1AEBA78(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBF5CC, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AEBAAC);
}

void sub_1B1AEBAAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59708)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TexturePlaceholder, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E6396060);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59708);
  }
}

uint64_t sub_1B1AEBB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for TextureRequireSizeLimit, (uint64_t)&off_1E63ACEF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AEBB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEBCA8);
}

uint64_t sub_1B1AEBB60@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for TextureRequireSizeLimit, (uint64_t)&off_1E63ACEF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEBB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEBBE0);
}

uint64_t sub_1B1AEBBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA0A40, a3);
}

_QWORD *sub_1B1AEBBE0(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC2398, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEBC14);
}

void sub_1B1AEBC14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59710)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureRequireSizeLimit, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E63ACEF8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59710);
  }
}

uint64_t sub_1B1AEBC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA0B4C, a3);
}

_QWORD *sub_1B1AEBCA8(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC2398, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEBCDC);
}

void sub_1B1AEBCDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59718)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureRequireSizeLimit, MEMORY[0x1E0DEB418], (uint64_t)&off_1E63ACEF8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59718);
  }
}

uint64_t sub_1B1AEBD40@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB23DC(a1, v2, (uint64_t)&type metadata for TextureRequireMipmap, (uint64_t)&off_1E639F630, a2);
}

uint64_t sub_1B1AEBD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1870(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEBDB0);
}

uint64_t sub_1B1AEBD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1ADFA94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9A2F8, a3);
}

_QWORD *sub_1B1AEBDB0(_QWORD *a1)
{
  return sub_1B1AFC07C(a1, (uint64_t)sub_1B1ADFB94, (uint64_t)sub_1B1EC0C4C, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AEBDE4);
}

void sub_1B1AEBDE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59720)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for TextureRequireMipmap, v2, (uint64_t)&off_1E639F630);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59720);
  }
}

uint64_t sub_1B1AEBE60@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for RenderGraphTextureTarget, (uint64_t)&off_1E63AF410, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83EC8, a2);
}

uint64_t sub_1B1AEBE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEBF0C);
}

uint64_t sub_1B1AEBEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59730, (uint64_t)&type metadata for TextureFallback, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA2B48, a3);
}

double sub_1B1AEBEE0()
{
  uint64_t *v0;

  return sub_1B1AAD36C(v0[2], v0[3], v0[4], &qword_1EEF59738, (uint64_t)&type metadata for TextureFallback);
}

_QWORD *sub_1B1AEBF0C(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC2D28, (void (*)(unint64_t, uint64_t, double))sub_1B1A73EE4, (uint64_t (*)(_QWORD))sub_1B1AEBF40);
}

void sub_1B1AEBF40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59740)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for RenderGraphTextureTarget, (uint64_t)&type metadata for TextureFallback, (uint64_t)&off_1E63AF410);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59740);
  }
}

_BYTE *sub_1B1AEBFA4@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x40) != 0;
  return result;
}

uint64_t sub_1B1AEBFB4(unsigned __int8 *a1)
{
  return sub_1B1A3DAC0(*a1);
}

uint64_t sub_1B1AEBFD8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1E63A6E90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEC008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEC1D0);
}

_BYTE *sub_1B1AEC028@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x10) != 0;
  return result;
}

_BYTE *sub_1B1AEC038(_BYTE *result, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 0x10) != 0)
      return result;
    v3 = v2 | 0x10;
  }
  else
  {
    if ((v2 & 0x10) == 0)
      return result;
    v3 = v2 & 0xFFFFFFFFFFFFFFEFLL;
  }
  *a2 = v3;
  return result;
}

_QWORD *sub_1B1AEC064@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 4) == 0;
  return result;
}

_BYTE *sub_1B1AEC078(_BYTE *result, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 4) == 0)
      return result;
    v3 = v2 & 0xFFFFFFFFFFFFFFFBLL;
  }
  else
  {
    if ((v2 & 4) != 0)
      return result;
    v3 = v2 | 4;
  }
  *a2 = v3;
  return result;
}

_BYTE *sub_1B1AEC0A4@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 8) != 0;
  return result;
}

_BYTE *sub_1B1AEC0B4(_BYTE *result, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 8) != 0)
      return result;
    v3 = v2 | 8;
  }
  else
  {
    if ((v2 & 8) == 0)
      return result;
    v3 = v2 & 0xFFFFFFFFFFFFFFF7;
  }
  *a2 = v3;
  return result;
}

_DWORD *sub_1B1AEC0E0@<X0>(_DWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x80) != 0;
  return result;
}

_BYTE *sub_1B1AEC0F0(_BYTE *result, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 0x80) != 0)
      return result;
    v3 = v2 | 0x80;
  }
  else
  {
    if ((v2 & 0x80) == 0)
      return result;
    v3 = v2 & 0xFFFFFFFFFFFFFF7FLL;
  }
  *a2 = v3;
  return result;
}

void sub_1B1AEC11C()
{
  sub_1B2229688();
  __break(1u);
}

uint64_t sub_1B1AEC164@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 1) & 1;
  return result;
}

_BYTE *sub_1B1AEC174(_BYTE *result, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 0x100) != 0)
      return result;
    v3 = v2 | 0x100;
  }
  else
  {
    if ((v2 & 0x100) == 0)
      return result;
    v3 = v2 & 0xFFFFFFFFFFFFFEFFLL;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B1AEC1A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9D060, a3);
}

_QWORD *sub_1B1AEC1D0(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EB9FE0, (void (*)(unint64_t, uint64_t, double))sub_1B1A7396C, (uint64_t (*)(_QWORD))sub_1B1AEC204);
}

void sub_1B1AEC204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59748)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureLoadingOptions, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E63A6E90);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59748);
  }
}

uint64_t sub_1B1AEC268(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B1AEC2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1E63B88B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AEC2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEC5B8);
}

uint64_t sub_1B1AEC304@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB23DC(a1, v2, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1E63B88B8, a2);
}

uint64_t sub_1B1AEC32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB1870(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEC4D8);
}

uint64_t sub_1B1AEC34C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 25) == 1;
  return result;
}

_BYTE *sub_1B1AEC360(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 25) = *result;
  return result;
}

uint64_t sub_1B1AEC36C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1E63B88B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEC39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEC418);
}

uint64_t sub_1B1AEC3BC@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 25) == 2;
  return result;
}

_BYTE *sub_1B1AEC3D0(_BYTE *result, uint64_t a2)
{
  char v2;

  if (*result)
    v2 = 2;
  else
    v2 = 0;
  *(_BYTE *)(a2 + 25) = v2;
  return result;
}

uint64_t sub_1B1AEC3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA8E00, a3);
}

_QWORD *sub_1B1AEC418(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC45FC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AEC44C);
}

void sub_1B1AEC44C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59750)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E63B88B8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59750);
  }
}

uint64_t sub_1B1AEC4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1ADFA94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA8F0C, a3);
}

_QWORD *sub_1B1AEC4D8(_QWORD *a1)
{
  return sub_1B1AFC07C(a1, (uint64_t)sub_1B1ADFB94, (uint64_t)sub_1B1EC45FC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AEC50C);
}

void sub_1B1AEC50C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59758)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, v2, (uint64_t)&off_1E63B88B8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59758);
  }
}

uint64_t sub_1B1AEC588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA9000, a3);
}

_QWORD *sub_1B1AEC5B8(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADFE94, (uint64_t)sub_1B1EC45FC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AEC5EC);
}

void sub_1B1AEC5EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59760)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, MEMORY[0x1E0DEB418], (uint64_t)&off_1E63B88B8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59760);
  }
}

char *sub_1B1AEC650@<X0>(char *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B1AEC65C(uint64_t *a1)
{
  return sub_1B1A25528(*a1);
}

uint64_t sub_1B1AEC680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for TextureRequireMask, (uint64_t)&off_1E63962C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AEC6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEC930);
}

uint64_t sub_1B1AEC6D0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for TextureRequireMask, (uint64_t)&off_1E63962C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A84480, a2);
}

uint64_t sub_1B1AEC700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEC868);
}

uint64_t sub_1B1AEC720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for TextureRequireMask, (uint64_t)&off_1E63962C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEC750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEC7A0);
}

uint64_t sub_1B1AEC770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A93B08, a3);
}

_QWORD *sub_1B1AEC7A0(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBF6FC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AEC7D4);
}

void sub_1B1AEC7D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59768)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureRequireMask, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63962C0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59768);
  }
}

uint64_t sub_1B1AEC838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59770, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A93C14, a3);
}

_QWORD *sub_1B1AEC868(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBF6FC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AEC89C);
}

void sub_1B1AEC89C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59780)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureRequireMask, (uint64_t)&type metadata for TextureChannel, (uint64_t)&off_1E63962C0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59780);
  }
}

uint64_t sub_1B1AEC900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A93D20, a3);
}

_QWORD *sub_1B1AEC930(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBF6FC, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AEC964);
}

void sub_1B1AEC964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59788)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureRequireMask, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E63962C0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59788);
  }
}

_BYTE *sub_1B1AEC9C8@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

_BYTE *sub_1B1AEC9DC(_BYTE *result, BOOL *a2)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_1B1AEC9F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for TextureLoadPolicy, (uint64_t)&off_1E6390318, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AECA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AECBB0);
}

uint64_t sub_1B1AECA40@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 1) == 0;
  return result;
}

_BYTE *sub_1B1AECA54(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 1) = (*result & 1) == 0;
  return result;
}

uint64_t sub_1B1AECA68@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for TextureLoadPolicy, (uint64_t)&off_1E6390318, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83EC8, a2);
}

uint64_t sub_1B1AECA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AECAE8);
}

uint64_t sub_1B1AECAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59730, (uint64_t)&type metadata for TextureFallback, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A917E8, a3);
}

_QWORD *sub_1B1AECAE8(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBE924, (void (*)(unint64_t, uint64_t, double))sub_1B1A732A8, (uint64_t (*)(_QWORD))sub_1B1AECB1C);
}

void sub_1B1AECB1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59790)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureLoadPolicy, (uint64_t)&type metadata for TextureFallback, (uint64_t)&off_1E6390318);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59790);
  }
}

uint64_t sub_1B1AECB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A918F4, a3);
}

_QWORD *sub_1B1AECBB0(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBE924, (void (*)(unint64_t, uint64_t, double))sub_1B1A732A8, (uint64_t (*)(_QWORD))sub_1B1AECBE4);
}

void sub_1B1AECBE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59798)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for TextureLoadPolicy, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6390318);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59798);
  }
}

uint64_t sub_1B1AECC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1E639A720, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AECC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AECEF8);
}

uint64_t sub_1B1AECC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1E639A720, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AECCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AECE30);
}

uint64_t sub_1B1AECCE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1E639A720, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AECD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AECD68);
}

uint64_t sub_1B1AECD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A97024, a3);
}

_QWORD *sub_1B1AECD68(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC02C0, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AECD9C);
}

void sub_1B1AECD9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF597A0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for SDFTextureGenerator, MEMORY[0x1E0DEB418], (uint64_t)&off_1E639A720);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF597A0);
  }
}

uint64_t sub_1B1AECE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A97130, a3);
}

_QWORD *sub_1B1AECE30(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC02C0, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AECE64);
}

void sub_1B1AECE64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF597A8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for SDFTextureGenerator, MEMORY[0x1E0DEB188], (uint64_t)&off_1E639A720);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF597A8);
  }
}

uint64_t sub_1B1AECEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9723C, a3);
}

_QWORD *sub_1B1AECEF8(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC02C0, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AECF2C);
}

void sub_1B1AECF2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF597B0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E639A720);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF597B0);
  }
}

uint64_t sub_1B1AECF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleSpawnID, (uint64_t)&off_1E6384D98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AECFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED010);
}

uint64_t sub_1B1AECFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8DB44, a3);
}

_QWORD *sub_1B1AED010(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBD504, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AED044);
}

void sub_1B1AED044()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF597B8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSpawnID, MEMORY[0x1E0DEB418], (uint64_t)&off_1E6384D98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF597B8);
  }
}

uint64_t sub_1B1AED0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleContinuousSpawn, (uint64_t)&off_1E63AB6F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AED0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED128);
}

uint64_t sub_1B1AED0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9FD04, a3);
}

_QWORD *sub_1B1AED128(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC1E34, (void (*)(unint64_t, uint64_t, double))sub_1B1A732A8, (uint64_t (*)(_QWORD))sub_1B1AED15C);
}

void sub_1B1AED15C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF597C0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleContinuousSpawn, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63AB6F8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF597C0);
  }
}

uint64_t sub_1B1AED1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleSpawnOverDistance, (uint64_t)&off_1E63B0FB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AED1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED358);
}

uint64_t sub_1B1AED210@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleSpawnOverDistance, (uint64_t)&off_1E63B0FB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AED240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED290);
}

uint64_t sub_1B1AED260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA4438, a3);
}

_QWORD *sub_1B1AED290(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EC330C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AED2C4);
}

void sub_1B1AED2C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF597C8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSpawnOverDistance, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E63B0FB0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF597C8);
  }
}

uint64_t sub_1B1AED328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA4544, a3);
}

_QWORD *sub_1B1AED358(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1ADFCB4, (uint64_t)sub_1B1EC330C, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AED38C);
}

void sub_1B1AED38C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF597D0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSpawnOverDistance, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63B0FB0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF597D0);
  }
}

uint64_t sub_1B1AED3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleVariableSpawn, (uint64_t)&off_1E63A54D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AED420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED468);
}

uint64_t sub_1B1AED440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9C648, a3);
}

_QWORD *sub_1B1AED468(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC1504, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AED49C);
}

void sub_1B1AED49C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF597D8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleVariableSpawn, v2, (uint64_t)&off_1E63A54D0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF597D8);
  }
}

uint64_t sub_1B1AED520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB11E8(a1, v2, (uint64_t)&type metadata for ParticleBurstSpawn, (uint64_t)&off_1E6393EF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A840D8, a2);
}

uint64_t sub_1B1AED550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED75C);
}

void sub_1B1AED570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B8110)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B8110);
  }
}

void sub_1B1AED5E4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1B1AED62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AED654, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A92C78, a3);
}

void sub_1B1AED654(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EEF597E0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v5 = type metadata accessor for EntityValueAccessors(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EEF597E0);
  }
}

double sub_1B1AED6C8()
{
  uint64_t *v0;

  return sub_1B1AAE334(v0[2], v0[3], v0[4]);
}

void sub_1B1AED6E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4B7A80)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v0 = sub_1B2229A18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4B7A80);
  }
}

_QWORD *sub_1B1AED75C(_QWORD *a1)
{
  return sub_1B1AED9F0(a1, (uint64_t)sub_1B1AE0BB4, (uint64_t)sub_1B1EBF114, (void (*)(unint64_t, uint64_t, double))sub_1B1A740DC, (uint64_t (*)(_QWORD))sub_1B1AED790);
}

void sub_1B1AED790(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF597E8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleBurstSpawn, v2, (uint64_t)&off_1E6393EF8);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF597E8);
  }
}

uint64_t sub_1B1AED814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB11E8(a1, v2, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn, (uint64_t)&off_1E63B1C20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A840D8, a2);
}

uint64_t sub_1B1AED844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED9BC);
}

uint64_t sub_1B1AED864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn, (uint64_t)&off_1E63B1C20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AED894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AED8DC);
}

uint64_t sub_1B1AED8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA4A80, a3);
}

_QWORD *sub_1B1AED8DC(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC34E8, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AED910);
}

void sub_1B1AED910(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF597F0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn, v2, (uint64_t)&off_1E63B1C20);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF597F0);
  }
}

uint64_t sub_1B1AED994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AED654, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA4B74, a3);
}

_QWORD *sub_1B1AED9BC(_QWORD *a1)
{
  return sub_1B1AED9F0(a1, (uint64_t)sub_1B1AE0BB4, (uint64_t)sub_1B1EC34E8, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEDA2C);
}

_QWORD *sub_1B1AED9F0(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  return sub_1B1A7AF84(a1, **(_QWORD **)(v5 + 16), *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B1AEDA2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF597F8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5B8, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn, v2, (uint64_t)&off_1E63B1C20);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF597F8);
  }
}

uint64_t sub_1B1AEDAB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleSpawnDuration, (uint64_t)&off_1E63A51D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEDAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEDB30);
}

uint64_t sub_1B1AEDB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9C53C, a3);
}

_QWORD *sub_1B1AEDB30(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC1404, (void (*)(unint64_t, uint64_t, double))sub_1B1A732A8, (uint64_t (*)(_QWORD))sub_1B1AEDB64);
}

void sub_1B1AEDB64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59800)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSpawnDuration, MEMORY[0x1E0DEB188], (uint64_t)&off_1E63A51D8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59800);
  }
}

uint64_t sub_1B1AEDBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleSpawnDelay, (uint64_t)&off_1E6394DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEDBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEDC48);
}

uint64_t sub_1B1AEDC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9319C, a3);
}

_QWORD *sub_1B1AEDC48(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EBF2D8, (void (*)(unint64_t, uint64_t, double))sub_1B1A732A8, (uint64_t (*)(_QWORD))sub_1B1AEDC7C);
}

void sub_1B1AEDC7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59808)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSpawnDelay, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6394DD0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59808);
  }
}

uint64_t sub_1B1AEDCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleRespawn, (uint64_t)&off_1E6384C30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AEDD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEDD60);
}

uint64_t sub_1B1AEDD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8DA38, a3);
}

_QWORD *sub_1B1AEDD60(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBD494, (void (*)(unint64_t, uint64_t, double))sub_1B1A73CEC, (uint64_t (*)(_QWORD))sub_1B1AEDD94);
}

void sub_1B1AEDD94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59810)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleRespawn, MEMORY[0x1E0DEB418], (uint64_t)&off_1E6384C30);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59810);
  }
}

uint64_t sub_1B1AEDDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AEDE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE334);
}

uint64_t sub_1B1AEDE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEDE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE26C);
}

uint64_t sub_1B1AEDE98@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEDEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE1A4);
}

uint64_t sub_1B1AEDEE8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 20);
  return result;
}

uint64_t sub_1B1AEDEF4(uint64_t *a1)
{
  return sub_1B1A412FC(*a1);
}

uint64_t sub_1B1AEDF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AEDF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE0DC);
}

uint64_t sub_1B1AEDF68@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8384C, a2);
}

uint64_t sub_1B1AEDF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE014);
}

uint64_t sub_1B1AEDFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59820, (uint64_t)&type metadata for ParticleSubSpawn.Mode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F2C8, a3);
}

double sub_1B1AEDFE8()
{
  uint64_t *v0;

  return sub_1B1AAD36C(v0[2], v0[3], v0[4], &qword_1EEF59828, (uint64_t)&type metadata for ParticleSubSpawn.Mode);
}

_QWORD *sub_1B1AEE014(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBDE38, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEE048);
}

void sub_1B1AEE048()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59830)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&type metadata for ParticleSubSpawn.Mode, (uint64_t)&off_1E6389F98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59830);
  }
}

uint64_t sub_1B1AEE0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F3D4, a3);
}

_QWORD *sub_1B1AEE0DC(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADFE94, (uint64_t)sub_1B1EBDE38, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEE110);
}

void sub_1B1AEE110()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59838)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSubSpawn, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E6389F98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59838);
  }
}

uint64_t sub_1B1AEE174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F4E0, a3);
}

_QWORD *sub_1B1AEE1A4(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBDE38, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEE1D8);
}

void sub_1B1AEE1D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59840)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSubSpawn, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6389F98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59840);
  }
}

uint64_t sub_1B1AEE23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F5EC, a3);
}

_QWORD *sub_1B1AEE26C(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1ADFCB4, (uint64_t)sub_1B1EBDE38, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEE2A0);
}

void sub_1B1AEE2A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59848)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSubSpawn, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6389F98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59848);
  }
}

uint64_t sub_1B1AEE304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59018, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F6F8, a3);
}

_QWORD *sub_1B1AEE334(_QWORD *a1)
{
  return sub_1B1B06710(a1, (uint64_t)sub_1B1AE20D0, (uint64_t)sub_1B1EBDE38, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEE368);
}

void sub_1B1AEE368()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59850)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&type metadata for Entity, (uint64_t)&off_1E6389F98);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59850);
  }
}

char *sub_1B1AEE3CC@<X0>(char *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B1AEE3D8(uint64_t *a1)
{
  return sub_1B1A25568(*a1);
}

uint64_t sub_1B1AEE3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1E6399080, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AEE42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE8E4);
}

uint64_t sub_1B1AEE44C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1E6399080, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8284C, a2);
}

uint64_t sub_1B1AEE47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE81C);
}

uint64_t sub_1B1AEE49C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1E6399080, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AEE4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE74C);
}

uint64_t sub_1B1AEE4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1E6399080, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEE524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE68C);
}

uint64_t sub_1B1AEE544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1E6399080, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AEE574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE5C4);
}

uint64_t sub_1B1AEE594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A95B4C, a3);
}

_QWORD *sub_1B1AEE5C4(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBFCD4, (void (*)(unint64_t, uint64_t, double))sub_1B1A7396C, (uint64_t (*)(_QWORD))sub_1B1AEE5F8);
}

void sub_1B1AEE5F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59858)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleGrowEmitter, MEMORY[0x1E0DEB418], (uint64_t)&off_1E6399080);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59858);
  }
}

uint64_t sub_1B1AEE65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A95C58, a3);
}

_QWORD *sub_1B1AEE68C(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1ADFCB4, (uint64_t)sub_1B1EBFCD4, (void (*)(unint64_t, uint64_t, double))sub_1B1A7396C, (uint64_t (*)(_QWORD))sub_1B1AEE6C0);
}

void sub_1B1AEE6C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59860)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleGrowEmitter, MEMORY[0x1E0DEB188], (uint64_t)&off_1E6399080);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59860);
  }
}

uint64_t sub_1B1AEE724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE02A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A95D64, a3);
}

uint64_t sub_1B1AEE74C(uint64_t a1)
{
  return sub_1B1AE0660(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, __n128))sub_1B1A78D34);
}

void sub_1B1AEE768(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59868)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleGrowEmitter, v2, (uint64_t)&off_1E6399080);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59868);
  }
}

uint64_t sub_1B1AEE7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59870, (uint64_t)&type metadata for NoiseKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A95E58, a3);
}

_QWORD *sub_1B1AEE81C(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADFFBC, (uint64_t)sub_1B1EBFCD4, (void (*)(unint64_t, uint64_t, double))sub_1B1A7396C, (uint64_t (*)(_QWORD))sub_1B1AEE850);
}

void sub_1B1AEE850()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59880)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&type metadata for NoiseKind, (uint64_t)&off_1E6399080);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59880);
  }
}

uint64_t sub_1B1AEE8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A95F64, a3);
}

_QWORD *sub_1B1AEE8E4(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBFCD4, (void (*)(unint64_t, uint64_t, double))sub_1B1A7396C, (uint64_t (*)(_QWORD))sub_1B1AEE918);
}

void sub_1B1AEE918()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59888)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleGrowEmitter, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E6399080);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59888);
  }
}

uint64_t sub_1B1AEE97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleMassInit, (uint64_t)&off_1E6389420, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEE9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEE9F4);
}

uint64_t sub_1B1AEE9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8EEC8, a3);
}

_QWORD *sub_1B1AEE9F4(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBDC48, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AEEA28);
}

void sub_1B1AEEA28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59890)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleMassInit, v2, (uint64_t)&off_1E6389420);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59890);
  }
}

uint64_t sub_1B1AEEAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleLifeInit, (uint64_t)&off_1E6388ED0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEEADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEEC3C);
}

uint64_t sub_1B1AEEAFC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleLifeInit, (uint64_t)&off_1E6388ED0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEEB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEEB7C);
}

uint64_t sub_1B1AEEB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8EBBC, a3);
}

_QWORD *sub_1B1AEEB7C(_QWORD *a1)
{
  return sub_1B1B06C3C(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBDAF8, (void (*)(unint64_t, uint64_t, double))sub_1B1A734B4, (uint64_t (*)(_QWORD))sub_1B1AEEBB0);
}

void sub_1B1AEEBB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59898)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleLifeInit, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E6388ED0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59898);
  }
}

uint64_t sub_1B1AEEC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8ECC8, a3);
}

_QWORD *sub_1B1AEEC3C(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE20D0, (uint64_t)sub_1B1EBDAF8, (void (*)(unint64_t, uint64_t, double))sub_1B1A734B4, (uint64_t (*)(_QWORD))sub_1B1AEEC70);
}

void sub_1B1AEEC70(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF598A0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleLifeInit, v2, (uint64_t)&off_1E6388ED0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF598A0);
  }
}

uint64_t sub_1B1AEECF4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 16);
  return result;
}

uint64_t sub_1B1AEED00(uint64_t *a1)
{
  return sub_1B1A428F0(*a1);
}

uint64_t sub_1B1AEED24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1E639E798, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AEED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF104);
}

uint64_t sub_1B1AEED74@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1E639E798, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83CB8, a2);
}

uint64_t sub_1B1AEEDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF03C);
}

uint64_t sub_1B1AEEDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1E639E798, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEEDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEEF74);
}

uint64_t sub_1B1AEEE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1E639E798, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEEE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEEE8C);
}

uint64_t sub_1B1AEEE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A99EE0, a3);
}

_QWORD *sub_1B1AEEE8C(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC0B58, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEEEC0);
}

void sub_1B1AEEEC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF598A8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleVelocityInit, v2, (uint64_t)&off_1E639E798);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF598A8);
  }
}

uint64_t sub_1B1AEEF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A99FD4, a3);
}

_QWORD *sub_1B1AEEF74(_QWORD *a1)
{
  return sub_1B1B08244(a1, (uint64_t)sub_1B1AE1BC4, (uint64_t)sub_1B1EC0B58, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEEFA8);
}

void sub_1B1AEEFA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF598B0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleVelocityInit, MEMORY[0x1E0DEB188], (uint64_t)&off_1E639E798);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF598B0);
  }
}

uint64_t sub_1B1AEF00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF598B8, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9A0E0, a3);
}

_QWORD *sub_1B1AEF03C(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EC0B58, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEF070);
}

void sub_1B1AEF070()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF598C8)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&type metadata for Composition.Operation, (uint64_t)&off_1E639E798);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF598C8);
  }
}

uint64_t sub_1B1AEF0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9A1EC, a3);
}

_QWORD *sub_1B1AEF104(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EC0B58, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEF138);
}

void sub_1B1AEF138()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF598D0)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleVelocityInit, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E639E798);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF598D0);
  }
}

uint64_t sub_1B1AEF19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleOrientationInit, (uint64_t)&off_1E63ABD98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEF1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF214);
}

uint64_t sub_1B1AEF1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9FF04, a3);
}

_QWORD *sub_1B1AEF214(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC2064, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEF248);
}

void sub_1B1AEF248(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF598D8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleOrientationInit, v2, (uint64_t)&off_1E63ABD98);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF598D8);
  }
}

uint64_t sub_1B1AEF2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleAngularVelocityInit, (uint64_t)&off_1E63B2D80, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEF2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF344);
}

uint64_t sub_1B1AEF31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA53A4, a3);
}

_QWORD *sub_1B1AEF344(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC3788, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEF378);
}

void sub_1B1AEF378(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF598E0)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleAngularVelocityInit, v2, (uint64_t)&off_1E63B2D80);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF598E0);
  }
}

char *sub_1B1AEF3FC@<X0>(char *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B1AEF408(uint64_t *a1)
{
  return sub_1B1A25568(*a1);
}

uint64_t sub_1B1AEF42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleSizeInit, (uint64_t)&off_1E63898E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AEF45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF748);
}

uint64_t sub_1B1AEF47C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleSizeInit, (uint64_t)&off_1E63898E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83744, a2);
}

uint64_t sub_1B1AEF4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF680);
}

uint64_t sub_1B1AEF4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleSizeInit, (uint64_t)&off_1E63898E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEF4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF56C);
}

_BYTE *sub_1B1AEF51C@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

_BYTE *sub_1B1AEF530@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 2;
  return result;
}

uint64_t sub_1B1AEF544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8EFBC, a3);
}

_QWORD *sub_1B1AEF56C(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE20D0, (uint64_t)sub_1B1EBDD18, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AEF5A0);
}

void sub_1B1AEF5A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF598E8)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleSizeInit, v2, (uint64_t)&off_1E63898E0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF598E8);
  }
}

uint64_t sub_1B1AEF624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF598F0, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F0B0, a3);
}

double sub_1B1AEF654()
{
  uint64_t *v0;

  return sub_1B1AAD524(v0[2], v0[3], v0[4], &qword_1EEF598F8, (uint64_t)&type metadata for ScaleMode);
}

_QWORD *sub_1B1AEF680(_QWORD *a1)
{
  return sub_1B1B06344(a1, (uint64_t)sub_1B1ADF68C, (uint64_t)sub_1B1EBDD18, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AEF6B4);
}

void sub_1B1AEF6B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59900)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSizeInit, (uint64_t)&type metadata for ScaleMode, (uint64_t)&off_1E63898E0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59900);
  }
}

uint64_t sub_1B1AEF718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8F1BC, a3);
}

_QWORD *sub_1B1AEF748(_QWORD *a1)
{
  return sub_1B1B07420(a1, (uint64_t)sub_1B1ADEFE0, (uint64_t)sub_1B1EBDD18, (void (*)(unint64_t, uint64_t, double))sub_1B1A73C1C, (uint64_t (*)(_QWORD))sub_1B1AEF77C);
}

void sub_1B1AEF77C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59908)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleSizeInit, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E63898E0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59908);
  }
}

uint64_t sub_1B1AEF7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticlePivotInit, (uint64_t)&off_1E638E878, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEF810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF858);
}

uint64_t sub_1B1AEF830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90894, a3);
}

_QWORD *sub_1B1AEF858(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBE544, (void (*)(unint64_t, uint64_t, double))sub_1B1A7380C, (uint64_t (*)(_QWORD))sub_1B1AEF88C);
}

void sub_1B1AEF88C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59910)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticlePivotInit, v2, (uint64_t)&off_1E638E878);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59910);
  }
}

uint64_t sub_1B1AEF910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleAngleInit, (uint64_t)&off_1E638DB08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEF940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEF988);
}

uint64_t sub_1B1AEF960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8FF58, a3);
}

_QWORD *sub_1B1AEF988(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EBE294, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AEF9BC);
}

void sub_1B1AEF9BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59918)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleAngleInit, v2, (uint64_t)&off_1E638DB08);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59918);
  }
}

uint64_t sub_1B1AEFA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleAngleVelocityInit, (uint64_t)&off_1E63AFF10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEFA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEFAB8);
}

uint64_t sub_1B1AEFA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA2E6C, a3);
}

_QWORD *sub_1B1AEFAB8(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC2E08, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AEFAEC);
}

void sub_1B1AEFAEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59920)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleAngleVelocityInit, v2, (uint64_t)&off_1E63AFF10);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59920);
  }
}

uint64_t sub_1B1AEFB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleTextureFrameInit, (uint64_t)&off_1E63AF0B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AEFBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEFBE8);
}

uint64_t sub_1B1AEFBC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE485C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1AA2A54, a3);
}

_QWORD *sub_1B1AEFBE8(_QWORD *a1)
{
  return sub_1B1B070E8(a1, (uint64_t)sub_1B1AE16F8, (uint64_t)sub_1B1EC2C58, (void (*)(unint64_t, uint64_t, double))sub_1B1A73AC4, (uint64_t (*)(_QWORD))sub_1B1AEFC1C);
}

void sub_1B1AEFC1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59928)
  {
    sub_1B1AED5E4(255, (unint64_t *)&qword_1ED4BA5A8, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEB1B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleTextureFrameInit, v2, (uint64_t)&off_1E63AF0B0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59928);
  }
}

char *sub_1B1AEFCA0@<X0>(char *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B1AEFCAC(uint64_t *a1)
{
  return sub_1B1A25580(*a1);
}

uint64_t sub_1B1AEFCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1E638DF90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AEFD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF059C);
}

uint64_t sub_1B1AEFD20@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1E638DF90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83CB8, a2);
}

uint64_t sub_1B1AEFD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF04DC);
}

uint64_t sub_1B1AEFD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1E638DF90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AEFDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF03F0);
}

uint64_t sub_1B1AEFDC0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_BYTE *)(result + 12) == 1)
    *a2 = *(unsigned int *)(result + 8);
  else
    *a2 = 3;
  return result;
}

uint64_t sub_1B1AEFDE4(uint64_t *a1)
{
  return sub_1B1A44AA4(*a1);
}

uint64_t sub_1B1AEFE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB251C(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1E638DF90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A83B88, a2);
}

uint64_t sub_1B1AEFE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB25A8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF02EC);
}

uint64_t sub_1B1AEFE58@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2;

  v2 = *(float *)(result + 8);
  if (*(_BYTE *)(result + 12))
    v2 = 0.0;
  *a2 = v2;
  return result;
}

_DWORD *sub_1B1AEFE74(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 8) = *result;
  *(_BYTE *)(a2 + 12) = 0;
  return result;
}

uint64_t sub_1B1AEFE84@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 12) & 1) == 0;
  return result;
}

uint64_t sub_1B1AEFE98@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_DWORD *)(result + 8) != 0 || (*(_BYTE *)(result + 12) & 1) == 0;
  return result;
}

uint64_t sub_1B1AEFEB8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB21BC(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1E638DF90, a2);
}

uint64_t sub_1B1AEFEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB13A0(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF0190);
}

uint64_t sub_1B1AEFF00@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  if (*(_DWORD *)(result + 8))
    v2 = 0;
  else
    v2 = *(_BYTE *)(result + 12);
  *a2 = v2;
  return result;
}

uint64_t sub_1B1AEFF18@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1E638DF90, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8], a2);
}

uint64_t sub_1B1AEFF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF00A8);
}

uint64_t sub_1B1AEFF70@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1E638DF90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AEFFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AEFFF0);
}

uint64_t sub_1B1AEFFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EF0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9004C, a3);
}

_QWORD *sub_1B1AEFFF0(_QWORD *a1)
{
  return sub_1B1B01E78(a1, (uint64_t)sub_1B1ADFFBC, (void (*)(unint64_t, uint64_t, double))sub_1B1A72A40, (uint64_t (*)(_QWORD))sub_1B1AF001C);
}

void sub_1B1AF001C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59938)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleColorInit, MEMORY[0x1E0DEAFA0], (uint64_t)&off_1E638DF90);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59938);
  }
}

uint64_t sub_1B1AF0080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80A54(a1, a2, v3, (uint64_t (*)(_QWORD))sub_1B1AE1180, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90158, a3);
}

_QWORD *sub_1B1AF00A8(_QWORD *a1)
{
  return sub_1B1AE0D84(a1, (uint64_t)sub_1B1AE0BB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72A40, (uint64_t (*)(_QWORD))sub_1B1AF00DC);
}

void sub_1B1AF00DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1EEF59940)
  {
    sub_1B19F8E54(255, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
    v3 = type metadata accessor for ComponentValueWriter(a1, (uint64_t)&type metadata for ParticleColorInit, v2, (uint64_t)&off_1E638DF90);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EEF59940);
  }
}

uint64_t sub_1B1AF0160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59330, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9024C, a3);
}

uint64_t sub_1B1AF0190(uint64_t a1)
{
  return sub_1B1AF01AC(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A7E784);
}

uint64_t sub_1B1AF01AC(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(**(_QWORD **)(v2 + 16), *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8), *(unsigned __int8 *)(*(_QWORD *)(v2 + 16) + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1B1AF01EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59948)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&type metadata for ColorRamp, (uint64_t)&off_1E638DF90);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59948);
  }
}

uint64_t sub_1B1AF0254(int *a1, uint64_t a2)
{
  initializeBufferWithCopyOfBuffer for QueryScope(a2, a1);
  return a2;
}

uint64_t sub_1B1AF0290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59950, (uint64_t)&type metadata for ParticleColorInit.Mode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90358, a3);
}

double sub_1B1AF02C0()
{
  uint64_t *v0;

  return sub_1B1AADA80(v0[2], v0[3], v0[4], &qword_1EEF59958, (uint64_t)&type metadata for ParticleColorInit.Mode);
}

_QWORD *sub_1B1AF02EC(_QWORD *a1)
{
  return sub_1B1AF0318(a1, (uint64_t)sub_1B1AE65D0, (void (*)(unint64_t, uint64_t, double))sub_1B1A72A40, (uint64_t (*)(_QWORD))sub_1B1AF035C);
}

_QWORD *sub_1B1AF0318(_QWORD *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  return sub_1B1A7C724(a1, **(unsigned int **)(v4 + 16) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 + 16) + 4) << 32), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a2, a3, a4);
}

void sub_1B1AF035C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59960)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&type metadata for ParticleColorInit.Mode, (uint64_t)&off_1E638DF90);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59960);
  }
}

uint64_t sub_1B1AF03C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90464, a3);
}

_QWORD *sub_1B1AF03F0(_QWORD *a1)
{
  return sub_1B1B08044(a1, (uint64_t)sub_1B1ADFCB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72A40, (uint64_t (*)(_QWORD))sub_1B1AF041C);
}

void sub_1B1AF041C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59968)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleColorInit, MEMORY[0x1E0DEB188], (uint64_t)&off_1E638DF90);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59968);
  }
}

uint64_t sub_1B1AF0480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF598B8, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A90570, a3);
}

double sub_1B1AF04B0()
{
  uint64_t *v0;

  return sub_1B1AAD36C(v0[2], v0[3], v0[4], &qword_1EEF598C0, (uint64_t)&type metadata for Composition.Operation);
}

_QWORD *sub_1B1AF04DC(_QWORD *a1)
{
  return sub_1B1B07BDC(a1, (uint64_t)sub_1B1ADFFBC, (void (*)(unint64_t, uint64_t, double))sub_1B1A72A40, (uint64_t (*)(_QWORD))sub_1B1AF0508);
}

void sub_1B1AF0508()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59970)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&type metadata for Composition.Operation, (uint64_t)&off_1E638DF90);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59970);
  }
}

uint64_t sub_1B1AF056C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58F58, MEMORY[0x1E0DEDC60], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A9067C, a3);
}

_QWORD *sub_1B1AF059C(_QWORD *a1)
{
  return sub_1B1B07F58(a1, (uint64_t)sub_1B1ADFE94, (void (*)(unint64_t, uint64_t, double))sub_1B1A72A40, (uint64_t (*)(_QWORD))sub_1B1AF05C8);
}

void sub_1B1AF05C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59978)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for ParticleColorInit, MEMORY[0x1E0DEDC60], (uint64_t)&off_1E638DF90);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59978);
  }
}

uint64_t sub_1B1AF062C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AF065C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF07BC);
}

uint64_t sub_1B1AF067C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A813C4, a2);
}

uint64_t sub_1B1AF06AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF06FC);
}

uint64_t sub_1B1AF06CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF58EE0, MEMORY[0x1E0DEB418], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C190, a3);
}

_QWORD *sub_1B1AF06FC(_QWORD *a1)
{
  return sub_1B1B07F58(a1, (uint64_t)sub_1B1ADFE94, (void (*)(unint64_t, uint64_t, double))sub_1B1A72840, (uint64_t (*)(_QWORD))sub_1B1AF0728);
}

void sub_1B1AF0728()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59980)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for EmitterRuntime, MEMORY[0x1E0DEB418], (uint64_t)&off_1E637F3F8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59980);
  }
}

uint64_t sub_1B1AF078C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, (unint64_t *)&unk_1EEF614A0, MEMORY[0x1E0DEB188], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A8C29C, a3);
}

_QWORD *sub_1B1AF07BC(_QWORD *a1)
{
  return sub_1B1B08044(a1, (uint64_t)sub_1B1ADFCB4, (void (*)(unint64_t, uint64_t, double))sub_1B1A72840, (uint64_t (*)(_QWORD))sub_1B1AF07E8);
}

void sub_1B1AF07E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF59988)
  {
    v0 = type metadata accessor for ComponentValueWriter(0, (uint64_t)&type metadata for EmitterRuntime, MEMORY[0x1E0DEB188], (uint64_t)&off_1E637F3F8);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF59988);
  }
}

int *sub_1B1AF084C@<X0>(int *result@<X0>, _QWORD *a2@<X8>)
{
  if (*((_BYTE *)result + 4) == 1)
    *a2 = qword_1B2279D50[*result];
  else
    *a2 = 5;
  return result;
}

uint64_t sub_1B1AF087C(uint64_t *a1)
{
  return sub_1B1A46F38(*a1);
}

uint64_t sub_1B1AF08A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A8118C, a2);
}

uint64_t sub_1B1AF08D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0D2C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF22E0);
}

uint64_t sub_1B1AF08F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB251C(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A822D0, a2);
}

uint64_t sub_1B1AF0920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB25A8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF2220);
}

uint64_t sub_1B1AF0940@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2;

  v2 = *(float *)result;
  if (*(_BYTE *)(result + 4))
    v2 = 0.0;
  *a2 = v2;
  return result;
}

_DWORD *sub_1B1AF095C(_DWORD *result, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 4) & 1) == 0)
  {
    *(_DWORD *)a2 = *result;
    *(_BYTE *)(a2 + 4) = 0;
  }
  return result;
}

uint64_t sub_1B1AF0974@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 4) & 1) == 0;
  return result;
}

uint64_t sub_1B1AF0988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80F68, a2);
}

uint64_t sub_1B1AF09B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0DD8(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF20F8);
}

_BYTE *sub_1B1AF09D8@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  if (result[4] == 1)
    *a2 = *result & 1;
  else
    *a2 = 1;
  return result;
}

uint64_t sub_1B1AF0A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A82178, a2);
}

uint64_t sub_1B1AF0A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF2018);
}

uint64_t sub_1B1AF0A50@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_DWORD *)result != 0 || (*(_BYTE *)(result + 4) & 1) == 0;
  return result;
}

uint64_t sub_1B1AF0A70@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = qword_1B2279D80[*(char *)(result + 32)];
  return result;
}

_QWORD *sub_1B1AF0A88(_QWORD *result, uint64_t a2)
{
  __int128 v3;
  char v4;

  if (*result == 2)
  {
    *(_OWORD *)(a2 + 16) = xmmword_1B226E570;
    v4 = 1;
  }
  else
  {
    if (*result == 1)
    {
      result = (_QWORD *)sub_1B1BF3ED8(0xAuLL, 0xAuLL, 0xAuLL);
      *(_OWORD *)(a2 + 16) = v3;
      *(_BYTE *)(a2 + 32) = 0;
      return result;
    }
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    v4 = 2;
  }
  *(_BYTE *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_1B1AF0AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1320(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B1A82040, a2);
}

uint64_t sub_1B1AF0B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB13A0(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF1F08);
}

uint64_t sub_1B1AF0B38@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  BOOL v3;

  v3 = *(_BYTE *)(result + 32) != 2 || *(_OWORD *)(result + 16) != 0;
  *a2 = v3;
  return result;
}

uint64_t sub_1B1AF0B58@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 33);
  return result;
}

uint64_t sub_1B1AF0B64(uint64_t *a1)
{
  return sub_1B1A47050(*a1);
}

uint64_t sub_1B1AF0B88@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81F38, a2);
}

uint64_t sub_1B1AF0BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF1DC0);
}

void sub_1B1AF0BD8(uint32x4_t *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;

  v3 = 0uLL;
  if (!a1[1].i8[0])
    *(double *)&v3 = sub_1B1AF1D50(*a1);
  *a2 = v3;
}

void sub_1B1AF0C14(uint32x4_t *a1, uint64_t a2)
{
  __int128 v3;

  if (!*(_BYTE *)(a2 + 16))
  {
    *(double *)&v3 = sub_1B1AF1D50(*a1);
    *(_OWORD *)a2 = v3;
    *(_BYTE *)(a2 + 16) = 0;
  }
}

uint64_t sub_1B1AF0C48@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 32) == 0;
  return result;
}

uint64_t sub_1B1AF0C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB11E8(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81DC4, a2);
}

uint64_t sub_1B1AF0C8C(uint64_t result)
{
  return sub_1B1AB1274(result);
}

void sub_1B1AF0C94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B8168)
  {
    sub_1B19F8E54(255, (unint64_t *)&unk_1ED4BB0B0, (uint64_t (*)(void))sub_1B1AF0D08, MEMORY[0x1E0DEE0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B8168);
  }
}

unint64_t sub_1B1AF0D08()
{
  unint64_t result;

  result = qword_1ED4BB108;
  if (!qword_1ED4BB108)
  {
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEE140], MEMORY[0x1E0DEE0F8]);
    atomic_store(result, (unint64_t *)&qword_1ED4BB108);
  }
  return result;
}

uint64_t sub_1B1AF0D4C@<X0>(uint64_t result@<X0>, int *a2@<X8>)
{
  int v2;

  v2 = *(_DWORD *)result;
  if (*(_DWORD *)result <= 1u)
    v2 = 1;
  if (*(_BYTE *)(result + 16) != 1)
    v2 = 0;
  *a2 = v2;
  return result;
}

_DWORD *sub_1B1AF0D6C(_DWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a2 + 16) == 1)
  {
    LODWORD(v2) = *result;
    if (*result <= 1u)
      v2 = 1;
    else
      v2 = v2;
    *(_QWORD *)a2 = v2;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 1;
  }
  return result;
}

uint64_t sub_1B1AF0D94@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 32) == 1;
  return result;
}

uint64_t sub_1B1AF0DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2790(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A812A8, a2);
}

uint64_t sub_1B1AF0DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB113C(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF1A98);
}

uint64_t sub_1B1AF0DF8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81084, a2);
}

uint64_t sub_1B1AF0E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF19D8);
}

uint64_t sub_1B1AF0E4C(uint64_t *a1)
{
  return sub_1B1A470D8(*a1);
}

uint64_t sub_1B1AF0E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1320(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B1A81C8C, a2);
}

uint64_t sub_1B1AF0E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB13A0(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF1904);
}

uint64_t sub_1B1AF0EB0@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;

  v2 = 0uLL;
  if (!*(_BYTE *)(result + 64))
    v2 = *(_OWORD *)(result + 48);
  *a2 = v2;
  return result;
}

_QWORD *sub_1B1AF0ED8(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (!*(_BYTE *)(a2 + 64))
  {
    v2 = result[1];
    *(_QWORD *)(a2 + 48) = *result;
    *(_QWORD *)(a2 + 56) = v2;
    *(_BYTE *)(a2 + 64) = 0;
  }
  return result;
}

uint64_t sub_1B1AF0EF4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 64) == 0;
  return result;
}

uint64_t sub_1B1AF0F08@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2814(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50], a2);
}

uint64_t sub_1B1AF0F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB2238(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF17EC);
}

uint64_t sub_1B1AF0F60@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;

  v2 = 0uLL;
  if (*(_BYTE *)(result + 64) == 1)
    v2 = *(_OWORD *)(result + 48);
  *a2 = v2;
  return result;
}

_QWORD *sub_1B1AF0F84(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a2 + 64) == 1)
  {
    v2 = result[1];
    *(_QWORD *)(a2 + 48) = *result;
    *(_QWORD *)(a2 + 56) = v2;
    *(_BYTE *)(a2 + 64) = 1;
  }
  return result;
}

uint64_t sub_1B1AF0FA4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 64) == 1;
  return result;
}

uint64_t sub_1B1AF0FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB1320(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B1A81B20, a2);
}

uint64_t sub_1B1AF0FD8(uint64_t result)
{
  return sub_1B1AB1088(result);
}

void sub_1B1AF0FE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Set;
  uint64_t v6;

  if (!qword_1ED4B8068)
  {
    sub_1B1A02758(255, &qword_1ED4B8010, (uint64_t)&type metadata for EmitterShape.Direction, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    Set = type metadata accessor for EntityGetSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Set, (unint64_t *)&qword_1ED4B8068);
  }
}

int8x16_t sub_1B1AF104C@<Q0>(int8x16_t *a1@<X0>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  int8x16_t result;

  a3.i32[0] = 0;
  a4.i8[0] = a1[6].i8[0];
  result = vandq_s8(a1[5], vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(a4, a3), 0));
  *a2 = result;
  return result;
}

_QWORD *sub_1B1AF1074(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (!*(_BYTE *)(a2 + 96))
  {
    v2 = result[1];
    *(_QWORD *)(a2 + 80) = *result;
    *(_QWORD *)(a2 + 88) = v2;
    *(_BYTE *)(a2 + 96) = 0;
  }
  return result;
}

uint64_t sub_1B1AF1090@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 96) == 0;
  return result;
}

int8x16_t sub_1B1AF10A4@<Q0>(int8x16_t *a1@<X0>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  int8x16_t result;

  a3.i8[0] = a1[6].i8[0];
  a4.i32[0] = 1;
  result = vandq_s8(a1[5], vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(a3, a4), 0));
  *a2 = result;
  return result;
}

_QWORD *sub_1B1AF10D0(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(a2 + 96) == 1)
  {
    v2 = result[1];
    *(_QWORD *)(a2 + 80) = *result;
    *(_QWORD *)(a2 + 88) = v2;
    *(_BYTE *)(a2 + 96) = 1;
  }
  return result;
}

uint64_t sub_1B1AF10F0@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 96) == 1;
  return result;
}

uint64_t sub_1B1AF1104@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 97);
  return result;
}

uint64_t sub_1B1AF1110(uint64_t *a1)
{
  return sub_1B1A47414(*a1);
}

uint64_t sub_1B1AF1134@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81A18, a2);
}

uint64_t sub_1B1AF1164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF1488);
}

uint64_t sub_1B1AF1184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB0CA4(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A80D1C, a2);
}

uint64_t sub_1B1AF11B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0FDC(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF139C);
}

uint64_t sub_1B1AF11D4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_DWORD *)(result + 152) != -1 || *(_DWORD *)(result + 156) != 0;
  return result;
}

uint64_t sub_1B1AF1200@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(char *)(result + 160);
  return result;
}

uint64_t sub_1B1AF120C(uint64_t *a1)
{
  return sub_1B1A47434(*a1);
}

uint64_t sub_1B1AF1230@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1B1AB2948(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1E63752C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1A81910, a2);
}

uint64_t sub_1B1AF1260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1AB0E84(a1, a2, a3, v3, (void (*)(_BYTE *))sub_1B1AF12DC);
}

uint64_t sub_1B1AF1280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B1A80914(a1, a2, v3, &qword_1EEF59490, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B1A889F8, a3);
}

