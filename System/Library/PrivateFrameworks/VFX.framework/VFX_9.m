void sub_1B1C82FCC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6389DD8;
}

uint64_t sub_1B1C82FDC()
{
  sub_1B1C87AB8();
  return sub_1B2228A70();
}

uint64_t sub_1B1C83038()
{
  sub_1B1C87AB8();
  return sub_1B22289F8();
}

uint64_t sub_1B1C83084(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (result)
  {
    v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    if (-result < 1)
    {
      v4 = 0;
      if (-result < -v2)
      {
LABEL_9:
        v3 = v4;
        return sub_1B1C92AF8(v3, v2);
      }
    }
    else if (!v2)
    {
      v3 = 0;
      return sub_1B1C92AF8(v3, v2);
    }
    v4 = v2 - result;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1B1C830C8(uint64_t result)
{
  if (result)
  {
    sub_1B2228854();
    return sub_1B22287E8();
  }
  return result;
}

uint64_t sub_1B1C83134(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float v16;
  float v17;
  float v18;
  int v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;

  v3 = v2;
  v6 = v2 + 7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *v6;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B1C92C04(0, *(_QWORD *)(v8 + 16));
  }
  else
  {
    *v6 = (uint64_t)sub_1B1B1C7F0(0, *(_QWORD *)(v8 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  v9 = *v6;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v9;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v9 + 24) >> 1)
  {
    if (*(_QWORD *)(v9 + 16) <= a1)
      v11 = a1;
    else
      v11 = *(_QWORD *)(v9 + 16);
    result = (uint64_t)sub_1B1C62EF0(result, v11, 0, (char *)v9);
    v9 = result;
  }
  v3[7] = v9;
  v12 = v3[6];
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    v31 = v3;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B1FFEEAC(v12);
      v12 = result;
    }
    v14 = 0;
    v15 = v12 + 32;
    while (1)
    {
      v16 = *(float *)(v15 + 4 * v14);
      v17 = v16 + 0.0;
      v18 = truncf(v16);
      v19 = LODWORD(v16) & 0x7F800000;
      if ((LODWORD(v16) & 0x7F800000) == 0x7F800000)
        v20 = 0.0;
      else
        v20 = v16 - v18;
      if (v19 != 2139095040)
        v17 = v18;
      *(float *)(v15 + 4 * v14) = v20;
      v21 = (uint64_t)v17;
      if ((uint64_t)v17)
      {
        v22 = *v6;
        v23 = *(_QWORD *)(*v6 + 16);
        if (v23 == a1)
        {
LABEL_28:
          v31[6] = v12;
          return result;
        }
        result = swift_isUniquelyReferenced_nonNull_native();
        *v6 = v22;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1B1C62EF0(0, v23 + 1, 1, (char *)v22);
          v22 = result;
        }
        while (1)
        {
          *v6 = v22;
          v25 = *(_QWORD *)(v22 + 16);
          v24 = *(_QWORD *)(v22 + 24);
          v26 = v25 + 1;
          if (v25 >= v24 >> 1)
          {
            result = (uint64_t)sub_1B1C62EF0(v24 > 1, v25 + 1, 1, (char *)v22);
            v22 = result;
          }
          *(_QWORD *)(v22 + 16) = v26;
          *(_DWORD *)(v22 + 4 * v25 + 32) = v14;
          *v6 = v22;
          if (!--v21)
            break;
          if (v26 == a1)
            goto LABEL_28;
        }
      }
      if (++v14 == v13)
        goto LABEL_28;
    }
  }
  if (a1)
  {
    v27 = *(_QWORD *)(a2 + 72);
    v28 = *(_QWORD *)(*v3 + 16);
    do
    {
      *v6 = v9;
      v30 = *(_QWORD *)(v9 + 16);
      v29 = *(_QWORD *)(v9 + 24);
      if (v30 >= v29 >> 1)
      {
        result = (uint64_t)sub_1B1C62EF0(v29 > 1, v30 + 1, 1, (char *)v9);
        v9 = result;
      }
      *(_QWORD *)(v9 + 16) = v30 + 1;
      *(_DWORD *)(v9 + 4 * v30 + 32) = v27 % v28;
      *v6 = v9;
      ++v27;
      --a1;
    }
    while (a1);
  }
  return result;
}

double sub_1B1C83394@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = v1;
  *(_QWORD *)(a1 + 48) = v1;
  *(_QWORD *)(a1 + 56) = v1;
  return result;
}

uint64_t sub_1B1C833B8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unsigned int *v3;
  unsigned int *v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int *v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  uint64_t result;

  v4 = v3;
  v8 = *(_QWORD *)a3;
  v9 = *(_DWORD *)(a3 + 36);
  v10 = *(int *)(a3 + 32);
  swift_retain();
  v11 = (_DWORD)v10 == -1 && v9 == 0;
  if (!v11 && (v10 & 0x80000000) == 0 && *(_QWORD *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v10)
  {
    v12 = *(_QWORD *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v9 == -1 || *(_DWORD *)(v12 + 12 * (int)v10 + 8) == v9)
    {
      v14 = (int *)(v12 + 12 * (int)v10);
      v15 = *(_QWORD *)(*(_QWORD *)(v8 + 136) + 8 * *v14 + 32);
      v16 = *((_WORD *)v14 + 2);
      swift_retain();
      sub_1B1BEE528(a3);
      v17 = sub_1B1FE7978(v15, v16, 656, v8, a3, v4, a2, a1);
      sub_1B1B4F21C(a3);
      swift_release();
      if ((v17 & 1) != 0)
        return swift_release();
    }
  }
  sub_1B2229430();
  sub_1B2228890();
  sub_1B1BC3C70();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  result = sub_1B2229688();
  __break(1u);
  return result;
}

void sub_1B1C835D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, _QWORD *a5, uint64_t a6)
{
  void *v6;
  void *v7;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  int32x4_t v33;
  int32x4_t v34;
  int32x4_t v35;
  int32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  int32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  int32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int32x4_t v50;
  int32x4_t v51;
  int8x16_t v52;
  float32x4_t v53;
  int32x4_t v54;
  float v55;
  float32x4_t v56;
  float v57;
  float32x4_t v58;
  float32x4_t v59;
  float32x4_t v60;
  int8x16_t v62;
  int8x16_t v63;
  float v64;
  float32x2_t v65;
  float32x2_t v66;
  float32x2_t v67;
  uint64_t v68;
  int32x2_t v69;
  float32x4_t v70;
  float32x2_t v71;
  float32x2_t v72;
  float v73;
  float v74;
  __int128 v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  int v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  os_unfair_lock_s *v85;
  uint64_t v86;
  uint64_t v87;
  float32x4_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD *v93;
  uint64_t v94;
  int v95;
  float32x4_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v113;
  uint64_t v114;
  float32x4_t v115;
  uint64_t v116;
  uint64_t v117;
  float32x4_t v118;
  uint64_t v119;
  uint64_t v120;
  float32x4_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void *v126;
  _QWORD v127[8];
  char v128;
  _QWORD v129[8];
  char v130;
  uint64_t v131[12];
  _OWORD v132[2];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  char v146;
  _OWORD v147[4];
  char v148;
  _OWORD v149[2];
  uint64_t v150;
  _OWORD v151[2];
  uint64_t v152;
  _OWORD v153[2];
  uint64_t v154;
  _BYTE v155[40];
  _QWORD v156[10];
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[8];
  char v162;

  v7 = v6;
  v10 = *(_OWORD *)(a1 + 8);
  v11 = *(_OWORD *)(a1 + 24);
  v12 = a4[1];
  v13 = (int)*a4;
  if ((_DWORD)v13 == -1 && (_DWORD)v12 == 0)
  {
LABEL_15:
    v108 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v20 = 0;
    v22 = 0;
    v21 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 1;
    goto LABEL_40;
  }
  v108 = 0;
  if ((v13 & 0x80000000) != 0 || *(_QWORD *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v13)
  {
    v24 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v20 = 0;
    v22 = 0;
    v21 = 0;
    v23 = 0;
    v25 = 1;
    goto LABEL_40;
  }
  if ((_DWORD)v12 != -1
    && *(_DWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v13 + 8) != (_DWORD)v12)
  {
    goto LABEL_15;
  }
  v123 = a6;
  v89 = *(_OWORD *)(a1 + 24);
  v91 = *(_OWORD *)(a1 + 8);
  v16 = *a4;
  v17 = *(unsigned int *)(a3 + 32) | ((unint64_t)*(unsigned int *)(a3 + 36) << 32);
  swift_retain();
  sub_1B1FE7420(v17, a2, a2, v17, (uint64_t)v127);
  v18 = v7;
  v19 = v127[0];
  v113 = v127[1];
  v107 = v127[3];
  v109 = v127[2];
  v104 = v127[5];
  v106 = v127[4];
  v100 = v127[7];
  v102 = v127[6];
  v98 = v128;
  swift_release();
  swift_retain();
  sub_1B1FE76A4(v16 | (v12 << 32), a2, a2, v16 | (v12 << 32), (uint64_t)v129);
  v125 = v18;
  v120 = v129[0];
  v117 = v129[1];
  v20 = v129[3];
  v114 = v129[2];
  v22 = v129[4];
  v21 = v129[5];
  v23 = v129[6];
  v24 = v129[7];
  v25 = v130;
  swift_release();
  sub_1B1AE09AC((uint64_t)v127, (uint64_t)v147);
  if ((v148 & 1) != 0)
  {
    sub_1B1AE09AC((uint64_t)v129, (uint64_t)&v142);
    if ((v146 & 1) != 0)
    {
      v108 = 0;
      v11 = v89;
      v10 = v91;
      a6 = v123;
      v7 = v125;
      v26 = v120;
      v27 = v117;
      v28 = v114;
      goto LABEL_40;
    }
    v26 = v120;
    v29.i64[0] = v120;
    v27 = v117;
    v29.i64[1] = v117;
    v28 = v114;
    v30.i64[0] = v114;
    v30.i64[1] = v20;
    v31.i64[0] = v22;
    v31.i64[1] = v21;
  }
  else
  {
    v96 = (float32x4_t)v147[0];
    v115 = (float32x4_t)v147[1];
    v118 = (float32x4_t)v147[2];
    v121 = (float32x4_t)v147[3];
    sub_1B1AE09AC((uint64_t)v129, (uint64_t)&v142);
    if ((v146 & 1) != 0)
    {
      v29.i64[0] = v19;
      v27 = v113;
      v29.i64[1] = v113;
      v20 = v107;
      v28 = v109;
      v30.i64[0] = v109;
      v30.i64[1] = v107;
      v21 = v104;
      v22 = v106;
      v31.i64[0] = v106;
      v26 = v19;
      v31.i64[1] = v104;
      v24 = v100;
      v23 = v102;
      v25 = v98;
    }
    else
    {
      v25 = 0;
      v29 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v142.f32[0]), v115, *(float32x2_t *)v142.f32, 1), v118, v142, 2), v121, v142, 3);
      v30 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v143.f32[0]), v115, *(float32x2_t *)v143.f32, 1), v118, v143, 2), v121, v143, 3);
      v31 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v144.f32[0]), v115, *(float32x2_t *)v144.f32, 1), v118, v144, 2), v121, v144, 3);
      v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v96, v145.f32[0]), v115, *(float32x2_t *)v145.f32, 1), v118, v145, 2), v121, v145, 3);
      v27 = v29.i64[1];
      v26 = v29.i64[0];
      v20 = v30.i64[1];
      v28 = v30.i64[0];
      v21 = v31.i64[1];
      v22 = v31.i64[0];
      v24 = v32.i64[1];
      v23 = v32.i64[0];
    }
  }
  v11 = v89;
  v10 = v91;
  a6 = v123;
  v33 = (int32x4_t)vmulq_f32(v29, v29);
  v34 = (int32x4_t)vmulq_f32(v30, v30);
  v35 = (int32x4_t)vmulq_f32(v31, v31);
  v36 = vzip2q_s32(v33, v35);
  v37 = (float32x4_t)vzip1q_s32(vzip1q_s32(v33, v35), v34);
  v38 = (float32x4_t)vtrn2q_s32(v33, v34);
  v38.i32[2] = v35.i32[1];
  v39 = vaddq_f32((float32x4_t)vzip1q_s32(v36, vdupq_laneq_s32(v34, 2)), vaddq_f32(v37, v38));
  v38.i64[0] = 0x80000000800000;
  v38.i64[1] = 0x80000000800000;
  v40 = vcgeq_f32(v38, v39);
  v39.i32[3] = 0;
  v41 = vrsqrteq_f32(v39);
  v42 = vmulq_f32(v41, vrsqrtsq_f32(v39, vmulq_f32(v41, v41)));
  v43 = v40;
  v43.i32[3] = 0;
  v44 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v43), (int8x16_t)v39, (int8x16_t)vmulq_f32(v42, vrsqrtsq_f32(v39, vmulq_f32(v42, v42))));
  v45 = vmulq_n_f32(v29, v44.f32[0]);
  v46 = vmulq_lane_f32(v30, *(float32x2_t *)v44.f32, 1);
  v47 = vmulq_laneq_f32(v31, v44, 2);
  v48 = (int8x16_t)vuzp1q_s32((int32x4_t)v47, (int32x4_t)v47);
  v49 = (int8x16_t)vuzp1q_s32((int32x4_t)v46, (int32x4_t)v46);
  v50 = (int32x4_t)v45;
  if (v40.i32[0])
  {
    v51 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v48, (int8x16_t)v47, 0xCuLL), vnegq_f32(v46)), v47, (float32x4_t)vextq_s8(v49, (int8x16_t)v46, 0xCuLL));
    v50 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v51, v51), (int8x16_t)v51, 0xCuLL);
  }
  v52 = (int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45);
  v53 = v46;
  v7 = v125;
  if (v40.i32[1])
  {
    v54 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v52, (int8x16_t)v45, 0xCuLL), vnegq_f32(v47)), v45, (float32x4_t)vextq_s8(v48, (int8x16_t)v47, 0xCuLL));
    v53 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v54, v54), (int8x16_t)v54, 0xCuLL);
  }
  if (v40.i32[2])
  {
    v40 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v49, (int8x16_t)v46, 0xCuLL), vnegq_f32(v45)), v46, (float32x4_t)vextq_s8(v52, (int8x16_t)v45, 0xCuLL));
    v47 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v40, v40), (int8x16_t)v40, 0xCuLL);
  }
  v55 = (float)(*(float *)v50.i32 + v53.f32[1]) + v47.f32[2];
  if (v55 > 0.0)
  {
    v56 = (float32x4_t)vzip2q_s32((int32x4_t)v53, vuzp1q_s32((int32x4_t)v53, (int32x4_t)v47));
    v56.i32[2] = v50.i32[1];
    v57 = sqrtf(v55 + 1.0);
    v58 = (float32x4_t)vtrn2q_s32((int32x4_t)v47, vzip2q_s32((int32x4_t)v47, v50));
    v58.i32[2] = v53.i32[0];
    v60 = vsubq_f32(v56, v58);
    v56.f32[3] = v57;
    v58.f32[3] = v57;
    v59 = vmulq_f32(v56, v58);
    v60.i32[3] = v59.i32[3];
LABEL_38:
    v59.f32[0] = 0.5 / v57;
    v70 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v59.f32, 0);
    goto LABEL_39;
  }
  if (*(float *)v50.i32 < v53.f32[1] || *(float *)v50.i32 < v47.f32[2])
  {
    if (v53.f32[1] <= v47.f32[2])
    {
      v57 = sqrtf((float)((float)(v47.f32[2] + 1.0) - *(float *)v50.i32) - v53.f32[1]);
      *(float32x2_t *)v60.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v50, (int32x4_t)v53), *(float32x2_t *)v47.f32);
      v71 = (float32x2_t)__PAIR64__(v50.u32[1], LODWORD(v57));
      v72 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v53.f32, 0);
      *(float32x2_t *)v59.f32 = vsub_f32(*(float32x2_t *)v50.i8, v72);
      v72.f32[0] = v57;
      v72.i32[0] = vmul_f32(v71, v72).u32[0];
      v72.i32[1] = v59.i32[1];
      *(float32x2_t *)&v60.u32[2] = v72;
      goto LABEL_38;
    }
    v64 = sqrtf((float)((float)(v53.f32[1] + 1.0) - *(float *)v50.i32) - v47.f32[2]);
    *(int32x2_t *)v40.i8 = vdup_laneq_s32((int32x4_t)v53, 2);
    v62 = (int8x16_t)v40;
    *(float *)v62.i32 = v64;
    v62.i32[0] = vmul_f32(*(float32x2_t *)v62.i8, (float32x2_t)__PAIR64__(v47.u32[1], LODWORD(v64))).u32[0];
    v62.i32[1] = vadd_f32(*(float32x2_t *)&v40, *(float32x2_t *)&v47).i32[1];
    v63 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v50.i8, 1), v53);
    v69 = (int32x2_t)vsubq_f32(v47, (float32x4_t)vdupq_laneq_s32(v50, 2)).u64[0];
    v70 = (float32x4_t)vextq_s8(vextq_s8(v63, v63, 4uLL), v62, 0xCuLL);
    v70.i32[3] = v69.i32[0];
  }
  else
  {
    v64 = sqrtf((float)((float)(*(float *)v50.i32 + 1.0) - v53.f32[1]) - v47.f32[2]);
    v65 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v53.f32, 0);
    v66 = vadd_f32(*(float32x2_t *)v50.i8, v65);
    v65.f32[0] = v64;
    v70.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v50.u32[1], LODWORD(v64)), v65).u32[0];
    v70.i32[1] = v66.i32[1];
    v67 = (float32x2_t)vzip2q_s32(v50, (int32x4_t)v53).u64[0];
    LODWORD(v68) = vadd_f32(v67, *(float32x2_t *)v47.f32).u32[0];
    v69 = (int32x2_t)vsub_f32(v67, *(float32x2_t *)v47.f32);
    HIDWORD(v68) = v69.i32[1];
    v70.i64[1] = v68;
  }
  *(float *)v69.i32 = 0.5 / v64;
  v60 = (float32x4_t)vdupq_lane_s32(v69, 0);
LABEL_39:
  v108 = vmulq_f32(v60, v70).u8[0];
LABEL_40:
  v161[0] = v26;
  v161[1] = v27;
  v161[2] = v28;
  v161[3] = v20;
  v161[4] = v22;
  v161[5] = v21;
  v161[6] = v23;
  v161[7] = v24;
  v162 = v25;
  if (!*(_QWORD *)(*a5 + 16))
  {
LABEL_54:
    *(_OWORD *)(a1 + 8) = v10;
    *(_OWORD *)(a1 + 24) = v11;
    return;
  }
  v90 = v11;
  v92 = v10;
  v105 = *((unsigned __int8 *)a4 + 20);
  v101 = *(_QWORD *)(a6 + 96);
  v103 = *(_QWORD *)(a6 + 88);
  sub_1B1E5267C();
  v74 = v73;
  v75 = *(_OWORD *)(a3 + 104);
  v153[0] = *(_OWORD *)(a3 + 88);
  v153[1] = v75;
  v154 = *(_QWORD *)(a3 + 120);
  sub_1B1E8FCE4(a2, (uint64_t)v153, 0x200000000, v131);
  sub_1B1A18378((uint64_t)v131, (uint64_t)v132, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v132[0])
  {
LABEL_53:
    v11 = v90;
    v10 = v92;
    goto LABEL_54;
  }
  v139 = v132[0];
  v140 = v132[1];
  v141 = v133;
  v99 = v138;
  if (v138 < 1 || (v76 = v135) == 0)
  {
LABEL_52:
    sub_1B19ED748(v131);
    goto LABEL_53;
  }
  v77 = v137;
  v78 = v137[4];
  v97 = v136;
  v79 = *(unsigned __int8 *)(v136 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v93 = v137 + 8;
  v94 = (uint64_t)(v137 + 6);
  v80 = (uint64_t *)(v134 + 24);
  v95 = v79;
  while (1)
  {
    v124 = v76;
    v126 = v7;
    v82 = *((unsigned int *)v80 - 6);
    v81 = *((unsigned int *)v80 - 5);
    v83 = *((unsigned int *)v80 - 4);
    v84 = v80[2];
    v122 = *(v80 - 1);
    v119 = *v80;
    v116 = v80[1];
    if (v79)
    {
      v85 = *(os_unfair_lock_s **)(v84 + 376);
      swift_retain();
      os_unfair_lock_lock(v85);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v84 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v78);
    sub_1B1A18378(v94, (uint64_t)v155, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v86 = v77[4];
    v87 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v84 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v77[6] = ecs_stack_allocator_allocate(v86, 48 * v87, 8);
    v77[7] = v87;
    v93[1] = 0;
    v93[2] = 0;
    *v93 = 0;
    swift_release();
    v156[0] = v97;
    v156[1] = v84;
    v156[2] = v77;
    v156[3] = v83;
    v156[4] = (v81 - v82 + v83);
    v156[5] = v99;
    v156[6] = v82;
    v156[7] = v81;
    v156[8] = 0;
    v156[9] = 0;
    v157 = 1;
    v158 = v122;
    v159 = v119;
    v160 = v116;
    sub_1B1C83EC8((uint64_t)v156, v103, v101, a5, v105 == 2, (_QWORD *)a1, (uint64_t)v161, (uint64_t)a4, v74, v88, v108);
    if (v126)
      break;
    v151[0] = v139;
    v151[1] = v140;
    v152 = v141;
    sub_1B1F05D48(v77, (unsigned __int16 **)v151, (uint64_t)v155);
    v7 = 0;
    sub_1B1F03804((char *)v84);
    ecs_stack_allocator_pop_snapshot(v78);
    v79 = v95;
    if (v95)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 376));
    }
    swift_release();
    v80 += 6;
    v76 = v124 - 1;
    if (v124 == 1)
      goto LABEL_52;
  }

  v149[0] = v139;
  v149[1] = v140;
  v150 = v141;
  sub_1B1F05D48(v77, (unsigned __int16 **)v149, (uint64_t)v155);
  sub_1B1F03804((char *)v84);
  ecs_stack_allocator_pop_snapshot(v78);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 376));
  __break(1u);
}

uint64_t sub_1B1C83EC8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, char a5, _QWORD *a6, uint64_t a7, uint64_t a8, float a9, float32x4_t a10, char a11)
{
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t result;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  uint64_t v54;
  uint64_t v56;
  float32x4_t v57;
  float32x4_t v58;
  uint64_t v59;
  int32x4_t v61;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  __int32 v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  float v80;
  uint64_t v82;
  int v83;
  char v85;
  uint64_t v86;
  char v87;
  char v88;
  int v89;
  char v91;
  float32x4_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102[4];
  char v103;
  float32x4_t v104[4];
  char v105;
  float32x4_t v106[4];
  char v107;
  float32x4_t v108[4];
  char v109;
  uint64_t v110;

  v17 = sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, *(uint64_t **)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 16));
  v18 = sub_1B1B47CE8();
  v91 = v19;
  v99 = sub_1B1B47B28();
  v21 = v20;
  v96 = sub_1B1B47D58();
  v87 = v22;
  v93 = sub_1B1B47DC8();
  v78 = v23;
  v82 = sub_1B1B47E38();
  v75 = v24;
  v79 = sub_1B1B47EA8();
  v88 = v25;
  result = sub_1B1B47C78();
  v28 = *(_QWORD *)(a1 + 24);
  v29 = *(_QWORD *)(a1 + 32);
  if (v28 <= a2)
    v30 = a2;
  else
    v30 = *(_QWORD *)(a1 + 24);
  if (v29 >= a3)
    v29 = a3;
  if (v29 >= v30)
  {
    v110 = v29 - v30;
    if (v29 != v30)
    {
      v31 = v27;
      v32 = v17;
      v33 = 0;
      v34 = *(_QWORD *)(a1 + 48) - v28 + v30;
      v98 = *(_BYTE *)(a8 + 12);
      v97 = *(_BYTE *)(a8 + 15);
      v35 = v18;
      v36 = *(_BYTE *)(a8 + 14);
      v37 = a4[2];
      v95 = v37;
      v86 = v37 + 32;
      v85 = *(_BYTE *)(a8 + 13);
      _S9 = a10.i32[3];
      v39 = (v37 == 0) | v91;
      v77 = v79 + 16 * v34;
      v40 = v32 + 16 * v34;
      v41 = a4[7] - 4 * a2 + 4 * v30 + 32;
      v74 = v35 + 16 * v34;
      v76 = v99 + 16 * v34;
      v70 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a10, (int32x4_t)a10), (int8x16_t)a10, 0xCuLL);
      v71 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a10, 3);
      v69 = vnegq_f32(a10);
      v73 = v96 + 4 * v34;
      v68 = v93 + 8 * v34;
      v67 = v82 + 16 * v34;
      v94 = result + 4 * v34;
      v83 = v88 & 1;
      v89 = v21 & 1;
      while (1)
      {
        v43 = *(int *)(v41 + 4 * v33);
        if ((v39 & 1) != 0 || *(_QWORD *)(v95 + 16) <= v43)
        {
          v101 = *(float32x4_t *)(*a4 + 16 * v43 + 32);
          result = sub_1B1AE09AC(a7, (uint64_t)v108);
          if ((v109 & 1) != 0)
          {
            v49 = v101;
            v49.i32[3] = 1.0;
            *(float32x4_t *)(v40 + 16 * v33) = v49;
            if ((v98 & 1) != 0)
              goto LABEL_31;
          }
          else
          {
            v50 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v108[3], v108[2], v101, 2), v108[1], *(float32x2_t *)v101.f32, 1), v108[0], v101.f32[0]);
            v50.i32[3] = 1.0;
            *(float32x4_t *)(v40 + 16 * v33) = v50;
            if ((v98 & 1) != 0)
              goto LABEL_31;
          }
          goto LABEL_38;
        }
        v100 = *(float32x4_t *)(v86 + 16 * v43);
        v92 = *(float32x4_t *)(*a4 + 16 * v43 + 32);
        if ((a5 & 1) != 0)
        {
          v45 = a6[1];
          v44 = a6[2];
          v46 = a6[3] ^ v45;
          v47 = a6[4] ^ v44;
          a6[1] = v47 ^ v45;
          a6[2] = v46 ^ v44;
          a6[3] = v46 ^ (v44 << 17);
          a6[4] = __ROR8__(v47, 19);
          v80 = (float)((float)((9 * ((((unint64_t)(5 * v44) >> 32) >> 25) | (640 * v44))) & 0xFFFFFF)
                      * 0.000000059605)
              * a9;
          result = sub_1B1AE09AC(a7, (uint64_t)v104);
          if ((v105 & 1) != 0)
          {
            v48 = vaddq_f32(v92, vmulq_n_f32(v100, v80));
          }
          else
          {
            v51 = vaddq_f32(v92, vmulq_n_f32(v100, v80));
            v48 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v104[3], v104[2], v51, 2), v104[1], *(float32x2_t *)v51.f32, 1), v104[0], v51.f32[0]);
          }
        }
        else
        {
          result = sub_1B1AE09AC(a7, (uint64_t)v106);
          if ((v107 & 1) != 0)
          {
            v48 = v92;
          }
          else
          {
            v52 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v106[3], v106[2], v92, 2), v106[1], *(float32x2_t *)v92.f32, 1), v106[0], v92.f32[0]);
            v52.i32[3] = v72;
            v48 = v52;
          }
        }
        v48.i32[3] = 1.0;
        *(float32x4_t *)(v40 + 16 * v33) = v48;
        if ((v85 & 1) == 0)
          goto LABEL_30;
        result = sub_1B1AE09AC(a7, (uint64_t)v102);
        if ((v103 & 1) != 0)
          break;
        v57 = vmulq_n_f32(v100, *(float *)(a8 + 16));
        v58 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v102[2], v57, 2), v102[1], *(float32x2_t *)v57.f32, 1), v102[0], v57.f32[0]);
        v58.i32[3] = 0;
        *(float32x4_t *)(v74 + 16 * v33) = v58;
        if ((v98 & 1) != 0)
        {
LABEL_31:
          v54 = a4[3];
          if (v54)
          {
            if (*(_QWORD *)(v54 + 16) && v89 == 0)
              *(_OWORD *)(v76 + 16 * v33) = *(_OWORD *)(v54 + 16 * v43 + 32);
          }
        }
LABEL_38:
        if ((v97 & 1) != 0)
        {
          v56 = a4[4];
          if (v56)
          {
            if (*(_QWORD *)(v56 + 16))
            {
              if ((v87 & 1) != 0)
              {
                if ((v78 & 1) != 0)
                {
                  if ((v75 & 1) == 0)
                    *(_OWORD *)(v67 + 16 * v33) = *(_OWORD *)(v56 + 16 * v43 + 32);
                }
                else
                {
                  *(_QWORD *)(v68 + 8 * v33) = *(_QWORD *)(v56 + 16 * v43 + 32);
                }
              }
              else
              {
                *(_DWORD *)(v73 + 4 * v33) = *(_DWORD *)(v56 + 16 * v43 + 32);
              }
            }
          }
        }
        if ((v36 & 1) != 0)
        {
          v59 = a4[1];
          if (v59)
          {
            if (*(_QWORD *)(v59 + 16) && !v83)
            {
              _Q0 = *(float32x4_t *)(v59 + 16 * v43 + 32);
              if ((a11 & 1) == 0)
              {
                v61 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL), v69), _Q0, v70);
                __asm { FMLA            S2, S9, V0.S[3] }
                _Q0 = vaddq_f32(vmlaq_f32(vmulq_laneq_f32(a10, _Q0, 3), v71, _Q0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v61, v61), (int8x16_t)v61, 0xCuLL));
                _Q0.i32[3] = _S2;
              }
              *(float32x4_t *)(v77 + 16 * v33) = _Q0;
            }
          }
        }
        if ((v31 & 1) == 0)
        {
          v66 = a4[5];
          if (*(_QWORD *)(v66 + 16) > v43)
            v42 = *(_DWORD *)(v66 + 4 * v43 + 32);
          else
            v42 = 0;
          *(_DWORD *)(v94 + 4 * v33) = v42;
        }
        if (v110 == ++v33)
          return result;
      }
      v53 = vmulq_n_f32(v100, *(float *)(a8 + 16));
      v53.i32[3] = 0;
      *(float32x4_t *)(v74 + 16 * v33) = v53;
LABEL_30:
      if ((v98 & 1) != 0)
        goto LABEL_31;
      goto LABEL_38;
    }
  }
  return result;
}

uint64_t sub_1B1C844B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C844F4 + 4 * byte_1B22873B0[a1]))(0x6E45746E65726170, 0xEC00000079746974);
}

uint64_t sub_1B1C844F4()
{
  return 0x6C696261626F7270;
}

uint64_t sub_1B1C84514()
{
  return 0x4374697265686E69;
}

uint64_t sub_1B1C84534()
{
  return 0x5674697265686E69;
}

unint64_t sub_1B1C84558()
{
  return 0xD000000000000012;
}

uint64_t sub_1B1C84574()
{
  return 0x797469636F6C6576;
}

uint64_t sub_1B1C84598()
{
  return 1701080941;
}

uint64_t sub_1B1C845A8()
{
  return 0x5374697265686E69;
}

uint64_t sub_1B1C845C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C84604 + 4 * byte_1B22873B8[a1]))(0x6E45746E65726170, 0xEC00000079746974);
}

uint64_t sub_1B1C84604()
{
  return 0x6C696261626F7270;
}

uint64_t sub_1B1C84624()
{
  return 0x4374697265686E69;
}

uint64_t sub_1B1C84644()
{
  return 0x5674697265686E69;
}

unint64_t sub_1B1C84668()
{
  return 0xD000000000000012;
}

uint64_t sub_1B1C84684()
{
  return 0x797469636F6C6576;
}

uint64_t sub_1B1C846A8()
{
  return 1701080941;
}

uint64_t sub_1B1C846B8()
{
  return 0x5374697265686E69;
}

double sub_1B1C846D8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)a1 = 0xFFFFFFFFLL;
  *(_QWORD *)(a1 + 8) = 1065353216;
  *(_DWORD *)(a1 + 16) = 1065353216;
  *(_BYTE *)(a1 + 20) = 0;
  return result;
}

void sub_1B1C846F4(char *a1)
{
  sub_1B1F91EB4(*a1);
}

void sub_1B1C84700()
{
  char *v0;

  sub_1B1DB5B6C(0, *v0);
}

void sub_1B1C8470C(uint64_t a1)
{
  char *v1;

  sub_1B1DB4750(a1, *v1);
}

void sub_1B1C84714(uint64_t a1)
{
  char *v1;

  sub_1B1DB5B6C(a1, *v1);
}

uint64_t sub_1B1C8471C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1C86F2C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C84748@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1C844B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1C84770()
{
  unsigned __int8 *v0;

  return sub_1B1C845C8(*v0);
}

uint64_t sub_1B1C84778@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1C86F2C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C8479C()
{
  sub_1B1C87E90();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C847C4()
{
  sub_1B1C87E90();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C847EC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5D038, (uint64_t (*)(void))sub_1B1C87E90, (uint64_t)&type metadata for ParticleSubSpawn.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C87E90();
  sub_1B222A180();
  v14 = *v3;
  v13 = 0;
  sub_1B1A0895C();
  sub_1B2229958();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1B2229934();
    LOBYTE(v14) = 2;
    sub_1B222991C();
    LOBYTE(v14) = 3;
    sub_1B222991C();
    LOBYTE(v14) = 4;
    sub_1B222991C();
    LOBYTE(v14) = 5;
    sub_1B2229934();
    LOBYTE(v14) = *((_BYTE *)v3 + 20);
    v13 = 6;
    sub_1B1A71008();
    sub_1B2229958();
    LOBYTE(v14) = 7;
    sub_1B222991C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B1C84A40@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  double v5[3];

  sub_1B1C87B88(a1, (uint64_t)v5);
  if (!v2)
  {
    result = v5[0];
    *(_OWORD *)a2 = *(_OWORD *)v5;
    *(double *)(a2 + 13) = *(double *)((char *)&v5[1] + 5);
  }
  return result;
}

uint64_t sub_1B1C84A80(_QWORD *a1)
{
  return sub_1B1C847EC(a1);
}

uint64_t sub_1B1C84A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  v6 = sub_1B204D6E4();
  v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B1E8F784(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v8 = *(_QWORD *)(v2 + 56);
  swift_getObjectType();
  v9 = sub_1B204D6E4();
  v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B1E8F784(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v11 = *(_QWORD *)(v2 + 96);
  swift_getObjectType();
  v12 = sub_1B204D6E4();
  v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B1E8F784(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t *sub_1B1C84C7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  int isUniquelyReferenced_nonNull_native;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  int64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  int64_t v49;
  uint64_t v50;
  uint64_t *v51;
  int v52;
  uint64_t v53;
  _QWORD *v54;
  int64_t v55;
  uint64_t v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _QWORD *v72;
  int64_t v73;
  uint64_t v74;
  int v75;
  char *v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  _QWORD *v80;
  int64_t v81;
  uint64_t v82;
  int v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  int64_t v88;
  uint64_t v89;
  int v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  int64_t v95;
  uint64_t v96;
  uint64_t *v97;
  int v98;
  uint64_t v99;
  _QWORD *v100;
  int64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  _QWORD *v105;
  int64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  os_unfair_lock_s *v118;
  int v119;
  int v120;
  __int128 v121;
  uint64_t *result;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  os_unfair_lock_s *v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _OWORD v148[2];
  uint64_t v149;
  _OWORD v150[2];
  uint64_t v151;
  uint64_t v152[8];
  uint64_t v153[8];
  uint64_t v154[8];
  _QWORD v155[7];
  uint64_t v156;
  uint64_t v157;
  _QWORD v158[7];
  uint64_t v159;
  uint64_t v160;
  _OWORD v161[2];
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  _OWORD v171[2];
  uint64_t v172;
  _OWORD v173[2];
  uint64_t v174;
  _OWORD v175[2];
  uint64_t v176;
  _BYTE v177[40];
  _OWORD v178[2];
  uint64_t v179;

  v2 = v1;
  v3 = a1;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8) == 1
    && *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 16) == 0)
  {
    v5 = *(_OWORD *)(v1 + 32);
    v178[0] = *(_OWORD *)(v1 + 16);
    v178[1] = v5;
    v179 = *(_QWORD *)(v1 + 48);
    sub_1B1E8FCE4(a1, (uint64_t)v178, 0x200000000, v152);
    sub_1B1A18378((uint64_t)v152, (uint64_t)v161, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (*(_QWORD *)&v161[0])
    {
      v168 = v161[0];
      v169 = v161[1];
      v170 = v162;
      if (v167 >= 1)
      {
        v141 = v164;
        if (v164)
        {
          v135 = v1;
          v136 = v3;
          v140 = v163;
          v145 = v166[4];
          v146 = v166;
          v144 = *(unsigned __int8 *)(v165 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v138 = v166 + 8;
          v139 = (uint64_t)(v166 + 6);
          swift_retain();
          swift_retain();
          swift_retain();
          v6 = 0;
          v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          while (1)
          {
            v8 = (unsigned int *)(v140 + 48 * v6);
            v9 = *v8;
            v10 = (uint64_t *)*((_QWORD *)v8 + 2);
            v11 = *((_QWORD *)v8 + 3);
            v13 = *((_QWORD *)v8 + 4);
            v12 = *((_QWORD *)v8 + 5);
            v142 = v8[1];
            v143 = v6;
            if (v144)
            {
              v14 = *(os_unfair_lock_s **)(v12 + 376);
              swift_retain();
              os_unfair_lock_lock(v14);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v145);
            sub_1B1A18378(v139, (uint64_t)v177, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
            v15 = v146[4];
            v147 = v12;
            v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v146[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
            v146[7] = v16;
            v138[1] = 0;
            v138[2] = 0;
            *v138 = 0;
            swift_release();
            sub_1B1A12038((uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, v10, v11, v13, (uint64_t)v146);
            v17 = sub_1B1A12038((uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1E6389E08, v10, v11, v13, (uint64_t)v146);
            if (!v10)
              break;
            if (v13)
            {
              v18 = (char **)(v17 + 24);
              v19 = MEMORY[0x1E0DEE0F8];
              do
              {
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v21 = *(v18 - 3);
                if (isUniquelyReferenced_nonNull_native)
                {
                  v22 = *((_QWORD *)v21 + 2);
                  v23 = swift_isUniquelyReferenced_nonNull_native();
                  *(v18 - 3) = v21;
                  if ((v23 & 1) == 0)
                  {
                    v21 = sub_1B1C636E0(0, v22, 1, v21);
                    *(v18 - 3) = v21;
                  }
                  if (v22)
                  {
                    v24 = *((_QWORD *)v21 + 2) - v22;
                    if (v24 < 0)
                      goto LABEL_187;
                    memmove(v21 + 32, &v21[16 * v22 + 32], 16 * v24);
                    *((_QWORD *)v21 + 2) = v24;
                  }
                  *(v18 - 3) = v21;
                  if (!*(v18 - 2))
                    goto LABEL_39;
                }
                else
                {
                  v25 = v7;
                  if (*((_QWORD *)v21 + 3) >= 2uLL)
                  {
                    sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                    v25 = (_QWORD *)swift_allocObject();
                    v26 = j__malloc_size(v25);
                    v27 = v26 - 32;
                    if (v26 < 32)
                      v27 = v26 - 17;
                    v25[2] = 0;
                    v25[3] = 2 * (v27 >> 4);
                  }
                  *(v18 - 3) = (char *)v25;
                  swift_bridgeObjectRelease();
                  if (!*(v18 - 2))
                    goto LABEL_39;
                }
                v28 = swift_isUniquelyReferenced_nonNull_native();
                v29 = *(v18 - 2);
                if (!v28)
                {
                  v33 = v7;
                  if (*((_QWORD *)v29 + 3) >= 2uLL)
                  {
                    sub_1B1791524(0, (unint64_t *)&unk_1EEF5AB30, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
                    v33 = (_QWORD *)swift_allocObject();
                    v34 = j__malloc_size(v33);
                    v35 = v34 - 32;
                    if (v34 < 32)
                      v35 = v34 - 17;
                    v33[2] = 0;
                    v33[3] = 2 * (v35 >> 4);
                  }
                  *(v18 - 2) = (char *)v33;
                  swift_bridgeObjectRelease();
                  if (!*(v18 - 1))
                    goto LABEL_53;
                  goto LABEL_46;
                }
                v30 = *((_QWORD *)v29 + 2);
                v31 = swift_isUniquelyReferenced_nonNull_native();
                *(v18 - 2) = v29;
                if ((v31 & 1) == 0)
                {
                  v29 = sub_1B1C66198(0, v30, 1, v29);
                  *(v18 - 2) = v29;
                }
                if (v30)
                {
                  v32 = *((_QWORD *)v29 + 2) - v30;
                  if (v32 < 0)
                    goto LABEL_187;
                  memmove(v29 + 32, &v29[16 * v30 + 32], 16 * v32);
                  *((_QWORD *)v29 + 2) = v32;
                }
                *(v18 - 2) = v29;
LABEL_39:
                if (!*(v18 - 1))
                  goto LABEL_53;
LABEL_46:
                v36 = swift_isUniquelyReferenced_nonNull_native();
                v37 = *(v18 - 1);
                if (!v36)
                {
                  v41 = v7;
                  if (*((_QWORD *)v37 + 3) >= 2uLL)
                  {
                    sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                    v41 = (_QWORD *)swift_allocObject();
                    v42 = j__malloc_size(v41);
                    v43 = v42 - 32;
                    if (v42 < 32)
                      v43 = v42 - 17;
                    v41[2] = 0;
                    v41[3] = 2 * (v43 >> 4);
                  }
                  *(v18 - 1) = (char *)v41;
                  swift_bridgeObjectRelease();
                  if (!*v18)
                    goto LABEL_72;
                  goto LABEL_60;
                }
                v38 = *((_QWORD *)v37 + 2);
                v39 = swift_isUniquelyReferenced_nonNull_native();
                *(v18 - 1) = v37;
                if ((v39 & 1) == 0)
                {
                  v37 = sub_1B1C636E0(0, v38, 1, v37);
                  *(v18 - 1) = v37;
                }
                if (v38)
                {
                  v40 = *((_QWORD *)v37 + 2) - v38;
                  if (v40 < 0)
                    goto LABEL_187;
                  memmove(v37 + 32, &v37[16 * v38 + 32], 16 * v40);
                  *((_QWORD *)v37 + 2) = v40;
                }
                *(v18 - 1) = v37;
LABEL_53:
                if (!*v18)
                  goto LABEL_72;
LABEL_60:
                v44 = swift_isUniquelyReferenced_nonNull_native();
                v45 = *v18;
                if (v44)
                {
                  v46 = *((_QWORD *)v45 + 2);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v45 = sub_1B1791058(0, v46, 1, v45);
                  if (v46)
                  {
                    v47 = *((_QWORD *)v45 + 2) - v46;
                    if (v47 < 0)
                      goto LABEL_187;
                    memmove(v45 + 32, &v45[16 * v46 + 32], 16 * v47);
                    *((_QWORD *)v45 + 2) = v47;
                  }
                  *v18 = v45;
                }
                else
                {
                  v48 = v7;
                  if (*((_QWORD *)v45 + 3) >= 2uLL)
                  {
                    sub_1B1C87F3C(0, (unint64_t *)&qword_1ED4BAF90, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
                    v48 = (_QWORD *)swift_allocObject();
                    v49 = j__malloc_size(v48);
                    v50 = v49 - 32;
                    if (v49 < 32)
                      v50 = v49 - 17;
                    v48[2] = 0;
                    v48[3] = 2 * (v50 >> 4);
                  }
                  *v18 = (char *)v48;
                  swift_bridgeObjectRelease();
                }
LABEL_72:
                v51 = (uint64_t *)(v18 + 1);
                if (v18[1])
                {
                  v52 = swift_isUniquelyReferenced_nonNull_native();
                  v53 = *v51;
                  if (v52)
                  {
                    sub_1B1C92D20(0, *(_QWORD *)(v53 + 16));
                  }
                  else
                  {
                    v54 = v7;
                    if (*(_QWORD *)(v53 + 24) >= 2uLL)
                    {
                      sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                      v54 = (_QWORD *)swift_allocObject();
                      v55 = j__malloc_size(v54);
                      v56 = v55 - 32;
                      if (v55 < 32)
                        v56 = v55 - 17;
                      v54[2] = 0;
                      v54[3] = 2 * (v56 >> 4);
                    }
                    *v51 = (uint64_t)v54;
                    swift_bridgeObjectRelease();
                  }
                }
                v57 = swift_isUniquelyReferenced_nonNull_native();
                v58 = v18[2];
                if (v57)
                {
                  v59 = *((_QWORD *)v58 + 2);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v58 = sub_1B1C65F68(0, v59, 1, v58);
                  if (v59)
                  {
                    v60 = *((_QWORD *)v58 + 2) - v59;
                    if (v60 < 0)
                      goto LABEL_187;
                    memmove(v58 + 32, &v58[4 * v59 + 32], 4 * v60);
                    *((_QWORD *)v58 + 2) = v60;
                  }
                  v18[2] = v58;
                }
                else
                {
                  v61 = v7;
                  if (*((_QWORD *)v58 + 3) >= 2uLL)
                  {
                    sub_1B1A02758(0, (unint64_t *)&unk_1EEF5AB20, v19, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
                    v61 = (_QWORD *)swift_allocObject();
                    v62 = j__malloc_size(v61);
                    v63 = v62 - 32;
                    if (v62 < 32)
                      v63 = v62 - 29;
                    v61[2] = 0;
                    v61[3] = 2 * (v63 >> 2);
                  }
                  v18[2] = (char *)v61;
                  swift_bridgeObjectRelease();
                }
                v18 += 8;
                --v13;
              }
              while (v13);
            }
LABEL_92:
            v171[0] = v168;
            v171[1] = v169;
            v172 = v170;
            sub_1B1F05D48(v146, (unsigned __int16 **)v171, (uint64_t)v177);
            sub_1B1F03804((char *)v147);
            ecs_stack_allocator_pop_snapshot(v145);
            if ((v144 & 1) != 0)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v147 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v147 + 376));
            }
            swift_release();
            v6 = v143 + 1;
            if (v143 + 1 == v141)
            {
              sub_1B19ED748(v152);
              v2 = v135;
              v3 = v136;
              goto LABEL_165;
            }
          }
          if ((_DWORD)v9 == (_DWORD)v142)
            goto LABEL_92;
          v64 = (uint64_t *)(v17 + (v9 << 6) + 40);
          v65 = v142 - v9;
          v66 = MEMORY[0x1E0DEE0F8];
          while (1)
          {
            v67 = swift_isUniquelyReferenced_nonNull_native();
            v68 = (char *)*(v64 - 5);
            if (v67)
            {
              v69 = *((_QWORD *)v68 + 2);
              v70 = swift_isUniquelyReferenced_nonNull_native();
              *(v64 - 5) = (uint64_t)v68;
              if ((v70 & 1) == 0)
              {
                v68 = sub_1B1C636E0(0, v69, 1, v68);
                *(v64 - 5) = (uint64_t)v68;
              }
              if (v69)
              {
                v71 = *((_QWORD *)v68 + 2) - v69;
                if (v71 < 0)
                  goto LABEL_187;
                memmove(v68 + 32, &v68[16 * v69 + 32], 16 * v71);
                *((_QWORD *)v68 + 2) = v71;
              }
              *(v64 - 5) = (uint64_t)v68;
              if (!*(v64 - 4))
                goto LABEL_117;
            }
            else
            {
              v72 = v7;
              if (*((_QWORD *)v68 + 3) >= 2uLL)
              {
                sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                v72 = (_QWORD *)swift_allocObject();
                v73 = j__malloc_size(v72);
                v74 = v73 - 32;
                if (v73 < 32)
                  v74 = v73 - 17;
                v72[2] = 0;
                v72[3] = 2 * (v74 >> 4);
              }
              *(v64 - 5) = (uint64_t)v72;
              swift_bridgeObjectRelease();
              if (!*(v64 - 4))
                goto LABEL_117;
            }
            v75 = swift_isUniquelyReferenced_nonNull_native();
            v76 = (char *)*(v64 - 4);
            if (v75)
            {
              v77 = *((_QWORD *)v76 + 2);
              v78 = swift_isUniquelyReferenced_nonNull_native();
              *(v64 - 4) = (uint64_t)v76;
              if ((v78 & 1) == 0)
              {
                v76 = sub_1B1C66198(0, v77, 1, v76);
                *(v64 - 4) = (uint64_t)v76;
              }
              if (v77)
              {
                v79 = *((_QWORD *)v76 + 2) - v77;
                if (v79 < 0)
                  goto LABEL_187;
                memmove(v76 + 32, &v76[16 * v77 + 32], 16 * v79);
                *((_QWORD *)v76 + 2) = v79;
              }
              *(v64 - 4) = (uint64_t)v76;
LABEL_117:
              if (!*(v64 - 3))
                goto LABEL_131;
              goto LABEL_124;
            }
            v80 = v7;
            if (*((_QWORD *)v76 + 3) >= 2uLL)
            {
              sub_1B1791524(0, (unint64_t *)&unk_1EEF5AB30, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v80 = (_QWORD *)swift_allocObject();
              v81 = j__malloc_size(v80);
              v82 = v81 - 32;
              if (v81 < 32)
                v82 = v81 - 17;
              v80[2] = 0;
              v80[3] = 2 * (v82 >> 4);
            }
            *(v64 - 4) = (uint64_t)v80;
            swift_bridgeObjectRelease();
            if (!*(v64 - 3))
              goto LABEL_131;
LABEL_124:
            v83 = swift_isUniquelyReferenced_nonNull_native();
            v84 = (char *)*(v64 - 3);
            if (v83)
            {
              v85 = *((_QWORD *)v84 + 2);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v84 = sub_1B1C636E0(0, v85, 1, v84);
              if (v85)
              {
                v86 = *((_QWORD *)v84 + 2) - v85;
                if (v86 < 0)
                  goto LABEL_187;
                memmove(v84 + 32, &v84[16 * v85 + 32], 16 * v86);
                *((_QWORD *)v84 + 2) = v86;
              }
              *(v64 - 3) = (uint64_t)v84;
LABEL_131:
              if (!*(v64 - 2))
                goto LABEL_150;
              goto LABEL_138;
            }
            v87 = v7;
            if (*((_QWORD *)v84 + 3) >= 2uLL)
            {
              sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
              v87 = (_QWORD *)swift_allocObject();
              v88 = j__malloc_size(v87);
              v89 = v88 - 32;
              if (v88 < 32)
                v89 = v88 - 17;
              v87[2] = 0;
              v87[3] = 2 * (v89 >> 4);
            }
            *(v64 - 3) = (uint64_t)v87;
            swift_bridgeObjectRelease();
            if (!*(v64 - 2))
              goto LABEL_150;
LABEL_138:
            v90 = swift_isUniquelyReferenced_nonNull_native();
            v91 = (char *)*(v64 - 2);
            if (v90)
            {
              v92 = *((_QWORD *)v91 + 2);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v91 = sub_1B1791058(0, v92, 1, v91);
              if (v92)
              {
                v93 = *((_QWORD *)v91 + 2) - v92;
                if (v93 < 0)
                {
LABEL_187:
                  result = (uint64_t *)sub_1B2229700();
                  __break(1u);
                  return result;
                }
                memmove(v91 + 32, &v91[16 * v92 + 32], 16 * v93);
                *((_QWORD *)v91 + 2) = v93;
              }
              *(v64 - 2) = (uint64_t)v91;
            }
            else
            {
              v94 = v7;
              if (*((_QWORD *)v91 + 3) >= 2uLL)
              {
                sub_1B1C87F3C(0, (unint64_t *)&qword_1ED4BAF90, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
                v94 = (_QWORD *)swift_allocObject();
                v95 = j__malloc_size(v94);
                v96 = v95 - 32;
                if (v95 < 32)
                  v96 = v95 - 17;
                v94[2] = 0;
                v94[3] = 2 * (v96 >> 4);
              }
              *(v64 - 2) = (uint64_t)v94;
              swift_bridgeObjectRelease();
            }
LABEL_150:
            v97 = v64 - 1;
            if (*(v64 - 1))
            {
              v98 = swift_isUniquelyReferenced_nonNull_native();
              v99 = *v97;
              if (v98)
              {
                sub_1B1C92D20(0, *(_QWORD *)(v99 + 16));
              }
              else
              {
                v100 = v7;
                if (*(_QWORD *)(v99 + 24) >= 2uLL)
                {
                  sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                  v100 = (_QWORD *)swift_allocObject();
                  v101 = j__malloc_size(v100);
                  v102 = v101 - 32;
                  if (v101 < 32)
                    v102 = v101 - 17;
                  v100[2] = 0;
                  v100[3] = 2 * (v102 >> 4);
                }
                *v97 = (uint64_t)v100;
                swift_bridgeObjectRelease();
              }
            }
            v103 = swift_isUniquelyReferenced_nonNull_native();
            v104 = *v64;
            if (v103)
            {
              sub_1B1C92AE0(0, *(_QWORD *)(v104 + 16));
            }
            else
            {
              v105 = v7;
              if (*(_QWORD *)(v104 + 24) >= 2uLL)
              {
                sub_1B1A02758(0, (unint64_t *)&unk_1EEF5AB20, v66, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
                v105 = (_QWORD *)swift_allocObject();
                v106 = j__malloc_size(v105);
                v107 = v106 - 32;
                if (v106 < 32)
                  v107 = v106 - 29;
                v105[2] = 0;
                v105[3] = 2 * (v107 >> 2);
              }
              *v64 = (uint64_t)v105;
              swift_bridgeObjectRelease();
            }
            v64 += 8;
            if (!--v65)
              goto LABEL_92;
          }
        }
      }
LABEL_165:
      sub_1B19ED748(v152);
    }
  }
  v108 = *(_OWORD *)(v2 + 72);
  v175[0] = *(_OWORD *)(v2 + 56);
  v175[1] = v108;
  v176 = *(_QWORD *)(v2 + 88);
  sub_1B1E8FCE4(v3, (uint64_t)v175, 0x200000000, v153);
  sub_1B1A18378((uint64_t)v153, (uint64_t)v158, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (v158[0])
  {
    v137 = v3;
    if (v160 >= 1)
    {
      v109 = v159;
      if (v159)
      {
        v110 = v158[5];
        swift_retain();
        swift_retain();
        swift_retain();
        v111 = 48 * v109;
        v112 = (uint64_t *)(v110 + 40);
        do
        {
          v117 = *v112;
          v118 = *(os_unfair_lock_s **)(*v112 + 376);
          swift_retain();
          os_unfair_lock_lock(v118);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v117 + 344));
          v119 = *(_DWORD *)(v117 + 24);
          swift_retain();
          memset(v155, 0, 40);
          memset(v154, 0, 40);
          v120 = sub_1B1DA4ED8(v119, (uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1E6389E08, 0, 0, (uint64_t)v155, (uint64_t)v154);
          swift_release();
          sub_1B1A12E98((uint64_t)v154);
          sub_1B1A12E98((uint64_t)v155);
          if (sub_1B1A10B20(v120))
          {
            sub_1B1A10BB0(v120);
          }
          else
          {
            v113 = *(_QWORD *)(v117 + 232);
            v114 = *(_QWORD *)(v117 + 240);
            v115 = *(unsigned __int8 *)(v117 + 120);
            v116 = *(unsigned int *)(v117 + 28);
            LOBYTE(v155[0]) = *(_BYTE *)(v117 + 32);
            sub_1B1FD8C68(v113, v114, v120, v115, v116 | ((unint64_t)LOBYTE(v155[0]) << 32), 0, 0, 0);
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 376));
          swift_release();
          v112 += 6;
          v111 -= 48;
        }
        while (v111);
        sub_1B19ED748(v153);
      }
    }
    sub_1B19ED748(v153);
    v3 = v137;
  }
  v121 = *(_OWORD *)(v2 + 112);
  v173[0] = *(_OWORD *)(v2 + 96);
  v173[1] = v121;
  v174 = *(_QWORD *)(v2 + 128);
  sub_1B1E8FCE4(v3, (uint64_t)v173, 0x200000000, v154);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v154, (uint64_t)v155, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (v155[0])
  {
    if (v157 >= 1)
    {
      v123 = v156;
      if (v156)
      {
        v124 = v155[5];
        swift_retain();
        swift_retain();
        swift_retain();
        v125 = 48 * v123;
        v126 = (uint64_t *)(v124 + 40);
        do
        {
          v131 = *v126;
          v132 = *(os_unfair_lock_s **)(*v126 + 376);
          swift_retain();
          os_unfair_lock_lock(v132);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v131 + 344));
          v133 = *(_DWORD *)(v131 + 24);
          swift_retain();
          v151 = 0;
          memset(v150, 0, sizeof(v150));
          v149 = 0;
          memset(v148, 0, sizeof(v148));
          v134 = sub_1B1DA4ED8(v133, 0, 0, (uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1E6389E08, (uint64_t)v150, (uint64_t)v148);
          swift_release();
          sub_1B1A12E98((uint64_t)v148);
          sub_1B1A12E98((uint64_t)v150);
          if (sub_1B1A10B20(v134))
          {
            sub_1B1A10BB0(v134);
          }
          else
          {
            v127 = *(_QWORD *)(v131 + 232);
            v128 = *(_QWORD *)(v131 + 240);
            v129 = *(unsigned __int8 *)(v131 + 120);
            v130 = *(unsigned int *)(v131 + 28);
            LOBYTE(v150[0]) = *(_BYTE *)(v131 + 32);
            sub_1B1FD8C68(v127, v128, v134, v129, v130 | ((unint64_t)LOBYTE(v150[0]) << 32), 0, 0, 0);
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v131 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v131 + 376));
          swift_release();
          v126 += 6;
          v125 -= 48;
        }
        while (v125);
        sub_1B19ED748(v154);
      }
    }
    return sub_1B19ED748(v154);
  }
  return result;
}

uint64_t type metadata accessor for ParticleSubSpawnAddStateSystem()
{
  return objc_opt_self();
}

uint64_t sub_1B1C85D84()
{
  uint64_t v0;
  __int128 v1;
  uint64_t inited;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  _OWORD v7[2];
  uint64_t v8;
  _BYTE v9[40];
  _OWORD v10[2];
  uint64_t v11;
  _BYTE v12[40];
  _OWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v27 = qword_1ED4D09F8;
  v28 = 0;
  v29 = 2;
  v30 = 0;
  v31 = 2;
  v32 = 0;
  swift_retain();
  sub_1B1B147D0(1, 2, (uint64_t)v7);
  swift_release();
  v1 = v7[1];
  *(_OWORD *)(v0 + 16) = v7[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = v8;
  v21 = qword_1ED4D09F8;
  v22 = 0;
  v23 = 2;
  v24 = 0;
  v25 = 2;
  v26 = 0;
  swift_retain();
  sub_1B1E3E6CC(1, (uint64_t)v9);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = &type metadata for ParticleSubSpawn.State;
  *(_QWORD *)(inited + 40) = &off_1E6389E38;
  sub_1B1B44110(v10, inited);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v9);
  v3 = v10[1];
  *(_OWORD *)(v0 + 56) = v10[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 88) = v11;
  v15 = qword_1ED4D09F8;
  v16 = 0;
  v17 = 2;
  v18 = 0;
  v19 = 2;
  v20 = 0;
  swift_retain();
  sub_1B1E3E8C4(1, (uint64_t)v12);
  swift_release();
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v4 + 32) = &type metadata for ParticleSubSpawn;
  *(_QWORD *)(v4 + 40) = &off_1E638A010;
  sub_1B1B44110(v13, v4);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v12);
  v5 = v13[1];
  *(_OWORD *)(v0 + 96) = v13[0];
  *(_OWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 128) = v14;
  return v0;
}

uint64_t sub_1B1C85FD4()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1B1C85D84();
  return v0;
}

const char *sub_1B1C86008()
{
  return "Sub Spawn Add State";
}

uint64_t sub_1B1C86020()
{
  uint64_t v0;
  __int128 v1;
  _OWORD v3[2];
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v0 = swift_allocObject();
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v5 = qword_1ED4D09F8;
  v6 = 0;
  v7 = 2;
  v8 = 0;
  v9 = 2;
  v10 = 0;
  swift_retain();
  sub_1B1B147D0(1, 2, (uint64_t)v3);
  swift_release();
  v1 = v3[1];
  *(_OWORD *)(v0 + 16) = v3[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = v4;
  return v0;
}

const char *sub_1B1C860E0()
{
  return "Sub Spawn";
}

uint64_t sub_1B1C860F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  v5 = sub_1B204D6E4();
  v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B1E8F784(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B204D6E4();
}

uint64_t *sub_1B1C861E0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  unsigned int *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32[8];
  _OWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;
  _BYTE v45[40];
  _OWORD v46[2];
  uint64_t v47;

  v2 = *(_OWORD *)(v1 + 32);
  v46[0] = *(_OWORD *)(v1 + 16);
  v46[1] = v2;
  v47 = *(_QWORD *)(v1 + 48);
  sub_1B1E8FCE4(a1, (uint64_t)v46, 0x200000000, v32);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v32, (uint64_t)v33, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v33[0])
  {
    v40 = v33[0];
    v41 = v33[1];
    v42 = v34;
    if (v39 >= 1)
    {
      v26 = v36;
      if (v36)
      {
        v23 = v35;
        v4 = v37;
        v5 = v38[4];
        v30 = *(unsigned __int8 *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v31 = v38;
        v21 = v38 + 8;
        v22 = (uint64_t)(v38 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        v6 = 0;
        v24 = v5;
        v25 = v1;
        do
        {
          v7 = (unsigned int *)(v23 + 48 * v6);
          v8 = *v7;
          v9 = (uint64_t *)*((_QWORD *)v7 + 2);
          v10 = *((_QWORD *)v7 + 4);
          v11 = *((_QWORD *)v7 + 5);
          v29 = v6;
          v27 = v7[1];
          v28 = *((_QWORD *)v7 + 3);
          if (v30)
          {
            v12 = *(os_unfair_lock_s **)(v11 + 376);
            swift_retain();
            os_unfair_lock_lock(v12);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v5);
          sub_1B1A18378(v22, (uint64_t)v45, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v13 = v31[4];
          v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v31[6] = ecs_stack_allocator_allocate(v13, 48 * v14, 8);
          v31[7] = v14;
          v21[1] = 0;
          v21[2] = 0;
          *v21 = 0;
          swift_release();
          v15 = (unsigned int *)sub_1B1A12038((uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, v9, v28, v10, (uint64_t)v31);
          v16 = sub_1B1A12038((uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1E6389E08, v9, v28, v10, (uint64_t)v31);
          v17 = (uint64_t *)v16;
          if (v9)
          {
            for (; v10; --v10)
            {
              v18 = *v9++;
              sub_1B1C88508(v4, v11, v18, v15, v17, v25);
              v17 += 8;
              v15 += 6;
            }
          }
          else if ((_DWORD)v8 != (_DWORD)v27)
          {
            v19 = (uint64_t *)(v16 + (v8 << 6));
            v20 = &v15[6 * v8];
            do
            {
              sub_1B1C88508(v4, v11, v8++, v20, v19, v25);
              v19 += 8;
              v20 += 6;
            }
            while (v27 != v8);
          }
          v43[0] = v40;
          v43[1] = v41;
          v44 = v42;
          sub_1B1F05D48(v31, (unsigned __int16 **)v43, (uint64_t)v45);
          sub_1B1F03804((char *)v11);
          v5 = v24;
          ecs_stack_allocator_pop_snapshot(v24);
          if ((v30 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
          }
          swift_release();
          v6 = v29 + 1;
        }
        while (v29 + 1 != v26);
        sub_1B19ED748(v32);
      }
    }
    return sub_1B19ED748(v32);
  }
  return result;
}

void sub_1B1C865A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  float v33;
  uint64_t v34;
  unint64_t v35;
  float v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = sub_1B1A12038((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398, *(uint64_t **)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 16));
  v5 = sub_1B1B47CE8();
  v49 = v6;
  v50 = v5;
  v8 = v7;
  if (*(_BYTE *)(a2 + 12) == 1)
  {
    v9 = sub_1B1B47B28();
    v46 = v10;
    v47 = v9;
    v12 = v11 & 1;
  }
  else
  {
    v46 = 0;
    v47 = 0;
    v12 = 1;
  }
  v45 = v12;
  if (*(_BYTE *)(a2 + 14) == 1)
  {
    v44 = sub_1B1B47EA8();
    v43 = v13;
    v15 = v14 & 1;
  }
  else
  {
    v44 = 0;
    v43 = 0;
    v15 = 1;
  }
  v42 = v15;
  v48 = v8 & 1;
  if (*(_BYTE *)(a2 + 15) == 1)
  {
    v16 = sub_1B1B47D58();
    v40 = v17;
    v41 = v16;
    v39 = v18 & 1;
    if (*(_BYTE *)(a2 + 15) == 1)
    {
      v19 = sub_1B1B47DC8();
      v37 = v20;
      v38 = v19;
      v22 = v21 & 1;
      if (*(_BYTE *)(a2 + 15) == 1)
      {
        v23 = sub_1B1B47E38();
        v25 = v24;
        v27 = v26 & 1;
        goto LABEL_15;
      }
      v23 = 0;
      v25 = 0;
    }
    else
    {
      v37 = 0;
      v38 = 0;
      v23 = 0;
      v25 = 0;
      v22 = 1;
    }
  }
  else
  {
    v37 = 0;
    v38 = 0;
    v40 = 0;
    v41 = 0;
    v23 = 0;
    v25 = 0;
    v22 = 1;
    v39 = 1;
  }
  v27 = 1;
LABEL_15:
  v28 = sub_1B1B47F18();
  v30 = v29;
  v32 = v31 & 1;
  v33 = *(float *)(a2 + 8);
  v35 = *(_QWORD *)(a1 + 48);
  v34 = *(_QWORD *)(a1 + 56);
  if (v33 >= 1.0)
  {
    for (; v34 != v35; ++v35)
      sub_1B1C87FA4(v35, a3, v51, v50, v49, v48, v44, v43, v42, v47, v46, v45, v41, v40, v39, v38, v37, v22, v23,
        v25,
        v27,
        v28,
        v30,
        v32);
  }
  else
  {
    for (; v34 != v35; ++v35)
    {
      if (v33 > 0.0)
      {
        v36 = drand48();
        if (v33 > v36)
          sub_1B1C87FA4(v35, a3, v51, v50, v49, v48, v44, v43, v42, v47, v46, v45, v41, v40, v39, v38, v37, v22, v23,
            v25,
            v27,
            v28,
            v30,
            v32);
      }
    }
  }
}

uint64_t type metadata accessor for ParticleSubSpawnSystem()
{
  return objc_opt_self();
}

uint64_t sub_1B1C868B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B1C868B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_1B1C868C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

const char *sub_1B1C868D4()
{
  return "Sub Spawn Update/Die/Collision";
}

BOOL sub_1B1C868E8(char a1)
{
  return a1 != 0;
}

uint64_t type metadata accessor for ParticleSubSpawnSystemPostUpdate()
{
  return objc_opt_self();
}

const char *sub_1B1C86918()
{
  return "Sub Spawn Birth";
}

uint64_t sub_1B1C8692C()
{
  return qword_1EEF5DE18 - 10;
}

uint64_t type metadata accessor for ParticleSubSpawnSystemPostInit()
{
  return objc_opt_self();
}

uint64_t destroy for ParticleSubSpawn.State()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ParticleSubSpawn.State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ParticleSubSpawn.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ParticleSubSpawn.State(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticleSubSpawn.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSubSpawn.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn.State()
{
  return &type metadata for ParticleSubSpawn.State;
}

__n128 initializeBufferWithCopyOfBuffer for ParticleSubSpawn(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleSubSpawn(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 12);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSubSpawn(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 21) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn()
{
  return &type metadata for ParticleSubSpawn;
}

uint64_t sub_1B1C86D20(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_1B2130F84();
  v4 = v3 * a1;
  result = ((unint64_t)v3 * (unsigned __int128)a1) >> 64;
  if (v4 < a1)
  {
    v6 = -(uint64_t)a1 % a1;
    if (v6 > v4)
    {
      v7 = v1[2];
      v8 = v1[3];
      v9 = *v1;
      v10 = v1[1];
      do
      {
        v11 = 9 * __ROR8__(5 * v10, 57);
        v12 = v9 ^ v7;
        v13 = v10 ^ v8;
        v7 ^= v9 ^ (v10 << 17);
        v10 ^= v12;
        v9 ^= v13;
        v8 = __ROR8__(v13, 19);
      }
      while (v6 > v11 * a1);
      *v1 = v9;
      v1[1] = v10;
      result = ((unint64_t)v11 * (unsigned __int128)a1) >> 64;
      v1[2] = v7;
      v1[3] = v8;
    }
  }
  return result;
}

uint64_t sub_1B1C86DA8(uint64_t result, uint64_t a2, float a3, float a4)
{
  uint64_t v4;
  unint64_t v7;
  char **v8;
  char *v9;
  unint64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int32x2_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  float32x4_t v18;
  float32x4_t v19;
  char *v20;
  float v21;
  float32x4_t v23;

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v7 = *(_QWORD *)(v4 + 16);
    v8 = (char **)(result + 48);
    v9 = *(char **)(result + 48);
    v10 = *((_QWORD *)v9 + 2);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v7 > *((_QWORD *)v9 + 3) >> 1)
    {
      if (v10 <= v7)
        v13 = v7;
      else
        v13 = v10;
      v9 = sub_1B1C635D8(isUniquelyReferenced_nonNull_native, v13, 0, v9);
    }
    *v8 = v9;
    if (v7 >= v10)
    {
      if (v10 < v7)
      {
        v12.i32[0] = 0;
        sub_1B19F5604(v7 - v10, v12);
      }
    }
    else
    {
      sub_1B1C83084(v10 - v7);
    }
    v14 = *(_QWORD *)(v4 + 16);
    if (v14)
    {
      v15 = 0;
      v16 = 0;
      v17 = *v8;
      do
      {
        v23 = *(float32x4_t *)(v4 + 16 * v16 + 32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_1B1FFEEAC((uint64_t)v17);
        v18 = vmulq_n_f32(v23, a3);
        v19 = vmulq_f32(v18, v18);
        v20 = &v17[4 * v16];
        v19.f32[0] = (float)(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v19, 2), vaddq_f32(v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v19.f32, 1))).f32[0])* a4)+ *((float *)v20 + 8);
        *((_DWORD *)v20 + 8) = v19.i32[0];
        v15 += (uint64_t)v19.f32[0];
        ++v16;
      }
      while (v14 != v16);
      result = swift_bridgeObjectRelease();
      *v8 = v17;
      v21 = (float)v15;
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v21 = 0.0;
    }
    *(float *)(a2 + 64) = v21 + *(float *)(a2 + 64);
  }
  return result;
}

uint64_t sub_1B1C86F2C()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1B1C86F74()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1B1C86FB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6954746165706572 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B1C870AC(uint64_t a1)
{
  uint64_t v2;
  BOOL v3;
  BOOL v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  if (a1 == 0xFFFFFFFFLL)
    return v8;
  swift_retain();
  sub_1B1D16B60(a1, (uint64_t)&v6);
  swift_release();
  v2 = v7;
  if ((v7 & 0xFF00000000) == 0x200000000)
    goto LABEL_8;
  if ((v7 & 0x100000000) != 0)
  {
    sub_1B1DA65C8((uint64_t)&type metadata for Color, (uint64_t)&off_1E63BA190);
    if ((v2 & 0x10000000000) == 0)
    {
LABEL_5:
      if ((v2 & 0x1000000000000) == 0)
        goto LABEL_6;
LABEL_14:
      sub_1B1DA65C8((uint64_t)&type metadata for Orientation, (uint64_t)&off_1E6371540);
      if ((v2 & 0x100000000000000) == 0)
        goto LABEL_8;
      goto LABEL_7;
    }
  }
  else if ((v7 & 0x10000000000) == 0)
  {
    goto LABEL_5;
  }
  sub_1B1DA65C8((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0);
  if ((v2 & 0x1000000000000) != 0)
    goto LABEL_14;
LABEL_6:
  if ((v2 & 0x100000000000000) != 0)
LABEL_7:
    sub_1B1DA65C8((uint64_t)&type metadata for Scale3, (uint64_t)&off_1E63BC558);
LABEL_8:
  swift_retain();
  v3 = sub_1B1FD568C((uint64_t)&type metadata for ParticleRespawn, (uint64_t)&off_1E6384CA8, a1);
  swift_release();
  if (v3)
  {
    swift_retain();
    v4 = sub_1B1FD568C((uint64_t)&type metadata for ParticleSpawnOverDistance, (uint64_t)&off_1E63B1028, a1);
    swift_release();
    if (v4)
    {
      sub_1B1DA65C8((uint64_t)&type metadata for ParticleParentID, (uint64_t)&off_1E63895A0);
      sub_1B1DA65C8((uint64_t)&type metadata for ParticleRibbonLength, (uint64_t)&off_1E639D480);
    }
  }
  return v8;
}

float sub_1B1C87244(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  float v10;
  _BYTE v12[16];

  sub_1B19F8E54(0, &qword_1EEF5D068, (uint64_t (*)(void))sub_1B1C8AB3C, (uint64_t)&type metadata for ParticleSpawnOverDistance.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = &v12[-v8];
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C8AB3C();
  sub_1B222A150();
  if (!v1)
  {
    v12[15] = 0;
    sub_1B22297F0();
    v2 = v10;
    v12[14] = 1;
    sub_1B2229784();
    v12[13] = 2;
    sub_1B2229784();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B1C873E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  sub_1B19F8E54(0, &qword_1EEF5D080, (uint64_t (*)(void))sub_1B1C8AB80, (uint64_t)&type metadata for ParticleVariableSpawn.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v17 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v16 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C8AB80();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v6;
  sub_1B1C8AC7C(0, (unint64_t *)&qword_1ED4BA5A8);
  v18 = 0;
  sub_1B1C8ABC4((unint64_t *)&qword_1ED4BA5B0, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEB8B0]);
  v11 = v17;
  sub_1B2229814();
  v12 = v19;
  v18 = 1;
  sub_1B2229814();
  v13 = v19;
  v18 = 2;
  sub_1B2229814();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
  v14 = v19;
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v12;
  a2[1] = v13;
  a2[2] = v14;
  return result;
}

_QWORD *sub_1B1C87610(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v12;

  sub_1B19F8E54(0, &qword_1ED4BAB98, (uint64_t (*)(void))sub_1B1C8AC38, (uint64_t)&type metadata for ParticleBurstSpawn.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v12 - v7;
  v9 = sub_1B19FA070(a1, a1[3]);
  sub_1B1C8AC38();
  v10 = v9;
  sub_1B222A150();
  if (!v1)
  {
    sub_1B1C8AC7C(0, (unint64_t *)&qword_1ED4BA5B8);
    sub_1B1C8ACC4(&qword_1ED4BA5C0, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEB8B0]);
    sub_1B2229814();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v10 = v12;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1B1C877A0(uint64_t *a1)
{
  uint64_t v2;
  int v3;
  float v4;
  float v5;
  unint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  char v10;
  char v11;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(*a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96);
  swift_retain();
  if (v3 == 1)
  {
    sub_1B1E5267C();
    v5 = v4;
    v6 = a1[1];
    swift_retain();
    v7 = sub_1B1D16DF0(v6);
    v9 = v8;
    v11 = v10;
    swift_release();
    if ((v11 & 1) != 0)
    {
      v7 = 10;
      v9 = 20;
    }
    sub_1B1BEE528((uint64_t)a1);
    swift_retain();
    sub_1B1FEB2E4(v6, v2, a1, v2, v7, v9, v5);
    swift_release();
    sub_1B1B4F21C((uint64_t)a1);
  }
  return swift_release();
}

float sub_1B1C87898(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1B19F8E54(0, &qword_1ED4BAC20, (uint64_t (*)(void))sub_1B1C8AD38, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v11 - v8;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C8AD38();
  sub_1B222A150();
  if (!v1)
  {
    sub_1B1C8AC7C(0, (unint64_t *)&qword_1ED4BA5B8);
    v12 = 0;
    sub_1B1C8ACC4(&qword_1ED4BA5C0, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEB8B0]);
    sub_1B2229814();
    sub_1B1C8AC7C(0, (unint64_t *)&qword_1ED4BA5A8);
    v12 = 1;
    sub_1B1C8ABC4((unint64_t *)&qword_1ED4BA5B0, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEB8B0]);
    sub_1B2229814();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v2 = *(float *)&v11;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B1C87AB8()
{
  unint64_t result;

  result = qword_1ED4B8E58;
  if (!qword_1ED4B8E58)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2287EF8, &type metadata for ParticleSubSpawn.Mode);
    atomic_store(result, (unint64_t *)&qword_1ED4B8E58);
  }
  return result;
}

uint64_t sub_1B1C87AFC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1C87B88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  uint64_t result;
  char v20;
  int v21;
  int v22;
  int v23;
  char v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v28 = a2;
  sub_1B19F8E54(0, (unint64_t *)&unk_1ED4BAB10, (uint64_t (*)(void))sub_1B1C87E90, (uint64_t)&type metadata for ParticleSubSpawn.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v29 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v25 - v7;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C87E90();
  v9 = v8;
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v10 = v5;
  v11 = v28;
  v30 = 0;
  sub_1B1A08878();
  v12 = v29;
  v13 = v9;
  sub_1B2229814();
  v14 = v31;
  LOBYTE(v31) = 1;
  sub_1B22297F0();
  v15 = (uint64_t)a1;
  v17 = v16;
  LOBYTE(v31) = 2;
  v18 = sub_1B22297D8();
  LOBYTE(v31) = 3;
  v20 = sub_1B22297D8();
  LOBYTE(v31) = 4;
  v21 = sub_1B22297D8();
  LOBYTE(v31) = 5;
  sub_1B22297F0();
  v23 = v22;
  v30 = 6;
  sub_1B1A70FC4();
  sub_1B2229814();
  v27 = v21;
  LOBYTE(v21) = v20;
  v26 = v31;
  LOBYTE(v31) = 7;
  v24 = sub_1B2229784();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v12);
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v15);
  *(_QWORD *)v11 = v14;
  *(_DWORD *)(v11 + 8) = v17;
  *(_BYTE *)(v11 + 12) = v18 & 1;
  *(_BYTE *)(v11 + 13) = v21 & 1;
  *(_BYTE *)(v11 + 14) = v27 & 1;
  *(_BYTE *)(v11 + 15) = v24 & 1;
  *(_DWORD *)(v11 + 16) = v23;
  *(_BYTE *)(v11 + 20) = v26;
  return result;
}

unint64_t sub_1B1C87E90()
{
  unint64_t result;

  result = qword_1ED4B8E40;
  if (!qword_1ED4B8E40)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2287E98, &type metadata for ParticleSubSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8E40);
  }
  return result;
}

void sub_1B1C87ED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1B1A025A0(255, (unint64_t *)&qword_1ED4B89D0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1B1C87F3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1B19F8E54(255, a3, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], a4);
    v5 = sub_1B2229A18();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1B1C87FA4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,char a24)
{
  char *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  int32x4_t v33;
  char *v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  int32x4_t v50;
  int32x4_t *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t result;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int32x4_t v63;
  int32x4_t v64;
  int32x4_t v65;
  int32x4_t v66;
  int32x2_t v67;
  int32x4_t v68;

  v63 = *(int32x4_t *)(a3 + 16 * a1);
  v29 = *(char **)a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)a2 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v29 = sub_1B1C636E0(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
    *(_QWORD *)a2 = v29;
  }
  v32 = *((_QWORD *)v29 + 2);
  v31 = *((_QWORD *)v29 + 3);
  if (v32 >= v31 >> 1)
    v29 = sub_1B1C636E0(v31 > 1, v32 + 1, 1, v29);
  *((_QWORD *)v29 + 2) = v32 + 1;
  v33 = v63;
  *(int32x4_t *)&v29[16 * v32 + 32] = v63;
  *(_QWORD *)a2 = v29;
  if ((a6 & 1) == 0)
  {
    v34 = *(char **)(a2 + 16);
    if (v34)
    {
      v64 = *(int32x4_t *)(a4 + 16 * a1);
      v35 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a2 + 16) = v34;
      if ((v35 & 1) == 0)
      {
        v34 = sub_1B1C636E0(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
        *(_QWORD *)(a2 + 16) = v34;
      }
      v37 = *((_QWORD *)v34 + 2);
      v36 = *((_QWORD *)v34 + 3);
      if (v37 >= v36 >> 1)
        v34 = sub_1B1C636E0(v36 > 1, v37 + 1, 1, v34);
      *((_QWORD *)v34 + 2) = v37 + 1;
      v33 = v64;
      *(int32x4_t *)&v34[16 * v37 + 32] = v64;
      *(_QWORD *)(a2 + 16) = v34;
    }
  }
  if ((a9 & 1) == 0)
  {
    v38 = *(char **)(a2 + 8);
    if (v38)
    {
      v65 = *(int32x4_t *)(a7 + 16 * a1);
      v39 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a2 + 8) = v38;
      if ((v39 & 1) == 0)
      {
        v38 = sub_1B1C66198(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
        *(_QWORD *)(a2 + 8) = v38;
      }
      v41 = *((_QWORD *)v38 + 2);
      v40 = *((_QWORD *)v38 + 3);
      if (v41 >= v40 >> 1)
        v38 = sub_1B1C66198(v40 > 1, v41 + 1, 1, v38);
      *((_QWORD *)v38 + 2) = v41 + 1;
      v33 = v65;
      *(int32x4_t *)&v38[16 * v41 + 32] = v65;
      *(_QWORD *)(a2 + 8) = v38;
    }
  }
  if ((a12 & 1) == 0)
  {
    v42 = *(char **)(a2 + 24);
    if (v42)
    {
      v66 = *(int32x4_t *)(a10 + 16 * a1);
      v43 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a2 + 24) = v42;
      if ((v43 & 1) == 0)
      {
        v42 = sub_1B1791058(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
        *(_QWORD *)(a2 + 24) = v42;
      }
      v45 = *((_QWORD *)v42 + 2);
      v44 = *((_QWORD *)v42 + 3);
      if (v45 >= v44 >> 1)
        v42 = sub_1B1791058(v44 > 1, v45 + 1, 1, v42);
      *((_QWORD *)v42 + 2) = v45 + 1;
      v33 = v66;
      *(int32x4_t *)&v42[16 * v45 + 32] = v66;
      *(_QWORD *)(a2 + 24) = v42;
    }
  }
  if ((a15 & 1) == 0)
  {
    v46 = *(char **)(a2 + 32);
    if (!v46)
      goto LABEL_45;
    v33.i32[0] = *(_DWORD *)(a13 + 4 * a1);
    v67 = *(int32x2_t *)v33.i8;
    v47 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 32) = v46;
    if ((v47 & 1) == 0)
    {
      v46 = sub_1B1C636E0(0, *((_QWORD *)v46 + 2) + 1, 1, v46);
      *(_QWORD *)(a2 + 32) = v46;
    }
    v49 = *((_QWORD *)v46 + 2);
    v48 = *((_QWORD *)v46 + 3);
    if (v49 >= v48 >> 1)
      v46 = sub_1B1C636E0(v48 > 1, v49 + 1, 1, v46);
    v50 = vdupq_lane_s32(v67, 0);
    v50.i32[3] = 0;
    *((_QWORD *)v46 + 2) = v49 + 1;
    v51 = (int32x4_t *)&v46[16 * v49];
    goto LABEL_44;
  }
  if ((a18 & 1) == 0)
  {
    v46 = *(char **)(a2 + 32);
    if (!v46)
      goto LABEL_45;
    v33.i64[0] = *(_QWORD *)(a16 + 8 * a1);
    goto LABEL_39;
  }
  if ((a21 & 1) == 0)
  {
    v46 = *(char **)(a2 + 32);
    if (v46)
    {
      v33 = *(int32x4_t *)(a19 + 16 * a1);
LABEL_39:
      v68 = v33;
      v52 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a2 + 32) = v46;
      if ((v52 & 1) == 0)
      {
        v46 = sub_1B1C636E0(0, *((_QWORD *)v46 + 2) + 1, 1, v46);
        *(_QWORD *)(a2 + 32) = v46;
      }
      v54 = *((_QWORD *)v46 + 2);
      v53 = *((_QWORD *)v46 + 3);
      if (v54 >= v53 >> 1)
        v46 = sub_1B1C636E0(v53 > 1, v54 + 1, 1, v46);
      *((_QWORD *)v46 + 2) = v54 + 1;
      v51 = (int32x4_t *)&v46[16 * v54];
      v50 = v68;
LABEL_44:
      v51[2] = v50;
      *(_QWORD *)(a2 + 32) = v46;
    }
  }
LABEL_45:
  if ((a24 & 1) != 0)
  {
    if ((a1 & 0x8000000000000000) != 0 || HIDWORD(a1))
    {
      result = sub_1B222967C();
      __break(1u);
    }
    else
    {
      v60 = *(_QWORD *)(a2 + 40);
      result = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a2 + 40) = v60;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1B1C65F68(0, *(_QWORD *)(v60 + 16) + 1, 1, (char *)v60);
        v60 = result;
        *(_QWORD *)(a2 + 40) = result;
      }
      v62 = *(_QWORD *)(v60 + 16);
      v61 = *(_QWORD *)(v60 + 24);
      if (v62 >= v61 >> 1)
      {
        result = (uint64_t)sub_1B1C65F68(v61 > 1, v62 + 1, 1, (char *)v60);
        v60 = result;
      }
      *(_QWORD *)(v60 + 16) = v62 + 1;
      *(_DWORD *)(v60 + 4 * v62 + 32) = a1;
      *(_QWORD *)(a2 + 40) = v60;
    }
  }
  else
  {
    v55 = *(_DWORD *)(a22 + 4 * a1);
    v56 = *(_QWORD *)(a2 + 40);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 40) = v56;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B1C65F68(0, *(_QWORD *)(v56 + 16) + 1, 1, (char *)v56);
      v56 = result;
      *(_QWORD *)(a2 + 40) = result;
    }
    v59 = *(_QWORD *)(v56 + 16);
    v58 = *(_QWORD *)(v56 + 24);
    if (v59 >= v58 >> 1)
    {
      result = (uint64_t)sub_1B1C65F68(v58 > 1, v59 + 1, 1, (char *)v56);
      v56 = result;
    }
    *(_QWORD *)(v56 + 16) = v59 + 1;
    *(_DWORD *)(v56 + 4 * v59 + 32) = v55;
    *(_QWORD *)(a2 + 40) = v56;
  }
  return result;
}

uint64_t sub_1B1C88508(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a6 + 104))(*((unsigned __int8 *)a4 + 20));
  if ((result & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *a5;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_1B1C92D20(0, *(_QWORD *)(v10 + 16));
    }
    else
    {
      *a5 = (uint64_t)sub_1B1B1CB60(0, *(_QWORD *)(v10 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    if (*((_BYTE *)a4 + 12) == 1)
    {
      v11 = a5 + 3;
      if (!a5[3])
        *v11 = MEMORY[0x1E0DEE9D8];
      v12 = swift_isUniquelyReferenced_nonNull_native();
      v13 = *v11;
      if (v12)
      {
        sub_1B1C92AEC(0, *(_QWORD *)(v13 + 16));
      }
      else
      {
        *v11 = (uint64_t)sub_1B1B1CA94(0, *(_QWORD *)(v13 + 24) >> 1);
        swift_bridgeObjectRelease();
      }
    }
    if (*((_BYTE *)a4 + 15) == 1)
    {
      v14 = a5 + 4;
      if (!a5[4])
        *v14 = MEMORY[0x1E0DEE9D8];
      v15 = swift_isUniquelyReferenced_nonNull_native();
      v16 = *v14;
      if (v15)
      {
        sub_1B1C92D20(0, *(_QWORD *)(v16 + 16));
      }
      else
      {
        *v14 = (uint64_t)sub_1B1B1CB60(0, *(_QWORD *)(v16 + 24) >> 1);
        swift_bridgeObjectRelease();
      }
    }
    v17 = a5 + 2;
    if (!a5[2])
      *v17 = MEMORY[0x1E0DEE9D8];
    v18 = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v17;
    if (v18)
    {
      sub_1B1C92D20(0, *(_QWORD *)(v19 + 16));
    }
    else
    {
      *v17 = (uint64_t)sub_1B1B1CB60(0, *(_QWORD *)(v19 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    if (*((_BYTE *)a4 + 20) == 3 || *((_BYTE *)a4 + 14) == 1)
    {
      v20 = a5 + 1;
      if (!a5[1])
        *v20 = MEMORY[0x1E0DEE9D8];
      v21 = swift_isUniquelyReferenced_nonNull_native();
      v22 = *v20;
      if (v21)
      {
        sub_1B1C93FC8(0, *(_QWORD *)(v22 + 16));
      }
      else
      {
        *v20 = (uint64_t)sub_1B1B1CAB0(0, *(_QWORD *)(v22 + 24) >> 1);
        swift_bridgeObjectRelease();
      }
    }
    v23 = swift_isUniquelyReferenced_nonNull_native();
    v24 = a5[5];
    if (v23)
    {
      sub_1B1C92AE0(0, *(_QWORD *)(v24 + 16));
    }
    else
    {
      a5[5] = (uint64_t)sub_1B1B1C93C(0, *(_QWORD *)(v24 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    v26 = *a4;
    v25 = a4[1];
    result = sub_1B1FD568C((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F470, v26 | (v25 << 32));
    if ((result & 1) != 0)
    {
      swift_retain();
      swift_retain();
      v27 = sub_1B1A101F0(a3);
      swift_release();
      v28 = sub_1B2020528(v27, (uint64_t)&type metadata for IsSubEntityOf);
      v30 = v29;
      result = swift_release();
      if ((v30 & 1) != 0 || __PAIR64__(v25, v26) != v28)
        __asm { BR              X10 }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ParticleSubSpawn.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1B1C8A608 + 4 * byte_1B22873CD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1B1C8A63C + 4 * byte_1B22873C8[v4]))();
}

uint64_t sub_1B1C8A63C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8A644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1C8A64CLL);
  return result;
}

uint64_t sub_1B1C8A658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1C8A660);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1B1C8A664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8A66C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn.CodingKeys()
{
  return &type metadata for ParticleSubSpawn.CodingKeys;
}

__n128 initializeWithCopy for ParticleSpawnState(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleSpawnState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 113))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 112);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSpawnState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 113) = 0;
    if (a2)
      *(_BYTE *)(result + 112) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSpawnState()
{
  return &type metadata for ParticleSpawnState;
}

ValueMetadata *type metadata accessor for ParticleContinuousSpawn()
{
  return &type metadata for ParticleContinuousSpawn;
}

uint64_t initializeBufferWithCopyOfBuffer for ParticleSpawnOverDistance(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleSpawnOverDistance(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSpawnOverDistance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSpawnOverDistance()
{
  return &type metadata for ParticleSpawnOverDistance;
}

ValueMetadata *type metadata accessor for ParticleVariableSpawn()
{
  return &type metadata for ParticleVariableSpawn;
}

ValueMetadata *type metadata accessor for ParticleBurstSpawn()
{
  return &type metadata for ParticleBurstSpawn;
}

ValueMetadata *type metadata accessor for ParticlePeriodicBurstSpawn()
{
  return &type metadata for ParticlePeriodicBurstSpawn;
}

ValueMetadata *type metadata accessor for ParticleSpawnDuration()
{
  return &type metadata for ParticleSpawnDuration;
}

ValueMetadata *type metadata accessor for ParticleSpawnDelay()
{
  return &type metadata for ParticleSpawnDelay;
}

ValueMetadata *type metadata accessor for ParticleRespawn()
{
  return &type metadata for ParticleRespawn;
}

uint64_t storeEnumTagSinglePayload for ParticleSubSpawn.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B1C8A8F4 + 4 * byte_1B22873D7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B1C8A928 + 4 * byte_1B22873D2[v4]))();
}

uint64_t sub_1B1C8A928(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8A930(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1C8A938);
  return result;
}

uint64_t sub_1B1C8A944(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1C8A94CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B1C8A950(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8A958(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticleSubSpawn.Mode()
{
  return &type metadata for ParticleSubSpawn.Mode;
}

unint64_t sub_1B1C8A978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5D040;
  if (!qword_1EEF5D040)
  {
    sub_1B1A02758(255, &qword_1EEF5D048, (uint64_t)&type metadata for ParticleSubSpawn.Mode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5D040);
  }
  return result;
}

unint64_t sub_1B1C8A9DC()
{
  unint64_t result;

  result = qword_1EEF5D050;
  if (!qword_1EEF5D050)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22879A0, &type metadata for ParticleSubSpawn.Mode);
    atomic_store(result, (unint64_t *)&qword_1EEF5D050);
  }
  return result;
}

unint64_t sub_1B1C8AA24()
{
  unint64_t result;

  result = qword_1EEF5D058;
  if (!qword_1EEF5D058)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2287E70, &type metadata for ParticleSubSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D058);
  }
  return result;
}

unint64_t sub_1B1C8AA6C()
{
  unint64_t result;

  result = qword_1ED4B8E50;
  if (!qword_1ED4B8E50)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2287DA8, &type metadata for ParticleSubSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8E50);
  }
  return result;
}

unint64_t sub_1B1C8AAB4()
{
  unint64_t result;

  result = qword_1ED4B8E48;
  if (!qword_1ED4B8E48)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2287DD0, &type metadata for ParticleSubSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8E48);
  }
  return result;
}

unint64_t sub_1B1C8AAF8()
{
  unint64_t result;

  result = qword_1ED4B99B0;
  if (!qword_1ED4B99B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22888C8, &type metadata for ParticleContinuousSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B99B0);
  }
  return result;
}

unint64_t sub_1B1C8AB3C()
{
  unint64_t result;

  result = qword_1EEF5D070;
  if (!qword_1EEF5D070)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288878, &type metadata for ParticleSpawnOverDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D070);
  }
  return result;
}

unint64_t sub_1B1C8AB80()
{
  unint64_t result;

  result = qword_1EEF5D088;
  if (!qword_1EEF5D088)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288828, &type metadata for ParticleVariableSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D088);
  }
  return result;
}

uint64_t sub_1B1C8ABC4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1B1C8AC7C(255, (unint64_t *)&qword_1ED4BA5A8);
    v8 = a2;
    result = MEMORY[0x1B5E23E74](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1C8AC38()
{
  unint64_t result;

  result = qword_1ED4B9260;
  if (!qword_1ED4B9260)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22887D8, &type metadata for ParticleBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9260);
  }
  return result;
}

void sub_1B1C8AC7C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1B2228E48();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1B1C8ACC4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1B1C8AC7C(255, (unint64_t *)&qword_1ED4BA5B8);
    v8 = a2;
    result = MEMORY[0x1B5E23E74](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1C8AD38()
{
  unint64_t result;

  result = qword_1ED4B9B60;
  if (!qword_1ED4B9B60)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288788, &type metadata for ParticlePeriodicBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9B60);
  }
  return result;
}

unint64_t sub_1B1C8AD7C()
{
  unint64_t result;

  result = qword_1EEF5D0B8;
  if (!qword_1EEF5D0B8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288738, &type metadata for ParticleSpawnDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D0B8);
  }
  return result;
}

unint64_t sub_1B1C8ADC0()
{
  unint64_t result;

  result = qword_1ED4B9358;
  if (!qword_1ED4B9358)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22886E8, &type metadata for ParticleSpawnDelay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9358);
  }
  return result;
}

unint64_t sub_1B1C8AE04()
{
  unint64_t result;

  result = qword_1ED4B8CB8;
  if (!qword_1ED4B8CB8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288698, &type metadata for ParticleRespawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8CB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleRespawn.CodingKeys()
{
  return &type metadata for ParticleRespawn.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleSpawnDelay.CodingKeys()
{
  return &type metadata for ParticleSpawnDelay.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleSpawnDuration.CodingKeys()
{
  return &type metadata for ParticleSpawnDuration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ParticlePeriodicBurstSpawn.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1C8AEC8 + 4 * byte_1B22873E1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1C8AEFC + 4 * byte_1B22873DC[v4]))();
}

uint64_t sub_1B1C8AEFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8AF04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1C8AF0CLL);
  return result;
}

uint64_t sub_1B1C8AF18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1C8AF20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1C8AF24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8AF2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticlePeriodicBurstSpawn.CodingKeys()
{
  return &type metadata for ParticlePeriodicBurstSpawn.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleBurstSpawn.CodingKeys()
{
  return &type metadata for ParticleBurstSpawn.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleVariableSpawn.CodingKeys()
{
  return &type metadata for ParticleVariableSpawn.CodingKeys;
}

uint64_t _s3VFX21ParticleVariableSpawnV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1C8AFBC + 4 * byte_1B22873EB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1C8AFF0 + 4 * byte_1B22873E6[v4]))();
}

uint64_t sub_1B1C8AFF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8AFF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1C8B000);
  return result;
}

uint64_t sub_1B1C8B00C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1C8B014);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1C8B018(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8B020(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticleSpawnOverDistance.CodingKeys()
{
  return &type metadata for ParticleSpawnOverDistance.CodingKeys;
}

uint64_t _s3VFX15ParticleRespawnV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1C8B07C + 4 * byte_1B22873F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1C8B09C + 4 * byte_1B22873F5[v4]))();
}

_BYTE *sub_1B1C8B07C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1C8B09C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1C8B0A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1C8B0AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1C8B0B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1C8B0BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ParticleContinuousSpawn.CodingKeys()
{
  return &type metadata for ParticleContinuousSpawn.CodingKeys;
}

unint64_t sub_1B1C8B0DC()
{
  unint64_t result;

  result = qword_1EEF5D0D8;
  if (!qword_1EEF5D0D8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22880F8, &type metadata for ParticleContinuousSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D0D8);
  }
  return result;
}

unint64_t sub_1B1C8B124()
{
  unint64_t result;

  result = qword_1EEF5D0E0;
  if (!qword_1EEF5D0E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22881E8, &type metadata for ParticleSpawnOverDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D0E0);
  }
  return result;
}

unint64_t sub_1B1C8B16C()
{
  unint64_t result;

  result = qword_1EEF5D0E8;
  if (!qword_1EEF5D0E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22882D8, &type metadata for ParticleVariableSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D0E8);
  }
  return result;
}

unint64_t sub_1B1C8B1B4()
{
  unint64_t result;

  result = qword_1EEF5D0F0;
  if (!qword_1EEF5D0F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288390, &type metadata for ParticleBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D0F0);
  }
  return result;
}

unint64_t sub_1B1C8B1FC()
{
  unint64_t result;

  result = qword_1EEF5D0F8;
  if (!qword_1EEF5D0F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288448, &type metadata for ParticlePeriodicBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D0F8);
  }
  return result;
}

unint64_t sub_1B1C8B244()
{
  unint64_t result;

  result = qword_1EEF5D100;
  if (!qword_1EEF5D100)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288500, &type metadata for ParticleSpawnDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D100);
  }
  return result;
}

unint64_t sub_1B1C8B28C()
{
  unint64_t result;

  result = qword_1EEF5D108;
  if (!qword_1EEF5D108)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22885B8, &type metadata for ParticleSpawnDelay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D108);
  }
  return result;
}

unint64_t sub_1B1C8B2D4()
{
  unint64_t result;

  result = qword_1EEF5D110;
  if (!qword_1EEF5D110)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288670, &type metadata for ParticleRespawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D110);
  }
  return result;
}

unint64_t sub_1B1C8B31C()
{
  unint64_t result;

  result = qword_1ED4B8CC8;
  if (!qword_1ED4B8CC8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22885E0, &type metadata for ParticleRespawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8CC8);
  }
  return result;
}

unint64_t sub_1B1C8B364()
{
  unint64_t result;

  result = qword_1ED4B8CC0;
  if (!qword_1ED4B8CC0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288608, &type metadata for ParticleRespawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8CC0);
  }
  return result;
}

unint64_t sub_1B1C8B3AC()
{
  unint64_t result;

  result = qword_1ED4B9368;
  if (!qword_1ED4B9368)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288528, &type metadata for ParticleSpawnDelay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9368);
  }
  return result;
}

unint64_t sub_1B1C8B3F4()
{
  unint64_t result;

  result = qword_1ED4B9360;
  if (!qword_1ED4B9360)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288550, &type metadata for ParticleSpawnDelay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9360);
  }
  return result;
}

unint64_t sub_1B1C8B43C()
{
  unint64_t result;

  result = qword_1EEF5D118;
  if (!qword_1EEF5D118)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288470, &type metadata for ParticleSpawnDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D118);
  }
  return result;
}

unint64_t sub_1B1C8B484()
{
  unint64_t result;

  result = qword_1EEF5D120;
  if (!qword_1EEF5D120)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288498, &type metadata for ParticleSpawnDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D120);
  }
  return result;
}

unint64_t sub_1B1C8B4CC()
{
  unint64_t result;

  result = qword_1ED4B9B70;
  if (!qword_1ED4B9B70)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22883B8, &type metadata for ParticlePeriodicBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9B70);
  }
  return result;
}

unint64_t sub_1B1C8B514()
{
  unint64_t result;

  result = qword_1ED4B9B68;
  if (!qword_1ED4B9B68)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22883E0, &type metadata for ParticlePeriodicBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9B68);
  }
  return result;
}

unint64_t sub_1B1C8B55C()
{
  unint64_t result;

  result = qword_1ED4B9270;
  if (!qword_1ED4B9270)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288300, &type metadata for ParticleBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9270);
  }
  return result;
}

unint64_t sub_1B1C8B5A4()
{
  unint64_t result;

  result = qword_1ED4B9268;
  if (!qword_1ED4B9268)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288328, &type metadata for ParticleBurstSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9268);
  }
  return result;
}

unint64_t sub_1B1C8B5EC()
{
  unint64_t result;

  result = qword_1EEF5D128;
  if (!qword_1EEF5D128)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288210, &type metadata for ParticleVariableSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D128);
  }
  return result;
}

unint64_t sub_1B1C8B634()
{
  unint64_t result;

  result = qword_1EEF5D130;
  if (!qword_1EEF5D130)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288238, &type metadata for ParticleVariableSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D130);
  }
  return result;
}

unint64_t sub_1B1C8B67C()
{
  unint64_t result;

  result = qword_1EEF5D138;
  if (!qword_1EEF5D138)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288120, &type metadata for ParticleSpawnOverDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D138);
  }
  return result;
}

unint64_t sub_1B1C8B6C4()
{
  unint64_t result;

  result = qword_1EEF5D140;
  if (!qword_1EEF5D140)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288148, &type metadata for ParticleSpawnOverDistance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D140);
  }
  return result;
}

unint64_t sub_1B1C8B70C()
{
  unint64_t result;

  result = qword_1ED4B99C0;
  if (!qword_1ED4B99C0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288030, &type metadata for ParticleContinuousSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B99C0);
  }
  return result;
}

unint64_t sub_1B1C8B754()
{
  unint64_t result;

  result = qword_1ED4B99B8;
  if (!qword_1ED4B99B8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288058, &type metadata for ParticleContinuousSpawn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B99B8);
  }
  return result;
}

uint64_t sub_1B1C8B798(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C8B7C8 + 4 * byte_1B2288920[a1]))(0x656372756F73, 0xE600000000000000);
}

unint64_t sub_1B1C8B7C8()
{
  return 0xD000000000000012;
}

unint64_t sub_1B1C8B810()
{
  return 0xD000000000000014;
}

uint64_t sub_1B1C8B830()
{
  return 0x6F666E49676F6CLL;
}

uint64_t sub_1B1C8B848()
{
  return 0x6963697473616C65;
}

uint64_t sub_1B1C8B864(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C8B894 + 4 * byte_1B2288927[a1]))(0x656372756F73, 0xE600000000000000);
}

unint64_t sub_1B1C8B894()
{
  return 0xD000000000000012;
}

unint64_t sub_1B1C8B8DC()
{
  return 0xD000000000000014;
}

uint64_t sub_1B1C8B8FC()
{
  return 0x6F666E49676F6CLL;
}

uint64_t sub_1B1C8B914()
{
  return 0x6963697473616C65;
}

void sub_1B1C8B930(char *a1)
{
  sub_1B1F94C98(*a1);
}

void sub_1B1C8B93C()
{
  char *v0;

  sub_1B1DB528C(0, *v0);
}

void sub_1B1C8B948(uint64_t a1)
{
  char *v1;

  sub_1B1DB4094(a1, *v1);
}

void sub_1B1C8B950(uint64_t a1)
{
  char *v1;

  sub_1B1DB528C(a1, *v1);
}

uint64_t sub_1B1C8B958@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1C8D304();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C8B984@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1C8B798(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1C8B9AC()
{
  unsigned __int8 *v0;

  return sub_1B1C8B864(*v0);
}

uint64_t sub_1B1C8B9B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1C8D304();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C8B9D8()
{
  sub_1B1C8D6EC();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C8BA00()
{
  sub_1B1C8D6EC();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C8BA28(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;
  char v17;

  v3 = v1;
  sub_1B1C8D7A0(0, &qword_1EEF5D158, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = &v13[-v9];
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C8D6EC();
  sub_1B222A180();
  v14 = *v3;
  v13[7] = 0;
  sub_1B1A0895C();
  sub_1B2229958();
  if (!v2)
  {
    v11 = MEMORY[0x1E0DEB418];
    sub_1B1A18378((uint64_t)(v3 + 1), (uint64_t)v15, &qword_1ED4BA580, MEMORY[0x1E0DEB418]);
    sub_1B1A18378((uint64_t)v15, (uint64_t)&v16, &qword_1ED4BA580, v11);
    if ((v17 & 1) == 0)
    {
      LOBYTE(v14) = 1;
      sub_1B2229940();
    }
    LOBYTE(v14) = 2;
    sub_1B2229934();
    LOBYTE(v14) = 3;
    sub_1B222991C();
    LOBYTE(v14) = 4;
    sub_1B222991C();
    LOBYTE(v14) = 5;
    sub_1B222991C();
    LOBYTE(v14) = 6;
    sub_1B2229934();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B1C8BC64()
{
  return type metadata accessor for ParticleRibbonTrailsSystem();
}

double sub_1B1C8BC80@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];

  sub_1B1C8D3F4(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B1C8BCB8(_QWORD *a1)
{
  return sub_1B1C8BA28(a1);
}

double sub_1B1C8BCE8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)a1 = 0xFFFFFFFFLL;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 20) = 1065353216;
  *(_WORD *)(a1 + 24) = 257;
  *(_BYTE *)(a1 + 26) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  return result;
}

uint64_t sub_1B1C8BD18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  float v9;
  char v10;
  unsigned __int32 v11;
  int v12;
  float v13;
  uint64_t v14;
  float v15;
  float v16;
  uint64_t v17;
  __int128 v18;
  unsigned __int16 *v19;
  _QWORD *v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  unsigned __int32 v27;
  unsigned __int8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  ValueMetadata *v57;
  _QWORD *v58;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v60;
  _QWORD *v61;
  size_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  ValueMetadata *v71;
  uint64_t v72;
  uint64_t v74;
  char v75;
  unsigned __int16 *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD v94[2];
  uint64_t v95;
  _QWORD v96[3];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _OWORD v104[12];
  unint64_t v105;
  unsigned __int32 v106;
  unsigned __int8 v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[12];
  unint64_t v117;
  unsigned __int32 v118;
  unsigned __int8 v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD v128[2];
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  unsigned __int16 *v133;
  int v134;
  char v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  _BYTE v139[40];
  __n128 v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  _DWORD v149[2];
  unint64_t v150;
  char v151;
  float v152;
  char v153;
  char v154;
  char v155;
  float v156;

  v2 = v1;
  v4 = *(_QWORD *)a1;
  swift_retain();
  v5 = *(_QWORD *)(a1 + 8);
  swift_retain();
  sub_1B1D16E08(v5, &v140);
  swift_release();
  if (v142 == 2)
  {
    v6 = 0;
    v7 = 0;
    LODWORD(v8) = 0;
    v9 = 1.0;
    v10 = 1;
    v11 = -1;
    v12 = 1;
    v13 = 0.0;
    LOBYTE(v14) = 1;
  }
  else
  {
    v7 = v140.n128_u64[1];
    v11 = v140.n128_u32[0];
    v6 = v140.n128_u32[1];
    v10 = v141 & 1;
    v9 = *((float *)&v141 + 1);
    v12 = v142 & 1;
    v14 = (v142 >> 8) & 1;
    v8 = (v142 >> 16) & 1;
    v13 = *((float *)&v142 + 1);
  }
  v149[0] = v11;
  v149[1] = v6;
  v86 = v6;
  v150 = v7;
  v90 = v10;
  v151 = v10;
  v152 = v9;
  v153 = v12;
  v154 = v14;
  v155 = v8;
  v156 = v13;
  if (v9 < 0.0)
    v15 = 0.0;
  else
    v15 = v9;
  if (v13 < 0.0)
    v16 = 0.0;
  else
    v16 = v13;
  if ((_DWORD)v8)
  {
    sub_1B1A02758(0, &qword_1ED4BAFF0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v17 + 40) = 0x80000001B2337320;
    sub_1B222A048();
    swift_bridgeObjectRelease();
  }
  v18 = *(_OWORD *)(a1 + 104);
  v130 = *(_OWORD *)(a1 + 88);
  v131 = v18;
  v132 = *(_QWORD *)(a1 + 120);
  sub_1B1B6F40C((uint64_t)v94);
  v128[0] = v94[0];
  v128[1] = v94[1];
  v129 = v95;
  sub_1B1E8FCE4(v4, (uint64_t)v128, 0x200000000, v96);
  v19 = (unsigned __int16 *)v96[0];
  v77 = v96[1];
  v78 = v98;
  v88 = v99;
  v89 = v100;
  v20 = v102;
  v79 = v97;
  v80 = v101;
  v92 = v103;
  v81 = v96[2];
  sub_1B1A18378((uint64_t)v96, (uint64_t)&v117, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  v21 = v117;
  if (v117)
  {
    v85 = v12;
    v84 = v7;
    if (!(_DWORD)v8)
    {
      v36 = v127;
      v35 = v126;
      v33 = v124;
      v34 = v125;
      v32 = v123;
      v31 = v122;
      v30 = v121;
      v29 = v120;
      v28 = v119;
      v23 = v92;
      v27 = v118;
      goto LABEL_23;
    }
    v74 = v2;
    v76 = v19;
    v82 = v20;
    v22 = v8;
    v23 = v92;
  }
  else
  {
    if ((v8 & 1) == 0)
      goto LABEL_73;
    v74 = v2;
    v76 = v19;
    v84 = v7;
    v85 = v12;
    v82 = v20;
    v22 = v8;
    v23 = 0;
  }
  sub_1B1A02758(0, &qword_1ED4BAFF0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1B226D240;
  v140.n128_u64[0] = 0;
  v140.n128_u64[1] = 0xE000000000000000;
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v140.n128_u64[0] = 0xD000000000000026;
  v140.n128_u64[1] = 0x80000001B23372D0;
  sub_1B1A18378((uint64_t)v96, (uint64_t)v116, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (v116[0])
    v25 = v116[10];
  else
    v25 = 0;
  v105 = v25;
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v26 = v140;
  *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
  *(__n128 *)(v24 + 32) = v26;
  sub_1B222A048();
  swift_bridgeObjectRelease();
  sub_1B1A18378((uint64_t)v96, (uint64_t)&v105, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  v21 = v105;
  if (!v105)
  {
    LOBYTE(v8) = v22;
    v20 = v82;
    v19 = v76;
    goto LABEL_25;
  }
  v27 = v106;
  v28 = v107;
  v29 = v108;
  v30 = v109;
  v31 = v110;
  v32 = v111;
  v33 = v112;
  v34 = v113;
  v35 = v114;
  v36 = v115;
  LOBYTE(v8) = v22;
  v20 = v82;
  v2 = v74;
  v19 = v76;
LABEL_23:
  v140.n128_u64[0] = v21;
  v140.n128_u32[2] = v27;
  v140.n128_u8[12] = v28;
  v141 = v29;
  LOBYTE(v142) = v30;
  v143 = v31;
  v144 = v32;
  v145 = v33;
  v146 = v34;
  v147 = v35;
  v148 = v36;
  swift_retain();
  swift_retain();
  sub_1B1A086DC(v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A086A4);
  sub_1B1BED8F4((uint64_t)&v140, v23, v149, v11 | (unint64_t)(v86 << 32), v4, v8, v84, v90, v15, v16, v2, v14);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
LABEL_25:
  v37 = v85;
  if (v23 <= 0)
    v37 = 0;
  if (v37 == 1)
  {
    sub_1B1A18378((uint64_t)v96, (uint64_t)v104, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (*(_QWORD *)&v104[0])
    {
      v104[8] = v104[2];
      v104[9] = v104[3];
      v104[10] = v104[4];
      v104[11] = v104[5];
      v104[6] = v104[0];
      v104[7] = v104[1];
      if (sub_1B1BEC0FC((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0, 0))
      {
        if (v92 >= 1 && v89)
        {
          v75 = v8;
          v38 = v20[4];
          v39 = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v133 = v19;
          v134 = v77;
          v135 = BYTE4(v77);
          v136 = v81;
          v137 = v79;
          v138 = v78;
          swift_retain();
          swift_retain();
          swift_retain();
          v40 = 0;
          v41 = 0;
          v87 = v39;
          v83 = v38;
          while (1)
          {
            v91 = v41;
            v93 = v40;
            v42 = (unsigned int *)(v88 + 48 * v40);
            v44 = *v42;
            v43 = v42[1];
            v45 = *((_QWORD *)v42 + 2);
            v46 = *((_QWORD *)v42 + 4);
            v47 = *((_QWORD *)v42 + 5);
            if (v39)
            {
              v48 = *(os_unfair_lock_s **)(v47 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v48);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v47 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v38);
            sub_1B1A18378((uint64_t)(v20 + 6), (uint64_t)v139, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
            v49 = v20[4];
            v50 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v47 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v20[6] = ecs_stack_allocator_allocate(v49, 48 * v50, 8);
            v20[7] = v50;
            v20[9] = 0;
            v20[10] = 0;
            v20[8] = 0;
            swift_release();
            if (v45)
            {
              if (v46)
              {
                v51 = 0;
                v52 = *(_QWORD *)(v47 + 48);
                v53 = *(_QWORD *)(v52 + 16) - 1;
                v38 = v83;
                do
                {
                  if (*(ValueMetadata **)(v52 + 32) == &type metadata for Velocity)
                  {
                    v54 = 0;
                  }
                  else
                  {
                    v54 = 0;
                    v56 = v53;
                    do
                    {
                      v57 = *(ValueMetadata **)(v52 + 72 + v54);
                      v54 += 40;
                      --v56;
                    }
                    while (v57 != &type metadata for Velocity);
                  }
                  v55 = (_QWORD *)(*(_QWORD *)(v47 + 128)
                                 + *(_QWORD *)(v52 + 56 + v54)
                                 + 16 * *(_QWORD *)(v45 + 8 * v51));
                  *v55 = 0;
                  v55[1] = 0;
                  ++v51;
                }
                while (v51 != v46);
                goto LABEL_48;
              }
            }
            else if ((_DWORD)v44 != (_DWORD)v43)
            {
              v66 = *(_QWORD *)(v47 + 48);
              v67 = *(_QWORD *)(v66 + 16) - 1;
              v38 = v83;
              do
              {
                if (*(ValueMetadata **)(v66 + 32) == &type metadata for Velocity)
                {
                  v68 = 0;
                }
                else
                {
                  v68 = 0;
                  v70 = v67;
                  do
                  {
                    v71 = *(ValueMetadata **)(v66 + 72 + v68);
                    v68 += 40;
                    --v70;
                  }
                  while (v71 != &type metadata for Velocity);
                }
                v69 = (_QWORD *)(*(_QWORD *)(v47 + 128) + *(_QWORD *)(v66 + 56 + v68) + 16 * v44);
                *v69 = 0;
                v69[1] = 0;
                ++v44;
              }
              while (v44 != v43);
              goto LABEL_48;
            }
            v38 = v83;
LABEL_48:
            v41 = v91;
            sub_1B1F05D48(v20, &v133, (uint64_t)v139);
            if (*(_QWORD *)(v20[13] + 16))
            {
              v58 = (_QWORD *)swift_bridgeObjectRetain();
              sub_1B1F05034(v58, v47);
              swift_bridgeObjectRelease();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v60 = v20[13];
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                sub_1B1C92670(0, *(_QWORD *)(v60 + 16));
              }
              else
              {
                v61 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                if (*(_QWORD *)(v60 + 24) >= 2uLL)
                {
                  sub_1B1BF28AC(0, (unint64_t *)&qword_1ED4BADE0, (void (*)(uint64_t))sub_1B1B1F228);
                  v61 = (_QWORD *)swift_allocObject();
                  v62 = j__malloc_size(v61);
                  v61[2] = 0;
                  v61[3] = 2 * ((uint64_t)(v62 - 32) / 72);
                }
                v20[13] = v61;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v20[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                v63 = *(char **)(v47 + 232);
                v64 = *(char **)(v47 + 256);
                if (v63 == v64)
                {
                  v65 = *(char **)(v47 + 240);
                }
                else
                {
                  sub_1B1A1059C(v64, v63);
                  v64 = *(char **)(v47 + 232);
                  v65 = *(char **)(v47 + 240);
                  if (v65 == v64)
                  {
                    v65 = 0;
                    v64 = 0;
                    *(_QWORD *)(v47 + 232) = 0;
                    *(_QWORD *)(v47 + 240) = 0;
                  }
                }
                *(_QWORD *)(v47 + 248) = v65;
                *(_QWORD *)(v47 + 256) = v64;
              }
            }
            ecs_stack_allocator_pop_snapshot(v38);
            v39 = v87;
            if ((v87 & 1) != 0)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v47 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v47 + 376));
            }
            swift_release();
            v40 = v93 + 1;
            if (v93 + 1 == v89)
            {
              sub_1B1A086DC(v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19ED798);
              LOBYTE(v8) = v75;
              break;
            }
          }
        }
      }
    }
  }
  if ((v8 & 1) != 0)
  {
    sub_1B1A02758(0, &qword_1ED4BAFF0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1B226D240;
    *(_QWORD *)(v72 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v72 + 32) = 0xD000000000000010;
    *(_QWORD *)(v72 + 40) = 0x80000001B2337300;
    sub_1B222A048();
    sub_1B1A086DC(v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19ED798);
    swift_release();
    sub_1B19ED720((uint64_t)v94);
    return swift_bridgeObjectRelease();
  }
  sub_1B1A086DC(v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19ED798);
LABEL_73:
  swift_release();
  return sub_1B19ED720((uint64_t)v94);
}

_QWORD *sub_1B1C8C72C(_QWORD *result, uint64_t a2, uint64_t a3, _DWORD *a4, unint64_t a5, uint64_t a6, char a7, uint64_t a8, float a9, float a10, char a11, uint64_t a12, char a13)
{
  int v16;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  ValueMetadata *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  float v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int32 v78;
  __int32 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float v97;
  float v98;
  float32x4_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int *v108;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unsigned __int8 v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE v118[40];
  _OWORD v119[2];
  uint64_t v120;
  _QWORD v121[8];
  _QWORD v122[12];
  _OWORD v123[12];
  _QWORD v124[12];
  _QWORD v125[12];
  _OWORD v126[2];
  uint64_t v127;
  _OWORD v128[2];
  uint64_t v129;
  uint64_t v130;
  int v131;
  char v132;
  uint64_t v133;
  char v134;
  uint64_t v135;

  v16 = a5;
  v18 = result;
  if (*a4 == -1 && !a4[1])
  {
    if ((a7 & 1) != 0)
    {
      sub_1B1A02758(0, &qword_1ED4BAFF0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_1B226D240;
      *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v65 + 32) = 0xD000000000000039;
      *(_QWORD *)(v65 + 40) = 0x80000001B2337370;
      sub_1B222A048();
      result = (_QWORD *)swift_bridgeObjectRelease();
    }
    if ((a13 & 1) == 0 || !a2)
      return result;
    v66 = 0;
    v67 = v18 + 4;
    v68 = v18[2];
    while (1)
    {
      if (v68)
      {
        v70 = 0;
        v71 = v68;
        while (1)
        {
          while (1)
          {
            v69 = v70 + (v71 - v70) / 2;
            v72 = v67[3 * v69 + 2];
            if (v66 >= v72)
              break;
            v71 = v70 + (v71 - v70) / 2;
            if (v70 >= v69)
              goto LABEL_62;
          }
          if (v66 < v67[3 * v69 + 1] + v72)
            break;
          v70 = v69 + 1;
          if (v69 + 1 >= v71)
            goto LABEL_62;
        }
      }
      else
      {
LABEL_62:
        v69 = 0;
      }
      *(_OWORD *)(v67[3 * v69] + 16 * (v66 - v67[3 * v69 + 2])) = xmmword_1B2244E20;
      if (++v66 == a2)
        return result;
    }
  }
  v19 = HIDWORD(a5);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v130 = qword_1ED4D09F8;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  v134 = 2;
  v135 = 0;
  swift_retain();
  sub_1B1E40AF4(1, (uint64_t)v118);
  swift_release();
  sub_1B1B7AA28();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v20 + 56) = &type metadata for EmitterReference;
  *(_QWORD *)(v20 + 64) = &off_1E6387218;
  *(_DWORD *)(v20 + 32) = v16;
  *(_DWORD *)(v20 + 36) = v19;
  sub_1B1E6892C(v119);
  swift_setDeallocating();
  sub_1B1A025A0(0, (unint64_t *)&qword_1ED4B89D0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v118);
  v126[0] = v119[0];
  v126[1] = v119[1];
  v127 = v120;
  sub_1B1E8FCE4(a6, (uint64_t)v126, 0x200000000, v121);
  if ((a7 & 1) != 0)
  {
    sub_1B1A02758(0, &qword_1ED4BAFF0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1B226D240;
    sub_1B2229430();
    swift_bridgeObjectRelease();
    v113 = 0xD000000000000026;
    v114 = 0x80000001B2337340;
    sub_1B1A18378((uint64_t)v121, (uint64_t)v125, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (v125[0])
      v22 = v125[10];
    else
      v22 = 0;
    v124[0] = v22;
    sub_1B2229A0C();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v23 = v113;
    v24 = v114;
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 32) = v23;
    *(_QWORD *)(v21 + 40) = v24;
    sub_1B222A048();
    swift_bridgeObjectRelease();
  }
  if (!a2)
  {
    sub_1B1A086DC(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19ED798);
    return (_QWORD *)sub_1B19ED720((uint64_t)v119);
  }
  sub_1B1A18378((uint64_t)v121, (uint64_t)v124, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!v124[0])
    return (_QWORD *)sub_1B19ED720((uint64_t)v119);
  v25 = v124[7];
  v112 = v124[10];
  v107 = v124[8];
  v108 = (unsigned int *)v124[5];
  if ((a11 & 1) != 0)
  {
    v54 = *(_OWORD *)(a12 + 32);
    v128[0] = *(_OWORD *)(a12 + 16);
    v128[1] = v54;
    v129 = *(_QWORD *)(a12 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1E8FCE4(a6, (uint64_t)v128, 0x200000000, v122);
    sub_1B1A18378((uint64_t)v122, (uint64_t)v123, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (!*(_QWORD *)&v123[0])
      goto LABEL_46;
    v123[8] = v123[2];
    v123[9] = v123[3];
    v123[10] = v123[4];
    v123[11] = v123[5];
    v123[6] = v123[0];
    v123[7] = v123[1];
    v55 = sub_1B1BEC088();
    v57 = v56;
    sub_1B1A086DC(v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19ED798);
    if ((v57 & 1) != 0)
      goto LABEL_46;
    sub_1B1D16EC8(v55, (uint64_t)&v113);
    if ((unint64_t)v115 << 40 == 0x20000000000)
      goto LABEL_46;
    v28 = v116;
    if (!v116)
    {
      v106 = v117;
      if (v117 <= 1)
        v106 = 1;
      v28 = a3 / v106;
    }
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    v28 = a8;
  }
  if (v28 < 2 || (v29 = v28 * v112, v28 * v112 > a2))
  {
LABEL_46:
    if ((a13 & 1) == 0)
      goto LABEL_109;
    v58 = 0;
    v59 = v18 + 4;
    v60 = v18[2];
    while (1)
    {
      if (v60)
      {
        v62 = 0;
        v63 = v60;
        while (1)
        {
          while (1)
          {
            v61 = v62 + (v63 - v62) / 2;
            v64 = v59[3 * v61 + 2];
            if (v58 >= v64)
              break;
            v63 = v62 + (v63 - v62) / 2;
            if (v62 >= v61)
              goto LABEL_48;
          }
          if (v58 < v59[3 * v61 + 1] + v64)
            break;
          v62 = v61 + 1;
          if (v61 + 1 >= v63)
            goto LABEL_48;
        }
      }
      else
      {
LABEL_48:
        v61 = 0;
      }
      *(_OWORD *)(v59[3 * v61] + 16 * (v58 - v59[3 * v61 + 2])) = xmmword_1B2244E20;
      if (++v58 == a2)
        goto LABEL_109;
    }
  }
  if (!v112)
    goto LABEL_97;
  v30 = 0;
  v31 = v18 + 4;
  v32 = *(_QWORD *)(v107 + 136) + 32;
  v33 = v18[2];
  do
  {
    v35 = v25;
    v36 = v108;
    if (v25)
    {
      while (1)
      {
        v39 = v36[2];
        if (v30 >= v39)
        {
          v40 = *v36;
          if (v30 < (_DWORD)v39 - (_DWORD)v40 + v36[1])
            break;
        }
        v36 += 12;
        if (!--v35)
          goto LABEL_21;
      }
      v41 = *((_QWORD *)v36 + 2);
      if (v41)
        v37 = *(_QWORD *)(v41 + 8 * (v30 - v39));
      else
        v37 = v30 + v40 - v39;
      v38 = *(_DWORD *)(*((_QWORD *)v36 + 5) + 188);
    }
    else
    {
LABEL_21:
      v37 = -1;
      v38 = -1;
    }
    v42 = *(_QWORD *)(v32 + 8 * v38);
    v43 = *(_QWORD *)(v42 + 48);
    v44 = v43 + 32;
    if (*(ValueMetadata **)(v43 + 32) == &type metadata for Position)
    {
      v45 = 0;
      v50 = v30 * v28;
      if (!v33)
        goto LABEL_18;
    }
    else
    {
      v45 = 0;
      v46 = *(_QWORD *)(v43 + 16);
      v47 = v43 + 72;
      v48 = v46 - 1;
      do
      {
        v49 = *(ValueMetadata **)(v47 + v45);
        v45 += 40;
        --v48;
      }
      while (v49 != &type metadata for Position);
      v50 = v30 * v28;
      if (!v33)
      {
LABEL_18:
        v34 = 0;
        goto LABEL_19;
      }
    }
    v51 = 0;
    v52 = v33;
    while (1)
    {
      while (1)
      {
        v34 = v51 + (v52 - v51) / 2;
        v53 = v31[3 * v34 + 2];
        if (v50 >= v53)
          break;
        v52 = v51 + (v52 - v51) / 2;
        if (v51 >= v34)
          goto LABEL_18;
      }
      if (v50 < v31[3 * v34 + 1] + v53)
        break;
      v51 = v34 + 1;
      if (v34 + 1 >= v52)
        goto LABEL_18;
    }
LABEL_19:
    ++v30;
    *(_OWORD *)(v31[3 * v34] + 16 * (v50 - v31[3 * v34 + 2])) = *(_OWORD *)(*(_QWORD *)(v42 + 128)
                                                                          + *(_QWORD *)(v44 + v45 + 24)
                                                                          + 16 * v37);
  }
  while (v30 != v112);
  if (a9 > 0.00000011921)
  {
    v73 = 0;
    v74 = a9 / (float)(v28 - 1);
    do
    {
      v75 = v73 * v28;
      ++v73;
      v76 = v28 - 1 + v75;
      v77 = v18[2];
      do
      {
        v78 = v26.i32[3];
        v79 = v27.i32[3];
        v80 = v75 + 1;
        if (v77)
        {
          v81 = 0;
          v82 = v77;
          do
          {
            while (1)
            {
              v83 = v81 + (v82 - v81) / 2;
              v84 = v31[3 * v83 + 2];
              if (v75 >= v84)
                break;
              v82 = v81 + (v82 - v81) / 2;
              if (v81 >= v83)
                goto LABEL_82;
            }
            if (v75 < v31[3 * v83 + 1] + v84)
              goto LABEL_83;
            v81 = v83 + 1;
          }
          while (v83 + 1 < v82);
LABEL_82:
          v83 = 0;
          v84 = v18[6];
LABEL_83:
          v85 = 0;
          v86 = v31[3 * v83];
          v87 = v77;
          do
          {
            while (1)
            {
              v88 = v85 + (v87 - v85) / 2;
              v89 = v31[3 * v88 + 2];
              if (v80 >= v89)
                break;
              v87 = v85 + (v87 - v85) / 2;
              if (v85 >= v88)
                goto LABEL_88;
            }
            if (v80 < v31[3 * v88 + 1] + v89)
              goto LABEL_89;
            v85 = v88 + 1;
          }
          while (v88 + 1 < v87);
LABEL_88:
          v88 = 0;
LABEL_89:
          v90 = v31[3 * v88];
        }
        else
        {
          v88 = 0;
          v90 = v18[4];
          v84 = v18[6];
          v86 = v90;
        }
        v91 = v75 - v84;
        v92 = v80 - v31[3 * v88 + 2];
        v93 = *(float32x4_t *)(v90 + 16 * v92);
        v26 = v93;
        v26.i32[3] = v78;
        v94 = *(float32x4_t *)(v86 + 16 * v91);
        v27 = v94;
        v27.i32[3] = v79;
        v95 = vsubq_f32(v26, v27);
        v96 = vmulq_f32(v95, v95);
        v97 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v96, 2), vaddq_f32(v96, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v96.f32, 1))).f32[0];
        if (v97 > 0.000001)
        {
          v98 = sqrtf(v97);
          if (v74 < v98)
          {
            v93 = vaddq_f32(v27, vmulq_n_f32(v95, v74 / v98));
            v93.i32[3] = 1.0;
            *(float32x4_t *)(v90 + 16 * v92) = v93;
          }
          if (a10 != 0.0 && v97 < (float)((float)(v74 * v74) + 0.01))
          {
            v99 = vaddq_f32(vmulq_n_f32(v94, a10), vmulq_n_f32(v93, 1.0 - a10));
            v99.i32[3] = 1.0;
            *(float32x4_t *)(v90 + 16 * v92) = v99;
          }
        }
        v75 = v80;
      }
      while (v80 != v76);
    }
    while (v73 != v112);
  }
LABEL_97:
  if ((a13 & 1) != 0 && v29 < a2)
  {
    v100 = v18 + 4;
    v101 = v18[2];
    do
    {
      if (v101)
      {
        v103 = 0;
        v104 = v101;
        while (1)
        {
          while (1)
          {
            v102 = v103 + (v104 - v103) / 2;
            v105 = v100[3 * v102 + 2];
            if (v29 >= v105)
              break;
            v104 = v103 + (v104 - v103) / 2;
            if (v103 >= v102)
              goto LABEL_100;
          }
          if (v29 < v100[3 * v102 + 1] + v105)
            break;
          v103 = v102 + 1;
          if (v102 + 1 >= v104)
            goto LABEL_100;
        }
      }
      else
      {
LABEL_100:
        v102 = 0;
      }
      *(_OWORD *)(v100[3 * v102] + 16 * (v29 - v100[3 * v102 + 2])) = xmmword_1B2244E20;
      ++v29;
    }
    while (v29 != a2);
  }
LABEL_109:
  sub_1B1A086DC(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19ED798);
  sub_1B19ED720((uint64_t)v119);
  return sub_1B1A086DC(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19ED798);
}

uint64_t type metadata accessor for ParticleRibbonTrailsSystem()
{
  return objc_opt_self();
}

uint64_t sub_1B1C8D20C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;

  v0 = swift_allocObject();
  sub_1B1BF28AC(0, (unint64_t *)&qword_1ED4BAE50, (void (*)(uint64_t))sub_1B19F66EC);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = &type metadata for ParticleRibbonRenderer;
  *(_QWORD *)(inited + 40) = &off_1E63A8B90;
  v2 = sub_1B19F3C40(1, 1uLL);
  sub_1B1E569A0(inited, v2, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], 0x200000000uLL, 0, 0, 2, (uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  v3 = v5[1];
  *(_OWORD *)(v0 + 16) = v5[0];
  *(_OWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 48) = v6;
  return v0;
}

const char *sub_1B1C8D2F0()
{
  return "ParticleRibbonTrails";
}

uint64_t sub_1B1C8D304()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t getEnumTagSinglePayload for ParticleRibbonTrails(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleRibbonTrails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleRibbonTrails()
{
  return &type metadata for ParticleRibbonTrails;
}

uint64_t sub_1B1C8D3F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  int v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  float v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  char v30;

  sub_1B1C8D7A0(0, &qword_1EEF5D148, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v22 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1C8D6EC();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v30 = 0;
  sub_1B1A08878();
  sub_1B2229814();
  v11 = v27;
  sub_1B1A02758(0, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v30 = 1;
  sub_1B1C8D730();
  sub_1B22297B4();
  v26 = v28;
  v12 = v29;
  if (v29)
    v13 = 0;
  else
    v13 = v27;
  LOBYTE(v27) = 2;
  sub_1B22297F0();
  v15 = v14;
  v24 = v12;
  v25 = v13;
  LOBYTE(v27) = 3;
  v16 = sub_1B22297D8();
  LOBYTE(v27) = 4;
  v17 = sub_1B22297D8();
  LOBYTE(v27) = 5;
  v23 = sub_1B22297D8();
  LOBYTE(v27) = 6;
  v19 = sub_1B222979C();
  HIDWORD(v22) = v17;
  v20 = v24 | v26;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if ((v19 & 0x100000000) != 0)
    v21 = 0.0;
  else
    v21 = *(float *)&v19;
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v25;
  *(_BYTE *)(a2 + 16) = v20 & 1;
  *(_DWORD *)(a2 + 20) = v15;
  *(_BYTE *)(a2 + 24) = v16 & 1;
  *(_BYTE *)(a2 + 25) = BYTE4(v22) & 1;
  *(_BYTE *)(a2 + 26) = v23 & 1;
  *(float *)(a2 + 28) = v21;
  return result;
}

unint64_t sub_1B1C8D6EC()
{
  unint64_t result;

  result = qword_1EEF5D150;
  if (!qword_1EEF5D150)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288B24, &type metadata for ParticleRibbonTrails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D150);
  }
  return result;
}

unint64_t sub_1B1C8D730()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED4BA590;
  if (!qword_1ED4BA590)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = MEMORY[0x1E0DEB448];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEE9A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED4BA590);
  }
  return result;
}

void sub_1B1C8D7A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1B1C8D6EC();
    v7 = a3(a1, &type metadata for ParticleRibbonTrails.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for ParticleRibbonTrails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1B1C8D848 + 4 * byte_1B2288933[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1B1C8D87C + 4 * byte_1B228892E[v4]))();
}

uint64_t sub_1B1C8D87C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8D884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1C8D88CLL);
  return result;
}

uint64_t sub_1B1C8D898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1C8D8A0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1B1C8D8A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1C8D8AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticleRibbonTrails.CodingKeys()
{
  return &type metadata for ParticleRibbonTrails.CodingKeys;
}

unint64_t sub_1B1C8D8CC()
{
  unint64_t result;

  result = qword_1EEF5D160;
  if (!qword_1EEF5D160)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288AFC, &type metadata for ParticleRibbonTrails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D160);
  }
  return result;
}

unint64_t sub_1B1C8D914()
{
  unint64_t result;

  result = qword_1EEF5D168;
  if (!qword_1EEF5D168)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288A34, &type metadata for ParticleRibbonTrails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D168);
  }
  return result;
}

unint64_t sub_1B1C8D95C()
{
  unint64_t result;

  result = qword_1EEF5D170;
  if (!qword_1EEF5D170)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2288A5C, &type metadata for ParticleRibbonTrails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D170);
  }
  return result;
}

uint64_t destroy for ChunksStorage()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ChunksStorage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 28) = *(_QWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ChunksStorage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  return a1;
}

uint64_t assignWithTake for ChunksStorage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 28) = *(_QWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  return a1;
}

ValueMetadata *type metadata accessor for ChunksStorage()
{
  return &type metadata for ChunksStorage;
}

ValueMetadata *type metadata accessor for ChunksStorage.FilteredChunk()
{
  return &type metadata for ChunksStorage.FilteredChunk;
}

uint64_t sub_1B1C8DB1C(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (result != a2)
  {
    v3 = *v2;
    v4 = 8 * (result >> 6);
    v5 = *(_QWORD *)(*v2 + v4);
    v6 = a2 >> 6;
    v7 = 1 << a2;
    if ((*(_QWORD *)(*v2 + 8 * (a2 >> 6)) & (1 << a2)) != 0)
      v8 = v5 | (1 << result);
    else
      v8 = v5 & ~(1 << result);
    *(_QWORD *)(v3 + v4) = v8;
    if ((v5 & (1 << result)) != 0)
      v9 = *(_QWORD *)(v3 + 8 * v6) | v7;
    else
      v9 = *(_QWORD *)(v3 + 8 * v6) & ~v7;
    *(_QWORD *)(v3 + 8 * v6) = v9;
  }
  return result;
}

uint64_t sub_1B1C8DB80(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  if (result != a2)
  {
    v4 = result;
    v5 = *v2;
    v6 = *v2 + 32;
    v7 = *(_DWORD *)(v6 + 4 * result);
    v8 = *(_DWORD *)(v6 + 4 * a2);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B1FFED2C(v5);
      v5 = result;
    }
    *(_DWORD *)(v5 + 32 + 4 * v4) = v8;
    *(_DWORD *)(v5 + 32 + 4 * a2) = v7;
    *v2 = v5;
  }
  return result;
}

void sub_1B1C8DBF4(uint64_t a1, char a2, int a3)
{
  uint64_t v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 128));
  v7 = *(_QWORD **)(v3 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 96) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    *(_QWORD *)(v3 + 96) = sub_1B1FFECDC(v7);
  sub_1B1C8F4B0(a1, a2 & 1);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 80) + 8 * a3 + 32) + 200) == 1)
    *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 128));
}

uint64_t sub_1B1C8DCA4(size_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)(v1 + 152);
  v3 = v2[2];
  if (v3)
  {
    if (v2[5] == a1)
    {
      v4 = 0;
      return sub_1B1DB9FD8(v4);
    }
    if (v3 != 1)
    {
      v6 = v2 + 8;
      v4 = 1;
      do
      {
        v7 = *v6;
        v6 += 3;
        if (v7 == a1)
          return sub_1B1DB9FD8(v4);
      }
      while (v3 != ++v4);
    }
  }
  vfx_allocate_memory_entry(a1, 0x40uLL, *(_DWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity), (uint64_t)&v8);
  return v8;
}

BOOL sub_1B1C8DD58(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 96) + 40 * a1 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = (int *)(v2 + 32);
  v5 = v3 - 1;
  do
  {
    v6 = *v4++;
    v7 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 32 + 8 * v6);
    v9 = *(_QWORD *)(v7 + 232);
    v8 = *(_QWORD *)(v7 + 240);
    result = v8 != v9;
  }
  while (v8 == v9 && v5-- != 0);
  return result;
}

void sub_1B1C8DDAC(int a1, uint64_t a2, int a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  int v11;
  uint64_t v12;
  char **v13;
  char *v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = v4;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 128));
  v9 = *(_QWORD **)(v4 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 96) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    *(_QWORD *)(v4 + 96) = sub_1B1FFECDC(v9);
  sub_1B1C8F40C(a1, a4 & 1);
  v11 = a3;
  v12 = *(_QWORD *)(v4 + 96) + 32;
  v13 = (char **)(v12 + 40 * a3);
  if ((a4 & 1) != 0)
  {
    v14 = *v13;
    v15 = swift_isUniquelyReferenced_nonNull_native();
    *v13 = v14;
    if ((v15 & 1) == 0)
    {
      v14 = sub_1B1C62EF0(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
      *v13 = v14;
    }
    v17 = *((_QWORD *)v14 + 2);
    v16 = *((_QWORD *)v14 + 3);
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1B1C62EF0(v16 > 1, v17 + 1, 1, v14);
      *v13 = v14;
    }
    *((_QWORD *)v14 + 2) = v17 + 1;
    *(_DWORD *)&v14[4 * v17 + 32] = a1;
    *(_DWORD *)(v12 + 40 * a3 + 32) = a1;
  }
  else
  {
    v18 = v12 + 40 * a3;
    v19 = *(_QWORD *)(v18 + 8);
    sub_1B1C90FF0(v19, v19, a1);
    *(_QWORD *)(v18 + 8) = v19 + 1;
    *(_DWORD *)(v18 + 36) = a1;
  }
  *(_BYTE *)(v12 + 40 * v11 + 24) = 1;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 128));
}

uint64_t sub_1B1C8DF10(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 96) + 40 * a1 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(v1 + 136) + 32;
  if (v3 == 1)
  {
    v5 = 0;
    result = 0;
LABEL_8:
    v13 = v3 - v5;
    v14 = (int *)(v2 + 4 * v5 + 32);
    do
    {
      v15 = *v14++;
      result += *(_QWORD *)(*(_QWORD *)(v4 + 8 * v15) + 240) - *(_QWORD *)(*(_QWORD *)(v4 + 8 * v15) + 232);
      --v13;
    }
    while (v13);
    return result;
  }
  v7 = 0;
  v8 = 0;
  v5 = v3 & 0x7FFFFFFFFFFFFFFELL;
  v9 = (int *)(v2 + 36);
  v10 = v3 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v11 = *(_QWORD *)(v4 + 8 * *(v9 - 1));
    v12 = *(_QWORD *)(v4 + 8 * *v9);
    v7 += *(_QWORD *)(v11 + 240) - *(_QWORD *)(v11 + 232);
    v8 += *(_QWORD *)(v12 + 240) - *(_QWORD *)(v12 + 232);
    v9 += 2;
    v10 -= 2;
  }
  while (v10);
  result = v8 + v7;
  if (v3 != v5)
    goto LABEL_8;
  return result;
}

uint64_t sub_1B1C8DFC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int64_t v14;
  uint64_t i;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v21[32];
  task_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  int64x2_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  double (*v38)(_QWORD);
  int v39;
  int v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  size_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  _BYTE v70[24];
  char v71;

  v2 = v1;
  v3 = a1;
  if ((*(_BYTE *)(v1 + 121) & 1) != 0)
  {
    v4 = *(_QWORD *)(v1 + 88);
    v5 = *(_QWORD *)(v1 + 240);
    v6 = a1[1] - *a1;
    if (v4 - v5 < v6)
    {
      v7 = *(_QWORD *)(v1 + 256);
      if (v6 >= v4 - v5 + v7)
      {
        v11 = *(_QWORD *)(v1 + 128);
        if (v11)
          v57 = *(_QWORD *)(v1 + 136) - v11;
        else
          v57 = 0;
        v12 = 0;
        v52 = a1[1] - *a1;
        do
        {
          v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 40) + 16) + 32);
          v14 = *(_QWORD *)(v13 + 16);
          if (v14)
          {
            v66 = MEMORY[0x1E0DEE9D8];
            swift_retain();
            sub_1B202A0A8(0, v14, 0);
            sub_1B1C92290(0, (unint64_t *)&qword_1ED4B8C90, (unint64_t *)&qword_1ED4B8C70);
            sub_1B1C92290(0, (unint64_t *)&qword_1ED4BA1A0, (unint64_t *)&qword_1ED4BA190);
            for (i = 0; i != v14; ++i)
            {
              v60 = *(_OWORD *)(v13 + 16 * i + 32);
              swift_dynamicCast();
              v58 = v67;
              v16 = v66;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B202A0A8(0, *(_QWORD *)(v66 + 16) + 1, 1);
                v16 = v66;
              }
              v18 = *(_QWORD *)(v16 + 16);
              v17 = *(_QWORD *)(v16 + 24);
              if (v18 >= v17 >> 1)
              {
                sub_1B202A0A8(v17 > 1, v18 + 1, 1);
                v16 = v66;
              }
              *(_QWORD *)(v16 + 16) = v18 + 1;
              *(_OWORD *)(v16 + 16 * v18 + 32) = v58;
            }
            swift_release();
            v2 = v55;
          }
          else
          {
            v16 = MEMORY[0x1E0DEE9D8];
          }
          v57 *= 2;
          sub_1B216B51C(v16, v57, 0, (*(_BYTE *)(v2 + 184) & 1) == 0, (uint64_t)&v67);
          v19 = v67;
          v20 = v68;
          *(_OWORD *)v21 = v69;
          *(_OWORD *)&v21[16] = *(_OWORD *)v70;
          v59 = *(_QWORD *)&v70[16];
          v54 = v71;
          if ((v12 & 1) != 0)
          {
            swift_release();
            swift_release();
            swift_release();
          }
          v12 = 1;
        }
        while (*(_QWORD *)&v21[16] - *(_QWORD *)(v2 + 240) < v52);
        v49 = *(_QWORD *)(v2 + 16);
        v22 = *(_DWORD *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity);
        swift_retain();
        swift_retain();
        swift_retain();
        vfx_allocate_memory_entry(v57, 0x40uLL, v22, (uint64_t)&v67);
        v23 = v67;
        v53 = v68;
        v50 = BYTE4(v68);
        v56 = *((_QWORD *)&v67 + 1);
        v24 = v67 + *((_QWORD *)&v67 + 1);
        if (!(_QWORD)v67)
          v24 = 0;
        v48 = v24;
        v25 = *(_QWORD *)(v2 + 48);
        v26 = *(_QWORD *)(v55 + 56);
        v27 = *(_QWORD *)(v55 + 64);
        v28 = *(_QWORD *)(v55 + 104);
        v29 = *(_BYTE *)(v55 + 112);
        *(_QWORD *)&v67 = v25;
        *((_QWORD *)&v67 + 1) = v26;
        v68 = v27;
        v69 = *(_OWORD *)(v55 + 72);
        *(_OWORD *)v70 = *(_OWORD *)(v55 + 88);
        *(_QWORD *)&v70[16] = v28;
        v71 = v29;
        v46 = *(_QWORD *)(v55 + 256);
        v47 = *(_QWORD *)(v55 + 128);
        v45 = *(_QWORD *)(v55 + 240);
        v60 = v19;
        *(_QWORD *)&v61 = v20;
        *((_QWORD *)&v61 + 1) = *(_QWORD *)v21;
        v62 = *(_OWORD *)&v21[8];
        v63 = *(_QWORD *)&v21[24];
        v64 = v59;
        v65 = v54;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B216B8F4(v47, v46, v45, 0, v23, (uint64_t)&v60);
        swift_release();
        v2 = v55;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (*(_QWORD *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_counters))
          vfx_counters.add(_:_:)(*(_DWORD *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 64), (*(_QWORD *)(v55 + 240) - *(_QWORD *)(v55 + 256)) * *(_QWORD *)(v55 + 72));
        vfx_deallocate_memory_entry(v55 + 144);
        *(_QWORD *)(v55 + 144) = v23;
        *(_QWORD *)(v55 + 152) = v56;
        *(_DWORD *)(v55 + 160) = v53;
        *(_BYTE *)(v55 + 164) = v50;
        *(_QWORD *)(v55 + 128) = v23;
        *(_QWORD *)(v55 + 136) = v48;
        *(_OWORD *)(v55 + 48) = v19;
        *(_QWORD *)(v55 + 64) = v20;
        *(_QWORD *)(v55 + 72) = *(_QWORD *)v21;
        *(_QWORD *)(v55 + 80) = *(_QWORD *)&v21[8];
        *(_QWORD *)(v55 + 88) = *(_QWORD *)&v21[16];
        *(_QWORD *)(v55 + 96) = *(_QWORD *)&v21[24];
        *(_QWORD *)(v55 + 104) = v59;
        *(_BYTE *)(v55 + 112) = v54;
        swift_release();
        swift_release();
        swift_release();
        v3 = a1;
      }
      else
      {
        v8 = *(_QWORD *)(v1 + 64);
        v9 = *(_BYTE *)(v1 + 112);
        v67 = *(_OWORD *)(v1 + 48);
        v68 = v8;
        v69 = *(_OWORD *)(v1 + 72);
        *(_QWORD *)v70 = v4;
        *(_OWORD *)&v70[8] = *(_OWORD *)(v1 + 96);
        v71 = v9;
        sub_1B216B420(*(_QWORD *)(v1 + 128), v7, v5, 0);
        v10 = *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
        if (*(_QWORD *)v10)
          vfx_counters.add(_:_:)(*(_DWORD *)(v10 + 64), (*(_QWORD *)(v1 + 240) - *(_QWORD *)(v1 + 256)) * *(_QWORD *)(v1 + 72));
      }
      v30 = *(_QWORD *)(v2 + 256);
      *(_QWORD *)(v2 + 256) = 0;
      *(_QWORD *)(v2 + 232) -= v30;
      v31 = vsubq_s64(*(int64x2_t *)(v2 + 240), vdupq_n_s64(v30));
      *(int64x2_t *)(v2 + 240) = v31;
      v5 = v31.i64[0];
    }
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 240);
  }
  v32 = *(_QWORD *)(v2 + 88);
  v33 = *v3;
  if (v3[1] - *v3 >= v32 - v5)
    v34 = v32 - v5;
  else
    v34 = v3[1] - *v3;
  if ((*(_BYTE *)(v2 + 184) & 1) != 0)
  {
    v35 = v5;
    v5 += v34;
  }
  else
  {
    v36 = *(_QWORD *)(v2 + 168);
    v37 = *((_OWORD *)v3 + 2);
    v60 = *((_OWORD *)v3 + 1);
    v61 = v37;
    v62 = *((_OWORD *)v3 + 3);
    if (v34)
    {
      do
      {
        v38 = sub_1B1C90F80(&v67);
        v40 = v39;
        ((void (*)(__int128 *, _QWORD))v38)(&v67, 0);
        ++v33;
        *(_DWORD *)(v36 + 4 * v5++) = v40;
        --v34;
      }
      while (v34);
      v2 = v55;
      v35 = *(_QWORD *)(v55 + 240);
      v32 = *(_QWORD *)(v55 + 88);
    }
    else
    {
      v35 = v5;
      v2 = v55;
    }
  }
  *(_QWORD *)(v2 + 240) = v5;
  v41 = *(_QWORD *)(v2 + 64);
  v42 = *(_BYTE *)(v2 + 112);
  v67 = *(_OWORD *)(v2 + 48);
  v68 = v41;
  v69 = *(_OWORD *)(v2 + 72);
  *(_QWORD *)v70 = v32;
  *(_OWORD *)&v70[8] = *(_OWORD *)(v2 + 96);
  v71 = v42;
  sub_1B216BA20(*(_QWORD *)(v2 + 128), v35, v5);
  v43 = *(_QWORD *)(v2 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  if (*(_QWORD *)v43)
    vfx_counters.add(_:_:)(*(_DWORD *)(v43 + 72), *(_QWORD *)(v2 + 72) * (v5 - v35));
  ++*(_DWORD *)(v2 + 116);
  return v35;
}

uint64_t sub_1B1C8E610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int64_t v17;
  uint64_t i;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  task_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  int64x2_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 *v42;
  unint64_t v43;
  __int128 v44;
  uint64_t v45;
  int *v46;
  int v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  int v58;
  uint64_t v61;
  char v62;
  uint64_t v63;
  size_t v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  _BYTE v77[24];
  char v78;

  v4 = v3;
  v5 = a3;
  v6 = a1;
  if ((*(_BYTE *)(v3 + 121) & 1) != 0)
  {
    v7 = *(_QWORD *)(v3 + 88);
    v8 = *(_QWORD *)(v3 + 240);
    v9 = a2 - a1;
    if (v7 - v8 < a2 - a1)
    {
      v10 = *(_QWORD *)(v3 + 256);
      if (v9 >= v7 - v8 + v10)
      {
        v14 = *(_QWORD *)(v3 + 128);
        if (v14)
          v64 = *(_QWORD *)(v3 + 136) - v14;
        else
          v64 = 0;
        v15 = 0;
        v61 = v3;
        do
        {
          v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 40) + 16) + 32);
          v17 = *(_QWORD *)(v16 + 16);
          if (v17)
          {
            v73 = MEMORY[0x1E0DEE9D8];
            swift_retain();
            sub_1B202A0A8(0, v17, 0);
            sub_1B1C92290(0, (unint64_t *)&qword_1ED4B8C90, (unint64_t *)&qword_1ED4B8C70);
            sub_1B1C92290(0, (unint64_t *)&qword_1ED4BA1A0, (unint64_t *)&qword_1ED4BA190);
            for (i = 0; i != v17; ++i)
            {
              v67 = *(_OWORD *)(v16 + 16 * i + 32);
              swift_dynamicCast();
              v65 = v74;
              v19 = v73;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B202A0A8(0, *(_QWORD *)(v73 + 16) + 1, 1);
                v19 = v73;
              }
              v21 = *(_QWORD *)(v19 + 16);
              v20 = *(_QWORD *)(v19 + 24);
              if (v21 >= v20 >> 1)
              {
                sub_1B202A0A8(v20 > 1, v21 + 1, 1);
                v19 = v73;
              }
              *(_QWORD *)(v19 + 16) = v21 + 1;
              *(_OWORD *)(v19 + 16 * v21 + 32) = v65;
            }
            swift_release();
            v4 = v61;
          }
          else
          {
            v19 = MEMORY[0x1E0DEE9D8];
          }
          v64 *= 2;
          sub_1B216B51C(v19, v64, 0, (*(_BYTE *)(v4 + 184) & 1) == 0, (uint64_t)&v74);
          v22 = v74;
          v23 = v75;
          v24 = v76;
          v25 = *(_OWORD *)v77;
          v66 = *(_QWORD *)&v77[16];
          v62 = v78;
          if ((v15 & 1) != 0)
          {
            swift_release();
            swift_release();
            swift_release();
          }
          v15 = 1;
        }
        while ((_QWORD)v25 - *(_QWORD *)(v4 + 240) < v9);
        v56 = *(_QWORD *)(v4 + 16);
        v26 = *(_DWORD *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity);
        swift_retain();
        swift_retain();
        swift_retain();
        vfx_allocate_memory_entry(v64, 0x40uLL, v26, (uint64_t)&v74);
        v27 = v74;
        v57 = BYTE4(v75);
        v58 = v75;
        v63 = *((_QWORD *)&v74 + 1);
        v28 = v74 + *((_QWORD *)&v74 + 1);
        if (!(_QWORD)v74)
          v28 = 0;
        v55 = v28;
        v29 = *(_QWORD *)(v61 + 56);
        v30 = *(_QWORD *)(v61 + 64);
        v31 = *(_QWORD *)(v61 + 104);
        v32 = *(_BYTE *)(v61 + 112);
        *(_QWORD *)&v74 = *(_QWORD *)(v61 + 48);
        *((_QWORD *)&v74 + 1) = v29;
        v75 = v30;
        v76 = *(_OWORD *)(v61 + 72);
        *(_OWORD *)v77 = *(_OWORD *)(v61 + 88);
        *(_QWORD *)&v77[16] = v31;
        v78 = v32;
        v53 = *(_QWORD *)(v61 + 256);
        v54 = *(_QWORD *)(v61 + 128);
        v52 = *(_QWORD *)(v61 + 240);
        v67 = v22;
        v68 = v23;
        v69 = v24;
        v70 = v25;
        v71 = v66;
        v72 = v62;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B216B8F4(v54, v53, v52, 0, v27, (uint64_t)&v67);
        swift_release();
        swift_release();
        v4 = v61;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (*(_QWORD *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_counters))
          vfx_counters.add(_:_:)(*(_DWORD *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 64), (*(_QWORD *)(v61 + 240) - *(_QWORD *)(v61 + 256)) * *(_QWORD *)(v61 + 72));
        vfx_deallocate_memory_entry(v61 + 144);
        *(_QWORD *)(v61 + 144) = v27;
        *(_QWORD *)(v61 + 152) = v63;
        *(_DWORD *)(v61 + 160) = v58;
        *(_BYTE *)(v61 + 164) = v57;
        *(_QWORD *)(v61 + 128) = v27;
        *(_QWORD *)(v61 + 136) = v55;
        *(_OWORD *)(v61 + 48) = v22;
        *(_QWORD *)(v61 + 64) = v23;
        *(_OWORD *)(v61 + 72) = v24;
        *(_OWORD *)(v61 + 88) = v25;
        *(_QWORD *)(v61 + 104) = v66;
        *(_BYTE *)(v61 + 112) = v62;
        swift_release();
        swift_release();
        swift_release();
        v6 = a1;
        v5 = a3;
      }
      else
      {
        v11 = *(_QWORD *)(v3 + 64);
        v12 = *(_BYTE *)(v3 + 112);
        v74 = *(_OWORD *)(v3 + 48);
        v75 = v11;
        v76 = *(_OWORD *)(v3 + 72);
        *(_QWORD *)v77 = v7;
        *(_OWORD *)&v77[8] = *(_OWORD *)(v3 + 96);
        v78 = v12;
        sub_1B216B420(*(_QWORD *)(v3 + 128), v10, v8, 0);
        v13 = *(_QWORD *)(v3 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
        if (*(_QWORD *)v13)
          vfx_counters.add(_:_:)(*(_DWORD *)(v13 + 64), (*(_QWORD *)(v3 + 240) - *(_QWORD *)(v3 + 256)) * *(_QWORD *)(v3 + 72));
      }
      v33 = *(_QWORD *)(v4 + 256);
      *(_QWORD *)(v4 + 256) = 0;
      *(_QWORD *)(v4 + 232) -= v33;
      v34 = vsubq_s64(*(int64x2_t *)(v4 + 240), vdupq_n_s64(v33));
      *(int64x2_t *)(v4 + 240) = v34;
      v8 = v34.i64[0];
    }
  }
  else
  {
    v8 = *(_QWORD *)(v3 + 240);
    v9 = a2 - a1;
  }
  v35 = *(_QWORD *)(v4 + 88);
  if (v9 >= v35 - v8)
    v36 = v35 - v8;
  else
    v36 = v9;
  if ((*(_BYTE *)(v4 + 184) & 1) != 0)
  {
    v37 = v36 + v8;
  }
  else
  {
    v37 = v8;
    if (v36)
    {
      v38 = *(_QWORD *)(v4 + 168);
      v37 = v8;
      v39 = v6;
      if (v36 < 0xC)
        goto LABEL_40;
      v40 = 4 * v6 + v5;
      v37 = v8;
      v39 = v6;
      if ((unint64_t)(v38 + 4 * v8 - v40) < 0x20)
        goto LABEL_40;
      v37 = v8 + (v36 & 0xFFFFFFFFFFFFFFF8);
      v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + v6;
      v41 = (_OWORD *)(4 * v8 + v38 + 16);
      v42 = (__int128 *)(v40 + 16);
      v43 = v36 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v44 = *v42;
        *(v41 - 1) = *(v42 - 1);
        *v41 = v44;
        v41 += 2;
        v42 += 2;
        v43 -= 8;
      }
      while (v43);
      if (v36 != (v36 & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_40:
        v45 = v6 + v36 - v39;
        v46 = (int *)(v5 + 4 * v39);
        do
        {
          v47 = *v46++;
          *(_DWORD *)(v38 + 4 * v37++) = v47;
          --v45;
        }
        while (v45);
      }
    }
  }
  *(_QWORD *)(v4 + 240) = v37;
  v48 = *(_QWORD *)(v4 + 64);
  v49 = *(_BYTE *)(v4 + 112);
  v74 = *(_OWORD *)(v4 + 48);
  v75 = v48;
  v76 = *(_OWORD *)(v4 + 72);
  *(_QWORD *)v77 = v35;
  *(_OWORD *)&v77[8] = *(_OWORD *)(v4 + 96);
  v78 = v49;
  sub_1B216BA20(*(_QWORD *)(v4 + 128), v8, v37);
  v50 = *(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  if (*(_QWORD *)v50)
    vfx_counters.add(_:_:)(*(_DWORD *)(v50 + 72), *(_QWORD *)(v4 + 72) * (v37 - v8));
  ++*(_DWORD *)(v4 + 116);
  return v8;
}

uint64_t sub_1B1C8EC88(int a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int64_t v13;
  uint64_t i;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  task_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v47;
  char v48;
  uint64_t v49;
  size_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  _BYTE v63[24];
  char v64;

  v2 = v1;
  v3 = a1;
  if ((*(_BYTE *)(v1 + 121) & 1) != 0)
  {
    v4 = *(_QWORD *)(v1 + 88);
    v5 = *(_QWORD *)(v1 + 240);
    if (v4 - v5 <= 0)
    {
      v6 = *(_QWORD *)(v1 + 256);
      if (v4 - v5 + v6 < 2)
      {
        v10 = *(_QWORD *)(v1 + 128);
        if (v10)
          v50 = *(_QWORD *)(v1 + 136) - v10;
        else
          v50 = 0;
        v11 = 0;
        v47 = v1;
        do
        {
          v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 40) + 16) + 32);
          v13 = *(_QWORD *)(v12 + 16);
          if (v13)
          {
            v59 = MEMORY[0x1E0DEE9D8];
            swift_retain();
            sub_1B202A0A8(0, v13, 0);
            sub_1B1C92290(0, (unint64_t *)&qword_1ED4B8C90, (unint64_t *)&qword_1ED4B8C70);
            sub_1B1C92290(0, (unint64_t *)&qword_1ED4BA1A0, (unint64_t *)&qword_1ED4BA190);
            for (i = 0; i != v13; ++i)
            {
              v53 = *(_OWORD *)(v12 + 16 * i + 32);
              swift_dynamicCast();
              v51 = v60;
              v15 = v59;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B202A0A8(0, *(_QWORD *)(v59 + 16) + 1, 1);
                v15 = v59;
              }
              v17 = *(_QWORD *)(v15 + 16);
              v16 = *(_QWORD *)(v15 + 24);
              if (v17 >= v16 >> 1)
              {
                sub_1B202A0A8(v16 > 1, v17 + 1, 1);
                v15 = v59;
              }
              *(_QWORD *)(v15 + 16) = v17 + 1;
              *(_OWORD *)(v15 + 16 * v17 + 32) = v51;
            }
            swift_release();
            v2 = v47;
          }
          else
          {
            v15 = MEMORY[0x1E0DEE9D8];
          }
          v50 *= 2;
          sub_1B216B51C(v15, v50, 0, (*(_BYTE *)(v2 + 184) & 1) == 0, (uint64_t)&v60);
          v18 = v60;
          v19 = v61;
          v20 = v62;
          v21 = *(_OWORD *)v63;
          v52 = *(_QWORD *)&v63[16];
          v48 = v64;
          if ((v11 & 1) != 0)
          {
            swift_release();
            swift_release();
            swift_release();
          }
          v11 = 1;
        }
        while ((uint64_t)(v21 - *(_QWORD *)(v2 + 240)) < 1);
        v42 = *(_QWORD *)(v2 + 16);
        v22 = *(_DWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_peerTaskIdentity);
        swift_retain();
        swift_retain();
        swift_retain();
        vfx_allocate_memory_entry(v50, 0x40uLL, v22, (uint64_t)&v60);
        v23 = v60;
        v43 = BYTE4(v61);
        v44 = v61;
        v45 = *((_QWORD *)&v60 + 1);
        v24 = v60 + *((_QWORD *)&v60 + 1);
        if (!(_QWORD)v60)
          v24 = 0;
        v41 = v24;
        v25 = *(_QWORD *)(v2 + 56);
        v26 = *(_QWORD *)(v2 + 64);
        v27 = *(_QWORD *)(v2 + 104);
        v28 = *(_BYTE *)(v2 + 112);
        *(_QWORD *)&v60 = *(_QWORD *)(v2 + 48);
        *((_QWORD *)&v60 + 1) = v25;
        v61 = v26;
        v62 = *(_OWORD *)(v2 + 72);
        *(_OWORD *)v63 = *(_OWORD *)(v2 + 88);
        *(_QWORD *)&v63[16] = v27;
        v64 = v28;
        v49 = *(_QWORD *)(v2 + 128);
        v40 = *(_QWORD *)(v2 + 256);
        v39 = *(_QWORD *)(v2 + 240);
        v53 = v18;
        v54 = v19;
        v55 = v20;
        v56 = v21;
        v57 = v52;
        v58 = v48;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B216B8F4(v49, v40, v39, 0, v23, (uint64_t)&v53);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (*(_QWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_counters))
          vfx_counters.add(_:_:)(*(_DWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 64), (*(_QWORD *)(v2 + 240) - *(_QWORD *)(v2 + 256)) * *(_QWORD *)(v2 + 72));
        vfx_deallocate_memory_entry(v2 + 144);
        *(_QWORD *)(v2 + 144) = v23;
        *(_QWORD *)(v2 + 152) = v45;
        *(_DWORD *)(v2 + 160) = v44;
        *(_BYTE *)(v2 + 164) = v43;
        *(_QWORD *)(v2 + 128) = v23;
        *(_QWORD *)(v2 + 136) = v41;
        *(_OWORD *)(v2 + 48) = v18;
        *(_QWORD *)(v2 + 64) = v19;
        *(_OWORD *)(v2 + 72) = v20;
        *(_OWORD *)(v2 + 88) = v21;
        *(_QWORD *)(v2 + 104) = v52;
        *(_BYTE *)(v2 + 112) = v48;
        swift_release();
        swift_release();
        swift_release();
        v3 = a1;
      }
      else
      {
        v7 = *(_QWORD *)(v1 + 64);
        v8 = *(_BYTE *)(v1 + 112);
        v60 = *(_OWORD *)(v1 + 48);
        v61 = v7;
        v62 = *(_OWORD *)(v1 + 72);
        *(_QWORD *)v63 = v4;
        *(_OWORD *)&v63[8] = *(_OWORD *)(v1 + 96);
        v64 = v8;
        sub_1B216B420(*(_QWORD *)(v1 + 128), v6, v5, 0);
        v9 = *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
        if (*(_QWORD *)v9)
          vfx_counters.add(_:_:)(*(_DWORD *)(v9 + 64), (*(_QWORD *)(v1 + 240) - *(_QWORD *)(v1 + 256)) * *(_QWORD *)(v1 + 72));
      }
      v30 = *(_QWORD *)(v2 + 248);
      v29 = *(_QWORD *)(v2 + 256);
      v5 = *(_QWORD *)(v2 + 240) - v29;
      *(_QWORD *)(v2 + 232) -= v29;
      *(_QWORD *)(v2 + 248) = v30 - v29;
      *(_QWORD *)(v2 + 256) = 0;
    }
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 240);
  }
  v31 = *(_QWORD *)(v2 + 88);
  if (v31 - v5 >= 1)
    v32 = 1;
  else
    v32 = v31 - v5;
  if ((*(_BYTE *)(v2 + 184) & 1) != 0)
  {
    v33 = v32 + v5;
  }
  else
  {
    v33 = v5;
    if (v32)
    {
      v34 = *(_QWORD *)(v2 + 168);
      v33 = v5;
      do
        *(_DWORD *)(v34 + 4 * v33++) = v3;
      while (v31 - v5 < 1);
    }
  }
  *(_QWORD *)(v2 + 240) = v33;
  v35 = *(_QWORD *)(v2 + 64);
  v36 = *(_BYTE *)(v2 + 112);
  v60 = *(_OWORD *)(v2 + 48);
  v61 = v35;
  v62 = *(_OWORD *)(v2 + 72);
  *(_QWORD *)v63 = v31;
  *(_OWORD *)&v63[8] = *(_OWORD *)(v2 + 96);
  v64 = v36;
  sub_1B216BA20(*(_QWORD *)(v2 + 128), v5, v33);
  v37 = *(_QWORD *)(v2 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_counters;
  if (*(_QWORD *)v37)
    vfx_counters.add(_:_:)(*(_DWORD *)(v37 + 72), *(_QWORD *)(v2 + 72) * (v33 - v5));
  ++*(_DWORD *)(v2 + 116);
  return v5;
}

uint64_t sub_1B1C8F23C(int a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *i;

  v5 = 0;
  if (a4 < 0)
    return v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 96) + 40 * a3 + 48);
  if (*(_QWORD *)(v6 + 16) <= a4)
    return v5;
  v7 = *(_QWORD *)(v6 + 8 * a4 + 32);
  v5 = *(_QWORD *)(v7 + 16);
  if (!v5)
    return v5;
  for (i = (_QWORD *)(v7 + 40);
        *((_DWORD *)i - 2) != a1 || *i && (*(_QWORD *)(*i + 8 * (a2 >> 6)) & (1 << a2)) == 0;
        i += 3)
  {
    if (!--v5)
      return v5;
  }
  return 1;
}

uint64_t sub_1B1C8F2C0(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t *v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;

  v5 = v4;
  v11 = (uint64_t *)(v4 + 16);
  v10 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(v10 + 16) <= (int64_t)a4)
  {
    sub_1B2229520();
    sub_1B2229538();
    do
    {
      sub_1B2229520();
      sub_1B2229568();
      sub_1B2229574();
      sub_1B2229538();
      v10 = *v11;
    }
    while (*(_QWORD *)(*v11 + 16) <= a4);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v11 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1B216D614();
  v13 = v10 + 8 * a4;
  v16 = *(_QWORD *)(v13 + 32);
  v14 = (uint64_t *)(v13 + 32);
  v15 = v16;
  v17 = swift_isUniquelyReferenced_nonNull_native();
  *v14 = v16;
  if ((v17 & 1) == 0)
  {
    sub_1B202AFB0(0, *(_QWORD *)(v15 + 16) + 1, 1);
    v15 = *v14;
  }
  v19 = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  if (v19 >= v18 >> 1)
  {
    sub_1B202AFB0(v18 > 1, v19 + 1, 1);
    v15 = *v14;
  }
  *(_QWORD *)(v15 + 16) = v19 + 1;
  v20 = v15 + 24 * v19;
  *(_DWORD *)(v20 + 32) = a1;
  *(_QWORD *)(v20 + 40) = a2;
  *(_QWORD *)(v20 + 48) = a3;
  result = sub_1B2229538();
  *(_BYTE *)(v5 + 24) = 1;
  return result;
}

uint64_t sub_1B1C8F40C(int a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = *v2;
  v5 = v2[1];
  if ((a2 & 1) != 0)
  {
    v6 = sub_1B1DC9E2C(a1, v4 + 32, v2[1], (2 * *(_QWORD *)(v4 + 16)) | 1);
    result = sub_1B1DB9F14(v6);
    if (*((_DWORD *)v2 + 8) == a1)
      *((_DWORD *)v2 + 8) = -1;
  }
  else
  {
    v8 = sub_1B1DC9E2C(a1, v4 + 32, 0, (2 * v5) | 1);
    result = sub_1B1DB9F14(v8);
    v2[1] = v5 - 1;
    if (*((_DWORD *)v2 + 9) == a1)
      *((_DWORD *)v2 + 9) = -1;
  }
  *((_BYTE *)v2 + 24) = 1;
  return result;
}

uint64_t sub_1B1C8F4B0(uint64_t result, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;

  v3 = result;
  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  if ((a2 & 1) != 0)
  {
    v6 = (_DWORD *)(v4 + 32);
    if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0 && *v6 != (_DWORD)result)
    {
      v7 = 0;
      while ((v5 & 0x7FFFFFFFFFFFFFFFLL) - 1 != v7)
      {
        v12 = *(_DWORD *)(v4 + 36 + 4 * v7++);
        if (v12 == (_DWORD)result)
          goto LABEL_5;
      }
    }
    v7 = 0;
LABEL_5:
    v8 = v5 - 1;
    *(_QWORD *)(v2 + 8) = v8;
    if (v7 != v8)
    {
      v9 = v6[v7];
      v10 = v6[v8];
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1B1FFED2C(v4);
        v4 = result;
      }
      *(_DWORD *)(v4 + 32 + 4 * v7) = v10;
      *(_DWORD *)(v4 + 32 + 4 * v8) = v9;
      *(_QWORD *)v2 = v4;
    }
    if (*(_DWORD *)(v2 + 36) == v3)
    {
      *(_DWORD *)(v2 + 32) = v3;
      *(_DWORD *)(v2 + 36) = -1;
    }
  }
  else
  {
    v11 = sub_1B1DC9E2C(result, v4 + 32, *(_QWORD *)(v2 + 8), (2 * *(_QWORD *)(v4 + 16)) | 1);
    result = sub_1B1C8DB80(v11, v5);
    *(_QWORD *)(v2 + 8) = v5 + 1;
    if (*(_DWORD *)(v2 + 32) == v3)
    {
      *(_DWORD *)(v2 + 32) = -1;
      *(_DWORD *)(v2 + 36) = v3;
    }
  }
  return result;
}

void sub_1B1C8F5CC(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v26;
  _QWORD *v27;
  char **v28;
  char *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a4 + 80) + 8 * a1 + 32) + 200) == 1)
    *(_BYTE *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a4 + 128));
  v11 = *(_QWORD *)(a4 + 96);
  v12 = *(_QWORD *)(v11 + 40 * a1 + 32);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = (int *)(v12 + 32);
    while (1)
    {
      v15 = *v14++;
      v16 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 32 + 8 * v15);
      if (*(_QWORD *)(v16 + 240) != *(_QWORD *)(v16 + 232))
        break;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    sub_1B1E8DD00(a1);
    v11 = *(_QWORD *)(a4 + 96);
  }
  v17 = v11 + 40 * a1;
  v18 = 36;
  if ((a3 & 1) != 0)
    v18 = 32;
  v19 = *(_DWORD *)(v17 + v18 + 32);
  v20 = HIDWORD(a2) & 1;
  if (v19 == -1)
  {
    v21 = a2;
  }
  else
  {
    v21 = a2;
    sub_1B1C8FC98(*(_QWORD *)(*(_QWORD *)(a4 + 136) + 8 * v19 + 32), a2 | (unint64_t)(v20 << 32), a5, &v35);
    if ((v35 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
      return;
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  v22 = (_QWORD *)(a4 + 136);
  swift_retain();
  v23 = sub_1B1E5B224((uint64_t *)(a4 + 136), a4, v21 | (v20 << 32), a1, a3 & 1);
  swift_release();
  v24 = *(_QWORD **)(a4 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 96) = v24;
  v26 = a5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v24 = sub_1B1FFECDC(v24);
    *(_QWORD *)(a4 + 96) = v24;
  }
  v27 = v24 + 4;
  v28 = (char **)&v24[5 * a1 + 4];
  if ((a3 & 1) != 0)
  {
    v29 = *v28;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    *v28 = v29;
    if ((v30 & 1) == 0)
    {
      v29 = sub_1B1C62EF0(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
      *v28 = v29;
    }
    v32 = *((_QWORD *)v29 + 2);
    v31 = *((_QWORD *)v29 + 3);
    if (v32 >= v31 >> 1)
    {
      v29 = sub_1B1C62EF0(v31 > 1, v32 + 1, 1, v29);
      *v28 = v29;
    }
    *((_QWORD *)v29 + 2) = v32 + 1;
    *(_DWORD *)&v29[4 * v32 + 32] = v23;
    LODWORD(v27[5 * a1 + 4]) = v23;
  }
  else
  {
    v33 = &v27[5 * a1];
    v34 = v33[1];
    sub_1B1C90FF0(v34, v34, v23);
    v33[1] = v34 + 1;
    *((_DWORD *)v33 + 9) = v23;
  }
  LOBYTE(v27[5 * a1 + 3]) = 1;
  sub_1B1C901B0(*(_QWORD *)(*v22 + 8 * v23 + 32), a3 & 1, v26);
}

void sub_1B1C8F888(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X4>, char *a5@<X8>)
{
  char v9;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0)
      goto LABEL_10;
  }
  else
  {
    v9 = 0;
    if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != (_DWORD)a2)
      goto LABEL_13;
  }
  if (!os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
LABEL_10:
    v9 = 0;
    goto LABEL_13;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
  {
    sub_1B1C90284(a1, a3, a4);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
LABEL_13:
  *a5 = v9;
}

uint64_t sub_1B1C8F964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, int a4@<W4>, _DWORD *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, __int16 a9, __int16 a10, char a11)
{
  char v18;
  uint64_t result;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0)
    {
LABEL_10:
      result = swift_release();
      v18 = 0;
      goto LABEL_15;
    }
  }
  else if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != (_DWORD)a2)
  {
    goto LABEL_10;
  }
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
    {
      sub_1B1F0A164(a1, a3, a4, a5, a6, a7, a9, a11 & 1);
      v18 = 1;
    }
    else
    {
      v18 = 0;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  else
  {
    v18 = 0;
  }
  result = swift_release();
LABEL_15:
  *a8 = v18;
  return result;
}

uint64_t sub_1B1C8FA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X7>, char *a8@<X8>, uint64_t a9, __int16 a10, _QWORD *a11)
{
  os_unfair_lock_s *v18;
  char v19;
  uint64_t result;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0)
    {
LABEL_10:
      result = swift_release();
      v19 = 0;
      goto LABEL_15;
    }
  }
  else if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != (_DWORD)a2)
  {
    goto LABEL_10;
  }
  v18 = *(os_unfair_lock_s **)(a1 + 376);
  swift_retain();
  if (os_unfair_lock_trylock(v18))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
    {
      swift_retain();
      sub_1B1C938D0(a1, a3, a4, a5, a6, a7, a9, a10, a11);
      swift_release();
      v19 = 1;
    }
    else
    {
      v19 = 0;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  else
  {
    v19 = 0;
  }
  result = swift_release_n();
LABEL_15:
  *a8 = v19;
  return result;
}

void sub_1B1C8FBBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X4>, char *a5@<X8>)
{
  char v9;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0)
      goto LABEL_10;
  }
  else
  {
    v9 = 0;
    if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != (_DWORD)a2)
      goto LABEL_13;
  }
  if (!os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
LABEL_10:
    v9 = 0;
    goto LABEL_13;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
  {
    sub_1B1C90324(a1, a3, a4);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
LABEL_13:
  *a5 = v9;
}

void sub_1B1C8FC98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, char *a4@<X8>)
{
  char v7;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if ((a2 & 0x100000000) == 0)
      goto LABEL_10;
  }
  else
  {
    v7 = 0;
    if ((a2 & 0x100000000) != 0 || *(_DWORD *)(a1 + 28) != (_DWORD)a2)
      goto LABEL_13;
  }
  if (!os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
LABEL_10:
    v7 = 0;
    goto LABEL_13;
  }
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
  {
    sub_1B1C903B0(a1, a3);
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
LABEL_13:
  *a4 = v7;
}

void sub_1B1C8FD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
    {
      sub_1B1C90284(a1, a3, a4);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  sub_1B2229688();
  __break(1u);
}

uint64_t sub_1B1C8FE48(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, _DWORD *a5, uint64_t a6, uint64_t a7, __int16 a8, char a9)
{
  uint64_t result;

  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
    {
      sub_1B1F0A164(a1, a3, a4, a5, a6, a7, a8, a9 & 1);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return swift_release();
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  swift_release();
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1C8FF6C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, __int16 a9, _QWORD *a10)
{
  os_unfair_lock_s *v17;
  uint64_t result;

  v17 = *(os_unfair_lock_s **)(a1 + 376);
  swift_retain();
  if (os_unfair_lock_trylock(v17))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
    {
      swift_retain();
      sub_1B1C938D0(a1, a3, a4, a5, a6, a7, a8, a9, a10);
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return swift_release_n();
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  swift_release_n();
  result = sub_1B2229688();
  __break(1u);
  return result;
}

void sub_1B1C900C4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
    {
      sub_1B1C90324(a1, a3, a4);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  sub_1B2229688();
  __break(1u);
}

void sub_1B1C901B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (os_unfair_lock_trylock(*(os_unfair_lock_t *)(a1 + 376)))
  {
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
    if ((*(_BYTE *)(a1 + 121) & 1) != 0 || *(_QWORD *)(a1 + 240) < *(_QWORD *)(a1 + 88))
    {
      sub_1B1C903B0(a1, a3);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
      return;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  }
  sub_1B2229688();
  __break(1u);
}

uint64_t sub_1B1C90284(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v15[4];

  v6 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v6;
  v7 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v7;
  v9 = sub_1B1C8DFC8(v15);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = v8 - v9;
  v12 = v10 - *(_QWORD *)a2;
  if (v8 - v9 < 1)
  {
    if (v12 > 0 || v11 >= v12)
      goto LABEL_9;
  }
  else if (v12 < 0 || v12 >= (unint64_t)v11)
  {
LABEL_9:
    v10 = v11 + *(_QWORD *)a2;
  }
  *(_QWORD *)a2 = v10;
  return a3(a1, v9, v8);
}

uint64_t sub_1B1C90324(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = sub_1B1C8E610(*a2, a2[1], a2[2]);
  v8 = a2[1];
  v9 = v6 - v7;
  v10 = v8 - *a2;
  if (v6 - v7 < 1)
  {
    if (v10 > 0 || v9 >= v10)
      goto LABEL_9;
  }
  else if (v10 < 0 || v10 >= (unint64_t)v9)
  {
LABEL_9:
    v8 = v9 + *a2;
  }
  *a2 = v8;
  return a3(a1, v7, v6);
}

uint64_t sub_1B1C903B0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1B1C8E610(*a2, a2[1], a2[2]);
  v4 = a2[1];
  v6 = v5 - result;
  v7 = v4 - *a2;
  if (v5 - result < 1)
  {
    if (v7 > 0 || v6 >= v7)
      goto LABEL_9;
  }
  else if (v7 < 0 || v7 >= (unint64_t)v6)
  {
LABEL_9:
    v4 = v6 + *a2;
  }
  *a2 = v4;
  return result;
}

void sub_1B1C90414(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  signed int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int *v28;
  int v29;
  _DWORD *v30;
  os_unfair_lock_s *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v39;
  char **v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  _DWORD *v56;
  int v57;
  char v58;
  uint64_t v59;
  _QWORD *v60;
  int v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  _QWORD *v73;
  char v74;
  uint64_t v75;
  double (*v76)(_QWORD);
  int v77;
  BOOL v78;
  int v79;
  char v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  os_unfair_lock_s *lock;
  uint64_t v101;
  uint64_t v102;
  signed int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;

  v2 = v1;
  lock = *(os_unfair_lock_s **)(v1 + 128);
  os_unfair_lock_lock(lock);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 40));
  v5 = *a1;
  if (!sub_1B1E8DBFC(*(_QWORD *)(*a1 + 32), *(_QWORD *)(v4 + 48)))
    sub_1B1E8F784(v1, v5);
  v7 = v6;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  v102 = *(_QWORD *)(v7 + 16);
  if (!v102)
    goto LABEL_94;
  v8 = 0;
  v9 = *(_QWORD **)(v1 + 96);
  v101 = v7 + 32;
  v107 = (_QWORD *)(v2 + 96);
  v108 = (uint64_t *)(v2 + 144);
  v109 = v2;
  v99 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  do
  {
    v10 = *(_DWORD *)(v101 + 4 * v8);
    v11 = v9[5 * v10 + 4];
    v111 = *(_QWORD *)(v11 + 16);
    if (!v111)
    {
      if (LOBYTE(v9[5 * v10 + 7]) == 1)
        goto LABEL_72;
LABEL_75:
      sub_1B1A02758(0, &qword_1ED4BA370, (uint64_t)&type metadata for ChunksStorage, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1B1C947F0();
      v76 = sub_1B1C91BC0();
      v77 = *(_DWORD *)(v75 + 28);
      v78 = __OFSUB__(v77, 1);
      v79 = v77 - 1;
      if (v79 < 0 != v78 || (*(_DWORD *)(v75 + 28) = v79) != 0)
      {
        ((void (*)(uint64_t *, _QWORD))v76)(&v115, 0);
        goto LABEL_78;
      }
      ((void (*)(uint64_t *, _QWORD))v76)(&v115, 0);
      v81 = *(_QWORD *)(*v107 + 40 * v10 + 32);
      v82 = *(_QWORD *)(v81 + 16);
      if (!v82)
      {
LABEL_93:
        sub_1B1E8E658(v2, v10);
        goto LABEL_78;
      }
      v83 = *(_QWORD *)(v2 + 136) + 32;
      if (v82 == 1)
      {
        v84 = 0;
        v85 = 0;
      }
      else
      {
        v86 = 0;
        v87 = 0;
        v84 = v82 & 0x7FFFFFFFFFFFFFFELL;
        v88 = (int *)(v81 + 36);
        v89 = v82 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v90 = *(_QWORD *)(v83 + 8 * *(v88 - 1));
          v91 = *(_QWORD *)(v83 + 8 * *v88);
          v86 += *(_QWORD *)(v90 + 240) - *(_QWORD *)(v90 + 232);
          v87 += *(_QWORD *)(v91 + 240) - *(_QWORD *)(v91 + 232);
          v88 += 2;
          v89 -= 2;
        }
        while (v89);
        v85 = v87 + v86;
        if (v82 == v84)
          goto LABEL_90;
      }
      v92 = v82 - v84;
      v93 = (int *)(v81 + 4 * v84 + 32);
      do
      {
        v94 = *v93++;
        v85 += *(_QWORD *)(*(_QWORD *)(v83 + 8 * v94) + 240) - *(_QWORD *)(*(_QWORD *)(v83 + 8 * v94) + 232);
        --v92;
      }
      while (v92);
LABEL_90:
      if (v85 > 0)
        goto LABEL_78;
      if (v82 >= 2)
      {
        v95 = *(_QWORD *)(v2 + v99);
        v115 = 0;
        v116 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        sub_1B2228890();
        sub_1B2229A0C();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        sub_1B22295EC();
        v96 = v115;
        v97 = v116;
        v98 = sub_1B2228E90();
        v115 = 0;
        (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(_QWORD *)v95 + 88))(v98, &v115, v96, v97);
        swift_release();
        swift_bridgeObjectRelease();
      }
      goto LABEL_93;
    }
    v103 = *(_DWORD *)(v101 + 4 * v8);
    v104 = v8;
    v110 = v11 + 32;
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = 1;
    do
    {
      while (1)
      {
        v112 = v13;
        v14 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(v110 + 4 * v12) + 32);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 376));
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
        v15 = *(_QWORD *)(v14 + 256);
        v16 = *(_QWORD *)(v14 + 232);
        v17 = v16 - v15;
        if (v16 == v15)
        {
          v18 = *(_QWORD *)(v14 + 240);
        }
        else
        {
          v113 = v12;
          v19 = *(_QWORD *)(v14 + 56);
          v20 = *(_QWORD *)(v19 + 16);
          if (v20)
          {
            swift_retain();
            swift_retain_n();
            swift_retain();
            v21 = v19 + 56;
            do
            {
              sub_1B1F24B64();
              v21 += 40;
              --v20;
            }
            while (v20);
            swift_release();
            swift_release();
            swift_release_n();
          }
          if ((*(_BYTE *)(v14 + 184) & 1) == 0)
          {
            v105 = *(_QWORD *)(v14 + 168);
            v22 = *(_QWORD *)(v14 + 16);
            v23 = *(os_unfair_lock_s **)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_lock(v23);
            swift_release();
            v24 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
            v25 = OBJC_IVAR____TtC3VFX13EntityManager_entityCount;
            v26 = *(_QWORD *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            v106 = v15 + *(_QWORD *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
            v27 = *(_DWORD *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
            swift_retain();
            v28 = (int *)(v105 + 4 * v15);
            do
            {
              v29 = *v28++;
              v30 = (_DWORD *)(v26 + 12 * v29);
              *v30 = v27;
              v30[1] = -1;
              ++v30[2];
              *(_DWORD *)(v22 + v24) = v29;
              v27 = v29;
              --v17;
            }
            while (v17);
            *(_QWORD *)(v22 + v25) = v106 - v16;
            swift_release();
            v31 = *(os_unfair_lock_s **)(v22 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_unlock(v31);
            swift_release();
          }
          v32 = *(_QWORD *)(v14 + 192);
          if (v32)
          {
            v33 = *(_QWORD *)(v14 + 208);
            sub_1B19FA6EC(v15, v16, v32);
            sub_1B19FA6EC(v15, v16, v33);
          }
          v15 = *(_QWORD *)(v14 + 232);
          v18 = *(_QWORD *)(v14 + 240);
          v2 = v109;
          if (v18 == v15)
          {
            v18 = 0;
            v15 = 0;
            *(_QWORD *)(v14 + 232) = 0;
            *(_QWORD *)(v14 + 240) = 0;
          }
          v12 = v113;
        }
        ++v12;
        *(_QWORD *)(v14 + 248) = v18;
        *(_QWORD *)(v14 + 256) = v15;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
        if (*(_QWORD *)(v14 + 240) == *(_QWORD *)(v14 + 232))
          break;
        v13 = 0;
        if (v12 == v111)
        {
          swift_bridgeObjectRelease();
          v10 = v103;
          v8 = v104;
          goto LABEL_78;
        }
      }
      v114 = v12;
      v34 = *(_DWORD *)(v14 + 24);
      v35 = *(_DWORD *)(v14 + 188);
      v36 = *(unsigned __int8 *)(v14 + 120);
      v37 = (_QWORD *)*v107;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v107 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v37 = sub_1B1FFECDC(v37);
        *v107 = v37;
      }
      v39 = v37 + 4;
      v40 = (char **)&v39[5 * v34];
      if (v36)
      {
        v41 = *v40;
        v42 = v39[5 * v34 + 1];
        v43 = *((_QWORD *)*v40 + 2);
        if (v42 == v43)
        {
LABEL_28:
          v44 = 0;
          goto LABEL_43;
        }
        if (*(_DWORD *)&v41[4 * v42 + 32] == v35)
        {
          v44 = v39[5 * v34 + 1];
        }
        else
        {
          v44 = v42 + 1;
          if (v42 + 1 == v43)
            goto LABEL_28;
          if (*(_DWORD *)&v41[4 * v44 + 32] != v35)
          {
            v68 = v43 - 2;
            while (v68 != v42)
            {
              v69 = *(_DWORD *)&v41[4 * v42++ + 40];
              if (v69 == v35)
              {
                v44 = v42 + 1;
                goto LABEL_43;
              }
            }
            goto LABEL_28;
          }
        }
LABEL_43:
        v58 = swift_isUniquelyReferenced_nonNull_native();
        *v40 = v41;
        if ((v58 & 1) == 0)
        {
          v41 = sub_1B1FFED2C((uint64_t)v41);
          *v40 = v41;
        }
        v59 = *((_QWORD *)v41 + 2) - 1;
        if (v59 - v44 < 0)
          goto LABEL_95;
        memmove(&v41[4 * v44 + 32], &v41[4 * v44 + 36], 4 * (v59 - v44));
        *((_QWORD *)v41 + 2) = v59;
        *v40 = v41;
        v60 = &v39[5 * v34];
        v61 = *((_DWORD *)v60 + 8);
        v56 = v60 + 4;
        if (v61 == v35)
          goto LABEL_47;
        goto LABEL_48;
      }
      v45 = &v39[5 * v34];
      v48 = v45[1];
      v46 = v45 + 1;
      v47 = v48;
      v49 = *v40;
      v50 = v48 & 0x7FFFFFFFFFFFFFFFLL;
      if ((v48 & 0x7FFFFFFFFFFFFFFFLL) == 0)
        goto LABEL_35;
      if (v50 == 1 || *((_DWORD *)v49 + 8) == v35)
        goto LABEL_35;
      if (*((_DWORD *)v49 + 9) != v35)
      {
        v70 = 0;
        v71 = v50 - 2;
        while (v71 != v70)
        {
          v72 = *(_DWORD *)&v49[4 * v70++ + 40];
          if (v72 == v35)
          {
            v52 = v70 + 1;
            goto LABEL_36;
          }
        }
LABEL_35:
        v52 = 0;
        goto LABEL_36;
      }
      v52 = 1;
LABEL_36:
      v53 = swift_isUniquelyReferenced_nonNull_native();
      *v40 = v49;
      if ((v53 & 1) == 0)
      {
        v49 = sub_1B1FFED2C((uint64_t)v49);
        *v40 = v49;
      }
      v54 = *((_QWORD *)v49 + 2) - 1;
      if (v54 - v52 < 0)
      {
LABEL_95:
        sub_1B2229700();
        __break(1u);
        return;
      }
      memmove(&v49[4 * v52 + 32], &v49[4 * v52 + 36], 4 * (v54 - v52));
      *((_QWORD *)v49 + 2) = v54;
      *v40 = v49;
      *v46 = v47 - 1;
      v55 = &v39[5 * v34];
      v57 = *((_DWORD *)v55 + 9);
      v56 = (_DWORD *)v55 + 9;
      if (v57 == v35)
LABEL_47:
        *v56 = -1;
LABEL_48:
      LOBYTE(v39[5 * v34 + 3]) = 1;
      v2 = v109;
      v62 = *(_QWORD *)(v109 + 136);
      v63 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v109 + 136) = v62;
      if ((v63 & 1) == 0)
        v62 = sub_1B216D524(v62);
      *(_QWORD *)(v62 + 8 * v35 + 32) = 0;
      *(_QWORD *)(v109 + 136) = v62;
      v64 = *(_QWORD *)(v109 + 144);
      v65 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v109 + 144) = v64;
      if ((v65 & 1) == 0)
      {
        sub_1B202A018(0, *(_QWORD *)(v64 + 16) + 1, 1);
        v64 = *v108;
      }
      v67 = *(_QWORD *)(v64 + 16);
      v66 = *(_QWORD *)(v64 + 24);
      if (v67 >= v66 >> 1)
      {
        sub_1B202A018(v66 > 1, v67 + 1, 1);
        v64 = *v108;
      }
      *(_QWORD *)(v64 + 16) = v67 + 1;
      *(_DWORD *)(v64 + 4 * v67 + 32) = v35;
      *v108 = v64;
      v13 = (*(_QWORD *)(v14 + 240) == *(_QWORD *)(v14 + 232)) & v112;
      vfx_swift_deimmortalize(v14);
      vfx_swift_release_dealloc((_QWORD *)v14);
      v12 = v114;
    }
    while (v114 != v111);
    swift_bridgeObjectRelease();
    v10 = v103;
    v8 = v104;
    if ((v13 & 1) != 0)
    {
LABEL_72:
      v73 = (_QWORD *)*v107;
      v74 = swift_isUniquelyReferenced_nonNull_native();
      *v107 = v73;
      if ((v74 & 1) == 0)
        v73 = sub_1B1FFECDC(v73);
      HIDWORD(v73[5 * v10 + 7]) = 15;
      *v107 = v73;
      goto LABEL_75;
    }
LABEL_78:
    v9 = (_QWORD *)*v107;
    v80 = swift_isUniquelyReferenced_nonNull_native();
    *v107 = v9;
    if ((v80 & 1) == 0)
      v9 = sub_1B1FFECDC(v9);
    ++v8;
    LOBYTE(v9[5 * v10 + 7]) = 0;
    *v107 = v9;
  }
  while (v8 != v102);
LABEL_94:
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(lock);
}

uint64_t sub_1B1C90DF8(uint64_t a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  char v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 376));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 344));
  v4 = *(char **)(a1 + 232);
  v5 = *(char **)(a1 + 256);
  if (v4 == v5)
  {
    v6 = *(char **)(a1 + 240);
  }
  else
  {
    sub_1B1A1059C(v5, v4);
    v5 = *(char **)(a1 + 232);
    v6 = *(char **)(a1 + 240);
    if (v6 == v5)
    {
      v6 = 0;
      v5 = 0;
      *(_QWORD *)(a1 + 232) = 0;
      *(_QWORD *)(a1 + 240) = 0;
    }
  }
  *(_QWORD *)(a1 + 248) = v6;
  *(_QWORD *)(a1 + 256) = v5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 344));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 376));
  v7 = *(_DWORD *)(a1 + 188);
  v8 = *(_BYTE *)(a1 + 120);
  v9 = (_QWORD *)a2[12];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  a2[12] = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    a2[12] = sub_1B1FFECDC(v9);
  sub_1B1C8F40C(v7, v8);
  v11 = a2[17];
  v12 = swift_isUniquelyReferenced_nonNull_native();
  a2[17] = v11;
  if ((v12 & 1) == 0)
    v11 = sub_1B216D524(v11);
  *(_QWORD *)(v11 + 8 * v7 + 32) = 0;
  v15 = a2[18];
  v14 = a2 + 18;
  v13 = v15;
  *(v14 - 1) = v11;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v14 = v15;
  if ((result & 1) == 0)
  {
    result = sub_1B202A018(0, *(_QWORD *)(v13 + 16) + 1, 1);
    v13 = *v14;
  }
  v18 = *(_QWORD *)(v13 + 16);
  v17 = *(_QWORD *)(v13 + 24);
  if (v18 >= v17 >> 1)
  {
    result = sub_1B202A018(v17 > 1, v18 + 1, 1);
    v13 = *v14;
  }
  *(_QWORD *)(v13 + 16) = v18 + 1;
  *(_DWORD *)(v13 + 4 * v18 + 32) = v7;
  *v14 = v13;
  return result;
}

double (*sub_1B1C90F80(_QWORD *a1))(_QWORD)
{
  uint64_t v1;
  uint64_t v3;

  v3 = (uint64_t)(a1 + 1);
  sub_1B1C922D4(v1, (uint64_t)(a1 + 1));
  sub_1B1C922D4(v3, (uint64_t)a1);
  if (*a1)
    return nullsub_16;
  else
    return j_nullsub_16;
}

char *sub_1B1C90FF0(uint64_t a1, uint64_t a2, int a3)
{
  char **v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *result;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;

  v7 = a1 - a2 + 1;
  v8 = *v3;
  v9 = *((_QWORD *)*v3 + 2);
  v10 = v9 + v7;
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v10 > *((_QWORD *)v8 + 3) >> 1)
  {
    if (v9 <= v10)
      v12 = v9 + v7;
    else
      v12 = v9;
    result = sub_1B1C62EF0((char)result, v12, 1, v8);
    v8 = result;
  }
  v13 = v8 + 32;
  v14 = &v8[4 * a1 + 32];
  if (!v7)
    goto LABEL_16;
  v15 = *((_QWORD *)v8 + 2);
  if (v15 - a2 >= 0)
  {
    result = v14 + 4;
    v16 = &v13[4 * a2];
    v17 = (unint64_t)&v13[4 * v15];
    if (v14 + 4 != v16 || (unint64_t)result >= v17)
      result = (char *)memmove(result, v16, 4 * (v15 - a2));
    *((_QWORD *)v8 + 2) += v7;
LABEL_16:
    *(_DWORD *)v14 = a3;
    *v3 = v8;
    return result;
  }
  result = (char *)sub_1B2229700();
  __break(1u);
  return result;
}

void *sub_1B1C9110C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *result;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v9 = a2 - a1;
  v10 = 1 - (a2 - a1);
  v11 = *(_QWORD **)v4;
  v12 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v13 = v12 + v10;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v11[3] >> 1)
  {
    if (v12 <= v13)
      v15 = v12 + v10;
    else
      v15 = v12;
    v11 = sub_1B1C63044(isUniquelyReferenced_nonNull_native, v15, 1, v11);
  }
  v16 = v11 + 4;
  v17 = &v11[2 * a1 + 4];
  result = (void *)swift_arrayDestroy();
  if (v9 == 1)
    goto LABEL_16;
  v19 = v11[2];
  v20 = v19 - a2;
  if (v19 - a2 >= 0)
  {
    result = v17 + 2;
    v21 = &v16[2 * a2];
    v22 = (unint64_t)&v16[2 * v19];
    if (v17 + 2 != v21 || (unint64_t)result >= v22)
      result = memmove(result, v21, 16 * v20);
    v11[2] += v10;
LABEL_16:
    *v17 = a3;
    v17[1] = a4;
    *(_QWORD *)v4 = v11;
    return result;
  }
  result = (void *)sub_1B2229700();
  __break(1u);
  return result;
}

void *sub_1B1C91250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void *result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v11 = a2 - a1;
  v12 = 1 - (a2 - a1);
  v13 = *(_QWORD **)v6;
  v14 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  v15 = v14 + v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v15 > v13[3] >> 1)
  {
    if (v14 <= v15)
      v17 = v14 + v12;
    else
      v17 = v14;
    v13 = sub_1B1C64DA4(isUniquelyReferenced_nonNull_native, v17, 1, v13);
  }
  v18 = v13 + 4;
  v19 = &v13[4 * a1 + 4];
  result = (void *)swift_arrayDestroy();
  if (v11 == 1)
    goto LABEL_16;
  v21 = v13[2];
  v22 = v21 - a2;
  if (v21 - a2 >= 0)
  {
    result = v19 + 4;
    v23 = &v18[4 * a2];
    v24 = (unint64_t)&v18[4 * v21];
    if (v19 + 4 != v23 || (unint64_t)result >= v24)
      result = memmove(result, v23, 32 * v22);
    v13[2] += v12;
LABEL_16:
    *v19 = a3;
    v19[1] = a4;
    v19[2] = a5;
    v19[3] = a6;
    *(_QWORD *)v6 = v13;
    return result;
  }
  result = (void *)sub_1B2229700();
  __break(1u);
  return result;
}

char *sub_1B1C913A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  char *v17;
  size_t v18;
  __int128 v19;

  v7 = a2 - a1;
  v8 = 1 - (a2 - a1);
  v9 = *(_QWORD **)v3;
  v10 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v11 = v10 + v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11)
      v13 = v10 + v8;
    else
      v13 = v10;
    v9 = sub_1B1C64EAC(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  v14 = (uint64_t)&v9[5 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (v7 == 1)
    goto LABEL_13;
  v16 = v9[2] - a2;
  if (v16 >= 0)
  {
    result = (char *)(v14 + 40);
    v17 = (char *)&v9[5 * a2 + 4];
    v18 = 40 * v16;
    if ((char *)(v14 + 40) != v17 || result >= &v17[v18])
      result = (char *)memmove(result, v17, v18);
    v9[2] += v8;
LABEL_13:
    v19 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)v14 = *(_OWORD *)a3;
    *(_OWORD *)(v14 + 16) = v19;
    *(_DWORD *)(v14 + 31) = *(_DWORD *)(a3 + 31);
    *(_QWORD *)v3 = v9;
    return result;
  }
  result = (char *)sub_1B2229700();
  __break(1u);
  return result;
}

void *sub_1B1C91500(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD *v14;
  _OWORD *v15;
  void *result;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  unint64_t v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v7 = a2 - a1;
  v8 = 1 - (a2 - a1);
  v9 = *(_QWORD **)v3;
  v10 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v11 = v10 + v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11)
      v13 = v10 + v8;
    else
      v13 = v10;
    v9 = sub_1B1C66EB0(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  v14 = v9 + 4;
  v15 = &v9[12 * a1 + 4];
  result = (void *)swift_arrayDestroy();
  if (v7 == 1)
    goto LABEL_16;
  v17 = v9[2];
  v18 = v17 - a2;
  if (v17 - a2 >= 0)
  {
    result = v15 + 6;
    v19 = &v14[12 * a2];
    v20 = (unint64_t)&v14[12 * v17];
    if (v15 + 6 != v19 || (unint64_t)result >= v20)
      result = memmove(result, v19, 96 * v18);
    v9[2] += v8;
LABEL_16:
    v22 = a3[3];
    v15[2] = a3[2];
    v15[3] = v22;
    v23 = a3[5];
    v15[4] = a3[4];
    v15[5] = v23;
    v24 = a3[1];
    *v15 = *a3;
    v15[1] = v24;
    *(_QWORD *)v3 = v9;
    return result;
  }
  result = (void *)sub_1B2229700();
  __break(1u);
  return result;
}

_QWORD *sub_1B1C91660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;

  v7 = a2 - a1;
  v8 = 1 - (a2 - a1);
  v9 = *(_QWORD **)v3;
  v10 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v11 = v10 + v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11)
      v13 = v10 + v8;
    else
      v13 = v10;
    v9 = sub_1B1C67B84(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  v14 = v9 + 4;
  v15 = (uint64_t)&v9[5 * a1 + 4];
  sub_1B1B20CB0(0, &qword_1EEF5AB90);
  result = (_QWORD *)swift_arrayDestroy();
  if (v7 == 1)
    goto LABEL_13;
  v17 = v9[2];
  if (v17 - a2 >= 0)
  {
    result = (_QWORD *)(v15 + 40);
    v18 = &v14[5 * a2];
    if ((_QWORD *)(v15 + 40) != v18 || result >= &v14[5 * v17])
      result = memmove(result, v18, 40 * (v17 - a2));
    v9[2] += v8;
LABEL_13:
    v19 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)v15 = *(_OWORD *)a3;
    *(_OWORD *)(v15 + 16) = v19;
    *(_QWORD *)(v15 + 32) = *(_QWORD *)(a3 + 32);
    *(_QWORD *)v3 = v9;
    return result;
  }
  result = (_QWORD *)sub_1B2229700();
  __break(1u);
  return result;
}

_QWORD *sub_1B1C917D0(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD *v14;
  _OWORD *v15;
  _QWORD *result;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;

  v7 = a2 - a1;
  v8 = 1 - (a2 - a1);
  v9 = *(_QWORD **)v3;
  v10 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v11 = v10 + v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11)
      v13 = v10 + v8;
    else
      v13 = v10;
    v9 = sub_1B1C67CD8(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  v14 = v9 + 4;
  v15 = &v9[6 * a1 + 4];
  sub_1B1B20CB0(0, &qword_1ED4B89B0);
  result = (_QWORD *)swift_arrayDestroy();
  if (v7 == 1)
    goto LABEL_13;
  v17 = v9[2];
  if (v17 - a2 >= 0)
  {
    result = v15 + 3;
    v18 = &v14[6 * a2];
    if (v15 + 3 != v18 || result >= &v14[6 * v17])
      result = memmove(result, v18, 48 * (v17 - a2));
    v9[2] += v8;
LABEL_13:
    v19 = a3[1];
    *v15 = *a3;
    v15[1] = v19;
    v15[2] = a3[2];
    *(_QWORD *)v3 = v9;
    return result;
  }
  result = (_QWORD *)sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C91940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char **v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;
  _BYTE v19[80];

  v7 = a1 - a2 + 1;
  v8 = *v3;
  v9 = *((_QWORD *)*v3 + 2);
  v10 = v9 + v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > *((_QWORD *)v8 + 3) >> 1)
  {
    if (v9 <= v10)
      v12 = v9 + v7;
    else
      v12 = v9;
    v8 = sub_1B1C63FA8(isUniquelyReferenced_nonNull_native, v12, 1, v8);
  }
  v13 = (uint64_t)&v8[80 * a1 + 32];
  if (!v7)
    goto LABEL_16;
  v14 = *((_QWORD *)v8 + 2) - a2;
  if (v14 >= 0)
  {
    v15 = (char *)(v13 + 80);
    v16 = &v8[80 * a2 + 32];
    if ((char *)(v13 + 80) != v16 || v15 >= &v16[80 * v14])
      memmove(v15, v16, 80 * v14);
    *((_QWORD *)v8 + 2) += v7;
LABEL_16:
    sub_1B1B9A484(a3, (uint64_t)v19);
    result = sub_1B1B9A484((uint64_t)v19, v13);
    *v3 = v8;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

char *sub_1B1C91A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char **v3;
  uint64_t v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  char *result;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v7 = a1 - a2 + 1;
  v8 = *v3;
  v9 = *((_QWORD *)*v3 + 2);
  v10 = v9 + v7;
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v10 > *((_QWORD *)v8 + 3) >> 1)
  {
    if (v9 <= v10)
      v12 = v9 + v7;
    else
      v12 = v9;
    result = (char *)sub_1B1C6899C((char)result, v12, 1, v8);
    v8 = result;
  }
  v13 = (uint64_t)&v8[112 * a1 + 32];
  if (!v7)
    goto LABEL_16;
  v14 = *((_QWORD *)v8 + 2) - a2;
  if (v14 >= 0)
  {
    result = (char *)(v13 + 112);
    v15 = &v8[112 * a2 + 32];
    if ((char *)(v13 + 112) != v15 || result >= &v15[112 * v14])
      result = (char *)memmove(result, v15, 112 * v14);
    *((_QWORD *)v8 + 2) += v7;
LABEL_16:
    v17 = *(_OWORD *)(a3 + 80);
    *(_OWORD *)(v13 + 64) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(v13 + 80) = v17;
    *(_QWORD *)(v13 + 96) = *(_QWORD *)(a3 + 96);
    v18 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)v13 = *(_OWORD *)a3;
    *(_OWORD *)(v13 + 16) = v18;
    v19 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v13 + 48) = v19;
    *v3 = v8;
    return result;
  }
  result = (char *)sub_1B2229700();
  __break(1u);
  return result;
}

double (*sub_1B1C91BC0())(_QWORD)
{
  _QWORD **v0;
  _QWORD *v1;
  char isUniquelyReferenced_nonNull_native;

  v1 = *v0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    *v0 = sub_1B1FFECDC(v1);
  return nullsub_16;
}

uint64_t sub_1B1C91C20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C62DA8(isUniquelyReferenced_nonNull_native, v10, 1, (unint64_t)v6);
  }
  sub_1B1C79110(0);
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_14;
  v12 = v6[2];
  if (v12 - a2 >= 0)
  {
    if (a2 > a1 || v12 <= a1)
      result = swift_arrayInitWithTakeFrontToBack();
    else
      result = swift_arrayInitWithTakeBackToFront();
    v6[2] -= v5;
LABEL_14:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C91D60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C62C78(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[5 * a1 + 4], &v6[5 * a2 + 4], 40 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C91E84(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C62A3C(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 24 * a1), (const void *)(v6 + 32 + 24 * a2), 24 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C91F98(uint64_t a1, uint64_t a2)
{
  return sub_1B1C94AD4(a1, a2, (uint64_t (*)(void))sub_1B1C63184, (unint64_t *)&qword_1ED4B89D0);
}

void sub_1B1C91FB4(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v27;
  char **v28;
  char *v29;
  char v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v37;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a4 + 80) + 8 * a1 + 32) + 200) == 1)
    *(_BYTE *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a4 + 128));
  v12 = *(_QWORD *)(a4 + 96);
  v13 = *(_QWORD *)(v12 + 40 * a1 + 32);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = (int *)(v13 + 32);
    while (1)
    {
      v16 = *v15++;
      v17 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 32 + 8 * v16);
      if (*(_QWORD *)(v17 + 240) != *(_QWORD *)(v17 + 232))
        break;
      if (!--v14)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    sub_1B1E8DD00(a1);
    v12 = *(_QWORD *)(a4 + 96);
  }
  v18 = v12 + 40 * a1;
  v19 = 36;
  if ((a3 & 1) != 0)
    v19 = 32;
  v20 = *(_DWORD *)(v18 + v19 + 32);
  v21 = HIDWORD(a2) & 1;
  if (v20 == -1)
  {
    v22 = a2;
  }
  else
  {
    v22 = a2;
    sub_1B1C8F888(*(_QWORD *)(*(_QWORD *)(a4 + 136) + 8 * v20 + 32), a2 | (unint64_t)(v21 << 32), a5, a6, &v37);
    if ((v37 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
      return;
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  v23 = (_QWORD *)(a4 + 136);
  swift_retain();
  v24 = sub_1B1E5B224((uint64_t *)(a4 + 136), a4, v22 | (v21 << 32), a1, a3 & 1);
  swift_release();
  v25 = *(_QWORD **)(a4 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 96) = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v25 = sub_1B1FFECDC(v25);
    *(_QWORD *)(a4 + 96) = v25;
  }
  v27 = v25 + 4;
  v28 = (char **)&v25[5 * a1 + 4];
  if ((a3 & 1) != 0)
  {
    v29 = *v28;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    *v28 = v29;
    v31 = a6;
    if ((v30 & 1) == 0)
    {
      v29 = sub_1B1C62EF0(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
      *v28 = v29;
    }
    v33 = *((_QWORD *)v29 + 2);
    v32 = *((_QWORD *)v29 + 3);
    if (v33 >= v32 >> 1)
    {
      v29 = sub_1B1C62EF0(v32 > 1, v33 + 1, 1, v29);
      *v28 = v29;
    }
    *((_QWORD *)v29 + 2) = v33 + 1;
    *(_DWORD *)&v29[4 * v33 + 32] = v24;
    LODWORD(v27[5 * a1 + 4]) = v24;
  }
  else
  {
    v31 = a6;
    v34 = &v27[5 * a1];
    v35 = v34[1];
    sub_1B1C90FF0(v35, v35, v24);
    v34[1] = v35 + 1;
    *((_DWORD *)v34 + 9) = v24;
  }
  LOBYTE(v27[5 * a1 + 3]) = 1;
  sub_1B1C8FD5C(*(_QWORD *)(*v23 + 8 * v24 + 32), a3 & 1, a5, v31);
}

uint64_t sub_1B1C92290(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    sub_1B1AEC268(255, a3);
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B1C922D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1B40F70(0, (unint64_t *)&unk_1ED4BA2A0, &qword_1ED4BA298, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEA548]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B1C92338(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5, int a6, _DWORD *a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12)
{
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v35;
  char **v36;
  char *v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  __int16 v46;
  char v50;
  char v51;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a4 + 80) + 8 * a1 + 32) + 200) == 1)
    *(_BYTE *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  v18 = *(os_unfair_lock_s **)(a4 + 128);
  swift_retain_n();
  os_unfair_lock_lock(v18);
  v19 = *(_QWORD *)(a4 + 96);
  v20 = *(_QWORD *)(v19 + 40 * a1 + 32);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = (int *)(v20 + 32);
    while (1)
    {
      v23 = *v22++;
      v24 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 32 + 8 * v23);
      if (*(_QWORD *)(v24 + 240) != *(_QWORD *)(v24 + 232))
        break;
      if (!--v21)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    sub_1B1E8DD00(a1);
    v19 = *(_QWORD *)(a4 + 96);
  }
  v25 = v19 + 40 * a1;
  v50 = a3;
  v26 = 36;
  if ((a3 & 1) != 0)
    v26 = 32;
  v27 = *(_DWORD *)(v25 + v26 + 32);
  v28 = HIDWORD(a2) & 1;
  if (v27 == -1)
  {
    v45 = a12;
    v46 = a10;
    v30 = a2;
  }
  else
  {
    v29 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 8 * v27 + 32);
    swift_retain();
    v30 = a2;
    sub_1B1C8F964(v29, a2 | (unint64_t)(v28 << 32), a5, a6, a7, a8, a9, &v51, a10, a11, a12 & 1);
    if ((v51 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
      return swift_release_n();
    }
    v45 = a12;
    v46 = a10;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  v31 = (_QWORD *)(a4 + 136);
  swift_retain();
  v32 = sub_1B1E5B224((uint64_t *)(a4 + 136), a4, v30 | (v28 << 32), a1, v50 & 1);
  swift_release();
  v33 = *(_QWORD **)(a4 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 96) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1B1FFECDC(v33);
    *(_QWORD *)(a4 + 96) = v33;
  }
  v35 = v33 + 4;
  v36 = (char **)&v33[5 * a1 + 4];
  if ((v50 & 1) != 0)
  {
    v37 = *v36;
    v38 = swift_isUniquelyReferenced_nonNull_native();
    *v36 = v37;
    if ((v38 & 1) == 0)
    {
      v37 = sub_1B1C62EF0(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
      *v36 = v37;
    }
    v40 = *((_QWORD *)v37 + 2);
    v39 = *((_QWORD *)v37 + 3);
    if (v40 >= v39 >> 1)
    {
      v37 = sub_1B1C62EF0(v39 > 1, v40 + 1, 1, v37);
      *v36 = v37;
    }
    *((_QWORD *)v37 + 2) = v40 + 1;
    *(_DWORD *)&v37[4 * v40 + 32] = v32;
    LODWORD(v35[5 * a1 + 4]) = v32;
  }
  else
  {
    v41 = &v35[5 * a1];
    v42 = v41[1];
    sub_1B1C90FF0(v42, v42, v32);
    v41[1] = v42 + 1;
    *((_DWORD *)v41 + 9) = v32;
  }
  LOBYTE(v35[5 * a1 + 3]) = 1;
  v43 = *(_QWORD *)(*v31 + 8 * v32 + 32);
  swift_retain();
  sub_1B1C8FE48(v43, v50 & 1, a5, a6, a7, a8, a9, v46, v45 & 1);
  return swift_release_n();
}

uint64_t sub_1B1C92670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C631A0(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  sub_1B1B1F228();
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[9 * a1 + 4], &v6[9 * a2 + 4], 72 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C92798(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C66EB0(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[12 * a1 + 4], &v6[12 * a2 + 4], 96 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C928BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C63D98(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 8 * a1), (const void *)(v6 + 32 + 8 * a2), 8 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C929C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C63044(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[2 * a1 + 4], &v6[2 * a2 + 4], 16 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C92AE0(uint64_t a1, uint64_t a2)
{
  return sub_1B1C92C10(a1, a2, (uint64_t (*)(void))sub_1B1C65F68);
}

uint64_t sub_1B1C92AEC(uint64_t a1, uint64_t a2)
{
  return sub_1B1C92D2C(a1, a2, (uint64_t (*)(void))sub_1B1791058);
}

uint64_t sub_1B1C92AF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C635D8(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 4 * a1), (const void *)(v6 + 32 + 4 * a2), 4 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C92C04(uint64_t a1, uint64_t a2)
{
  return sub_1B1C92C10(a1, a2, (uint64_t (*)(void))sub_1B1C62EF0);
}

uint64_t sub_1B1C92C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v7 = a1 - a2;
  v8 = *v3;
  v9 = *(_QWORD *)(*v3 + 16) + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *(_QWORD *)(v8 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_8;
  }
  else
  {
    result = a3();
    v8 = result;
    if (a1 == a2)
    {
LABEL_8:
      *v3 = v8;
      return result;
    }
  }
  v11 = *(_QWORD *)(v8 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v8 + 32 + 4 * a1), (const void *)(v8 + 32 + 4 * a2), 4 * v11);
    *(_QWORD *)(v8 + 16) += v7;
    goto LABEL_8;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C92D20(uint64_t a1, uint64_t a2)
{
  return sub_1B1C92D2C(a1, a2, (uint64_t (*)(void))sub_1B1C636E0);
}

uint64_t sub_1B1C92D2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v7 = a1 - a2;
  v8 = *v3;
  v9 = *(_QWORD *)(*v3 + 16) + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *(_QWORD *)(v8 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_8;
  }
  else
  {
    result = a3();
    v8 = result;
    if (a1 == a2)
    {
LABEL_8:
      *v3 = v8;
      return result;
    }
  }
  v11 = *(_QWORD *)(v8 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v8 + 32 + 16 * a1), (const void *)(v8 + 32 + 16 * a2), 16 * v11);
    *(_QWORD *)(v8 + 16) += v7;
    goto LABEL_8;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C92E3C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C664F0(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 96 * a1), (const void *)(v6 + 32 + 96 * a2), 96 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C92F50(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 96) + 40 * (int)result + 32);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      v8 = *(int *)(v3 + 4 * v7++ + 32);
      v9 = *(_QWORD **)(*(_QWORD *)(a2 + 136) + 8 * v8 + 32);
      sub_1B1C90DF8((uint64_t)v9, a3);
      vfx_swift_deimmortalize((uint64_t)v9);
      vfx_swift_release_dealloc(v9);
    }
    while (v4 != v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1C9301C(uint64_t a1, uint64_t a2)
{
  return sub_1B1C93D08(a1, a2, (void (*)(_QWORD))type metadata accessor for VFXEffect);
}

void sub_1B1C93028(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v27;
  char **v28;
  char *v29;
  char v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v37;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a4 + 80) + 8 * a1 + 32) + 200) == 1)
    *(_BYTE *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a4 + 128));
  v12 = *(_QWORD *)(a4 + 96);
  v13 = *(_QWORD *)(v12 + 40 * a1 + 32);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = (int *)(v13 + 32);
    while (1)
    {
      v16 = *v15++;
      v17 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 32 + 8 * v16);
      if (*(_QWORD *)(v17 + 240) != *(_QWORD *)(v17 + 232))
        break;
      if (!--v14)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    sub_1B1E8DD00(a1);
    v12 = *(_QWORD *)(a4 + 96);
  }
  v18 = v12 + 40 * a1;
  v19 = 36;
  if ((a3 & 1) != 0)
    v19 = 32;
  v20 = *(_DWORD *)(v18 + v19 + 32);
  v21 = HIDWORD(a2) & 1;
  if (v20 == -1)
  {
    v22 = a2;
  }
  else
  {
    v22 = a2;
    sub_1B1C8FBBC(*(_QWORD *)(*(_QWORD *)(a4 + 136) + 8 * v20 + 32), a2 | (unint64_t)(v21 << 32), a5, a6, &v37);
    if ((v37 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
      return;
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  v23 = (_QWORD *)(a4 + 136);
  swift_retain();
  v24 = sub_1B1E5B224((uint64_t *)(a4 + 136), a4, v22 | (v21 << 32), a1, a3 & 1);
  swift_release();
  v25 = *(_QWORD **)(a4 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 96) = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v25 = sub_1B1FFECDC(v25);
    *(_QWORD *)(a4 + 96) = v25;
  }
  v27 = v25 + 4;
  v28 = (char **)&v25[5 * a1 + 4];
  if ((a3 & 1) != 0)
  {
    v29 = *v28;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    *v28 = v29;
    v31 = a6;
    if ((v30 & 1) == 0)
    {
      v29 = sub_1B1C62EF0(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
      *v28 = v29;
    }
    v33 = *((_QWORD *)v29 + 2);
    v32 = *((_QWORD *)v29 + 3);
    if (v33 >= v32 >> 1)
    {
      v29 = sub_1B1C62EF0(v32 > 1, v33 + 1, 1, v29);
      *v28 = v29;
    }
    *((_QWORD *)v29 + 2) = v33 + 1;
    *(_DWORD *)&v29[4 * v33 + 32] = v24;
    LODWORD(v27[5 * a1 + 4]) = v24;
  }
  else
  {
    v31 = a6;
    v34 = &v27[5 * a1];
    v35 = v34[1];
    sub_1B1C90FF0(v35, v35, v24);
    v34[1] = v35 + 1;
    *((_DWORD *)v34 + 9) = v24;
  }
  LOBYTE(v27[5 * a1 + 3]) = 1;
  sub_1B1C900C4(*(_QWORD *)(*v23 + 8 * v24 + 32), a3 & 1, a5, v31);
}

uint64_t sub_1B1C93304(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C6443C(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C93410(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *v2;
  if (*v2 >> 62 && (swift_bridgeObjectRetain(), sub_1B22296AC(), swift_bridgeObjectRelease(), v5 = *v2, *v2 >> 62))
  {
    swift_bridgeObjectRetain();
    v6 = sub_1B22296AC();
    swift_bridgeObjectRelease();
    v5 = *v2;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = a2 - a1;
  v8 = v6 - (a2 - a1);
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_13;
    v10 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1B22296AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1B5E21024](v10, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v2 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_13:
  v13 = (void *)(v11 + 32 + 8 * a1);
  sub_1B1C93F74();
  swift_arrayDestroy();
  if (a2 != a1)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1B22296AC();
      swift_bridgeObjectRelease();
      v14 = v17 - a2;
      if (v17 - a2 >= 0)
      {
LABEL_16:
        memmove(v13, (const void *)(v11 + 32 + 8 * a2), 8 * v14);
        if (!(v5 >> 62))
        {
          v15 = *(_QWORD *)(v11 + 16);
LABEL_18:
          *(_QWORD *)(v11 + 16) = v15 - v7;
          return sub_1B2228AD0();
        }
LABEL_25:
        swift_bridgeObjectRetain();
        v15 = sub_1B22296AC();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      v14 = *(_QWORD *)(v11 + 16) - a2;
      if (v14 >= 0)
        goto LABEL_16;
    }
    sub_1B2229700();
    __break(1u);
    goto LABEL_25;
  }
  return sub_1B2228AD0();
}

uint64_t sub_1B1C93678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C64EAC(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[5 * a1 + 4], &v6[5 * a2 + 4], 40 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

char *sub_1B1C9379C(uint64_t a1, uint64_t a2)
{
  char **v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *((_QWORD *)*v2 + 2);
  v8 = v7 + a1 - a2;
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *((_QWORD *)v6 + 3) >> 1)
  {
    if (a1 == a2)
    {
LABEL_14:
      *v2 = v6;
      return result;
    }
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = sub_1B1C69068((char)result, v10, 1, v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_14;
  }
  v11 = *((_QWORD *)v6 + 2) - a2;
  if (v11 >= 0)
  {
    result = &v6[32 * a1 + 32];
    v12 = &v6[32 * a2 + 32];
    v13 = 32 * v11;
    if (32 * a1 != 32 * a2 || result >= &v12[v13])
      result = (char *)memmove(result, v12, v13);
    *((_QWORD *)v6 + 2) += v5;
    goto LABEL_14;
  }
  result = (char *)sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C938C4(uint64_t a1, uint64_t a2)
{
  return sub_1B1C93D08(a1, a2, (void (*)(_QWORD))type metadata accessor for AuthoringNode);
}

uint64_t sub_1B1C938D0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, __int16 a8, _QWORD *a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v18 = sub_1B1C8E610(*a2, a2[1], a2[2]);
  v19 = a2[1];
  v20 = v17 - v18;
  v21 = v19 - *a2;
  if (v17 - v18 < 1)
  {
    if (v21 > 0 || v20 >= v21)
      goto LABEL_9;
  }
  else if (v21 < 0 || v21 >= (unint64_t)v20)
  {
LABEL_9:
    v19 = v20 + *a2;
  }
  *a2 = v19;
  return sub_1B1F09AE4(a1, v18, v17, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1B1C939A8(signed int a1, unint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, __int16 a11, _QWORD *a12)
{
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  char **v37;
  char *v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v53;
  char v54;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a4 + 80) + 8 * a1 + 32) + 200) == 1)
    *(_BYTE *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
  v18 = *(os_unfair_lock_s **)(a4 + 128);
  swift_retain_n();
  os_unfair_lock_lock(v18);
  v19 = *(_QWORD *)(a4 + 96);
  v20 = *(_QWORD *)(v19 + 40 * a1 + 32);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = (int *)(v20 + 32);
    while (1)
    {
      v23 = *v22++;
      v24 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 32 + 8 * v23);
      if (*(_QWORD *)(v24 + 240) != *(_QWORD *)(v24 + 232))
        break;
      if (!--v21)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    sub_1B1E8DD00(a1);
    v19 = *(_QWORD *)(a4 + 96);
  }
  v25 = v19 + 40 * a1;
  v53 = a3;
  v26 = 36;
  if ((a3 & 1) != 0)
    v26 = 32;
  v27 = *(_DWORD *)(v25 + v26 + 32);
  v28 = HIDWORD(a2) & 1;
  v49 = a6;
  if (v27 == -1)
  {
    v46 = a11;
    v47 = a12;
    v48 = a10;
    v31 = a2;
  }
  else
  {
    v29 = *(_QWORD *)(*(_QWORD *)(a4 + 136) + 8 * v27 + 32);
    swift_retain();
    v30 = a6;
    v31 = a2;
    sub_1B1C8FA70(v29, a2 | (unint64_t)(v28 << 32), a5, v30, a7, a8, a9, &v54, a10, a11, a12);
    if ((v54 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
      return swift_release_n();
    }
    v46 = a11;
    v47 = a12;
    v48 = a10;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a4 + 128));
  v32 = (_QWORD *)(a4 + 136);
  swift_retain();
  v33 = sub_1B1E5B224((uint64_t *)(a4 + 136), a4, v31 | (v28 << 32), a1, v53 & 1);
  swift_release();
  v34 = *(_QWORD **)(a4 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 96) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v34 = sub_1B1FFECDC(v34);
    *(_QWORD *)(a4 + 96) = v34;
  }
  v36 = v34 + 4;
  v37 = (char **)&v34[5 * a1 + 4];
  if ((v53 & 1) != 0)
  {
    v38 = *v37;
    v39 = swift_isUniquelyReferenced_nonNull_native();
    *v37 = v38;
    if ((v39 & 1) == 0)
    {
      v38 = sub_1B1C62EF0(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
      *v37 = v38;
    }
    v41 = *((_QWORD *)v38 + 2);
    v40 = *((_QWORD *)v38 + 3);
    if (v41 >= v40 >> 1)
    {
      v38 = sub_1B1C62EF0(v40 > 1, v41 + 1, 1, v38);
      *v37 = v38;
    }
    *((_QWORD *)v38 + 2) = v41 + 1;
    *(_DWORD *)&v38[4 * v41 + 32] = v33;
    LODWORD(v36[5 * a1 + 4]) = v33;
  }
  else
  {
    v42 = &v36[5 * a1];
    v43 = v42[1];
    sub_1B1C90FF0(v43, v43, v33);
    v42[1] = v43 + 1;
    *((_DWORD *)v42 + 9) = v33;
  }
  LOBYTE(v36[5 * a1 + 3]) = 1;
  v44 = *(_QWORD *)(*v32 + 8 * v33 + 32);
  swift_retain();
  sub_1B1C8FF6C(v44, v53 & 1, a5, v49, a7, a8, a9, v48, v46, v47);
  return swift_release_n();
}

uint64_t sub_1B1C93CFC(uint64_t a1, uint64_t a2)
{
  return sub_1B1C93D08(a1, a2, (void (*)(_QWORD))type metadata accessor for InputEvent);
}

uint64_t sub_1B1C93D08(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  unint64_t *v3;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v7 = *v3;
  if (*v3 >> 62 && (swift_bridgeObjectRetain(), sub_1B22296AC(), swift_bridgeObjectRelease(), v7 = *v3, *v3 >> 62))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1B22296AC();
    swift_bridgeObjectRelease();
    v7 = *v3;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = a2 - a1;
  v10 = v8 - (a2 - a1);
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v7;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_13;
    v12 = 1;
  }
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1B22296AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v10)
    v14 = v10;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1B5E21024](v12, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v3 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_13:
  v15 = (void *)(v13 + 32 + 8 * a1);
  a3(0);
  swift_arrayDestroy();
  if (a2 != a1)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_1B22296AC();
      swift_bridgeObjectRelease();
      v16 = v19 - a2;
      if (v19 - a2 >= 0)
      {
LABEL_16:
        memmove(v15, (const void *)(v13 + 32 + 8 * a2), 8 * v16);
        if (!(v7 >> 62))
        {
          v17 = *(_QWORD *)(v13 + 16);
LABEL_18:
          *(_QWORD *)(v13 + 16) = v17 - v9;
          return sub_1B2228AD0();
        }
LABEL_25:
        swift_bridgeObjectRetain();
        v17 = sub_1B22296AC();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      v16 = *(_QWORD *)(v13 + 16) - a2;
      if (v16 >= 0)
        goto LABEL_16;
    }
    sub_1B2229700();
    __break(1u);
    goto LABEL_25;
  }
  return sub_1B2228AD0();
}

unint64_t sub_1B1C93F74()
{
  unint64_t result;

  result = qword_1ED4BA670;
  if (!qword_1ED4BA670)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4BA670);
  }
  return result;
}

uint64_t sub_1B1C93FC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C66198(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C940D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C65244(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[4 * a1 + 4], &v6[4 * a2 + 4], 32 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C941EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C663BC(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8418);
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[2 * a1 + 4], &v6[2 * a2 + 4], 16 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C9431C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = a2 - a1;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 - (a2 - a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    v6 = sub_1B1C67CD8(isUniquelyReferenced_nonNull_native, v10, 1, v6);
  }
  sub_1B1B20CB0(0, &qword_1ED4B89B0);
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_10;
  v12 = v6[2] - a2;
  if (v12 >= 0)
  {
    result = (uint64_t)memmove(&v6[6 * a1 + 4], &v6[6 * a2 + 4], 48 * v12);
    v6[2] -= v5;
LABEL_10:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C94454(uint64_t a1, uint64_t a2)
{
  return sub_1B1C9448C(a1, a2, (uint64_t (*)(void))sub_1B1C67B84, &qword_1EEF5AB90);
}

uint64_t sub_1B1C94470(uint64_t a1, uint64_t a2)
{
  return sub_1B1C9448C(a1, a2, (uint64_t (*)(void))sub_1B1C67BA0, (unint64_t *)&unk_1EEF5AB80);
}

uint64_t sub_1B1C9448C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v9 = a2 - a1;
  v10 = *v4;
  v11 = *(_QWORD *)(*v4 + 16) - (a2 - a1);
  if (!swift_isUniquelyReferenced_nonNull_native() || v11 > *(_QWORD *)(v10 + 24) >> 1)
    v10 = a3();
  sub_1B1B20CB0(0, a4);
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_7;
  v13 = *(_QWORD *)(v10 + 16) - a2;
  if (v13 >= 0)
  {
    result = (uint64_t)memmove((void *)(v10 + 32 + 40 * a1), (const void *)(v10 + 32 + 40 * a2), 40 * v13);
    *(_QWORD *)(v10 + 16) -= v9;
LABEL_7:
    *v4 = v10;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C945D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C68894(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1C946DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *(_QWORD **)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= v6[3] >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C6899C(result, v10, 1, v6);
    v6 = (_QWORD *)result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = v6[2] - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove(&v6[14 * a1 + 4], &v6[14 * a2 + 4], 112 * v11);
    v6[2] += v5;
LABEL_11:
    *(_QWORD *)v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

unint64_t sub_1B1C947F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4BA378;
  if (!qword_1ED4BA378)
  {
    sub_1B1A02758(255, &qword_1ED4BA370, (uint64_t)&type metadata for ChunksStorage, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF28], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4BA378);
  }
  return result;
}

uint64_t sub_1B1C94850(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v5 = a1 - a2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + a1 - a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v8 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (a1 == a2)
      goto LABEL_11;
  }
  else
  {
    if (v7 <= v8)
      v10 = v8;
    else
      v10 = v7;
    result = (uint64_t)sub_1B1C64334(result, v10, 1, (char *)v6);
    v6 = result;
    if (a1 == a2)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    result = (uint64_t)memmove((void *)(v6 + 32 + 16 * a1), (const void *)(v6 + 32 + 16 * a2), 16 * v11);
    *(_QWORD *)(v6 + 16) += v5;
LABEL_11:
    *v2 = v6;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

_QWORD *sub_1B1C9495C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = a2 - a1;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = v7 - (a2 - a1);
  v9 = *(_QWORD **)v3;
  v10 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v11 = v10 + v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11)
      v13 = v10 + v8;
    else
      v13 = v10;
    v9 = sub_1B1C62B5C(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  v14 = v9 + 4;
  v15 = (uint64_t)&v9[2 * a1 + 4];
  sub_1B1A0FCB4();
  result = (_QWORD *)swift_arrayDestroy();
  if (v7 != v6)
  {
    v17 = v9[2];
    v18 = v17 - a2;
    if (v17 - a2 < 0)
    {
      result = (_QWORD *)sub_1B2229700();
      __break(1u);
      return result;
    }
    result = (_QWORD *)(v15 + 16 * v7);
    v19 = &v14[2 * a2];
    v20 = (unint64_t)&v14[2 * v17];
    if (result != v19 || (unint64_t)result >= v20)
      result = memmove(result, v19, 16 * v18);
    v9[2] += v8;
  }
  if (v7)
    result = (_QWORD *)swift_arrayInitWithCopy();
  *(_QWORD *)v3 = v9;
  return result;
}

uint64_t sub_1B1C94AB8(uint64_t a1, uint64_t a2)
{
  return sub_1B1C94AD4(a1, a2, (uint64_t (*)(void))sub_1B1C670C0, (unint64_t *)&qword_1ED4B8C70);
}

uint64_t sub_1B1C94AD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v9 = a2 - a1;
  v10 = *v4;
  v11 = *(_QWORD *)(*v4 + 16) - (a2 - a1);
  if (!swift_isUniquelyReferenced_nonNull_native() || v11 > *(_QWORD *)(v10 + 24) >> 1)
    v10 = a3();
  sub_1B1AEC268(0, a4);
  result = swift_arrayDestroy();
  if (a2 == a1)
    goto LABEL_7;
  v13 = *(_QWORD *)(v10 + 16) - a2;
  if (v13 >= 0)
  {
    result = (uint64_t)memmove((void *)(v10 + 32 + 40 * a1), (const void *)(v10 + 32 + 40 * a2), 40 * v13);
    *(_QWORD *)(v10 + 16) -= v9;
LABEL_7:
    *v4 = v10;
    return result;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t destroy for ClassComponentStorage()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClassComponentStorage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClassComponentStorage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClassComponentStorage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassComponentStorage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassComponentStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassComponentStorage()
{
  return &type metadata for ClassComponentStorage;
}

uint64_t sub_1B1C94ED8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[2];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *v1;
    v5 = (_QWORD *)(v2 + 56);
    while (*(v5 - 3) != a1)
    {
      v5 += 5;
      if (!--v3)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    sub_1B2229430();
    swift_bridgeObjectRelease();
    sub_1B222A210();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    sub_1B2229688();
    __break(1u);
  }
  return v4 + *v5;
}

__n128 sub_1B1C94FE8@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t DynamicType;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t *v42;
  void (*v43)(uint64_t *, _QWORD *, uint64_t);
  uint64_t v44;
  unsigned __int8 v45;
  __n128 result;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unsigned __int8 v67;
  unsigned __int8 v68;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v58 = MEMORY[0x1E0DEE9D8];
    sub_1B202A0A8(0, v3, 0);
    v5 = v2 + 32;
    v6 = v58;
    v7 = v3;
    do
    {
      sub_1B19FA198(v5, (uint64_t)&v60);
      sub_1B19FA070(&v60, v62);
      DynamicType = swift_getDynamicType();
      v9 = v63;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B202A0A8(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v58;
      }
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1B202A0A8(v10 > 1, v11 + 1, 1);
        v6 = v58;
      }
      v12 = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v6 + 16) = v11 + 1;
      v13 = v6 + 16 * v11;
      *(_QWORD *)(v13 + 32) = DynamicType;
      *(_QWORD *)(v13 + 40) = v12;
      v5 += 40;
      --v7;
    }
    while (v7);
    v2 = a1;
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  sub_1B216B51C(v6, 0, 256, 0, (uint64_t)&v60);
  v14 = v62;
  v51 = v63;
  v52 = v61;
  v49 = v65;
  v50 = v64;
  v48 = v66;
  v68 = v67;
  v53 = v60;
  v15 = v60.n128_u64[0];
  swift_retain();
  v16 = swift_slowAlloc();
  v17 = v16;
  v55 = v14;
  if (v3)
  {
    v57 = v16;
    v59 = v4;
    sub_1B202AD10(0, v3, 0);
    v18 = v2 + 32;
    do
    {
      sub_1B19FA198(v18, (uint64_t)&v60);
      sub_1B19FA070(&v60, v62);
      v19 = swift_getDynamicType();
      v20 = v62;
      v21 = v63;
      sub_1B19FA070(&v60, v62);
      v22 = (*(uint64_t (**)(uint64_t, unint64_t))(v21 + 16))(v20, v21);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B202AD10(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v59;
      }
      v24 = *(_QWORD *)(v4 + 16);
      v23 = *(_QWORD *)(v4 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1B202AD10(v23 > 1, v24 + 1, 1);
        v4 = v59;
      }
      *(_QWORD *)(v4 + 16) = v24 + 1;
      v25 = v4 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v19;
      *(_QWORD *)(v25 + 40) = v22;
      v18 += 40;
      --v3;
    }
    while (v3);
    v14 = v55;
    v17 = v57;
    goto LABEL_19;
  }
  if (*(_QWORD *)(v4 + 16))
  {
LABEL_19:
    sub_1B1B995FC();
    v26 = sub_1B22296DC();
    goto LABEL_20;
  }
  v26 = MEMORY[0x1E0DEE9E0];
LABEL_20:
  v60.n128_u64[0] = v26;
  v27 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1B1C955A0(v27, 1, &v60);
  v28 = v17 + v14;
  swift_bridgeObjectRelease();
  v29 = v60.n128_u64[0];
  v30 = *(_QWORD *)(v15 + 16);
  if (v30)
  {
    v47 = v60.n128_u64[0];
    v31 = 0;
    do
    {
      v32 = *(_QWORD *)(v15 + v31 + 32);
      v33 = *(_QWORD *)(v15 + v31 + 56);
      v34 = (_QWORD *)(v2 + v31 + 32);
      v35 = v28;
      v36 = v15;
      v37 = v17;
      v38 = *(_QWORD *)(v2 + v31 + 56);
      v39 = *(_QWORD *)(v2 + v31 + 64);
      v40 = sub_1B19FA070(v34, v38);
      v62 = v38;
      v41 = *(_QWORD *)(v39 + 8);
      v2 = a1;
      v63 = v41;
      v42 = sub_1B1A137F4((uint64_t *)&v60);
      v43 = *(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      v44 = v38;
      v17 = v37;
      v15 = v36;
      v28 = v35;
      v43(v42, v40, v44);
      sub_1B1F2655C((uint64_t)&v60, v17, v35, v33, v32);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
      v31 += 40;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v14 = v55;
    v29 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  v45 = v68;
  a2->n128_u64[0] = v17;
  a2->n128_u64[1] = v28;
  result = v53;
  a2[1] = v53;
  a2[2].n128_u64[0] = v52;
  a2[2].n128_u64[1] = v14;
  a2[3].n128_u64[0] = v51;
  a2[3].n128_u64[1] = v50;
  a2[4].n128_u64[0] = v49;
  a2[4].n128_u64[1] = v48;
  a2[5].n128_u8[0] = v45;
  a2[5].n128_u64[1] = v29;
  return result;
}

_QWORD *sub_1B1C95414()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v18[24];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[40];
  _QWORD *v22;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  result = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = v3 + 32;
    swift_retain();
    do
    {
      sub_1B1F2661C(v1, v2);
      sub_1B19FA198((uint64_t)v21, (uint64_t)v18);
      v7 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v7 = sub_1B1C63184(0, v7[2] + 1, 1, v7);
        v22 = v7;
      }
      v9 = v7[2];
      v8 = v7[3];
      if (v9 >= v8 >> 1)
        v22 = sub_1B1C63184(v8 > 1, v9 + 1, 1, v7);
      v10 = v19;
      v11 = v20;
      v12 = sub_1B19FC264((uint64_t)v18, v19);
      v13 = MEMORY[0x1E0C80A78](v12, v12);
      v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_BYTE *, double))(v16 + 16))(v15, v13);
      sub_1B1DACB58(v9, (uint64_t)v15, (uint64_t *)&v22, v10, v11);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v21);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_release();
    return v22;
  }
  return result;
}

void sub_1B1C955A0(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  char v25;
  char v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = a1[4];
  v30 = a1[5];
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)*a3;
  v10 = sub_1B1DC3AC8(v7);
  v11 = v9;
  v12 = v8[2] + ((v9 & 1) == 0);
  if (v8[3] >= v12)
  {
    if ((a2 & 1) != 0)
    {
      if ((v9 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1B1EA7974();
      if ((v11 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v17 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v17[6] + v18) = v7;
    *(_QWORD *)(v17[7] + v18) = v30;
    ++v17[2];
    v19 = v4 - 1;
    if (v4 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      return;
    }
    v20 = a1 + 7;
    while (1)
    {
      v21 = *(v20 - 1);
      v22 = *v20;
      v23 = (_QWORD *)*a3;
      v24 = sub_1B1DC3AC8(v21);
      v26 = v25;
      if (v23[3] < (int64_t)(v23[2] + ((v25 & 1) == 0)))
      {
        sub_1B1E8FF1C(v23[2] + ((v25 & 1) == 0), 1);
        v24 = sub_1B1DC3AC8(v21);
        if ((v26 & 1) != (v27 & 1))
          goto LABEL_19;
      }
      if ((v26 & 1) != 0)
        goto LABEL_9;
      v20 += 2;
      v28 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
      v29 = 8 * v24;
      *(_QWORD *)(v28[6] + v29) = v21;
      *(_QWORD *)(v28[7] + v29) = v22;
      ++v28[2];
      if (!--v19)
        goto LABEL_18;
    }
  }
  sub_1B1E8FF1C(v12, a2 & 1);
  v13 = sub_1B1DC3AC8(v7);
  if ((v11 & 1) == (v14 & 1))
  {
    v10 = v13;
    if ((v11 & 1) == 0)
      goto LABEL_12;
LABEL_9:
    v15 = (void *)swift_allocError();
    swift_willThrow();
    v16 = v15;
    sub_1B1A203F8();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_20;
  }
LABEL_19:
  sub_1B2229FC4();
  __break(1u);
LABEL_20:
  sub_1B2229430();
  sub_1B2228890();
  sub_1B22295EC();
  sub_1B2228890();
  sub_1B2229688();
  __break(1u);
}

__CFString *sub_1B1C958C0@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  *(_BYTE *)(a1 + 24) = 2;
  *(_QWORD *)(a1 + 32) = &unk_1E637DB30;
  *(_WORD *)(a1 + 40) = 0;
  v2 = (int *)type metadata accessor for TriggerScript(0);
  v3 = a1 + v2[10];
  v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)(a1 + v2[12]) = 0;
  v5 = a1 + v2[13];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  *(_QWORD *)(a1 + v2[11]) = CFSTR("VFXTriggerTypeKeyDown");
  return CFSTR("VFXTriggerTypeKeyDown");
}

uint64_t sub_1B1C95978(unint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  if (a1 >> 60 == 9)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B2229304();
    if (swift_conformsToProtocol2())
    {
      v1 = sub_1B1C358A8();
      swift_release();
      swift_bridgeObjectRelease();
      return v1;
    }
    __break(1u);
  }
  sub_1B2229430();
  sub_1B2228890();
  sub_1B22295EC();
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1C95AC4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 >> 60 != 9)
    return 0;
  v1 = *(unsigned __int8 *)(a1 + 56);
  if ((*(_WORD *)(a1 + 58) & 0x80) != 0 || (v1 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_15;
  }
  v2 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  v3 = sub_1B2229304();
  if (swift_conformsToProtocol2())
    v4 = v3;
  else
    v4 = 0;
  if (!v4)
    goto LABEL_15;
  v5 = sub_1B2229304();
  result = swift_conformsToProtocol2();
  if (result)
  {
    if (!sub_1B1F24B94(v5))
      goto LABEL_15;
    v7 = sub_1B2229304();
    result = swift_conformsToProtocol2();
    if (result)
    {
      v8 = sub_1B1F24AA4(v7);
      sub_1B1B69BE0(v2, v2);
      if (v8 == v9)
      {
        swift_release();
        v1 = 0;
LABEL_16:
        swift_bridgeObjectRelease();
        return v1;
      }
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1B1C95BF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t result;

  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      result = sub_1B222A078();
      break;
    default:
      sub_1B222A078();
      sub_1B1B632F0(a4);
      sub_1B2228824();
      sub_1B1D78044(a1, a4);
      result = sub_1B1B28D2C(a4);
      break;
  }
  return result;
}

uint64_t sub_1B1C95CD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1B222A06C();
  sub_1B1C95BF8((uint64_t)v5, v1, v2, v3);
  return sub_1B222A0C0();
}

unint64_t sub_1B1C95D28(uint64_t a1)
{
  uint64_t v1;

  return sub_1B1C95BF8(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B1C95D34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1B222A06C();
  sub_1B1C95BF8((uint64_t)v5, v1, v2, v3);
  return sub_1B222A0C0();
}

uint64_t sub_1B1C95D88(uint64_t a1, uint64_t a2)
{
  return sub_1B1CA9420(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

unint64_t sub_1B1C95DA4(unsigned __int8 a1)
{
  int v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v1 = a1 - 5;
  result = 0x8000000000000050;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = 4;
      v4 = swift_allocObject();
      v5 = xmmword_1B22847C0;
      goto LABEL_3;
    case 6:
    case 7:
      v6 = swift_allocObject();
      v7 = xmmword_1B2286450;
      goto LABEL_7;
    case 8:
      return 0x8000000000000038;
    case 9:
    case 10:
    case 11:
    case 14:
      return result;
    case 12:
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = 3;
      v4 = swift_allocObject();
      v5 = xmmword_1B22847D0;
LABEL_3:
      *(_OWORD *)(v4 + 16) = v5;
      *(_QWORD *)(v3 + 24) = v4 | 0x1000000000000000;
      return v3 | 0x1000000000000000;
    case 13:
      return 0x80000000000000C0;
    case 15:
    case 16:
      v8 = swift_allocObject();
      *(_BYTE *)(v8 + 16) = 3;
      *(_QWORD *)(v8 + 24) = 0xD000000000000011;
      *(_QWORD *)(v8 + 32) = 0x80000001B2337540;
      goto LABEL_11;
    case 17:
      v8 = swift_allocObject();
      *(_BYTE *)(v8 + 16) = 1;
      *(_QWORD *)(v8 + 24) = 0x3265727574786574;
      *(_QWORD *)(v8 + 32) = 0xEF3E666C61683C64;
LABEL_11:
      result = v8 | 0x7000000000000000;
      break;
    default:
      v6 = swift_allocObject();
      v7 = xmmword_1B22847D0;
LABEL_7:
      *(_OWORD *)(v6 + 16) = v7;
      result = v6 | 0x1000000000000000;
      break;
  }
  return result;
}

uint64_t sub_1B1C95F54(uint64_t a1, char a2)
{
  uint64_t result;

  switch(a2)
  {
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      result = sub_1B222A078();
      break;
    default:
      sub_1B222A078();
      result = sub_1B222A084();
      break;
  }
  return result;
}

uint64_t sub_1B1C96040()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1C95F54((uint64_t)v3, v1);
  return sub_1B222A0C0();
}

uint64_t sub_1B1C96084(uint64_t a1)
{
  char *v1;

  return sub_1B1C95F54(a1, *v1);
}

uint64_t sub_1B1C9608C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1C95F54((uint64_t)v3, v1);
  return sub_1B222A0C0();
}

BOOL sub_1B1C960CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1CA8624(*a1, *a2);
}

void sub_1B1C960D8()
{
  __int128 *v0;
  _QWORD v1[4];

  sub_1B1CAECBC(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1B1C96120(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_1B1C9613C + 4 * byte_1B2288BF3[a1]))();
}

void sub_1B1C9613C()
{
  sub_1B19F8E54(0, &qword_1ED4BB080, (uint64_t (*)(void))sub_1B19F8DCC, MEMORY[0x1E0DEB188], MEMORY[0x1E0DEDD20]);
}

void sub_1B1C962C8()
{
  JUMPOUT(0x1B1C9629CLL);
}

void sub_1B1C962D4()
{
  JUMPOUT(0x1B1C9629CLL);
}

void sub_1B1C962E0()
{
  JUMPOUT(0x1B1C9629CLL);
}

void sub_1B1C964E0()
{
  __int128 *v0;
  uint64_t v1;
  _QWORD v2[4];

  sub_1B1CAECBC(v0, (uint64_t)&v1);
  sub_1B1CAECBC(v0, (uint64_t)v2);
  __asm { BR              X10 }
}

uint64_t sub_1B1C96548()
{
  sub_1B222A078();
  return sub_1B222A078();
}

uint64_t sub_1B1C966E8()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_1B1CAECBC(v0, (uint64_t)v2);
  sub_1B222A06C();
  sub_1B1C964E0();
  return sub_1B222A0C0();
}

void sub_1B1C96734()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_1B1CAECBC(v0, (uint64_t)v1);
  sub_1B1C964E0();
}

uint64_t sub_1B1C96770()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_1B1CAECBC(v0, (uint64_t)v2);
  sub_1B222A06C();
  sub_1B1C964E0();
  return sub_1B222A0C0();
}

uint64_t sub_1B1C967C0(__int128 *a1, __int128 *a2)
{
  char v3;
  __int128 v5[2];
  _BYTE v6[40];

  sub_1B1CAECBC(a1, (uint64_t)v5);
  sub_1B1CAECBC(a2, (uint64_t)v6);
  sub_1B1CA8790(v5);
  return v3 & 1;
}

uint64_t sub_1B1C96808()
{
  sub_1B1CAF26C();
  return sub_1B2228A7C();
}

uint64_t sub_1B1C96864()
{
  sub_1B1CAF26C();
  return sub_1B2228A04();
}

uint64_t sub_1B1C968B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F90898(*a1, *a2);
}

uint64_t sub_1B1C968BC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1752457584;
  if (*v0 != 1)
    v1 = 0x746E6572727563;
  if (*v0)
    return v1;
  else
    return 0x746365726964;
}

uint64_t sub_1B1C9690C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1CA97CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1C96930()
{
  sub_1B1CACD90();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C96958()
{
  sub_1B1CACD90();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C96980()
{
  sub_1B1CACCC4();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C969A8()
{
  sub_1B1CACCC4();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C969D0()
{
  return 12383;
}

uint64_t sub_1B1C969E0()
{
  sub_1B1CACD4C();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C96A08()
{
  sub_1B1CACD4C();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C96A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1B2229D24();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B1C96AAC()
{
  sub_1B1CACD08();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C96AD4()
{
  sub_1B1CACD08();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C96AFC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B222A06C();
  if (v1)
  {
    sub_1B222A078();
    if (v1 == 1)
      sub_1B2228824();
  }
  else
  {
    sub_1B222A078();
    sub_1B222A09C();
    sub_1B222A09C();
  }
  return sub_1B222A0C0();
}

uint64_t sub_1B1C96BA4()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) == 1)
    {
      sub_1B222A078();
      return sub_1B2228824();
    }
    else
    {
      return sub_1B222A078();
    }
  }
  else
  {
    sub_1B222A078();
    sub_1B222A09C();
    return sub_1B222A09C();
  }
}

uint64_t sub_1B1C96C30()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B222A06C();
  if (v1)
  {
    sub_1B222A078();
    if (v1 == 1)
      sub_1B2228824();
  }
  else
  {
    sub_1B222A078();
    sub_1B222A09C();
    sub_1B222A09C();
  }
  return sub_1B222A0C0();
}

uint64_t sub_1B1C96CD4(uint64_t a1, uint64_t a2)
{
  return sub_1B1CA93A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void sub_1B1C96CF0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1C96D24(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

void sub_1B1C96E74(uint64_t a1)
{
  sub_1B222A0CC();
  __asm { BR              X10 }
}

uint64_t sub_1B1C96EB8()
{
  sub_1B222A078();
  sub_1B222A078();
  return sub_1B222A0B4();
}

void sub_1B1C9721C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1C97258()
{
  sub_1B222A078();
  return sub_1B222A078();
}

uint64_t sub_1B1C977A4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;
  char v40;
  char v41;

  v38 = a4;
  v34 = a3;
  v35 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1B19F8E54(0, &qword_1EEF5D1C8, (uint64_t (*)(void))sub_1B1CACCC4, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v33 = v6;
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v30 = (char *)&v27 - v8;
  sub_1B19F8E54(0, &qword_1EEF5D1D0, (uint64_t (*)(void))sub_1B1CACD08, (uint64_t)&type metadata for ScriptLocation.EntityLocator.PathCodingKeys, v5);
  v32 = v9;
  v29 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v27 - v11;
  sub_1B19F8E54(0, &qword_1EEF5D1D8, (uint64_t (*)(void))sub_1B1CACD4C, (uint64_t)&type metadata for ScriptLocation.EntityLocator.DirectCodingKeys, v5);
  v28 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v27 - v16;
  sub_1B19F8E54(0, &qword_1EEF5D1E0, (uint64_t (*)(void))sub_1B1CACD90, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CodingKeys, v5);
  v19 = v18;
  v36 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)&v27 - v21;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CACD90();
  sub_1B222A180();
  if (!(_BYTE)v38)
  {
    v39 = 0;
    sub_1B1CACD4C();
    sub_1B22298BC();
    v37 = v35;
    sub_1B1A0895C();
    v24 = v28;
    sub_1B2229958();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v22, v19);
  }
  if (v38 == 1)
  {
    v40 = 1;
    sub_1B1CACD08();
    sub_1B22298BC();
    v23 = v32;
    sub_1B2229910();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v22, v19);
  }
  v41 = 2;
  sub_1B1CACCC4();
  v26 = v30;
  sub_1B22298BC();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v22, v19);
}

uint64_t sub_1B1C97AE0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1C9721C((uint64_t)v3, v1);
  return sub_1B222A0C0();
}

void sub_1B1C97B24(uint64_t a1)
{
  uint64_t *v1;

  sub_1B1C9721C(a1, *v1);
}

uint64_t sub_1B1C97B2C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1C9721C((uint64_t)v3, v1);
  return sub_1B222A0C0();
}

void sub_1B1C97B6C(uint64_t *a1)
{
  sub_1B1CA8B88(*a1);
}

uint64_t sub_1B1C97B78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1B1CAC794(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B1C97BA4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1C977A4(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

void sub_1B1C97BC0(_QWORD *a1, uint64_t a2)
{
  sub_1B19FA070(a1, a1[3]);
  sub_1B222A15C();
  __asm { BR              X10 }
}

uint64_t sub_1B1C97C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[176];

  sub_1B1A00060((v1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v4);
  sub_1B19FC264(v2 - 128, *(_QWORD *)(v2 - 104));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B2229B98();
  if (!v0)
  {
    sub_1B19FC264(v2 - 128, *(_QWORD *)(v2 - 104));
    sub_1B19FC3E4();
    sub_1B2229BA4();
    sub_1B19FC264(v2 - 128, *(_QWORD *)(v2 - 104));
    sub_1B1CAD980();
    sub_1B2229BA4();
  }
  sub_1B19FC350((uint64_t)v4);
  swift_release();
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v2 - 128);
}

void sub_1B1C985DC()
{
  sub_1B2229688();
  __break(1u);
}

unint64_t sub_1B1C98654@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1B1CACDD4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1B1C9867C(_QWORD *a1)
{
  uint64_t *v1;

  sub_1B1C97BC0(a1, *v1);
}

uint64_t sub_1B1C98694()
{
  sub_1B1CB0448();
  return sub_1B2228A7C();
}

uint64_t sub_1B1C986F0()
{
  sub_1B1CB0448();
  return sub_1B2228A04();
}

uint64_t sub_1B1C9873C()
{
  unsigned __int8 *v0;
  unsigned int v1;
  uint64_t result;

  v1 = *v0 - 1;
  if (v1 <= 2)
    return qword_1B228B020[(char)v1];
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1C987B4(_QWORD *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[2];
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;

  v16 = a5;
  v17 = a3;
  v15[1] = a4;
  sub_1B19F8E54(0, &qword_1EEF5D248, (uint64_t (*)(void))sub_1B1CADCD4, (uint64_t)&type metadata for ScriptParameter.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)v15 - v12;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CADCD4();
  sub_1B222A180();
  v22 = a2;
  v21 = 0;
  sub_1B1CADDA0();
  sub_1B2229958();
  if (!v5)
  {
    v20 = v17;
    v19 = 1;
    sub_1B1CADDE4();
    sub_1B2229958();
    v18 = 2;
    sub_1B22298F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B1C9894C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F91268(*a1, *a2);
}

uint64_t sub_1B1C98958()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x737365636361;
  if (*v0 != 1)
    v1 = 0xD00000000000001ALL;
  if (*v0)
    return v1;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t sub_1B1C989B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1C989D8()
{
  sub_1B1CADCD4();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C98A00()
{
  sub_1B1CADCD4();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C98A28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 24);
  sub_1B222A06C();
  sub_1B1C9721C((uint64_t)v4, v1);
  sub_1B222A084();
  sub_1B222A084();
  if (v2 != 1)
    sub_1B222A078();
  return sub_1B222A0C0();
}

uint64_t sub_1B1C98AC0(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 24);
  sub_1B1C9721C(a1, *(_QWORD *)v1);
  sub_1B222A084();
  if (v2 == 1)
    return sub_1B222A084();
  sub_1B222A084();
  return sub_1B222A078();
}

uint64_t sub_1B1C98B28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 24);
  sub_1B222A06C();
  sub_1B1C9721C((uint64_t)v4, v1);
  sub_1B222A084();
  sub_1B222A084();
  if (v2 != 1)
    sub_1B222A078();
  return sub_1B222A0C0();
}

uint64_t sub_1B1C98BBC(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  char v9;
  uint64_t result;
  char v11;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1B1CA8B88(*(_QWORD *)a1);
  v9 = v8;
  result = 0;
  if ((v9 & 1) != 0 && v2 == v5)
  {
    if ((v4 & 1) != 0)
    {
      if (v7)
        return 1;
    }
    else
    {
      if (v3 == v6)
        v11 = v7;
      else
        v11 = 1;
      if ((v11 & 1) == 0)
        return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B1C98C44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t result;
  char v5;
  uint64_t v6;
  char v7;

  result = sub_1B1CADAC4(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_1B1C98C7C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1C987B4(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1B1C98CA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, _QWORD *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  _QWORD *v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  _BYTE *v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v45;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _QWORD v52[5];
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v11 = v10;
  v12 = a5;
  v13 = a3;
  v45 = result;
  v14 = a9;
  v15 = a10;
  v16 = *(_QWORD *)(a6 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v39 = a8;
    v48 = MEMORY[0x1E0DEE9D8];
    sub_1B202A370(0, v16, 0);
    v17 = v48;
    v19 = (_BYTE *)(a6 + 56);
    do
    {
      v20 = *((_QWORD *)v19 - 3);
      v21 = *(v19 - 16);
      v22 = *((_QWORD *)v19 - 1);
      v23 = *v19;
      result = sub_1B1B1DD24(v20);
      v25 = *(_QWORD *)(v48 + 16);
      v24 = *(_QWORD *)(v48 + 24);
      if (v25 >= v24 >> 1)
        result = sub_1B202A370(v24 > 1, v25 + 1, 1);
      *(_QWORD *)(v48 + 16) = v25 + 1;
      v26 = v48 + 32 * v25;
      *(_QWORD *)(v26 + 32) = v20;
      *(_BYTE *)(v26 + 40) = v21;
      *(_QWORD *)(v26 + 48) = v22;
      *(_BYTE *)(v26 + 56) = v23;
      v19 += 64;
      --v16;
    }
    while (v16);
    v14 = a9;
    v11 = v10;
    v15 = a10;
    v12 = a5;
    v13 = a3;
    a8 = v39;
  }
  if (a10 != 2)
  {
    if ((a8 & 1) != 0)
    {
      v32 = sub_1B1EF1234(a4, v12, a6, v13);
      if (v11)
        return swift_bridgeObjectRelease();
      v12 = v33;
      a4 = v32;
      v34 = v13;
      if (!v13)
        goto LABEL_17;
    }
    else
    {
      swift_bridgeObjectRetain();
      v34 = v13;
      if (!v13)
      {
LABEL_17:
        v36 = v17;
        v37 = type metadata accessor for CScriptCodeGen();
        goto LABEL_18;
      }
    }
    if (v34 == 1)
    {
      v35 = type metadata accessor for MetalScriptCodeGen();
      v36 = v17;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v35 + 128))(&v49, v45, a2, a4, v12, 1, a7 & 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v36 = v17;
    v37 = type metadata accessor for SwiftScriptCodeGen();
LABEL_18:
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 128))(&v49, v45, a2, a4, v12, 1, a7 & 1, v36, v15);
    swift_bridgeObjectRelease();
    v38 = sub_1B2229D24();
    result = swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      v28 = *((_QWORD *)&v51 + 1);
      v31 = v51;
      v29 = *((_QWORD *)&v50 + 1);
      v27 = v50;
      v30 = v49;
      goto LABEL_21;
    }
LABEL_19:
    sub_1B1B5C280((uint64_t)&v49, 2, a10 == 0, v52);
    v55 = v49;
    sub_1B1B28C6C((uint64_t)&v55);
    v54 = v50;
    sub_1B1BA80C0((uint64_t)&v54);
    v53 = v51;
    result = sub_1B1BA80C0((uint64_t)&v53);
    v31 = v52[3];
    v28 = v52[4];
    v27 = v52[1];
    v29 = v52[2];
    v30 = v52[0];
LABEL_21:
    v17 = v36;
    goto LABEL_22;
  }
  v27 = 0;
  v28 = 0xE200000000000000;
  v29 = 0xE000000000000000;
  v30 = MEMORY[0x1E0DEE9D8];
  v31 = 11565;
LABEL_22:
  *v14 = v30;
  v14[1] = v27;
  v14[2] = v29;
  v14[3] = v31;
  v14[4] = v28;
  v14[5] = v17;
  v14[6] = 0;
  return result;
}

uint64_t sub_1B1C98FC0()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _OWORD v14[4];
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  sub_1B222A0CC();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  sub_1B1AEB3CC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1B20E3E28((uint64_t)v14, inited);
  swift_setDeallocating();
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_arrayDestroy();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 32);
  sub_1B222A078();
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A10C(0, v3, 0);
    v5 = 32;
    v4 = v13;
    do
    {
      v6 = *(_QWORD *)(v2 + v5);
      sub_1B222A0CC();
      sub_1B1B1DD24(v6);
      sub_1B1C96E74(v6);
      sub_1B222A078();
      v23 = v18;
      v24 = v19;
      v25 = v20;
      v21 = v16;
      v22 = v17;
      v7 = sub_1B222A0B4();
      sub_1B1A05610(v6);
      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_1B202A10C(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v13 + 16) = v9 + 1;
      *(_QWORD *)(v13 + 8 * v9 + 32) = v7;
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1B222A078();
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    v11 = v4 + 32;
    do
    {
      v11 += 8;
      sub_1B222A078();
      --v10;
    }
    while (v10);
  }
  swift_bridgeObjectRelease();
  v17 = v14[1];
  v18 = v14[2];
  v19 = v14[3];
  v20 = v15;
  v16 = v14[0];
  return sub_1B222A0B4();
}

_QWORD *sub_1B1C99250()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  _BYTE *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202AE0C(0, v2, 0);
    v3 = v16;
    v4 = (_BYTE *)(v1 + 56);
    do
    {
      v5 = *((_QWORD *)v4 - 3);
      v6 = *(v4 - 16);
      v7 = *((_QWORD *)v4 - 1);
      v8 = *v4;
      sub_1B1B1DD24(v5);
      v10 = v16[2];
      v9 = v16[3];
      if (v10 >= v9 >> 1)
        sub_1B202AE0C(v9 > 1, v10 + 1, 1);
      v16[2] = v10 + 1;
      v11 = &v16[8 * v10];
      v11[4] = v5;
      *((_BYTE *)v11 + 40) = v6;
      v11[6] = v7;
      *((_BYTE *)v11 + 56) = v8;
      v4 += 32;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD **)(v0 + 24);
    if (v12[2])
    {
      v13 = v12[4];
      v14 = v12[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
    v3 = sub_1B1EF0E94(v13, v14, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)v0, 1, 3);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1B1C993B8@<X0>(unsigned __int8 a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  _QWORD v20[4];
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;

  v23 = a2;
  v5 = *(_QWORD **)(v2 + 24);
  if (v5[2])
  {
    v7 = v5[4];
    v6 = v5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v8 = *(_BYTE *)v2;
  v10 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v11 = sub_1B1C99250();
  if (v3)
    return swift_bridgeObjectRelease();
  sub_1B1C98CA0(v7, v6, v8, v10, v9, (uint64_t)v11, 1, *(_QWORD *)(*(_QWORD *)(v2 + 32) + 16) == 0, v20, a1);
  v13 = v20[0];
  v14 = v20[1];
  v15 = v20[2];
  v16 = v20[3];
  v19 = v21;
  v17 = v22;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v18 = v23;
  *v23 = v13;
  v18[1] = v14;
  v18[2] = v15;
  v18[3] = v16;
  *((_OWORD *)v18 + 2) = v19;
  v18[6] = v17;
  return result;
}

void sub_1B1C994CC(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType();
  sub_1B1CA7CC0(a1, v1);
}

uint64_t sub_1B1C9950C(unint64_t a1)
{
  return sub_1B1C99520(a1);
}

uint64_t sub_1B1C99520(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1B1CAF208(0, (unint64_t *)&qword_1ED4B8898, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v12 - v4;
  if (a1 == 0xFFFFFFFF)
  {
    sub_1B1A1B6FC(0, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  else
  {
    swift_retain();
    sub_1B1D16F98(a1, (uint64_t)v5);
    swift_release();
    sub_1B1A1B6FC(0, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v8 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    {
      v10 = *(_QWORD *)&v5[*(int *)(v8 + 60)];
      sub_1B1CAF1D8(v10);
      sub_1B1B1DCE0((uint64_t)v5, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
      v9 = sub_1B1CADE28(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  sub_1B1CAF19C((uint64_t)v5, (unint64_t *)&qword_1ED4B8898, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B1C996E4()
{
  return type metadata accessor for ParticleInitScript.System();
}

uint64_t sub_1B1C99700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *(_BYTE *)a2 = 0;
  *(_QWORD *)(a2 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a2 + 40) = 0;
  v3 = a2 + *(int *)(a1 + 36);
  v4 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)(a2 + 8) = 0xD0000000000000BFLL;
  *(_QWORD *)(a2 + 16) = 0x80000001B232DFE0;
  *(_QWORD *)(a2 + 24) = &unk_1E6394C78;
  return result;
}

const char *sub_1B1C99788()
{
  return "ParticleInitScriptRunner";
}

void sub_1B1C9979C()
{
  sub_1B1A1B6FC(0, &qword_1EEF5D260, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for GPUScriptRunner);
}

uint64_t sub_1B1C997DC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1B1CAF208(0, (unint64_t *)&qword_1ED4B88A8, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v12 - v4;
  if (a1 == 0xFFFFFFFF)
  {
    sub_1B1A1B6FC(0, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  else
  {
    swift_retain();
    sub_1B1D16FBC(a1, (uint64_t)v5);
    swift_release();
    sub_1B1A1B6FC(0, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v8 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
    {
      v10 = *(_QWORD *)&v5[*(int *)(v8 + 60)];
      sub_1B1CAF1D8(v10);
      sub_1B1B1DCE0((uint64_t)v5, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
      v9 = sub_1B1CADE28(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  sub_1B1CAF19C((uint64_t)v5, (unint64_t *)&qword_1ED4B88A8, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B1C999A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1B222A0CC();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  sub_1B222A078();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v0 + 32);
  sub_1B222A078();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A10C(0, v5, 0);
    v7 = 32;
    v6 = v15;
    do
    {
      v8 = *(_QWORD *)(v4 + v7);
      sub_1B222A0CC();
      sub_1B1B1DD24(v8);
      sub_1B1C96E74(v8);
      sub_1B222A078();
      v9 = sub_1B222A0B4();
      sub_1B1A05610(v8);
      v11 = *(_QWORD *)(v15 + 16);
      v10 = *(_QWORD *)(v15 + 24);
      if (v11 >= v10 >> 1)
        sub_1B202A10C(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v15 + 16) = v11 + 1;
      *(_QWORD *)(v15 + 8 * v11 + 32) = v9;
      v7 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_1B222A078();
  v12 = *(_QWORD *)(v6 + 16);
  if (v12)
  {
    v13 = v6 + 32;
    do
    {
      v13 += 8;
      sub_1B222A078();
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  return sub_1B222A0B4();
}

_QWORD *sub_1B1C99C14()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  _BYTE *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202AE0C(0, v2, 0);
    v3 = v16;
    v4 = (_BYTE *)(v1 + 56);
    do
    {
      v5 = *((_QWORD *)v4 - 3);
      v6 = *(v4 - 16);
      v7 = *((_QWORD *)v4 - 1);
      v8 = *v4;
      sub_1B1B1DD24(v5);
      v10 = v16[2];
      v9 = v16[3];
      if (v10 >= v9 >> 1)
        sub_1B202AE0C(v9 > 1, v10 + 1, 1);
      v16[2] = v10 + 1;
      v11 = &v16[8 * v10];
      v11[4] = v5;
      *((_BYTE *)v11 + 40) = v6;
      v11[6] = v7;
      *((_BYTE *)v11 + 56) = v8;
      v4 += 32;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD **)(v0 + 16);
    if (v12[2])
    {
      v13 = v12[4];
      v14 = v12[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
    v3 = sub_1B1EF0E94(v13, v14, *(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 24), 1, 3);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1B1C99D7C@<X0>(unsigned __int8 a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  _QWORD v20[4];
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;

  v23 = a2;
  v5 = *(_QWORD **)(v2 + 16);
  if (v5[2])
  {
    v7 = v5[4];
    v6 = v5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v8 = *(_BYTE *)(v2 + 24);
  v10 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v11 = sub_1B1C99C14();
  if (v3)
    return swift_bridgeObjectRelease();
  sub_1B1C98CA0(v7, v6, v8, v10, v9, (uint64_t)v11, 0, *(_QWORD *)(*(_QWORD *)(v2 + 32) + 16) == 0, v20, a1);
  v13 = v20[0];
  v14 = v20[1];
  v15 = v20[2];
  v16 = v20[3];
  v19 = v21;
  v17 = v22;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v18 = v23;
  *v23 = v13;
  v18[1] = v14;
  v18[2] = v15;
  v18[3] = v16;
  *((_OWORD *)v18 + 2) = v19;
  v18[6] = v17;
  return result;
}

void sub_1B1C99E90()
{
  sub_1B1A1B6FC(0, &qword_1EEF5D350, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for GPUScriptRunner);
}

uint64_t sub_1B1C99ED0(unint64_t a1)
{
  return sub_1B1C997DC(a1);
}

void sub_1B1C99EE4()
{
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B97D0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for CPUScriptRunnerSystem);
}

uint64_t sub_1B1C99F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a2 + 40) = 0;
  v3 = a2 + *(int *)(a1 + 36);
  v4 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)a2 = 0xD0000000000000C3;
  *(_QWORD *)(a2 + 8) = 0x80000001B232E120;
  *(_QWORD *)(a2 + 16) = &unk_1E639E588;
  return result;
}

uint64_t sub_1B1C99FA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F93A68(*a1, *a2);
}

uint64_t sub_1B1C99FB4()
{
  unsigned __int8 *v0;

  return sub_1B1FB2CDC(*v0);
}

uint64_t sub_1B1C99FBC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1B1DB4090(a1, *v1);
}

uint64_t sub_1B1C99FC4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1B1DB5288(a1, *v1);
}

uint64_t sub_1B1C99FCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A94();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9A008@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A94();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9A034()
{
  sub_1B1CAE910();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C9A05C()
{
  sub_1B1CAE910();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C9A084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char v45;
  char v46;

  v39 = a2;
  sub_1B19F8E54(0, &qword_1ED4BABA0, (uint64_t (*)(void))sub_1B1CAE910, (uint64_t)&type metadata for ParticleInitScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v38 - v7;
  inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1E0C80A78](inited, v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = 0;
  *((_QWORD *)v12 + 4) = MEMORY[0x1E0DEE9D8];
  v12[40] = 0;
  v14 = *(int *)(v13 + 36);
  v41 = v12;
  v15 = (uint64_t)&v12[v14];
  v16 = type metadata accessor for ScriptIndex();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v40 = (_QWORD *)v15;
  v17(v15, 1, 1, v16);
  v18 = *(_QWORD *)(a1 + 24);
  v42 = (_QWORD *)a1;
  v19 = (_QWORD *)a1;
  v20 = v8;
  sub_1B19FA070(v19, v18);
  sub_1B1CAE910();
  v21 = v43;
  sub_1B222A150();
  if (v21)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
    v25 = (uint64_t)v40;
    swift_bridgeObjectRelease();
    return sub_1B1B1DC9C(v25, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v43 = v17;
    v22 = v5;
    LOBYTE(v44) = 0;
    v23 = sub_1B22297CC();
    v24 = v4;
    v27 = (uint64_t)v41;
    *((_QWORD *)v41 + 1) = v23;
    *(_QWORD *)(v27 + 16) = v28;
    v46 = 4;
    sub_1B1C23400();
    sub_1B22297B4();
    v29 = v42;
    v30 = v44;
    if (v44 == 3)
      v30 = 2;
    *(_BYTE *)v27 = v30;
    LOBYTE(v44) = 5;
    *(_BYTE *)(v27 + 40) = sub_1B2229784() & 1;
    v31 = v29[3];
    v32 = v29[4];
    sub_1B19FA070(v29, v31);
    if (sub_1B2067B64(1091, v31, v32))
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1B226D240;
      LOBYTE(v44) = 2;
      *(_QWORD *)(v33 + 32) = sub_1B22297CC();
      *(_QWORD *)(v33 + 40) = v34;
      *(_QWORD *)(v27 + 24) = v33;
    }
    else
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v46 = 1;
      sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      sub_1B2229814();
      *(_QWORD *)(v27 + 24) = v44;
    }
    v46 = 3;
    sub_1B1A08878();
    sub_1B22297B4();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v24);
    v35 = v39;
    if ((v45 & 1) == 0)
    {
      v36 = v44;
      v37 = v40;
      sub_1B1B1DC9C((uint64_t)v40, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *v37 = v36;
      swift_storeEnumTagMultiPayload();
      v43((uint64_t)v37, 0, 1, v16);
    }
    sub_1B1792810(v27, v35, type metadata accessor for ParticleInitScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
    return sub_1B1A04628(v27, type metadata accessor for ParticleInitScript);
  }
}

uint64_t sub_1B1C9A544(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for ScriptIndex();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v26 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B1791524(0, qword_1ED4B7E00, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v26 - v10;
  sub_1B19F8E54(0, &qword_1EEF5D268, (uint64_t (*)(void))sub_1B1CAE910, (uint64_t)&type metadata for ParticleInitScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v26 - v16;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAE910();
  sub_1B222A180();
  v18 = v2;
  LOBYTE(v31) = 0;
  v19 = v29;
  sub_1B2229910();
  if (!v19)
  {
    v20 = (uint64_t)v11;
    v21 = v28;
    v31 = *(_QWORD *)(v18 + 24);
    v30 = 1;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1B2229958();
    LOBYTE(v31) = *(_BYTE *)v18;
    v30 = 4;
    sub_1B1C23584();
    sub_1B2229958();
    LOBYTE(v31) = 5;
    sub_1B222991C();
    inited = type metadata accessor for ParticleInitScript(0);
    sub_1B1B59664(v18 + *(int *)(inited + 36), v20);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v20, 1, v21) == 1)
    {
      sub_1B1B1DC9C(v20, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
    }
    else
    {
      v23 = v26;
      sub_1B1792810(v20, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1B1A04628((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
        sub_1B1A04628(v20, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      }
      else
      {
        v24 = *v23;
        sub_1B1A04628(v20, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
        v31 = v24;
        v30 = 3;
        sub_1B1A0895C();
        sub_1B2229958();
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_1B1C9A8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1C9A084(a1, a2);
}

uint64_t sub_1B1C9A8E0(_QWORD *a1)
{
  return sub_1B1C9A544(a1);
}

uint64_t sub_1B1C9A8F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A94();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9A928()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1C9A950 + 4 * byte_1B2288C5C[*v0]))();
}

void sub_1B1C9A950(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionNames");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1B1C9A978(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionName");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1B1C9A99C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001B23287A0;
}

void sub_1B1C9A9BC(_QWORD *a1@<X8>)
{
  *a1 = 0x65676175676E616CLL;
  a1[1] = 0xE800000000000000;
}

void sub_1B1C9A9D8(_QWORD *a1@<X8>)
{
  *a1 = 0x5668706172477369;
  a1[1] = 0xE900000000000032;
}

uint64_t sub_1B1C9A9F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C9AA20 + 4 * byte_1B2288C62[*v0]))(1701080931, 0xE400000000000000);
}

uint64_t sub_1B1C9AA20()
{
  return 0x6E6F6974636E7566;
}

unint64_t sub_1B1C9AA54()
{
  return 0xD000000000000011;
}

uint64_t sub_1B1C9AA70()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1B1C9AA88()
{
  return 0x5668706172477369;
}

uint64_t sub_1B1C9AAA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A94();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9AAD0()
{
  sub_1B1CAE954();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C9AAF8()
{
  sub_1B1CAE954();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C9AB20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v40;
  uint64_t v41;
  char v42;
  char v43;

  v36 = a2;
  sub_1B19F8E54(0, &qword_1EEF5D270, (uint64_t (*)(void))sub_1B1CAE954, (uint64_t)&type metadata for ParticleUpdateScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v37 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v35 - v6;
  updated = type metadata accessor for ParticleUpdateScript(0);
  MEMORY[0x1E0C80A78](updated, v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v11 + 2) = &unk_1E639E3A0;
  v11[24] = 0;
  *((_QWORD *)v11 + 4) = MEMORY[0x1E0DEE9D8];
  v11[40] = 0;
  v13 = *(int *)(v12 + 36);
  v40 = (uint64_t *)v11;
  v14 = (uint64_t)&v11[v13];
  v15 = type metadata accessor for ScriptIndex();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v38 = (_QWORD *)v14;
  v16(v14, 1, 1, v15);
  v17 = a1;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAE954();
  v18 = v39;
  sub_1B222A150();
  if (v18)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    v22 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B1B1DC9C(v22, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v39 = v16;
    v19 = v4;
    LOBYTE(v41) = 0;
    v20 = v37;
    v21 = sub_1B22297CC();
    v24 = v40;
    *v40 = v21;
    v24[1] = v25;
    v26 = v17[3];
    v27 = v17[4];
    sub_1B19FA070(v17, v26);
    if (sub_1B2067B64(1091, v26, v27))
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1B226D240;
      LOBYTE(v41) = 2;
      *(_QWORD *)(v28 + 32) = sub_1B22297CC();
      *(_QWORD *)(v28 + 40) = v29;
      v24[2] = v28;
    }
    else
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v43 = 1;
      sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      sub_1B2229814();
      v24[2] = v41;
    }
    v43 = 4;
    sub_1B1C23400();
    sub_1B22297B4();
    v30 = v41;
    if (v41 == 3)
      v30 = 2;
    *((_BYTE *)v24 + 24) = v30;
    LOBYTE(v41) = 5;
    *((_BYTE *)v24 + 40) = sub_1B2229784() & 1;
    v43 = 3;
    sub_1B1A08878();
    sub_1B22297B4();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    v31 = v36;
    if ((v42 & 1) == 0)
    {
      v32 = v41;
      v33 = v38;
      sub_1B1B1DC9C((uint64_t)v38, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *v33 = v32;
      swift_storeEnumTagMultiPayload();
      v39((uint64_t)v33, 0, 1, v15);
    }
    v34 = v40;
    sub_1B1792810((uint64_t)v40, v31, type metadata accessor for ParticleUpdateScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v17);
    return sub_1B1A04628((uint64_t)v34, type metadata accessor for ParticleUpdateScript);
  }
}

uint64_t sub_1B1C9AFE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v2 = v1;
  v4 = type metadata accessor for ScriptIndex();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v26 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1791524(0, qword_1ED4B7E00, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v24 - v10;
  sub_1B19F8E54(0, &qword_1EEF5D280, (uint64_t (*)(void))sub_1B1CAE954, (uint64_t)&type metadata for ParticleUpdateScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v24 - v16;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAE954();
  sub_1B222A180();
  LOBYTE(v28) = *(_BYTE *)(v2 + 24);
  v29 = 4;
  sub_1B1C23584();
  v18 = v27;
  sub_1B2229958();
  if (v18)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v20 = v14;
  v21 = (uint64_t *)v26;
  LOBYTE(v28) = 0;
  sub_1B2229910();
  v28 = *(_QWORD *)(v2 + 16);
  v29 = 1;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1B2229958();
  LOBYTE(v28) = 5;
  sub_1B222991C();
  v22 = v2 + *(int *)(type metadata accessor for ParticleUpdateScript(0) + 36);
  sub_1B1B59664(v22, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v25) == 1)
  {
    sub_1B1B1DC9C((uint64_t)v11, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    sub_1B1792810((uint64_t)v11, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B1A04628((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      sub_1B1A04628((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    }
    else
    {
      v23 = *v21;
      sub_1B1A04628((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      v28 = v23;
      v29 = 3;
      sub_1B1A0895C();
      sub_1B2229958();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v17, v13);
}

uint64_t sub_1B1C9B36C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1C9AB20(a1, a2);
}

uint64_t sub_1B1C9B380(_QWORD *a1)
{
  return sub_1B1C9AFE4(a1);
}

uint64_t sub_1B1C9B398@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B1CA1578(a1, a2);
}

uint64_t sub_1B1C9B3AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B1C9B3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1B1CA8234(a1, v2, ObjectType, a2);
}

void sub_1B1C9B414()
{
  sub_1B1A1B6FC(0, &qword_1EEF5D360, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for CPUScriptRunnerSystem);
}

uint64_t sub_1B1C9B454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0xE000000000000000;
  *(_BYTE *)(a2 + 24) = 2;
  *(_QWORD *)(a2 + 32) = &unk_1E6370BB0;
  *(_WORD *)(a2 + 40) = 0;
  v2 = a2 + *(int *)(a1 + 40);
  v3 = type metadata accessor for ScriptIndex();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
}

void sub_1B1C9B4C0(char *a1)
{
  sub_1B1F8E12C(*a1);
}

void sub_1B1C9B4CC()
{
  char *v0;

  sub_1B1FB2484(*v0);
}

void sub_1B1C9B4D4()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1C9B508()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1C9B5A4(uint64_t a1)
{
  char *v1;

  sub_1B1DB62F4(a1, *v1);
}

uint64_t sub_1B1C9B5AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A94();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9B5E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1C9B608 + 4 * byte_1B2288C6E[*v0]))();
}

void sub_1B1C9B608(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionNames");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1B1C9B630(_QWORD *a1@<X8>)
{
  *a1 = 0x65676175676E616CLL;
  a1[1] = 0xE800000000000000;
}

void sub_1B1C9B64C(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656D61726170;
  a1[1] = 0xEA00000000007372;
}

void sub_1B1C9B66C(_QWORD *a1@<X8>)
{
  *a1 = 0x6567617473;
  a1[1] = 0xE500000000000000;
}

void sub_1B1C9B684(_QWORD *a1@<X8>)
{
  *a1 = 0x5668706172477369;
  a1[1] = 0xE900000000000032;
}

uint64_t sub_1B1C9B6A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C9B6CC + 4 * byte_1B2288C74[*v0]))(1701080931, 0xE400000000000000);
}

uint64_t sub_1B1C9B6CC()
{
  return 0x6E6F6974636E7566;
}

uint64_t sub_1B1C9B6F0()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1B1C9B708()
{
  return 0x6574656D61726170;
}

uint64_t sub_1B1C9B724()
{
  return 0x6567617473;
}

uint64_t sub_1B1C9B738()
{
  return 0x5668706172477369;
}

uint64_t sub_1B1C9B754@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A94();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9B780()
{
  sub_1B1CAE998();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C9B7A8()
{
  sub_1B1CAE998();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C9B7D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v23 = a2;
  sub_1B19F8E54(0, &qword_1EEF5D288, (uint64_t (*)(void))sub_1B1CAE998, (uint64_t)&type metadata for GraphScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v24 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for GraphScript(0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0xE000000000000000;
  v12[24] = 2;
  *((_QWORD *)v12 + 4) = &unk_1E6370A60;
  *((_WORD *)v12 + 20) = 0;
  v14 = &v12[*(int *)(v13 + 40)];
  v15 = type metadata accessor for ScriptIndex();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAE998();
  sub_1B222A150();
  if (!v2)
  {
    v16 = v5;
    v18 = v23;
    v17 = v24;
    LOBYTE(v25) = 0;
    *((_QWORD *)v12 + 1) = sub_1B22297CC();
    *((_QWORD *)v12 + 2) = v19;
    v26 = 2;
    sub_1B1C23400();
    sub_1B2229814();
    v12[24] = v25;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v26 = 1;
    sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1B2229814();
    *((_QWORD *)v12 + 4) = v25;
    sub_1B1A02758(0, &qword_1EEF5C0A0, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v26 = 3;
    sub_1B1CAEA20(&qword_1EEF5D298, (uint64_t (*)(void))sub_1B1CAE9DC, MEMORY[0x1E0DEAF40]);
    sub_1B2229814();
    *(_QWORD *)v12 = v25;
    LOBYTE(v25) = 5;
    v21 = sub_1B2229784();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
    v12[41] = v21 & 1;
    sub_1B1792810((uint64_t)v12, v18, type metadata accessor for GraphScript);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B1A04628((uint64_t)v12, type metadata accessor for GraphScript);
}

uint64_t sub_1B1C9BB40(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5D2A8, (uint64_t (*)(void))sub_1B1CAE998, (uint64_t)&type metadata for GraphScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAE998();
  sub_1B222A180();
  LOBYTE(v14) = 0;
  sub_1B2229910();
  if (!v2)
  {
    v14 = v3[4];
    v13 = 1;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1B2229958();
    LOBYTE(v14) = *((_BYTE *)v3 + 24);
    v13 = 2;
    sub_1B1C23584();
    sub_1B2229958();
    v14 = *v3;
    v13 = 3;
    sub_1B1A02758(0, &qword_1EEF5C0A0, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1CAEA20(&qword_1EEF5D2B0, (uint64_t (*)(void))sub_1B1CAEA9C, MEMORY[0x1E0DEAF10]);
    sub_1B2229958();
    LOBYTE(v14) = 5;
    sub_1B222991C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B1C9BDA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1C9B7D0(a1, a2);
}

uint64_t sub_1B1C9BDB8(_QWORD *a1)
{
  return sub_1B1C9BB40(a1);
}

uint64_t sub_1B1C9BDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1B222A0CC();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 24);
  sub_1B222A078();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0B4();
}

uint64_t sub_1B1C9BF0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _QWORD *v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  _QWORD *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  _QWORD v44[5];
  uint64_t v45;

  v5 = (_QWORD *)*((_QWORD *)v2 + 3);
  if (v5[2])
  {
    v7 = v5[4];
    v6 = v5[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v8 = *((_QWORD *)v2 + 1);
  v9 = *((_QWORD *)v2 + 2);
  v10 = *v2;
  v11 = sub_1B1EF0E94(v7, v6, v8, v9, *v2, 0, 3);
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    v40 = v8;
    v41 = v9;
    v13 = v11[2];
    v14 = MEMORY[0x1E0DEE9D8];
    if (v13)
    {
      v37 = v10;
      v38 = v5;
      v39 = a1;
      v45 = MEMORY[0x1E0DEE9D8];
      sub_1B202A370(0, v13, 0);
      v14 = v45;
      v15 = v11 + 7;
      do
      {
        v16 = *((_QWORD *)v15 - 3);
        v17 = *(v15 - 16);
        v18 = *((_QWORD *)v15 - 1);
        v19 = *v15;
        sub_1B1B1DD24(v16);
        v45 = v14;
        v21 = *(_QWORD *)(v14 + 16);
        v20 = *(_QWORD *)(v14 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1B202A370(v20 > 1, v21 + 1, 1);
          v14 = v45;
        }
        *(_QWORD *)(v14 + 16) = v21 + 1;
        v22 = v14 + 32 * v21;
        *(_QWORD *)(v22 + 32) = v16;
        *(_BYTE *)(v22 + 40) = v17;
        *(_QWORD *)(v22 + 48) = v18;
        *(_BYTE *)(v22 + 56) = v19;
        v15 += 64;
        --v13;
      }
      while (v13);
      v23 = a2;
      v24 = v39;
      v5 = v38;
      v10 = v37;
    }
    else
    {
      v24 = a1;
      v23 = a2;
    }
    if (v24 == 2)
    {
      result = swift_bridgeObjectRelease();
      v25 = 0;
      v26 = 0xE200000000000000;
      v27 = 0xE000000000000000;
      v28 = MEMORY[0x1E0DEE9D8];
      v29 = 11565;
    }
    else
    {
      v30 = v14;
      if (v5[2])
        swift_bridgeObjectRetain();
      v31 = sub_1B1EF1234(v40, v41, (uint64_t)v11, v10);
      v43 = v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v10)
      {
        if (v10 == 1)
          v33 = type metadata accessor for MetalScriptCodeGen();
        else
          v33 = type metadata accessor for SwiftScriptCodeGen();
      }
      else
      {
        v33 = type metadata accessor for CScriptCodeGen();
      }
      v34 = v33;
      if (v5[2])
      {
        v36 = v5[4];
        v35 = v5[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        v36 = 0;
        v35 = 0;
      }
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v34 + 128))(v44, v36, v35, v31, v43, 0, 0, v30, v24);
      v14 = v30;
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v29 = v44[3];
      v26 = v44[4];
      v25 = v44[1];
      v27 = v44[2];
      v28 = v44[0];
    }
    *v23 = v28;
    v23[1] = v25;
    v23[2] = v27;
    v23[3] = v29;
    v23[4] = v26;
    v23[5] = v14;
    v23[6] = 0;
  }
  return result;
}

void sub_1B1C9C1F8()
{
  sub_1B1A1B6FC(0, &qword_1EEF5D348, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for CPUScriptRunnerSystem);
}

uint64_t sub_1B1C9C238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *(_BYTE *)a2 = 0;
  *(_BYTE *)(a2 + 32) = 0;
  v3 = a2 + *(int *)(a1 + 32);
  v4 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)(a2 + 8) = 0xD0000000000000C0;
  *(_QWORD *)(a2 + 16) = 0x80000001B232DE80;
  *(_QWORD *)(a2 + 24) = &unk_1E637A1F0;
  return result;
}

uint64_t sub_1B1C9C2B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F8EFB8(*a1, *a2);
}

uint64_t sub_1B1C9C2BC()
{
  unsigned __int8 *v0;

  return sub_1B1FB2768(*v0);
}

uint64_t sub_1B1C9C2C8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1B1DB5F80(a1, *v1);
}

uint64_t sub_1B1C9C2D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A50();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9C304@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A50();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9C330()
{
  sub_1B1CAEAE0();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C9C358()
{
  sub_1B1CAEAE0();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C9C380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  char v38;

  v31 = a2;
  sub_1B19F8E54(0, &qword_1EEF5D2C0, (uint64_t (*)(void))sub_1B1CAEAE0, (uint64_t)&type metadata for EmitterScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v32 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v30 - v6;
  v8 = type metadata accessor for EmitterScript(0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v11 = 0;
  v11[32] = 0;
  v13 = (uint64_t)&v11[*(int *)(v12 + 32)];
  v14 = type metadata accessor for ScriptIndex();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v33 = (_QWORD *)v13;
  v15(v13, 1, 1, v14);
  v16 = a1[3];
  v34 = a1;
  sub_1B19FA070(a1, v16);
  sub_1B1CAEAE0();
  v17 = v35;
  sub_1B222A150();
  if (v17)
  {
    v19 = (uint64_t)v33;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v34);
    return sub_1B1B1DC9C(v19, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v35 = v15;
    LOBYTE(v36) = 0;
    v18 = v32;
    *((_QWORD *)v11 + 1) = sub_1B22297CC();
    *((_QWORD *)v11 + 2) = v21;
    v38 = 4;
    sub_1B1C23400();
    sub_1B22297B4();
    v22 = v36;
    if (v36 == 3)
      v22 = 0;
    *v11 = v22;
    v23 = v34;
    v24 = v34[3];
    v25 = v34[4];
    sub_1B19FA070(v34, v24);
    if (sub_1B2067B64(1091, v24, v25))
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1B226D240;
      LOBYTE(v36) = 2;
      *(_QWORD *)(v26 + 32) = sub_1B22297CC();
      *(_QWORD *)(v26 + 40) = v27;
      *((_QWORD *)v11 + 3) = v26;
    }
    else
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v38 = 1;
      sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      sub_1B2229814();
      *((_QWORD *)v11 + 3) = v36;
    }
    v38 = 3;
    sub_1B1A08878();
    sub_1B22297B4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v18);
    if ((v37 & 1) == 0)
    {
      v28 = v36;
      v29 = v33;
      sub_1B1B1DC9C((uint64_t)v33, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *v29 = v28;
      swift_storeEnumTagMultiPayload();
      v35((uint64_t)v29, 0, 1, v14);
    }
    sub_1B1792810((uint64_t)v11, v31, type metadata accessor for EmitterScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v23);
    return sub_1B1A04628((uint64_t)v11, type metadata accessor for EmitterScript);
  }
}

uint64_t sub_1B1C9C808(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v27 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B1791524(0, qword_1ED4B7E00, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v27 - v10;
  sub_1B19F8E54(0, &qword_1EEF5D2D0, (uint64_t (*)(void))sub_1B1CAEAE0, (uint64_t)&type metadata for EmitterScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v27 - v16;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAEAE0();
  sub_1B222A180();
  LOBYTE(v32) = 0;
  v18 = v30;
  sub_1B2229910();
  if (!v18)
  {
    v19 = (uint64_t)v11;
    v20 = v29;
    v32 = *(_QWORD *)(v2 + 24);
    v31 = 1;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1B2229958();
    LOBYTE(v32) = *(_BYTE *)v2;
    v31 = 4;
    sub_1B1C23584();
    sub_1B2229958();
    v21 = v2 + *(int *)(type metadata accessor for EmitterScript(0) + 32);
    v22 = v19;
    sub_1B1B59664(v21, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v19, 1, v20) == 1)
    {
      sub_1B1B1DC9C(v19, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
    }
    else
    {
      v23 = v19;
      v24 = v27;
      sub_1B1792810(v23, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1B1A04628((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
        sub_1B1A04628(v22, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      }
      else
      {
        v25 = *v24;
        sub_1B1A04628(v22, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
        v32 = v25;
        v31 = 3;
        sub_1B1A0895C();
        sub_1B2229958();
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_1B1C9CB5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1C9C380(a1, a2);
}

uint64_t sub_1B1C9CB70(_QWORD *a1)
{
  return sub_1B1C9C808(a1);
}

void sub_1B1C9CB84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1B1FFED40(v1);
    swift_getObjectType();
    v3 = (uint64_t)(v1 + 4);
    do
    {
      v4 = swift_unknownObjectRetain();
      sub_1B1CA7D5C(v4, v3);
      swift_unknownObjectRelease();
      v3 += 32;
      --v2;
    }
    while (v2);
    *(_QWORD *)v0 = v1;
  }
}

uint64_t sub_1B1C9CC24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_1B222A0CC();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v1 = v0[3];
  sub_1B222A078();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B222A078();
  v4 = *v0;
  sub_1B222A078();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = 32;
    do
    {
      v7 = *(_QWORD *)(v4 + v6);
      sub_1B222A0CC();
      sub_1B1B1DD24(v7);
      sub_1B1C96E74(v7);
      sub_1B222A078();
      sub_1B222A0B4();
      sub_1B222A078();
      sub_1B1A05610(v7);
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return sub_1B222A0B4();
}

_QWORD *sub_1B1C9CE08()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  _BYTE *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v2)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202AE0C(0, v2, 0);
    v3 = v16;
    v4 = (_BYTE *)(v1 + 56);
    do
    {
      v5 = *((_QWORD *)v4 - 3);
      v6 = *(v4 - 16);
      v7 = *((_QWORD *)v4 - 1);
      v8 = *v4;
      sub_1B1B1DD24(v5);
      v10 = v16[2];
      v9 = v16[3];
      if (v10 >= v9 >> 1)
        sub_1B202AE0C(v9 > 1, v10 + 1, 1);
      v16[2] = v10 + 1;
      v11 = &v16[8 * v10];
      v11[4] = v5;
      *((_BYTE *)v11 + 40) = v6;
      v11[6] = v7;
      *((_BYTE *)v11 + 56) = v8;
      v4 += 32;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = (_QWORD *)*((_QWORD *)v0 + 3);
    if (v12[2])
    {
      v13 = v12[4];
      v14 = v12[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
    v3 = sub_1B1EF0E94(v13, v14, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2), v0[32], 1, 3);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1B1C9CF70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t result;
  uint64_t v33;
  unsigned int v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _QWORD v43[5];
  uint64_t v44;

  v4 = v3;
  v5 = v2;
  v7 = MEMORY[0x1E0DEE9D8];
  if (a1 != 2)
  {
    v12 = a1;
    if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    {
      v14 = *(_QWORD *)(v2 + 8);
      v13 = *(_QWORD *)(v2 + 16);
      v15 = *(unsigned __int8 *)(v2 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (*(_QWORD *)(*(_QWORD *)(v2 + 24) + 16))
        swift_bridgeObjectRetain();
      v29 = *(_QWORD *)(v2 + 8);
      v30 = *(_QWORD *)(v2 + 16);
      v31 = sub_1B1C9CE08();
      if (v3)
        return swift_bridgeObjectRelease();
      v15 = *(unsigned __int8 *)(v2 + 32);
      v14 = sub_1B1EF1234(v29, v30, (uint64_t)v31, *(_BYTE *)(v5 + 32));
      v13 = v33;
      v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v15)
    {
      if (v15 == 1)
        v16 = type metadata accessor for MetalScriptCodeGen();
      else
        v16 = type metadata accessor for SwiftScriptCodeGen();
    }
    else
    {
      v16 = type metadata accessor for CScriptCodeGen();
    }
    v17 = v16;
    v18 = *(_QWORD **)(v5 + 24);
    if (v18[2])
    {
      v39 = v18[4];
      v41 = v18[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v39 = 0;
      v41 = 0;
    }
    v19 = sub_1B1C9CE08();
    if (!v4)
    {
      v37 = v17;
      v38 = v14;
      v20 = v19[2];
      if (v20)
      {
        v40 = v13;
        v34 = v12;
        v35 = a2;
        v36 = v19;
        v44 = v7;
        sub_1B202A370(0, v20, 0);
        v21 = v7;
        v22 = v36 + 7;
        do
        {
          v23 = *((_QWORD *)v22 - 3);
          v42 = *(v22 - 16);
          v24 = *((_QWORD *)v22 - 1);
          v25 = *v22;
          sub_1B1B1DD24(v23);
          v44 = v21;
          v27 = *(_QWORD *)(v21 + 16);
          v26 = *(_QWORD *)(v21 + 24);
          if (v27 >= v26 >> 1)
          {
            sub_1B202A370(v26 > 1, v27 + 1, 1);
            v21 = v44;
          }
          *(_QWORD *)(v21 + 16) = v27 + 1;
          v28 = v21 + 32 * v27;
          *(_QWORD *)(v28 + 32) = v23;
          *(_BYTE *)(v28 + 40) = v42;
          *(_QWORD *)(v28 + 48) = v24;
          *(_BYTE *)(v28 + 56) = v25;
          v22 += 64;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        a2 = v35;
        v12 = v34;
        v13 = v40;
      }
      else
      {
        swift_bridgeObjectRelease();
        v21 = MEMORY[0x1E0DEE9D8];
      }
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v37 + 128))(v43, v39, v41, v38, v13, 0, 0, v21, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v43[3];
      v9 = v43[4];
      v8 = v43[1];
      v10 = v43[2];
      v7 = v43[0];
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v8 = 0;
  v9 = 0xE200000000000000;
  v10 = 0xE000000000000000;
  v11 = 11565;
LABEL_28:
  result = swift_bridgeObjectRetain();
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v11;
  a2[4] = v9;
  a2[5] = result;
  a2[6] = 0;
  return result;
}

uint64_t sub_1B1C9D260()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1B1C9D26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0xE000000000000000;
  *(_QWORD *)(a2 + 24) = &unk_1E6377870;
  *(_WORD *)(a2 + 32) = 2;
  v2 = a2 + *(int *)(a1 + 36);
  v3 = type metadata accessor for ScriptIndex();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
}

void sub_1B1C9D2D0()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1C9D304()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1C9D380@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A50();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9D3B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1C9D3DC + 4 * byte_1B2288C7F[*v0]))();
}

void sub_1B1C9D3DC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionNames");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1B1C9D404(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionName");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1B1C9D428(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001B23287A0;
}

void sub_1B1C9D448(_QWORD *a1@<X8>)
{
  *a1 = 0x65676175676E616CLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1B1C9D464()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C9D48C + 4 * byte_1B2288C84[*v0]))(1701080931, 0xE400000000000000);
}

uint64_t sub_1B1C9D48C()
{
  return 0x6E6F6974636E7566;
}

unint64_t sub_1B1C9D4C0()
{
  return 0xD000000000000011;
}

uint64_t sub_1B1C9D4DC()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1B1C9D4F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A50();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9D520()
{
  sub_1B1CAEB24();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C9D548()
{
  sub_1B1CAEB24();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C9D570@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  char v39;

  v33 = a2;
  sub_1B19F8E54(0, &qword_1EEF5D2D8, (uint64_t (*)(void))sub_1B1CAEB24, (uint64_t)&type metadata for SimpleScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v31 - v5;
  v7 = type metadata accessor for SimpleScript(0);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0xE000000000000000;
  *((_QWORD *)v10 + 3) = &unk_1E6377770;
  *((_WORD *)v10 + 16) = 2;
  v12 = (uint64_t)&v10[*(int *)(v11 + 36)];
  v13 = type metadata accessor for ScriptIndex();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAEB24();
  v15 = (uint64_t)v36;
  sub_1B222A150();
  if (v15)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    v19 = (uint64_t)v10;
  }
  else
  {
    v32 = v14;
    v36 = (_QWORD *)v12;
    v16 = v34;
    v17 = v35;
    LOBYTE(v37) = 0;
    *((_QWORD *)v10 + 1) = sub_1B22297CC();
    *((_QWORD *)v10 + 2) = v18;
    v39 = 4;
    sub_1B1C23400();
    sub_1B22297B4();
    v21 = v37;
    if (v37 == 3)
      v21 = 2;
    v10[32] = v21;
    v22 = a1[3];
    v23 = a1[4];
    sub_1B19FA070(a1, v22);
    if (sub_1B2067B64(1091, v22, v23))
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1B226D240;
      LOBYTE(v37) = 2;
      v24 = v6;
      v25 = sub_1B22297CC();
      v26 = v16;
      v27 = v31;
      *(_QWORD *)(v31 + 32) = v25;
      *(_QWORD *)(v27 + 40) = v28;
      *((_QWORD *)v10 + 3) = v27;
    }
    else
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v39 = 1;
      sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      v24 = v6;
      sub_1B2229814();
      *((_QWORD *)v10 + 3) = v37;
      v26 = v16;
    }
    v39 = 3;
    sub_1B1A08878();
    sub_1B22297B4();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v17);
    if ((v38 & 1) == 0)
    {
      v30 = v36;
      v29 = v37;
      sub_1B1B1DC9C((uint64_t)v36, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *v30 = v29;
      swift_storeEnumTagMultiPayload();
      v32((uint64_t)v30, 0, 1, v13);
    }
    sub_1B1792810((uint64_t)v10, v33, type metadata accessor for SimpleScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    v19 = (uint64_t)v10;
  }
  return sub_1B1A04628(v19, type metadata accessor for SimpleScript);
}

uint64_t sub_1B1C9D9C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v27 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B1791524(0, qword_1ED4B7E00, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v27 - v10;
  sub_1B19F8E54(0, &qword_1EEF5D2E8, (uint64_t (*)(void))sub_1B1CAEB24, (uint64_t)&type metadata for SimpleScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v27 - v16;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAEB24();
  sub_1B222A180();
  LOBYTE(v32) = 0;
  v18 = v30;
  sub_1B2229910();
  if (!v18)
  {
    v19 = (uint64_t)v11;
    v20 = v29;
    v32 = *(_QWORD *)(v2 + 24);
    v31 = 1;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1B2229958();
    LOBYTE(v32) = *(_BYTE *)(v2 + 32);
    v31 = 4;
    sub_1B1C23584();
    sub_1B2229958();
    v21 = v2 + *(int *)(type metadata accessor for SimpleScript(0) + 36);
    v22 = v19;
    sub_1B1B59664(v21, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v19, 1, v20) == 1)
    {
      sub_1B1B1DC9C(v19, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
    }
    else
    {
      v23 = v19;
      v24 = v27;
      sub_1B1792810(v23, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1B1A04628((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
        sub_1B1A04628(v22, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      }
      else
      {
        v25 = *v24;
        sub_1B1A04628(v22, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
        v32 = v25;
        v31 = 3;
        sub_1B1A0895C();
        sub_1B2229958();
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_1B1C9DD18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1C9D570(a1, a2);
}

uint64_t sub_1B1C9DD2C(_QWORD *a1)
{
  return sub_1B1C9D9C4(a1);
}

uint64_t sub_1B1C9DD40()
{
  sub_1B1CB1134();
  return sub_1B2228A70();
}

uint64_t sub_1B1C9DD9C()
{
  sub_1B1CB1134();
  return sub_1B22289F8();
}

uint64_t sub_1B1C9DDE8@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *(_BYTE *)(a1 + 16) = 1;
  v2 = (int *)type metadata accessor for MetalFunctionScript(0);
  v3 = a1 + v2[6];
  v4 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_BYTE *)(a1 + v2[8]) = 0;
  *(_QWORD *)(a1 + v2[7]) = &unk_1E6398398;
  *(_QWORD *)a1 = 0xD000000000000129;
  *(_QWORD *)(a1 + 8) = 0x80000001B23377C0;
  return result;
}

uint64_t sub_1B1C9DE80()
{
  return sub_1B1C9EAF4(type metadata accessor for MetalFunctionScript);
}

uint64_t sub_1B1C9DE8C@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  if (a1 == 2)
  {
    v4 = 0;
    v5 = 0xE000000000000000;
    result = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v8 = *(_QWORD **)((char *)v2 + *(int *)(type metadata accessor for MetalFunctionScript(0) + 28));
    if (v8[2])
    {
      v9 = v8[4];
      v10 = v8[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
    v11 = sub_1B1B5A32C(v9, v10, *v2, v2[1], 1, 1);
    v13 = v12;
    v4 = v14;
    v5 = v15;
    swift_bridgeObjectRelease();
    if (!a1)
    {
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v4 = 0xD00000000000004CLL;
      v5 = 0x80000001B2337770;
    }
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B226D240;
    *(_QWORD *)(result + 32) = v11;
    *(_QWORD *)(result + 40) = v13;
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = 11565;
  a2[4] = 0xE200000000000000;
  return result;
}

void sub_1B1C9DFF0(char *a1)
{
  sub_1B1F93DCC(*a1);
}

void sub_1B1C9DFFC()
{
  char *v0;

  sub_1B1FB2CE0(*v0);
}

void sub_1B1C9E004()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1C9E038()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1C9E0A8(uint64_t a1)
{
  char *v1;

  sub_1B1DB5680(a1, *v1);
}

uint64_t sub_1B1C9E0B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A50();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9E0E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1C9E10C + 4 * byte_1B2288C8E[*v0]))();
}

void sub_1B1C9E10C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001B23287A0;
}

void sub_1B1C9E12C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionNames");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1B1C9E170()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1C9E198 + 4 * byte_1B2288C93[*v0]))(1701080931, 0xE400000000000000);
}

unint64_t sub_1B1C9E198()
{
  return 0xD000000000000011;
}

uint64_t sub_1B1C9E1B4()
{
  return 0x6E6F6974636E7566;
}

uint64_t sub_1B1C9E1F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9A50();
  *a1 = result;
  return result;
}

uint64_t sub_1B1C9E220()
{
  sub_1B1CAEB68();
  return sub_1B222A1D4();
}

uint64_t sub_1B1C9E248()
{
  sub_1B1CAEB68();
  return sub_1B222A1E0();
}

uint64_t sub_1B1C9E270@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;

  v39 = a2;
  sub_1B19F8E54(0, &qword_1EEF5D2F0, (uint64_t (*)(void))sub_1B1CAEB68, (uint64_t)&type metadata for MetalFunctionScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v37 - v5;
  v7 = type metadata accessor for MetalFunctionScript(0);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[16] = 1;
  v12 = &v10[*(int *)(v11 + 24)];
  v13 = type metadata accessor for ScriptIndex();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v43 = v12;
  v14(v12, 1, 1, v13);
  v15 = a1[3];
  v42 = a1;
  sub_1B19FA070(a1, v15);
  sub_1B1CAEB68();
  v16 = v44;
  sub_1B222A150();
  if (v16)
  {
    v19 = (uint64_t)v43;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
    return sub_1B1B1DC9C(v19, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v37 = v14;
    v38 = v13;
    v44 = v7;
    v18 = v40;
    v17 = v41;
    LOBYTE(v45) = 0;
    v21 = (uint64_t)v10;
    *(_QWORD *)v10 = sub_1B22297CC();
    *((_QWORD *)v10 + 1) = v22;
    LOBYTE(v45) = 4;
    v23 = sub_1B222988C();
    if ((v23 & 1) != 0)
    {
      v47 = 4;
      sub_1B1CAEBAC();
      sub_1B2229814();
      v24 = v42;
      v25 = v6;
      v26 = v17;
      v27 = v43;
      *(_BYTE *)(v21 + *(int *)(v44 + 32)) = v45;
    }
    else
    {
      v25 = v6;
      v26 = v17;
      v27 = v43;
      v10[*(int *)(v44 + 32)] = 0;
      v24 = v42;
    }
    v47 = 1;
    sub_1B1A08878();
    sub_1B22297B4();
    v43 = v25;
    v28 = v26;
    if ((v46 & 1) == 0)
    {
      v29 = v45;
      sub_1B1B1DC9C((uint64_t)v27, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *(_QWORD *)v27 = v29;
      v30 = v38;
      swift_storeEnumTagMultiPayload();
      v37(v27, 0, 1, v30);
    }
    v31 = v24[3];
    v32 = v24[4];
    sub_1B19FA070(v24, v31);
    if (sub_1B2067B64(1091, v31, v32))
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1B226D240;
      LOBYTE(v45) = 3;
      v34 = v43;
      *(_QWORD *)(v33 + 32) = sub_1B22297CC();
      *(_QWORD *)(v33 + 40) = v36;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v34, v28);
      *(_QWORD *)(v21 + *(int *)(v44 + 28)) = v33;
    }
    else
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v47 = 2;
      sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      v35 = v43;
      sub_1B2229814();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v28);
      *(_QWORD *)(v21 + *(int *)(v44 + 28)) = v45;
    }
    sub_1B1792810(v21, v39, type metadata accessor for MetalFunctionScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
    return sub_1B1A04628(v21, type metadata accessor for MetalFunctionScript);
  }
}

uint64_t sub_1B1C9E720(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v2 = type metadata accessor for ScriptIndex();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B1791524(0, qword_1ED4B7E00, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v26 - v9;
  sub_1B19F8E54(0, &qword_1EEF5D308, (uint64_t (*)(void))sub_1B1CAEB68, (uint64_t)&type metadata for MetalFunctionScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (char *)&v26 - v15;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAEB68();
  v17 = v28;
  sub_1B222A180();
  LOBYTE(v31) = 0;
  v18 = v29;
  sub_1B2229910();
  if (v18)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v20 = v12;
  v21 = v13;
  v29 = type metadata accessor for MetalFunctionScript(0);
  sub_1B1B59664(v17 + *(int *)(v29 + 24), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v27) == 1)
  {
    sub_1B1B1DC9C((uint64_t)v10, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    sub_1B1792810((uint64_t)v10, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v25 = *v5;
      sub_1B1A04628((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      v31 = v25;
      v30 = 1;
      sub_1B1A0895C();
      v23 = v12;
      sub_1B2229958();
      v22 = v21;
      goto LABEL_8;
    }
    sub_1B1A04628((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    sub_1B1A04628((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v22 = v13;
  v23 = v20;
LABEL_8:
  v24 = v29;
  v31 = *(_QWORD *)(v17 + *(int *)(v29 + 28));
  v30 = 2;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1B2229958();
  LOBYTE(v31) = *(_BYTE *)(v17 + *(int *)(v24 + 32));
  v30 = 4;
  sub_1B1CAEBF0();
  sub_1B2229958();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v16, v23);
}

uint64_t sub_1B1C9EA94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1C9E270(a1, a2);
}

uint64_t sub_1B1C9EAA8(_QWORD *a1)
{
  return sub_1B1C9E720(a1);
}

uint64_t sub_1B1C9EABC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B1C9EAE8()
{
  return sub_1B1C9EAF4(type metadata accessor for ShaderScript);
}

uint64_t sub_1B1C9EAF4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B222A0CC();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + *(int *)(a1(0) + 28));
  sub_1B222A078();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0B4();
}

uint64_t sub_1B1C9EC44@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  _BYTE *v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v94;
  char v95;
  uint64_t v96;
  _QWORD v97[2];
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  __int128 v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106[3];
  __int128 v107;
  _QWORD v108[5];
  __int128 v109;
  __int128 v110;
  _QWORD v111[6];
  uint64_t v112;

  v3 = *(unint64_t *)((char *)v2 + *(int *)(type metadata accessor for ShaderScript(0) + 28));
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    goto LABEL_18;
  sub_1B1A06460();
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(v3 + 40);
  do
  {
    v6 = *v5;
    v100 = *(v5 - 1);
    v101 = v6;
    v98 = 0x746E656D67617266;
    v99 = 0xE800000000000000;
    v7 = sub_1B2229274();
    if ((v7 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v3 + 16);
      if (!v8)
      {
LABEL_12:
        v12 = *v2;
        v11 = v2[1];
        v100 = *v2;
        v101 = v11;
        swift_bridgeObjectRetain();
        v13 = 0;
        v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v15 = v94;
        goto LABEL_13;
      }
      goto LABEL_8;
    }
    v5 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v3 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_8:
  swift_bridgeObjectRetain();
  v9 = (uint64_t *)(v3 + 40);
  while (1)
  {
    v10 = *v9;
    v100 = *(v9 - 1);
    v101 = v10;
    v98 = 0x786574726576;
    v99 = 0xE600000000000000;
    if ((sub_1B2229274() & 1) != 0)
      break;
    v9 += 2;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        goto LABEL_12;
LABEL_18:
      sub_1B1B63B64();
      swift_allocError();
      *v19 = 0xD00000000000002CLL;
      v19[1] = 0x80000001B2337560;
      return swift_willThrow();
    }
  }
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    goto LABEL_18;
  v11 = v2[1];
  v100 = *v2;
  v12 = v100;
  v101 = v11;
  swift_bridgeObjectRetain_n();
  v17 = sub_1B1EF0E94(0x6D5F786574726576, 0xEB000000006E6961, v100, v11, 1u, 1, 0);
  v15 = v94;
  if (v94)
    return swift_bridgeObjectRelease_n();
  v14 = v17;
  swift_bridgeObjectRelease();
  if (a1 == 2)
  {
    v13 = 1;
    goto LABEL_13;
  }
  v98 = v100;
  v99 = v11;
  v21 = v14[2];
  v91 = v14;
  if (v21)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = &v14[8 * v21];
    do
    {
      if (v22[3])
      {
        v25 = *(v22 - 4);
        sub_1B1B1DD24(v25);
        swift_bridgeObjectRetain();
        sub_1B1B1DD24(v25);
        sub_1B1EE7274(v25);
        v110 = v102;
        if ((*((_QWORD *)&v102 + 1) & 0x2000000000000000) != 0)
          v26 = HIBYTE(*((_QWORD *)&v110 + 1)) & 0xFLL;
        else
          v26 = v110 & 0xFFFFFFFFFFFFLL;
        if (v26)
        {
          swift_bridgeObjectRetain();
          sub_1B1AE7408((uint64_t)&v110);
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B1BA80C0((uint64_t)&v110);
          v24 = *((_QWORD *)&v102 + 1);
          v23 = v102;
        }
        else
        {
          sub_1B1BA80C0((uint64_t)&v110);
          v23 = 0;
          v24 = 0xE000000000000000;
        }
        v97[0] = v23;
        v97[1] = v24;
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B1CAED6C();
        sub_1B22287F4();
        sub_1B1A05610(v25);
        sub_1B1A05610(v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v22 -= 8;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v14[2];
    v12 = v98;
    v11 = v99;
    v100 = v98;
    v101 = v99;
    if (v27)
    {
      swift_bridgeObjectRetain();
      v28 = v14 + 11;
      v29 = v27;
      do
      {
        v71 = *(v28 - 7);
        if (v71 >> 60 == 13)
          __asm { BR              X10 }
        v28 += 8;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v72 = v91 + 11;
      do
      {
        v73 = *(v72 - 7);
        if (v73 >> 60 == 13)
          __asm { BR              X10 }
        v72 += 8;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      v15 = v94;
      v11 = v99;
      v12 = v98;
    }
    else
    {
      v15 = v94;
    }
  }
  else
  {
    v101 = v11;
    v15 = v94;
  }
  swift_bridgeObjectRetain();
  sub_1B1EE7FDC(0x6D5F786574726576, 0xEB000000006E6961, v12, v11, 1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v74 = sub_1B2228974();
  v76 = v75;
  swift_bridgeObjectRelease();
  if (v76 >> 14 == v74 >> 14)
  {
    swift_bridgeObjectRelease();
    v77 = 1;
    goto LABEL_89;
  }
  swift_bridgeObjectRetain();
  v78 = 0;
  do
  {
    v80 = sub_1B22291A8();
    v82 = v81;
    v83 = sub_1B2229178();
    if ((v82 & 0x2000000000000000) != 0)
      v84 = HIBYTE(v82) & 0xF;
    else
      v84 = v80 & 0xFFFFFFFFFFFFLL;
    if (!v84)
    {
      swift_bridgeObjectRelease();
LABEL_79:
      v79 = 0;
      goto LABEL_69;
    }
    if ((v82 & 0x1000000000000000) != 0)
    {
      v85 = sub_1B2229424();
    }
    else
    {
      if ((v82 & 0x2000000000000000) != 0)
      {
        v98 = v80;
        v99 = v82 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v80 & 0x1000000000000000) == 0)
      {
        sub_1B22294FC();
      }
      v85 = sub_1B2229508();
    }
    v86 = v85;
    swift_bridgeObjectRelease();
    if ((v86 - 14) >= 0xFFFFFFFC || (v86 - 8232) < 2)
    {
      v79 = 1;
      goto LABEL_69;
    }
    v79 = 1;
    if (v86 != 133)
      goto LABEL_79;
LABEL_69:
    v78 += v79;
  }
  while (v76 >> 14 != v83 >> 14);
  swift_bridgeObjectRelease_n();
  v77 = v78 + 1;
  v15 = 0;
LABEL_89:
  v98 = 0;
  v99 = 0xE000000000000000;
  sub_1B2229430();
  sub_1B2228890();
  sub_1B2228890();
  sub_1B2228890();
  v97[0] = v77;
  sub_1B2229A0C();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  v14 = v91;
  MEMORY[0x1B5E20418](0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  v13 = 1;
  v12 = v100;
  v11 = v101;
LABEL_13:
  swift_bridgeObjectRetain();
  v16 = sub_1B1EF0E94(0x746E656D67617266, 0xED00006E69616D5FLL, v12, v11, 1u, 1, 1);
  if (v15)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  v20 = (uint64_t)v16;
  swift_bridgeObjectRelease();
  if (a1 != 2)
  {
    v30 = sub_1B1EF1234(v12, v11, v20, 1);
    v32 = v31;
    swift_bridgeObjectRelease();
    v100 = v30;
    v101 = v32;
  }
  v95 = v13;
  v33 = v14[2];
  v34 = MEMORY[0x1E0DEE9D8];
  v96 = v20;
  if (v33)
  {
    v97[0] = MEMORY[0x1E0DEE9D8];
    sub_1B202A370(0, v33, 0);
    v35 = v97[0];
    v36 = v14 + 7;
    do
    {
      v37 = *((_QWORD *)v36 - 3);
      v38 = *(v36 - 16);
      v39 = *((_QWORD *)v36 - 1);
      v40 = *v36;
      sub_1B1B1DD24(v37);
      v97[0] = v35;
      v42 = *(_QWORD *)(v35 + 16);
      v41 = *(_QWORD *)(v35 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1B202A370(v41 > 1, v42 + 1, 1);
        v35 = v97[0];
      }
      *(_QWORD *)(v35 + 16) = v42 + 1;
      v43 = v35 + 32 * v42;
      *(_QWORD *)(v43 + 32) = v37;
      *(_BYTE *)(v43 + 40) = v38;
      *(_QWORD *)(v43 + 48) = v39;
      *(_BYTE *)(v43 + 56) = v40;
      v36 += 64;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v20 = v96;
    v34 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  v98 = v35;
  v44 = *(_QWORD *)(v20 + 16);
  if (v44)
  {
    v112 = v34;
    sub_1B202A370(0, v44, 0);
    v45 = v112;
    v46 = (_BYTE *)(v20 + 56);
    do
    {
      v47 = *((_QWORD *)v46 - 3);
      v48 = *(v46 - 16);
      v49 = *((_QWORD *)v46 - 1);
      v50 = *v46;
      sub_1B1B1DD24(v47);
      v112 = v45;
      v52 = *(_QWORD *)(v45 + 16);
      v51 = *(_QWORD *)(v45 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_1B202A370(v51 > 1, v52 + 1, 1);
        v45 = v112;
      }
      *(_QWORD *)(v45 + 16) = v52 + 1;
      v53 = v45 + 32 * v52;
      *(_QWORD *)(v53 + 32) = v47;
      *(_BYTE *)(v53 + 40) = v48;
      *(_QWORD *)(v53 + 48) = v49;
      *(_BYTE *)(v53 + 56) = v50;
      v46 += 64;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEE9D8];
  }
  v97[0] = v45;
  v54 = sub_1B1CAB0C4((uint64_t)&v98);
  v55 = sub_1B1CAB0C4((uint64_t)v97);
  if (a1 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v56 = 0;
    v57 = 0xE200000000000000;
    v58 = 0xE000000000000000;
    v59 = MEMORY[0x1E0DEE9D8];
    v60 = 11565;
  }
  else
  {
    v61 = v98;
    v62 = v97[0];
    v112 = v98;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63 = swift_bridgeObjectRetain();
    sub_1B19F4E4C(v63);
    v64 = sub_1B1CAB714(v112);
    swift_bridgeObjectRelease();
    v112 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B19F4E4C(v62);
    v65 = sub_1B1CABC44(v112);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B214EC8C(0xD00000000000001BLL, 0x80000001B2330640, v64);
    swift_bridgeObjectRelease_n();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B214EC98(28521, 0xE200000000000000, v65);
    swift_bridgeObjectRelease_n();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    if ((v95 & 1) != 0)
    {
      type metadata accessor for MetalScriptCodeGen();
      v67 = v100;
      v66 = v101;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = a1;
      sub_1B1B5A7BC(0x6D5F786574726576, 0xEB000000006E6961, v67, v66, 0, v54, v61, 0, &v103, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v69 = v104;
      v100 = v104;
      v101 = v105;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v70 = v103;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v70 = MEMORY[0x1E0DEE9D8];
      v69 = v100;
      v68 = a1;
    }
    type metadata accessor for MetalScriptCodeGen();
    sub_1B1B5A7BC(0x746E656D67617266, 0xED00006E69616D5FLL, v69, v101, 0, v55, v62, 1, v106, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88 = v106[1];
    v87 = v106[2];
    v89 = v106[0];
    v112 = v70;
    swift_bridgeObjectRetain();
    sub_1B19F48F0(v89);
    v90 = v112;
    v109 = v107;
    sub_1B1BA80C0((uint64_t)&v109);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v111[0] = v90;
    v111[1] = v88;
    v111[2] = v87;
    v111[3] = 11565;
    v111[4] = 0xE200000000000000;
    sub_1B1B5C280((uint64_t)v111, 1, v68 == 0, v108);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v60 = v108[3];
    v57 = v108[4];
    v56 = v108[1];
    v58 = v108[2];
    v59 = v108[0];
  }
  *a2 = v59;
  a2[1] = v56;
  a2[2] = v58;
  a2[3] = v60;
  a2[4] = v57;
  a2[5] = v54;
  a2[6] = v55;
  return result;
}

uint64_t sub_1B1C9FD8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v30;
  uint64_t v31;
  int v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t result;
  _BYTE v43[4];
  int v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t *v48;

  sub_1B1791524(0, &qword_1ED4B7B70, (uint64_t (*)(uint64_t))sub_1B1CAF124, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1, v2);
  v47 = &v43[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = &v43[-v6];
  sub_1B1791524(0, &qword_1ED4B7B90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF1E50], MEMORY[0x1E0DF1F50]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14, v15);
  v45 = &v43[-v16];
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = &v43[-v19];
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = &v43[-v23];
  v25 = sub_1B1EE7BF4(*v0, v0[1]);
  sub_1B2228350();
  v48 = v0;
  sub_1B222832C();
  v26 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v26(v20, v9);
  v46 = v25;
  sub_1B22282F0();
  v26(v24, v9);
  sub_1B1CAF124(0);
  v28 = v27;
  v29 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
  v44 = v29(v7, 1, v27);
  sub_1B1B1DC9C((uint64_t)v7, &qword_1ED4B7B70, (uint64_t (*)(uint64_t))sub_1B1CAF124);
  sub_1B2228350();
  v30 = v45;
  sub_1B222832C();
  v26(v13, v9);
  v31 = (uint64_t)v47;
  sub_1B22282F0();
  v26(v30, v9);
  v32 = v29((_BYTE *)v31, 1, v28);
  sub_1B1B1DC9C(v31, &qword_1ED4B7B70, (uint64_t (*)(uint64_t))sub_1B1CAF124);
  swift_bridgeObjectRelease();
  if (v44 == 1)
  {
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v33 = sub_1B1C63044(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v35 = v33[2];
    v34 = v33[3];
    if (v35 >= v34 >> 1)
      v33 = sub_1B1C63044(v34 > 1, v35 + 1, 1, v33);
    v33[2] = v35 + 1;
    v36 = (char *)&v33[2 * v35];
    strcpy(v36 + 32, "fragment_main");
    *((_WORD *)v36 + 23) = -4864;
  }
  v37 = v48;
  if (v32 != 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_1B1C63044(0, v33[2] + 1, 1, v33);
    v39 = v33[2];
    v38 = v33[3];
    if (v39 >= v38 >> 1)
      v33 = sub_1B1C63044(v38 > 1, v39 + 1, 1, v33);
    v33[2] = v39 + 1;
    v40 = &v33[2 * v39];
    v40[4] = 0x6D5F786574726576;
    v40[5] = 0xEB000000006E6961;
  }
  v41 = *(int *)(type metadata accessor for ShaderScript(0) + 28);
  result = swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v37 + v41) = (uint64_t)v33;
  return result;
}

uint64_t sub_1B1CA01D4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1B1CA01DC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B1CA0208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(a2 + 16) = 1;
  v4 = a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)(a2 + *(int *)(a1 + 28)) = &unk_1E63775B0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  return result;
}

void sub_1B1CA027C(char *a1)
{
  sub_1B1F8EE3C(*a1);
}

void sub_1B1CA0288()
{
  char *v0;

  sub_1B1FB26A8(*v0);
}

void sub_1B1CA0290()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1CA02C4()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1CA0328(uint64_t a1)
{
  char *v1;

  sub_1B1DB6114(a1, *v1);
}

uint64_t sub_1B1CA0330@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA973C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1CA035C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1CA0384 + 4 * byte_1B2288CD0[*v0]))();
}

void sub_1B1CA0384(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001B23287A0;
}

void sub_1B1CA03A4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionNames");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1B1CA03DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1CA0404 + 4 * byte_1B2288CD4[*v0]))(1701080931, 0xE400000000000000);
}

unint64_t sub_1B1CA0404()
{
  return 0xD000000000000011;
}

uint64_t sub_1B1CA0420()
{
  return 0x6E6F6974636E7566;
}

uint64_t sub_1B1CA0454@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA973C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1CA0478()
{
  sub_1B1CAEC34();
  return sub_1B222A1D4();
}

uint64_t sub_1B1CA04A0()
{
  sub_1B1CAEC34();
  return sub_1B222A1E0();
}

uint64_t sub_1B1CA04C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;

  v34 = a2;
  sub_1B19F8E54(0, &qword_1ED4BAA78, (uint64_t (*)(void))sub_1B1CAEC34, (uint64_t)&type metadata for ShaderScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v31 - v5;
  v7 = type metadata accessor for ShaderScript(0);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[16] = 1;
  v12 = (uint64_t)&v10[*(int *)(v11 + 24)];
  v13 = type metadata accessor for ScriptIndex();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v37 = (_QWORD *)v12;
  v14(v12, 1, 1, v13);
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAEC34();
  v15 = v38;
  sub_1B222A150();
  if (v15)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return sub_1B1B1DC9C((uint64_t)v37, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    v33 = v14;
    v38 = v13;
    v17 = v35;
    v16 = v36;
    LOBYTE(v39) = 0;
    *(_QWORD *)v10 = sub_1B22297CC();
    *((_QWORD *)v10 + 1) = v19;
    v41 = 1;
    sub_1B1A08878();
    sub_1B22297B4();
    v32 = v6;
    v20 = v37;
    if ((v40 & 1) == 0)
    {
      v21 = v39;
      sub_1B1B1DC9C((uint64_t)v37, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
      *v20 = v21;
      v22 = v38;
      swift_storeEnumTagMultiPayload();
      v33((uint64_t)v20, 0, 1, v22);
    }
    v23 = a1[3];
    v24 = a1[4];
    sub_1B19FA070(a1, v23);
    v25 = sub_1B2067B64(1091, v23, v24);
    v26 = v7;
    if (v25)
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1B226D240;
      LOBYTE(v39) = 3;
      v28 = v32;
      *(_QWORD *)(v27 + 32) = sub_1B22297CC();
      *(_QWORD *)(v27 + 40) = v30;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v28, v16);
      *(_QWORD *)&v10[*(int *)(v26 + 28)] = v27;
    }
    else
    {
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v41 = 2;
      sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      v29 = v32;
      sub_1B2229814();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v29, v16);
      *(_QWORD *)&v10[*(int *)(v7 + 28)] = v39;
    }
    sub_1B1792810((uint64_t)v10, v34, type metadata accessor for ShaderScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return sub_1B1A04628((uint64_t)v10, type metadata accessor for ShaderScript);
  }
}

uint64_t sub_1B1CA08DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v2 = type metadata accessor for ScriptIndex();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B1791524(0, qword_1ED4B7E00, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v23 - v9;
  sub_1B19F8E54(0, &qword_1EEF5D318, (uint64_t (*)(void))sub_1B1CAEC34, (uint64_t)&type metadata for ShaderScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (char *)&v23 - v15;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAEC34();
  v17 = v25;
  sub_1B222A180();
  LOBYTE(v28) = 0;
  v18 = v26;
  sub_1B2229910();
  if (v18)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v26 = v12;
  v20 = type metadata accessor for ShaderScript(0);
  sub_1B1B59664(v17 + *(int *)(v20 + 24), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v24) == 1)
  {
    sub_1B1B1DC9C((uint64_t)v10, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  }
  else
  {
    sub_1B1792810((uint64_t)v10, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B1A04628((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      sub_1B1A04628((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    }
    else
    {
      v21 = *v5;
      sub_1B1A04628((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      v28 = v21;
      v27 = 1;
      sub_1B1A0895C();
      sub_1B2229958();
    }
  }
  v28 = *(_QWORD *)(v17 + *(int *)(v20 + 28));
  v27 = 2;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  v22 = v26;
  sub_1B2229958();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v22);
}

uint64_t sub_1B1CA0C00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1CA04C8(a1, a2);
}

uint64_t sub_1B1CA0C14(_QWORD *a1)
{
  return sub_1B1CA08DC(a1);
}

unint64_t sub_1B1CA0C28()
{
  char v0;
  char v1;

  if (qword_1EEF572C8 != -1)
    swift_once();
  swift_bridgeObjectRetain_n();
  v0 = sub_1B2228920();
  swift_bridgeObjectRelease();
  if ((v0 & 1) != 0)
  {
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228848();
      swift_bridgeObjectRelease();
      sub_1B222889C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v1 = sub_1B2228920();
      swift_bridgeObjectRelease();
    }
    while ((v1 & 1) != 0);
  }
  sub_1B2229430();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  return 0xD00000000000001ELL;
}

_QWORD *sub_1B1CA0DC4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B1CB1178(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B1CA0DEC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  sub_1B19FA070(a1, a1[3]);
  sub_1B222A168();
  v6 = v2;
  sub_1B19FC264((uint64_t)v4, v5);
  sub_1B1CB129C(0, &qword_1EEF5D4D0, (uint64_t (*)(uint64_t, ValueMetadata *, ValueMetadata *, unint64_t))MEMORY[0x1E0DEA048]);
  sub_1B1CB1344(&qword_1EEF5D4E8, (uint64_t (*)(void))sub_1B1CB13CC, (uint64_t (*)(void))sub_1B1A0895C, MEMORY[0x1E0DEA0B8]);
  sub_1B2229DF0();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B1CA0EC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v5 = *v2;
  swift_unknownObjectRetain();
  v6 = sub_1B1CA9544(v5, a1, a2);
  swift_bridgeObjectRelease();
  result = swift_unknownObjectRelease();
  *v2 = (uint64_t)v6;
  return result;
}

_QWORD *sub_1B1CA0F34@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_1B1B95524(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t sub_1B1CA0F60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B1CA0F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t result;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5, v6);
  v42 = (char *)&v40 - v7;
  v47 = type metadata accessor for ScriptIndex();
  v8 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47, v9);
  v43 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v45 = (uint64_t)&v40 - v13;
  sub_1B1791524(0, (unint64_t *)&qword_1ED4B7B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], v4);
  MEMORY[0x1E0C80A78](v14, v15);
  v46 = (char *)&v40 - v16;
  v17 = sub_1B222826C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD **)v2;
  v23 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v23)
  {
    v44 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_1B1FFED40(v22);
    swift_getObjectType();
    v24 = (uint64_t)(v22 + 4);
    do
    {
      v25 = swift_unknownObjectRetain();
      sub_1B1CA7D5C(v25, v24);
      swift_unknownObjectRelease();
      v24 += 32;
      --v23;
    }
    while (v23);
    *(_QWORD *)v2 = v22;
    v21 = v44;
  }
  ObjectType = swift_getObjectType();
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  result = v27(ObjectType, a2);
  if ((result & 1) != 0)
  {
    v29 = (char *)(v2 + *(int *)(type metadata accessor for TriggerScript(0) + 40));
    v30 = v47;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v29, 1, v47))
    {
      v31 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v46, 1, 1, v17);
      return sub_1B1B1DC9C(v31, (unint64_t *)&qword_1ED4B7B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
    }
    v41 = v8;
    v44 = v29;
    v32 = (uint64_t)v29;
    v33 = v45;
    sub_1B1792810(v32, v45, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v34 = v33;
    v35 = v43;
    sub_1B1792810(v34, v43, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v46, v35, v17);
      v36 = 0;
    }
    else
    {
      v36 = 1;
      v31 = (uint64_t)v46;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v31, v36, 1, v17);
    sub_1B1A04628(v45, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v31, 1, v17);
    v38 = (uint64_t)v44;
    if (v37 == 1)
      return sub_1B1B1DC9C(v31, (unint64_t *)&qword_1ED4B7B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v21, v31, v17);
    if ((v27(ObjectType, a2) & 1) != 0)
    {
      v39 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, unint64_t, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(a2 + 24))(v21, 0x6E49747069726353, 0xEB00000000786564, sub_1B1FFA40C, 0, ObjectType, a2);
    }
    else
    {
      v39 = (uint64_t)v42;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v42, v21, v17);
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v39, 0, 1, v30);
    return sub_1B1CAF140(v39, v38);
  }
  return result;
}

uint64_t sub_1B1CA1394()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_1B222A0CC();
  swift_bridgeObjectRetain();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  v1 = v0[4];
  sub_1B222A078();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1B222A078();
  v4 = *v0;
  sub_1B222A078();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = 32;
    do
    {
      v7 = *(_QWORD *)(v4 + v6);
      sub_1B222A0CC();
      sub_1B1B1DD24(v7);
      sub_1B1C96E74(v7);
      sub_1B222A078();
      sub_1B222A0B4();
      sub_1B222A078();
      sub_1B1A05610(v7);
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return sub_1B222A0B4();
}

uint64_t sub_1B1CA1578@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[5];

  v3 = v2;
  if (a1 == 2)
  {
    v5 = 0;
    v6 = 0xE200000000000000;
    v7 = 0xE000000000000000;
    v8 = MEMORY[0x1E0DEE9D8];
    v9 = 11565;
  }
  else
  {
    if (*(_BYTE *)(v3 + 24))
    {
      if (*(_BYTE *)(v3 + 24) == 1)
        v11 = type metadata accessor for MetalScriptCodeGen();
      else
        v11 = type metadata accessor for SwiftScriptCodeGen();
    }
    else
    {
      v11 = type metadata accessor for CScriptCodeGen();
    }
    v12 = v11;
    v13 = *(_QWORD **)(v3 + 32);
    if (v13[2])
    {
      v15 = v13[4];
      v14 = v13[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = 0;
      v14 = 0;
    }
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(v12 + 128))(v17, v15, v14, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), 0, 0, *(_QWORD *)v3, a1);
    swift_bridgeObjectRelease();
    v9 = v17[3];
    v6 = v17[4];
    v5 = v17[1];
    v7 = v17[2];
    v8 = v17[0];
  }
  result = swift_bridgeObjectRetain();
  *a2 = v8;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v9;
  a2[4] = v6;
  a2[5] = result;
  a2[6] = 0;
  return result;
}

uint64_t sub_1B1CA169C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;

  v7 = *(_QWORD *)(a1 + 40);
  sub_1B1A1B6FC(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v9 = a2 + *(int *)(v8 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 8) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = v11 + 40;
    do
    {
      v14 = *(void (**)(uint64_t))(v13 - 8);
      v15 = swift_retain();
      v14(v15);
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B1CA17B0(char *a1)
{
  sub_1B1F90060(*a1);
}

void sub_1B1CA17BC()
{
  char *v0;

  sub_1B1DB5D84(0, *v0);
}

void sub_1B1CA17C8()
{
  __asm { BR              X10 }
}

uint64_t sub_1B1CA17FC()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

void sub_1B1CA18B8(uint64_t a1)
{
  char *v1;

  sub_1B1DB5D84(a1, *v1);
}

uint64_t sub_1B1CA18C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9784();
  *a1 = result;
  return result;
}

uint64_t sub_1B1CA18EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B1CA1914 + 4 * byte_1B2288CDF[*v0]))();
}

void sub_1B1CA1914(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "functionNames");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1B1CA193C(_QWORD *a1@<X8>)
{
  *a1 = 0x65676175676E616CLL;
  a1[1] = 0xE800000000000000;
}

void sub_1B1CA1958(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656D61726170;
  a1[1] = 0xEA00000000007372;
}

void sub_1B1CA1978(_QWORD *a1@<X8>)
{
  *a1 = 0x6567617473;
  a1[1] = 0xE500000000000000;
}

void sub_1B1CA1990(_QWORD *a1@<X8>)
{
  *a1 = 0x5668706172477369;
  a1[1] = 0xE900000000000032;
}

void sub_1B1CA19B0(_QWORD *a1@<X8>)
{
  *a1 = 0x5472656767697274;
  a1[1] = 0xEB00000000657079;
}

uint64_t sub_1B1CA19D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1CA19FC + 4 * byte_1B2288CE6[*v0]))(1701080931, 0xE400000000000000);
}

uint64_t sub_1B1CA19FC()
{
  return 0x6E6F6974636E7566;
}

uint64_t sub_1B1CA1A20()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1B1CA1A38()
{
  return 0x6574656D61726170;
}

uint64_t sub_1B1CA1A54()
{
  return 0x6567617473;
}

uint64_t sub_1B1CA1A68()
{
  return 0x5668706172477369;
}

uint64_t sub_1B1CA1A84()
{
  return 0x5472656767697274;
}

uint64_t sub_1B1CA1AA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CA9784();
  *a1 = result;
  return result;
}

uint64_t sub_1B1CA1AC8()
{
  sub_1B1CAEC78();
  return sub_1B222A1D4();
}

uint64_t sub_1B1CA1AF0()
{
  sub_1B1CAEC78();
  return sub_1B222A1E0();
}

void sub_1B1CA1B18(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __CFString *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  __CFString *v30;
  char v31;

  v25 = a2;
  sub_1B19F8E54(0, &qword_1EEF5D320, (uint64_t (*)(void))sub_1B1CAEC78, (uint64_t)&type metadata for TriggerScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v25 - v7;
  v9 = (int *)type metadata accessor for TriggerScript(0);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0xE000000000000000;
  v12[24] = 2;
  *((_QWORD *)v12 + 4) = &unk_1E637DA30;
  *((_WORD *)v12 + 20) = 0;
  v14 = &v12[*(int *)(v13 + 40)];
  v15 = type metadata accessor for ScriptIndex();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v27 = (uint64_t)v14;
  v16(v14, 1, 1, v15);
  v26 = v9[12];
  *(_QWORD *)&v12[v26] = 0;
  v17 = &v12[v9[13]];
  *(_DWORD *)v17 = 0;
  v17[4] = 1;
  v18 = a1[3];
  v28 = a1;
  sub_1B19FA070(a1, v18);
  sub_1B1CAEC78();
  v19 = v29;
  sub_1B222A150();
  if (v19)
  {
    v22 = v27;
    v23 = v26;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B1B1DC9C(v22, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);

  }
  else
  {
    v20 = v25;
    LOBYTE(v30) = 0;
    *((_QWORD *)v12 + 1) = sub_1B22297CC();
    *((_QWORD *)v12 + 2) = v21;
    v31 = 2;
    sub_1B1C23400();
    sub_1B2229814();
    v12[24] = (char)v30;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v31 = 1;
    sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1B2229814();
    *((_QWORD *)v12 + 4) = v30;
    sub_1B1A02758(0, &qword_1EEF5C0A0, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v31 = 3;
    sub_1B1CAEA20(&qword_1EEF5D298, (uint64_t (*)(void))sub_1B1CAE9DC, MEMORY[0x1E0DEAF40]);
    sub_1B2229814();
    *(_QWORD *)v12 = v30;
    LOBYTE(v30) = 5;
    v12[41] = sub_1B2229784() & 1;
    type metadata accessor for VFXTriggerType(0);
    v31 = 6;
    sub_1B1CAF2B0(&qword_1EEF5D330, (uint64_t)&protocol conformance descriptor for VFXTriggerType);
    sub_1B22297B4();
    v24 = v30;
    if (!v30)
      v24 = CFSTR("VFXTriggerTypeKeyDown");
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    *(_QWORD *)&v12[v9[11]] = v24;
    sub_1B1792810((uint64_t)v12, v20, type metadata accessor for TriggerScript);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
    sub_1B1A04628((uint64_t)v12, type metadata accessor for TriggerScript);
  }
}

uint64_t sub_1B1CA1F54(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1B19F8E54(0, &qword_1EEF5D338, (uint64_t (*)(void))sub_1B1CAEC78, (uint64_t)&type metadata for TriggerScript.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CAEC78();
  sub_1B222A180();
  LOBYTE(v14) = 0;
  sub_1B2229910();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v14 = v3[4];
  v13 = 1;
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1B2229958();
  LOBYTE(v14) = *((_BYTE *)v3 + 24);
  v13 = 2;
  sub_1B1C23584();
  sub_1B2229958();
  v14 = *v3;
  v13 = 3;
  sub_1B1A02758(0, &qword_1EEF5C0A0, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B1CAEA20(&qword_1EEF5D2B0, (uint64_t (*)(void))sub_1B1CAEA9C, MEMORY[0x1E0DEAF10]);
  sub_1B2229958();
  LOBYTE(v14) = 5;
  sub_1B222991C();
  type metadata accessor for TriggerScript(0);
  sub_1B222874C();
  LOBYTE(v14) = 6;
  sub_1B2229910();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_bridgeObjectRelease();
}

void sub_1B1CA2210(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B1CA1B18(a1, a2);
}

uint64_t sub_1B1CA2224(_QWORD *a1)
{
  return sub_1B1CA1F54(a1);
}

uint64_t sub_1B1CA2238()
{
  sub_1B1CAF2B0(&qword_1EEF57EB0, (uint64_t)&unk_1B2269B30);
  return sub_1B2228A4C();
}

uint64_t sub_1B1CA22A4()
{
  sub_1B1CAF2B0(&qword_1EEF57EB0, (uint64_t)&unk_1B2269B30);
  return sub_1B22289D4();
}

uint64_t type metadata accessor for ParticleInitScript.System()
{
  return objc_opt_self();
}

uint64_t sub_1B1CA2320(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  void *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    v9 = a3[10];
    __dst = (void *)(a1 + v9);
    v10 = (char *)a2 + v9;
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    v11 = type metadata accessor for ScriptIndex();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(__dst, v10, v15);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(__dst, v10, *(_QWORD *)(v12 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    v16 = a3[11];
    v17 = a3[12];
    v18 = *(void **)((char *)a2 + v16);
    *(_QWORD *)(v7 + v16) = v18;
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)(v7 + v17) = v19;
    v20 = a3[13];
    v21 = v7 + v20;
    v22 = (uint64_t)a2 + v20;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
    v23 = v18;
    v24 = v19;
  }
  return v7;
}

void sub_1B1CA24F4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[10];
  v5 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B222826C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }

}

uint64_t sub_1B1CA25A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v8 = a3[10];
  __dst = (void *)(a1 + v8);
  v9 = (const void *)(a2 + v8);
  *(_QWORD *)(a1 + 32) = v7;
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(__dst, v9, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(__dst, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  v15 = a3[11];
  v16 = a3[12];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = a3[13];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = v17;
  v23 = v18;
  return a1;
}

uint64_t sub_1B1CA2754(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  int v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v6 = a3[10];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_15;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    goto LABEL_15;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_15:
  v19 = a3[11];
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  v23 = a3[12];
  v24 = *(void **)(a1 + v23);
  v25 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = v25;

  v27 = a3[13];
  v28 = a1 + v27;
  v29 = (int *)(a2 + v27);
  v30 = *v29;
  *(_BYTE *)(v28 + 4) = *((_BYTE *)v29 + 4);
  *(_DWORD *)v28 = v30;
  return a1;
}

uint64_t sub_1B1CA29E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v6 = a3[10];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[13];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  return a1;
}

uint64_t sub_1B1CA2B54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v7 = a3[10];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_15;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    goto LABEL_15;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_15:
  v20 = a3[11];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  v22 = a3[12];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v24 = a3[13];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  return a1;
}

uint64_t sub_1B1CA2DB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA2DC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TriggerScript(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1ED4BB2C0);
}

void sub_1B1CA2DEC()
{
  unint64_t v0;

  sub_1B1791524(319, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_1B1CA2EC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ScriptIndex();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v16 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B1CA303C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B1CA3188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_15;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    goto LABEL_15;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_15:
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B1CA33A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1B1CA34DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_15;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    goto LABEL_15;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_15:
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B1CA36E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA36F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ShaderScript(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1ED4B8458);
}

void sub_1B1CA3714()
{
  unint64_t v0;

  sub_1B1791524(319, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_1B1CA37B4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ScriptIndex();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v16 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v17 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B1CA3934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ScriptIndex();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B222826C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CA39CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B1CA3B20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_15;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    goto LABEL_15;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_15:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B1CA3D48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t sub_1B1CA3E88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_15;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    goto LABEL_15;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_15:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B1CA4098()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA40A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1B1CA413C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA414C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MetalFunctionScript(uint64_t a1)
{
  return sub_1B17925E0(a1, qword_1ED4BB258);
}

void sub_1B1CA41EC()
{
  unint64_t v0;

  sub_1B1791524(319, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B1CA4298(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v7 = *(int *)(a3 + 36);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ScriptIndex();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(_QWORD *)(v11 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_1B1CA4414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      v7 = sub_1B222826C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B1CA44B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(int *)(a3 + 36);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1B1CA4600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(int *)(a3 + 36);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B1CA4830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for ScriptIndex();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B1CA495C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B1CA4B64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA4B70(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_1B1CA4C04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1B1CA4C10(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SimpleScript(uint64_t a1)
{
  return sub_1B17925E0(a1, qword_1ED4B8468);
}

void sub_1B1CA4CB0()
{
  sub_1B1CA6C98();
}

_QWORD *sub_1B1CA4CD0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = a2[3];
    v6 = *(int *)(a3 + 32);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = type metadata accessor for ScriptIndex();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(_QWORD *)(v10 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1B1CA4E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      v7 = sub_1B222826C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B1CA4ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for ScriptIndex();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v6, v7, *(_QWORD *)(v9 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1B1CA501C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B1CA5234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for ScriptIndex();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B1CA5360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 32);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B1CA5560()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA556C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1B1CA5600()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA560C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for EmitterScript(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1ED4B8568);
}

void sub_1B1CA56AC()
{
  unint64_t v0;

  sub_1B1791524(319, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_1B1CA5758(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    v6 = *(int *)(a3 + 36);
    v7 = (char *)a2 + v6;
    v8 = (void *)(a1 + v6);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = type metadata accessor for ScriptIndex();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v7, 1, v9))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v7, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v7, *(_QWORD *)(v10 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1B1CA58E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      v7 = sub_1B222826C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B1CA5980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 36);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = type metadata accessor for ScriptIndex();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v6, 1, v8))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v6, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v6, *(_QWORD *)(v9 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1B1CA5ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(int *)(a3 + 36);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B1CA5D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for ScriptIndex();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B1CA5E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B1CA6050()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA605C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1B1CA60F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA60FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ParticleUpdateScript(uint64_t a1)
{
  return sub_1B17925E0(a1, qword_1ED4B9610);
}

void sub_1B1CA619C()
{
  unint64_t v0;

  sub_1B1791524(319, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_1B1CA624C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v5;
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(int *)(a3 + 36);
    v8 = (char *)a2 + v7;
    v9 = (void *)(a1 + v7);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v10 = type metadata accessor for ScriptIndex();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v8, 1, v10))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v8, v15);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v8, *(_QWORD *)(v11 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1B1CA63CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      v7 = sub_1B222826C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B1CA646C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(int *)(a3 + 36);
  v7 = (const void *)(a2 + v6);
  v8 = (void *)(a1 + v6);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v7, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v7, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1B1CA65C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(int *)(a3 + 36);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B1CA67F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for ScriptIndex();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B1CA691C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B1CA6B2C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA6B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1B1CA6BCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA6BD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ParticleInitScript(uint64_t a1)
{
  return sub_1B17925E0(a1, qword_1ED4B9338);
}

void sub_1B1CA6C78()
{
  sub_1B1CA6C98();
}

void sub_1B1CA6C98()
{
  unint64_t v0;

  sub_1B1791524(319, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t *initializeBufferWithCopyOfBuffer for ScriptLocation(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1B1B1DD24(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ScriptLocation(unint64_t *a1)
{
  return sub_1B1A05610(*a1);
}

unint64_t *assignWithCopy for ScriptLocation(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1B1B1DD24(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1B1A05610(v4);
  return a1;
}

unint64_t *assignWithTake for ScriptLocation(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1B1A05610(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptLocation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x71 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 113);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x70)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ScriptLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x70)
  {
    *(_QWORD *)result = a2 - 113;
    if (a3 >= 0x71)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x71)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B1CA6E78(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if ((_DWORD)v1 == 15)
    return (*a1 >> 3) + 15;
  else
    return v1;
}

_QWORD *sub_1B1CA6E94(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1B1CA6EA4(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 0xF)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 15);
    v3 = 0xF000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation()
{
  return &type metadata for ScriptLocation;
}

ValueMetadata *type metadata accessor for ScriptLocation.TextureType()
{
  return &type metadata for ScriptLocation.TextureType;
}

uint64_t initializeWithCopy for ScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a2;
  sub_1B1B1DD24(*(_QWORD *)a2);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for ScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  sub_1B1B1DD24(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_1B1A05610(v5);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t assignWithTake for ScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1B1A05610(v4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptParameter(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x71 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 113);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x70)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ScriptParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x70)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 113;
    if (a3 >= 0x71)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x71)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptParameter()
{
  return &type metadata for ScriptParameter;
}

_QWORD *assignWithCopy for ParticleScriptRuntime(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ParticleScriptRuntime()
{
  return &type metadata for ParticleScriptRuntime;
}

uint64_t sub_1B1CA711C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    v7 = *(int *)(a3 + 40);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    v10 = type metadata accessor for ScriptIndex();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = sub_1B222826C();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(_QWORD *)(v11 + 64));
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_1B1CA72A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for ScriptIndex();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 1)
    {
      v7 = sub_1B222826C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B1CA7340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 40);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v8 = type metadata accessor for ScriptIndex();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v6, 1, v8))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v6, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v6, *(_QWORD *)(v9 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1B1CA749C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v6 = *(int *)(a3 + 40);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for ScriptIndex();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v10 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v14);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
LABEL_7:
    memcpy(v7, v8, v16);
    return a1;
  }
  if (v13)
  {
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1B1CA76D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(int *)(a3 + 40);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for ScriptIndex();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1B222826C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B1CA7808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v7 = *(int *)(a3 + 40);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for ScriptIndex();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        return a1;
      sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_1B222826C();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v17 = *(_QWORD *)(v11 + 64);
      goto LABEL_7;
    }
    sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_7:
    memcpy(v8, v9, v17);
    return a1;
  }
  if (v14)
  {
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B222826C();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B1CA7A20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CA7A30(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t sub_1B1CA7AC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1B1CA7AD4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for GraphScript(uint64_t a1)
{
  return sub_1B17925E0(a1, (uint64_t *)&unk_1ED4B7D70);
}

void sub_1B1CA7B74()
{
  unint64_t v0;

  sub_1B1791524(319, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1B1CA7C34()
{
  unint64_t result;

  result = qword_1EEF5D178;
  if (!qword_1EEF5D178)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289184, &type metadata for ScriptLocation.TextureType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D178);
  }
  return result;
}

unint64_t sub_1B1CA7C7C()
{
  unint64_t result;

  result = qword_1EEF5D180;
  if (!qword_1EEF5D180)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22891AC, &type metadata for ScriptLocation);
    atomic_store(result, (unint64_t *)&qword_1EEF5D180);
  }
  return result;
}

void sub_1B1CA7CC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)(a2 + 32);
  v3 = v2[2];
  if (v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1B1FFED40(v2);
    v5 = (uint64_t)(v2 + 4);
    do
    {
      v6 = swift_unknownObjectRetain();
      sub_1B1CA7D5C(v6, v5);
      swift_unknownObjectRelease();
      v5 += 32;
      --v3;
    }
    while (v3);
    *(_QWORD *)(a2 + 32) = v2;
  }
}

unint64_t sub_1B1CA7D5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;

  v3 = *(_QWORD *)a2;
  v4 = swift_unknownObjectRetain();
  sub_1B1CA7DD0(v4, v3);
  v6 = v5;
  swift_unknownObjectRelease();
  result = sub_1B1A05610(v3);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  return result;
}

void sub_1B1CA7DD0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1CA7E1C()
{
  uint64_t v0;

  swift_retain();
  return v0;
}

void sub_1B1CA7E48()
{
  JUMPOUT(0x1B1CA7E20);
}

void sub_1B1CA7E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int16 v13;
  uint64_t v14;
  __int128 v15;
  va_list va;

  va_start(va, a6);
  v10 = *(_QWORD *)(v8 + 48);
  v9 = *(_QWORD *)(v8 + 56);
  v11 = *(_QWORD *)(v8 + 80);
  v12 = *(_BYTE *)(v8 + 88);
  v13 = *(_WORD *)(v8 + 90);
  v15 = *(_OWORD *)(v8 + 64);
  sub_1B1A00060((v8 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)va);
  v14 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B1F02EAC((uint64_t)va, v7, v6, v14 + 16);
  sub_1B19FC350((uint64_t)va);
  *(_QWORD *)(v14 + 48) = v10;
  *(_QWORD *)(v14 + 56) = v9;
  *(_OWORD *)(v14 + 64) = v15;
  *(_QWORD *)(v14 + 80) = v11;
  *(_BYTE *)(v14 + 88) = v12;
  *(_WORD *)(v14 + 90) = v13;
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA7EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a6);
  sub_1B1A00060((v8 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)va);
  v9 = swift_allocObject();
  sub_1B1F02EAC((uint64_t)va, v7, v6, v9 + 16);
  sub_1B19FC350((uint64_t)va);
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA7F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  __int16 v10;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 56);
  v7 = *(_BYTE *)(v2 + 64);
  v10 = *(_WORD *)(v2 + 66);
  v8 = swift_allocObject();
  swift_bridgeObjectRetain();
  v9 = *(_OWORD *)(v2 + 40);
  swift_retain();
  sub_1B1F02EF0(v3, 0, v1, v0);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v5;
  *(_OWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 56) = v6;
  *(_BYTE *)(v8 + 64) = v7;
  *(_WORD *)(v8 + 66) = v10;
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA7FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  _WORD v10[8];
  char v11;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 56);
  v7 = *(_BYTE *)(v2 + 64);
  v10[0] = *(_WORD *)(v2 + 66);
  v11 = *(_BYTE *)(v2 + 68);
  v8 = swift_allocObject();
  swift_bridgeObjectRetain();
  v9 = *(_OWORD *)(v2 + 40);
  swift_retain();
  sub_1B1F02EF0(v3, 0, v1, v0);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v5;
  *(_OWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 56) = v6;
  *(_BYTE *)(v8 + 64) = v7;
  *(_WORD *)(v8 + 66) = v10[0];
  *(_BYTE *)(v8 + 68) = v11;
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA8050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_WORD *)(v2 + 33);
  v6 = *(_BYTE *)(v2 + 35);
  v7 = *(_BYTE *)(v2 + 32);
  v8 = swift_allocObject();
  v9 = swift_unknownObjectRetain();
  v10 = sub_1B1CA81BC(v9, v3, v4, v7, v1, v0);
  v12 = v11;
  v14 = v13;
  swift_unknownObjectRelease();
  *(_QWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 24) = v12;
  *(_BYTE *)(v8 + 32) = v14;
  *(_WORD *)(v8 + 33) = v5;
  *(_BYTE *)(v8 + 35) = v6;
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA80C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_BYTE *)(v2 + 32);
  v6 = swift_allocObject();
  v7 = swift_unknownObjectRetain();
  v8 = sub_1B1CA81BC(v7, v3, v4, v5, v1, v0);
  v10 = v9;
  LOBYTE(v3) = v11;
  swift_unknownObjectRelease();
  *(_QWORD *)(v6 + 16) = v8;
  *(_QWORD *)(v6 + 24) = v10;
  *(_BYTE *)(v6 + 32) = v3;
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA8128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = swift_allocObject();
  sub_1B1F02EF0(v3, 0, v1, v0);
  *(_QWORD *)(v4 + 16) = v3;
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA8168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = swift_allocObject();
  sub_1B1F02EF0(v3, 0, v1, v0);
  *(_QWORD *)(v4 + 16) = v3;
  JUMPOUT(0x1B1CA7E24);
}

void sub_1B1CA81A4()
{
  JUMPOUT(0x1B1CA7E24);
}

uint64_t sub_1B1CA81BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = a2;
  if (a4)
  {
    if (a4 == 1)
      swift_bridgeObjectRetain();
  }
  else
  {
    sub_1B1F02EF0(a2, 0, a5, a6);
    return a2;
  }
  return v6;
}

uint64_t sub_1B1CA8234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, __n128);
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8, v9);
  v44 = (char *)&v42 - v10;
  v11 = type metadata accessor for ScriptIndex();
  v12 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  v49 = v12;
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v46 = (uint64_t)&v42 - v18;
  sub_1B1791524(0, (unint64_t *)&qword_1ED4B7B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], v7);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v42 - v21;
  v47 = sub_1B222826C();
  v23 = *(_QWORD *)(v47 - 8);
  v25.n128_f64[0] = MEMORY[0x1E0C80A78](v47, v24);
  v45 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD **)a2;
  v28 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (v28)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_1B1FFED40(v27);
    v29 = (uint64_t)(v27 + 4);
    do
    {
      v30 = swift_unknownObjectRetain();
      sub_1B1CA7D5C(v30, v29);
      swift_unknownObjectRelease();
      v29 += 32;
      --v28;
    }
    while (v28);
    *(_QWORD *)a2 = v27;
  }
  v31 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 32);
  result = v31(a3, a4, v25);
  if ((result & 1) != 0)
  {
    v33 = a2 + *(int *)(type metadata accessor for GraphScript(0) + 40);
    v34 = v48;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v33, 1, v48))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, 1, 1, v47);
      return sub_1B1B1DC9C((uint64_t)v22, (unint64_t *)&qword_1ED4B7B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
    }
    v43 = v33;
    v35 = v33;
    v36 = v46;
    sub_1B1792810(v35, v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    sub_1B1792810(v36, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = v15;
      v38 = v47;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v22, v37, v47);
      v39 = 0;
    }
    else
    {
      v39 = 1;
      v38 = v47;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, v39, 1, v38);
    sub_1B1A04628(v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v38) == 1)
      return sub_1B1B1DC9C((uint64_t)v22, (unint64_t *)&qword_1ED4B7B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v40 = v45;
    (*(void (**)(void))(v23 + 32))();
    if ((((uint64_t (*)(uint64_t, uint64_t))v31)(a3, a4) & 1) != 0)
    {
      v41 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, unint64_t, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(a4 + 24))(v40, 0x6E49747069726353, 0xEB00000000786564, sub_1B1FFA40C, 0, a3, a4);
    }
    else
    {
      v41 = (uint64_t)v44;
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v44, v40, v38);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v40, v38);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v41, 0, 1, v34);
    return sub_1B1CAF140(v41, v43);
  }
  return result;
}

unint64_t sub_1B1CA85FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_BYTE *)(a2 + 24) = v5;
  return sub_1B1B1DD24(v2);
}

BOOL sub_1B1CA8624(unsigned __int8 a1, unsigned __int8 a2)
{
  _BOOL8 result;

  switch(a1)
  {
    case 5u:
      if (a2 != 5)
        goto LABEL_40;
      result = 1;
      break;
    case 6u:
      if (a2 != 6)
        goto LABEL_40;
      result = 1;
      break;
    case 7u:
      if (a2 != 7)
        goto LABEL_40;
      result = 1;
      break;
    case 8u:
      if (a2 != 8)
        goto LABEL_40;
      result = 1;
      break;
    case 9u:
      if (a2 != 9)
        goto LABEL_40;
      result = 1;
      break;
    case 0xAu:
      if (a2 != 10)
        goto LABEL_40;
      result = 1;
      break;
    case 0xBu:
      if (a2 != 11)
        goto LABEL_40;
      result = 1;
      break;
    case 0xCu:
      if (a2 != 12)
        goto LABEL_40;
      result = 1;
      break;
    case 0xDu:
      if (a2 != 13)
        goto LABEL_40;
      result = 1;
      break;
    case 0xEu:
      if (a2 != 14)
        goto LABEL_40;
      result = 1;
      break;
    case 0xFu:
      if (a2 != 15)
        goto LABEL_40;
      result = 1;
      break;
    case 0x10u:
      if (a2 != 16)
        goto LABEL_40;
      result = 1;
      break;
    case 0x11u:
      if (a2 != 17)
        goto LABEL_40;
      result = 1;
      break;
    case 0x12u:
      if (a2 != 18)
        goto LABEL_40;
      result = 1;
      break;
    case 0x13u:
      if (a2 != 19)
        goto LABEL_40;
      result = 1;
      break;
    case 0x14u:
      if (a2 != 20)
        goto LABEL_40;
      result = 1;
      break;
    case 0x15u:
      if (a2 != 21)
        goto LABEL_40;
      result = 1;
      break;
    case 0x16u:
      if (a2 != 22)
        goto LABEL_40;
      result = 1;
      break;
    default:
      if (a2 - 5 < 0x12)
LABEL_40:
        result = 0;
      else
        result = a1 == a2;
      break;
  }
  return result;
}

void sub_1B1CA8790(__int128 *a1)
{
  _QWORD v1[4];

  sub_1B1CAECBC(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

BOOL sub_1B1CA87D8()
{
  __int128 *v0;
  unsigned __int8 v1;
  _BYTE v4[192];

  sub_1B1CAECBC(v0, (uint64_t)v4);
  return !v4[32] && v4[0] == v1;
}

void sub_1B1CA8B88(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1CA8BC8(uint64_t a1)
{
  unint64_t v1;
  char v2;

  if (v1 >> 60)
    v2 = 0;
  else
    v2 = *(_BYTE *)(a1 + 16) ^ *(_BYTE *)(v1 + 16) ^ 1;
  return v2 & 1;
}

uint64_t sub_1B1CA93A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
      return a1 == a4;
    return 0;
  }
  if (a3 != 1)
    return a6 == 2 && !(a5 | a4);
  if (a6 != 1)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_1B2229D24();
}

uint64_t sub_1B1CA9420(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t result;
  char v9;
  char v10;
  char v11;

  switch(a2)
  {
    case 0:
      if (a5)
        goto LABEL_21;
      goto LABEL_19;
    case 1:
      if (a5 != 1)
        goto LABEL_21;
      goto LABEL_19;
    case 2:
      if (a5 != 2)
        goto LABEL_21;
      goto LABEL_19;
    case 3:
      if (a5 != 3)
        goto LABEL_21;
      goto LABEL_19;
    case 4:
      if (a5 != 4)
        goto LABEL_21;
      goto LABEL_19;
    case 5:
      if (a5 != 5)
        goto LABEL_21;
      goto LABEL_19;
    case 6:
      if (a5 != 6)
        goto LABEL_21;
      goto LABEL_19;
    case 7:
      if (a5 != 7)
        goto LABEL_21;
      goto LABEL_19;
    case 8:
      if (a5 != 8)
        goto LABEL_21;
LABEL_19:
      result = 1;
      break;
    default:
      if (a5 >= 9)
      {
        if (a1 == a4 && a2 == a5 || (v9 = sub_1B2229D24(), result = 0, (v9 & 1) != 0))
        {
          sub_1B1B632F0(a3);
          sub_1B1B632F0(a6);
          sub_1B1D76C18(a3);
          v11 = v10;
          sub_1B1B28D2C(a6);
          sub_1B1B28D2C(a3);
          result = v11 & 1;
        }
      }
      else
      {
LABEL_21:
        result = 0;
      }
      break;
  }
  return result;
}

_QWORD *sub_1B1CA9544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;

  sub_1B1CB129C(0, (unint64_t *)&qword_1EEF5B898, (uint64_t (*)(uint64_t, ValueMetadata *, ValueMetadata *, unint64_t))MEMORY[0x1E0DECD58]);
  v4 = sub_1B22296B8();
  v5 = (_QWORD *)v4;
  v6 = 0;
  v25 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v13 = v4 + 64;
  v23 = v8;
  v24 = (unint64_t)(v10 + 63) >> 6;
  v22 = v8 + 40;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v6 << 6);
      goto LABEL_5;
    }
    v19 = v6 + 1;
    if (v6 + 1 >= v24)
      return v5;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    if (!v20)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v24)
        return v5;
      v20 = *(_QWORD *)(v23 + 8 * v19);
      if (!v20)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v24)
          return v5;
        v20 = *(_QWORD *)(v23 + 8 * v19);
        if (!v20)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v24)
            return v5;
          v20 = *(_QWORD *)(v23 + 8 * v19);
          if (!v20)
            break;
        }
      }
    }
LABEL_18:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v19 << 6);
    v6 = v19;
LABEL_5:
    v16 = *(_BYTE *)(*(_QWORD *)(v25 + 48) + v15);
    v17 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v15);
    ObjectType = swift_getObjectType();
    sub_1B1F02EF0(v17, 1, ObjectType, a3);
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(v5[6] + v15) = v16;
    *(_QWORD *)(v5[7] + 8 * v15) = v17;
    ++v5[2];
  }
  while (v24 - 5 != v6)
  {
    v20 = *(_QWORD *)(v22 + 8 * v6++);
    if (v20)
    {
      v19 = v6 + 4;
      goto LABEL_18;
    }
  }
  return v5;
}

uint64_t sub_1B1CA973C()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1B1CA9784()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1B1CA97CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746365726964 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E6572727563 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1B1CA9908(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737365636361 && a2 == 0xE600000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B23379F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1B1CA9A50()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1B1CA9A94()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1B1CA9AD8(unsigned __int16 **a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double v22;
  _QWORD *v23;
  int v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  unsigned int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unsigned __int16 **v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t result;
  _BYTE v56[12];
  int v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  void (*v61)(uint64_t *);
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int16 **v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD v90[8];
  uint64_t v91;
  _OWORD v92[2];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _BYTE v99[40];
  _BYTE v100[40];
  _QWORD v101[8];
  _BYTE v102[24];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v62 = a3;
  v72 = a1;
  v106 = *MEMORY[0x1E0C80C00];
  sub_1B1A1B6FC(0, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v11 = v10;
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = &v56[-v13];
  sub_1B1B1F2FC(a5, (uint64_t)&v56[-v13], &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
  v15 = *(_QWORD *)&v14[v11[10]];
  if (v15)
  {
    v61 = *(void (**)(uint64_t *))(v15 + 32);
    sub_1B1B1DCE0((uint64_t)v14, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
    v16 = v11[14];
    v17 = (uint64_t *)(a5 + v11[15]);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(a5 + v16);
    v21 = *(_BYTE *)(a5 + v16 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1B1E6D158(v18, v19, v20, v21, a4, 0, (uint64_t)v90);
    v23 = (_QWORD *)thread_worker_index(v22);
    v24 = sub_1B1E691B8(*(_QWORD *)(*(_QWORD *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v23 + 8));
    v25 = v24;
    if ((v24 & 1) != 0)
    {
      v57 = v24;
      v58 = a5;
      sub_1B1A18378(a2, (uint64_t)v92, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
      if (*(_QWORD *)&v92[0])
      {
        v71 = v98;
        if (v98 >= 1)
        {
          v70 = v95;
          if (v95)
          {
            v26 = 0;
            v27 = 0;
            v60 = HIDWORD(v62);
            v28 = v97;
            v69 = v96;
            v29 = v97[4];
            v30 = *(unsigned __int8 *)(v96 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            v79[0] = v92[0];
            v79[1] = v92[1];
            v80 = v93;
            v65 = v97 + 6;
            v66 = v94;
            v63 = v102;
            v64 = v97 + 8;
            v59 = &v91;
            v67 = v30;
            v73 = v97;
            v68 = v29;
            do
            {
              v31 = (unsigned int *)(v66 + 48 * v26);
              v32 = *v31;
              v33 = v31[1];
              v34 = v31[2];
              v35 = *((_QWORD *)v31 + 2);
              v75 = *((_QWORD *)v31 + 3);
              v76 = v35;
              v36 = *((_QWORD *)v31 + 5);
              v74 = *((_QWORD *)v31 + 4);
              v77 = v26;
              v78 = v27;
              if (v30)
              {
                v37 = *(os_unfair_lock_s **)(v36 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v37);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v36 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v29);
              sub_1B1A18378((uint64_t)v65, (uint64_t)v99, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
              v38 = v28[4];
              v39 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v36 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v28 = v73;
              v28[6] = ecs_stack_allocator_allocate(v38, 48 * v39, 8);
              v28[7] = v39;
              v40 = v64;
              v64[1] = 0;
              v40[2] = 0;
              *v40 = 0;
              swift_release();
              v41 = v69;
              v101[0] = v69;
              v101[1] = v36;
              v101[2] = v28;
              v101[3] = v34;
              v101[4] = (v33 - v32 + v34);
              v42 = v72;
              v101[5] = v71;
              v101[6] = v32;
              v101[7] = v33;
              v43 = v63;
              *v63 = 0;
              v43[1] = 0;
              v102[16] = 1;
              v103 = v76;
              v104 = v75;
              v105 = v74;
              if ((sub_1B1E69784(v42, (uint64_t)v101) & 1) != 0)
              {
                v44 = v28[4];
                v45 = v90[0];
                v46 = sub_1B1B7F538(MEMORY[0x1E0DEE9D8]);
                v81 = v41;
                v82 = v62;
                v83 = v60;
                v84 = v44;
                v85 = v32;
                v86 = v33;
                v87 = 0;
                v88 = v45;
                v89 = v46;
                v28 = v73;
                v61(&v81);
                swift_bridgeObjectRelease();
                v47 = v90[1];
                v48 = v90[5];
                v49 = v90[7];
                sub_1B1A18378((uint64_t)v59, (uint64_t)v100, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v27 = v78;
                sub_1B1F05D48(v28, v72, (uint64_t)v100);
                v50 = *(_QWORD *)(v49 + 16);
                if (v50)
                {
                  v76 = v48;
                  v78 = v47;
                  swift_bridgeObjectRetain();
                  v51 = v49 + 40;
                  v52 = v77;
                  do
                  {
                    v53 = *(void (**)(uint64_t))(v51 - 8);
                    v54 = swift_retain();
                    v53(v54);
                    swift_release();
                    v51 += 16;
                    --v50;
                  }
                  while (v50);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  v28 = v73;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v52 = v77;
                }
              }
              else
              {
                v52 = v77;
                v27 = v78;
              }
              sub_1B1F05D48(v28, (unsigned __int16 **)v79, (uint64_t)v99);
              sub_1B1F03804((char *)v36);
              v29 = v68;
              ecs_stack_allocator_pop_snapshot(v68);
              v30 = v67;
              if (v67)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 376));
              }
              swift_release();
              v26 = v52 + 1;
            }
            while (v26 != v70);
          }
        }
      }
      sub_1B1CA169C((uint64_t)v90, v58, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
      v25 = v57;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v25 & 1;
  }
  else
  {
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1CAA0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(_QWORD *);
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t (*v22)(double);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t result;
  _QWORD v29[5];
  char v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD v33[14];

  v33[13] = *MEMORY[0x1E0C80C00];
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v29 - v11;
  sub_1B1B1F2FC(a1, (uint64_t)v29 - v11, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418);
  v13 = *(_QWORD *)&v12[v9[10]];
  if (v13)
  {
    v14 = *(void (**)(_QWORD *))(v13 + 32);
    sub_1B1B1DCE0((uint64_t)v12, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418);
    v15 = v9[14];
    v16 = (uint64_t *)(a1 + v9[15]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(a1 + v15);
    v20 = *(_BYTE *)(a1 + v15 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1B1E6D158(v17, v18, v19, v20, a4, 0, (uint64_t)v33);
    v22 = thread_worker_index;
    v23 = (_QWORD *)thread_worker_index(v21);
    v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if ((sub_1B1E691B8(*(_QWORD *)(v24 + 8 * *v23 + 8)) & 1) != 0)
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v24
                                  + 8
                                  * *(_QWORD *)((uint64_t (*)(uint64_t (**)(double)))v22)(&thread_worker_index)
                                  + 8)
                      + 32);
      v26 = v33[0];
      v27 = sub_1B1B7F538(MEMORY[0x1E0DEE9D8]);
      v29[0] = a2;
      v29[1] = a3;
      v29[3] = 0;
      v29[4] = 0;
      v29[2] = v25;
      v30 = 1;
      v31 = v26;
      v32 = v27;
      v14(v29);
      swift_bridgeObjectRelease();
      sub_1B1CA169C((uint64_t)v33, a1, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1CAA37C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  void (*v26)(uint64_t *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t (*v33)(double);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t *);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t result;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD v58[15];

  v47 = a4;
  v46 = a3;
  v48 = a2;
  v58[13] = *MEMORY[0x1E0C80C00];
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v6 = v5;
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for GraphScript(0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v46 - v20;
  v22 = v6[13];
  v23 = *(unsigned __int8 *)(a1 + v22);
  sub_1B1792810(a1, (uint64_t)&v46 - v20, type metadata accessor for GraphScript);
  v24 = v21[40];
  sub_1B1A04628((uint64_t)v21, type metadata accessor for GraphScript);
  if (v23 != 1)
    goto LABEL_4;
  if (v24 == 1)
    return 0;
  if (!v24)
LABEL_4:
    *(_BYTE *)(a1 + v22) = 1;
  sub_1B1B1F2FC(a1, (uint64_t)v13, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
  v25 = *(_QWORD *)&v13[v6[10]];
  if (v25)
  {
    v26 = *(void (**)(uint64_t *))(v25 + 32);
    sub_1B1B1DCE0((uint64_t)v13, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
    sub_1B1B1F2FC(a1, (uint64_t)v9, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
    sub_1B1792810((uint64_t)v9, (uint64_t)v17, type metadata accessor for GraphScript);
    sub_1B1B1DCE0((uint64_t)v9, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
    v27 = *v17;
    swift_bridgeObjectRetain();
    sub_1B1A04628((uint64_t)v17, type metadata accessor for GraphScript);
    v28 = v6[14];
    v29 = *(_QWORD *)(a1 + v6[15] + 8);
    v30 = *(_QWORD *)(a1 + v28);
    v31 = *(_BYTE *)(a1 + v28 + 8);
    swift_bridgeObjectRetain();
    v32 = sub_1B1E6D158(v27, v29, v30, v31, v47, 0, (uint64_t)v58);
    v33 = thread_worker_index;
    v34 = (_QWORD *)thread_worker_index(v32);
    v35 = v48;
    v36 = *(_QWORD *)(v48 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if ((sub_1B1E691B8(*(_QWORD *)(v36 + 8 * *v34 + 8)) & 1) != 0)
    {
      v37 = v46;
      v38 = HIDWORD(v46);
      v39 = *(_QWORD *)(v36
                      + 8
                      * *(_QWORD *)((uint64_t (*)(uint64_t (**)(double)))v33)(&thread_worker_index)
                      + 8);
      v40 = v26;
      v41 = *(_QWORD *)(v39 + 32);
      v42 = v58[0];
      v43 = sub_1B1B7F538(MEMORY[0x1E0DEE9D8]);
      v49 = v35;
      v50 = v37;
      v51 = v38;
      v53 = 0;
      v54 = 0;
      v52 = v41;
      v44 = 1;
      v55 = 1;
      v56 = v42;
      v57 = v43;
      v40(&v49);
      swift_bridgeObjectRelease();
      sub_1B1CA169C((uint64_t)v58, a1, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v44;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1CAA78C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  void (*v26)(uint64_t *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t (*v33)(double);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t *);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t result;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD v58[15];

  v47 = a4;
  v46 = a3;
  v48 = a2;
  v58[13] = *MEMORY[0x1E0C80C00];
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v6 = v5;
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for SimpleScript(0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v46 - v20;
  v22 = v6[13];
  v23 = *(unsigned __int8 *)(a1 + v22);
  sub_1B1792810(a1, (uint64_t)&v46 - v20, type metadata accessor for SimpleScript);
  v24 = v21[33];
  sub_1B1A04628((uint64_t)v21, type metadata accessor for SimpleScript);
  if (v23 != 1)
    goto LABEL_4;
  if (v24 == 1)
    return 0;
  if (!v24)
LABEL_4:
    *(_BYTE *)(a1 + v22) = 1;
  sub_1B1B1F2FC(a1, (uint64_t)v13, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8);
  v25 = *(_QWORD *)&v13[v6[10]];
  if (v25)
  {
    v26 = *(void (**)(uint64_t *))(v25 + 32);
    sub_1B1B1DCE0((uint64_t)v13, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8);
    sub_1B1B1F2FC(a1, (uint64_t)v9, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8);
    sub_1B1792810((uint64_t)v9, (uint64_t)v17, type metadata accessor for SimpleScript);
    sub_1B1B1DCE0((uint64_t)v9, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8);
    v27 = *v17;
    swift_bridgeObjectRetain();
    sub_1B1A04628((uint64_t)v17, type metadata accessor for SimpleScript);
    v28 = v6[14];
    v29 = *(_QWORD *)(a1 + v6[15] + 8);
    v30 = *(_QWORD *)(a1 + v28);
    v31 = *(_BYTE *)(a1 + v28 + 8);
    swift_bridgeObjectRetain();
    v32 = sub_1B1E6D158(v27, v29, v30, v31, v47, 0, (uint64_t)v58);
    v33 = thread_worker_index;
    v34 = (_QWORD *)thread_worker_index(v32);
    v35 = v48;
    v36 = *(_QWORD *)(v48 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if ((sub_1B1E691B8(*(_QWORD *)(v36 + 8 * *v34 + 8)) & 1) != 0)
    {
      v37 = v46;
      v38 = HIDWORD(v46);
      v39 = *(_QWORD *)(v36
                      + 8
                      * *(_QWORD *)((uint64_t (*)(uint64_t (**)(double)))v33)(&thread_worker_index)
                      + 8);
      v40 = v26;
      v41 = *(_QWORD *)(v39 + 32);
      v42 = v58[0];
      v43 = sub_1B1B7F538(MEMORY[0x1E0DEE9D8]);
      v49 = v35;
      v50 = v37;
      v51 = v38;
      v53 = 0;
      v54 = 0;
      v52 = v41;
      v44 = 1;
      v55 = 1;
      v56 = v42;
      v57 = v43;
      v40(&v49);
      swift_bridgeObjectRelease();
      sub_1B1CA169C((uint64_t)v58, a1, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v44;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1CAAB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t (*v33)(double);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t result;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[15];

  v43 = a5;
  v44 = a4;
  v42[1] = a3;
  v45 = a2;
  v55[13] = *MEMORY[0x1E0C80C00];
  sub_1B1A1B6FC(0, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v7 = v6;
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)v42 - v13;
  v15 = type metadata accessor for TriggerScript(0);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (_QWORD *)((char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)v42 - v21;
  v23 = v7[13];
  v24 = *(unsigned __int8 *)(a1 + v23);
  sub_1B1792810(a1, (uint64_t)v42 - v21, type metadata accessor for TriggerScript);
  v25 = v22[40];
  sub_1B1A04628((uint64_t)v22, type metadata accessor for TriggerScript);
  if (v24 != 1)
    goto LABEL_4;
  if (v25 == 1)
    return 0;
  if (!v25)
LABEL_4:
    *(_BYTE *)(a1 + v23) = 1;
  sub_1B1B1F2FC(a1, (uint64_t)v14, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8);
  v26 = *(_QWORD *)&v14[v7[10]];
  if (v26)
  {
    v42[0] = *(_QWORD *)(v26 + 32);
    sub_1B1B1DCE0((uint64_t)v14, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8);
    sub_1B1B1F2FC(a1, (uint64_t)v10, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8);
    sub_1B1792810((uint64_t)v10, (uint64_t)v18, type metadata accessor for TriggerScript);
    sub_1B1B1DCE0((uint64_t)v10, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8);
    v27 = *v18;
    swift_bridgeObjectRetain();
    sub_1B1A04628((uint64_t)v18, type metadata accessor for TriggerScript);
    v28 = v7[14];
    v29 = *(_QWORD *)(a1 + v7[15] + 8);
    v30 = *(_QWORD *)(a1 + v28);
    v31 = *(_BYTE *)(a1 + v28 + 8);
    swift_bridgeObjectRetain();
    v32 = sub_1B1E6D158(v27, v29, v30, v31, v44, 0, (uint64_t)v55);
    v33 = thread_worker_index;
    v34 = (_QWORD *)thread_worker_index(v32);
    v35 = v45;
    v36 = *(_QWORD *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if ((sub_1B1E691B8(*(_QWORD *)(v36 + 8 * *v34 + 8)) & 1) != 0)
    {
      v37 = *(_QWORD *)(*(_QWORD *)(v36
                                  + 8
                                  * *(_QWORD *)((uint64_t (*)(uint64_t (**)(double)))v33)(&thread_worker_index)
                                  + 8)
                      + 32);
      v46 = v35;
      v47 = v39;
      v48 = v38;
      v50 = 0;
      v51 = 0;
      v49 = v37;
      v40 = 1;
      v52 = 1;
      v53 = v55[0];
      v54 = v43;
      ((void (*)(uint64_t *))v42[0])(&v46);
      sub_1B1CA169C((uint64_t)v55, a1, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v40;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  result = sub_1B2229688();
  __break(1u);
  return result;
}

unint64_t sub_1B1CAAFA8(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  v2 = sub_1B2020528(a1, (uint64_t)&type metadata for IsSubEntityOf);
  v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B1D1568C(v2);
    v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2228890();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000016;
}

uint64_t sub_1B1CAB0C4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1B1B7F830(MEMORY[0x1E0DEE9D8]);
  sub_1B1B7F918(v2);
  v4 = *(_QWORD **)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1B1FFED40(v4);
    *(_QWORD *)a1 = v4;
    __asm { BR              X9 }
  }
  v5 = *(_QWORD *)(v2 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B202A370(0, v5, 0);
    v7 = 0;
    v6 = v20;
    v8 = v2;
    while (1)
    {
      v9 = v5;
      v10 = *(_QWORD *)(v2 + 8 * v7 + 32);
      v11 = v3[2];
      sub_1B1B1DD24(v10);
      if (v11)
      {
        sub_1B1B1DD24(v10);
        v12 = sub_1B1DC4350(v10);
        if ((v13 & 1) != 0)
        {
          v14 = *(_BYTE *)(v3[7] + v12);
          sub_1B1A05610(v10);
          if ((v14 & 1) != 0)
            v15 = 3;
          else
            v15 = 1;
          goto LABEL_14;
        }
        sub_1B1A05610(v10);
      }
      v15 = 1;
LABEL_14:
      v17 = *(_QWORD *)(v20 + 16);
      v16 = *(_QWORD *)(v20 + 24);
      if (v17 >= v16 >> 1)
        sub_1B202A370(v16 > 1, v17 + 1, 1);
      *(_QWORD *)(v20 + 16) = v17 + 1;
      v18 = v20 + 32 * v17;
      *(_QWORD *)(v18 + 32) = v10;
      ++v7;
      *(_BYTE *)(v18 + 40) = v15;
      *(_QWORD *)(v18 + 48) = 0;
      *(_BYTE *)(v18 + 56) = 1;
      v5 = v9;
      v2 = v8;
      if (v9 == v7)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B1CAB714(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  char v35;
  char v36;
  unint64_t *v37;
  uint64_t result;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  char v46;

  v2 = (_QWORD *)sub_1B1C70EB8(MEMORY[0x1E0DEE9D8]);
  v42 = v3;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = sub_1B1C6A96C((uint64_t)v2, (uint64_t)v42, (void (*)(unint64_t *__return_ptr, uint64_t *))sub_1B1CA85FC);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v37;
  }
  swift_bridgeObjectRetain();
  v5 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v9 = *((_QWORD *)v5 - 3);
    if (v9 >> 60 != 13)
      goto LABEL_5;
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(unsigned __int8 *)(v9 + 48);
    if (v11 == 4)
    {
      v43 = *((_QWORD *)v5 - 1);
      v46 = *v5;
      v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    }
    else
    {
      if (v11 != 3)
        goto LABEL_5;
      v43 = *((_QWORD *)v5 - 1);
      v46 = *v5;
      v13 = v10 + 16;
      v10 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v13 + 8);
    }
    v45 = *(v5 - 16);
    swift_bridgeObjectRetain();
    v41 = v10;
    if (!v2[2])
      break;
    sub_1B1B1DD24(v9);
    swift_bridgeObjectRetain();
    sub_1B1DC3B00(v10, v12);
    v15 = v14;
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_17;
    v40 = v2;
    if (v2[2])
    {
      swift_bridgeObjectRetain();
      v16 = sub_1B1DC3B00(v10, v12);
      if ((v17 & 1) != 0)
      {
        v18 = *(_QWORD *)(v2[7] + 32 * v16);
        sub_1B1B1DD24(v18);
      }
      else
      {
        v18 = 0xF000000000000007;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = 0xF000000000000007;
    }
    swift_retain();
    sub_1B1CA8B88(v18);
    v36 = v35;
    sub_1B1A05610(v9);
    sub_1B1C77DCC(v18);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B1B63B64();
      swift_allocError();
      *v39 = 0xD000000000000013;
      v39[1] = 0x80000001B23376F0;
      swift_willThrow();
      sub_1B1A05610(v9);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1B1A05610(v9);
    v2 = v40;
LABEL_5:
    v5 += 32;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  swift_retain();
LABEL_17:
  swift_retain_n();
  v19 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = v2;
  v22 = sub_1B1DC3B00(v10, v12);
  v23 = v10;
  v24 = v21;
  v25 = v19[2] + ((v21 & 1) == 0);
  if (v19[3] >= v25)
  {
    v29 = isUniquelyReferenced_nonNull_native;
    v26 = v12;
    if ((v29 & 1) != 0)
    {
      v2 = v44;
      if ((v21 & 1) == 0)
      {
LABEL_23:
        v2[(v22 >> 6) + 8] |= 1 << v22;
        v30 = (uint64_t *)(v2[6] + 16 * v22);
        *v30 = v41;
        v30[1] = v26;
        v31 = v2[7] + 32 * v22;
        *(_QWORD *)v31 = v9;
        *(_BYTE *)(v31 + 8) = v45;
        *(_QWORD *)(v31 + 16) = v43;
        *(_BYTE *)(v31 + 24) = v46;
        ++v2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v42 = sub_1B1C63044(0, v42[2] + 1, 1, v42);
        v33 = v42[2];
        v32 = v42[3];
        if (v33 >= v32 >> 1)
          v42 = sub_1B1C63044(v32 > 1, v33 + 1, 1, v42);
        v42[2] = v33 + 1;
        v34 = &v42[2 * v33];
        v34[4] = v41;
        v34[5] = v26;
        swift_bridgeObjectRelease();
        v8 = v9;
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B1EABB7C();
      v2 = v44;
      if ((v24 & 1) == 0)
        goto LABEL_23;
    }
LABEL_3:
    v6 = v2[7] + 32 * v22;
    v7 = *(_QWORD *)v6;
    *(_QWORD *)v6 = v9;
    *(_BYTE *)(v6 + 8) = v45;
    *(_QWORD *)(v6 + 16) = v43;
    *(_BYTE *)(v6 + 24) = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B1A05610(v9);
    v8 = v7;
LABEL_4:
    sub_1B1A05610(v8);
    sub_1B1A05610(v9);
    sub_1B1A05610(v9);
    goto LABEL_5;
  }
  sub_1B1E975D8(v25, isUniquelyReferenced_nonNull_native);
  v26 = v12;
  v27 = sub_1B1DC3B00(v23, v12);
  if ((v24 & 1) == (v28 & 1))
  {
    v22 = v27;
    v2 = v44;
    if ((v24 & 1) == 0)
      goto LABEL_23;
    goto LABEL_3;
  }
  result = sub_1B2229FC4();
  __break(1u);
  return result;
}

uint64_t sub_1B1CABC44(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t result;
  unint64_t v54;
  unint64_t v55;
  unint64_t *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD *v65;
  unint64_t v66;
  uint64_t v67;

  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = sub_1B1B7FA04(MEMORY[0x1E0DEE9D8]);
  v67 = MEMORY[0x1E0DEE9E8];
  v59 = *(_QWORD *)(a1 + 16);
  if (v59)
  {
    v58 = a1 + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = v3;
    while (1)
    {
      v6 = v58 + 32 * v4;
      v7 = *(_QWORD *)v6;
      v64 = *(_BYTE *)(v6 + 8);
      v8 = *(_QWORD *)(v6 + 16);
      v9 = *(_BYTE *)(v6 + 24);
      if (*(_QWORD *)v6 >> 60 == 13
        && ((v10 = *(_QWORD *)(v7 + 24), *(_BYTE *)(v7 + 48) == 1) ? (v11 = v10 >= 9) : (v11 = 0), v11))
      {
        v63 = *(_QWORD *)(v6 + 16);
        v26 = *(_QWORD *)(v7 + 16);
        v28 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        v27 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        sub_1B1B1DD24(v7);
        sub_1B1B6326C(v26, v10, v28, v27, 1);
        sub_1B1B28D2C(v28);
        if (!v5[2]
          || (swift_bridgeObjectRetain(), sub_1B1DC3B00(v26, v10),
                                          v30 = v29,
                                          swift_bridgeObjectRelease(),
                                          (v30 & 1) == 0))
        {
          v61 = v9;
          swift_retain();
          v34 = (unint64_t)v5;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v65 = (_QWORD *)v34;
          v37 = sub_1B1DC3B00(v26, v10);
          v38 = v36;
          v39 = *(_QWORD *)(v34 + 16) + ((v36 & 1) == 0);
          if (*(_QWORD *)(v34 + 24) >= v39)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v5 = v65;
              if ((v36 & 1) == 0)
                goto LABEL_42;
            }
            else
            {
              sub_1B1EABB7C();
              v5 = v65;
              if ((v38 & 1) == 0)
                goto LABEL_42;
            }
          }
          else
          {
            sub_1B1E975D8(v39, isUniquelyReferenced_nonNull_native);
            v40 = sub_1B1DC3B00(v26, v10);
            if ((v38 & 1) != (v41 & 1))
            {
              result = sub_1B2229FC4();
              __break(1u);
              return result;
            }
            v37 = v40;
            v5 = v65;
            if ((v38 & 1) == 0)
            {
LABEL_42:
              v5[(v37 >> 6) + 8] |= 1 << v37;
              v46 = (uint64_t *)(v5[6] + 16 * v37);
              *v46 = v26;
              v46[1] = v10;
              v47 = v5[7] + 32 * v37;
              *(_QWORD *)v47 = v7;
              *(_BYTE *)(v47 + 8) = v64;
              *(_QWORD *)(v47 + 16) = v63;
              v43 = v61;
              *(_BYTE *)(v47 + 24) = v61;
              ++v5[2];
              swift_bridgeObjectRetain();
LABEL_43:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v48 = v67;
              sub_1B1B1DD24(v7);
              swift_bridgeObjectRetain();
              v49 = sub_1B1B0F504(v7, v48);
              swift_bridgeObjectRelease();
              sub_1B1A05610(v7);
              if ((v49 & 1) == 0)
              {
                swift_retain();
                sub_1B1B8B514((unint64_t *)&v65, v7);
                sub_1B1A05610((unint64_t)v65);
                swift_retain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v2 = sub_1B1C638E4(0, v2[2] + 1, 1, v2);
                v51 = v2[2];
                v50 = v2[3];
                if (v51 >= v50 >> 1)
                  v2 = sub_1B1C638E4(v50 > 1, v51 + 1, 1, v2);
                v2[2] = v51 + 1;
                v52 = &v2[4 * v51];
                v52[4] = v7;
                *((_BYTE *)v52 + 40) = v64;
                v52[6] = v63;
                *((_BYTE *)v52 + 56) = v43;
              }
              goto LABEL_4;
            }
          }
          v42 = v5[7] + 32 * v37;
          sub_1B1A05610(*(_QWORD *)v42);
          *(_QWORD *)v42 = v7;
          *(_BYTE *)(v42 + 8) = v64;
          *(_QWORD *)(v42 + 16) = v63;
          v43 = v61;
          *(_BYTE *)(v42 + 24) = v61;
          goto LABEL_43;
        }
        v57 = v5;
        if (v5[2])
        {
          swift_bridgeObjectRetain();
          v31 = sub_1B1DC3B00(v26, v10);
          if ((v32 & 1) != 0)
          {
            v33 = *(_QWORD *)(v5[7] + 32 * v31);
            sub_1B1B1DD24(v33);
          }
          else
          {
            v33 = 0xF000000000000007;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v33 = 0xF000000000000007;
        }
        swift_retain();
        sub_1B1CA8B88(v33);
        v45 = v44;
        sub_1B1A05610(v7);
        sub_1B1C77DCC(v33);
        if ((v45 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v65 = 0;
          v66 = 0xE000000000000000;
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v65 = (_QWORD *)0xD000000000000015;
          v66 = 0x80000001B23376D0;
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          v54 = (unint64_t)v65;
          v55 = v66;
          sub_1B1B63B64();
          swift_allocError();
          *v56 = v54;
          v56[1] = v55;
          swift_willThrow();
          sub_1B1A05610(v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v2;
        }
        swift_bridgeObjectRelease();
        v5 = v57;
      }
      else
      {
        v12 = v67;
        if (!*(_QWORD *)(v67 + 16))
        {
          sub_1B1B1DD24(v7);
          goto LABEL_19;
        }
        v62 = *(_QWORD *)(v6 + 16);
        v60 = *(_BYTE *)(v6 + 24);
        sub_1B222A06C();
        sub_1B1B1DD24(v7);
        swift_bridgeObjectRetain();
        sub_1B1C9721C((uint64_t)&v65, v7);
        v13 = sub_1B222A0C0();
        v14 = -1 << *(_BYTE *)(v12 + 32);
        v15 = v13 & ~v14;
        if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          goto LABEL_18;
        v16 = *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v15);
        sub_1B1B1DD24(v16);
        sub_1B1CA8B88(v16);
        v18 = v17;
        sub_1B1A05610(v16);
        if ((v18 & 1) == 0)
        {
          v19 = ~v14;
          while (1)
          {
            v15 = (v15 + 1) & v19;
            if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
              break;
            v20 = *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v15);
            sub_1B1B1DD24(v20);
            sub_1B1CA8B88(v20);
            v22 = v21;
            sub_1B1A05610(v20);
            if ((v22 & 1) != 0)
              goto LABEL_3;
          }
LABEL_18:
          swift_bridgeObjectRelease();
          v9 = v60;
          v8 = v62;
LABEL_19:
          sub_1B1B1DD24(v7);
          sub_1B1B8B514((unint64_t *)&v65, v7);
          sub_1B1A05610((unint64_t)v65);
          sub_1B1B1DD24(v7);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1B1C638E4(0, v2[2] + 1, 1, v2);
          v24 = v2[2];
          v23 = v2[3];
          if (v24 >= v23 >> 1)
            v2 = sub_1B1C638E4(v23 > 1, v24 + 1, 1, v2);
          v2[2] = v24 + 1;
          v25 = &v2[4 * v24];
          v25[4] = v7;
          *((_BYTE *)v25 + 40) = v64;
          v25[6] = v8;
          *((_BYTE *)v25 + 56) = v9;
          goto LABEL_4;
        }
LABEL_3:
        swift_bridgeObjectRelease();
      }
LABEL_4:
      ++v4;
      sub_1B1A05610(v7);
      if (v4 == v59)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v2;
}

unint64_t sub_1B1CAC354(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  v2 = sub_1B2020528(a1, (uint64_t)&type metadata for IsSubEntityOf);
  v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B1D1568C(v2);
    v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2228890();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000015;
}

unint64_t sub_1B1CAC460(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  v2 = sub_1B2020528(a1, (uint64_t)&type metadata for IsSubEntityOf);
  v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B1D1568C(v2);
    v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2228890();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000018;
}

unint64_t sub_1B1CAC57C(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  v2 = sub_1B2020528(a1, (uint64_t)&type metadata for IsSubEntityOf);
  v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B1D1568C(v2);
    v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2228890();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD00000000000001ELL;
}

unint64_t sub_1B1CAC688(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  v2 = sub_1B2020528(a1, (uint64_t)&type metadata for IsSubEntityOf);
  v4 = v3;
  swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_1B1D1568C(v2);
    v6 = v5;
    swift_release();
    if (v6)
    {
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      sub_1B2228890();
      swift_bridgeObjectRelease();
    }
  }
  return 0xD000000000000016;
}

uint64_t sub_1B1CAC794(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1B19F8E54(0, &qword_1EEF5D188, (uint64_t (*)(void))sub_1B1CACCC4, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v40 = v3;
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4);
  v42 = (char *)&v33 - v5;
  sub_1B19F8E54(0, &qword_1EEF5D198, (uint64_t (*)(void))sub_1B1CACD08, (uint64_t)&type metadata for ScriptLocation.EntityLocator.PathCodingKeys, v2);
  v7 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v39 = v7;
  MEMORY[0x1E0C80A78](v6, v8);
  v41 = (char *)&v33 - v9;
  sub_1B19F8E54(0, &qword_1EEF5D1A8, (uint64_t (*)(void))sub_1B1CACD4C, (uint64_t)&type metadata for ScriptLocation.EntityLocator.DirectCodingKeys, v2);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v33 - v12;
  sub_1B19F8E54(0, &qword_1EEF5D1B8, (uint64_t (*)(void))sub_1B1CACD90, (uint64_t)&type metadata for ScriptLocation.EntityLocator.CodingKeys, v2);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)&v33 - v18;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CACD90();
  v20 = (uint64_t)v43;
  sub_1B222A150();
  if (v20)
    goto LABEL_8;
  v22 = v41;
  v21 = v42;
  v34 = v16;
  v43 = a1;
  v23 = sub_1B2229880();
  if (*(_QWORD *)(v23 + 16) != 1)
  {
    v16 = sub_1B22294CC();
    swift_allocError();
    v28 = v27;
    sub_1B1BDBA1C();
    *v28 = &type metadata for ScriptLocation.EntityLocator;
    sub_1B2229760();
    sub_1B22294B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v28, *MEMORY[0x1E0DEC450], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v15);
    a1 = v43;
LABEL_8:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return v16;
  }
  if (*(_BYTE *)(v23 + 32))
  {
    if (*(_BYTE *)(v23 + 32) == 1)
    {
      v46 = 1;
      sub_1B1CACD08();
      sub_1B2229754();
      v24 = v38;
      v25 = sub_1B22297CC();
      v26 = v34;
      v16 = v25;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v15);
    }
    else
    {
      v47 = 2;
      sub_1B1CACCC4();
      sub_1B2229754();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v15);
      v16 = 0;
    }
  }
  else
  {
    v45 = 0;
    sub_1B1CACD4C();
    v29 = v13;
    sub_1B2229754();
    sub_1B1A08878();
    v31 = v36;
    sub_1B2229814();
    v32 = v34;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v15);
    v16 = v44;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v43);
  return v16;
}

unint64_t sub_1B1CACCC4()
{
  unint64_t result;

  result = qword_1EEF5D190;
  if (!qword_1EEF5D190)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AE10, &type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D190);
  }
  return result;
}

unint64_t sub_1B1CACD08()
{
  unint64_t result;

  result = qword_1EEF5D1A0;
  if (!qword_1EEF5D1A0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228ADC0, &type metadata for ScriptLocation.EntityLocator.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D1A0);
  }
  return result;
}

unint64_t sub_1B1CACD4C()
{
  unint64_t result;

  result = qword_1EEF5D1B0;
  if (!qword_1EEF5D1B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AD70, &type metadata for ScriptLocation.EntityLocator.DirectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D1B0);
  }
  return result;
}

unint64_t sub_1B1CACD90()
{
  unint64_t result;

  result = qword_1EEF5D1C0;
  if (!qword_1EEF5D1C0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AD20, &type metadata for ScriptLocation.EntityLocator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D1C0);
  }
  return result;
}

unint64_t sub_1B1CACDD4(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int16 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __int16 v52;
  __int128 v53;
  __int128 v54;
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _BYTE v60[24];
  uint64_t v61;
  char v62;
  __int16 v63;
  _BYTE v64[32];
  _BYTE v65[24];
  uint64_t v66;

  v3 = (unint64_t)sub_1B19FA070(a1, a1[3]);
  sub_1B222A12C();
  if (v1)
  {
LABEL_3:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B19FC264((uint64_t)v65, v66);
    v3 = 0xF000000000000000;
    switch(sub_1B2229A90())
    {
      case 0:
        break;
      case 1:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1A08878();
        sub_1B2229AA8();
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD7DC();
        sub_1B2229AA8();
        v5 = v59;
        v6 = *(_QWORD *)&v60[16];
        v7 = v61;
        v8 = v62;
        v9 = v63;
        v53 = *(_OWORD *)v60;
        v10 = swift_allocObject();
        *(_QWORD *)(v10 + 16) = v59;
        *(_QWORD *)(v10 + 24) = v5;
        *(_OWORD *)(v10 + 32) = v53;
        *(_QWORD *)(v10 + 48) = v6;
        *(_QWORD *)(v10 + 56) = v7;
        *(_BYTE *)(v10 + 64) = v8;
        v3 = v10 | 0x3000000000000000;
        *(_WORD *)(v10 + 66) = v9;
        break;
      case 2:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1A08878();
        sub_1B2229AA8();
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD7DC();
        sub_1B2229AA8();
        v13 = v59;
        v12 = *(_QWORD *)v60;
        v54 = *(_OWORD *)&v60[8];
        v14 = v61;
        v15 = v62;
        v52 = v63;
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1A71DC8();
        sub_1B2229AA8();
        v16 = v59;
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = v59;
        *(_QWORD *)(v17 + 24) = v13;
        *(_QWORD *)(v17 + 32) = v12;
        *(_OWORD *)(v17 + 40) = v54;
        *(_QWORD *)(v17 + 56) = v14;
        *(_BYTE *)(v17 + 64) = v15;
        *(_WORD *)(v17 + 66) = v52;
        v3 = v17 | 0x4000000000000000;
        *(_BYTE *)(v17 + 68) = v16;
        break;
      case 3:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD91C();
        sub_1B2229AA8();
        v18 = *(_QWORD *)v60;
        v19 = v60[8];
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1C27588();
        sub_1B2229AA8();
        v20 = v59;
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1A71D2C();
        sub_1B2229AA8();
        v55 = v59;
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1A71C90();
        sub_1B2229AA8();
        v50 = v59;
        v51 = swift_allocObject();
        *(_QWORD *)(v51 + 16) = v59;
        *(_QWORD *)(v51 + 24) = v18;
        *(_BYTE *)(v51 + 32) = v19;
        *(_BYTE *)(v51 + 33) = v20;
        *(_BYTE *)(v51 + 34) = v55;
        v3 = v51 | 0x7000000000000000;
        *(_BYTE *)(v51 + 35) = v50;
        break;
      case 4:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD91C();
        sub_1B2229AA8();
        v21 = *(_QWORD *)v60;
        v22 = v60[8];
        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = v59;
        *(_QWORD *)(v23 + 24) = v21;
        *(_BYTE *)(v23 + 32) = v22;
        v3 = v23 | 0x8000000000000000;
        break;
      case 5:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD7DC();
        sub_1B2229AA8();
        v24 = *(_QWORD *)v60;
        v56 = *(_OWORD *)&v60[8];
        v25 = v61;
        v26 = v62;
        v27 = v63;
        v28 = a1[3];
        v29 = a1[4];
        sub_1B19FA070(a1, v28);
        if (sub_1B2067B64(2023, v28, v29))
        {
          sub_1B19FC264((uint64_t)v65, v66);
          sub_1B1A71DC8();
          sub_1B2229AA8();
          v48 = v59;
        }
        else
        {
          v48 = 5;
        }
        v49 = swift_allocObject();
        *(_QWORD *)(v49 + 16) = v59;
        *(_QWORD *)(v49 + 24) = v24;
        *(_OWORD *)(v49 + 32) = v56;
        *(_QWORD *)(v49 + 48) = v25;
        *(_BYTE *)(v49 + 56) = v26;
        *(_WORD *)(v49 + 58) = v27;
        v3 = v49 | 0x9000000000000000;
        *(_BYTE *)(v49 + 60) = v48;
        break;
      case 6:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD7DC();
        sub_1B2229AA8();
        v30 = *(_QWORD *)&v60[16];
        v31 = v61;
        v32 = v62;
        v33 = v63;
        v57 = *(_OWORD *)v60;
        v34 = swift_allocObject();
        *(_QWORD *)(v34 + 16) = v59;
        *(_OWORD *)(v34 + 24) = v57;
        *(_QWORD *)(v34 + 40) = v30;
        *(_QWORD *)(v34 + 48) = v31;
        *(_BYTE *)(v34 + 56) = v32;
        v3 = v34 | 0xA000000000000000;
        *(_WORD *)(v34 + 58) = v33;
        break;
      case 7:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1A08878();
        sub_1B2229AA8();
        v35 = swift_allocObject();
        *(_QWORD *)(v35 + 16) = v59;
        v3 = v35 | 0xB000000000000000;
        break;
      case 8:
        v3 = 0xF000000000000008;
        break;
      case 9:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1A08878();
        sub_1B2229AA8();
        v36 = swift_allocObject();
        *(_QWORD *)(v36 + 16) = v59;
        v3 = v36 | 0xC000000000000000;
        break;
      case 10:
        sub_1B19FC264((uint64_t)v65, v66);
        v37 = sub_1B2229A60();
        v39 = v38;
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD85C();
        sub_1B2229AA8();
        v41 = v59;
        v42 = swift_allocObject();
        *(_QWORD *)(v42 + 16) = v37;
        *(_QWORD *)(v42 + 24) = v39;
        *(_QWORD *)(v42 + 32) = v41;
        v3 = v42 | 0xE000000000000000;
        break;
      case 11:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B19FC28C();
        sub_1B2229AA8();
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B1CAD7DC();
        sub_1B2229AA8();
        v43 = *(_QWORD *)&v60[16];
        v44 = v61;
        v45 = v62;
        v46 = v63;
        v58 = *(_OWORD *)v60;
        v47 = swift_allocObject();
        sub_1B19FC2D0((uint64_t)v64, v47 + 16);
        *(_QWORD *)(v47 + 48) = v59;
        *(_OWORD *)(v47 + 56) = v58;
        *(_QWORD *)(v47 + 72) = v43;
        *(_QWORD *)(v47 + 80) = v44;
        *(_BYTE *)(v47 + 88) = v45;
        v3 = v47 | 0x1000000000000000;
        *(_WORD *)(v47 + 90) = v46;
        break;
      case 12:
        sub_1B19FC264((uint64_t)v65, v66);
        sub_1B19FC28C();
        sub_1B2229AA8();
        v40 = swift_allocObject();
        sub_1B19FC2D0((uint64_t)&v59, v40 + 16);
        v3 = v40 | 0x2000000000000000;
        break;
      default:
        sub_1B1B6AE48();
        swift_allocError();
        *(_QWORD *)v11 = 0xD000000000000024;
        *(_QWORD *)(v11 + 8) = 0x80000001B23374F0;
        *(_BYTE *)(v11 + 16) = 96;
        swift_willThrow();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v65);
        goto LABEL_3;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v65);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1B1CAD7B0()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1B1CAD7DC()
{
  unint64_t result;

  result = qword_1EEF5D1E8;
  if (!qword_1EEF5D1E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B227C608, &type metadata for ScriptKeyPath);
    atomic_store(result, (unint64_t *)&qword_1EEF5D1E8);
  }
  return result;
}

uint64_t sub_1B1CAD820()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1B1CAD85C()
{
  unint64_t result;

  result = qword_1EEF5D1F0;
  if (!qword_1EEF5D1F0)
  {
    result = MEMORY[0x1B5E23E74](&protocol conformance descriptor for VFXBindingType, &type metadata for VFXBindingType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D1F0);
  }
  return result;
}

uint64_t sub_1B1CAD8A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1CAD8C4()
{
  return swift_deallocObject();
}

uint64_t sub_1B1CAD8D4()
{
  return sub_1B1CAD8E4();
}

uint64_t sub_1B1CAD8DC()
{
  return sub_1B1CAD8E4();
}

uint64_t sub_1B1CAD8E4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1B1CAD91C()
{
  unint64_t result;

  result = qword_1EEF5D1F8;
  if (!qword_1EEF5D1F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228986C, &type metadata for ScriptLocation.EntityLocator);
    atomic_store(result, (unint64_t *)&qword_1EEF5D1F8);
  }
  return result;
}

uint64_t sub_1B1CAD960()
{
  return sub_1B1791240();
}

uint64_t sub_1B1CAD968()
{
  return sub_1B1791240();
}

uint64_t sub_1B1CAD970()
{
  return sub_1B1A05688();
}

uint64_t sub_1B1CAD978()
{
  return sub_1B1A05688();
}

unint64_t sub_1B1CAD980()
{
  unint64_t result;

  result = qword_1EEF5D200;
  if (!qword_1EEF5D200)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B227C5E0, &type metadata for ScriptKeyPath);
    atomic_store(result, (unint64_t *)&qword_1EEF5D200);
  }
  return result;
}

unint64_t sub_1B1CAD9C4()
{
  unint64_t result;

  result = qword_1EEF5D208;
  if (!qword_1EEF5D208)
  {
    result = MEMORY[0x1B5E23E74](&protocol conformance descriptor for VFXBindingType, &type metadata for VFXBindingType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D208);
  }
  return result;
}

unint64_t sub_1B1CADA08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEF5D218;
  if (!qword_1EEF5D218)
  {
    sub_1B1A02758(255, &qword_1EEF5D210, (uint64_t)&type metadata for EntitySpace, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1B1A71E0C();
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEF5D218);
  }
  return result;
}

unint64_t sub_1B1CADA80()
{
  unint64_t result;

  result = qword_1EEF5D220;
  if (!qword_1EEF5D220)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289844, &type metadata for ScriptLocation.EntityLocator);
    atomic_store(result, (unint64_t *)&qword_1EEF5D220);
  }
  return result;
}

unint64_t sub_1B1CADAC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  _BYTE v11[16];
  unint64_t v12;

  sub_1B19F8E54(0, &qword_1EEF5D228, (uint64_t (*)(void))sub_1B1CADCD4, (uint64_t)&type metadata for ScriptParameter.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = &v11[-v7];
  v9 = a1[3];
  sub_1B19FA070(a1, v9);
  sub_1B1CADCD4();
  sub_1B222A150();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    v11[15] = 0;
    sub_1B1CADD18();
    sub_1B2229814();
    v9 = v12;
    v11[13] = 1;
    sub_1B1B1DD24(v12);
    sub_1B1CADD5C();
    sub_1B2229814();
    v11[12] = 2;
    sub_1B22297A8();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    sub_1B1A05610(v9);
  }
  return v9;
}

unint64_t sub_1B1CADCD4()
{
  unint64_t result;

  result = qword_1EEF5D230;
  if (!qword_1EEF5D230)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228ACD0, &type metadata for ScriptParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D230);
  }
  return result;
}

unint64_t sub_1B1CADD18()
{
  unint64_t result;

  result = qword_1EEF5D238;
  if (!qword_1EEF5D238)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228981C, &type metadata for ScriptLocation);
    atomic_store(result, (unint64_t *)&qword_1EEF5D238);
  }
  return result;
}

unint64_t sub_1B1CADD5C()
{
  unint64_t result;

  result = qword_1EEF5D240;
  if (!qword_1EEF5D240)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228ACA8, &type metadata for ScriptAccess);
    atomic_store(result, (unint64_t *)&qword_1EEF5D240);
  }
  return result;
}

unint64_t sub_1B1CADDA0()
{
  unint64_t result;

  result = qword_1EEF5D250;
  if (!qword_1EEF5D250)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22897F4, &type metadata for ScriptLocation);
    atomic_store(result, (unint64_t *)&qword_1EEF5D250);
  }
  return result;
}

unint64_t sub_1B1CADDE4()
{
  unint64_t result;

  result = qword_1EEF5D258;
  if (!qword_1EEF5D258)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AC80, &type metadata for ScriptAccess);
    atomic_store(result, (unint64_t *)&qword_1EEF5D258);
  }
  return result;
}

uint64_t sub_1B1CADE28(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  uint64_t i;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v3 = (char *)MEMORY[0x1E0DEE9D8];
    for (i = 32; ; i += 32)
    {
      v6 = *(_QWORD *)(a1 + i);
      if (v6 >> 60 == 9)
      {
        swift_retain();
        v7 = sub_1B2229304();
        result = swift_conformsToProtocol2();
        if (!result)
        {
          __break(1u);
          return result;
        }
        v9 = result;
        sub_1B1A05610(v6);
        if (v7)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_1B1C62F18(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
          v11 = *((_QWORD *)v3 + 2);
          v10 = *((_QWORD *)v3 + 3);
          if (v11 >= v10 >> 1)
            v3 = sub_1B1C62F18(v10 > 1, v11 + 1, 1, v3);
          *((_QWORD *)v3 + 2) = v11 + 1;
          v5 = &v3[16 * v11];
          *((_QWORD *)v5 + 4) = v7;
          *((_QWORD *)v5 + 5) = v9;
        }
      }
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v3;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B1CADF5C(uint64_t a1)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  int v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  double v46;
  _QWORD *v47;
  uint64_t v48;
  unsigned __int16 *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_unfair_lock_s *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  void (*v81)(uint64_t *);
  unsigned int v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int16 *v99[5];
  _OWORD v100[2];
  uint64_t v101;
  unsigned __int16 *v102;
  int v103;
  char v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD v117[8];
  uint64_t v118;
  uint64_t v119[3];
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128[12];
  _BYTE v129[40];
  _BYTE v130[40];
  uint64_t v131[8];
  _BYTE v132[24];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v136 = *MEMORY[0x1E0C80C00];
  inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1E0C80A78](inited, v3);
  v5 = (unsigned __int8 *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, &qword_1ED4B8890, v6, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v8 = v7;
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v79 - v14;
  v16 = *(_QWORD *)a1;
  v17 = *(unsigned int *)(a1 + 8);
  v18 = *(_DWORD *)(a1 + 12);
  swift_retain();
  if (__PAIR64__(v18, v17) == 0xFFFFFFFF)
    return swift_release();
  if ((v17 & 0x80000000) != 0)
    return swift_release();
  if (*(_QWORD *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= (int)v17)
    return swift_release();
  v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v18 != -1 && *(_DWORD *)(v19 + 12 * (int)v17 + 8) != v18)
    return swift_release();
  v20 = (unsigned int *)(v19 + 12 * (int)v17);
  sub_1B1FE43A4(*(_QWORD *)(*(_QWORD *)(v16 + 136) + 8 * (int)*v20 + 32), v8, *v20 | ((unint64_t)*((unsigned __int16 *)v20 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v20 + 2) << 32), v16, v131);
  v97 = 0;
  if (!v131[0])
    return swift_release();
  v96 = v8;
  v82 = v18;
  v83 = v17;
  v92 = v16;
  v21 = v131[0];
  sub_1B1B1F2FC(v131[0], (uint64_t)v15, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
  sub_1B1792810((uint64_t)v15, (uint64_t)v5, type metadata accessor for ParticleInitScript);
  sub_1B1B1DCE0((uint64_t)v15, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
  v22 = *v5;
  sub_1B1A04628((uint64_t)v5, type metadata accessor for ParticleInitScript);
  if (v22 == 1)
    return swift_release();
  v24 = *(int *)(v96 + 60);
  v80 = v21;
  v95 = v21 + v24;
  v25 = *(_QWORD *)(v21 + v24);
  v26 = *(_QWORD *)(v25 + 16);
  v98 = v25;
  if (v26)
  {
    swift_bridgeObjectRetain_n();
    v27 = (char *)MEMORY[0x1E0DEE9D8];
    v28 = 32;
    while (1)
    {
      v31 = *(_QWORD *)(v25 + v28);
      if (v31 >> 60 == 9)
      {
        swift_retain();
        v32 = sub_1B2229304();
        sub_1B1A05610(v31);
        v33 = swift_conformsToProtocol2();
        if (!v33)
        {
          __break(1u);
          goto LABEL_47;
        }
        v34 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_1B1C63160(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
        v36 = *((_QWORD *)v27 + 2);
        v35 = *((_QWORD *)v27 + 3);
        if (v36 >= v35 >> 1)
          v27 = sub_1B1C63160(v35 > 1, v36 + 1, 1, v27);
        v29 = *(_QWORD *)(v34 + 8);
        *((_QWORD *)v27 + 2) = v36 + 1;
        v30 = &v27[16 * v36];
        *((_QWORD *)v30 + 4) = v32;
        *((_QWORD *)v30 + 5) = v29;
        v25 = v98;
      }
      v28 += 32;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRetain();
  v27 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  v37 = *(_OWORD *)(a1 + 104);
  v100[0] = *(_OWORD *)(a1 + 88);
  v100[1] = v37;
  v101 = *(_QWORD *)(a1 + 120);
  swift_retain();
  sub_1B1B0FA64((uint64_t)v27, (uint64_t)v99);
  swift_bridgeObjectRelease();
  sub_1B19ED720((uint64_t)v100);
  v38 = v80;
  sub_1B1B1F2FC(v80, (uint64_t)v11, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
  v39 = v96;
  v40 = *(_QWORD *)&v11[*(int *)(v96 + 40)];
  if (v40)
  {
    v81 = *(void (**)(uint64_t *))(v40 + 32);
    sub_1B1B1DCE0((uint64_t)v11, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
    v41 = *(_QWORD *)(v95 + 8);
    v42 = v38 + *(int *)(v39 + 56);
    v43 = *(_QWORD *)v42;
    v44 = *(_BYTE *)(v42 + 8);
    v45 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    v46 = sub_1B1E6D158(v98, v41, v43, v44, v45, 0, (uint64_t)v117);
    v47 = (_QWORD *)thread_worker_index(v46);
    v48 = v92;
    if ((sub_1B1E691B8(*(_QWORD *)(*(_QWORD *)(v92 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v47 + 8)) & 1) != 0)
    {
      sub_1B1E8FCE4(v48, (uint64_t)v99, 0x200000000, v119);
      v49 = (unsigned __int16 *)v119[0];
      v50 = v119[1];
      v51 = v119[2];
      v52 = v120;
      v53 = v121;
      v91 = v123;
      v89 = v122;
      v90 = v124;
      v54 = v125;
      v55 = v126;
      v95 = v127;
      sub_1B1A18378((uint64_t)v119, (uint64_t)v128, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
      if (v128[0])
      {
        if (v55 > 0 && v91)
        {
          v88 = v55;
          v98 = v54[4];
          LODWORD(v96) = *(unsigned __int8 *)(v90 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v102 = v49;
          v103 = v50;
          v104 = BYTE4(v50);
          v105 = v51;
          v106 = v52;
          v107 = v53;
          v86 = v54 + 8;
          v87 = v54 + 6;
          v85 = v132;
          v79 = &v118;
          swift_retain();
          swift_retain();
          swift_retain();
          v56 = 0;
          v84 = v54;
          do
          {
            v57 = (unsigned int *)(v89 + 48 * v56);
            v58 = *v57;
            v59 = v57[1];
            v60 = v57[2];
            v61 = *((_QWORD *)v57 + 2);
            v94 = *((_QWORD *)v57 + 3);
            v95 = v61;
            v62 = *((_QWORD *)v57 + 5);
            v93 = *((_QWORD *)v57 + 4);
            if ((_DWORD)v96)
            {
              v63 = *(os_unfair_lock_s **)(v62 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v63);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v62 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v98);
            sub_1B1A18378((uint64_t)v87, (uint64_t)v129, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
            v64 = v54[4];
            v65 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v62 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v54[6] = ecs_stack_allocator_allocate(v64, 48 * v65, 8);
            v54[7] = v65;
            v66 = v86;
            v86[1] = 0;
            v66[2] = 0;
            *v66 = 0;
            swift_release();
            v131[0] = v90;
            v131[1] = v62;
            v131[2] = (uint64_t)v54;
            v131[3] = v60;
            v131[4] = (v59 - v58 + v60);
            v131[5] = v88;
            v131[6] = v58;
            v131[7] = v59;
            v67 = v85;
            *v85 = 0;
            v67[1] = 0;
            v132[16] = 1;
            v133 = v95;
            v134 = v94;
            v135 = v93;
            if ((sub_1B1E69784(v99, (uint64_t)v131) & 1) != 0)
            {
              v68 = v54[4];
              v69 = v117[0];
              v70 = sub_1B1B7F538(MEMORY[0x1E0DEE9D8]);
              v108 = v92;
              v109 = v83;
              v110 = v82;
              v111 = v68;
              v112 = v58;
              v113 = v59;
              v114 = 0;
              v115 = v69;
              v116 = v70;
              v81(&v108);
              swift_bridgeObjectRelease();
              v71 = v117[1];
              v72 = v117[5];
              v73 = v117[7];
              sub_1B1A18378((uint64_t)v79, (uint64_t)v130, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
              v95 = v71;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v74 = v97;
              sub_1B1F05D48(v54, v99, (uint64_t)v130);
              v75 = *(_QWORD *)(v73 + 16);
              if (v75)
              {
                v97 = v72;
                swift_bridgeObjectRetain();
                v76 = v73 + 40;
                do
                {
                  v77 = *(void (**)(uint64_t))(v76 - 8);
                  v78 = swift_retain();
                  v77(v78);
                  swift_release();
                  v76 += 16;
                  --v75;
                }
                while (v75);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              v74 = v97;
            }
            v54 = v84;
            sub_1B1F05D48(v84, &v102, (uint64_t)v129);
            v97 = v74;
            sub_1B1F03804((char *)v62);
            ecs_stack_allocator_pop_snapshot(v98);
            if ((_DWORD)v96)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 376));
            }
            swift_release();
            ++v56;
          }
          while (v56 != v91);
          sub_1B19ED748(v119);
          sub_1B19ED748(v119);
        }
        else
        {
          sub_1B19ED748(v119);
        }
      }
      else
      {
        sub_1B1B0EC8C(v45, (uint64_t)v99);
      }
      sub_1B1CA169C((uint64_t)v117, v80, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
    }
    sub_1B19ED720((uint64_t)v99);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_47:
    result = sub_1B2229688();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B1CAE910()
{
  unint64_t result;

  result = qword_1ED4B9320;
  if (!qword_1ED4B9320)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AC30, &type metadata for ParticleInitScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9320);
  }
  return result;
}

unint64_t sub_1B1CAE954()
{
  unint64_t result;

  result = qword_1EEF5D278;
  if (!qword_1EEF5D278)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228ABE0, &type metadata for ParticleUpdateScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D278);
  }
  return result;
}

unint64_t sub_1B1CAE998()
{
  unint64_t result;

  result = qword_1EEF5D290;
  if (!qword_1EEF5D290)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AB90, &type metadata for GraphScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D290);
  }
  return result;
}

unint64_t sub_1B1CAE9DC()
{
  unint64_t result;

  result = qword_1EEF5D2A0;
  if (!qword_1EEF5D2A0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22897CC, &type metadata for ScriptParameter);
    atomic_store(result, (unint64_t *)&qword_1EEF5D2A0);
  }
  return result;
}

uint64_t sub_1B1CAEA20(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1B1A02758(255, &qword_1EEF5C0A0, (uint64_t)&type metadata for ScriptParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1B5E23E74](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1CAEA9C()
{
  unint64_t result;

  result = qword_1EEF5D2B8;
  if (!qword_1EEF5D2B8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22897A4, &type metadata for ScriptParameter);
    atomic_store(result, (unint64_t *)&qword_1EEF5D2B8);
  }
  return result;
}

unint64_t sub_1B1CAEAE0()
{
  unint64_t result;

  result = qword_1EEF5D2C8;
  if (!qword_1EEF5D2C8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AB40, &type metadata for EmitterScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D2C8);
  }
  return result;
}

unint64_t sub_1B1CAEB24()
{
  unint64_t result;

  result = qword_1EEF5D2E0;
  if (!qword_1EEF5D2E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AAF0, &type metadata for SimpleScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D2E0);
  }
  return result;
}

unint64_t sub_1B1CAEB68()
{
  unint64_t result;

  result = qword_1EEF5D2F8;
  if (!qword_1EEF5D2F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AAA0, &type metadata for MetalFunctionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D2F8);
  }
  return result;
}

unint64_t sub_1B1CAEBAC()
{
  unint64_t result;

  result = qword_1EEF5D300;
  if (!qword_1EEF5D300)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AA78, &type metadata for MetalFunctionScript.FunctionType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D300);
  }
  return result;
}

unint64_t sub_1B1CAEBF0()
{
  unint64_t result;

  result = qword_1EEF5D310;
  if (!qword_1EEF5D310)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AA50, &type metadata for MetalFunctionScript.FunctionType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D310);
  }
  return result;
}

unint64_t sub_1B1CAEC34()
{
  unint64_t result;

  result = qword_1ED4B8440;
  if (!qword_1ED4B8440)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AA00, &type metadata for ShaderScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8440);
  }
  return result;
}

unint64_t sub_1B1CAEC78()
{
  unint64_t result;

  result = qword_1EEF5D328;
  if (!qword_1EEF5D328)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A9B0, &type metadata for TriggerScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D328);
  }
  return result;
}

uint64_t sub_1B1CAECBC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1B1CAECD4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_1B1CAED0C(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 16) = *((_QWORD *)a1 + 2);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1B1CAED24()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1CAED48()
{
  uint64_t v0;

  sub_1B1B28D2C(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1B1CAED6C()
{
  unint64_t result;

  result = qword_1EEF5D340;
  if (!qword_1EEF5D340)
  {
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EEF5D340);
  }
  return result;
}

unint64_t sub_1B1CAEDB0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1B1B1DD24(result);
  return result;
}

uint64_t sub_1B1CAEDC4()
{
  uint64_t v0;

  sub_1B1B631E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1B1CAEDF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BAE70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B226D240;
  v2 = *(_QWORD **)(v0 + *(int *)(type metadata accessor for MetalFunctionScript(0) + 28));
  if (v2[2])
  {
    v4 = v2[4];
    v3 = v2[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = sub_1B1B5A32C(v4, v3, 0, 0xE000000000000000, 1, 1);
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 40) = v7;
  return v1;
}

_QWORD *sub_1B1CAEEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ShaderScript(0) + 28));
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1B1A06460();
  swift_bridgeObjectRetain();
  v3 = v1 + 40;
  while ((sub_1B2229274() & 1) == 0)
  {
    v3 += 16;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = *(_QWORD *)(v1 + 16);
      if (!v5)
        return v4;
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  v4 = sub_1B1C63044(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
    v4 = sub_1B1C63044(v6 > 1, v7 + 1, 1, v4);
  v4[2] = v7 + 1;
  v8 = &v4[2 * v7];
  v8[4] = 0xD000000000000029;
  v8[5] = 0x80000001B2337740;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
    return v4;
LABEL_11:
  swift_bridgeObjectRetain();
  v9 = v1 + 40;
  while ((sub_1B2229274() & 1) == 0)
  {
    v9 += 16;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1B1C63044(0, v4[2] + 1, 1, v4);
  v11 = v4[2];
  v10 = v4[3];
  if (v11 >= v10 >> 1)
    v4 = sub_1B1C63044(v10 > 1, v11 + 1, 1, v4);
  v4[2] = v11 + 1;
  v12 = &v4[2 * v11];
  v12[4] = 0xD00000000000002BLL;
  v12[5] = 0x80000001B2337710;
  return v4;
}

void sub_1B1CAF124(uint64_t a1)
{
  sub_1B1791524(a1, &qword_1ED4B7B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF1E50], MEMORY[0x1E0DF1F30]);
}

uint64_t sub_1B1CAF140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B1CAF19C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6;

  sub_1B1CAF208(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1B1CAF1D8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1B1CAF208(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1B1A1B6FC(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v6 = sub_1B2229124();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1B1CAF26C()
{
  unint64_t result;

  result = qword_1EEF5D358;
  if (!qword_1EEF5D358)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228914C, &type metadata for ScriptLocation.TextureType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D358);
  }
  return result;
}

uint64_t sub_1B1CAF2B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for VFXTriggerType(255);
    result = MEMORY[0x1B5E23E74](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptsHolder()
{
  return &type metadata for ScriptsHolder;
}

ValueMetadata *type metadata accessor for GraphScript.Info()
{
  return &type metadata for GraphScript.Info;
}

ValueMetadata *type metadata accessor for ShaderScript.Info()
{
  return &type metadata for ShaderScript.Info;
}

uint64_t _s17CodeSourceSnippetC9ParameterVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s17CodeSourceSnippetC9ParameterVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s17CodeSourceSnippetC9ParameterVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s17CodeSourceSnippetC9ParameterVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TriggerScript.Info()
{
  return &type metadata for TriggerScript.Info;
}

uint64_t getEnumTagSinglePayload for ShaderScriptParameter.BuiltinProperty(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
  {
    v6 = *a1;
    if (v6 >= 5)
      v7 = v6 - 4;
    else
      v7 = 0;
    if (v7 >= 0x13)
      return v7 - 18;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 22;
    if (a2 + 22 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B1CAF4AC + 4 * byte_1B2288D82[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for ShaderScriptParameter.BuiltinProperty(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 22;
  if (a3 + 22 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xEA)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1B1CAF558 + 4 * byte_1B2288D8C[v5]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1B1CAF58C + 4 * byte_1B2288D87[v5]))();
}

uint64_t sub_1B1CAF58C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAF594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CAF59CLL);
  return result;
}

uint64_t sub_1B1CAF5A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CAF5B0);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1B1CAF5B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAF5BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAF5C8(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 5)
    return v1 - 4;
  else
    return 0;
}

_BYTE *sub_1B1CAF5DC(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 4;
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.BuiltinProperty()
{
  return &type metadata for ShaderScriptParameter.BuiltinProperty;
}

unint64_t destroy for ShaderScriptParameter.VertexOutProperty(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return sub_1B1B28D2C(*(_QWORD *)(a1 + 16));
  }
  return result;
}

uint64_t _s3VFX21ShaderScriptParameterO17VertexOutPropertyOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    sub_1B1B632F0(v4);
    *(_QWORD *)(a1 + 16) = v4;
  }
  return a1;
}

_QWORD *assignWithCopy for ShaderScriptParameter.VertexOutProperty(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = a2[2];
      swift_bridgeObjectRetain();
      sub_1B1B632F0(v7);
      a1[2] = v7;
      return a1;
    }
LABEL_7:
    v8 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_1B1B28D2C(a1[2]);
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  sub_1B1B632F0(v5);
  v6 = a1[2];
  a1[2] = v5;
  sub_1B1B28D2C(v6);
  return a1;
}

uint64_t assignWithTake for ShaderScriptParameter.VertexOutProperty(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_1B1B28D2C(*(_QWORD *)(a1 + 16));
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1B1B28D2C(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderScriptParameter.VertexOutProperty(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF6 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483639);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 8;
  if (v4 >= 0xA)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShaderScriptParameter.VertexOutProperty(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF7)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483639;
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 8;
  }
  return result;
}

uint64_t sub_1B1CAF8A4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1B1CAF8BC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.VertexOutProperty()
{
  return &type metadata for ShaderScriptParameter.VertexOutProperty;
}

uint64_t _s3VFX14ScriptLocationO11TextureTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1B1CAF93C + 4 * byte_1B2288D96[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1B1CAF970 + 4 * byte_1B2288D91[v4]))();
}

uint64_t sub_1B1CAF970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAF978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CAF980);
  return result;
}

uint64_t sub_1B1CAF98C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CAF994);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1B1CAF998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAF9A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TriggerScript.CodingKeys()
{
  return &type metadata for TriggerScript.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ShaderScript.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B1CAFA08 + 4 * byte_1B2288DA0[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B1CAFA3C + 4 * byte_1B2288D9B[v4]))();
}

uint64_t sub_1B1CAFA3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAFA44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CAFA4CLL);
  return result;
}

uint64_t sub_1B1CAFA58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CAFA60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B1CAFA64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAFA6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShaderScript.CodingKeys()
{
  return &type metadata for ShaderScript.CodingKeys;
}

ValueMetadata *type metadata accessor for MetalFunctionScript.CodingKeys()
{
  return &type metadata for MetalFunctionScript.CodingKeys;
}

ValueMetadata *type metadata accessor for SimpleScript.CodingKeys()
{
  return &type metadata for SimpleScript.CodingKeys;
}

uint64_t _s3VFX19MetalFunctionScriptV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B1CAFAFC + 4 * byte_1B2288DAA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B1CAFB30 + 4 * byte_1B2288DA5[v4]))();
}

uint64_t sub_1B1CAFB30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAFB38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CAFB40);
  return result;
}

uint64_t sub_1B1CAFB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CAFB54);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B1CAFB58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAFB60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmitterScript.CodingKeys()
{
  return &type metadata for EmitterScript.CodingKeys;
}

ValueMetadata *type metadata accessor for GraphScript.CodingKeys()
{
  return &type metadata for GraphScript.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleUpdateScript.CodingKeys()
{
  return &type metadata for ParticleUpdateScript.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleInitScript.CodingKeys()
{
  return &type metadata for ParticleInitScript.CodingKeys;
}

ValueMetadata *type metadata accessor for ScriptParameter.CodingKeys()
{
  return &type metadata for ScriptParameter.CodingKeys;
}

uint64_t _s3VFX15ScriptParameterV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1CAFC14 + 4 * byte_1B2288DB4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1CAFC48 + 4 * byte_1B2288DAF[v4]))();
}

uint64_t sub_1B1CAFC48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAFC50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CAFC58);
  return result;
}

uint64_t sub_1B1CAFC64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CAFC6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1CAFC70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CAFC78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.CodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.CodingKeys;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.DirectCodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.DirectCodingKeys;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.PathCodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.PathCodingKeys;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator.CurrentCodingKeys()
{
  return &type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys;
}

ValueMetadata *type metadata accessor for vfx_virtual.texture()
{
  return &type metadata for vfx_virtual.texture;
}

ValueMetadata *type metadata accessor for vfx_virtual.half4()
{
  return &type metadata for vfx_virtual.half4;
}

ValueMetadata *type metadata accessor for vfx_virtual.half3()
{
  return &type metadata for vfx_virtual.half3;
}

ValueMetadata *type metadata accessor for vfx_virtual.half2()
{
  return &type metadata for vfx_virtual.half2;
}

ValueMetadata *type metadata accessor for vfx_virtual.half()
{
  return &type metadata for vfx_virtual.half;
}

uint64_t destroy for MetalFunctionScript.Info()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MetalFunctionScript.Info(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MetalFunctionScript.Info(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MetalFunctionScript.Info(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MetalFunctionScript.Info()
{
  return &type metadata for MetalFunctionScript.Info;
}

ValueMetadata *type metadata accessor for ParticleUpdateScript.Info()
{
  return &type metadata for ParticleUpdateScript.Info;
}

ValueMetadata *type metadata accessor for ParticleInitScript.Info()
{
  return &type metadata for ParticleInitScript.Info;
}

ValueMetadata *type metadata accessor for EmitterScript.Info()
{
  return &type metadata for EmitterScript.Info;
}

ValueMetadata *type metadata accessor for ShaderScriptRuntime()
{
  return &type metadata for ShaderScriptRuntime;
}

ValueMetadata *type metadata accessor for MetalFunctionScript.FunctionType()
{
  return &type metadata for MetalFunctionScript.FunctionType;
}

unint64_t destroy for ShaderScriptParameter(uint64_t a1)
{
  return sub_1B1B631E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for ShaderScriptParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B1B6326C(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ShaderScriptParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B1B6326C(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1B1B631E8(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for MeshBuffer(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ShaderScriptParameter(uint64_t a1, uint64_t a2)
{
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1B1B631E8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderScriptParameter(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderScriptParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B1CB00BC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 5u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1B1CB00D4(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter()
{
  return &type metadata for ShaderScriptParameter;
}

uint64_t sub_1B1CB0104(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ScriptLocation.EntityLocator(uint64_t a1)
{
  return sub_1B1A05648(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s3VFX14ScriptLocationO13EntityLocatorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B1CB0104(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ScriptLocation.EntityLocator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B1CB0104(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B1A05648(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ScriptLocation.EntityLocator(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B1A05648(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptLocation.EntityLocator(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScriptLocation.EntityLocator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B1CB0298(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1B1CB02B0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation.EntityLocator()
{
  return &type metadata for ScriptLocation.EntityLocator;
}

uint64_t _s3VFX14ScriptLocationO15BuiltinPropertyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1CB0324 + 4 * byte_1B2288DBE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1CB0358 + 4 * byte_1B2288DB9[v4]))();
}

uint64_t sub_1B1CB0358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB0360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CB0368);
  return result;
}

uint64_t sub_1B1CB0374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CB037CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1CB0380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB0388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScriptLocation.BuiltinProperty()
{
  return &type metadata for ScriptLocation.BuiltinProperty;
}

ValueMetadata *type metadata accessor for ScriptAccess()
{
  return &type metadata for ScriptAccess;
}

unint64_t sub_1B1CB03B8()
{
  unint64_t result;

  result = qword_1EEF5D368;
  if (!qword_1EEF5D368)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22899E0, &type metadata for ScriptAccess);
    atomic_store(result, (unint64_t *)&qword_1EEF5D368);
  }
  return result;
}

unint64_t sub_1B1CB0400()
{
  unint64_t result;

  result = qword_1EEF5D370;
  if (!qword_1EEF5D370)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22899B0, &type metadata for ScriptAccess);
    atomic_store(result, (unint64_t *)&qword_1EEF5D370);
  }
  return result;
}

unint64_t sub_1B1CB0448()
{
  unint64_t result;

  result = qword_1EEF5D378;
  if (!qword_1EEF5D378)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289A08, &type metadata for ScriptAccess);
    atomic_store(result, (unint64_t *)&qword_1EEF5D378);
  }
  return result;
}

unint64_t sub_1B1CB0490()
{
  unint64_t result;

  result = qword_1EEF5D380;
  if (!qword_1EEF5D380)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289A40, &type metadata for ScriptAccess);
    atomic_store(result, (unint64_t *)&qword_1EEF5D380);
  }
  return result;
}

unint64_t sub_1B1CB04D8()
{
  unint64_t result;

  result = qword_1EEF5D388;
  if (!qword_1EEF5D388)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289BE8, &type metadata for ScriptLocation.BuiltinProperty);
    atomic_store(result, (unint64_t *)&qword_1EEF5D388);
  }
  return result;
}

unint64_t sub_1B1CB0520()
{
  unint64_t result;

  result = qword_1EEF5D390;
  if (!qword_1EEF5D390)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289C10, &type metadata for ScriptLocation.EntityLocator);
    atomic_store(result, (unint64_t *)&qword_1EEF5D390);
  }
  return result;
}

unint64_t sub_1B1CB0568()
{
  unint64_t result;

  result = qword_1EEF5D398;
  if (!qword_1EEF5D398)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289C78, &type metadata for ShaderScriptParameter);
    atomic_store(result, (unint64_t *)&qword_1EEF5D398);
  }
  return result;
}

unint64_t sub_1B1CB05B0()
{
  unint64_t result;

  result = qword_1EEF5D3A0;
  if (!qword_1EEF5D3A0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289D58, &type metadata for MetalFunctionScript.FunctionType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3A0);
  }
  return result;
}

unint64_t sub_1B1CB05F8()
{
  unint64_t result;

  result = qword_1EEF5D3A8;
  if (!qword_1EEF5D3A8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289E60, &type metadata for ScriptLocation.EntityLocator.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3A8);
  }
  return result;
}

unint64_t sub_1B1CB0640()
{
  unint64_t result;

  result = qword_1EEF5D3B0;
  if (!qword_1EEF5D3B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289F18, &type metadata for ScriptLocation.EntityLocator.DirectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3B0);
  }
  return result;
}

unint64_t sub_1B1CB0688()
{
  unint64_t result;

  result = qword_1EEF5D3B8;
  if (!qword_1EEF5D3B8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289FD0, &type metadata for ScriptLocation.EntityLocator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3B8);
  }
  return result;
}

unint64_t sub_1B1CB06D0()
{
  unint64_t result;

  result = qword_1EEF5D3C0;
  if (!qword_1EEF5D3C0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A088, &type metadata for ScriptParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3C0);
  }
  return result;
}

unint64_t sub_1B1CB0718()
{
  unint64_t result;

  result = qword_1EEF5D3C8;
  if (!qword_1EEF5D3C8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A178, &type metadata for ParticleInitScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3C8);
  }
  return result;
}

unint64_t sub_1B1CB0760()
{
  unint64_t result;

  result = qword_1EEF5D3D0;
  if (!qword_1EEF5D3D0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A268, &type metadata for ParticleUpdateScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3D0);
  }
  return result;
}

unint64_t sub_1B1CB07A8()
{
  unint64_t result;

  result = qword_1EEF5D3D8;
  if (!qword_1EEF5D3D8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A358, &type metadata for GraphScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3D8);
  }
  return result;
}

unint64_t sub_1B1CB07F0()
{
  unint64_t result;

  result = qword_1EEF5D3E0;
  if (!qword_1EEF5D3E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A448, &type metadata for EmitterScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3E0);
  }
  return result;
}

unint64_t sub_1B1CB0838()
{
  unint64_t result;

  result = qword_1EEF5D3E8;
  if (!qword_1EEF5D3E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A538, &type metadata for SimpleScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3E8);
  }
  return result;
}

unint64_t sub_1B1CB0880()
{
  unint64_t result;

  result = qword_1EEF5D3F0;
  if (!qword_1EEF5D3F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A628, &type metadata for MetalFunctionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3F0);
  }
  return result;
}

unint64_t sub_1B1CB08C8()
{
  unint64_t result;

  result = qword_1EEF5D3F8;
  if (!qword_1EEF5D3F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A718, &type metadata for ShaderScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D3F8);
  }
  return result;
}

unint64_t sub_1B1CB0910()
{
  unint64_t result;

  result = qword_1EEF5D400;
  if (!qword_1EEF5D400)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A808, &type metadata for TriggerScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D400);
  }
  return result;
}

unint64_t sub_1B1CB0958()
{
  unint64_t result;

  result = qword_1EEF5D408;
  if (!qword_1EEF5D408)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A830, &type metadata for ShaderScriptParameter.VertexOutProperty);
    atomic_store(result, (unint64_t *)&qword_1EEF5D408);
  }
  return result;
}

unint64_t sub_1B1CB09A0()
{
  unint64_t result;

  result = qword_1EEF5D410;
  if (!qword_1EEF5D410)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A898, &type metadata for ShaderScriptParameter.BuiltinProperty);
    atomic_store(result, (unint64_t *)&qword_1EEF5D410);
  }
  return result;
}

unint64_t sub_1B1CB09E8()
{
  unint64_t result;

  result = qword_1EEF5D418;
  if (!qword_1EEF5D418)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A740, &type metadata for TriggerScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D418);
  }
  return result;
}

unint64_t sub_1B1CB0A30()
{
  unint64_t result;

  result = qword_1EEF5D420;
  if (!qword_1EEF5D420)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A768, &type metadata for TriggerScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D420);
  }
  return result;
}

unint64_t sub_1B1CB0A78()
{
  unint64_t result;

  result = qword_1ED4B8450;
  if (!qword_1ED4B8450)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A650, &type metadata for ShaderScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8450);
  }
  return result;
}

unint64_t sub_1B1CB0AC0()
{
  unint64_t result;

  result = qword_1ED4B8448;
  if (!qword_1ED4B8448)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A678, &type metadata for ShaderScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B8448);
  }
  return result;
}

unint64_t sub_1B1CB0B08()
{
  unint64_t result;

  result = qword_1EEF5D428;
  if (!qword_1EEF5D428)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A560, &type metadata for MetalFunctionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D428);
  }
  return result;
}

unint64_t sub_1B1CB0B50()
{
  unint64_t result;

  result = qword_1EEF5D430;
  if (!qword_1EEF5D430)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A588, &type metadata for MetalFunctionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D430);
  }
  return result;
}

unint64_t sub_1B1CB0B98()
{
  unint64_t result;

  result = qword_1EEF5D438;
  if (!qword_1EEF5D438)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A470, &type metadata for SimpleScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D438);
  }
  return result;
}

unint64_t sub_1B1CB0BE0()
{
  unint64_t result;

  result = qword_1EEF5D440;
  if (!qword_1EEF5D440)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A498, &type metadata for SimpleScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D440);
  }
  return result;
}

unint64_t sub_1B1CB0C28()
{
  unint64_t result;

  result = qword_1EEF5D448;
  if (!qword_1EEF5D448)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A380, &type metadata for EmitterScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D448);
  }
  return result;
}

unint64_t sub_1B1CB0C70()
{
  unint64_t result;

  result = qword_1EEF5D450;
  if (!qword_1EEF5D450)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A3A8, &type metadata for EmitterScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D450);
  }
  return result;
}

unint64_t sub_1B1CB0CB8()
{
  unint64_t result;

  result = qword_1EEF5D458;
  if (!qword_1EEF5D458)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A290, &type metadata for GraphScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D458);
  }
  return result;
}

unint64_t sub_1B1CB0D00()
{
  unint64_t result;

  result = qword_1EEF5D460;
  if (!qword_1EEF5D460)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A2B8, &type metadata for GraphScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D460);
  }
  return result;
}

unint64_t sub_1B1CB0D48()
{
  unint64_t result;

  result = qword_1EEF5D468;
  if (!qword_1EEF5D468)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A1A0, &type metadata for ParticleUpdateScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D468);
  }
  return result;
}

unint64_t sub_1B1CB0D90()
{
  unint64_t result;

  result = qword_1EEF5D470;
  if (!qword_1EEF5D470)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A1C8, &type metadata for ParticleUpdateScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D470);
  }
  return result;
}

unint64_t sub_1B1CB0DD8()
{
  unint64_t result;

  result = qword_1ED4B9330;
  if (!qword_1ED4B9330)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A0B0, &type metadata for ParticleInitScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9330);
  }
  return result;
}

unint64_t sub_1B1CB0E20()
{
  unint64_t result;

  result = qword_1ED4B9328;
  if (!qword_1ED4B9328)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A0D8, &type metadata for ParticleInitScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9328);
  }
  return result;
}

unint64_t sub_1B1CB0E68()
{
  unint64_t result;

  result = qword_1EEF5D478;
  if (!qword_1EEF5D478)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289FF8, &type metadata for ScriptParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D478);
  }
  return result;
}

unint64_t sub_1B1CB0EB0()
{
  unint64_t result;

  result = qword_1EEF5D480;
  if (!qword_1EEF5D480)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228A020, &type metadata for ScriptParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D480);
  }
  return result;
}

unint64_t sub_1B1CB0EF8()
{
  unint64_t result;

  result = qword_1EEF5D488;
  if (!qword_1EEF5D488)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289F40, &type metadata for ScriptLocation.EntityLocator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D488);
  }
  return result;
}

unint64_t sub_1B1CB0F40()
{
  unint64_t result;

  result = qword_1EEF5D490;
  if (!qword_1EEF5D490)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289F68, &type metadata for ScriptLocation.EntityLocator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D490);
  }
  return result;
}

unint64_t sub_1B1CB0F88()
{
  unint64_t result;

  result = qword_1EEF5D498;
  if (!qword_1EEF5D498)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289E88, &type metadata for ScriptLocation.EntityLocator.DirectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D498);
  }
  return result;
}

unint64_t sub_1B1CB0FD0()
{
  unint64_t result;

  result = qword_1EEF5D4A0;
  if (!qword_1EEF5D4A0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289EB0, &type metadata for ScriptLocation.EntityLocator.DirectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4A0);
  }
  return result;
}

unint64_t sub_1B1CB1018()
{
  unint64_t result;

  result = qword_1EEF5D4A8;
  if (!qword_1EEF5D4A8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289DD0, &type metadata for ScriptLocation.EntityLocator.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4A8);
  }
  return result;
}

unint64_t sub_1B1CB1060()
{
  unint64_t result;

  result = qword_1EEF5D4B0;
  if (!qword_1EEF5D4B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289DF8, &type metadata for ScriptLocation.EntityLocator.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4B0);
  }
  return result;
}

unint64_t sub_1B1CB10A8()
{
  unint64_t result;

  result = qword_1EEF5D4B8;
  if (!qword_1EEF5D4B8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289D80, &type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4B8);
  }
  return result;
}

unint64_t sub_1B1CB10F0()
{
  unint64_t result;

  result = qword_1EEF5D4C0;
  if (!qword_1EEF5D4C0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289DA8, &type metadata for ScriptLocation.EntityLocator.CurrentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4C0);
  }
  return result;
}

unint64_t sub_1B1CB1134()
{
  unint64_t result;

  result = qword_1EEF5D4C8;
  if (!qword_1EEF5D4C8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2289D20, &type metadata for MetalFunctionScript.FunctionType);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4C8);
  }
  return result;
}

_QWORD *sub_1B1CB1178(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v5;
  _QWORD v6[4];

  sub_1B1B95524(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  v3 = sub_1B19FA070(a1, a1[3]);
  sub_1B222A138();
  if (!v1)
  {
    sub_1B19FA070(v6, v6[3]);
    sub_1B1CB129C(0, &qword_1EEF5D4D0, (uint64_t (*)(uint64_t, ValueMetadata *, ValueMetadata *, unint64_t))MEMORY[0x1E0DEA048]);
    sub_1B1CB1344(&qword_1EEF5D4D8, (uint64_t (*)(void))sub_1B1CB1300, (uint64_t (*)(void))sub_1B1A08878, MEMORY[0x1E0DEA0D8]);
    sub_1B2229D6C();
    v3 = v5;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

void sub_1B1CB129C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1B1A057A8();
    v7 = a3(a1, &type metadata for ScriptScheduling, &type metadata for Entity, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1B1CB1300()
{
  unint64_t result;

  result = qword_1EEF5D4E0;
  if (!qword_1EEF5D4E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22BB440, &type metadata for ScriptScheduling);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4E0);
  }
  return result;
}

uint64_t sub_1B1CB1344(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1B1CB129C(255, &qword_1EEF5D4D0, (uint64_t (*)(uint64_t, ValueMetadata *, ValueMetadata *, unint64_t))MEMORY[0x1E0DEA048]);
    v10 = v9;
    v11[0] = a2();
    v11[1] = a3();
    result = MEMORY[0x1B5E23E74](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1CB13CC()
{
  unint64_t result;

  result = qword_1EEF5D4F0;
  if (!qword_1EEF5D4F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22BB418, &type metadata for ScriptScheduling);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4F0);
  }
  return result;
}

uint64_t _s3VFX21ShaderScriptParameterO19FragmentOutPropertyOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1CB1450 + 4 * byte_1B2288DC3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1CB1470 + 4 * byte_1B2288DC8[v4]))();
}

_BYTE *sub_1B1CB1450(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1CB1470(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1CB1478(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1CB1480(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1CB1488(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1CB1490(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.FragmentOutProperty()
{
  return &type metadata for ShaderScriptParameter.FragmentOutProperty;
}

uint64_t _s3VFX21ShaderScriptParameterO18FragmentInPropertyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B1CB14F8 + 4 * byte_1B2288DD2[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B1CB152C + 4 * byte_1B2288DCD[v4]))();
}

uint64_t sub_1B1CB152C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB1534(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CB153CLL);
  return result;
}

uint64_t sub_1B1CB1548(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CB1550);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B1CB1554(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB155C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.FragmentInProperty()
{
  return &type metadata for ShaderScriptParameter.FragmentInProperty;
}

uint64_t storeEnumTagSinglePayload for ShaderScriptParameter.VertexProperty(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1B1CB15C4 + 4 * byte_1B2288DDC[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1B1CB15F8 + 4 * byte_1B2288DD7[v4]))();
}

uint64_t sub_1B1CB15F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB1600(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CB1608);
  return result;
}

uint64_t sub_1B1CB1614(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CB161CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1B1CB1620(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB1628(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShaderScriptParameter.VertexProperty()
{
  return &type metadata for ShaderScriptParameter.VertexProperty;
}

unint64_t sub_1B1CB1648()
{
  unint64_t result;

  result = qword_1EEF5D4F8;
  if (!qword_1EEF5D4F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AF24, &type metadata for ShaderScriptParameter.VertexProperty);
    atomic_store(result, (unint64_t *)&qword_1EEF5D4F8);
  }
  return result;
}

unint64_t sub_1B1CB1690()
{
  unint64_t result;

  result = qword_1EEF5D500;
  if (!qword_1EEF5D500)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AF8C, &type metadata for ShaderScriptParameter.FragmentInProperty);
    atomic_store(result, (unint64_t *)&qword_1EEF5D500);
  }
  return result;
}

unint64_t sub_1B1CB16D8()
{
  unint64_t result;

  result = qword_1EEF5D508;
  if (!qword_1EEF5D508)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228AFF4, &type metadata for ShaderScriptParameter.FragmentOutProperty);
    atomic_store(result, (unint64_t *)&qword_1EEF5D508);
  }
  return result;
}

uint64_t sub_1B1CB1754(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1B22296AC();
    swift_bridgeObjectRelease();
    v7 = 0;
    if (v6)
    {
      while (1)
      {
LABEL_3:
        if ((a3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x1B5E21018](v7, a3);
        }
        else
        {
          v8 = *(_QWORD *)(a3 + 8 * v7 + 32);
          swift_retain();
        }
        v11 = v8;
        v9 = a1(&v11);
        swift_release();
        if (v3 || (v9 & 1) != 0)
          break;
        if (v6 == ++v7)
          return 0;
      }
    }
  }
  else
  {
    v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = 0;
    if (v6)
      goto LABEL_3;
  }
  return v7;
}

id sub_1B1CB1864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = sub_1B222826C();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock, v11);
  sub_1B2228260();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, a3, v8);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_onUserTemplatesChanged;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *(_QWORD *)(v4 + v16);
  *(_QWORD *)(v4 + v16) = 0x8000000000000000;
  sub_1B1B8508C((uint64_t)sub_1B1CB734C, v15, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + v16) = v20;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  return objc_msgSend(*(id *)(v4 + v14), sel_unlock);
}

id sub_1B1CB19A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v86[8];
  __int128 v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  int *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t, uint64_t);
  void (*v104)(char *, unint64_t, uint64_t);
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;

  sub_1B1B1F358();
  v95 = v1;
  MEMORY[0x1E0C80A78](v1, v2);
  v94 = (char *)v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1B222820C();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93, v4);
  v91 = (char *)v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B22287A0();
  MEMORY[0x1E0C80A78](v6, v7);
  v86[7] = (char *)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B2228110();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B17928A0();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock, v16);
  v98 = v0;
  v19 = *(void **)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_bundle);
  v20 = (void *)sub_1B2228728();
  v21 = (void *)sub_1B2228728();
  v22 = objc_msgSend(v19, sel_URLsForResourcesWithExtension_subdirectory_, v20, v21);

  if (v22)
  {
    v23 = sub_1B2228AB8();

    v24 = *(_QWORD *)(v23 + 16);
    v86[4] = v23;
    if (v24)
    {
      v25 = 0;
      v88 = 0;
      v106 = v23 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      v26 = *(_QWORD *)(v10 + 72);
      v104 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v105 = v26;
      v86[3] = "than one output paramter: ";
      v86[6] = 0x80000001B2337D30;
      v86[5] = 0x80000001B2337D60;
      v87 = xmmword_1B226D240;
      v86[2] = 0x80000001B2337D80;
      v100 = v13;
      v101 = v9;
      v99 = v24;
      v96 = v18;
      v97 = v10;
      v104(v18, v106, v9);
      while (1)
      {
        v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
        v103(v18, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9) == 1)
          goto LABEL_46;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v18, v9);
        v111 = sub_1B222802C();
        v112 = v27;
        v109 = 1600285036;
        v110 = 0xE400000000000000;
        sub_1B1A2044C();
        sub_1B1A20490();
        v28 = sub_1B222862C();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
          goto LABEL_5;
        }
        v111 = sub_1B222805C();
        v112 = v29;
        sub_1B1A06460();
        v30 = sub_1B2229280();
        swift_bridgeObjectRelease();
        v31 = *(_QWORD *)(v30 + 16);
        v102 = v25;
        if (v31)
        {
          v111 = MEMORY[0x1E0DEE9D8];
          sub_1B2029FFC(0, v31, 0);
          v32 = (_QWORD *)v111;
          v33 = (uint64_t *)(v30 + 56);
          do
          {
            v34 = *(v33 - 3);
            v35 = *(v33 - 2);
            v36 = *(v33 - 1);
            v37 = *v33;
            swift_bridgeObjectRetain();
            v38 = MEMORY[0x1B5E20388](v34, v35, v36, v37);
            v40 = v39;
            swift_bridgeObjectRelease();
            v111 = (uint64_t)v32;
            v42 = v32[2];
            v41 = v32[3];
            if (v42 >= v41 >> 1)
            {
              sub_1B2029FFC(v41 > 1, v42 + 1, 1);
              v32 = (_QWORD *)v111;
            }
            v32[2] = v42 + 1;
            v43 = &v32[2 * v42];
            v43[4] = v38;
            v43[5] = v40;
            v33 += 4;
            --v31;
          }
          while (v31);
          swift_bridgeObjectRelease();
          v13 = v100;
          v9 = v101;
          v24 = v99;
          v25 = v102;
        }
        else
        {
          swift_bridgeObjectRelease();
          v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        if (v32[2] != 3)
        {
          v10 = v97;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v13, v9);
          swift_bridgeObjectRelease();
LABEL_30:
          v18 = v96;
          goto LABEL_5;
        }
        v44 = v32[5];
        v111 = v32[4];
        v112 = v44;
        v109 = 1600285036;
        v110 = 0xE400000000000000;
        v107 = 0;
        v108 = 0xE000000000000000;
        v45 = sub_1B222922C();
        v47 = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v48 = sub_1B2229730();
        swift_bridgeObjectRelease();
        if (v48 >= 3)
          LOBYTE(v48) = 3;
        v49 = *(_QWORD *)(v98 + 32);
        if (!*(_QWORD *)(v49 + 16))
          goto LABEL_33;
        swift_bridgeObjectRetain();
        v50 = sub_1B1DC3B00(v45, v47);
        if ((v51 & 1) == 0)
          break;
        v52 = *(_QWORD *)(*(_QWORD *)(v49 + 56) + 8 * v50);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2228788();
        v53 = v88;
        v54 = sub_1B2228704();
        v88 = v53;
        if (!v53)
        {
          v79 = v54;
          v80 = v55;
          if (!*(_QWORD *)(v52 + 56))
          {
            *(_QWORD *)(v52 + 56) = sub_1B1B7E04C(MEMORY[0x1E0DEE9D8]);
            swift_bridgeObjectRelease();
          }
          v81 = sub_1B1A1FCE0(v79, v80);
          v83 = v82;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v111 = *(_QWORD *)(v52 + 56);
          *(_QWORD *)(v52 + 56) = 0x8000000000000000;
          sub_1B1B84E64(v81, v83, v48, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v52 + 56) = v111;
          swift_release();
          swift_bridgeObjectRelease();
          v10 = v97;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v13, v9);
          goto LABEL_30;
        }
        if (qword_1ED4BF430 != -1)
          swift_once();
        v111 = 0;
        v112 = 0xE000000000000000;
        v90 = qword_1ED4D0FB0;
        swift_retain();
        sub_1B2229430();
        sub_1B2228890();
        sub_1B19E52CC((unint64_t *)&qword_1EEF5AE60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        sub_1B2229A0C();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        v57 = v111;
        v56 = v112;
        v58 = sub_1B2228E9C();
        v59 = MEMORY[0x1E0DEA968];
        if (qword_1ED4BF658 != -1)
          swift_once();
        v86[1] = v52;
        v60 = qword_1ED4BF688;
        swift_retain();
        if (v60 != -1)
          swift_once();
        sub_1B1B42948();
        v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = v87;
        *(_QWORD *)(v61 + 56) = v59;
        *(_QWORD *)(v61 + 64) = sub_1B1B1F47C();
        *(_QWORD *)(v61 + 32) = v57;
        *(_QWORD *)(v61 + 40) = v56;
        swift_bridgeObjectRetain();
        sub_1B222835C();
        swift_bridgeObjectRelease();
        swift_retain();
        v62 = v91;
        sub_1B2228200();
        v63 = (uint64_t)v94;
        v64 = v95[12];
        v65 = v57;
        v66 = v95[16];
        v67 = &v94[v95[20]];
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v94, v62, v93);
        *(_BYTE *)(v63 + v64) = v58;
        *(_QWORD *)(v63 + v66) = 0;
        *(_QWORD *)v67 = v65;
        *((_QWORD *)v67 + 1) = v56;
        swift_bridgeObjectRetain();
        sub_1B2228428();
        swift_release();
        sub_1B1A04628(v63, (uint64_t (*)(_QWORD))sub_1B1B1F358);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();

        swift_release();
        v10 = v97;
        v13 = v100;
        v9 = v101;
        (*(void (**)(char *, uint64_t))(v97 + 8))(v100, v101);
        v88 = 0;
LABEL_40:
        v18 = v96;
        v24 = v99;
        v25 = v102;
LABEL_5:
        if (++v25 == v24)
        {
          v103(v18, 1, 1, v9);
          goto LABEL_46;
        }
        v104(v18, v106 + v105 * v25, v9);
      }
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      v68 = MEMORY[0x1E0DEA968];
      if (qword_1ED4BF430 != -1)
        swift_once();
      v111 = 0;
      v112 = 0xE000000000000000;
      v90 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      sub_1B2228890();
      sub_1B19E52CC((unint64_t *)&qword_1EEF5AE60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      sub_1B2229A0C();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      v69 = v111;
      v70 = v112;
      v71 = sub_1B2228E9C();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v72 = qword_1ED4BF688;
      swift_retain();
      if (v72 != -1)
        swift_once();
      sub_1B1B42948();
      v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = v87;
      *(_QWORD *)(v73 + 56) = v68;
      *(_QWORD *)(v73 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v73 + 32) = v69;
      *(_QWORD *)(v73 + 40) = v70;
      swift_bridgeObjectRetain();
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v74 = v91;
      sub_1B2228200();
      v75 = (uint64_t)v94;
      v76 = v95[12];
      v77 = v95[16];
      v78 = &v94[v95[20]];
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v94, v74, v93);
      *(_BYTE *)(v75 + v76) = v71;
      *(_QWORD *)(v75 + v77) = 0;
      *(_QWORD *)v78 = v69;
      *((_QWORD *)v78 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v75, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v97;
      v13 = v100;
      v9 = v101;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v100, v101);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
LABEL_46:
    swift_bridgeObjectRelease();
  }
  return objc_msgSend(*(id *)(v98 + v89), sel_unlock);
}

id sub_1B1CB25C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  id result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60[5];
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[6];

  v1 = v0;
  v2 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = MEMORY[0x1E0DEE9E0];
  v3 = *(_QWORD *)(v0 + 32);
  v4 = &selRef_setWeights_;
  if (!*(_QWORD *)(v3 + 16))
    return objc_msgSend(*(id *)(v1 + v2), v4[311]);
  swift_bridgeObjectRetain();
  v5 = sub_1B1DC3B00(0x69737265766E6F43, 0xEA00000000006E6FLL);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return objc_msgSend(*(id *)(v1 + v2), v4[311]);
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
  swift_retain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 40);
  v66[0] = MEMORY[0x1E0DEE9D8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1B22296AC();
    v54 = v7;
    v55 = v2;
    if (v9)
      goto LABEL_5;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v54 = v7;
    v55 = v2;
    if (v9)
    {
LABEL_5:
      v10 = 0;
      while (1)
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v11 = MEMORY[0x1B5E21018](v10, v8);
        }
        else
        {
          v11 = *(_QWORD *)(v8 + 32 + 8 * v10);
          swift_retain();
        }
        v12 = *(_QWORD **)(v11 + 168);
        v13 = *(_QWORD **)(v11 + 208);
        if (v12)
        {
          if (v13)
          {
            v14 = v12[2];
            if (v14 == v13[2])
            {
              if (!v14 || v12 == v13)
              {
LABEL_27:
                swift_release();
                goto LABEL_8;
              }
              v15 = v12[4] == v13[4] && v12[5] == v13[5];
              if (v15 || (sub_1B2229D24() & 1) != 0)
              {
                if (v14 == 1)
                  goto LABEL_27;
                if (v12[6] == v13[6] && v12[7] == v13[7] || (sub_1B2229D24() & 1) != 0)
                {
                  v16 = v14 - 2;
                  if (!v16)
                    goto LABEL_27;
                  v17 = v13 + 9;
                  v18 = v12 + 9;
                  while (1)
                  {
                    v19 = *(v18 - 1) == *(v17 - 1) && *v18 == *v17;
                    if (!v19 && (sub_1B2229D24() & 1) == 0)
                      break;
                    v17 += 2;
                    v18 += 2;
                    if (!--v16)
                      goto LABEL_27;
                  }
                }
              }
            }
          }
        }
        else if (!v13)
        {
          goto LABEL_27;
        }
        sub_1B2229520();
        sub_1B2229568();
        sub_1B2229574();
        sub_1B2229538();
LABEL_8:
        if (++v10 == v9)
        {
          swift_bridgeObjectRelease();
          v20 = v66[0];
          v7 = v54;
          v2 = v55;
          goto LABEL_40;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x1E0DEE9D8];
LABEL_40:
  *(_QWORD *)(v7 + 40) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v7 + 40);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v22 = sub_1B22296AC();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_42;
    goto LABEL_79;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v22)
  {
LABEL_79:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = &selRef_setWeights_;
    return objc_msgSend(*(id *)(v1 + v2), v4[311]);
  }
LABEL_42:
  v23 = 0;
  while ((v21 & 0xC000000000000001) != 0)
  {
    v24 = MEMORY[0x1B5E21018](v23, v21);
    v25 = *(_QWORD **)(v24 + 168);
    if (v25)
      goto LABEL_50;
LABEL_45:
    swift_release();
    if (v22 == ++v23)
      goto LABEL_79;
  }
  v24 = *(_QWORD *)(v21 + 8 * v23 + 32);
  swift_retain();
  v25 = *(_QWORD **)(v24 + 168);
  if (!v25)
    goto LABEL_45;
LABEL_50:
  v26 = *(_QWORD **)(v24 + 208);
  if (!v26)
    goto LABEL_45;
  v27 = *(unsigned __int8 *)(v24 + 304);
  v28 = v27 != 2 && (v27 & 1) == 0;
  if (v28 || v26[2] != 1 || v25[2] != 1)
    goto LABEL_45;
  v29 = v25[4];
  v30 = v25[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1E0E85C(v29, v30, v60);
  v52 = v60[1];
  v53 = v60[0];
  v50 = v60[3];
  v51 = v60[2];
  v49 = v60[4];
  v31 = v26[4];
  v32 = v26[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B1E0E85C(v31, v32, &v61);
  v56 = v62;
  v57 = v61;
  v66[0] = v61;
  v66[1] = v62;
  v66[2] = v63;
  v66[3] = v64;
  v66[4] = v65;
  objc_msgSend(*(id *)(v1 + v2), sel_lock);
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 48) + 16))
  {
    objc_msgSend(*(id *)(v1 + v2), sel_unlock);
    goto LABEL_61;
  }
  swift_bridgeObjectRetain();
  sub_1B1DC3EBC((uint64_t)v66);
  v34 = v33;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v1 + v2), sel_unlock);
  if ((v34 & 1) == 0)
  {
LABEL_61:
    sub_1B19FA2B4(v57, v56);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v58 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 48) = 0x8000000000000000;
    sub_1B1B84F7C(MEMORY[0x1E0DEE9D8], (uint64_t)v66, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v1 + 48) = v58;
    swift_bridgeObjectRelease();
    sub_1B19F8C58(&v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
  }
  sub_1B19F8C58(&v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20350);
  swift_retain();
  v36 = swift_isUniquelyReferenced_nonNull_native();
  v37 = *(_QWORD **)(v1 + 48);
  v59 = v37;
  *(_QWORD *)(v1 + 48) = 0x8000000000000000;
  sub_1B19FA2B4(v57, v56);
  v39 = sub_1B1DC3EBC((uint64_t)v66);
  v40 = v38;
  v41 = v37[2] + ((v38 & 1) == 0);
  if (v37[3] >= v41)
  {
    if ((v36 & 1) != 0)
    {
      if ((v38 & 1) == 0)
        goto LABEL_70;
    }
    else
    {
      sub_1B1EA9788();
      if ((v40 & 1) == 0)
        goto LABEL_70;
    }
    goto LABEL_68;
  }
  sub_1B1E937F8(v41, v36);
  v42 = sub_1B1DC3EBC((uint64_t)v66);
  if ((v40 & 1) == (v43 & 1))
  {
    v39 = v42;
    if ((v40 & 1) == 0)
    {
LABEL_70:
      v44 = 0;
      goto LABEL_71;
    }
LABEL_68:
    v44 = *(_QWORD **)(v37[7] + 8 * v39);
LABEL_71:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v44 = sub_1B1C63EA0(0, v44[2] + 1, 1, v44);
    v46 = v44[2];
    v45 = v44[3];
    if (v46 >= v45 >> 1)
      v44 = sub_1B1C63EA0(v45 > 1, v46 + 1, 1, v44);
    v44[2] = v46 + 1;
    v47 = &v44[6 * v46];
    v47[4] = v53;
    v47[5] = v52;
    v47[6] = v51;
    v47[7] = v50;
    v47[8] = v49;
    v47[9] = v24;
    if ((v40 & 1) != 0)
    {
      *(_QWORD *)(v59[7] + 8 * v39) = v44;
      sub_1B19F8C58(&v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
    }
    else
    {
      v59[(v39 >> 6) + 8] |= 1 << v39;
      sub_1B19FA278((uint64_t)v66, v59[6] + 40 * v39);
      *(_QWORD *)(v59[7] + 8 * v39) = v44;
      ++v59[2];
    }
    v2 = v55;
    *(_QWORD *)(v1 + 48) = v59;
    sub_1B19F8C58(&v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
    sub_1B19F8C58(&v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
    goto LABEL_45;
  }
  result = (id)sub_1B2229FC4();
  __break(1u);
  return result;
}

uint64_t sub_1B1CB2CB0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = MEMORY[0x1E0DEE9E0];
  v1[7] = MEMORY[0x1E0DEE9E0];
  result = swift_bridgeObjectRelease();
  v1[8] = v2;
  v4 = v1[4];
  if (*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B1DC3B00(0x7469736F706D6F43, 0xEB000000006E6F69);
    if ((v6 & 1) == 0)
      return swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_retain();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v7 + 40);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v9 = sub_1B22296AC();
      if (v9)
      {
LABEL_5:
        v10 = 0;
        do
        {
          if ((v8 & 0xC000000000000001) != 0)
          {
            v11 = MEMORY[0x1B5E21018](v10, v8);
          }
          else
          {
            v11 = *(_QWORD *)(v8 + 8 * v10 + 32);
            swift_retain();
          }
          ++v10;
          v12 = v11;
          sub_1B1CB2E38(&v12, (uint64_t)v1);
          swift_release();
        }
        while (v9 != v10);
      }
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v9)
        goto LABEL_5;
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

_QWORD *sub_1B1CB2E38(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;
  int v3;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v2 = (_QWORD *)*result;
  v3 = *(unsigned __int8 *)(*result + 304);
  if (v3 != 2 && (v3 & 1) == 0)
    return result;
  v6 = v2[2];
  v7 = v2[3];
  v8 = v6 == 0x65736F706D6F43 && v7 == 0xE700000000000000;
  if (v8 || (sub_1B2229D24() & 1) != 0)
  {
    v9 = v2[25];
    if (v9 && *(_QWORD *)(v9 + 16) == 1)
    {
      v10 = (_QWORD *)v2[26];
      if (v10[2])
      {
        v12 = v10[4];
        v11 = v10[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        v12 = 0;
        v11 = 0;
      }
      sub_1B1E0E85C(v12, v11, (uint64_t *)&v24);
      v27 = v24;
      v28 = v25;
      v29 = v26;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v22 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a2 + 56) = 0x8000000000000000;
      sub_1B1B87934((uint64_t)v2, (uint64_t)&v27, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(a2 + 56) = v22;
LABEL_32:
      swift_bridgeObjectRelease();
      return sub_1B19F8C58(&v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1A20360);
    }
    if (qword_1ED4BF430 == -1)
      goto LABEL_15;
    goto LABEL_39;
  }
  v15 = v6 == 0x736F706D6F636544 && v7 == 0xE900000000000065;
  if (!v15 && (sub_1B2229D24() & 1) == 0)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    *((_QWORD *)&v27 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B1ED7610();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v13 = sub_1B2228E90();
    goto LABEL_16;
  }
  v16 = v2[20];
  if (v16 && *(_QWORD *)(v16 + 16) == 1)
  {
    v17 = (_QWORD *)v2[21];
    if (v17[2])
    {
      v19 = v17[4];
      v18 = v17[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v19 = 0;
      v18 = 0;
    }
    sub_1B1E0E85C(v19, v18, (uint64_t *)&v24);
    v27 = v24;
    v28 = v25;
    v29 = v26;
    swift_retain();
    v21 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a2 + 64) = 0x8000000000000000;
    sub_1B1B87934((uint64_t)v2, (uint64_t)&v27, v21);
    *(_QWORD *)(a2 + 64) = v23;
    goto LABEL_32;
  }
  if (qword_1ED4BF430 != -1)
LABEL_39:
    swift_once();
LABEL_15:
  *((_QWORD *)&v27 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  sub_1B2228890();
  sub_1B1ED7610();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v13 = sub_1B2228E9C();
LABEL_16:
  v14 = v13;
  if (qword_1ED4BF658 != -1)
    swift_once();
  *(_QWORD *)&v27 = 0;
  swift_retain();
  sub_1B1F1AD70(v14, (uint64_t *)&v27, 0, 0xE000000000000000);
  swift_release();
  swift_bridgeObjectRelease();
  return (_QWORD *)swift_release();
}

uint64_t sub_1B1CB3288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, unint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69[16];
  id v70;
  unint64_t v71;
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v4 = sub_1B2228110();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v62 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v61 = (char *)&v54 - v10;
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v11, v12);
  v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B222805C();
  v16 = v15;
  _s7LibraryCMa();
  swift_allocObject();
  v17 = sub_1B1A1BC34(v14, v16);
  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v19 = (void *)sub_1B2228074();
  v70 = 0;
  v20 = objc_msgSend(v18, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v19, 0, 0, &v70);

  v21 = v70;
  if (v20)
  {
    v55 = a2;
    v22 = sub_1B2228AB8();
    v23 = v21;

    v24 = sub_1B1CB6BD0(v22);
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v60 = v17;
      v26 = v24 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v57 = *(_QWORD *)(v5 + 72);
      v65 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v66 = v2;
      v54 = v24;
      swift_bridgeObjectRetain();
      v27 = v63;
      v58 = v4;
      v59 = v5;
      v28 = v61;
      while (1)
      {
        v65(v27, v26, v4);
        v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        v29(v27, 0, 1, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v27, 1, v4) == 1)
          break;
        v56 = v29;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v28, v27, v4);
        v30 = (void *)sub_1B222805C();
        v64 = v25;
        v70 = v30;
        v71 = v31;
        strcpy(v69, ".template.json");
        v69[15] = -18;
        v67 = 0;
        v68 = 0xE000000000000000;
        sub_1B1A06460();
        v32 = sub_1B222922C();
        v34 = v33;
        swift_bridgeObjectRelease();
        v35 = (uint64_t)v62;
        v65(v62, (unint64_t)v28, v4);
        _s11TemplateSetCMa();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v36 = sub_1B207F248(v32, v34, v35);
        swift_bridgeObjectRetain();
        swift_retain();
        v37 = v60;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v70 = (id)v37[6];
        v37[6] = 0x8000000000000000;
        sub_1B1B87A44((uint64_t)v36, v32, v34, isUniquelyReferenced_nonNull_native);
        v37[6] = v70;
        swift_bridgeObjectRelease();
        v39 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v39, v40);
        v41 = swift_bridgeObjectRetain();
        v42 = v66;
        v4 = v58;
        v5 = v59;
        sub_1B1A1FB40(v41, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB731C);
        v66 = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = v64;
        swift_release();
        v27 = v63;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
        v26 += v57;
        v25 = v43 - 1;
        if (!v25)
        {
          v17 = v60;
          v56(v27, 1, 1, v4);
          goto LABEL_10;
        }
      }
      v17 = v60;
    }
    else
    {
      v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      swift_bridgeObjectRetain();
      v46(v63, 1, 1, v4);
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    if (*(_QWORD *)(v17[6] + 16))
    {
      v47 = v17[2];
      v48 = v17[3];
      swift_bridgeObjectRetain();
      swift_retain();
      v49 = v55;
      v50 = swift_isUniquelyReferenced_nonNull_native();
      v70 = *(id *)(v49 + 40);
      *(_QWORD *)(v49 + 40) = 0x8000000000000000;
      sub_1B1B851E8((uint64_t)v17, v47, v48, v50);
      *(_QWORD *)(v49 + 40) = v70;
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      v70 = 0;
      v71 = 0xE000000000000000;
      swift_retain();
      sub_1B2229430();
      sub_1B2228890();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      v51 = (uint64_t)v70;
      v52 = v71;
      v53 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v70 = 0;
      swift_retain();
      sub_1B1F1AD70(v53, (uint64_t *)&v70, v51, v52);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    v44 = v70;
    sub_1B2227FB4();

    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_1B1CB3928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  ValueMetadata *v5;

  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1DDB9E4(1919251285, 0xE400000000000000);
  swift_bridgeObjectRelease();
  v4 = xmmword_1EEF5ECE0;
  swift_bridgeObjectRetain();
  sub_1B2228890();
  v0 = v4;
  v5 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  *(_QWORD *)&v4 = 1;
  sub_1B1E02AF4(v0, *((uint64_t *)&v4 + 1), (uint64_t)&v4);
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v4);
  v1 = aCategory_1[0];
  v2 = aCategory_1[1];
  v5 = &_s8TemplateV8CategoryON;
  LOBYTE(v4) = 2;
  swift_bridgeObjectRetain();
  sub_1B1E02AF4(v1, v2, (uint64_t)&v4);
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v4);
}

void sub_1B1CB3A74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  void (*v33)(uint64_t, char *, uint64_t);
  void (*v34)(char *, unint64_t, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(uint64_t, char *, uint64_t);
  char *v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  id v62;
  unint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v56 - v8;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v56 - v12;
  v14 = sub_1B2228110();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v56 - v21;
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v56 - v25;
  sub_1B19EC90C(a1, (uint64_t)v13);
  v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v60(v13, 1, v14) == 1)
  {
    sub_1B1A04628((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1B17928A0);
    v27 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v28 = objc_msgSend(v27, sel_URLsForDirectory_inDomains_, 5, 1);

    v29 = sub_1B2228AB8();
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v31 = v29 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v32 = *(char **)(v15 + 72);
      v33 = (void (*)(uint64_t, char *, uint64_t))v29;
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
      v58 = v33;
      v59 = v32;
      swift_bridgeObjectRetain();
      while (1)
      {
        v34(v5, v31, v14);
        v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v35(v5, 0, 1, v14);
        if (v60(v5, 1, v14) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v5, v14);
        sub_1B1CB41A4((uint64_t)v18, 0x6475745320584656, 0xEA00000000006F69, (unsigned int (*)(_QWORD, _QWORD, _QWORD))0x6D65546870617247, 0xEE00736574616C70, v61);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
        v31 += (unint64_t)v59;
        if (!--v30)
          goto LABEL_14;
      }
    }
    else
    {
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      swift_bridgeObjectRetain();
LABEL_14:
      v35(v5, 1, 1, v14);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v57 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v57(v26, v13, v14);
    v36 = v61 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir;
    sub_1B1A04628(v61 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir, (uint64_t (*)(_QWORD))sub_1B17928A0);
    v58 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
    v58(v36, v26, v14);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v37(v36, 0, 1, v14);
    v38 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v59 = v26;
    v39 = (void *)sub_1B2228074();
    v62 = 0;
    v40 = objc_msgSend(v38, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v39, 0, 0, &v62);

    v41 = v62;
    if (v40)
    {
      v42 = sub_1B2228AB8();
      v43 = v41;

      v44 = sub_1B1CB63B0(v42, qword_1E63A3250);
      swift_arrayDestroy();
      v45 = *(_QWORD *)(v44 + 16);
      v56 = v44;
      if (v45)
      {
        v46 = v44 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v47 = *(_QWORD *)(v15 + 72);
        swift_bridgeObjectRetain();
        v48 = v59;
        while (1)
        {
          v58((uint64_t)v9, (char *)v46, v14);
          v37((uint64_t)v9, 0, 1, v14);
          if (v60(v9, 1, v14) == 1)
            break;
          v57(v22, v9, v14);
          sub_1B1CB3288((uint64_t)v22, v61);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
          v46 += v47;
          --v45;
          v48 = v59;
          if (!v45)
            goto LABEL_17;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v48 = v59;
LABEL_17:
        v37((uint64_t)v9, 1, 1, v14);
      }
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v48, v14);
    }
    else
    {
      v49 = v62;
      v50 = (void *)sub_1B2227FB4();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v59, v14);
      v65 = v50;
      sub_1B1A025A0(0, (unint64_t *)&qword_1ED4BB030);
      sub_1B1CB72E0();
      swift_dynamicCast();
      v51 = v64;
      if (qword_1ED4BF430 != -1)
        swift_once();
      v62 = 0;
      v63 = 0xE000000000000000;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v62 = (id)0xD00000000000002CLL;
      v63 = 0x80000001B2337B90;
      v52 = objc_msgSend(v51, sel_localizedDescription);
      sub_1B222874C();

      sub_1B2228890();
      swift_bridgeObjectRelease();
      v53 = (uint64_t)v62;
      v54 = v63;
      v55 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v62 = 0;
      swift_retain();
      sub_1B1F1AD70(v55, (uint64_t *)&v62, v53, v54);

      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

    }
  }
}

uint64_t sub_1B1CB41A4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int (*a4)(_QWORD, _QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  id v31;
  void *v32;
  unsigned int v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  id v48;
  void *v49;
  _QWORD v51[2];
  id v52;
  uint64_t v53;
  char *v54;
  unsigned int (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  id v58[2];

  v56 = a5;
  v57 = a6;
  v55 = a4;
  v58[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B2228110();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v54 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v51 - v19;
  v52 = (id)objc_opt_self();
  v21 = objc_msgSend(v52, sel_defaultManager);
  v51[1] = a1;
  v22 = (void *)sub_1B2228074();
  v58[0] = 0;
  v23 = objc_msgSend(v21, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v22, 0, 0, v58);

  v24 = v58[0];
  if (!v23)
    goto LABEL_12;
  v25 = sub_1B2228AB8();
  v26 = v24;

  swift_bridgeObjectRetain();
  v27 = swift_bridgeObjectRetain();
  v28 = v53;
  v29 = sub_1B1CB66D8(v27, a2, a3);
  v30 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
    v51[0] = v28;
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v52, sel_defaultManager);
    v53 = a2;
    sub_1B22280A4();
    sub_1B22280D4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    v32 = (void *)sub_1B2228728();
    swift_bridgeObjectRelease();
    v58[0] = 0;
    v33 = objc_msgSend(v31, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v32, 1, 0, v58);

    v34 = v58[0];
    if (!v33)
    {
      v49 = v34;
      sub_1B2227FB4();

      return swift_willThrow();
    }
    v35 = objc_msgSend(v52, sel_defaultManager);
    v36 = (void *)sub_1B2228074();
    v58[0] = 0;
    v37 = objc_msgSend(v35, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v36, 0, 0, v58);

    v38 = v58[0];
    if (v37)
    {
      v25 = sub_1B2228AB8();
      v39 = v38;

      a2 = v53;
      v30 = v51[0];
      goto LABEL_6;
    }
LABEL_12:
    v48 = v58[0];
    sub_1B2227FB4();

    return swift_willThrow();
  }
LABEL_6:
  swift_bridgeObjectRetain();
  v40 = (_QWORD *)sub_1B1CB6910(v25, a2, a3);
  v41 = v30;
  swift_bridgeObjectRelease();
  v42 = v40[2];
  if (v42)
  {
    v43 = *(unsigned __int8 *)(v14 + 80);
    v52 = v40;
    v44 = (char *)v40 + ((v43 + 32) & ~v43);
    v53 = *(_QWORD *)(v14 + 72);
    v45 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v46 = (uint64_t)v54;
    while (1)
    {
      v45(v12, v44, v13);
      v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v47(v12, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v46, v12, v13);
      sub_1B1CB463C(v46, v55, v56, v57);
      if (v41)
      {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v46, v13);
        return swift_bridgeObjectRelease();
      }
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v46, v13);
      v44 += v53;
      if (!--v42)
        goto LABEL_16;
    }
  }
  else
  {
    v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
LABEL_16:
    v47(v12, 1, 1, v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CB463C(uint64_t a1, unsigned int (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD, _QWORD, _QWORD);
  uint64_t v30;
  BOOL v31;
  id v32;
  id v33;
  void *v34;
  unsigned int v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  id v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  void (*v68)(uint64_t, uint64_t);
  void *v69;
  id v71;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unsigned int (*v85)(_QWORD, _QWORD, _QWORD);
  uint64_t v86;
  id v87[2];

  v85 = a2;
  v86 = a4;
  v87[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v5, v6);
  v77 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v78 = (char *)v72 - v10;
  v11 = sub_1B2228110();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v84 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v81 = (char *)v72 - v17;
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)v72 - v20;
  v79 = (id)objc_opt_self();
  v22 = objc_msgSend(v79, sel_defaultManager);
  v23 = (void *)sub_1B2228074();
  v87[0] = 0;
  v24 = objc_msgSend(v22, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v23, 0, 0, v87);

  v25 = v87[0];
  if (!v24)
    goto LABEL_20;
  v26 = sub_1B2228AB8();
  v27 = v25;

  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  v29 = v85;
  v30 = v83;
  v31 = sub_1B1CB66D8(v28, (uint64_t)v85, a3);
  v83 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v31)
  {
    swift_bridgeObjectRelease();
    v32 = v79;
    v33 = objc_msgSend(v79, sel_defaultManager);
    sub_1B22280A4();
    sub_1B22280D4();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
    v34 = (void *)sub_1B2228728();
    swift_bridgeObjectRelease();
    v87[0] = 0;
    v35 = objc_msgSend(v33, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v34, 1, 0, v87);

    v36 = v87[0];
    if (!v35)
    {
      v69 = v36;
      sub_1B2227FB4();

      return swift_willThrow();
    }
    v37 = objc_msgSend(v32, sel_defaultManager);
    v38 = (void *)sub_1B2228074();
    v87[0] = 0;
    v39 = objc_msgSend(v37, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v38, 0, 0, v87);

    v40 = v87[0];
    if (v39)
    {
      v26 = sub_1B2228AB8();
      v41 = v40;

      v29 = v85;
      goto LABEL_6;
    }
LABEL_20:
    v67 = v87[0];
    sub_1B2227FB4();

    return swift_willThrow();
  }
LABEL_6:
  swift_bridgeObjectRetain();
  v42 = v83;
  v43 = sub_1B1CB6910(v26, (uint64_t)v29, a3);
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(v43 + 16);
  v45 = v78;
  v72[1] = v43;
  v73 = v44;
  if (v44)
  {
    v46 = 0;
    v72[0] = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v75 = v43 + v72[0];
    v74 = v86 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir;
    v47 = *(_QWORD *)(v12 + 72);
    v82 = v12;
    v83 = v47;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    while (1)
    {
      v48(v45, v75 + v83 * v46, v11);
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v49(v45, 0, 1, v11);
      v85 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v12 + 48);
      if (v85(v45, 1, v11) == 1)
        break;
      v76 = v46;
      v50 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v51 = v48;
      v52 = v81;
      v50(v81, v45, v11);
      v53 = v74;
      sub_1B1A04628(v74, (uint64_t (*)(_QWORD))sub_1B17928A0);
      v54 = v51;
      v51((char *)v53, (uint64_t)v52, v11);
      v55 = v49;
      v49((char *)v53, 0, 1, v11);
      v56 = objc_msgSend(v79, sel_defaultManager);
      v57 = (void *)sub_1B2228074();
      v87[0] = 0;
      v58 = objc_msgSend(v56, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v57, 0, 0, v87);

      v59 = v87[0];
      if (!v58)
      {
        v71 = v87[0];
        sub_1B2227FB4();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v11);
        return swift_bridgeObjectRelease();
      }
      v60 = sub_1B2228AB8();
      v61 = v59;

      v62 = sub_1B1CB63B0(v60, qword_1E63A32A0);
      swift_arrayDestroy();
      v80 = v62;
      v63 = *(_QWORD *)(v62 + 16);
      if (v63)
      {
        v64 = v80 + v72[0];
        swift_bridgeObjectRetain();
        v48 = v54;
        v65 = v77;
        while (1)
        {
          v48(v65, v64, v11);
          v55(v65, 0, 1, v11);
          if (v85(v65, 1, v11) == 1)
            break;
          v66 = (uint64_t)v84;
          v50(v84, v65, v11);
          sub_1B1CB3288(v66, v86);
          if (v42)
          {
            v68 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
            v68(v66, v11);
            swift_bridgeObjectRelease_n();
            v68((uint64_t)v81, v11);
            return swift_bridgeObjectRelease();
          }
          (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v66, v11);
          v64 += v83;
          --v63;
          v48 = v54;
          if (!v63)
            goto LABEL_17;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v48 = v54;
        v65 = v77;
LABEL_17:
        v55(v65, 1, 1, v11);
      }
      swift_bridgeObjectRelease_n();
      v46 = v76 + 1;
      v12 = v82;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v11);
      v45 = v78;
      if (v46 == v73)
        goto LABEL_25;
    }
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
LABEL_25:
    v55(v45, 1, 1, v11);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CB4D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = sub_1B2228110();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v36 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v33 - v7;
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v0;
  v13 = *(void **)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_bundle);
  v14 = (void *)sub_1B2228728();
  v15 = (void *)sub_1B2228728();
  v16 = objc_msgSend(v13, sel_URLsForResourcesWithExtension_subdirectory_, v14, v15);

  if (v16)
  {
    v17 = sub_1B2228AB8();

    v18 = *(_QWORD *)(v17 + 16);
    v33 = v17;
    if (v18)
    {
      v19 = v17 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v20 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
      v38 = *(_QWORD *)(v2 + 72);
      v39 = v20;
      v34 = v12;
      v35 = v2;
      v20(v12, (char *)v19, v1);
      while (1)
      {
        v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
        v21(v12, 0, 1, v1);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1, v1) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, v12, v1);
        v42 = sub_1B222802C();
        v43 = v22;
        v40 = 1600285036;
        v41 = 0xE400000000000000;
        sub_1B1A2044C();
        sub_1B1A20490();
        v23 = sub_1B222862C();
        swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
        {
          v24 = (uint64_t)v36;
          v39(v36, v8, v1);
          _s7LibraryCMa();
          swift_allocObject();
          v25 = sub_1B1A1C79C(v24);
          v27 = v25[2];
          v26 = v25[3];
          swift_bridgeObjectRetain();
          swift_retain();
          v28 = v8;
          v29 = v37;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v42 = *(_QWORD *)(v29 + 32);
          *(_QWORD *)(v29 + 32) = 0x8000000000000000;
          sub_1B1B851E8((uint64_t)v25, v27, v26, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v29 + 32) = v42;
          v8 = v28;
          v12 = v34;
          v2 = v35;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B1A1CB20();
          swift_release();
        }
        (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
        v19 += v38;
        if (!--v18)
          goto LABEL_10;
        v39(v12, (char *)v19, v1);
      }
    }
    else
    {
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_10:
      v21(v12, 1, 1, v1);
    }
    swift_bridgeObjectRelease();
  }
  v31 = swift_bridgeObjectRetain();
  sub_1B1A1FB40(v31, sub_1B1CB72CC);
  return swift_bridgeObjectRelease();
}

void sub_1B1CB5098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(char *, unint64_t, uint64_t);
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  char v58[24];
  uint64_t v59;
  unint64_t v60;

  v51 = a3;
  v5 = sub_1B2228110();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v50 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v10);
  v55 = (char *)&v45 - v11;
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a4 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_bundle);
  v17 = (void *)sub_1B2228728();
  v59 = 0;
  v60 = 0xE000000000000000;
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v59 = 1600285036;
  v60 = 0xE400000000000000;
  sub_1B2228890();
  sub_1B2228890();
  v18 = (void *)sub_1B2228728();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_URLsForResourcesWithExtension_subdirectory_, v17, v18);

  if (v19)
  {
    v20 = sub_1B2228AB8();

    v21 = v20;
    v22 = 0;
    v23 = sub_1B1CB6BD0(v21);
    v24 = *(_QWORD *)(v23 + 16);
    v45 = v23;
    if (v24)
    {
      v25 = v23 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v48 = *(_QWORD *)(v6 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      swift_bridgeObjectRetain();
      v49 = v5;
      v47 = v15;
      while (1)
      {
        v26(v15, v25, v5);
        v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v27(v15, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
          break;
        v46 = v27;
        v28 = v6;
        v29 = v55;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v55, v15, v5);
        v54 = v24;
        v59 = sub_1B222802C();
        v60 = v30;
        strcpy(v58, ".template.json");
        v58[15] = -18;
        v56 = 0;
        v57 = 0xE000000000000000;
        sub_1B1A06460();
        v31 = sub_1B222922C();
        v33 = v32;
        swift_bridgeObjectRelease();
        v52 = v22;
        v53 = v25;
        v34 = (uint64_t)v50;
        v26(v50, (unint64_t)v29, v5);
        _s11TemplateSetCMa();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v35 = sub_1B207F248(v31, v33, v34);
        swift_bridgeObjectRetain();
        swift_retain();
        v36 = v26;
        v37 = v51;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v59 = *(_QWORD *)(v37 + 48);
        *(_QWORD *)(v37 + 48) = 0x8000000000000000;
        sub_1B1B87A44((uint64_t)v35, v31, v33, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v37 + 48) = v59;
        swift_bridgeObjectRelease();
        v39 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v39, v40);
        v26 = v36;
        v41 = swift_bridgeObjectRetain();
        v15 = v47;
        v22 = v52;
        v42 = v53;
        sub_1B1A1FB40(v41, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB72D4);
        swift_bridgeObjectRelease();
        v43 = v54;
        swift_bridgeObjectRelease();
        swift_release();
        v5 = v49;
        v6 = v28;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v55, v49);
        v25 = v42 + v48;
        v24 = v43 - 1;
        if (!v24)
        {
          v46(v15, 1, 1, v5);
          break;
        }
      }
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      swift_bridgeObjectRetain();
      v44(v15, 1, 1, v5);
    }
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1B1CB5514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float32x4_t v9;
  int v10;
  __int128 v12;
  ValueMetadata *v13;

  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  sub_1B1DDB9E4(0x6E69746C697542, 0xE700000000000000);
  swift_bridgeObjectRelease();
  v12 = xmmword_1EEF5ECE0;
  swift_bridgeObjectRetain();
  sub_1B2228890();
  v5 = v12;
  v13 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  *(_QWORD *)&v12 = 1;
  sub_1B1E02AF4(v5, *((uint64_t *)&v12 + 1), (uint64_t)&v12);
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
  v6 = aCategory_1[0];
  v7 = aCategory_1[1];
  v13 = &_s8TemplateV8CategoryON;
  LOBYTE(v12) = 1;
  swift_bridgeObjectRetain();
  sub_1B1E02AF4(v6, v7, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
  v8 = *(_QWORD *)(a4 + 32);
  v9.i64[0] = *(_QWORD *)(v8 + 32);
  v9.i32[2] = *(_DWORD *)(v8 + 40);
  v9.i32[3] = 1.0;
  v10 = sub_1B1AE40EC(v9);
  v13 = &type metadata for ColorU8;
  LODWORD(v12) = v10;
  sub_1B1E02AF4(0x726F6C6F63, 0xE500000000000000, (uint64_t)&v12);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v12);
}

id sub_1B1CB56BC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  if ((*(_BYTE *)(v2 + 72) & 1) == 0)
  {
    *(_BYTE *)(v2 + 72) = 1;
    sub_1B1CB4D3C();
    sub_1B1CB3A74(a2);
    sub_1B1CB19A8();
    sub_1B1CB25C0();
    v6 = sub_1B1CB2CB0();
    if ((a1 & 1) != 0)
    {
      MEMORY[0x1E0C80A78](v6, v7);
      v8 = swift_bridgeObjectRetain();
      sub_1B1A1FB40(v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB72B0);
      v9 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v9, v10);
      v11 = swift_bridgeObjectRetain();
      sub_1B1A1FB40(v11, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB72B8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return objc_msgSend(*(id *)(v2 + v5), sel_unlock);
}

uint64_t sub_1B1CB582C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1B1A1FB40(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB7354);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CB5888()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1B1A1FB40(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB72C0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CB58E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  v2 = swift_bridgeObjectRetain();
  sub_1B1A1FB40(v2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB7284);
  v3 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v3, v4);
  v5 = swift_bridgeObjectRetain();
  sub_1B1A1FB40(v5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB7290);
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v0 + v1), sel_unlock);
  return 0;
}

uint64_t sub_1B1CB5A10(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;

  if ((*a4 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](result, a2);
    v4 = swift_bridgeObjectRetain();
    sub_1B1A1FB40(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB729C);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1CB5ADC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1B1A1FB40(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B1CB729C);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CB5B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  _QWORD v47[6];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = v6;
  v14 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  if (!a6)
  {
    if (*(_QWORD *)(*(_QWORD *)(v6 + 32) + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B1DC3B00(a1, a2);
      if ((v28 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = sub_1B1A1EEE8(a3, a4, a5, 0);
        swift_release();
LABEL_27:
        objc_msgSend(*(id *)(v6 + v14), sel_unlock);
        return v29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v29 = 0;
    goto LABEL_27;
  }
  v48 = v14;
  v55 = a5;
  v56 = a6;
  v53 = a1;
  v54 = a2;
  v51 = a3;
  v52 = a4;
  v15 = *(_QWORD *)(v6 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_codeSourceSnippetRemapping);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (1)
  {
    v49 = a1;
    v50 = a2;
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    sub_1B2228890();
    swift_bridgeObjectRetain();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v15 + 16))
      break;
    v16 = sub_1B1DC3B00(v49, v50);
    if ((v17 & 1) == 0)
      break;
    v18 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B1CB7014(v19, v20, &v53, &v51, &v55);
    swift_bridgeObjectRelease();
    a1 = v53;
    a2 = v54;
  }
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v7
                  + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_codeSourceSnippetRemappingWithValueTransfer);
  v49 = a1;
  v50 = a2;
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  swift_bridgeObjectRetain();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v21 + 16))
  {
    v22 = sub_1B1DC3B00(v49, v50);
    v23 = v48;
    if ((v24 & 1) != 0)
    {
      v25 = (uint64_t *)(*(_QWORD *)(v21 + 56) + 16 * v22);
      v26 = *v25;
      v27 = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B1CB7014(v26, v27, &v53, &v51, &v55);
      swift_bridgeObjectRelease();
      a2 = v54;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = v48;
  }
  v30 = *(_QWORD *)(v7 + 32);
  if (!*(_QWORD *)(v30 + 16))
    goto LABEL_22;
  v31 = v53;
  swift_bridgeObjectRetain();
  v32 = sub_1B1DC3B00(v31, a2);
  if ((v33 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v34 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v32);
  swift_retain();
  swift_bridgeObjectRelease();
  v35 = swift_bridgeObjectRelease();
  v36 = v52;
  v37 = v56;
  v38 = *(_QWORD *)(v34 + 40);
  MEMORY[0x1E0C80A78](v35, v39);
  v47[2] = v40;
  v47[3] = v36;
  v47[4] = v41;
  v47[5] = v37;
  swift_bridgeObjectRetain();
  v42 = sub_1B1CB1754((uint64_t (*)(uint64_t *))sub_1B1CB6FF4, (uint64_t)v47, v38);
  v44 = v43;
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
  {
    v45 = *(_QWORD *)(v34 + 40);
    if ((v45 & 0xC000000000000001) != 0)
    {
      v29 = MEMORY[0x1B5E21018](v42);
    }
    else
    {
      v29 = *(_QWORD *)(v45 + 8 * v42 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_24;
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_23:
  swift_bridgeObjectRelease();
  v29 = 0;
LABEL_24:
  objc_msgSend(*(id *)(v7 + v23), sel_unlock, v48);
  return v29;
}

uint64_t sub_1B1CB5FE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[5];

  v2 = v1;
  v4 = OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_lock), sel_lock);
  v5 = *(_QWORD *)(v1 + 48);
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_11;
  sub_1B19F8C58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
  swift_bridgeObjectRetain();
  v6 = sub_1B1DC3EBC((uint64_t)a1);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1B19F8C58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
LABEL_11:
    objc_msgSend(*(id *)(v2 + v4), sel_unlock);
    return 0;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B19F8C58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = (uint64_t *)(v8 + 72);
    while (1)
    {
      sub_1B19FA278((uint64_t)(v10 - 5), (uint64_t)v18);
      v11 = *v10;
      sub_1B19F8C58(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19FA2B4);
      swift_retain();
      v12 = sub_1B1E03DBC();
      v14 = v13;
      if (v12 == sub_1B1E03DBC() && v14 == v15)
        break;
      v16 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_15;
      sub_1B19F8C58(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
      swift_release();
      v10 += 6;
      if (!--v9)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    swift_bridgeObjectRelease_n();
    sub_1B19F8C58(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B19F9FEC);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v11 = 0;
  }
  objc_msgSend(*(id *)(v2 + v4), sel_unlock);
  return v11;
}

uint64_t sub_1B1CB61EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1A04628(v0 + OBJC_IVAR____TtCO3VFX21GraphV1CodeGeneration9Resources_vfxGraphTemplatesDir, (uint64_t (*)(_QWORD))sub_1B17928A0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B1CB62A0()
{
  sub_1B1CB61EC();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1CB62C4()
{
  return _s9ResourcesCMa();
}

uint64_t _s9ResourcesCMa()
{
  uint64_t result;

  result = qword_1EEF5D520;
  if (!qword_1EEF5D520)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B1CB6308()
{
  unint64_t v0;

  sub_1B17928A0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1B1CB63B0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B2228110();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v35 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v12, v13);
  v42 = (char *)v33 - v15;
  v43 = MEMORY[0x1E0DEE9D8];
  v40 = *(_QWORD *)(a1 + 16);
  v33[1] = a1;
  if (v40)
  {
    v16 = 0;
    v34 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v39 = a1 + v34;
    v41 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    v37 = v7;
    v38 = v17;
    v33[0] = a2 + 7;
    v36 = v9;
    v17(v7, a1 + v34, v8, v14);
    while (1)
    {
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v18)(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
        goto LABEL_26;
      v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v19(v42, v7, v8);
      v20 = sub_1B222805C();
      v22 = v21;
      v23 = a2;
      v24 = a2[2];
      if (v24)
      {
        v25 = v20;
        if (a2[4] == v20 && a2[5] == v21 || (sub_1B2229D24() & 1) != 0)
          goto LABEL_3;
        v26 = v24 - 1;
        if (v24 != 1)
          break;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      v19(v35, v42, v8);
      v29 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B202A3E0(0, *(_QWORD *)(v29 + 16) + 1, 1);
        v29 = v43;
      }
      v31 = *(_QWORD *)(v29 + 16);
      v30 = *(_QWORD *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1B202A3E0(v30 > 1, v31 + 1, 1);
        v29 = v43;
      }
      *(_QWORD *)(v29 + 16) = v31 + 1;
      v19((char *)(v29 + v34 + v31 * v41), v35, v8);
      v43 = v29;
      a2 = v23;
      v9 = v36;
LABEL_4:
      ++v16;
      v7 = v37;
      if (v16 == v40)
        goto LABEL_25;
      v38(v37, v39 + v41 * v16, v8, v14);
    }
    v27 = (_QWORD *)v33[0];
    while (1)
    {
      v28 = *(v27 - 1) == v25 && *v27 == v22;
      if (v28 || (sub_1B2229D24() & 1) != 0)
        break;
      v27 += 2;
      if (!--v26)
        goto LABEL_19;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    v9 = v36;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v8);
    a2 = v23;
    goto LABEL_4;
  }
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
LABEL_25:
  v18(v7, 1, 1, v8, v14);
LABEL_26:
  swift_bridgeObjectRelease();
  sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1B17928A0);
  return v43;
}

BOOL sub_1B1CB66D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  int v17;
  _BOOL8 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;

  v30 = sub_1B2228110();
  v6 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30, v7);
  v31 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v26 = a1;
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v15 = v30;
    v28 = v12;
    while (1)
    {
      v29(v12, v14, v15);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v16(v12, 0, 1, v15);
      v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v15);
      v18 = v17 != 1;
      if (v17 == 1)
        break;
      v19 = v12;
      v20 = v6;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v31, v19, v15);
      if (sub_1B222805C() == a2 && v21 == a3)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v30);
        v18 = 1;
        break;
      }
      v22 = a2;
      v23 = a3;
      v24 = sub_1B2229D24();
      swift_bridgeObjectRelease();
      v15 = v30;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v31, v30);
      if ((v24 & 1) != 0)
        break;
      v14 += v27;
      --v13;
      a3 = v23;
      a2 = v22;
      v6 = v20;
      v12 = v28;
      if (!v13)
        goto LABEL_10;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v15 = v30;
LABEL_10:
    v16(v12, 1, 1, v15);
    v18 = 0;
  }
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1B1CB6910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, __n128);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v36 = a2;
  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B2228110();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = MEMORY[0x1E0C80A78](v13, v14);
  v38 = (char *)&v30 - v16;
  v39 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(a1 + 16);
  v30 = a1;
  if (v17)
  {
    v31 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v32 = a3;
    v18 = a1 + v31;
    v19 = *(_QWORD *)(v10 + 72);
    v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
    v34 = v10;
    v35 = v20;
    v33 = v19;
    v20(v8, v18, v9, v15);
    while (1)
    {
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v22)(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        goto LABEL_18;
      v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v23(v38, v8, v9);
      if (sub_1B222805C() == v36 && v24 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = sub_1B2229D24();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          v10 = v34;
          (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v9);
          v21 = v33;
          goto LABEL_4;
        }
      }
      v23(v37, v38, v9);
      v26 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B202A3E0(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v26 = v39;
      }
      v28 = *(_QWORD *)(v26 + 16);
      v27 = *(_QWORD *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1B202A3E0(v27 > 1, v28 + 1, 1);
        v26 = v39;
      }
      *(_QWORD *)(v26 + 16) = v28 + 1;
      v21 = v33;
      v23((char *)(v26 + v31 + v28 * v33), v37, v9);
      v39 = v26;
      a3 = v32;
      v10 = v34;
LABEL_4:
      v18 += v21;
      if (!--v17)
        goto LABEL_17;
      v35(v8, v18, v9, v15);
    }
  }
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
LABEL_17:
  v22(v8, 1, 1, v9, v15);
LABEL_18:
  swift_bridgeObjectRelease();
  sub_1B1A04628((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1B17928A0);
  return v39;
}

uint64_t sub_1B1CB6BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, __n128);
  char *v35;
  uint64_t v36;

  sub_1B17928A0();
  MEMORY[0x1E0C80A78](v2, v3);
  v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B2228110();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v35 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (char *)&v27 - v11;
  v36 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(a1 + 16);
  v27 = a1;
  if (v14)
  {
    v28 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v29 = v6;
    v15 = a1 + v28;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
    v33 = *(_QWORD *)(v6 + 72);
    v34 = v16;
    v17 = (uint64_t)v31;
    v30 = (char *)&v27 - v11;
    v16((uint64_t)v31, v15, v5, v12);
    while (1)
    {
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v32)(v17, 0, 1, v5);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5) == 1)
        break;
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
      v20(v13, v17, v5);
      sub_1B222805C();
      v21 = v13;
      v22 = sub_1B2228920();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        v20(v35, (uint64_t)v21, v5);
        v23 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B202A3E0(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v36;
        }
        v19 = v33;
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1B202A3E0(v24 > 1, v25 + 1, 1);
          v23 = v36;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        v20((char *)(v23 + v28 + v25 * v19), (uint64_t)v35, v5);
        v36 = v23;
        v13 = v30;
        v17 = (uint64_t)v31;
        v6 = v29;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v5);
        v13 = v21;
        v19 = v33;
      }
      v15 += v19;
      if (!--v14)
      {
        v32(v17, 1, 1, v5, v18);
        break;
      }
      v34(v17, v15, v5, v18);
    }
  }
  else
  {
    v17 = (uint64_t)v31;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v31, 1, 1, v5, v12);
  }
  swift_bridgeObjectRelease();
  sub_1B1A04628(v17, (uint64_t (*)(_QWORD))sub_1B17928A0);
  return v36;
}

uint64_t sub_1B1CB6E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v14 = sub_1B1DC3B00(a2, a3);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v14);
  swift_retain();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 48);
  if (!*(_QWORD *)(v17 + 16))
    goto LABEL_13;
  swift_bridgeObjectRetain();
  v18 = sub_1B1DC3B00(a4, a5);
  if ((v19 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
  swift_retain();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 40);
  if (!*(_QWORD *)(v21 + 16))
  {
LABEL_12:
    swift_release();
LABEL_13:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  v22 = sub_1B1DC3B00(a6, a7);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_retain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v24;
}

uint64_t sub_1B1CB6FF4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B1A1EFEC(a1, v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t sub_1B1CB7014(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1A06460();
  v8 = (_QWORD *)sub_1B2229280();
  v9 = v8[4];
  v10 = v8[5];
  v11 = v8[6];
  v12 = v8[7];
  swift_bridgeObjectRetain();
  v13 = MEMORY[0x1B5E20388](v9, v10, v11, v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  *a3 = v13;
  a3[1] = v15;
  v16 = v8[8];
  v17 = v8[9];
  v18 = v8[10];
  v19 = v8[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x1B5E20388](v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)sub_1B2229280();
  swift_bridgeObjectRelease();
  v21 = v20[2];
  if (v21)
  {
    v22 = v20[4];
    v23 = v20[5];
    v25 = v20[6];
    v24 = v20[7];
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = 0;
    v23 = 0;
    v25 = 0;
    v24 = 0;
  }
  sub_1B1C940D4(0, v21 != 0);
  v26 = MEMORY[0x1B5E20388](v22, v23, v25, v24);
  v28 = v27;
  swift_bridgeObjectRelease();
  *a4 = v26;
  a4[1] = v28;
  sub_1B1CB7230();
  sub_1B19E52CC(&qword_1EEF5D538, (uint64_t (*)(uint64_t))sub_1B1CB7230, MEMORY[0x1E0DEAF38]);
  sub_1B1A06504();
  v29 = sub_1B22289BC();
  v31 = v30;
  result = swift_bridgeObjectRelease();
  *a5 = v29;
  a5[1] = v31;
  return result;
}

void sub_1B1CB7230()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEF5D530)
  {
    v0 = sub_1B2228B6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEF5D530);
  }
}

uint64_t sub_1B1CB7284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1CB5A10(a1, a2, a3, *(_BYTE **)(v3 + 16));
}

uint64_t sub_1B1CB7290()
{
  return sub_1B1CB5ADC();
}

uint64_t sub_1B1CB72A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1A1D588(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(_QWORD *)(v3 + 40), *(uint64_t **)(v3 + 48));
}

uint64_t sub_1B1CB72B0()
{
  return sub_1B1CB582C();
}

uint64_t sub_1B1CB72B8()
{
  return sub_1B1CB5888();
}

uint64_t sub_1B1CB72C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1A1D634(a1, a2, a3);
}

void sub_1B1CB72CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1B1CB5098(a1, a2, a3, v3);
}

uint64_t sub_1B1CB72D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B1CB5514(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

unint64_t sub_1B1CB72E0()
{
  unint64_t result;

  result = qword_1EEF5D540;
  if (!qword_1EEF5D540)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEF5D540);
  }
  return result;
}

uint64_t sub_1B1CB731C()
{
  return sub_1B1CB3928();
}

uint64_t sub_1B1CB7328()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1CB734C()
{
  uint64_t v0;

  return sub_1B1CDBFAC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1B1CB7358(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  sub_1B1CB8398(0, &qword_1EEF5D548, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CB8354();
  sub_1B222A180();
  v13 = *v3;
  HIBYTE(v12) = 0;
  sub_1B1B4D924();
  sub_1B1B67480(qword_1EEF5B108, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEB880]);
  sub_1B2229958();
  if (!v2)
  {
    v13 = v3[1];
    HIBYTE(v12) = 1;
    sub_1B2229958();
    v13 = v3[2];
    HIBYTE(v12) = 2;
    sub_1B2229958();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B1CB74F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B1F92CA0(*a1, *a2);
}

uint64_t sub_1B1CB7504()
{
  unsigned __int8 *v0;

  return *v0 + 0x65676E615278;
}

uint64_t sub_1B1CB7520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1CB7EEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1CB7544()
{
  sub_1B1CB8354();
  return sub_1B222A1D4();
}

uint64_t sub_1B1CB756C()
{
  sub_1B1CB8354();
  return sub_1B222A1E0();
}

double sub_1B1CB7594@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_1B1CB8008(a1, &v5);
  if (!v2)
  {
    result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B1CB75D4(_QWORD *a1)
{
  return sub_1B1CB7358(a1);
}

uint64_t sub_1B1CB75E8()
{
  return type metadata accessor for ParticleOrientationInit.System();
}

double sub_1B1CB7604()
{
  uint64_t v0;
  double result;

  sub_1B1BF28AC(0, (unint64_t *)&qword_1ED4BAD80, (void (*)(uint64_t))sub_1B19ED84C);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v0 + 32) = &type metadata for Orientation;
  *(_QWORD *)(v0 + 40) = &off_1E6371540;
  return result;
}

double sub_1B1CB7658@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_1B228B0C0;
  result = 50.1238633;
  *(_QWORD *)(a1 + 16) = 0x40490FDAC0490FDALL;
  return result;
}

void sub_1B1CB7674(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  _QWORD *v22;
  size_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[12];
  _OWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _OWORD v50[2];
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;
  _BYTE v56[40];
  _QWORD v57[10];
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v5 = v4;
  v6 = *(_OWORD *)(a3 + 104);
  v54[0] = *(_OWORD *)(a3 + 88);
  v54[1] = v6;
  v55 = *(_QWORD *)(a3 + 120);
  sub_1B1E8FCE4(a2, (uint64_t)v54, 0x200000000, v39);
  sub_1B1A18378((uint64_t)v39, (uint64_t)v40, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v40[0])
  {
    v47 = v40[0];
    v48 = v40[1];
    v49 = v41;
    v32 = v46;
    if (v46 >= 1 && (v7 = v43) != 0)
    {
      v8 = v45;
      v62 = v45[4];
      v31 = v44;
      v9 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v27 = v45 + 13;
      v28 = v45 + 8;
      v29 = (uint64_t)(v45 + 6);
      v10 = (uint64_t *)(v42 + 24);
      v30 = v9;
      while (1)
      {
        v11 = *((unsigned int *)v10 - 6);
        v12 = *((unsigned int *)v10 - 5);
        v13 = *((unsigned int *)v10 - 4);
        v36 = *v10;
        v37 = *(v10 - 1);
        v14 = v10[2];
        v35 = v10[1];
        v38 = v7;
        v15 = v5;
        if (v9)
        {
          v16 = *(os_unfair_lock_s **)(v14 + 376);
          swift_retain();
          os_unfair_lock_lock(v16);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v62);
        sub_1B1A18378(v29, (uint64_t)v56, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
        v17 = v8[4];
        v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v8[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
        v8[7] = v18;
        v28[1] = 0;
        v28[2] = 0;
        *v28 = 0;
        swift_release();
        v57[0] = v31;
        v57[1] = v14;
        v57[2] = v8;
        v57[3] = v13;
        v57[4] = (v12 - v11 + v13);
        v57[5] = v32;
        v57[6] = v11;
        v57[7] = v12;
        v57[8] = 0;
        v57[9] = 0;
        v58 = 1;
        v59 = v37;
        v60 = v36;
        v61 = v35;
        sub_1B1CB7AA0((uint64_t)v57, a4, a1);
        if (v15)
          break;
        v52[0] = v47;
        v52[1] = v48;
        v53 = v49;
        sub_1B1F05D48(v8, (unsigned __int16 **)v52, (uint64_t)v56);
        v5 = 0;
        if (*(_QWORD *)(v8[13] + 16))
        {
          v19 = (_QWORD *)swift_bridgeObjectRetain();
          sub_1B1F05034(v19, v14);
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v21 = v8[13];
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            sub_1B1C92670(0, *(_QWORD *)(v21 + 16));
          }
          else
          {
            v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            if (*(_QWORD *)(v21 + 24) >= 2uLL)
            {
              sub_1B1BF28AC(0, (unint64_t *)&qword_1ED4BADE0, (void (*)(uint64_t))sub_1B1B1F228);
              v22 = (_QWORD *)swift_allocObject();
              v23 = j__malloc_size(v22);
              v22[2] = 0;
              v22[3] = 2 * ((uint64_t)(v23 - 32) / 72);
            }
            *v27 = v22;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v8[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            v24 = *(char **)(v14 + 232);
            v25 = *(char **)(v14 + 256);
            if (v24 == v25)
            {
              v26 = *(char **)(v14 + 240);
            }
            else
            {
              sub_1B1A1059C(v25, v24);
              v25 = *(char **)(v14 + 232);
              v26 = *(char **)(v14 + 240);
              if (v26 == v25)
              {
                v26 = 0;
                v25 = 0;
                *(_QWORD *)(v14 + 232) = 0;
                *(_QWORD *)(v14 + 240) = 0;
              }
            }
            *(_QWORD *)(v14 + 248) = v26;
            *(_QWORD *)(v14 + 256) = v25;
          }
        }
        ecs_stack_allocator_pop_snapshot(v62);
        v9 = v30;
        if ((v30 & 1) != 0)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
        }
        swift_release();
        v10 += 6;
        v7 = v38 - 1;
        if (v38 == 1)
          goto LABEL_24;
      }

      v50[0] = v47;
      v50[1] = v48;
      v51 = v49;
      sub_1B1F05D48(v8, (unsigned __int16 **)v50, (uint64_t)v56);
      sub_1B1F03804((char *)v14);
      ecs_stack_allocator_pop_snapshot(v62);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
      __break(1u);
    }
    else
    {
LABEL_24:
      sub_1B19ED748(v39);
    }
  }
}

void sub_1B1CB7AA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  float32x4_t v7;
  uint64_t v8;
  float v9;
  float32x4_t v11;
  simd_float4 v12;
  uint64_t v14;
  uint64_t v15;
  float v17;
  float v18;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  float32x4_t v49;
  simd_float4 v50;
  float v53;
  __int128 v54;
  __int32 v57;
  float32x4_t v58;
  simd_float4 v59;
  simd_float4 x;
  float32x4_t xa;

  v6 = sub_1B1A12038((uint64_t)&type metadata for Orientation, (uint64_t)&off_1E6371540, *(uint64_t **)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 16));
  v8 = v6;
  _Q4.i32[0] = *(_DWORD *)a2;
  v9 = *(float *)(a2 + 4);
  if (*(float *)a2 == v9 && *(float *)(a2 + 8) == *(float *)(a2 + 12) && *(float *)(a2 + 16) == *(float *)(a2 + 20))
  {
    _Q4.i32[1] = *(_DWORD *)(a2 + 8);
    _Q4.i32[2] = *(_DWORD *)(a2 + 16);
    v11.i64[0] = 0x3F0000003F000000;
    v11.i64[1] = 0x3F0000003F000000;
    v12 = (simd_float4)vmulq_f32(_Q4, v11);
    v12.i32[3] = 0;
    x = v12;
    v58 = (float32x4_t)_simd_cos_f4(v12);
    _Q0 = _simd_sin_f4(x);
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56) - v14;
    if (v15)
    {
      _Q7 = v58;
      v17 = vmuls_lane_f32(v58.f32[1], v58, 2);
      v18 = vmuls_lane_f32(_Q0.f32[1], (float32x4_t)_Q0, 2);
      *(float *)&v27 = vmlas_n_f32(-(float)(v58.f32[0] * v18), v17, _Q0.f32[0]);
      _S4 = vmuls_lane_f32(v58.f32[0], *(float32x2_t *)_Q0.f32, 1);
      __asm { FMLA            S5, S4, V7.S[2] }
      _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
      __asm { FMLA            S6, S4, V0.S[2] }
      DWORD1(v27) = _S5;
      *((_QWORD *)&v27 + 1) = __PAIR64__(COERCE_UNSIGNED_INT(vmlas_n_f32(v18 * _Q0.f32[0], v17, v58.f32[0])), _S6);
      v28 = (_OWORD *)(v8 + 16 * v14);
      do
      {
        *v28++ = v27;
        --v15;
      }
      while (v15);
    }
  }
  else
  {
    v29 = *(_QWORD *)(a1 + 48);
    v30 = *(_QWORD *)(a1 + 56);
    v31 = v30 - v29;
    if (v30 != v29)
    {
      v32 = a3[3];
      v33 = a3[4];
      v35 = a3[1];
      v34 = a3[2];
      v36 = v9 - _Q4.f32[0];
      v37 = *(float *)(a2 + 8);
      v38 = *(float *)(a2 + 12) - v37;
      v39 = *(float *)(a2 + 16);
      v40 = *(float *)(a2 + 20) - v39;
      v41 = (_OWORD *)(v6 + 16 * v29);
      v57 = *(_DWORD *)a2;
      do
      {
        v42 = v35 ^ v32 ^ v34;
        v43 = v35 ^ v34 ^ v33;
        v44 = v35 ^ v32 ^ (v34 << 17) ^ v43;
        v45 = v42 ^ __ROR8__(v34 ^ v33, 19);
        v46 = v45 ^ v43;
        v7.f32[0] = _Q4.f32[0]
                  + (float)(v36
                          * (float)((float)((9
                                           * ((((unint64_t)(5 * v34) >> 32) >> 25) | (640 * v34))) & 0xFFFFFF)
                                  * 0.000000059605));
        v47 = v44 ^ (v42 << 17) ^ v46;
        v48 = v44 ^ v42 ^ __ROR8__(v45, 19);
        v34 = v47 ^ v44 ^ v42;
        v32 = v47 ^ ((v44 ^ v42) << 17);
        v7.f32[1] = v37
                  + (float)(v38
                          * (float)((float)((9
                                           * ((((unint64_t)(5 * v42) >> 32) >> 25) | (640 * v42))) & 0xFFFFFF)
                                  * 0.000000059605));
        v33 = __ROR8__(v48, 19);
        v7.f32[2] = v39
                  + (float)(v40
                          * (float)((float)((9
                                           * ((((5 * (v44 ^ (unint64_t)v42)) >> 32) >> 25) | (640 * (v44 ^ v42)))) & 0xFFFFFF)
                                  * 0.000000059605));
        v49.i64[0] = 0x3F0000003F000000;
        v49.i64[1] = 0x3F0000003F000000;
        v50 = (simd_float4)vmulq_f32(v7, v49);
        v50.i32[3] = 0;
        v59 = v50;
        v35 = v48 ^ v46;
        xa = (float32x4_t)_simd_cos_f4(v50);
        _Q0 = _simd_sin_f4(v59);
        _Q7 = xa;
        v7.f32[0] = vmuls_lane_f32(xa.f32[1], xa, 2);
        v53 = vmuls_lane_f32(_Q0.f32[1], (float32x4_t)_Q0, 2);
        _Q4.f32[0] = vmuls_lane_f32(xa.f32[0], *(float32x2_t *)_Q0.f32, 1);
        *(float *)&v54 = vmlas_n_f32(-(float)(xa.f32[0] * v53), v7.f32[0], _Q0.f32[0]);
        __asm { FMLA            S5, S4, V7.S[2] }
        _Q4.f32[0] = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
        __asm { FMLA            S6, S4, V0.S[2] }
        _Q4.i32[0] = v57;
        DWORD1(v54) = _S5;
        *((_QWORD *)&v54 + 1) = __PAIR64__(COERCE_UNSIGNED_INT(vmlas_n_f32(v53 * _Q0.f32[0], v7.f32[0], xa.f32[0])), _S6);
        *v41++ = v54;
        --v31;
      }
      while (v31);
      a3[1] = v35;
      a3[2] = v34;
      a3[3] = v32;
      a3[4] = v33;
    }
  }
}

uint64_t type metadata accessor for ParticleOrientationInit.System()
{
  return objc_opt_self();
}

uint64_t sub_1B1CB7D94(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  _DWORD v19[6];

  v2 = *a1;
  v3 = a1[1];
  swift_retain_n();
  v4 = sub_1B1D16FE0(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_release();
  v11 = HIDWORD(v4);
  v12 = HIDWORD(v6);
  if ((v10 & 1) != 0)
    v13 = -1068953638;
  else
    v13 = v4;
  if ((v10 & 1) != 0)
  {
    LODWORD(v11) = 1078530010;
    v14 = -1068953638;
  }
  else
  {
    v14 = v6;
  }
  if ((v10 & 1) != 0)
  {
    LODWORD(v12) = 1078530010;
    v15 = -1068953638;
  }
  else
  {
    v15 = v8;
  }
  if ((v10 & 1) != 0)
    v16 = 1078530010;
  else
    v16 = HIDWORD(v8);
  v19[0] = v13;
  v19[1] = v11;
  v19[2] = v14;
  v19[3] = v12;
  v19[4] = v15;
  v19[5] = v16;
  v17 = a1[4];
  swift_retain();
  sub_1B1BEE528((uint64_t)a1);
  sub_1B1FE85D8(v17, v2, v2, (uint64_t)a1, (uint64_t)v19);
  sub_1B1B4F21C((uint64_t)a1);
  return swift_release_n();
}

const char *sub_1B1CB7E84()
{
  return "SetOrientation.CPU";
}

uint64_t type metadata accessor for ParticleOrientationInit.GPUSystem()
{
  return objc_opt_self();
}

const char *sub_1B1CB7EBC()
{
  return "SetOrientation.GPU";
}

uint64_t sub_1B1CB7ED0()
{
  return type metadata accessor for ParticleOrientationInit.GPUSystem();
}

uint64_t sub_1B1CB7EEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65676E615278 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E615279 && a2 == 0xE600000000000000 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E61527ALL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1B1CB8008@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  sub_1B1CB8398(0, &qword_1ED4BAC00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v15 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CB8354();
  sub_1B222A150();
  if (v2)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  sub_1B1B4D924();
  HIBYTE(v15) = 0;
  sub_1B1B67480((unint64_t *)&qword_1ED4BA5B0, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEB8B0]);
  sub_1B2229814();
  v11 = v16;
  HIBYTE(v15) = 1;
  sub_1B2229814();
  v12 = v16;
  HIBYTE(v15) = 2;
  sub_1B2229814();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v13 = v16;
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  return result;
}

uint64_t sub_1B1CB81FC(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD v26[6];

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[6];
  swift_retain();
  v5 = sub_1B1D16FE0(v3);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  swift_release();
  v12 = HIDWORD(v5);
  v13 = HIDWORD(v7);
  if ((v11 & 1) != 0)
    v14 = -1068953638;
  else
    v14 = v5;
  if ((v11 & 1) != 0)
  {
    LODWORD(v12) = 1078530010;
    v15 = -1068953638;
  }
  else
  {
    v15 = v7;
  }
  if ((v11 & 1) != 0)
  {
    LODWORD(v13) = 1078530010;
    v16 = -1068953638;
  }
  else
  {
    v16 = v9;
  }
  if ((v11 & 1) != 0)
    v17 = 1078530010;
  else
    v17 = HIDWORD(v9);
  v26[0] = v14;
  v26[1] = v12;
  v26[2] = v15;
  v26[3] = v13;
  v26[4] = v16;
  v26[5] = v17;
  v18 = *a1;
  if (*a1)
  {
    ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_orientation_uniforms(0);
    sub_1B1F40E1C((uint64_t)v26, 1, ObjectType, v20, v21, v22, v23, v24);
  }
  swift_retain();
  sub_1B1B1FC34((uint64_t)a1);
  sub_1B1FE6FB8(v4, v2, v18 == 0, 0, (uint64_t)a1, 0xD000000000000018, 0x80000001B2337E20, 0);
  sub_1B1B1FC88((uint64_t)a1);
  return swift_release();
}

ValueMetadata *type metadata accessor for ParticleOrientationInit()
{
  return &type metadata for ParticleOrientationInit;
}

unint64_t sub_1B1CB8354()
{
  unint64_t result;

  result = qword_1ED4B99E8;
  if (!qword_1ED4B99E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B2DC, &type metadata for ParticleOrientationInit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B99E8);
  }
  return result;
}

void sub_1B1CB8398(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1B1CB8354();
    v7 = a3(a1, &type metadata for ParticleOrientationInit.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for ParticleOrientationInit.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1CB8440 + 4 * byte_1B228B0E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1CB8474 + 4 * byte_1B228B0E0[v4]))();
}

uint64_t sub_1B1CB8474(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB847C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CB8484);
  return result;
}

uint64_t sub_1B1CB8490(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CB8498);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1CB849C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB84A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticleOrientationInit.CodingKeys()
{
  return &type metadata for ParticleOrientationInit.CodingKeys;
}

unint64_t sub_1B1CB84C4()
{
  unint64_t result;

  result = qword_1EEF5D550;
  if (!qword_1EEF5D550)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B2B4, &type metadata for ParticleOrientationInit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D550);
  }
  return result;
}

unint64_t sub_1B1CB850C()
{
  unint64_t result;

  result = qword_1ED4B99F8;
  if (!qword_1ED4B99F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B224, &type metadata for ParticleOrientationInit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B99F8);
  }
  return result;
}

unint64_t sub_1B1CB8554()
{
  unint64_t result;

  result = qword_1ED4B99F0;
  if (!qword_1ED4B99F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B24C, &type metadata for ParticleOrientationInit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B99F0);
  }
  return result;
}

uint64_t sub_1B1CB8598(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v18;
  uint64_t v19;
  uint64_t v20[4];
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1B2029FFC(0, v1, 0);
    v2 = v23;
    v4 = sub_1B1C0754C(a1);
    v5 = 0;
    v19 = a1 + 64;
    v18 = v1;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v4);
      v21 = 0;
      v22 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B2228890();
      sub_1B2228890();
      sub_1B1EFF724(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 32), v20);
      sub_1B22295EC();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v20);
      swift_release();
      swift_bridgeObjectRelease();
      v9 = v21;
      v8 = v22;
      v23 = v2;
      v11 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1B2029FFC(v10 > 1, v11 + 1, 1);
        v2 = v23;
      }
      *(_QWORD *)(v2 + 16) = v11 + 1;
      v12 = v2 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v8;
      v13 = v4 >> 6;
      if ((*(_QWORD *)(v19 + 8 * (v4 >> 6)) & (-2 << v4)) != 0)
      {
        v4 = __clz(__rbit64(*(_QWORD *)(v19 + 8 * (v4 >> 6)) & (-2 << v4))) | v4 & 0xFFFFFFFFFFFFFFC0;
        v6 = v18;
      }
      else
      {
        v4 = 1 << *(_BYTE *)(a1 + 32);
        v14 = v13 + 1;
        v15 = (v4 + 63) >> 6;
        v6 = v18;
        if (v13 + 1 < v15)
        {
          v16 = *(_QWORD *)(v19 + 8 * v14);
          if (!v16)
          {
            v14 = v13 + 2;
            if (v13 + 2 >= v15)
              goto LABEL_4;
            v16 = *(_QWORD *)(v19 + 8 * v14);
            if (!v16)
            {
              while (v15 - 3 != v13)
              {
                v16 = *(_QWORD *)(a1 + 88 + 8 * v13++);
                if (v16)
                {
                  v14 = v13 + 2;
                  goto LABEL_10;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_10:
          v4 = __clz(__rbit64(v16)) + (v14 << 6);
        }
      }
LABEL_4:
      ++v5;
    }
    while (v5 != v6);
  }
  return v2;
}

uint64_t sub_1B1CB87EC()
{
  sub_1B1CBC7F8();
  return sub_1B2228A7C();
}

uint64_t sub_1B1CB8848()
{
  sub_1B1CBC7F8();
  return sub_1B2228A04();
}

uint64_t sub_1B1CB8894(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v14 = a4;
  sub_1B19F8E54(0, &qword_1EEF5D5D8, (uint64_t (*)(void))sub_1B1CBC7B4, (uint64_t)&type metadata for Bindings.Value.EnumInfo.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v13 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CBC7B4();
  sub_1B222A180();
  v18 = 0;
  v11 = v15;
  sub_1B2229910();
  if (!v11)
  {
    v16 = v14;
    v17 = 1;
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1B28C94((unint64_t *)&qword_1EEF5AC40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1B2229958();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B1CB8A20(char *a1, char *a2)
{
  return sub_1B1F99944(*a1, *a2);
}

uint64_t sub_1B1CB8A2C()
{
  _BYTE *v0;

  if (*v0)
    return 0x73657361436C6C61;
  else
    return 1701667182;
}

uint64_t sub_1B1CB8A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1CBBF74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1CB8A84()
{
  sub_1B1CBC7B4();
  return sub_1B222A1D4();
}

uint64_t sub_1B1CB8AAC()
{
  sub_1B1CBC7B4();
  return sub_1B222A1E0();
}

uint64_t sub_1B1CB8AD4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1B1CBC104(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B1CB8B00(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1B1CB8894(a1, *v1, v1[1], v1[2]);
}

_QWORD *sub_1B1CB8B1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;

  v17 = v16;
  v54 = a7;
  v61 = a4;
  v45 = a2;
  v46 = a3;
  v58 = a16;
  v59 = a1;
  v57 = a15;
  v55 = a8;
  v56 = a14;
  v52 = a6;
  v53 = a13;
  v51 = a12;
  v49 = a11;
  v50 = a5;
  v48 = a10;
  v47 = a9;
  sub_1B1B28F74();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1B222826C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v24);
  v60 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id;
  sub_1B2228260();
  v44 = OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility;
  *((_BYTE *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility) = 0;
  v26 = (_QWORD *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
  *(_OWORD *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic) = xmmword_1B2246910;
  v27 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min;
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v28 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max;
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = (char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step;
  *(_QWORD *)v29 = 0;
  v29[8] = 1;
  v30 = (_QWORD *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
  *v30 = 0;
  v30[1] = 0;
  v31 = (_QWORD *)((char *)v17 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
  v31[1] = 0;
  v31[2] = 0;
  *v31 = 0;
  sub_1B1B28FC8(v61, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1B2228260();
    sub_1B1B2900C((uint64_t)v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v60, v21, v22);
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v43, v60, v22);
  v32 = v46;
  *v26 = v45;
  v26[1] = v32;
  v33 = v59;
  sub_1B19FA070(v59, v59[3]);
  v17[4] = swift_getDynamicType();
  *((_BYTE *)v17 + v44) = v50;
  *(_QWORD *)v27 = v52;
  v27[8] = v54 & 1;
  *(_QWORD *)v28 = v55;
  v28[8] = v47 & 1;
  *(_QWORD *)v29 = v48;
  v29[8] = v49 & 1;
  v34 = v53;
  *v30 = v51;
  v30[1] = v34;
  swift_bridgeObjectRelease();
  v35 = *v31;
  v36 = v31[1];
  v37 = v57;
  *v31 = v56;
  v31[1] = v37;
  v31[2] = v58;
  sub_1B1B0BC78(v35, v36);
  v38 = v17[4];
  v39 = sub_1B1EFF8AC(v38);
  v40 = (_BYTE *)swift_slowAlloc();
  v17[2] = v40;
  v17[3] = &v40[v39];
  sub_1B1EFF8C0((uint64_t)v33, v40, v38);
  sub_1B1B2900C(v61);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
  return v17;
}

uint64_t sub_1B1CB8E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  sub_1B1EFFA40();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
    MEMORY[0x1B5E23F88](v2, -1, -1);
  v3 = v0 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id;
  v4 = sub_1B222826C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  sub_1B1B0BC78(*(_QWORD *)(v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo), *(_QWORD *)(v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 8));
  return v1;
}

uint64_t sub_1B1CB8EC8()
{
  sub_1B1CB8E28();
  return swift_deallocClassInstance();
}

uint64_t sub_1B1CB8EEC()
{
  return type metadata accessor for Bindings.Value();
}

uint64_t type metadata accessor for Bindings.Value()
{
  uint64_t result;

  result = qword_1ED4BA078;
  if (!qword_1ED4BA078)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B1CB8F30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B222826C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for Bindings.Value.EnumInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for Bindings.Value.EnumInfo()
{
  return &type metadata for Bindings.Value.EnumInfo;
}

uint64_t storeEnumTagSinglePayload for Bindings.Visibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1CB9068 + 4 * byte_1B228B335[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1CB909C + 4 * byte_1B228B330[v4]))();
}

uint64_t sub_1B1CB909C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB90A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CB90ACLL);
  return result;
}

uint64_t sub_1B1CB90B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CB90C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1CB90C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CB90CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Bindings.Visibility()
{
  return &type metadata for Bindings.Visibility;
}

uint64_t destroy for Bindings()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s3VFX8BindingsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Bindings(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Bindings(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Bindings()
{
  return &type metadata for Bindings;
}

uint64_t sub_1B1CB9218(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1CB9240 + 4 * byte_1B228B33A[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1B1CB9240()
{
  return 0x65756C6176;
}

uint64_t sub_1B1CB9254()
{
  return 0x6369746E616D6573;
}

uint64_t sub_1B1CB926C()
{
  return 7235949;
}

uint64_t sub_1B1CB927C()
{
  return 7889261;
}

uint64_t sub_1B1CB928C()
{
  return 1885697139;
}

uint64_t sub_1B1CB929C()
{
  return 0x756E614D72657375;
}

uint64_t sub_1B1CB92B8()
{
  return 0x63696C6275507369;
}

uint64_t sub_1B1CB92D0()
{
  return 0x696C696269736976;
}

uint64_t sub_1B1CB92F0()
{
  return 0x6F666E496D756E65;
}

uint64_t sub_1B1CB9308(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1CB9330 + 4 * byte_1B228B344[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1B1CB9330()
{
  return 0x65756C6176;
}

uint64_t sub_1B1CB9344()
{
  return 0x6369746E616D6573;
}

uint64_t sub_1B1CB935C()
{
  return 7235949;
}

uint64_t sub_1B1CB936C()
{
  return 7889261;
}

uint64_t sub_1B1CB937C()
{
  return 1885697139;
}

uint64_t sub_1B1CB938C()
{
  return 0x756E614D72657375;
}

uint64_t sub_1B1CB93A8()
{
  return 0x63696C6275507369;
}

uint64_t sub_1B1CB93C0()
{
  return 0x696C696269736976;
}

uint64_t sub_1B1CB93E0()
{
  return 0x6F666E496D756E65;
}

uint64_t sub_1B1CB93F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1B1CB9308(*a1);
  v5 = v4;
  if (v3 == sub_1B1CB9308(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B1CB9480()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1CB9218(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CB94E0()
{
  unsigned __int8 *v0;

  sub_1B1CB9218(*v0);
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CB9520()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1CB9218(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CB957C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CBBF2C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1CB95A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1CB9218(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1CB95D0()
{
  unsigned __int8 *v0;

  return sub_1B1CB9308(*v0);
}

uint64_t sub_1B1CB95D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CBBF2C();
  *a1 = result;
  return result;
}

void sub_1B1CB95FC(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1B1CB9608()
{
  sub_1B1CBB7B0();
  return sub_1B222A1D4();
}

uint64_t sub_1B1CB9630()
{
  sub_1B1CBB7B0();
  return sub_1B222A1E0();
}

_QWORD *sub_1B1CB9658(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  uint64_t DynamicType;
  uint64_t v48;
  _BYTE *v49;
  char v50;
  BOOL v51;
  uint64_t v52;
  uint64_t *v53;
  char v54;
  uint64_t v55;
  uint64_t *v56;
  char v57;
  uint64_t v58;
  uint64_t *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  BOOL v69;
  uint64_t v70;
  uint64_t *v71;
  char v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t *v76;
  char v77;
  uint64_t v78;
  uint64_t *v79;
  char v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[2];
  char v113;

  v3 = v1;
  v101 = *v1;
  sub_1B1B28F74();
  MEMORY[0x1E0C80A78](v5, v6);
  v96 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v91 - v10;
  v12 = sub_1B222826C();
  v13 = *(_QWORD *)(v12 - 8);
  v105 = v12;
  v106 = v13;
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v91 - v19;
  sub_1B19F8E54(0, &qword_1ED4BAC78, (uint64_t (*)(void))sub_1B1CBB7B0, (uint64_t)&type metadata for Bindings.Value.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v99 = *(_QWORD *)(v21 - 8);
  v100 = v21;
  MEMORY[0x1E0C80A78](v21, v22);
  v98 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v91 - v26;
  v104 = (char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id;
  sub_1B2228260();
  v95 = OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility;
  *((_BYTE *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility) = 0;
  v97 = OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic;
  *(_OWORD *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic) = xmmword_1B2246910;
  v28 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
  *v28 = 0;
  v94 = v28;
  *((_BYTE *)v28 + 8) = 1;
  v29 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
  *v29 = 0;
  v93 = v29;
  *((_BYTE *)v29 + 8) = 1;
  v30 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
  *v30 = 0;
  v92 = v30;
  *((_BYTE *)v30 + 8) = 1;
  v31 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
  *v31 = 0;
  v31[1] = 0;
  v103 = v31;
  v32 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
  v32[1] = 0;
  v32[2] = 0;
  v102 = v32;
  *v32 = 0;
  v33 = *((_QWORD *)a1 + 3);
  v34 = *((_QWORD *)a1 + 4);
  sub_1B19FA070(a1, v33);
  if (!sub_1B2067B64(2003, v33, v34))
  {
    sub_1B19FA070(a1, *((_QWORD *)a1 + 3));
    sub_1B222A12C();
    if (v2)
      goto LABEL_6;
    sub_1B19FA070(&v109, v111);
    v36 = sub_1B2229A54();
    v38 = v37;
    sub_1B19FC264((uint64_t)&v109, v111);
    sub_1B1CBB7F4();
    sub_1B2229AA8();
    sub_1B1A0DDAC(&v107, v112);
    if ((v38 & 1) == 0 && v36 >= 2)
    {
      v43 = *((_QWORD *)a1 + 3);
      v44 = *((_QWORD *)a1 + 4);
      sub_1B19FA070(a1, v43);
      v45 = *(unsigned __int8 *)(sub_1B20680A8(v43, v44) + 81);
      swift_release();
      sub_1B19FC264((uint64_t)&v109, v111);
      if (v45 == 1)
      {
        sub_1B1CBB7B0();
        sub_1B2229A30();
        LOBYTE(v107) = 0;
        sub_1B19E52CC(&qword_1ED4B7B48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
        v62 = v105;
        sub_1B22297B4();
        v63 = v104;
        v64 = v106;
        v65 = (uint64_t)v96;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v96, 1, v62) == 1)
        {
          sub_1B2228260();
          sub_1B1B2900C(v65);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v16, v65, v62);
        }
        (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v63, v16, v62);
        v113 = 2;
        sub_1B1CBB838();
        sub_1B2229814();
        *(_OWORD *)((char *)v3 + v97) = v107;
        v66 = *((_QWORD *)a1 + 3);
        v67 = *((_QWORD *)a1 + 4);
        sub_1B19FA070(a1, v66);
        if (sub_1B2067B64(2045, v66, v67))
        {
          LOBYTE(v107) = 7;
          v68 = sub_1B2229784();
          v69 = v68 != 2 && (v68 & 1) == 0;
        }
        else
        {
          v113 = 8;
          sub_1B1CBB87C();
          sub_1B2229814();
          v69 = v107;
        }
        *((_BYTE *)v3 + v95) = v69;
        LOBYTE(v107) = 3;
        v70 = sub_1B2229790();
        v71 = v94;
        *v94 = v70;
        *((_BYTE *)v71 + 8) = v72 & 1;
        LOBYTE(v107) = 4;
        v73 = sub_1B2229790();
        v76 = v93;
        *v93 = v73;
        *((_BYTE *)v76 + 8) = v77 & 1;
        LOBYTE(v107) = 5;
        v78 = sub_1B2229790();
        v79 = v92;
        *v92 = v78;
        *((_BYTE *)v79 + 8) = v80 & 1;
        LOBYTE(v107) = 6;
        v81 = sub_1B2229778();
        v82 = v103;
        *v103 = v81;
        v82[1] = v83;
        swift_bridgeObjectRelease();
        v113 = 9;
        sub_1B1CBB8C0();
        sub_1B22297B4();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
        v87 = v108;
        v88 = v102;
        v89 = *v102;
        v90 = v102[1];
        *(_OWORD *)v102 = v107;
        v88[2] = v87;
        sub_1B1B0BC78(v89, v90);
      }
      else
      {
        sub_1B1E8C9D0();
      }
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
LABEL_20:
    sub_1B1A02864((uint64_t)v112, (uint64_t)&v109);
    sub_1B19FA070(&v109, v111);
    DynamicType = swift_getDynamicType();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v109);
    v3[4] = DynamicType;
    v48 = sub_1B1EFF8AC(DynamicType);
    v49 = (_BYTE *)swift_slowAlloc();
    v3[2] = v49;
    v3[3] = &v49[v48];
    sub_1B1EFF8C0((uint64_t)v112, v49, DynamicType);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v112);
    goto LABEL_7;
  }
  v35 = *((_QWORD *)a1 + 3);
  v98 = a1;
  sub_1B19FA070(a1, v35);
  sub_1B1CBB7B0();
  sub_1B222A150();
  if (!v2)
  {
    LOBYTE(v109) = 0;
    sub_1B19E52CC(&qword_1ED4B7B48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v41 = v105;
    sub_1B22297B4();
    v42 = v106;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v11, 1, v41) == 1)
    {
      sub_1B2228260();
      sub_1B1B2900C((uint64_t)v11);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v20, v11, v41);
    }
    (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v104, v20, v41);
    LOBYTE(v107) = 1;
    sub_1B1CBB7F4();
    sub_1B2229814();
    sub_1B1A0DDAC(&v109, v112);
    LOBYTE(v107) = 2;
    sub_1B1CBB838();
    sub_1B2229814();
    a1 = v98;
    v46 = v102;
    *(_OWORD *)((char *)v3 + v97) = v109;
    LOBYTE(v109) = 7;
    v50 = sub_1B2229784();
    v51 = v50 != 2 && (v50 & 1) == 0;
    *((_BYTE *)v3 + v95) = v51;
    LOBYTE(v109) = 3;
    v52 = sub_1B2229790();
    v53 = v94;
    *v94 = v52;
    *((_BYTE *)v53 + 8) = v54 & 1;
    LOBYTE(v109) = 4;
    v55 = sub_1B2229790();
    v56 = v93;
    *v93 = v55;
    *((_BYTE *)v56 + 8) = v57 & 1;
    LOBYTE(v109) = 5;
    v58 = sub_1B2229790();
    v59 = v92;
    *v92 = v58;
    *((_BYTE *)v59 + 8) = v60 & 1;
    LOBYTE(v109) = 6;
    v61 = sub_1B2229778();
    v74 = v103;
    *v103 = v61;
    v74[1] = v75;
    swift_bridgeObjectRelease();
    LOBYTE(v107) = 9;
    sub_1B1CBB8C0();
    sub_1B22297B4();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v27, v100);
    v84 = v110;
    v85 = *v46;
    v86 = v46[1];
    *(_OWORD *)v46 = v109;
    v46[2] = v84;
    sub_1B1B0BC78(v85, v86);
    goto LABEL_20;
  }
  a1 = v98;
LABEL_6:
  v39 = v102;
  (*(void (**)(char *, uint64_t))(v106 + 8))(v104, v105);
  swift_bridgeObjectRelease();
  sub_1B1B0BC78(*v39, v39[1]);
  swift_deallocPartialClassInstance();
LABEL_7:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1B1CBA2B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;
  char v40;

  v2 = v1;
  v4 = sub_1B222826C();
  v5 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  v34 = v5;
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B19F8E54(0, &qword_1EEF5D568, (uint64_t (*)(void))sub_1B1CBB7B0, (uint64_t)&type metadata for Bindings.Value.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v12);
  v14 = (char *)&v32 - v13;
  sub_1B19FA070(a1, a1[3]);
  sub_1B222A15C();
  sub_1B1EFF724(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), (uint64_t *)&v36);
  sub_1B19FC264((uint64_t)v38, v39);
  sub_1B1CBB904();
  v15 = v35;
  sub_1B2229BA4();
  if (v15)
  {
    sub_1B1CBB948((uint64_t)&v36);
  }
  else
  {
    v35 = v8;
    v16 = v34;
    sub_1B1CBB948((uint64_t)&v36);
    v17 = a1[3];
    v18 = a1[4];
    sub_1B19FA070(a1, v17);
    LODWORD(v17) = *(unsigned __int8 *)(sub_1B2068140(v17, v18) + 81);
    swift_release();
    if ((_DWORD)v17 == 1)
    {
      sub_1B19FC264((uint64_t)v38, v39);
      sub_1B1CBB7B0();
      sub_1B2229B50();
      v19 = v2;
      v20 = v2 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id;
      v21 = v16;
      v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
      v23 = v35;
      v24 = v33;
      v22(v35, v20, v33);
      LOBYTE(v36) = 0;
      sub_1B19E52CC(&qword_1EEF5C600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
      sub_1B2229958();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v24);
      v36 = *(_OWORD *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
      v40 = 2;
      sub_1B1CBB97C();
      sub_1B2229958();
      LOBYTE(v36) = *(_BYTE *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility);
      v40 = 8;
      sub_1B1CBB9C0();
      sub_1B2229958();
      v25 = *(_BYTE *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min + 8);
      *(_QWORD *)&v36 = *(_QWORD *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
      BYTE8(v36) = v25;
      v40 = 3;
      v26 = MEMORY[0x1E0DEB070];
      sub_1B1A02758(0, &qword_1EEF5D580, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1B1CBBA04(&qword_1EEF5D588, &qword_1EEF5D580, v26, MEMORY[0x1E0DEB080]);
      sub_1B2229958();
      v27 = *(_BYTE *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max + 8);
      *(_QWORD *)&v36 = *(_QWORD *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
      BYTE8(v36) = v27;
      v40 = 4;
      sub_1B2229958();
      v28 = *(_BYTE *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step + 8);
      *(_QWORD *)&v36 = *(_QWORD *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
      BYTE8(v36) = v28;
      v40 = 5;
      sub_1B2229958();
      v36 = *(_OWORD *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
      v40 = 6;
      v29 = MEMORY[0x1E0DEA968];
      sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA2B0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1B1CBBA04(&qword_1EEF5D590, (unint64_t *)&qword_1ED4BA2B0, v29, MEMORY[0x1E0DEA970]);
      sub_1B2229958();
      v30 = *(_QWORD *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 16);
      v36 = *(_OWORD *)(v19 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
      v37 = v30;
      v40 = 9;
      sub_1B1A02758(0, &qword_1EEF5D598, (uint64_t)&type metadata for Bindings.Value.EnumInfo, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1B1CBBA60();
      sub_1B2229958();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
}

_QWORD *sub_1B1CBA814@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = sub_1B1CB9658(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1B1CBA868(_QWORD *a1)
{
  return sub_1B1CBA2B8(a1);
}

uint64_t sub_1B1CBA888()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  int64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[5];

  v1 = v0;
  v76 = sub_1B222826C();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76, v2);
  v74 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0[2] + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    v93[0] = v0[2];
    v0[2] = 0x8000000000000000;
    sub_1B1C1F5F4(0, (unint64_t *)&unk_1ED4BA870, (uint64_t (*)(uint64_t))type metadata accessor for PropertyDescription, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECB20]);
    sub_1B2229634();
    v0[2] = v93[0];
    swift_bridgeObjectRelease();
  }
  v4 = *v0;
  v5 = *(_QWORD *)(*v0 + 64);
  v72 = *v0 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = swift_bridgeObjectRetain();
  v11 = 0;
  v73 = v9;
  v71 = v9 - 5;
  v78 = v10;
  v70 = v10 + 104;
  v77 = v1;
  while (1)
  {
    if (v8)
    {
      v27 = __clz(__rbit64(v8));
      v28 = (v8 - 1) & v8;
      v29 = v27 | (v11 << 6);
      goto LABEL_22;
    }
    v30 = v11 + 1;
    if (v11 + 1 >= v73)
      return swift_release();
    v31 = *(_QWORD *)(v72 + 8 * v30);
    if (!v31)
    {
      v30 = v11 + 2;
      if (v11 + 2 >= v73)
        return swift_release();
      v31 = *(_QWORD *)(v72 + 8 * v30);
      if (!v31)
      {
        v30 = v11 + 3;
        if (v11 + 3 >= v73)
          return swift_release();
        v31 = *(_QWORD *)(v72 + 8 * v30);
        if (!v31)
        {
          v30 = v11 + 4;
          if (v11 + 4 >= v73)
            return swift_release();
          v31 = *(_QWORD *)(v72 + 8 * v30);
          if (!v31)
            break;
        }
      }
    }
LABEL_21:
    v28 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v30 << 6);
    v11 = v30;
LABEL_22:
    v32 = (uint64_t *)(*(_QWORD *)(v78 + 48) + 16 * v29);
    v33 = *v32;
    v34 = v32[1];
    v35 = *(_QWORD *)(*(_QWORD *)(v78 + 56) + 8 * v29);
    v36 = v75;
    v37 = v74;
    v38 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v35 + OBJC_IVAR____TtCV3VFX8Bindings5Value_id, v76);
    swift_bridgeObjectRetain();
    swift_retain();
    v39 = sub_1B2228224();
    v88 = v40;
    v89 = v39;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    v41 = *v1;
    v42 = *(_QWORD *)(*v1 + 16);
    v92 = v33;
    if (v42)
    {
      swift_bridgeObjectRetain();
      v43 = sub_1B1DC3B00(v33, v34);
      if ((v44 & 1) != 0)
      {
        v45 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v43);
        swift_retain();
        swift_bridgeObjectRelease();
        v46 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility);
        swift_release();
        if (!*(_QWORD *)(v41 + 16))
          goto LABEL_31;
      }
      else
      {
        swift_bridgeObjectRelease();
        v46 = 0;
        if (!*(_QWORD *)(v41 + 16))
          goto LABEL_31;
      }
      swift_bridgeObjectRetain();
      v47 = sub_1B1DC3B00(v33, v34);
      if ((v48 & 1) != 0)
      {
        v49 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v47);
        swift_retain();
        swift_bridgeObjectRelease();
        v50 = *(_QWORD *)(v49 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
        v51 = *(_QWORD *)(v49 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 16);
        v82 = *(_QWORD *)(v49 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 8);
        v83 = v50;
        v81 = v51;
        sub_1B1C18F0C(v50, v82);
        swift_release();
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = 0;
    }
LABEL_31:
    v82 = 0;
    v83 = 0;
    v81 = 0;
LABEL_32:
    v52 = *(_QWORD *)(v35 + 32);
    v54 = *(_QWORD *)(v35 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
    v53 = *(_QWORD *)(v35 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic + 8);
    v55 = *(_QWORD *)(v41 + 16);
    v90 = v28;
    v91 = v11;
    v86 = v52;
    v87 = v53;
    v85 = v54;
    v84 = v46;
    if (!v55)
    {
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 1;
      v18 = 1;
      v19 = 1;
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    v56 = sub_1B1DC3B00(v92, v34);
    if ((v57 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v80 = 0;
      v79 = 1;
      if (!*(_QWORD *)(v41 + 16))
        goto LABEL_41;
LABEL_35:
      swift_bridgeObjectRetain();
      v59 = sub_1B1DC3B00(v92, v34);
      if ((v60 & 1) != 0)
      {
        v61 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v59);
        swift_retain();
        swift_bridgeObjectRelease();
        v14 = *(_QWORD *)(v61 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
        v62 = *(_BYTE *)(v61 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max + 8);
        swift_release();
        if (*(_QWORD *)(v41 + 16))
          goto LABEL_37;
LABEL_43:
        v12 = 0;
        v15 = 0;
        v16 = 0;
        v17 = 1;
LABEL_49:
        v19 = v62;
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
      v14 = 0;
      v62 = 1;
      if (!*(_QWORD *)(v41 + 16))
        goto LABEL_43;
LABEL_37:
      swift_bridgeObjectRetain();
      v63 = sub_1B1DC3B00(v92, v34);
      if ((v64 & 1) != 0)
      {
        v65 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v63);
        swift_retain();
        swift_bridgeObjectRelease();
        v12 = *(_QWORD *)(v65 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
        v17 = *(_BYTE *)(v65 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step + 8);
        swift_release();
        if (!*(_QWORD *)(v41 + 16))
          goto LABEL_48;
LABEL_45:
        swift_bridgeObjectRetain();
        v66 = sub_1B1DC3B00(v92, v34);
        if ((v67 & 1) != 0)
        {
          v68 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v66);
          swift_retain();
          swift_bridgeObjectRelease();
          v15 = *(_QWORD *)(v68 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
          v16 = *(_QWORD *)(v68 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual + 8);
          swift_bridgeObjectRetain();
          swift_release();
          goto LABEL_49;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v12 = 0;
        v17 = 1;
        if (*(_QWORD *)(v41 + 16))
          goto LABEL_45;
      }
LABEL_48:
      v15 = 0;
      v16 = 0;
      goto LABEL_49;
    }
    v58 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v56);
    swift_retain();
    swift_bridgeObjectRelease();
    v80 = *(_QWORD *)(v58 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
    v79 = *(unsigned __int8 *)(v58 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min + 8);
    swift_release();
    if (*(_QWORD *)(v41 + 16))
      goto LABEL_35;
LABEL_41:
    v12 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 1;
    v19 = 1;
LABEL_50:
    v13 = v80;
    v18 = v79;
LABEL_7:
    v93[3] = &type metadata for BindingPropertyDescription.BindingInfo;
    v20 = swift_allocObject();
    v93[0] = v20;
    v21 = v88;
    *(_QWORD *)(v20 + 16) = v89;
    *(_QWORD *)(v20 + 24) = v21;
    *(_BYTE *)(v20 + 32) = v84;
    v22 = v82;
    *(_QWORD *)(v20 + 40) = v83;
    *(_QWORD *)(v20 + 48) = v22;
    *(_QWORD *)(v20 + 56) = v81;
    v23 = sub_1B1A23334(v86, (uint64_t)v93, v92, v34, v13, v18, v14, v19, v12, v17, v85, v87, v15, v16, 0, (uint64_t)&type metadata for Bindings, v86, (uint64_t)&off_1E63BE978);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B1A0DD70((uint64_t)v93);
    v24 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    v1 = v77;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v93[0] = v1[2];
    v1[2] = 0x8000000000000000;
    sub_1B1B85374(v23, v24, v25, isUniquelyReferenced_nonNull_native);
    v1[2] = v93[0];
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v90;
    v11 = v91;
  }
  while (v71 != v11)
  {
    v31 = *(_QWORD *)(v70 + 8 * v11++);
    if (v31)
    {
      v30 = v11 + 4;
      goto LABEL_21;
    }
  }
  return swift_release();
}

_OWORD *sub_1B1CBAFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  sub_1B1B28F74();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1B1DC3B00(a1, a2);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1B1EFF724(*(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 32), (uint64_t *)&v20);
      swift_release();
      return sub_1B1A0DDAC(&v20, a4);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED4BF430 != -1)
    swift_once();
  *(_QWORD *)&v20 = 0;
  *((_QWORD *)&v20 + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v20 = 0xD000000000000029;
  *((_QWORD *)&v20 + 1) = 0x80000001B2337EF0;
  sub_1B2228890();
  sub_1B2228890();
  v16 = v20;
  v17 = sub_1B2228E90();
  *(_QWORD *)&v20 = 1;
  sub_1B1F1AAF0(v17, v16, *((uint64_t *)&v16 + 1), (uint64_t *)&v20);
  swift_release();
  swift_bridgeObjectRelease();
  v21 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v20 = 0;
  v18 = sub_1B222826C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
  type metadata accessor for Bindings.Value();
  v19 = swift_allocObject();
  sub_1B1CB8B1C(&v20, 1, 0, (uint64_t)v11, 0, 0, 1, 0, 1u, 0, 1u, 0, 0, 0, 0, 0);
  sub_1B1EFF724(*(_QWORD *)(v19 + 16), *(_QWORD *)(v19 + 32), a4);
  return (_OWORD *)swift_release();
}

uint64_t sub_1B1CBB218(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14[4];

  v4 = v3;
  v8 = *v3;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1B1DC3B00(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1B19FA070(a1, a1[3]);
      if (swift_getDynamicType() == *(_QWORD *)(v11 + 32))
      {
        swift_bridgeObjectRelease();
        sub_1B1A02864((uint64_t)a1, (uint64_t)v14);
        sub_1B1EFF5D0((uint64_t)v14, *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 32));
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
        swift_release();
        result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
        *((_BYTE *)v4 + 8) = 1;
      }
      else
      {
        sub_1B2229430();
        sub_1B2228890();
        sub_1B222A210();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
        sub_1B2228890();
        sub_1B2228890();
        sub_1B222A210();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        result = sub_1B2229688();
        __break(1u);
      }
      return result;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED4BF430 != -1)
    swift_once();
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v14[1] = 0x80000001B2337E80;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
  v13 = sub_1B2228E90();
  v14[0] = 1;
  sub_1B1F1AAF0(v13, 0xD000000000000029, 0x80000001B2337E80, v14);
  swift_release();
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

_QWORD *sub_1B1CBB508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *result;

  v2 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1B1B7E500(MEMORY[0x1E0DEE9D8]);
  result = sub_1B1B7F1F4(v2);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B1CBB55C()
{
  unint64_t result;

  result = qword_1EEF5D558;
  if (!qword_1EEF5D558)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B544, &type metadata for Bindings.Visibility);
    atomic_store(result, (unint64_t *)&qword_1EEF5D558);
  }
  return result;
}

_QWORD *sub_1B1CBB5A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  char v5;
  uint64_t v6;

  result = sub_1B1CBC31C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B1CBB5D4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  sub_1B19FA070(a1, a1[3]);
  sub_1B222A168();
  v6 = v2;
  sub_1B19FC264((uint64_t)v4, v5);
  sub_1B1CBC610();
  sub_1B19E52CC(&qword_1EEF5D5C0, (uint64_t (*)(uint64_t))sub_1B1CBC610, (uint64_t)&unk_1B22B5B44);
  sub_1B2229DF0();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

_OWORD *sub_1B1CBB698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_1B1CBAFB8(a1, a2, *v3, a3);
}

uint64_t sub_1B1CBB6A8()
{
  return 0x73676E69646E6942;
}

_QWORD *sub_1B1CBB6C0()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1B1DC8D00(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B1CBB6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1B1CBBB1C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1B1CBB700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1B1CBC054(a1, a2, a3, *v3);
}

uint64_t sub_1B1CBB708()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  sub_1B1CB8598(v0);
  swift_bridgeObjectRelease();
  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B19FA230();
  v1 = sub_1B2228644();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1B1CBB7B0()
{
  unint64_t result;

  result = qword_1ED4BA050;
  if (!qword_1ED4BA050)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B8B8, &type metadata for Bindings.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4BA050);
  }
  return result;
}

unint64_t sub_1B1CBB7F4()
{
  unint64_t result;

  result = qword_1ED4BA048;
  if (!qword_1ED4BA048)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22AC06C, &type metadata for AnyCoder);
    atomic_store(result, (unint64_t *)&qword_1ED4BA048);
  }
  return result;
}

unint64_t sub_1B1CBB838()
{
  unint64_t result;

  result = qword_1ED4B93B0;
  if (!qword_1ED4B93B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2282F30, &type metadata for PropertyDescription.Semantic);
    atomic_store(result, (unint64_t *)&qword_1ED4B93B0);
  }
  return result;
}

unint64_t sub_1B1CBB87C()
{
  unint64_t result;

  result = qword_1EEF5D560;
  if (!qword_1EEF5D560)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B4A4, &type metadata for Bindings.Visibility);
    atomic_store(result, (unint64_t *)&qword_1EEF5D560);
  }
  return result;
}

unint64_t sub_1B1CBB8C0()
{
  unint64_t result;

  result = qword_1ED4842E8;
  if (!qword_1ED4842E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B594, &type metadata for Bindings.Value.EnumInfo);
    atomic_store(result, (unint64_t *)&qword_1ED4842E8);
  }
  return result;
}

unint64_t sub_1B1CBB904()
{
  unint64_t result;

  result = qword_1EEF5D570;
  if (!qword_1EEF5D570)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22AC044, &type metadata for AnyCoder);
    atomic_store(result, (unint64_t *)&qword_1EEF5D570);
  }
  return result;
}

uint64_t sub_1B1CBB948(uint64_t a1)
{
  _s18CachedBuildResultsV6ResultOwxx(a1);
  return a1;
}

unint64_t sub_1B1CBB97C()
{
  unint64_t result;

  result = qword_1EEF5DEF0;
  if (!qword_1EEF5DEF0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B2282F08, &type metadata for PropertyDescription.Semantic);
    atomic_store(result, (unint64_t *)&qword_1EEF5DEF0);
  }
  return result;
}

unint64_t sub_1B1CBB9C0()
{
  unint64_t result;

  result = qword_1EEF5D578;
  if (!qword_1EEF5D578)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B47C, &type metadata for Bindings.Visibility);
    atomic_store(result, (unint64_t *)&qword_1EEF5D578);
  }
  return result;
}

uint64_t sub_1B1CBBA04(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1B1A02758(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = a4;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEE988], v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1CBBA60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEF5D5A0;
  if (!qword_1EEF5D5A0)
  {
    sub_1B1A02758(255, &qword_1EEF5D598, (uint64_t)&type metadata for Bindings.Value.EnumInfo, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1B1CBBAD8();
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5A0);
  }
  return result;
}

unint64_t sub_1B1CBBAD8()
{
  unint64_t result;

  result = qword_1EEF5D5A8;
  if (!qword_1EEF5D5A8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B56C, &type metadata for Bindings.Value.EnumInfo);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5A8);
  }
  return result;
}

uint64_t sub_1B1CBBB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v6 = MEMORY[0x1B5E20388]();
  if (*(_QWORD *)(a5 + 16) && (v8 = sub_1B1DC3B00(v6, v7), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * v8);
    swift_retain();
  }
  else
  {
    v10 = 0;
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B1CBBB78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53[5];

  sub_1B1B28F74();
  MEMORY[0x1E0C80A78](v1, v2);
  v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B1B7E500(MEMORY[0x1E0DEE9D8]);
  v34 = v0;
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 64);
  v37 = *v0 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = swift_bridgeObjectRetain();
  v12 = 0;
  v38 = v10;
  v36 = v10 - 5;
  v40 = v11;
  v35 = v11 + 104;
  v13 = (uint64_t)v39;
  while (1)
  {
    v52 = v4;
    if (v9)
    {
      v50 = (v9 - 1) & v9;
      v51 = v12;
      v14 = __clz(__rbit64(v9)) | (v12 << 6);
      goto LABEL_5;
    }
    v30 = v12 + 1;
    if (v12 + 1 >= v38)
      goto LABEL_19;
    v31 = *(_QWORD *)(v37 + 8 * v30);
    if (!v31)
    {
      v30 = v12 + 2;
      if (v12 + 2 >= v38)
        goto LABEL_19;
      v31 = *(_QWORD *)(v37 + 8 * v30);
      if (!v31)
      {
        v30 = v12 + 3;
        if (v12 + 3 >= v38)
          goto LABEL_19;
        v31 = *(_QWORD *)(v37 + 8 * v30);
        if (!v31)
        {
          v30 = v12 + 4;
          if (v12 + 4 >= v38)
            goto LABEL_19;
          v31 = *(_QWORD *)(v37 + 8 * v30);
          if (!v31)
            break;
        }
      }
    }
LABEL_18:
    v50 = (v31 - 1) & v31;
    v51 = v30;
    v14 = __clz(__rbit64(v31)) + (v30 << 6);
LABEL_5:
    v15 = *(_QWORD *)(v40 + 56);
    v16 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v14);
    v17 = v16[1];
    v49 = *v16;
    v18 = *(_QWORD *)(v15 + 8 * v14);
    sub_1B1EFF724(*(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 32), v53);
    v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic);
    v47 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_semantic + 8);
    v48 = v19;
    v20 = sub_1B222826C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
    v46 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min);
    v45 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_min + 8);
    v44 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max);
    v43 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_max + 8);
    v42 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step);
    v41 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_step + 8);
    v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual);
    v22 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_userManual + 8);
    v23 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo);
    v24 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 8);
    v25 = *(_QWORD *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_enumInfo + 16);
    v26 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCV3VFX8Bindings5Value_visibility);
    type metadata accessor for Bindings.Value();
    v27 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B1C18F0C(v23, v24);
    sub_1B1CB8B1C(v53, v48, v47, v13, v26, v46, v45, v44, v43, v42, v41, v21, v22, v23, v24, v25);
    v28 = (uint64_t)v52;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v53[0] = v28;
    sub_1B1B85390(v27, v49, v17, isUniquelyReferenced_nonNull_native);
    v4 = (_QWORD *)v53[0];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v50;
    v12 = v51;
  }
  while (v36 != v12)
  {
    v31 = *(_QWORD *)(v35 + 8 * v12++);
    if (v31)
    {
      v30 = v12 + 4;
      goto LABEL_18;
    }
  }
LABEL_19:
  swift_release();
  v32 = v34;
  swift_bridgeObjectRelease();
  *v32 = (uint64_t)v4;
  *((_BYTE *)v32 + 8) = 1;
  return sub_1B1CBA888();
}

uint64_t sub_1B1CBBF2C()
{
  unint64_t v0;

  v0 = sub_1B2229730();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1B1CBBF74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2229D24() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657361436C6C61 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B2229D24();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B1CBC054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;

  if (!*(_QWORD *)(a4 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v8 = sub_1B1DC3B00(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v8);
  swift_retain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v10 + 32) != a3 && a3 != MEMORY[0x1E0DEE9B8] + 8)
  {
    swift_release();
    return 0;
  }
  v12 = *(_QWORD *)(v10 + 16);
  swift_release();
  return v12;
}

uint64_t sub_1B1CBC104(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[32];

  sub_1B19F8E54(0, &qword_1EEF5D5C8, (uint64_t (*)(void))sub_1B1CBC7B4, (uint64_t)&type metadata for Bindings.Value.EnumInfo.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = &v11[-v7];
  v9 = a1[4];
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CBC7B4();
  sub_1B222A150();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    v11[31] = 0;
    v9 = sub_1B22297CC();
    sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11[30] = 1;
    sub_1B1B28C94((unint64_t *)&qword_1ED4BA4A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1B2229814();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

_QWORD *sub_1B1CBC31C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  _QWORD *v23;

  sub_1B19F8E54(0, &qword_1ED4BAB20, (uint64_t (*)(void))sub_1B1C78FEC, (uint64_t)&type metadata for StringCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v15 - v7;
  v9 = MEMORY[0x1E0DEE9D8];
  v21 = sub_1B1B7E500(MEMORY[0x1E0DEE9D8]);
  v22 = 1;
  v23 = sub_1B1B7F1F4(v9);
  v10 = a1[3];
  v11 = a1[4];
  sub_1B19FA070(a1, v10);
  if (sub_1B2067B64(2010, v10, v11))
  {
    v12 = sub_1B19FA070(a1, a1[3]);
    sub_1B1C78FEC();
    sub_1B222A150();
    if (!v1)
    {
      sub_1B1C1F5F4(0, &qword_1EEF5D5B0, (uint64_t (*)(uint64_t))type metadata accessor for Bindings.Value, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
      v17 = 0;
      v18 = 1;
      v19 = 1952672100;
      v20 = 0xE400000000000000;
      sub_1B1CBC6E4();
      sub_1B2229814();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v14 = v16;
      swift_bridgeObjectRelease();
      v21 = v14;
LABEL_8:
      sub_1B1CBA888();
      v12 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  else
  {
    v12 = sub_1B19FA070(a1, a1[3]);
    sub_1B222A138();
    if (!v1)
    {
      sub_1B19FA070(&v17, v20);
      sub_1B1CBC610();
      sub_1B19E52CC(&qword_1ED4B8710, (uint64_t (*)(uint64_t))sub_1B1CBC610, (uint64_t)&unk_1B22B5B6C);
      sub_1B2229D6C();
      swift_bridgeObjectRelease();
      v21 = v16;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v17);
      goto LABEL_8;
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1B1CBC610()
{
  uint64_t result;

  result = qword_1ED4B8718;
  if (!qword_1ED4B8718)
  {
    type metadata accessor for Bindings.Value();
    sub_1B19E52CC(&qword_1ED4BA070, (uint64_t (*)(uint64_t))type metadata accessor for Bindings.Value, (uint64_t)&unk_1B228B68C);
    sub_1B19E52CC(&qword_1ED4BA068, (uint64_t (*)(uint64_t))type metadata accessor for Bindings.Value, (uint64_t)&unk_1B228B664);
    type metadata accessor for FastDictCoder();
  }
  return result;
}

unint64_t sub_1B1CBC6E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEF5D5B8;
  if (!qword_1EEF5D5B8)
  {
    sub_1B1C1F5F4(255, &qword_1EEF5D5B0, (uint64_t (*)(uint64_t))type metadata accessor for Bindings.Value, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v2 = v1;
    v3 = sub_1B19E52CC(&qword_1ED4BA070, (uint64_t (*)(uint64_t))type metadata accessor for Bindings.Value, (uint64_t)&unk_1B228B68C);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5B8);
  }
  return result;
}

uint64_t sub_1B1CBC77C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

unint64_t sub_1B1CBC7B4()
{
  unint64_t result;

  result = qword_1EEF5D5D0;
  if (!qword_1EEF5D5D0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B868, &type metadata for Bindings.Value.EnumInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5D0);
  }
  return result;
}

unint64_t sub_1B1CBC7F8()
{
  unint64_t result;

  result = qword_1EEF5D5E0;
  if (!qword_1EEF5D5E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B4CC, &type metadata for Bindings.Visibility);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Bindings.Value.EnumInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1CBC888 + 4 * byte_1B228B353[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1CBC8BC + 4 * byte_1B228B34E[v4]))();
}

uint64_t sub_1B1CBC8BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CBC8C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CBC8CCLL);
  return result;
}

uint64_t sub_1B1CBC8D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CBC8E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1CBC8E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CBC8EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Bindings.Value.EnumInfo.CodingKeys()
{
  return &type metadata for Bindings.Value.EnumInfo.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Bindings.Value.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1B1CBC954 + 4 * byte_1B228B35D[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1B1CBC988 + 4 * byte_1B228B358[v4]))();
}

uint64_t sub_1B1CBC988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CBC990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CBC998);
  return result;
}

uint64_t sub_1B1CBC9A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CBC9ACLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1B1CBC9B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CBC9B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Bindings.Value.CodingKeys()
{
  return &type metadata for Bindings.Value.CodingKeys;
}

unint64_t sub_1B1CBC9D8()
{
  unint64_t result;

  result = qword_1EEF5D5E8;
  if (!qword_1EEF5D5E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B788, &type metadata for Bindings.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5E8);
  }
  return result;
}

unint64_t sub_1B1CBCA20()
{
  unint64_t result;

  result = qword_1EEF5D5F0;
  if (!qword_1EEF5D5F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B840, &type metadata for Bindings.Value.EnumInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5F0);
  }
  return result;
}

unint64_t sub_1B1CBCA68()
{
  unint64_t result;

  result = qword_1EEF5D5F8;
  if (!qword_1EEF5D5F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B7B0, &type metadata for Bindings.Value.EnumInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D5F8);
  }
  return result;
}

unint64_t sub_1B1CBCAB0()
{
  unint64_t result;

  result = qword_1EEF5D600[0];
  if (!qword_1EEF5D600[0])
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B7D8, &type metadata for Bindings.Value.EnumInfo.CodingKeys);
    atomic_store(result, qword_1EEF5D600);
  }
  return result;
}

unint64_t sub_1B1CBCAF8()
{
  unint64_t result;

  result = qword_1ED4BA060;
  if (!qword_1ED4BA060)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B6C0, &type metadata for Bindings.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4BA060);
  }
  return result;
}

unint64_t sub_1B1CBCB40()
{
  unint64_t result;

  result = qword_1ED4BA058;
  if (!qword_1ED4BA058)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228B6E8, &type metadata for Bindings.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4BA058);
  }
  return result;
}

uint64_t sub_1B1CBCB84(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  double v6;
  unsigned int v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unsigned int v34;
  char v35;
  _OWORD v37[2];
  uint64_t v38;
  uint64_t v39[12];
  _OWORD v40[6];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;

  sub_1B1CBD028(0xFFFFFFFF);
  v33 = v3;
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                 + 8 * *(_QWORD *)thread_worker_index(v6)
                 + 8);
  v9 = v7 == dword_1EEFD58F0;
  v34 = v7;
  if (v7 == dword_1EEFD58F0)
    v10 = 0;
  else
    v10 = v7;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1B1B95EBC(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for RemapContext();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 24) = sub_1B1B95EBC(v11);
  v14 = sub_1B1B7DC84(v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v14;
  *(_BYTE *)(v13 + 16) = 1;
  swift_retain();
  swift_retain();
  sub_1B1DAD9B0(a1, a1, v13);
  swift_release();
  swift_release();
  LOBYTE(v41) = v9;
  v35 = a3;
  sub_1B1F07378(v13, a1, v10 | ((unint64_t)v9 << 32), a3, v8);
  swift_bridgeObjectRetain();
  swift_release();
  swift_getKeyPath();
  v15 = *(_QWORD *)(a1 + 176);
  swift_retain();
  v16 = (void *)sub_1B1F22924((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1E639B010, v15, (void (*)(_QWORD *__return_ptr, uint64_t))sub_1B1B692E4);
  swift_release();
  swift_release();
  if (v16)
  {
    v17 = *(_QWORD **)(a1 + 176);
    swift_retain();
    v18 = sub_1B1F22B64((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1E6383A70, v17);
    swift_release();
    v19 = sub_1B1DCC5F4(v18);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v20 = v33;
    v21 = *(_QWORD *)(v33 + 176);
    swift_retain();
    v22 = (void *)sub_1B1F22924((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1E639B010, v21, (void (*)(_QWORD *__return_ptr, uint64_t))sub_1B1B692E4);
    swift_release();
    swift_release();
    v23 = v34;
    if (v22)
    {
      sub_1B1D56410(v34, v19, (uint64_t)v16);

    }
  }
  else
  {
    v20 = v33;
    v23 = v34;
  }
  v24 = *(_QWORD **)(v20 + 176);
  swift_retain();
  v25 = sub_1B1F22B64((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1E6383A70, v24);
  swift_release();
  *(_QWORD *)&v41 = v25;
  v26 = sub_1B1B8B6B0(v40, v23);
  MEMORY[0x1E0C80A78](v26, v27);
  v28 = *(_QWORD **)(v20 + 176);
  MEMORY[0x1E0C80A78](v29, v30);
  swift_retain();
  sub_1B1F22244((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1E6383A70, v28, (void (*)(uint64_t))sub_1B1B6932C);
  swift_bridgeObjectRelease();
  swift_release();
  if ((_DWORD)v23 == dword_1EEFD58F0)
    v31 = 0;
  else
    v31 = v23;
  sub_1B1E71DCC(v31 | ((unint64_t)((_DWORD)v23 == dword_1EEFD58F0) << 33));
  if ((v35 & 1) != 0)
  {
    if (qword_1ED4B7DB8 != -1)
      swift_once();
    v49 = qword_1ED4D09F8;
    v50 = 0;
    v51 = 2;
    v52 = 0;
    v53 = 2;
    v54 = 0;
    swift_retain();
    sub_1B1E3D7C4(1, (uint64_t)v37);
    swift_release();
    v47[0] = v37[0];
    v47[1] = v37[1];
    v48 = v38;
    sub_1B1E8FCE4(v20, (uint64_t)v47, 0x200000000, v39);
    sub_1B19ED688((uint64_t)v39, (uint64_t)v40);
    if (!*(_QWORD *)&v40[0])
    {
      sub_1B19ED720((uint64_t)v37);
      if ((a2 & 1) == 0)
        return v23;
      goto LABEL_18;
    }
    v43 = v40[2];
    v44 = v40[3];
    v45 = v40[4];
    v46 = v40[5];
    v41 = v40[0];
    v42 = v40[1];
    sub_1B1BEB4CC();
    sub_1B19ED720((uint64_t)v37);
    sub_1B19ED748(v39);
  }
  if ((a2 & 1) != 0)
LABEL_18:
    sub_1B1E7192C();
  return v23;
}

uint64_t sub_1B1CBD028(unsigned int a1)
{
  unint64_t v2;
  uint64_t result;
  unsigned int v4;
  int64_t v5;
  uint64_t v6;

  v6 = 0;
  MEMORY[0x1B5E23FA0](&v6, 8);
  v2 = v6 * (unint64_t)a1;
  result = HIDWORD(v2);
  if (v2 < a1)
  {
    v4 = -a1 % a1;
    if (v4 > v2)
    {
      do
      {
        v6 = 0;
        MEMORY[0x1B5E23FA0](&v6, 8);
        v5 = v6 * (unint64_t)a1;
      }
      while (v4 > v5);
      return v5 >> 32;
    }
  }
  return result;
}

uint64_t sub_1B1CBD0AC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B1B679FC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1B1CBD0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  ValueMetadata *v57;
  uint64_t v58;
  _UNKNOWN **v59;
  uint64_t *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;

  v3 = 1;
  if ((a2 & 1) == 0)
    v3 = 2;
  v64 = v3;
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v61 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    v5 = a1 + 32;
    v67 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    v7 = a2;
    v8 = v5;
    v9 = v67;
    v10 = 0;
    v11 = 0;
    v65 = v8;
    v63 = v2;
    v62 = a2;
    while (1)
    {
      v12 = (unsigned int *)(v8 + 8 * v10);
      v14 = *v12;
      v13 = v12[1];
      if ((_DWORD)v14 != -1 || (_DWORD)v13 != 0)
      {
        if ((v14 & 0x80000000) == 0
          && v4[1] > (int)v14
          && ((_DWORD)v13 == -1 || *(_DWORD *)(*v4 + 12 * (int)v14 + 8) == (_DWORD)v13))
        {
          v68 = v11;
          v17 = (int *)(*v4 + 12 * (int)v14);
          v18 = *((__int16 *)v17 + 2);
          v19 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *v17 + 32);
          if (*(_QWORD *)(v19 + 232) <= v18 && *(_QWORD *)(v19 + 240) > v18)
          {
            v21 = **(_QWORD **)(v2 + v61);
            v22 = *(os_unfair_lock_s **)(v19 + 344);
            swift_retain();
            os_unfair_lock_lock(v22);
            v66 = v21;
            v23 = *(_QWORD *)(v21 + 32);
            ecs_stack_allocator_push_snapshot(v23);
            v24 = *(_QWORD *)(*(_QWORD *)(v19 + 40) + 16);
            v25 = *(_QWORD *)(v24 + 128);
            if (*(_QWORD *)(v25 + 16)
              && (v26 = sub_1B1DC3AC8((uint64_t)&type metadata for TextureLoadingOptions), (v27 & 1) != 0)
              && *(ValueMetadata **)(*(_QWORD *)(v24 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26) + 32) == &type metadata for TextureLoadingOptions)
            {
              swift_retain();
            }
            else
            {
              swift_retain();
              v28 = ecs_stack_allocator_allocate(v23, 8, 8);
              v29 = v28;
              *v28 = v18;
              v30 = *(_QWORD *)(v19 + 192);
              if (v30)
                sub_1B1FE2290(v28, 1, 1, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1E63A6E90, 1, v30, *(_QWORD *)(v19 + 200), *(_QWORD *)(v19 + 208));
              v60 = v29;
              sub_1B1FE26A8(*(_QWORD *)(v19 + 40), v19, v29, 1, 1);
              v31 = *(_DWORD *)(v19 + 24);
              swift_retain();
              v72 = 0;
              memset(v71, 0, sizeof(v71));
              v70 = 0;
              memset(v69, 0, sizeof(v69));
              v32 = sub_1B1DA4ED8(v31, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1E63A6E90, 0, 0, (uint64_t)v71, (uint64_t)v69);
              swift_release();
              sub_1B1CC62CC((uint64_t)v69, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
              sub_1B1CC62CC((uint64_t)v71, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
              if ((uint64_t)(*(_QWORD *)(v19 + 240) - *(_QWORD *)(v19 + 232)) < 2)
              {
                if (sub_1B1A10B20(v32))
                {
                  sub_1B1A10BB0(v32);
                }
                else
                {
                  v35 = *(_QWORD *)(v19 + 232);
                  v36 = *(_QWORD *)(v19 + 240);
                  v37 = *(unsigned __int8 *)(v19 + 120);
                  v38 = *(unsigned int *)(v19 + 28);
                  LOBYTE(v71[0]) = *(_BYTE *)(v19 + 32);
                  sub_1B1FD8C68(v35, v36, v32, v37, v38 | ((unint64_t)LOBYTE(v71[0]) << 32), 0, 0, 0);
                }
              }
              else
              {
                v33 = *(unsigned __int8 *)(v19 + 120);
                v34 = *(unsigned int *)(v19 + 28);
                LOBYTE(v71[0]) = *(_BYTE *)(v19 + 32);
                sub_1B1FD891C(v60, 1, 1, v32, v33, v34 | ((unint64_t)LOBYTE(v71[0]) << 32), 0, 0);
              }
            }
            v11 = v68;
            v2 = v63;
            if (v4[1] <= (int)v14
              || (v39 = *v4, (_DWORD)v13 != -1) && *(_DWORD *)(v39 + 12 * (int)v14 + 8) != (_DWORD)v13
              || (sub_1B1FF1B7C(*(_QWORD *)(*(_QWORD *)(v63 + 136) + 8 * *(int *)(v39 + 12 * (int)v14) + 32), *(_WORD *)(v39 + 12 * (int)v14 + 4), 64, v63, v14 | ((unint64_t)v13 << 32), v64) & 1) == 0)
            {
              *(_QWORD *)&v71[0] = 0;
              *((_QWORD *)&v71[0] + 1) = 0xE000000000000000;
              sub_1B2229430();
              sub_1B2228890();
              sub_1B1BC3C70();
              sub_1B2228890();
              swift_bridgeObjectRelease();
              sub_1B2228890();
              sub_1B2228890();
              sub_1B2228890();
              sub_1B2229688();
              __break(1u);
              swift_release();
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
              __break(1u);
              return;
            }
            swift_release();
            ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v66 + 32));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
            swift_release();
            v9 = v67;
            v8 = v65;
            v7 = v62;
          }
        }
        v41 = (int)v14 >= 0 && v4[1] > (int)v14;
        if ((v7 & 1) != 0)
        {
          if (!v41)
            goto LABEL_6;
          v49 = *v4 + 12 * (int)v14;
          if ((_DWORD)v13 != -1 && *(_DWORD *)(v49 + 8) != (_DWORD)v13)
            goto LABEL_6;
          v51 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(*v4 + 12 * (int)v14) + 32);
          v52 = *(_QWORD *)(v51 + 48);
          v53 = *(_QWORD *)(v52 + 16);
          if (!v53)
            goto LABEL_6;
          v54 = *(__int16 *)(v49 + 4);
          v55 = (_QWORD *)(v52 + 56);
          while ((ValueMetadata *)*(v55 - 3) != &type metadata for TextureLoadPolicy)
          {
            v55 += 5;
            if (!--v53)
              goto LABEL_6;
          }
          if (*(_BYTE *)(*(_QWORD *)(v51 + 128) + *v55 + 4 * v54) != 1)
            goto LABEL_6;
          v56 = v14 | (v13 << 32);
          v57 = &type metadata for TextureLoadRequestCPU;
          v58 = v7;
          v59 = &off_1E63A6C00;
        }
        else
        {
          if (!v41)
            goto LABEL_6;
          v42 = *v4 + 12 * (int)v14;
          if ((_DWORD)v13 != -1 && *(_DWORD *)(v42 + 8) != (_DWORD)v13)
            goto LABEL_6;
          v44 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(*v4 + 12 * (int)v14) + 32);
          v45 = *(_QWORD *)(v44 + 48);
          v46 = *(_QWORD *)(v45 + 16);
          if (!v46)
            goto LABEL_6;
          v47 = *(__int16 *)(v42 + 4);
          v48 = (_QWORD *)(v45 + 56);
          while ((ValueMetadata *)*(v48 - 3) != &type metadata for TextureLoadPolicy)
          {
            v48 += 5;
            if (!--v46)
              goto LABEL_6;
          }
          if (*(_BYTE *)(*(_QWORD *)(v44 + 128) + *v48 + 4 * v47 + 1) != 1)
            goto LABEL_6;
          v56 = v14 | (v13 << 32);
          v57 = &type metadata for TextureLoadRequestGPU;
          v58 = v7;
          v59 = &off_1E63A6CD8;
        }
        sub_1B1FE16DC((uint64_t)v57, (uint64_t)v59, v56);
        v7 = v58;
        v8 = v65;
        v9 = v67;
      }
LABEL_6:
      if (++v10 == v9)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

unint64_t sub_1B1CBD758(unint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int64_t v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *j;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *i;
  ValueMetadata *v48;
  _UNKNOWN **v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  _OWORD v56[2];
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;

  v3 = v2;
  v5 = result;
  v6 = HIDWORD(result);
  if ((a2 & 1) != 0)
    v7 = 1;
  else
    v7 = 2;
  if (result == 0xFFFFFFFF)
    return result;
  v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v9 = result << 32;
  v10 = result;
  if ((uint64_t)(result << 32) >= (uint64_t)0xFFFFFFFF00000001 && (int)result < v8[1])
  {
    v11 = *v8;
    if (HIDWORD(result) == -1 || *(_DWORD *)(v11 + 12 * (int)result + 8) == HIDWORD(result))
    {
      v12 = (int *)(v11 + 12 * (int)result);
      v13 = *((__int16 *)v12 + 2);
      v14 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *v12 + 32);
      if (*(_QWORD *)(v14 + 232) <= v13 && *(_QWORD *)(v14 + 240) > v13)
      {
        v54 = v7;
        v52 = v2;
        v16 = **(_QWORD **)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        v17 = *(os_unfair_lock_s **)(v14 + 344);
        swift_retain();
        os_unfair_lock_lock(v17);
        v53 = v16;
        v18 = *(_QWORD *)(v16 + 32);
        ecs_stack_allocator_push_snapshot(v18);
        v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 40) + 16) + 128);
        if (*(_QWORD *)(v19 + 16)
          && (v51 = v18,
              v20 = *(_QWORD *)(*(_QWORD *)(v14 + 40) + 16),
              v21 = sub_1B1DC3AC8((uint64_t)&type metadata for TextureLoadingOptions),
              v22 = v20,
              v18 = v51,
              (v23 & 1) != 0)
          && *(ValueMetadata **)(*(_QWORD *)(v22 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21) + 32) == &type metadata for TextureLoadingOptions)
        {
          swift_retain();
          v3 = v52;
        }
        else
        {
          swift_retain();
          v24 = ecs_stack_allocator_allocate(v18, 8, 8);
          v25 = v24;
          *v24 = v13;
          v26 = *(_QWORD *)(v14 + 192);
          if (v26)
            sub_1B1FE2290(v24, 1, 1, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1E63A6E90, 1, v26, *(_QWORD *)(v14 + 200), *(_QWORD *)(v14 + 208));
          v50 = v25;
          sub_1B1FE26A8(*(_QWORD *)(v14 + 40), v14, v25, 1, 1);
          v27 = *(_DWORD *)(v14 + 24);
          swift_retain();
          v59 = 0;
          memset(v58, 0, sizeof(v58));
          v57 = 0;
          memset(v56, 0, sizeof(v56));
          v55 = sub_1B1DA4ED8(v27, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1E63A6E90, 0, 0, (uint64_t)v58, (uint64_t)v56);
          swift_release();
          sub_1B1CC62CC((uint64_t)v56, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
          sub_1B1CC62CC((uint64_t)v58, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
          v3 = v52;
          if ((uint64_t)(*(_QWORD *)(v14 + 240) - *(_QWORD *)(v14 + 232)) < 2)
          {
            if (sub_1B1A10B20(v55))
            {
              sub_1B1A10BB0(v55);
            }
            else
            {
              v30 = *(_QWORD *)(v14 + 232);
              v31 = *(_QWORD *)(v14 + 240);
              v32 = *(unsigned __int8 *)(v14 + 120);
              v33 = *(unsigned int *)(v14 + 28);
              LOBYTE(v58[0]) = *(_BYTE *)(v14 + 32);
              sub_1B1FD8C68(v30, v31, v55, v32, v33 | ((unint64_t)LOBYTE(v58[0]) << 32), 0, 0, 0);
            }
          }
          else
          {
            v28 = *(unsigned __int8 *)(v14 + 120);
            v29 = *(unsigned int *)(v14 + 28);
            LOBYTE(v58[0]) = *(_BYTE *)(v14 + 32);
            sub_1B1FD891C(v50, 1, 1, v55, v28, v29 | ((unint64_t)LOBYTE(v58[0]) << 32), 0, 0);
          }
        }
        if ((sub_1B1FE02FC(v5, v3, v54) & 1) == 0)
        {
          *(_QWORD *)&v58[0] = 0;
          *((_QWORD *)&v58[0] + 1) = 0xE000000000000000;
          sub_1B2229430();
          sub_1B2228890();
          sub_1B1BC3C70();
          sub_1B2228890();
          swift_bridgeObjectRelease();
          sub_1B2228890();
          sub_1B2228890();
          sub_1B2228890();
          result = sub_1B2229688();
          __break(1u);
          return result;
        }
        swift_release();
        ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v53 + 32));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
        result = swift_release();
      }
    }
  }
  v35 = v9 > (uint64_t)0xFFFFFFFF00000000 && (int)v5 < v8[1];
  if ((a2 & 1) != 0)
  {
    if (v35)
    {
      v42 = *v8 + 12 * v10;
      v43 = *(__int16 *)(v42 + 4);
      if ((_DWORD)v6 == -1 || *(_DWORD *)(v42 + 8) == (_DWORD)v6)
      {
        v44 = *(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(*v8 + 12 * v10) + 32);
        v45 = *(_QWORD *)(v44 + 48);
        v46 = *(_QWORD *)(v45 + 16);
        if (v46)
        {
          for (i = (_QWORD *)(v45 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadPolicy; i += 5)
          {
            if (!--v46)
              return result;
          }
          if (*(_BYTE *)(*(_QWORD *)(v44 + 128) + *i + 4 * v43) == 1)
          {
            v48 = &type metadata for TextureLoadRequestCPU;
            v49 = &off_1E63A6C00;
            return sub_1B1FE16DC((uint64_t)v48, (uint64_t)v49, v5);
          }
        }
      }
    }
  }
  else if (v35)
  {
    v36 = *v8 + 12 * v10;
    v37 = *(__int16 *)(v36 + 4);
    if ((_DWORD)v6 == -1 || *(_DWORD *)(v36 + 8) == (_DWORD)v6)
    {
      v38 = *(_QWORD *)(*(_QWORD *)(v3 + 136) + 8 * *(int *)(*v8 + 12 * v10) + 32);
      v39 = *(_QWORD *)(v38 + 48);
      v40 = *(_QWORD *)(v39 + 16);
      if (v40)
      {
        for (j = (_QWORD *)(v39 + 56); (ValueMetadata *)*(j - 3) != &type metadata for TextureLoadPolicy; j += 5)
        {
          if (!--v40)
            return result;
        }
        if (*(_BYTE *)(*(_QWORD *)(v38 + 128) + *j + 4 * v37 + 1) == 1)
        {
          v48 = &type metadata for TextureLoadRequestGPU;
          v49 = &off_1E63A6CD8;
          return sub_1B1FE16DC((uint64_t)v48, (uint64_t)v49, v5);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B1CBDD78(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  os_unfair_lock_s *v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;

  v2 = v1;
  v4 = v1[5];
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  v6 = sub_1B204D6E4();
  v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B1E8F784(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v8 = v2[10];
  swift_getObjectType();
  v9 = sub_1B204D6E4();
  v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B1E8F784(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v11 = v2[15];
  swift_getObjectType();
  v12 = sub_1B204D6E4();
  v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B1E8F784(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v14 = v2[25];
  swift_getObjectType();
  v15 = sub_1B204D6E4();
  v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B1E8F784(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v17 = v2[30];
  swift_getObjectType();
  v18 = sub_1B204D6E4();
  v19 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v19);
  sub_1B1E8F784(a1, v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v18, v17);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v20 = v2[35];
  swift_getObjectType();
  v21 = sub_1B204D6E4();
  v22 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v22);
  sub_1B1E8F784(a1, v20);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v21, v20);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v23 = v2[20];
  swift_getObjectType();
  v24 = sub_1B204D6E4();
  v25 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v25);
  sub_1B1E8F784(a1, v23);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v24, v23);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v26 = v2[60];
  swift_getObjectType();
  v27 = sub_1B204D6E4();
  v28 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v28);
  sub_1B1E8F784(a1, v26);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v27, v26);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v29 = v2[45];
  swift_getObjectType();
  v30 = sub_1B204D6E4();
  v31 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v31);
  sub_1B1E8F784(a1, v29);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v30, v29);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v32 = v2[40];
  swift_getObjectType();
  v33 = sub_1B204D6E4();
  v34 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v34);
  sub_1B1E8F784(a1, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v33, v32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v35 = v2[55];
  swift_getObjectType();
  v36 = sub_1B204D6E4();
  v37 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v37);
  sub_1B1E8F784(a1, v35);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v36, v35);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  v38 = v2[50];
  swift_getObjectType();
  v39 = sub_1B204D6E4();
  v40 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v40);
  sub_1B1E8F784(a1, v38);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v39, v38);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t *sub_1B1CBE428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  int v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  __objc2_class *Class;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int *v51;
  int v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  _QWORD *v77;
  void *v78;
  __objc2_class *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  unsigned int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  os_unfair_lock_s *v93;
  os_unfair_lock_s *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  int v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  __int128 v135;
  __int128 v136;
  uint64_t *result;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int16 v144;
  __int16 v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  int v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  int v155;
  _QWORD *v156;
  unsigned int *v157;
  uint64_t v158;
  unsigned int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  _QWORD *v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _OWORD v180[5];
  int v181;
  uint64_t v182[8];
  uint64_t v183;
  _OWORD v184[2];
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  __int128 v191[2];
  uint64_t v192;
  char v193[40];
  _QWORD v194[5];
  uint64_t v195[3];
  __int128 v196;
  uint64_t v197;
  uint64_t v198[8];
  _OWORD v199[2];
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  _OWORD v206[2];
  uint64_t v207;
  _OWORD v208[2];
  uint64_t v209;
  _BYTE v210[40];
  _OWORD v211[5];
  int v212;
  _OWORD v213[5];
  int v214;
  _OWORD v215[2];
  uint64_t v216;
  _BYTE v217[40];
  _OWORD v218[2];
  uint64_t v219;

  v2 = v1;
  v3 = (uint64_t *)a1;
  v4 = *(_OWORD *)(v1 + 56);
  v218[0] = *(_OWORD *)(v1 + 40);
  v218[1] = v4;
  v219 = *(_QWORD *)(v1 + 72);
  sub_1B1E8FCE4(a1, (uint64_t)v218, 0x200000000, v198);
  sub_1B1A18378((uint64_t)v198, (uint64_t)v199, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  v179 = (uint64_t)v3;
  if (!*(_QWORD *)&v199[0])
    goto LABEL_114;
  if (v205 >= 1)
  {
    v170 = v202;
    if (v202)
    {
      v138 = v1;
      v5 = v204;
      v174 = v204[4];
      v173 = *(unsigned __int8 *)(v203 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v206[0] = v199[0];
      v206[1] = v199[1];
      v207 = v200;
      v167 = (uint64_t)(v204 + 6);
      v168 = v201;
      v164 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      v165 = v204 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      v6 = 0;
      while (1)
      {
        v172 = v6;
        v7 = (unsigned int *)(v168 + 48 * v6);
        v8 = *v7;
        v9 = v7[1];
        v11 = (uint64_t *)*((_QWORD *)v7 + 2);
        v10 = *((_QWORD *)v7 + 3);
        v12 = *((_QWORD *)v7 + 4);
        v13 = *((_QWORD *)v7 + 5);
        if (v173)
        {
          v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v174);
        sub_1B1A18378(v167, (uint64_t)v217, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
        v15 = v5[4];
        v176 = v13;
        v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v5[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v5[7] = v16;
        v165[1] = 0;
        v165[2] = 0;
        *v165 = 0;
        swift_release();
        v17 = sub_1B1A12038((uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1E6399B80, v11, v10, v12, (uint64_t)v5);
        if (v11)
        {
          if (v12)
          {
            v18 = 0;
            while (1)
            {
              v19 = (int *)(v17 + 32 * v18);
              v20 = v19[1];
              v21 = *v19;
              v22 = (_DWORD)v21 == -1 && v20 == 0;
              if (v22)
                goto LABEL_17;
              if ((v21 & 0x80000000) != 0)
                goto LABEL_17;
              v23 = v164[1];
              if (v23 <= v21)
                goto LABEL_17;
              v24 = *v164;
              v25 = *v164 + 12 * (int)v21;
              if (v20 != -1 && *(_DWORD *)(v25 + 8) != v20)
                goto LABEL_17;
              v27 = *(int *)(v24 + 12 * (int)v21);
              v28 = *(_QWORD *)(v179 + 136) + 32;
              v29 = *(_QWORD *)(v28 + 8 * v27);
              v30 = *(_QWORD *)(v29 + 48);
              v31 = *(_QWORD *)(v30 + 16);
              if (!v31)
                goto LABEL_17;
              v32 = *(__int16 *)(v25 + 4);
              v33 = (_QWORD *)(v30 + 56);
              while ((ValueMetadata *)*(v33 - 3) != &type metadata for MeshModel)
              {
                v33 += 5;
                if (!--v31)
                  goto LABEL_17;
              }
              v34 = *(_QWORD *)(*(_QWORD *)(v29 + 128) + *v33 + 16 * v32 + 8);
              if (!*(_QWORD *)(v34 + 16))
                goto LABEL_17;
              v35 = *(_DWORD *)(v34 + 36);
              v36 = *(int *)(v34 + 32);
              v37 = (_DWORD)v36 == -1 && v35 == 0;
              if (v37 || (v36 & 0x80000000) != 0 || v23 <= v36)
                goto LABEL_17;
              v38 = v24 + 12 * (int)v36;
              if (v35 != -1 && *(_DWORD *)(v38 + 8) != v35)
                goto LABEL_17;
              v40 = *(_QWORD *)(v28 + 8 * *(int *)(v24 + 12 * (int)v36));
              v41 = *(_QWORD *)(v40 + 48);
              v42 = *(_QWORD *)(v41 + 16);
              if (!v42)
                goto LABEL_17;
              v43 = *(__int16 *)(v38 + 4);
              v44 = *(unsigned int *)(v24 + 12 * (int)v36);
              v45 = (_QWORD *)(v41 + 56);
              while ((ValueMetadata *)*(v45 - 3) != &type metadata for Material)
              {
                v45 += 5;
                if (!--v42)
                  goto LABEL_17;
              }
              v46 = *(void **)(*(_QWORD *)(v40 + 128) + *v45 + 104 * v43 + 24);
              if (v46)
              {
                v144 = v43;
                v147 = *(unsigned int *)(v24 + 12 * (int)v36);
                v152 = v40;
                v157 = *(unsigned int **)(*(_QWORD *)(v40 + 128) + *v45 + 104 * v43 + 24);
                Class = (__objc2_class *)object_getClass(v46);
                if (Class == _TtC3VFX13PBRParameters)
                {
                  v49 = v157[8];
                  v50 = v157[9];
                  goto LABEL_60;
                }
                v22 = Class == _TtC3VFX16PrelitParameters;
                v44 = v147;
                v40 = v152;
                LOWORD(v43) = v144;
                if (v22)
                {
                  v49 = v157[4];
                  v50 = v157[5];
LABEL_60:
                  swift_retain();
                  swift_bridgeObjectRetain();
LABEL_61:
                  sub_1B1CBD758(v49 | (v50 << 32), 1);
                  goto LABEL_62;
                }
              }
              sub_1B1D1CB54(v40, v44 | ((unint64_t)*(unsigned __int16 *)(v24 + 12 * (int)v36 + 6) << 48) | ((unint64_t)(unsigned __int16)v43 << 32), 248, v179, (uint64_t)v184);
              sub_1B1A18378((uint64_t)v184, (uint64_t)v180, &qword_1ED4B8CB0, (uint64_t)&type metadata for MaterialRuntime);
              sub_1B1A18378((uint64_t)v180, (uint64_t)v182, &qword_1ED4B8CB0, (uint64_t)&type metadata for MaterialRuntime);
              if (sub_1B1B3C438(v182) != 1)
              {
                if (*(_QWORD *)(v183 + 16))
                {
                  v49 = *(_QWORD *)(v183 + 32);
                  v48 = *(_QWORD *)(v183 + 40);
                  v158 = *(_QWORD *)(v183 + 48);
                  v153 = *(unsigned __int8 *)(v183 + 56);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  v148 = v49;
                  sub_1B1CC60E4(v49, v48, v158, v153);
                  sub_1B1CC6104((uint64_t)v180);
                  if (v153 == 2)
                  {
                    v49 = v49;
                    v50 = HIDWORD(v148);
                    goto LABEL_61;
                  }
                  sub_1B1CC62AC(v49, v48, v158, v153);
LABEL_62:
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_17;
                }
                sub_1B1CC6104((uint64_t)v180);
              }
LABEL_17:
              if (++v18 == v12)
                goto LABEL_13;
            }
          }
          goto LABEL_13;
        }
        if ((_DWORD)v8 != (_DWORD)v9)
          break;
LABEL_13:
        sub_1B1F05D48(v5, (unsigned __int16 **)v206, (uint64_t)v217);
        sub_1B1F03804((char *)v176);
        ecs_stack_allocator_pop_snapshot(v174);
        if ((v173 & 1) != 0)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v176 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v176 + 376));
        }
        swift_release();
        v6 = v172 + 1;
        if (v172 + 1 == v170)
        {
          sub_1B19ED748(v198);
          v2 = v138;
          v3 = (uint64_t *)v179;
          goto LABEL_113;
        }
      }
      while (1)
      {
        v51 = (int *)(v17 + 32 * v8);
        v52 = v51[1];
        v53 = *v51;
        if ((_DWORD)v53 == -1 && v52 == 0)
          goto LABEL_65;
        if ((v53 & 0x80000000) != 0)
          goto LABEL_65;
        v55 = v164[1];
        if (v55 <= v53)
          goto LABEL_65;
        v56 = *v164;
        v57 = *v164 + 12 * (int)v53;
        if (v52 != -1 && *(_DWORD *)(v57 + 8) != v52)
          goto LABEL_65;
        v59 = *(int *)(v56 + 12 * (int)v53);
        v60 = *(_QWORD *)(v179 + 136) + 32;
        v61 = *(_QWORD *)(v60 + 8 * v59);
        v62 = *(_QWORD *)(v61 + 48);
        v63 = *(_QWORD *)(v62 + 16);
        if (!v63)
          goto LABEL_65;
        v64 = *(__int16 *)(v57 + 4);
        v65 = (_QWORD *)(v62 + 56);
        while ((ValueMetadata *)*(v65 - 3) != &type metadata for MeshModel)
        {
          v65 += 5;
          if (!--v63)
            goto LABEL_65;
        }
        v66 = *(_QWORD *)(*(_QWORD *)(v61 + 128) + *v65 + 16 * v64 + 8);
        if (!*(_QWORD *)(v66 + 16))
          goto LABEL_65;
        v67 = *(_DWORD *)(v66 + 36);
        v68 = *(int *)(v66 + 32);
        v69 = (_DWORD)v68 == -1 && v67 == 0;
        if (v69 || (v68 & 0x80000000) != 0 || v55 <= v68)
          goto LABEL_65;
        v70 = v56 + 12 * (int)v68;
        if (v67 != -1 && *(_DWORD *)(v70 + 8) != v67)
          goto LABEL_65;
        v72 = *(_QWORD *)(v60 + 8 * *(int *)(v56 + 12 * (int)v68));
        v73 = *(_QWORD *)(v72 + 48);
        v74 = *(_QWORD *)(v73 + 16);
        if (!v74)
          goto LABEL_65;
        v75 = *(__int16 *)(v70 + 4);
        v76 = *(unsigned int *)(v56 + 12 * (int)v68);
        v77 = (_QWORD *)(v73 + 56);
        while ((ValueMetadata *)*(v77 - 3) != &type metadata for Material)
        {
          v77 += 5;
          if (!--v74)
            goto LABEL_65;
        }
        v78 = *(void **)(*(_QWORD *)(v72 + 128) + *v77 + 104 * v75 + 24);
        if (v78)
        {
          v145 = v75;
          v149 = *(unsigned int *)(v56 + 12 * (int)v68);
          v154 = v72;
          v159 = *(unsigned int **)(*(_QWORD *)(v72 + 128) + *v77 + 104 * v75 + 24);
          v79 = (__objc2_class *)object_getClass(v78);
          if (v79 == _TtC3VFX13PBRParameters)
          {
            v81 = v159[8];
            v82 = v159[9];
            goto LABEL_108;
          }
          v22 = v79 == _TtC3VFX16PrelitParameters;
          v76 = v149;
          v72 = v154;
          LOWORD(v75) = v145;
          if (v22)
          {
            v81 = v159[4];
            v82 = v159[5];
LABEL_108:
            swift_retain();
            swift_bridgeObjectRetain();
LABEL_109:
            sub_1B1CBD758(v81 | (v82 << 32), 1);
            goto LABEL_110;
          }
        }
        sub_1B1D1CB54(v72, v76 | ((unint64_t)*(unsigned __int16 *)(v56 + 12 * (int)v68 + 6) << 48) | ((unint64_t)(unsigned __int16)v75 << 32), 248, v179, (uint64_t)v184);
        sub_1B1A18378((uint64_t)v184, (uint64_t)v180, &qword_1ED4B8CB0, (uint64_t)&type metadata for MaterialRuntime);
        sub_1B1A18378((uint64_t)v180, (uint64_t)v182, &qword_1ED4B8CB0, (uint64_t)&type metadata for MaterialRuntime);
        if (sub_1B1B3C438(v182) != 1)
        {
          if (*(_QWORD *)(v183 + 16))
          {
            v81 = *(_QWORD *)(v183 + 32);
            v80 = *(_QWORD *)(v183 + 40);
            v160 = *(_QWORD *)(v183 + 48);
            v155 = *(unsigned __int8 *)(v183 + 56);
            swift_retain();
            swift_bridgeObjectRetain();
            v150 = v81;
            sub_1B1CC60E4(v81, v80, v160, v155);
            sub_1B1CC6104((uint64_t)v180);
            if (v155 == 2)
            {
              v81 = v81;
              v82 = HIDWORD(v150);
              goto LABEL_109;
            }
            sub_1B1CC62AC(v81, v80, v160, v155);
LABEL_110:
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_65;
          }
          sub_1B1CC6104((uint64_t)v180);
        }
LABEL_65:
        if (++v8 == v9)
          goto LABEL_13;
      }
    }
  }
LABEL_113:
  sub_1B19ED748(v198);
LABEL_114:
  v83 = *(_OWORD *)(v2 + 96);
  v215[0] = *(_OWORD *)(v2 + 80);
  v215[1] = v83;
  v216 = *(_QWORD *)(v2 + 112);
  sub_1B1E8FCE4((uint64_t)v3, (uint64_t)v215, 0x200000000, v182);
  sub_1B1A18378((uint64_t)v182, (uint64_t)v184, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v184[0])
  {
    LOBYTE(v86) = 0;
    LOBYTE(v87) = 0;
    goto LABEL_166;
  }
  if (v190 < 1 || (v143 = v187) == 0)
  {
    LOBYTE(v86) = 0;
    LOBYTE(v87) = 0;
    goto LABEL_165;
  }
  v84 = v189[4];
  v151 = *(unsigned __int8 *)(v188 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v208[0] = v184[0];
  v208[1] = v184[1];
  v209 = v185;
  v141 = (uint64_t)(v189 + 6);
  v142 = v186;
  v169 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v156 = v189;
  v140 = v189 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  v85 = 0;
  v86 = 0;
  v87 = 0;
  v139 = v84;
  while (1)
  {
    v146 = v85;
    v88 = (unsigned int *)(v142 + 48 * v85);
    v89 = *v88;
    v177 = v88[1];
    v91 = (uint64_t *)*((_QWORD *)v88 + 2);
    v90 = *((_QWORD *)v88 + 3);
    v92 = *((_QWORD *)v88 + 5);
    v163 = *((_QWORD *)v88 + 4);
    v161 = v92;
    if (v151)
    {
      v93 = *(os_unfair_lock_s **)(v92 + 376);
      swift_retain();
      v94 = v93;
      v92 = v161;
      os_unfair_lock_lock(v94);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v161 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v84);
    sub_1B1A18378(v141, (uint64_t)v210, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v95 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v92 + 40) + 16) + 32) + 16);
    v96 = v156[4];
    v97 = v95 + 1;
    v98 = 48 * (v95 + 1);
    swift_retain();
    v156[6] = ecs_stack_allocator_allocate(v96, v98, 8);
    v156[7] = v97;
    v140[1] = 0;
    v140[2] = 0;
    *v140 = 0;
    swift_release();
    v162 = sub_1B1A12038((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, v91, v90, v163, (uint64_t)v156);
    if (!v91)
    {
      if ((_DWORD)v89 != (_DWORD)v177)
      {
        v132 = v177 - v89;
        v133 = v162 + 88 * v89;
        do
        {
          v134 = *(unsigned __int8 *)(v133 + 45);
          v86 |= v134;
          v87 |= v134 ^ 1;
          v180[2] = *(_OWORD *)(v133 + 32);
          v180[3] = *(_OWORD *)(v133 + 48);
          v180[4] = *(_OWORD *)(v133 + 64);
          v181 = *(_DWORD *)(v133 + 80);
          v180[0] = *(_OWORD *)v133;
          v180[1] = *(_OWORD *)(v133 + 16);
          sub_1B1CC5BB0((uint64_t)v3, (uint64_t)v180);
          v135 = *(_OWORD *)(v133 + 48);
          v213[2] = *(_OWORD *)(v133 + 32);
          v213[3] = v135;
          v213[4] = *(_OWORD *)(v133 + 64);
          v214 = *(_DWORD *)(v133 + 80);
          v136 = *(_OWORD *)(v133 + 16);
          v213[0] = *(_OWORD *)v133;
          v213[1] = v136;
          sub_1B1CC5F44((uint64_t)v3, (uint64_t)v213);
          v133 += 88;
          --v132;
        }
        while (v132);
      }
      goto LABEL_160;
    }
    v99 = v169;
    if (v163)
      break;
LABEL_160:
    sub_1B1F05D48(v156, (unsigned __int16 **)v208, (uint64_t)v210);
    sub_1B1F03804((char *)v161);
    v84 = v139;
    ecs_stack_allocator_pop_snapshot(v139);
    if ((v151 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v161 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v161 + 376));
    }
    swift_release();
    v85 = v146 + 1;
    if (v146 + 1 == v143)
    {
      sub_1B19ED748(v182);
LABEL_165:
      sub_1B19ED748(v182);
LABEL_166:
      sub_1B1CBFD10((uint64_t)v3);
      sub_1B1CC0058((uint64_t)v3);
      sub_1B1CBF3D8((uint64_t)v3, v87 & 1, v86 & 1);
      sub_1B1CC1780((uint64_t)v3);
      sub_1B1CC1AE4(v3);
      sub_1B1CC2620((uint64_t)v3);
      return sub_1B1CC3D50((uint64_t)v3);
    }
  }
  v100 = 0;
  while (1)
  {
    v178 = v100;
    v102 = v162 + 88 * v100;
    v175 = *(unsigned __int8 *)(v102 + 45);
    v103 = *(_OWORD *)(v102 + 48);
    v104 = *(_OWORD *)(v102 + 64);
    v211[2] = *(_OWORD *)(v102 + 32);
    v211[3] = v103;
    v211[4] = v104;
    v212 = *(_DWORD *)(v102 + 80);
    v105 = *(_OWORD *)(v102 + 16);
    v211[0] = *(_OWORD *)v102;
    v211[1] = v105;
    sub_1B1CC5BB0((uint64_t)v3, (uint64_t)v211);
    v106 = *(_QWORD *)(v102 + 24);
    v197 = MEMORY[0x1E0DEE9D8];
    v107 = *(_QWORD *)(v106 + 16);
    if (v107)
      break;
LABEL_126:
    v86 |= v175;
    v87 |= v175 ^ 1;
    v101 = swift_bridgeObjectRetain();
    sub_1B1CBD0B4(v101, 0);
    swift_bridgeObjectRelease_n();
    v100 = v178 + 1;
    if (v178 + 1 == v163)
      goto LABEL_160;
  }
  v166 = v87;
  v108 = v106 + 32;
  swift_bridgeObjectRetain();
  v109 = 0;
  v171 = v108;
  while (2)
  {
    v110 = (int *)(v108 + 8 * v109);
    v111 = v110[1];
    v112 = *v110;
    v113 = (_DWORD)v112 == -1 && v111 == 0;
    if (v113
      || (v112 & 0x80000000) != 0
      || v99[1] <= v112
      || ((v114 = *v99, v111 != -1) ? (v115 = *(_DWORD *)(*v99 + 12 * (int)v112 + 8) == v111) : (v115 = 1),
          !v115
       || (v116 = *(_QWORD *)(v3[17] + 8 * *(int *)(v114 + 12 * (int)v112) + 32), (*(_BYTE *)(v116 + 120) & 1) == 0)))
    {
LABEL_130:
      if (++v109 == v107)
      {
        swift_bridgeObjectRelease();
        v87 = v166;
        goto LABEL_126;
      }
      continue;
    }
    break;
  }
  v117 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3[10] + 8 * *(__int16 *)(v114 + 12 * (int)v112 + 6) + 32) + 16)
                   + 32);
  v118 = *(_QWORD *)(v117 + 16);
  if (!v118)
  {
    v99 = v169;
    goto LABEL_130;
  }
  v119 = *(__int16 *)(v114 + 12 * (int)v112 + 4);
  v120 = v117 + 32;
  swift_retain();
  swift_retain();
  v121 = 0;
  while (1)
  {
    v122 = *(_QWORD *)(v116 + 48);
    v123 = *(_QWORD *)(v122 + 16);
    if (!v123)
      break;
    v124 = *(_OWORD *)(v120 + 16 * v121++);
    v125 = v124;
    v126 = v122 + 56;
    while (*(_QWORD *)(v126 - 24) != (_QWORD)v124)
    {
      v126 += 40;
      if (!--v123)
        goto LABEL_167;
    }
    v129 = v126 - 8;
    v128 = *(_QWORD *)(v126 - 8);
    v127 = *(_QWORD *)(v129 + 8);
    if (v128 <= 1)
      v128 = 1;
    v130 = *(_QWORD *)(v116 + 128) + v127 + v128 * v119;
    v196 = v124;
    v131 = sub_1B1A137F4(v195);
    sub_1B1F28148(v130, v125, (uint64_t)v131);
    sub_1B19FA198((uint64_t)v195, (uint64_t)v193);
    sub_1B1A025A0(0, (unint64_t *)&qword_1ED4B8C70);
    sub_1B1A025A0(0, (unint64_t *)&qword_1ED4B9C40);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1B1A02518(v191, (uint64_t)v194);
      sub_1B1CBFB4C(v194);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v194);
    }
    else
    {
      v192 = 0;
      memset(v191, 0, sizeof(v191));
      sub_1B1CC62CC((uint64_t)v191, &qword_1ED4B9C50, (unint64_t *)&qword_1ED4B9C40, (uint64_t)&protocol descriptor for ParticleDefaultRendererable);
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v195);
    if (v121 == v118)
    {
      swift_release();
      swift_release();
      v3 = (uint64_t *)v179;
      v99 = v169;
      v108 = v171;
      goto LABEL_130;
    }
  }
LABEL_167:
  result = (uint64_t *)sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1CBF3D8(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  int32x2_t v32;
  BOOL v33;
  uint64_t v35;
  uint64_t v36;
  int32x2_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  _DWORD *v46;
  uint64_t v47;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  int32x2_t v52;
  BOOL v53;
  uint64_t v55;
  uint64_t v56;
  int32x2_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  char v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[8];
  _OWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  _OWORD v94[2];
  uint64_t v95;
  _BYTE v96[40];
  _OWORD v97[2];
  uint64_t v98;

  v7 = *(_OWORD *)(v3 + 136);
  v97[0] = *(_OWORD *)(v3 + 120);
  v97[1] = v7;
  v98 = *(_QWORD *)(v3 + 152);
  sub_1B1E8FCE4(a1, (uint64_t)v97, 0x200000000, v83);
  sub_1B1A18378((uint64_t)v83, (uint64_t)v84, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v84[0])
    goto LABEL_87;
  v91 = v84[0];
  v92 = v84[1];
  v93 = v85;
  if (v90 < 1 || (v72 = v87) == 0)
  {
LABEL_86:
    sub_1B19ED748(v83);
LABEL_87:
    v62 = swift_bridgeObjectRetain();
    sub_1B1CBD0B4(v62, 0);
    swift_bridgeObjectRelease();
    if ((a2 & 1) != 0)
    {
      v63 = swift_bridgeObjectRetain();
      sub_1B1CBD0B4(v63, 1);
      swift_bridgeObjectRelease();
    }
    if ((a3 & 1) != 0)
    {
      v64 = swift_bridgeObjectRetain();
      sub_1B1CBD0B4(v64, 0);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v66 = a2;
  v67 = a3;
  v71 = v86;
  v76 = *(unsigned __int8 *)(v88 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v75 = v89[4];
  v80 = (_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v77 = v89;
  v69 = v89 + 8;
  v70 = (uint64_t)(v89 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  v8 = 0;
  v9 = 0;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v12 = (unsigned int *)(v71 + 48 * v8);
    v13 = *v12;
    v78 = v12[1];
    v14 = (uint64_t *)*((_QWORD *)v12 + 2);
    v15 = *((_QWORD *)v12 + 4);
    v16 = *((_QWORD *)v12 + 5);
    v73 = v9;
    v74 = v8;
    v81 = *((_QWORD *)v12 + 3);
    if (v76)
    {
      v17 = *(os_unfair_lock_s **)(v16 + 376);
      swift_retain();
      os_unfair_lock_lock(v17);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v75);
    sub_1B1A18378(v70, (uint64_t)v96, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v18 = v77[4];
    v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v77[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
    v77[7] = v19;
    v69[1] = 0;
    v69[2] = 0;
    *v69 = 0;
    swift_release();
    v82 = sub_1B1A12038((uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1E639A720, v14, v81, v15, (uint64_t)v77);
    if (!v14)
      break;
    if (v15)
    {
      v20 = 0;
      do
      {
        v21 = v14[v20];
        v22 = swift_retain();
        if ((*(_BYTE *)(v16 + 184) & 1) != 0)
          goto LABEL_92;
        v23 = *(_DWORD *)(*(_QWORD *)(v16 + 168) + 4 * v21);
        v24 = *(_DWORD *)(*(_QWORD *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v23 + 8);
        swift_release();
        v25 = *((_QWORD *)v11 + 2);
        if (v25)
        {
          v26 = v11 + 36;
          v27 = *((_QWORD *)v11 + 2);
          while (*(v26 - 1) != v23 || *v26 != v24)
          {
            v26 += 2;
            if (!--v27)
              goto LABEL_22;
          }
        }
        else
        {
LABEL_22:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1B1C63D98(0, v25 + 1, 1, v11);
          v30 = *((_QWORD *)v11 + 2);
          v29 = *((_QWORD *)v11 + 3);
          if (v30 >= v29 >> 1)
            v11 = sub_1B1C63D98(v29 > 1, v30 + 1, 1, v11);
          *((_QWORD *)v11 + 2) = v30 + 1;
          v31 = &v11[8 * v30];
          *((_DWORD *)v31 + 8) = v23;
          *((_DWORD *)v31 + 9) = v24;
        }
        v32 = *(int32x2_t *)(v82 + 24 * v20);
        v33 = v32.i32[0] == -1 && v32.i32[1] == 0;
        if (!v33
          && (v32.i32[0] & 0x80000000) == 0
          && v80[1] > v32.i32[0]
          && (v32.i32[1] == -1 || *(_DWORD *)(*v80 + 12 * v32.i32[0] + 8) == v32.i32[1]))
        {
          v35 = *((_QWORD *)v10 + 2);
          if (v35)
          {
            v36 = 0;
            while (1)
            {
              v37 = vceq_s32(*(int32x2_t *)&v10[8 * v36 + 32], v32);
              if ((v37.i32[0] & v37.i32[1] & 1) != 0)
                break;
              if (v35 == ++v36)
                goto LABEL_42;
            }
          }
          else
          {
LABEL_42:
            v79 = *(_QWORD *)(v82 + 24 * v20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v10 = sub_1B1C63D98(0, v35 + 1, 1, v10);
            v39 = *((_QWORD *)v10 + 2);
            v38 = *((_QWORD *)v10 + 3);
            v40 = v79;
            if (v39 >= v38 >> 1)
            {
              v41 = sub_1B1C63D98(v38 > 1, v39 + 1, 1, v10);
              v40 = v79;
              v10 = v41;
            }
            *((_QWORD *)v10 + 2) = v39 + 1;
            *(_QWORD *)&v10[8 * v39 + 32] = v40;
          }
        }
      }
      while (++v20 != v15);
    }
LABEL_47:
    v94[0] = v91;
    v94[1] = v92;
    v95 = v93;
    v9 = v73;
    sub_1B1F05D48(v77, (unsigned __int16 **)v94, (uint64_t)v96);
    sub_1B1F03804((char *)v16);
    ecs_stack_allocator_pop_snapshot(v75);
    if ((v76 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
    }
    swift_release();
    v8 = v74 + 1;
    if (v74 + 1 == v72)
    {
      sub_1B19ED748(v83);
      a2 = v66;
      a3 = v67;
      goto LABEL_86;
    }
  }
  if ((_DWORD)v13 == (_DWORD)v78)
    goto LABEL_47;
  while (1)
  {
    v42 = swift_retain();
    if ((*(_BYTE *)(v16 + 184) & 1) != 0)
      break;
    v43 = *(_DWORD *)(*(_QWORD *)(v16 + 168) + 4 * v13);
    v44 = *(_DWORD *)(*(_QWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v43 + 8);
    swift_release();
    v45 = *((_QWORD *)v11 + 2);
    if (v45)
    {
      v46 = v11 + 36;
      v47 = *((_QWORD *)v11 + 2);
      while (*(v46 - 1) != v43 || *v46 != v44)
      {
        v46 += 2;
        if (!--v47)
          goto LABEL_59;
      }
    }
    else
    {
LABEL_59:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1B1C63D98(0, v45 + 1, 1, v11);
      v50 = *((_QWORD *)v11 + 2);
      v49 = *((_QWORD *)v11 + 3);
      if (v50 >= v49 >> 1)
        v11 = sub_1B1C63D98(v49 > 1, v50 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v50 + 1;
      v51 = &v11[8 * v50];
      *((_DWORD *)v51 + 8) = v43;
      *((_DWORD *)v51 + 9) = v44;
    }
    v52 = *(int32x2_t *)(v82 + 24 * v13);
    v53 = v52.i32[0] == -1 && v52.i32[1] == 0;
    if (!v53
      && (v52.i32[0] & 0x80000000) == 0
      && v80[1] > v52.i32[0]
      && (v52.i32[1] == -1 || *(_DWORD *)(*v80 + 12 * v52.i32[0] + 8) == v52.i32[1]))
    {
      v55 = *((_QWORD *)v10 + 2);
      if (v55)
      {
        v56 = 0;
        while (1)
        {
          v57 = vceq_s32(*(int32x2_t *)&v10[8 * v56 + 32], v52);
          if ((v57.i32[0] & v57.i32[1] & 1) != 0)
            break;
          if (v55 == ++v56)
            goto LABEL_79;
        }
      }
      else
      {
LABEL_79:
        v68 = *(_QWORD *)(v82 + 24 * v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1B1C63D98(0, v55 + 1, 1, v10);
        v59 = *((_QWORD *)v10 + 2);
        v58 = *((_QWORD *)v10 + 3);
        v60 = v68;
        if (v59 >= v58 >> 1)
        {
          v61 = sub_1B1C63D98(v58 > 1, v59 + 1, 1, v10);
          v60 = v68;
          v10 = v61;
        }
        *((_QWORD *)v10 + 2) = v59 + 1;
        *(_QWORD *)&v10[8 * v59 + 32] = v60;
      }
    }
    if (++v13 == v78)
      goto LABEL_47;
  }
LABEL_92:
  result = sub_1B2229688();
  __break(1u);
  return result;
}

unint64_t sub_1B1CBFB4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  _BYTE v17[40];

  v2 = a1[3];
  v3 = a1[4];
  sub_1B19FA070(a1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  if ((sub_1B1DA4E70(v4) & 1) != 0)
  {
    v5 = a1[3];
    v6 = a1[4];
    sub_1B19FA070(a1, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
    sub_1B1E8E378(v7);
  }
  sub_1B19FA198((uint64_t)a1, (uint64_t)v17);
  sub_1B1A025A0(0, (unint64_t *)&qword_1ED4B9C40);
  if ((swift_dynamicCast() & 1) != 0)
  {
    if ((sub_1B1DA4E70(v14) & 1) != 0)
      sub_1B1E8E378(v14);
    if ((sub_1B1DA4E70(v15 | ((unint64_t)v16 << 32)) & 1) != 0)
      sub_1B1E8E378(v15 | ((unint64_t)v16 << 32));
  }
  sub_1B19FA198((uint64_t)a1, (uint64_t)v17);
  result = swift_dynamicCast();
  if ((result & 1) != 0 && !v9)
  {
    if (v10 != -1 || v11)
    {
      result = sub_1B1DA4E70(v10 | ((unint64_t)v11 << 32));
      if ((result & 1) != 0)
        result = sub_1B1E8E378(v10 | ((unint64_t)v11 << 32));
    }
    if (v12 != -1 || v13)
    {
      result = sub_1B1DA4E70(v12 | ((unint64_t)v13 << 32));
      if ((result & 1) != 0)
        return sub_1B1E8E378(v12 | ((unint64_t)v13 << 32));
    }
  }
  return result;
}

uint64_t sub_1B1CBFD10(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[8];
  _OWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;
  _BYTE v42[40];
  _OWORD v43[2];
  uint64_t v44;

  v2 = *(_OWORD *)(v1 + 176);
  v43[0] = *(_OWORD *)(v1 + 160);
  v43[1] = v2;
  v44 = *(_QWORD *)(v1 + 192);
  sub_1B1E8FCE4(a1, (uint64_t)v43, 0x200000000, v32);
  sub_1B1A18378((uint64_t)v32, (uint64_t)v33, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v33[0])
  {
    if (v39 > 0)
    {
      v28 = v36;
      if (v36)
      {
        v3 = v38;
        v4 = v38[4];
        v5 = *(unsigned __int8 *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v40[0] = v33[0];
        v40[1] = v33[1];
        v41 = v34;
        v26 = (uint64_t)(v38 + 6);
        v27 = v35;
        v25 = v38 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v6 = 0;
        v7 = 0;
        v24 = v5;
        while (1)
        {
          v8 = (unsigned int *)(v27 + 48 * v6);
          v30 = *v8;
          v31 = v7;
          v29 = v8[1];
          v10 = (uint64_t *)*((_QWORD *)v8 + 2);
          v9 = *((_QWORD *)v8 + 3);
          v12 = *((_QWORD *)v8 + 4);
          v11 = *((_QWORD *)v8 + 5);
          if (v5)
          {
            v13 = *(os_unfair_lock_s **)(v11 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v13);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v4);
          sub_1B1A18378(v26, (uint64_t)v42, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v14 = v3[4];
          v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v3[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
          v3[7] = v15;
          v25[1] = 0;
          v25[2] = 0;
          *v25 = 0;
          swift_release();
          v16 = sub_1B1A12038((uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1E6396640, v10, v9, v12, (uint64_t)v3);
          if (v10)
          {
            if (v12)
            {
              v17 = v16 + 144;
              v5 = v24;
              v7 = v31;
              do
              {
                v17 += 168;
                v18 = swift_bridgeObjectRetain();
                sub_1B19F5C40(v18);
                --v12;
              }
              while (v12);
              goto LABEL_18;
            }
          }
          else if ((_DWORD)v30 != (_DWORD)v29)
          {
            v19 = v16 + 168 * v30 + 144;
            v20 = v29 - v30;
            v5 = v24;
            v7 = v31;
            do
            {
              v19 += 168;
              v21 = swift_bridgeObjectRetain();
              sub_1B19F5C40(v21);
              --v20;
            }
            while (v20);
            goto LABEL_18;
          }
          v5 = v24;
          v7 = v31;
LABEL_18:
          sub_1B1F05D48(v3, (unsigned __int16 **)v40, (uint64_t)v42);
          sub_1B1F03804((char *)v11);
          ecs_stack_allocator_pop_snapshot(v4);
          if ((v5 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
          }
          swift_release();
          if (++v6 == v28)
          {
            sub_1B19ED748(v32);
            sub_1B19ED748(v32);
            goto LABEL_22;
          }
        }
      }
    }
    sub_1B19ED748(v32);
  }
LABEL_22:
  v22 = swift_bridgeObjectRetain();
  sub_1B1CBD0B4(v22, 0);
  return swift_bridgeObjectRelease_n();
}

uint64_t *sub_1B1CC0058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  unsigned int *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD *v46;
  char *v47;
  uint64_t (*v48)(uint64_t);
  unsigned int *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  os_unfair_lock_s *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  __int128 v73;
  uint64_t *result;
  _QWORD *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  os_unfair_lock_s *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132[12];
  uint64_t v133[12];
  uint64_t v134[12];
  _OWORD v135[2];
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  _OWORD v142[2];
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  _OWORD v149[2];
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  _OWORD v156[2];
  uint64_t v157;
  _OWORD v158[2];
  uint64_t v159;
  _OWORD v160[2];
  uint64_t v161;
  _BYTE v162[40];
  _OWORD v163[2];
  uint64_t v164;
  _BYTE v165[40];
  _OWORD v166[2];
  uint64_t v167;
  _BYTE v168[40];
  _OWORD v169[2];
  uint64_t v170;

  v3 = 0;
  sub_1B19F8EB0(0, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
  v121 = v4;
  v113 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v112 = (char *)&v105 - v6;
  sub_1B19F8EB0(0, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
  v120 = v7;
  v111 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v105 - v9;
  sub_1B19F8EB0(0, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
  v12 = v11;
  v110 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v105 - v14;
  v16 = *(_OWORD *)(v1 + 216);
  v169[0] = *(_OWORD *)(v1 + 200);
  v169[1] = v16;
  v106 = v1;
  v170 = *(_QWORD *)(v1 + 232);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  v127 = a1;
  v107 = v17;
  sub_1B1E8FCE4(a1, (uint64_t)v169, 0x200000000, v132);
  sub_1B1A18378((uint64_t)v132, (uint64_t)v149, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v149[0])
  {
    if (v155 >= 1 && (v119 = v152) != 0)
    {
      v108 = v15;
      v109 = v10;
      v124 = v12;
      v18 = v154[4];
      LODWORD(v129) = *(unsigned __int8 *)(v153 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v156[0] = v149[0];
      v156[1] = v149[1];
      v19 = v154;
      v157 = v150;
      v115 = v154 + 6;
      v116 = (_QWORD *)v151;
      v114 = v154 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      v20 = 0;
      v117 = (_QWORD *)v18;
      v118 = v19;
      do
      {
        v21 = (unsigned int *)&v116[6 * (_QWORD)v20];
        v123 = *v21;
        v122 = v21[1];
        v22 = (uint64_t *)*((_QWORD *)v21 + 2);
        v130 = v3;
        v131 = v22;
        v23 = *((_QWORD *)v21 + 4);
        v125 = (char *)*((_QWORD *)v21 + 3);
        v24 = *((_QWORD *)v21 + 5);
        if ((_DWORD)v129)
        {
          v25 = *(os_unfair_lock_s **)(v24 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v25);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v18);
        sub_1B1A18378((uint64_t)v115, (uint64_t)v168, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
        v26 = v19[4];
        v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v19[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
        v19[7] = v27;
        v28 = v114;
        v114[1] = 0;
        v28[2] = 0;
        *v28 = 0;
        swift_release();
        v29 = v131;
        v30 = sub_1B1A12038(v124, (uint64_t)&off_1E637D0A8, v131, (uint64_t)v125, v23, (uint64_t)v19);
        v31 = v30;
        v128 = v20;
        v126 = (char *)v24;
        if (v29)
        {
          if (v23)
          {
            v131 = *(uint64_t **)(v110 + 72);
            v32 = v127;
            v33 = v124;
            v34 = (uint64_t)v108;
            do
            {
              sub_1B1CC6C8C(v31, v34, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
              v35 = *(_QWORD *)(v31 + *(int *)(v33 + 60));
              swift_bridgeObjectRetain();
              sub_1B1CC0D08(v34, v35, v32);
              swift_bridgeObjectRelease();
              sub_1B1CC6C50(v34, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
              v31 += (uint64_t)v131;
              --v23;
            }
            while (v23);
          }
        }
        else if ((_DWORD)v123 != (_DWORD)v122)
        {
          v36 = v122 - v123;
          v131 = *(uint64_t **)(v110 + 72);
          v37 = v30 + (_QWORD)v131 * v123;
          v38 = v127;
          v39 = v124;
          v40 = (uint64_t)v108;
          do
          {
            sub_1B1CC6C8C(v37, v40, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
            v41 = *(_QWORD *)(v37 + *(int *)(v39 + 60));
            swift_bridgeObjectRetain();
            sub_1B1CC0D08(v40, v41, v38);
            swift_bridgeObjectRelease();
            sub_1B1CC6C50(v40, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
            v37 += (uint64_t)v131;
            --v36;
          }
          while (v36);
        }
        v19 = v118;
        v3 = v130;
        sub_1B1F05D48(v118, (unsigned __int16 **)v156, (uint64_t)v168);
        v42 = v126;
        sub_1B1F03804(v126);
        v18 = (uint64_t)v117;
        ecs_stack_allocator_pop_snapshot((uint64_t)v117);
        if ((v129 & 1) != 0)
        {
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v42 + 43));
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v42 + 47));
        }
        swift_release();
        v20 = v128 + 1;
      }
      while (v128 + 1 != v119);
      sub_1B19ED748(v132);
      v43 = v127;
      v44 = v106;
      v10 = v109;
    }
    else
    {
      v43 = v127;
      v44 = v106;
    }
    sub_1B19ED748(v132);
  }
  else
  {
    v43 = v127;
    v44 = v106;
  }
  v45 = *(_OWORD *)(v44 + 256);
  v166[0] = *(_OWORD *)(v44 + 240);
  v166[1] = v45;
  v167 = *(_QWORD *)(v44 + 272);
  sub_1B1E8FCE4(v43, (uint64_t)v166, 0x200000000, v133);
  sub_1B1A18378((uint64_t)v133, (uint64_t)v142, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v142[0])
  {
    if (v148 >= 1)
    {
      v119 = v145;
      if (v145)
      {
        v109 = v10;
        v46 = v147;
        v129 = v147[4];
        LODWORD(v128) = *(unsigned __int8 *)(v146 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v158[0] = v142[0];
        v158[1] = v142[1];
        v159 = v143;
        v116 = v147 + 6;
        v117 = (_QWORD *)v144;
        v115 = v147 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v47 = 0;
        v48 = type metadata accessor for ParticleUpdateScript;
        v118 = v46;
        while (1)
        {
          v49 = (unsigned int *)&v117[6 * (_QWORD)v47];
          v123 = *v49;
          v122 = v49[1];
          v50 = (uint64_t *)*((_QWORD *)v49 + 2);
          v130 = v3;
          v131 = v50;
          v51 = *((_QWORD *)v49 + 4);
          v124 = *((_QWORD *)v49 + 3);
          v52 = *((_QWORD *)v49 + 5);
          if ((_DWORD)v128)
          {
            v53 = *(os_unfair_lock_s **)(v52 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v53);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v52 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v129);
          sub_1B1A18378((uint64_t)v116, (uint64_t)v165, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v54 = v46[4];
          v55 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v52 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v46[6] = ecs_stack_allocator_allocate(v54, 48 * v55, 8);
          v46[7] = v55;
          v56 = v115;
          v115[1] = 0;
          v56[2] = 0;
          *v56 = 0;
          swift_release();
          v57 = v120;
          v58 = v131;
          v59 = sub_1B1A12038(v120, (uint64_t)&off_1E637D0A8, v131, v124, v51, (uint64_t)v46);
          v60 = v59;
          v125 = (char *)v52;
          v126 = v47;
          if (v58)
          {
            if (v51)
            {
              v131 = *(uint64_t **)(v111 + 72);
              v61 = v127;
              v62 = v57;
              v63 = v48;
              v64 = (uint64_t)v109;
              do
              {
                sub_1B1CC6C8C(v60, v64, &qword_1ED4B88A0, v48, (uint64_t)&off_1ED4BD280);
                v65 = *(_QWORD *)(v60 + *(int *)(v62 + 60));
                swift_bridgeObjectRetain();
                sub_1B1CC1248(v64, v65, v61, (uint64_t (*)(_QWORD, double))v48);
                swift_bridgeObjectRelease();
                sub_1B1CC6C50(v64, &qword_1ED4B88A0, v48, (uint64_t)&off_1ED4BD280);
                v60 += (uint64_t)v131;
                --v51;
              }
              while (v51);
              goto LABEL_40;
            }
          }
          else if ((_DWORD)v123 != (_DWORD)v122)
          {
            v66 = v122 - v123;
            v131 = *(uint64_t **)(v111 + 72);
            v67 = v59 + (_QWORD)v131 * v123;
            v68 = v127;
            v69 = v57;
            v63 = v48;
            v70 = (uint64_t)v109;
            do
            {
              sub_1B1CC6C8C(v67, v70, &qword_1ED4B88A0, v48, (uint64_t)&off_1ED4BD280);
              v71 = *(_QWORD *)(v67 + *(int *)(v69 + 60));
              swift_bridgeObjectRetain();
              sub_1B1CC1248(v70, v71, v68, (uint64_t (*)(_QWORD, double))v48);
              swift_bridgeObjectRelease();
              sub_1B1CC6C50(v70, &qword_1ED4B88A0, v48, (uint64_t)&off_1ED4BD280);
              v67 += (uint64_t)v131;
              --v66;
            }
            while (v66);
            goto LABEL_40;
          }
          v63 = v48;
LABEL_40:
          v46 = v118;
          v3 = v130;
          sub_1B1F05D48(v118, (unsigned __int16 **)v158, (uint64_t)v165);
          v72 = v125;
          sub_1B1F03804(v125);
          ecs_stack_allocator_pop_snapshot(v129);
          if ((v128 & 1) != 0)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v72 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v72 + 47));
          }
          swift_release();
          v47 = v126 + 1;
          v48 = v63;
          if (v126 + 1 == v119)
          {
            sub_1B19ED748(v133);
            v43 = v127;
            v44 = v106;
            break;
          }
        }
      }
    }
    sub_1B19ED748(v133);
  }
  v164 = *(_QWORD *)(v44 + 312);
  v73 = *(_OWORD *)(v44 + 296);
  v163[0] = *(_OWORD *)(v44 + 280);
  v163[1] = v73;
  sub_1B1E8FCE4(v43, (uint64_t)v163, 0x200000000, v134);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v134, (uint64_t)v135, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v135[0])
  {
    if (v141 >= 1)
    {
      v124 = v138;
      if (v138)
      {
        v75 = v140;
        v76 = v140[4];
        v77 = *(unsigned __int8 *)(v139 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v160[0] = v135[0];
        v160[1] = v135[1];
        v161 = v136;
        v118 = v140 + 6;
        v119 = v137;
        v117 = v140 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v78 = 0;
        v79 = type metadata accessor for GraphScript;
        v122 = v76;
        v123 = (unint64_t)v75;
        LODWORD(v120) = v77;
        while (1)
        {
          v80 = &v119[48 * v78];
          v126 = (char *)*(unsigned int *)v80;
          v125 = (char *)*((unsigned int *)v80 + 1);
          v81 = (uint64_t *)*((_QWORD *)v80 + 2);
          v130 = v3;
          v131 = v81;
          v82 = *((_QWORD *)v80 + 4);
          v128 = (char *)*((_QWORD *)v80 + 3);
          v83 = *((_QWORD *)v80 + 5);
          if (v77)
          {
            v84 = *(os_unfair_lock_s **)(v83 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v84);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v83 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v76);
          sub_1B1A18378((uint64_t)v118, (uint64_t)v162, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v85 = v75[4];
          v86 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v83 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v75[6] = ecs_stack_allocator_allocate(v85, 48 * v86, 8);
          v75[7] = v86;
          v87 = v117;
          v117[1] = 0;
          v87[2] = 0;
          *v87 = 0;
          swift_release();
          v88 = v121;
          v89 = v131;
          v90 = v128;
          v128 = (char *)v83;
          v91 = sub_1B1A12038(v121, (uint64_t)&off_1E637D0A8, v131, (uint64_t)v90, v82, (uint64_t)v75);
          v92 = v91;
          v129 = v78;
          if (v89)
          {
            if (!v82)
              goto LABEL_58;
            v93 = (uint64_t)v112;
            v131 = *(uint64_t **)(v113 + 72);
            v94 = v127;
            v95 = v88;
            v96 = v79;
            do
            {
              sub_1B1CC6C8C(v92, v93, (unint64_t *)&unk_1ED4B88B0, v79, (uint64_t)&off_1ED4BBD80);
              v97 = *(_QWORD *)(v92 + *(int *)(v95 + 60));
              swift_bridgeObjectRetain();
              sub_1B1CC1248(v93, v97, v94, (uint64_t (*)(_QWORD, double))v79);
              swift_bridgeObjectRelease();
              sub_1B1CC6C50(v93, (unint64_t *)&unk_1ED4B88B0, v79, (uint64_t)&off_1ED4BBD80);
              v92 += (uint64_t)v131;
              --v82;
            }
            while (v82);
          }
          else
          {
            if ((_DWORD)v126 == (_DWORD)v125)
            {
LABEL_58:
              v96 = v79;
              goto LABEL_61;
            }
            v98 = (uint64_t)v112;
            v99 = v125 - v126;
            v131 = *(uint64_t **)(v113 + 72);
            v100 = v91 + (_QWORD)v131 * (_QWORD)v126;
            v101 = v127;
            v102 = v88;
            v96 = v79;
            do
            {
              sub_1B1CC6C8C(v100, v98, (unint64_t *)&unk_1ED4B88B0, v79, (uint64_t)&off_1ED4BBD80);
              v103 = *(_QWORD *)(v100 + *(int *)(v102 + 60));
              swift_bridgeObjectRetain();
              sub_1B1CC1248(v98, v103, v101, (uint64_t (*)(_QWORD, double))v79);
              swift_bridgeObjectRelease();
              sub_1B1CC6C50(v98, (unint64_t *)&unk_1ED4B88B0, v79, (uint64_t)&off_1ED4BBD80);
              v100 += (uint64_t)v131;
              --v99;
            }
            while (v99);
          }
LABEL_61:
          v79 = v96;
          v75 = (_QWORD *)v123;
          v3 = v130;
          sub_1B1F05D48((_QWORD *)v123, (unsigned __int16 **)v160, (uint64_t)v162);
          v104 = v128;
          sub_1B1F03804(v128);
          v76 = v122;
          ecs_stack_allocator_pop_snapshot(v122);
          v77 = v120;
          if ((v120 & 1) != 0)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v104 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v104 + 47));
          }
          swift_release();
          v78 = v129 + 1;
          if (v129 + 1 == v124)
          {
            sub_1B19ED748(v134);
            return sub_1B19ED748(v134);
          }
        }
      }
    }
    return sub_1B19ED748(v134);
  }
  return result;
}

uint64_t sub_1B1CC0D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD v45[2];
  int v46;
  uint64_t v47;
  __int128 v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;

  v47 = a3;
  sub_1B1B1F358();
  v56 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v55 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B222820C();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v52 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1E0C80A78](inited, v12);
  v14 = (unsigned __int8 *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1792810(a1, (uint64_t)v14, type metadata accessor for ParticleInitScript);
  v46 = *v14;
  sub_1B1A04628((uint64_t)v14, type metadata accessor for ParticleInitScript);
  v15 = *(_QWORD *)(a2 + 16);
  if (!v15)
  {
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_33;
  }
  v16 = a2 + 32;
  v45[1] = a2;
  swift_bridgeObjectRetain();
  v17 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v49 = 0x80000001B2338160;
  v48 = xmmword_1B226D240;
  v50 = v16;
  v51 = v15;
  do
  {
    v19 = *(_QWORD *)(v16 + 32 * v17);
    if (v19 >> 60 != 7)
      goto LABEL_5;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(unsigned __int8 *)(v19 + 32);
    if (*(_BYTE *)(v19 + 32))
    {
      v22 = *(_QWORD *)(v19 + 24);
      if (v21 != 1)
      {
        swift_retain();
LABEL_24:
        if (qword_1ED4BF430 != -1)
          swift_once();
        v61 = 0;
        v62 = 0xE000000000000000;
        v59 = qword_1ED4D0FB0;
        swift_retain();
        sub_1B2229430();
        v64 = v61;
        v65 = v62;
        sub_1B2228890();
        v61 = v20;
        v62 = v22;
        v63 = v21;
        sub_1B22295EC();
        sub_1B1A05648(v20, v22, v21);
        v32 = v64;
        v33 = v65;
        v34 = sub_1B2228E90();
        if (qword_1ED4BF658 != -1)
          swift_once();
        v58 = v19;
        v60 = v18;
        v35 = qword_1ED4D0FD0;
        v36 = qword_1ED4BF688;
        swift_retain();
        if (v36 != -1)
          swift_once();
        sub_1B1CC6310(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v48;
        *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v37 + 64) = sub_1B1B1F47C();
        *(_QWORD *)(v37 + 32) = v32;
        *(_QWORD *)(v37 + 40) = v33;
        swift_bridgeObjectRetain();
        sub_1B222835C();
        swift_bridgeObjectRelease();
        swift_retain();
        v57 = v35;
        v38 = v52;
        sub_1B2228200();
        v39 = (uint64_t)v55;
        v40 = v56[12];
        v41 = v56[16];
        v42 = v32;
        v43 = &v55[v56[20]];
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v55, v38, v54);
        *(_BYTE *)(v39 + v40) = v34;
        *(_QWORD *)(v39 + v41) = 0;
        *(_QWORD *)v43 = v42;
        *((_QWORD *)v43 + 1) = v33;
        swift_bridgeObjectRetain();
        sub_1B2228428();
        swift_release();
        sub_1B1A04628(v39, (uint64_t (*)(_QWORD))sub_1B1B1F358);
        swift_release();
        sub_1B1A05610(v58);
        swift_release();
        swift_bridgeObjectRelease();
        v18 = v60;
        v16 = v50;
        v15 = v51;
        goto LABEL_5;
      }
      sub_1B1B1DD24(*(_QWORD *)(v16 + 32 * v17));
      sub_1B1CB0104(v20, v22, 1);
      LOBYTE(v61) = 1;
      v23 = sub_1B1DCD968(v20, v22, v47, 0x100000000);
      if ((v24 & 1) != 0)
        goto LABEL_24;
      v25 = v23;
      sub_1B1A05648(v20, v22, 1);
      v20 = v25;
    }
    else
    {
      swift_retain();
    }
    v26 = *((_QWORD *)v18 + 2);
    if (v26)
    {
      v27 = v18 + 36;
      v28 = *((_QWORD *)v18 + 2);
      while (*(v27 - 1) != (_DWORD)v20 || *v27 != HIDWORD(v20))
      {
        v27 += 2;
        if (!--v28)
          goto LABEL_19;
      }
    }
    else
    {
LABEL_19:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_1B1C63D98(0, v26 + 1, 1, v18);
      v31 = *((_QWORD *)v18 + 2);
      v30 = *((_QWORD *)v18 + 3);
      if (v31 >= v30 >> 1)
        v18 = sub_1B1C63D98(v30 > 1, v31 + 1, 1, v18);
      *((_QWORD *)v18 + 2) = v31 + 1;
      *(_QWORD *)&v18[8 * v31 + 32] = v20;
    }
    sub_1B1A05610(v19);
LABEL_5:
    ++v17;
  }
  while (v17 != v15);
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1B1CBD0B4((uint64_t)v18, v46 != 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CC1248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, double))
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD v48[2];
  int v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  unint64_t v68;

  v50 = a3;
  sub_1B1B1F358();
  v59 = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  v58 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B222820C();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v55 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a4(0, v12);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v48 - v16;
  sub_1B1792810(a1, (uint64_t)v48 - v16, (uint64_t (*)(_QWORD))a4);
  v49 = v17[24];
  sub_1B1A04628((uint64_t)v17, (uint64_t (*)(_QWORD))a4);
  v18 = *(_QWORD *)(a2 + 16);
  if (!v18)
  {
    v21 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_33;
  }
  v19 = a2 + 32;
  v48[1] = a2;
  swift_bridgeObjectRetain();
  v20 = 0;
  v21 = (char *)MEMORY[0x1E0DEE9D8];
  v52 = 0x80000001B2338160;
  v51 = xmmword_1B226D240;
  v53 = v19;
  v54 = v18;
  do
  {
    v22 = *(_QWORD *)(v19 + 32 * v20);
    if (v22 >> 60 != 7)
      goto LABEL_5;
    v23 = *(_QWORD *)(v22 + 16);
    v24 = *(unsigned __int8 *)(v22 + 32);
    if (*(_BYTE *)(v22 + 32))
    {
      v25 = *(_QWORD *)(v22 + 24);
      if (v24 != 1)
      {
        swift_retain();
LABEL_24:
        if (qword_1ED4BF430 != -1)
          swift_once();
        v64 = 0;
        v65 = 0xE000000000000000;
        v62 = qword_1ED4D0FB0;
        swift_retain();
        sub_1B2229430();
        v67 = v64;
        v68 = v65;
        sub_1B2228890();
        v64 = v23;
        v65 = v25;
        v66 = v24;
        sub_1B22295EC();
        sub_1B1A05648(v23, v25, v24);
        v35 = v67;
        v36 = v68;
        v37 = sub_1B2228E90();
        if (qword_1ED4BF658 != -1)
          swift_once();
        v61 = v22;
        v63 = v21;
        v38 = qword_1ED4D0FD0;
        v39 = qword_1ED4BF688;
        swift_retain();
        if (v39 != -1)
          swift_once();
        sub_1B1CC6310(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = v51;
        *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v40 + 64) = sub_1B1B1F47C();
        *(_QWORD *)(v40 + 32) = v35;
        *(_QWORD *)(v40 + 40) = v36;
        swift_bridgeObjectRetain();
        sub_1B222835C();
        swift_bridgeObjectRelease();
        swift_retain();
        v60 = v38;
        v41 = v55;
        sub_1B2228200();
        v42 = (uint64_t)v58;
        v43 = v59[12];
        v44 = v59[16];
        v45 = v35;
        v46 = &v58[v59[20]];
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v58, v41, v57);
        *(_BYTE *)(v42 + v43) = v37;
        *(_QWORD *)(v42 + v44) = 0;
        *(_QWORD *)v46 = v45;
        *((_QWORD *)v46 + 1) = v36;
        swift_bridgeObjectRetain();
        sub_1B2228428();
        swift_release();
        sub_1B1A04628(v42, (uint64_t (*)(_QWORD))sub_1B1B1F358);
        swift_release();
        sub_1B1A05610(v61);
        swift_release();
        swift_bridgeObjectRelease();
        v21 = v63;
        v19 = v53;
        v18 = v54;
        goto LABEL_5;
      }
      sub_1B1B1DD24(*(_QWORD *)(v19 + 32 * v20));
      sub_1B1CB0104(v23, v25, 1);
      LOBYTE(v64) = 1;
      v26 = sub_1B1DCD968(v23, v25, v50, 0x100000000);
      if ((v27 & 1) != 0)
        goto LABEL_24;
      v28 = v26;
      sub_1B1A05648(v23, v25, 1);
      v23 = v28;
    }
    else
    {
      swift_retain();
    }
    v29 = *((_QWORD *)v21 + 2);
    if (v29)
    {
      v30 = v21 + 36;
      v31 = *((_QWORD *)v21 + 2);
      while (*(v30 - 1) != (_DWORD)v23 || *v30 != HIDWORD(v23))
      {
        v30 += 2;
        if (!--v31)
          goto LABEL_19;
      }
    }
    else
    {
LABEL_19:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_1B1C63D98(0, v29 + 1, 1, v21);
      v34 = *((_QWORD *)v21 + 2);
      v33 = *((_QWORD *)v21 + 3);
      if (v34 >= v33 >> 1)
        v21 = sub_1B1C63D98(v33 > 1, v34 + 1, 1, v21);
      *((_QWORD *)v21 + 2) = v34 + 1;
      *(_QWORD *)&v21[8 * v34 + 32] = v23;
    }
    sub_1B1A05610(v22);
LABEL_5:
    ++v20;
  }
  while (v20 != v18);
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1B1CBD0B4((uint64_t)v21, v49 != 1);
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1B1CC1780(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t *result;
  _QWORD *v5;
  uint64_t v6;
  int i;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30[8];
  _OWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  _BYTE v43[40];
  _OWORD v44[2];
  uint64_t v45;

  v3 = *(_OWORD *)(v1 + 96);
  v44[0] = *(_OWORD *)(v1 + 80);
  v44[1] = v3;
  v45 = *(_QWORD *)(v1 + 112);
  sub_1B1E8FCE4(a1, (uint64_t)v44, 0x200000000, v30);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v30, (uint64_t)v31, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v31[0])
  {
    v38 = v31[0];
    v39 = v31[1];
    v40 = v32;
    if (v37 >= 1)
    {
      v26 = v34;
      if (v34)
      {
        v24 = v33;
        v5 = v36;
        v6 = v36[4];
        i = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v21 = v36 + 8;
        v22 = (uint64_t)(v36 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        v8 = 0;
        v23 = i;
        v29 = v5;
        v25 = v6;
        do
        {
          v9 = (unsigned int *)(v24 + 48 * v8);
          v28 = *v9;
          v27 = v9[1];
          v11 = (uint64_t *)*((_QWORD *)v9 + 2);
          v10 = *((_QWORD *)v9 + 3);
          v13 = *((_QWORD *)v9 + 4);
          v12 = *((_QWORD *)v9 + 5);
          if (i)
          {
            v14 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          sub_1B1A18378(v22, (uint64_t)v43, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v15 = v5[4];
          v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v29[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v29[7] = v16;
          v5 = v29;
          v21[1] = 0;
          v21[2] = 0;
          *v21 = 0;
          swift_release();
          v17 = sub_1B1A12038((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, v11, v10, v13, (uint64_t)v29);
          v18 = (uint64_t *)v17;
          if (v11)
          {
            for (i = v23; v13; --v13)
            {
              sub_1B1CC6384(v18, a1);
              v18 += 11;
            }
          }
          else
          {
            i = v23;
            if ((_DWORD)v28 != (_DWORD)v27)
            {
              v19 = v27 - v28;
              v20 = (uint64_t *)(v17 + 88 * v28);
              do
              {
                sub_1B1CC6384(v20, a1);
                v20 += 11;
                --v19;
              }
              while (v19);
            }
          }
          v41[0] = v38;
          v41[1] = v39;
          v42 = v40;
          sub_1B1F05D48(v29, (unsigned __int16 **)v41, (uint64_t)v43);
          sub_1B1F03804((char *)v12);
          v6 = v25;
          ecs_stack_allocator_pop_snapshot(v25);
          if ((i & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          ++v8;
        }
        while (v8 != v26);
        sub_1B19ED748(v30);
      }
    }
    return sub_1B19ED748(v30);
  }
  return result;
}

uint64_t *sub_1B1CC1AE4(uint64_t *result)
{
  uint64_t v1;
  uint64_t *v2;
  __int128 v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  int v24;
  int v25;
  int *v26;
  int v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  int v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  int v62;
  int v63;
  int *v64;
  int v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  int v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _BYTE *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112[8];
  _OWORD v113[2];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  _OWORD v120[2];
  uint64_t v121;
  _BYTE v122[40];
  _OWORD v123[2];
  uint64_t v124;

  if ((*(_BYTE *)(v1 + 520) & 1) == 0)
  {
    v2 = result;
    v3 = *(_OWORD *)(v1 + 496);
    v123[0] = *(_OWORD *)(v1 + 480);
    v123[1] = v3;
    v124 = *(_QWORD *)(v1 + 512);
    sub_1B1E8FCE4((uint64_t)result, (uint64_t)v123, 0x200000000, v112);
    result = (uint64_t *)sub_1B1A18378((uint64_t)v112, (uint64_t)v113, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (*(_QWORD *)&v113[0])
    {
      if (v119 >= 1)
      {
        v104 = v116;
        if (v116)
        {
          v98 = (_BYTE *)(v1 + 520);
          v4 = v118[4];
          v5 = *(unsigned __int8 *)(v117 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v120[0] = v113[0];
          v120[1] = v113[1];
          v121 = v114;
          v100 = (uint64_t)(v118 + 6);
          v101 = v115;
          v105 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          v97 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
          v111 = v118;
          v99 = v118 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          v6 = 0;
          v7 = 0;
          v107 = (uint64_t)v2;
          v102 = v5;
          v103 = v4;
          while (1)
          {
            v108 = v7;
            v110 = v6;
            v8 = (unsigned int *)(v101 + 48 * v6);
            v9 = *v8;
            v106 = v8[1];
            v11 = (uint64_t *)*((_QWORD *)v8 + 2);
            v10 = *((_QWORD *)v8 + 3);
            v13 = *((_QWORD *)v8 + 4);
            v12 = *((_QWORD *)v8 + 5);
            if (v5)
            {
              v14 = *(os_unfair_lock_s **)(v12 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v14);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v4);
            sub_1B1A18378(v100, (uint64_t)v122, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
            v15 = v111[4];
            v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v111[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
            v111[7] = v16;
            v99[1] = 0;
            v99[2] = 0;
            *v99 = 0;
            swift_release();
            v109 = v12;
            v17 = sub_1B1A12038((uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1E639CDA8, v11, v10, v13, (uint64_t)v111);
            if (!v11)
              break;
            v18 = v105;
            v7 = v108;
            if (v13)
            {
              v19 = 0;
              v20 = v107;
              do
              {
                v26 = (int *)(v17 + 40 * v19);
                v27 = v26[1];
                v28 = *v26;
                if ((_DWORD)v28 == -1 && v27 == 0)
                  goto LABEL_19;
                if ((v28 & 0x80000000) != 0)
                  goto LABEL_19;
                v30 = v18[1];
                if (v30 <= v28)
                  goto LABEL_19;
                v31 = *v18;
                v32 = *v18 + 12 * (int)v28;
                if (v27 != -1 && *(_DWORD *)(v32 + 8) != v27)
                  goto LABEL_19;
                v34 = *(_QWORD *)(*(_QWORD *)(v20 + 136) + 8 * *(int *)(v31 + 12 * (int)v28) + 32);
                v35 = *(_QWORD *)(v34 + 48);
                v36 = *(_QWORD *)(v35 + 16);
                if (!v36)
                  goto LABEL_19;
                v37 = *(__int16 *)(v32 + 4);
                v38 = (_QWORD *)(v35 + 56);
                while ((ValueMetadata *)*(v38 - 3) != &type metadata for MeshModel)
                {
                  v38 += 5;
                  if (!--v36)
                    goto LABEL_19;
                }
                v39 = *(_QWORD *)(*(_QWORD *)(v34 + 128) + *v38 + 16 * v37 + 8);
                v40 = v17 + 40 * v19;
                v42 = *(_DWORD *)(v40 + 8);
                v41 = *(_DWORD *)(v40 + 12);
                if (v42 == -1 && v41 == 0)
                {
                  v44 = *(_QWORD *)(v40 + 24);
                  if (v44 < 0 || v44 >= *(_QWORD *)(v39 + 16))
                    goto LABEL_56;
                  v45 = v39 + 8 * v44;
                  v42 = *(_DWORD *)(v45 + 32);
                  v41 = *(_DWORD *)(v45 + 36);
                }
                v46 = v42 == -1 && v41 == 0;
                if (!v46 && (v42 & 0x80000000) == 0 && v30 > v42)
                {
                  v47 = *(_DWORD *)(v31 + 12 * v42 + 8);
                  if (v41 == -1 || v47 == v41)
                    goto LABEL_19;
                }
LABEL_56:
                v49 = *(_QWORD *)(v20 + 176);
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain();
                os_unfair_recursive_lock_lock_with_options();
                v50 = sub_1B1F21F0C((uint64_t)&type metadata for DefaultMaterialInstance);
                if ((v52 & 1) == 0)
                {
                  os_unfair_recursive_lock_unlock();
                  swift_release();
LABEL_58:
                  type metadata accessor for PBRParameters();
                  v53 = swift_allocObject();
                  *(_OWORD *)(v53 + 16) = xmmword_1B226E4E0;
                  *(_QWORD *)(v53 + 32) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v53 + 40) = 16777473;
                  *(_BYTE *)(v53 + 44) = 1;
                  *(_OWORD *)(v53 + 48) = xmmword_1B2244EC0;
                  *(_QWORD *)(v53 + 64) = 0;
                  *(_QWORD *)(v53 + 72) = 0;
                  *(_QWORD *)(v53 + 80) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v53 + 88) = 16777473;
                  *(_BYTE *)(v53 + 92) = 1;
                  *(_OWORD *)(v53 + 96) = xmmword_1B2244EC0;
                  *(_QWORD *)(v53 + 112) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v53 + 120) = 16777473;
                  *(_BYTE *)(v53 + 124) = 1;
                  *(_DWORD *)(v53 + 128) = 1056964608;
                  *(_OWORD *)(v53 + 144) = xmmword_1B2244EC0;
                  *(_QWORD *)(v53 + 160) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v53 + 168) = 16777473;
                  *(_BYTE *)(v53 + 172) = 1;
                  *(_DWORD *)(v53 + 176) = 0;
                  *(_OWORD *)(v53 + 192) = xmmword_1B2244EC0;
                  *(_QWORD *)(v53 + 208) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v53 + 216) = 16777473;
                  *(_BYTE *)(v53 + 220) = 1;
                  *(_DWORD *)(v53 + 224) = 1065353216;
                  *(_OWORD *)(v53 + 240) = xmmword_1B2244EC0;
                  *(_QWORD *)(v53 + 256) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v53 + 264) = 16777473;
                  *(_BYTE *)(v53 + 268) = 1;
                  *(_DWORD *)(v53 + 272) = 1065353216;
                  *(_OWORD *)(v53 + 288) = xmmword_1B2244EC0;
                  *(_WORD *)(v53 + 304) = 0;
                  type metadata accessor for RenderPipelineFactory();
                  swift_allocObject();
                  v54 = sub_1B20C3C0C(140);
                  *(_QWORD *)(v54 + 88) = sub_1B2137D90;
                  *(_QWORD *)(v54 + 96) = 0;
                  swift_release();
                  v55 = sub_1B2180BAC(0x100000000uLL, **(_QWORD **)(v20 + v97), 0, v54, 0x100000000uLL, 0xD000000000000018, 0x80000001B2338140, -1.0);
                  swift_release();
                  swift_retain();
                  sub_1B1FEC0E4(v55, v107, v53);
                  v56 = swift_release_n();
                  v20 = v107;
                  MEMORY[0x1E0C80A78](v56, v57);
                  v58 = *(_QWORD **)(v107 + 176);
                  swift_retain();
                  sub_1B1F22244((uint64_t)&type metadata for DefaultMaterialInstance, (uint64_t)&off_1E63AA418, v58, (void (*)(uint64_t))sub_1B1CC6CE4);
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  v18 = v105;
                  goto LABEL_18;
                }
                v22 = (int *)(*(_QWORD *)(v49 + 16) + v50);
                v23 = 32 * v51;
                os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v49 + 32) + 32 * v51 + 24));
                os_unfair_recursive_lock_unlock();
                v25 = *v22;
                v24 = v22[1];
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v49 + 32) + v23 + 24));
                swift_release();
                if (v25 == -1)
                {
                  v20 = v107;
                  v18 = v105;
                  if (v24)
                  {
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_18;
                  }
                  goto LABEL_58;
                }
                swift_bridgeObjectRelease();
                swift_release();
                v20 = v107;
                v18 = v105;
LABEL_18:
                *v98 = 1;
LABEL_19:
                ++v19;
              }
              while (v19 != v13);
            }
LABEL_14:
            sub_1B1F05D48(v111, (unsigned __int16 **)v120, (uint64_t)v122);
            sub_1B1F03804((char *)v109);
            v4 = v103;
            ecs_stack_allocator_pop_snapshot(v103);
            v5 = v102;
            if ((v102 & 1) != 0)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v109 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v109 + 376));
            }
            swift_release();
            v6 = v110 + 1;
            if (v110 + 1 == v104)
            {
              sub_1B19ED748(v112);
              return sub_1B19ED748(v112);
            }
          }
          v21 = v106;
          v7 = v108;
          if ((_DWORD)v9 == (_DWORD)v106)
            goto LABEL_14;
          v59 = v107;
          while (1)
          {
            v64 = (int *)(v17 + 40 * v9);
            v65 = v64[1];
            v66 = *v64;
            if ((_DWORD)v66 == -1 && v65 == 0)
              goto LABEL_65;
            if ((v66 & 0x80000000) != 0)
              goto LABEL_65;
            v68 = v105[1];
            if (v68 <= v66)
              goto LABEL_65;
            v69 = *v105;
            v70 = *v105 + 12 * (int)v66;
            if (v65 != -1 && *(_DWORD *)(v70 + 8) != v65)
              goto LABEL_65;
            v72 = *(_QWORD *)(*(_QWORD *)(v59 + 136) + 8 * *(int *)(v69 + 12 * (int)v66) + 32);
            v73 = *(_QWORD *)(v72 + 48);
            v74 = *(_QWORD *)(v73 + 16);
            if (!v74)
              goto LABEL_65;
            v75 = *(__int16 *)(v70 + 4);
            v76 = (_QWORD *)(v73 + 56);
            while ((ValueMetadata *)*(v76 - 3) != &type metadata for MeshModel)
            {
              v76 += 5;
              if (!--v74)
                goto LABEL_65;
            }
            v77 = *(_QWORD *)(*(_QWORD *)(v72 + 128) + *v76 + 16 * v75 + 8);
            v78 = v17 + 40 * v9;
            v80 = *(_DWORD *)(v78 + 8);
            v79 = *(_DWORD *)(v78 + 12);
            if (v80 == -1 && v79 == 0)
            {
              v82 = *(_QWORD *)(v78 + 24);
              if (v82 < 0 || v82 >= *(_QWORD *)(v77 + 16))
                goto LABEL_102;
              v83 = v77 + 8 * v82;
              v80 = *(_DWORD *)(v83 + 32);
              v79 = *(_DWORD *)(v83 + 36);
            }
            v84 = v80 == -1 && v79 == 0;
            if (!v84 && (v80 & 0x80000000) == 0 && v68 > v80)
            {
              v85 = *(_DWORD *)(v69 + 12 * v80 + 8);
              if (v79 == -1 || v85 == v79)
                goto LABEL_65;
            }
LABEL_102:
            v87 = *(_QWORD *)(v59 + 176);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            os_unfair_recursive_lock_lock_with_options();
            v88 = sub_1B1F21F0C((uint64_t)&type metadata for DefaultMaterialInstance);
            if ((v90 & 1) == 0)
            {
              os_unfair_recursive_lock_unlock();
              swift_release();
LABEL_104:
              type metadata accessor for PBRParameters();
              v91 = swift_allocObject();
              *(_OWORD *)(v91 + 16) = xmmword_1B226E4E0;
              *(_QWORD *)(v91 + 32) = 0xFFFFFFFFLL;
              *(_DWORD *)(v91 + 40) = 16777473;
              *(_BYTE *)(v91 + 44) = 1;
              *(_OWORD *)(v91 + 48) = xmmword_1B2244EC0;
              *(_QWORD *)(v91 + 64) = 0;
              *(_QWORD *)(v91 + 72) = 0;
              *(_QWORD *)(v91 + 80) = 0xFFFFFFFFLL;
              *(_DWORD *)(v91 + 88) = 16777473;
              *(_BYTE *)(v91 + 92) = 1;
              *(_OWORD *)(v91 + 96) = xmmword_1B2244EC0;
              *(_QWORD *)(v91 + 112) = 0xFFFFFFFFLL;
              *(_DWORD *)(v91 + 120) = 16777473;
              *(_BYTE *)(v91 + 124) = 1;
              *(_DWORD *)(v91 + 128) = 1056964608;
              *(_OWORD *)(v91 + 144) = xmmword_1B2244EC0;
              *(_QWORD *)(v91 + 160) = 0xFFFFFFFFLL;
              *(_DWORD *)(v91 + 168) = 16777473;
              *(_BYTE *)(v91 + 172) = 1;
              *(_DWORD *)(v91 + 176) = 0;
              *(_OWORD *)(v91 + 192) = xmmword_1B2244EC0;
              *(_QWORD *)(v91 + 208) = 0xFFFFFFFFLL;
              *(_DWORD *)(v91 + 216) = 16777473;
              *(_BYTE *)(v91 + 220) = 1;
              *(_DWORD *)(v91 + 224) = 1065353216;
              *(_OWORD *)(v91 + 240) = xmmword_1B2244EC0;
              *(_QWORD *)(v91 + 256) = 0xFFFFFFFFLL;
              *(_DWORD *)(v91 + 264) = 16777473;
              *(_BYTE *)(v91 + 268) = 1;
              *(_DWORD *)(v91 + 272) = 1065353216;
              *(_OWORD *)(v91 + 288) = xmmword_1B2244EC0;
              *(_WORD *)(v91 + 304) = 0;
              type metadata accessor for RenderPipelineFactory();
              swift_allocObject();
              v92 = sub_1B20C3C0C(140);
              *(_QWORD *)(v92 + 88) = sub_1B2137D90;
              *(_QWORD *)(v92 + 96) = 0;
              swift_release();
              v93 = sub_1B2180BAC(0x100000000uLL, **(_QWORD **)(v59 + v97), 0, v92, 0x100000000uLL, 0xD000000000000018, 0x80000001B2338140, -1.0);
              swift_release();
              swift_retain();
              sub_1B1FEC0E4(v93, v59, v91);
              v94 = swift_release_n();
              MEMORY[0x1E0C80A78](v94, v95);
              v96 = *(_QWORD **)(v107 + 176);
              swift_retain();
              sub_1B1F22244((uint64_t)&type metadata for DefaultMaterialInstance, (uint64_t)&off_1E63AA418, v96, (void (*)(uint64_t))sub_1B1CC6B1C);
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              v59 = v107;
              goto LABEL_64;
            }
            v60 = (int *)(*(_QWORD *)(v87 + 16) + v88);
            v61 = 32 * v89;
            os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v87 + 32) + 32 * v89 + 24));
            os_unfair_recursive_lock_unlock();
            v63 = *v60;
            v62 = v60[1];
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v87 + 32) + v61 + 24));
            swift_release();
            if (v63 == -1)
            {
              v59 = v107;
              if (v62)
              {
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_64;
              }
              goto LABEL_104;
            }
            swift_bridgeObjectRelease();
            swift_release();
            v59 = v107;
LABEL_64:
            *v98 = 1;
            v21 = v106;
LABEL_65:
            if (++v9 == v21)
              goto LABEL_14;
          }
        }
      }
      return sub_1B19ED748(v112);
    }
  }
  return result;
}

uint64_t *sub_1B1CC2620(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t *result;
  _QWORD *v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  _QWORD *v39;
  int v40;
  uint64_t v41;
  BOOL v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unsigned int *v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  os_unfair_lock_s *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t i;
  int v68;
  double v69;
  BOOL v70;
  uint64_t v71;
  unsigned int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _UNKNOWN **v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  size_t v94;
  _QWORD *v95;
  char *v96;
  _QWORD *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t j;
  int v104;
  double v105;
  BOOL v106;
  uint64_t v107;
  unsigned int *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  double v125;
  uint64_t v126;
  _QWORD *v127;
  int v128;
  uint64_t v129;
  BOOL v130;
  char v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  unsigned int *v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  os_unfair_lock_s *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t k;
  int v155;
  double v156;
  _QWORD *v157;
  BOOL v158;
  uint64_t v159;
  unsigned int *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t *v173;
  char *v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  char v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  size_t v183;
  _QWORD *v184;
  char *v185;
  _QWORD *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t m;
  int v193;
  double v194;
  _QWORD *v195;
  BOOL v196;
  uint64_t v197;
  unsigned int *v199;
  _QWORD *v200;
  _BYTE v201[16];
  _QWORD *v202;
  uint64_t v203;
  double v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _UNKNOWN **v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  _QWORD *v237;
  _QWORD *v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243[8];
  uint64_t v244[12];
  uint64_t v245[12];
  _OWORD v246[2];
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  _OWORD v253[2];
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  _OWORD v260[2];
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  __int128 v267;
  __int128 v268;
  uint64_t v269;
  _OWORD v270[2];
  uint64_t v271;
  _OWORD v272[2];
  uint64_t v273;
  _OWORD v274[2];
  uint64_t v275;
  _BYTE v276[40];
  _BYTE v277[40];
  _QWORD v278[5];
  uint64_t v279;
  int v280;
  char v281;
  _QWORD *v282;
  char v283;
  char *v284;
  _QWORD v285[10];
  uint64_t v286;
  int v287;
  char v288;
  _QWORD *v289;
  char v290;
  char *v291;
  _OWORD v292[2];
  uint64_t v293;

  v3 = *(_OWORD *)(v1 + 360);
  v4 = *(_OWORD *)(v1 + 376);
  v293 = *(_QWORD *)(v1 + 392);
  v292[0] = v3;
  v292[1] = v4;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B1E8FCE4(a1, (uint64_t)v292, 0x200000000, v243);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v243, (uint64_t)v260, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v260[0])
  {
    v267 = v260[0];
    v268 = v260[1];
    v269 = v261;
    if (v266 >= 1)
    {
      v208 = v263;
      if (v263)
      {
        v227 = v5;
        v207 = v262;
        v219 = v264;
        v211 = *(unsigned __int8 *)(v264 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v210 = v265[4];
        v206 = v265 + 6;
        v212 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
        v213 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
        v7 = (_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        v221 = v265;
        v205 = v265 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v8 = 0;
        while (1)
        {
          v209 = v8;
          v9 = (unsigned int *)(v207 + 48 * v8);
          v225 = *v9;
          v215 = (_UNKNOWN **)v9[1];
          v214 = v9[2];
          v10 = (uint64_t *)*((_QWORD *)v9 + 2);
          v11 = *((_QWORD *)v9 + 3);
          v12 = *((_QWORD *)v9 + 5);
          v216 = *((_QWORD *)v9 + 4);
          v217 = v10;
          if (v211)
          {
            v13 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain();
            os_unfair_lock_lock(v13);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v210);
          sub_1B1A18378((uint64_t)v206, (uint64_t)v276, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v14 = v221;
          v15 = v221[4];
          v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 40) + 16) + 32) + 16) + 1;
          v222 = v12;
          swift_retain();
          v17 = v15;
          v18 = v222;
          v14[6] = ecs_stack_allocator_allocate(v17, 48 * v16, 8);
          v14[7] = v16;
          v19 = v205;
          v205[1] = 0;
          v19[2] = 0;
          *v19 = 0;
          swift_release();
          v21 = v216;
          v20 = v217;
          sub_1B1A12038((uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1E63B88B8, v217, v11, v216, (uint64_t)v14);
          v218 = 32;
          if (!v20)
            break;
          if (v21)
          {
            v22 = 0;
            do
            {
              v23 = v217[v22];
              v225 = v22;
              v278[0] = v219;
              v278[1] = v18;
              v278[2] = v221;
              v278[3] = v22 + v214;
              v278[4] = v23;
              v24 = *(_QWORD *)(v220 + 400);
              LODWORD(v239) = *(_DWORD *)(v220 + 408);
              LODWORD(v238) = *(unsigned __int8 *)(v220 + 412);
              v25 = *(_QWORD **)(v220 + 416);
              LODWORD(v235) = *(unsigned __int8 *)(v220 + 424);
              v236 = *(char **)(v220 + 432);
              v237 = v25;
              v26 = v227;
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v227 + 40));
              v27 = *(_QWORD *)(v26 + 48);
              if (*(_QWORD *)(v27 + 16) && (v28 = sub_1B1DC3AC8(*(_QWORD *)(v24 + 32)), (v29 & 1) != 0))
              {
                v30 = (uint64_t *)(*(_QWORD *)(v27 + 56) + 24 * v28);
                v32 = *v30;
                v31 = v30[1];
                v33 = v30[2];
                swift_retain();
                swift_bridgeObjectRetain();
                v240 = v33;
                swift_bridgeObjectRetain();
                v34 = v227;
              }
              else
              {
                v34 = v227;
                v32 = sub_1B1E8F784(a1, v24);
                v31 = v35;
                v240 = v36;
              }
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 40));
              v38 = *(_QWORD *)(v31 + 16);
              if (v38)
              {
                v39 = (_QWORD *)thread_worker_index(v37);
                v40 = *(unsigned __int8 *)(a1 + v212);
                v234 = v32;
                if (v40 == 4)
                {
                  v41 = *(_QWORD *)(a1 + 216);
                  if (*(_BYTE *)(a1 + 225) == 1)
                    v42 = v41 <= 1;
                  else
                    v42 = v41 <= 0;
                  v43 = !v42;
                }
                else
                {
                  v43 = 1;
                }
                v44 = *(_QWORD *)(*(_QWORD *)(a1 + v213) + 8 * *v39 + 8);
                if ((_DWORD)v235 != 2)
                  v43 = v235;
                v279 = v24;
                v280 = (int)v239;
                v281 = (char)v238;
                v282 = v237;
                v283 = v43;
                v284 = v236;
                swift_retain();
                swift_retain();
                sub_1B1BED22C(a1, v44, (uint64_t)&v279, (int *)(v31 + 32), v38, (uint64_t)v244);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                sub_1B1A18378((uint64_t)v244, (uint64_t)v246, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
                if (*(_QWORD *)&v246[0])
                {
                  if (v252 >= 1)
                  {
                    v231 = v249;
                    if (v249)
                    {
                      v45 = v251;
                      v235 = v251[4];
                      LODWORD(v234) = *(unsigned __int8 *)(v250
                                                         + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
                      v274[0] = v246[0];
                      v274[1] = v246[1];
                      v275 = v247;
                      v229 = v251 + 6;
                      v230 = v248;
                      v228 = v251 + 8;
                      v215 = &off_1E6391B38;
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      v46 = 0;
                      v237 = v45;
                      while (1)
                      {
                        v233 = v46;
                        v47 = (unsigned int *)(v230 + 48 * v46);
                        v48 = *v47;
                        v239 = (_QWORD *)v47[1];
                        v49 = (char *)*((_QWORD *)v47 + 2);
                        v50 = *((_QWORD *)v47 + 3);
                        v51 = *((_QWORD *)v47 + 5);
                        v240 = *((_QWORD *)v47 + 4);
                        v236 = v49;
                        v232 = v50;
                        if ((_DWORD)v234)
                        {
                          v52 = *(os_unfair_lock_s **)(v51 + 376);
                          swift_retain();
                          os_unfair_lock_lock(v52);
                          os_unfair_lock_lock(*(os_unfair_lock_t *)(v51 + 344));
                        }
                        else
                        {
                          swift_retain();
                        }
                        ecs_stack_allocator_push_snapshot(v235);
                        sub_1B1A18378((uint64_t)v229, (uint64_t)v277, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
                        v53 = v45[4];
                        v54 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v51 + 40) + 16) + 32) + 16) + 1;
                        swift_retain();
                        v55 = v53;
                        v56 = v237;
                        v56[6] = (uint64_t)ecs_stack_allocator_allocate(v55, 48 * v54, 8);
                        v56[7] = v54;
                        v57 = v228;
                        v228[1] = 0;
                        v57[2] = 0;
                        *v57 = 0;
                        swift_release();
                        v238 = (_QWORD *)v51;
                        v58 = *(_QWORD *)(v51 + 48);
                        v59 = *(_QWORD *)(v58 + 16);
                        if (!v236)
                          break;
                        if (v59)
                        {
                          v60 = v58 + 56;
                          while (*(ValueMetadata **)(v60 - 24) != &type metadata for EmitterDescription)
                          {
                            v60 += 40;
                            if (!--v59)
                              goto LABEL_47;
                          }
                          v76 = v60 - 8;
                          v75 = *(_QWORD *)(v60 - 8);
                          v74 = *(_QWORD *)(v76 + 8);
                          if (v75 <= 1)
                            v75 = 1;
                          v77 = v238;
                          v226 = v238[16] + v74;
                          v224 = v226 + v238[30] * v75;
                          v78 = v240;
                          v79 = 11 * v240;
                          v62 = ecs_stack_allocator_allocate(v56[4], 88 * v240, 8);
                          v223 = &v62[v79];
                          sub_1B1CC6970(v236, v78, v226, (uint64_t)v62);
                          v241 = 0;
                          v242 = 0;
                          swift_unownedRetainStrong();
                          swift_unownedRetain();
                          swift_release();
                          v80 = (_QWORD *)swift_allocObject();
                          v81 = v232;
                          v80[2] = v236;
                          v80[3] = v81;
                          v80[4] = v78;
                          sub_1B1A18378((uint64_t)&v241, (uint64_t)(v80 + 5), (unint64_t *)&unk_1ED4B8AA0, (uint64_t)&type metadata for PackedRewriter);
                          v82 = v223;
                          v80[7] = v62;
                          v80[8] = v82;
                          v83 = v224;
                          v80[9] = v226;
                          v80[10] = v83;
                          v84 = v215;
                          v80[11] = &type metadata for EmitterDescription;
                          v80[12] = v84;
                          v80[13] = &type metadata for EmitterDescription;
                          v80[14] = v77;
                          v85 = v236;
                          v86 = v237[8];
                          v87 = (_QWORD *)(v237[6] + 48 * v86);
                          *v87 = &type metadata for EmitterDescription;
                          v87[1] = v84;
                          v87[2] = &type metadata for EmitterDescription;
                          v87[3] = v62;
                          v87[4] = sub_1B1CC6AD8;
                          v87[5] = v80;
                          v237[8] = v86 + 1;
                          if (!v85)
                            goto LABEL_75;
                          goto LABEL_48;
                        }
                        v62 = 0;
                        if (v240)
                        {
LABEL_51:
                          v63 = 0;
                          v239 = v62 + 3;
                          do
                          {
                            v64 = *(_QWORD *)(v239[11 * v63] + 16);
                            if (v64)
                            {
                              v65 = swift_bridgeObjectRetain();
                              for (i = 0; i != v64; ++i)
                              {
                                v69 = MEMORY[0x1E0C80A78](v65, v66);
                                v202 = v278;
                                v203 = a1;
                                v204 = v69;
                                v70 = LODWORD(v69) == -1 && HIDWORD(v69) == 0;
                                if (!v70 && (LODWORD(v69) & 0x80000000) == 0 && v7[1] > SLODWORD(v69))
                                {
                                  v71 = *(unsigned int *)(*v7 + SLODWORD(v69) * (uint64_t)v68 + 8);
                                  if (HIDWORD(v69) == -1 || (_DWORD)v71 == HIDWORD(v69))
                                  {
                                    v73 = (unsigned int *)(*v7 + SLODWORD(v69) * (uint64_t)v68);
                                    v65 = sub_1B1FE4F9C(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * (int)*v73 + 32), a1, *v73 | ((unint64_t)*((unsigned __int16 *)v73 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v73 + 2) << 32), v71, (void (*)(_BYTE *))sub_1B1CC6CDC, (uint64_t)v201);
                                  }
                                }
                              }
                              swift_bridgeObjectRelease();
                            }
                            ++v63;
                          }
                          while (v63 != v240);
                        }
LABEL_76:
                        v45 = v237;
                        sub_1B1F05D48(v237, (unsigned __int16 **)v274, (uint64_t)v277);
                        if (*(_QWORD *)(v45[13] + 16))
                        {
                          v88 = (_QWORD *)swift_bridgeObjectRetain();
                          sub_1B1F05034(v88, (uint64_t)v238);
                          swift_bridgeObjectRelease();
                          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                          v90 = (_QWORD *)v45[13];
                          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                          {
                            v91 = v90[2];
                            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                              v90 = sub_1B1C631A0(0, v91, 1, v90);
                            sub_1B1B1F228();
                            swift_arrayDestroy();
                            if (v91)
                            {
                              v92 = v90[2] - v91;
                              if (v92 < 0)
                                goto LABEL_226;
                              memmove(v90 + 4, &v90[9 * v91 + 4], 72 * v92);
                              v90[2] = v92;
                            }
                            v45[13] = v90;
                          }
                          else
                          {
                            v93 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                            if (v90[3] >= 2uLL)
                            {
                              sub_1B1BBF038();
                              v93 = (_QWORD *)swift_allocObject();
                              v94 = j__malloc_size(v93);
                              v93[2] = 0;
                              v93[3] = 2 * ((uint64_t)(v94 - 32) / 72);
                            }
                            v45[13] = v93;
                            swift_bridgeObjectRelease();
                          }
                          if (*(unsigned __int8 *)(v45[2]
                                                                + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
                             - 1 >= 2)
                          {
                            v95 = v238;
                            v97 = v238 + 29;
                            v96 = (char *)v238[29];
                            v98 = (char *)v238[32];
                            if (v96 == v98)
                            {
                              v99 = (char *)v238[30];
                            }
                            else
                            {
                              sub_1B1A1059C(v98, v96);
                              v95 = v238;
                              v98 = (char *)v238[29];
                              v99 = (char *)v238[30];
                              if (v99 == v98)
                              {
                                v99 = 0;
                                v98 = 0;
                                *v97 = 0;
                                v97[1] = 0;
                              }
                            }
                            v95[31] = v99;
                            v95[32] = v98;
                          }
                        }
                        ecs_stack_allocator_pop_snapshot(v235);
                        if ((v234 & 1) != 0)
                        {
                          v110 = v238;
                          os_unfair_lock_unlock((os_unfair_lock_t)v238[43]);
                          os_unfair_lock_unlock((os_unfair_lock_t)v110[47]);
                        }
                        swift_release();
                        v46 = v233 + 1;
                        if (v233 + 1 == v231)
                        {
                          sub_1B19ED748(v244);
                          goto LABEL_114;
                        }
                      }
                      if (!v59)
                      {
                        v62 = 0;
LABEL_75:
                        if ((_DWORD)v48 != (_DWORD)v239)
                        {
                          v240 = (uint64_t)(v62 + 3);
                          do
                          {
                            v100 = *(_QWORD *)(*(_QWORD *)(v240 + 88 * v48) + 16);
                            if (v100)
                            {
                              v101 = swift_bridgeObjectRetain();
                              for (j = 0; j != v100; ++j)
                              {
                                v105 = MEMORY[0x1E0C80A78](v101, v102);
                                v202 = v278;
                                v203 = a1;
                                v204 = v105;
                                v106 = LODWORD(v105) == -1 && HIDWORD(v105) == 0;
                                if (!v106 && (LODWORD(v105) & 0x80000000) == 0 && v7[1] > SLODWORD(v105))
                                {
                                  v107 = *(unsigned int *)(*v7 + SLODWORD(v105) * (uint64_t)v104 + 8);
                                  if (HIDWORD(v105) == -1 || (_DWORD)v107 == HIDWORD(v105))
                                  {
                                    v109 = (unsigned int *)(*v7 + SLODWORD(v105) * (uint64_t)v104);
                                    v101 = sub_1B1FE4F9C(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * (int)*v109 + 32), a1, *v109 | ((unint64_t)*((unsigned __int16 *)v109 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v109 + 2) << 32), v107, (void (*)(_BYTE *))sub_1B1CC6CDC, (uint64_t)v201);
                                  }
                                }
                              }
                              swift_bridgeObjectRelease();
                            }
                            ++v48;
                          }
                          while ((_QWORD *)v48 != v239);
                        }
                        goto LABEL_76;
                      }
                      v61 = (_QWORD *)(v58 + 56);
                      do
                      {
                        if ((ValueMetadata *)*(v61 - 3) == &type metadata for EmitterDescription)
                        {
                          v62 = (_QWORD *)(v238[16] + *v61);
                          goto LABEL_75;
                        }
                        v61 += 5;
                        --v59;
                      }
                      while (v59);
LABEL_47:
                      v62 = 0;
                      if (!v236)
                        goto LABEL_75;
LABEL_48:
                      if (v240)
                        goto LABEL_51;
                      goto LABEL_76;
                    }
                  }
LABEL_114:
                  sub_1B19ED748(v244);
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
              }
              v22 = v225 + 1;
              v18 = v222;
            }
            while (v225 + 1 != v216);
          }
LABEL_116:
          v270[0] = v267;
          v270[1] = v268;
          v271 = v269;
          sub_1B1F05D48(v221, (unsigned __int16 **)v270, (uint64_t)v276);
          sub_1B1F03804((char *)v18);
          ecs_stack_allocator_pop_snapshot(v210);
          if ((v211 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
          }
          swift_release();
          v8 = v209 + 1;
          if (v209 + 1 == v208)
          {
            sub_1B19ED748(v243);
            return sub_1B19ED748(v243);
          }
        }
        v111 = v225;
        if ((_DWORD)v225 == (_DWORD)v215)
          goto LABEL_116;
        v216 = v214 - v225;
        while (1)
        {
          v285[5] = v219;
          v285[6] = v18;
          v285[7] = v221;
          v285[8] = v216 + v111;
          v225 = v111;
          v285[9] = v111;
          v112 = *(_QWORD *)(v220 + 400);
          LODWORD(v239) = *(_DWORD *)(v220 + 408);
          LODWORD(v238) = *(unsigned __int8 *)(v220 + 412);
          v113 = *(_QWORD **)(v220 + 416);
          LODWORD(v235) = *(unsigned __int8 *)(v220 + 424);
          v236 = *(char **)(v220 + 432);
          v237 = v113;
          v114 = v227;
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v227 + 40));
          v115 = *(_QWORD *)(v114 + 48);
          if (*(_QWORD *)(v115 + 16) && (v116 = sub_1B1DC3AC8(*(_QWORD *)(v112 + 32)), (v117 & 1) != 0))
          {
            v118 = (uint64_t *)(*(_QWORD *)(v115 + 56) + 24 * v116);
            v120 = *v118;
            v119 = v118[1];
            v121 = v118[2];
            swift_retain();
            swift_bridgeObjectRetain();
            v240 = v121;
            swift_bridgeObjectRetain();
            v122 = v227;
          }
          else
          {
            v122 = v227;
            v120 = sub_1B1E8F784(a1, v112);
            v119 = v123;
            v240 = v124;
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v122 + 40));
          v126 = *(_QWORD *)(v119 + 16);
          if (!v126)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_120;
          }
          v127 = (_QWORD *)thread_worker_index(v125);
          v128 = *(unsigned __int8 *)(a1 + v212);
          v234 = v120;
          if (v128 == 4)
          {
            v129 = *(_QWORD *)(a1 + 216);
            if (*(_BYTE *)(a1 + 225) == 1)
              v130 = v129 <= 1;
            else
              v130 = v129 <= 0;
            v131 = !v130;
          }
          else
          {
            v131 = 1;
          }
          v132 = *(_QWORD *)(*(_QWORD *)(a1 + v213) + 8 * *v127 + 8);
          if ((_DWORD)v235 != 2)
            v131 = v235;
          v286 = v112;
          v287 = (int)v239;
          v288 = (char)v238;
          v289 = v237;
          v290 = v131;
          v291 = v236;
          swift_retain();
          swift_retain();
          sub_1B1BED22C(a1, v132, (uint64_t)&v286, (int *)(v119 + 32), v126, (uint64_t)v245);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          sub_1B1A18378((uint64_t)v245, (uint64_t)v253, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
          if (*(_QWORD *)&v253[0])
          {
            v18 = v222;
            if (v259 >= 1)
            {
              v231 = v256;
              if (v256)
              {
                v133 = v258;
                v235 = v258[4];
                LODWORD(v234) = *(unsigned __int8 *)(v257 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
                v272[0] = v253[0];
                v272[1] = v253[1];
                v273 = v254;
                v229 = v258 + 6;
                v230 = v255;
                v228 = v258 + 8;
                v217 = (uint64_t *)&off_1E6391B38;
                swift_retain();
                swift_retain();
                swift_retain();
                v134 = 0;
                v238 = v133;
                while (1)
                {
                  v233 = v134;
                  v135 = (unsigned int *)(v230 + 48 * v134);
                  v136 = *v135;
                  v239 = (_QWORD *)v135[1];
                  v137 = (char *)*((_QWORD *)v135 + 2);
                  v138 = *((_QWORD *)v135 + 3);
                  v139 = *((_QWORD *)v135 + 5);
                  v240 = *((_QWORD *)v135 + 4);
                  v236 = v137;
                  v232 = v138;
                  if ((_DWORD)v234)
                  {
                    v140 = *(os_unfair_lock_s **)(v139 + 376);
                    swift_retain();
                    os_unfair_lock_lock(v140);
                    os_unfair_lock_lock(*(os_unfair_lock_t *)(v139 + 344));
                  }
                  else
                  {
                    swift_retain();
                  }
                  ecs_stack_allocator_push_snapshot(v235);
                  sub_1B1A18378((uint64_t)v229, (uint64_t)v285, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
                  v141 = v133[4];
                  v142 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v139 + 40) + 16) + 32) + 16) + 1;
                  swift_retain();
                  v143 = v238;
                  v143[6] = ecs_stack_allocator_allocate(v141, 48 * v142, 8);
                  v143[7] = v142;
                  v144 = v228;
                  v228[1] = 0;
                  v144[2] = 0;
                  *v144 = 0;
                  swift_release();
                  v237 = (_QWORD *)v139;
                  v145 = *(_QWORD *)(v139 + 48);
                  v146 = *(_QWORD *)(v145 + 16);
                  if (v236)
                  {
                    if (!v146)
                    {
                      v149 = 0;
                      if (!v240)
                        goto LABEL_184;
                      goto LABEL_159;
                    }
                    v147 = v145 + 56;
                    while (*(ValueMetadata **)(v147 - 24) != &type metadata for EmitterDescription)
                    {
                      v147 += 40;
                      if (!--v146)
                        goto LABEL_155;
                    }
                    v164 = v147 - 8;
                    v163 = *(_QWORD *)(v147 - 8);
                    v162 = *(_QWORD *)(v164 + 8);
                    if (v163 <= 1)
                      v163 = 1;
                    v165 = v237;
                    v226 = v237[16] + v162;
                    v224 = v226 + v237[30] * v163;
                    v166 = v143[4];
                    v167 = v240;
                    v168 = 11 * v240;
                    v149 = ecs_stack_allocator_allocate(v166, 88 * v240, 8);
                    v223 = &v149[v168];
                    sub_1B1CC6970(v236, v167, v226, (uint64_t)v149);
                    v241 = 0;
                    v242 = 0;
                    swift_unownedRetainStrong();
                    swift_unownedRetain();
                    swift_release();
                    v169 = (_QWORD *)swift_allocObject();
                    v170 = v232;
                    v169[2] = v236;
                    v169[3] = v170;
                    v169[4] = v167;
                    sub_1B1A18378((uint64_t)&v241, (uint64_t)(v169 + 5), (unint64_t *)&unk_1ED4B8AA0, (uint64_t)&type metadata for PackedRewriter);
                    v171 = v223;
                    v169[7] = v149;
                    v169[8] = v171;
                    v172 = v224;
                    v169[9] = v226;
                    v169[10] = v172;
                    v173 = v217;
                    v169[11] = &type metadata for EmitterDescription;
                    v169[12] = v173;
                    v169[13] = &type metadata for EmitterDescription;
                    v169[14] = v165;
                    v174 = v236;
                    v175 = v238[8];
                    v176 = (_QWORD *)(v238[6] + 48 * v175);
                    *v176 = &type metadata for EmitterDescription;
                    v176[1] = v173;
                    v176[2] = &type metadata for EmitterDescription;
                    v176[3] = v149;
                    v176[4] = sub_1B1CC6AD8;
                    v176[5] = v169;
                    v238[8] = v175 + 1;
                    if (v174)
                      goto LABEL_156;
                  }
                  else
                  {
                    if (v146)
                    {
                      v148 = (_QWORD *)(v145 + 56);
                      do
                      {
                        if ((ValueMetadata *)*(v148 - 3) == &type metadata for EmitterDescription)
                        {
                          v149 = (_QWORD *)(v237[16] + *v148);
                          goto LABEL_183;
                        }
                        v148 += 5;
                        --v146;
                      }
                      while (v146);
LABEL_155:
                      v149 = 0;
                      if (!v236)
                        goto LABEL_183;
LABEL_156:
                      if (!v240)
                        goto LABEL_184;
LABEL_159:
                      v150 = 0;
                      v239 = v149 + 3;
                      do
                      {
                        v151 = *(_QWORD *)(v239[11 * v150] + 16);
                        if (v151)
                        {
                          v152 = swift_bridgeObjectRetain();
                          for (k = 0; k != v151; ++k)
                          {
                            v156 = MEMORY[0x1E0C80A78](v152, v153);
                            v202 = v157;
                            v203 = a1;
                            v204 = v156;
                            v158 = LODWORD(v156) == -1 && HIDWORD(v156) == 0;
                            if (!v158 && (LODWORD(v156) & 0x80000000) == 0 && v7[1] > SLODWORD(v156))
                            {
                              v159 = *(unsigned int *)(*v7 + SLODWORD(v156) * (uint64_t)v155 + 8);
                              if (HIDWORD(v156) == -1 || (_DWORD)v159 == HIDWORD(v156))
                              {
                                v161 = (unsigned int *)(*v7 + SLODWORD(v156) * (uint64_t)v155);
                                v152 = sub_1B1FE4F9C(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * (int)*v161 + 32), a1, *v161 | ((unint64_t)*((unsigned __int16 *)v161 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v161 + 2) << 32), v159, (void (*)(_BYTE *))sub_1B1CC6CDC, (uint64_t)v201);
                              }
                            }
                          }
                          swift_bridgeObjectRelease();
                        }
                        ++v150;
                      }
                      while (v150 != v240);
                      goto LABEL_184;
                    }
                    v149 = 0;
                  }
LABEL_183:
                  if ((_DWORD)v136 != (_DWORD)v239)
                  {
                    v240 = (uint64_t)(v149 + 3);
                    do
                    {
                      v189 = *(_QWORD *)(*(_QWORD *)(v240 + 88 * v136) + 16);
                      if (v189)
                      {
                        v190 = swift_bridgeObjectRetain();
                        for (m = 0; m != v189; ++m)
                        {
                          v194 = MEMORY[0x1E0C80A78](v190, v191);
                          v202 = v195;
                          v203 = a1;
                          v204 = v194;
                          v196 = LODWORD(v194) == -1 && HIDWORD(v194) == 0;
                          if (!v196 && (LODWORD(v194) & 0x80000000) == 0 && v7[1] > SLODWORD(v194))
                          {
                            v197 = *(unsigned int *)(*v7 + SLODWORD(v194) * (uint64_t)v193 + 8);
                            if (HIDWORD(v194) == -1 || (_DWORD)v197 == HIDWORD(v194))
                            {
                              v199 = (unsigned int *)(*v7 + SLODWORD(v194) * (uint64_t)v193);
                              v190 = sub_1B1FE4F9C(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * (int)*v199 + 32), a1, *v199 | ((unint64_t)*((unsigned __int16 *)v199 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v199 + 2) << 32), v197, (void (*)(_BYTE *))sub_1B1CC6378, (uint64_t)v201);
                            }
                          }
                        }
                        swift_bridgeObjectRelease();
                      }
                      ++v136;
                    }
                    while ((_QWORD *)v136 != v239);
                  }
LABEL_184:
                  v133 = v238;
                  sub_1B1F05D48(v238, (unsigned __int16 **)v272, (uint64_t)v285);
                  if (*(_QWORD *)(v133[13] + 16))
                  {
                    v177 = (_QWORD *)swift_bridgeObjectRetain();
                    sub_1B1F05034(v177, (uint64_t)v237);
                    swift_bridgeObjectRelease();
                    v178 = swift_isUniquelyReferenced_nonNull_native();
                    v179 = (_QWORD *)v133[13];
                    if ((v178 & 1) != 0)
                    {
                      v180 = v179[2];
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        v179 = sub_1B1C631A0(0, v180, 1, v179);
                      sub_1B1B1F228();
                      swift_arrayDestroy();
                      if (v180)
                      {
                        v181 = v179[2] - v180;
                        if (v181 < 0)
                        {
LABEL_226:
                          LODWORD(v204) = 0;
                          v203 = 1046;
                          LOBYTE(v202) = 2;
                          result = (uint64_t *)sub_1B2229700();
                          __break(1u);
                          return result;
                        }
                        memmove(v179 + 4, &v179[9 * v180 + 4], 72 * v181);
                        v179[2] = v181;
                        v133 = v238;
                      }
                      v133[13] = v179;
                    }
                    else
                    {
                      v182 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                      if (v179[3] >= 2uLL)
                      {
                        sub_1B1BBF038();
                        v133 = v238;
                        v182 = (_QWORD *)swift_allocObject();
                        v183 = j__malloc_size(v182);
                        v182[2] = 0;
                        v182[3] = 2 * ((uint64_t)(v183 - 32) / 72);
                      }
                      v133[13] = v182;
                      swift_bridgeObjectRelease();
                    }
                    if (*(unsigned __int8 *)(v133[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
                       - 1 >= 2)
                    {
                      v184 = v237;
                      v186 = v237 + 29;
                      v185 = (char *)v237[29];
                      v187 = (char *)v237[32];
                      if (v185 == v187)
                      {
                        v188 = (char *)v237[30];
                      }
                      else
                      {
                        sub_1B1A1059C(v187, v185);
                        v187 = (char *)v184[29];
                        v188 = (char *)v184[30];
                        if (v188 == v187)
                        {
                          v188 = 0;
                          v187 = 0;
                          *v186 = 0;
                          v186[1] = 0;
                        }
                      }
                      v184[31] = v188;
                      v184[32] = v187;
                      v133 = v238;
                    }
                  }
                  ecs_stack_allocator_pop_snapshot(v235);
                  v200 = v237;
                  if ((v234 & 1) != 0)
                  {
                    os_unfair_lock_unlock((os_unfair_lock_t)v237[43]);
                    os_unfair_lock_unlock((os_unfair_lock_t)v200[47]);
                  }
                  swift_release();
                  v134 = v233 + 1;
                  if (v233 + 1 == v231)
                  {
                    sub_1B19ED748(v245);
                    sub_1B19ED748(v245);
                    goto LABEL_120;
                  }
                }
              }
            }
            sub_1B19ED748(v245);
          }
          else
          {
LABEL_120:
            v18 = v222;
          }
          v111 = v225 + 1;
          if ((_UNKNOWN **)(v225 + 1) == v215)
            goto LABEL_116;
        }
      }
    }
    return sub_1B19ED748(v243);
  }
  return result;
}

uint64_t sub_1B1CC3CC0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v6 = a1[3];
  v7 = a1[4];
  sub_1B19FA070(a1, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  v9 = *(_QWORD *)(a2 + 32);
  swift_retain();
  v10 = sub_1B1A101F0(v9);
  result = swift_release();
  if (v8 == v10)
    return sub_1B2094804(a4);
  return result;
}

uint64_t *sub_1B1CC3D50(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t *result;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t ObjectType;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  unsigned int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  _QWORD *v78;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v111;
  size_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  double v126;
  uint64_t v127;
  _QWORD *v128;
  char v129;
  uint64_t v130;
  int v131;
  BOOL v132;
  char v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  os_unfair_lock_s *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int v170;
  unsigned int *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v176;
  _QWORD *v177;
  char v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  unsigned int v204;
  unsigned int *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v210;
  size_t v211;
  char *v212;
  char *v213;
  char *v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v230;
  uint64_t v231;
  _QWORD *v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  int v244;
  int v245;
  _QWORD *v246;
  _QWORD *v247;
  uint64_t *v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  int v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _DWORD v257[6];
  uint64_t v258[8];
  uint64_t v259[8];
  uint64_t v260[8];
  _OWORD v261[2];
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  uint64_t v267;
  __int128 v268;
  __int128 v269;
  uint64_t v270;
  _OWORD v271[2];
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  __int128 v278;
  __int128 v279;
  uint64_t v280;
  _OWORD v281[2];
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  uint64_t v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  _OWORD v291[2];
  uint64_t v292;
  _OWORD v293[2];
  uint64_t v294;
  _OWORD v295[2];
  uint64_t v296;
  _BYTE v297[40];
  _BYTE v298[40];
  uint64_t v299;
  int v300;
  char v301;
  uint64_t v302;
  char v303;
  uint64_t v304;
  _BYTE v305[40];
  uint64_t v306;
  int v307;
  char v308;
  uint64_t v309;
  char v310;
  uint64_t v311;
  _OWORD v312[2];
  uint64_t v313;

  v2 = *(_OWORD *)(v1 + 320);
  v3 = *(_OWORD *)(v1 + 336);
  v313 = *(_QWORD *)(v1 + 352);
  v312[0] = v2;
  v312[1] = v3;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B1E8FCE4(a1, (uint64_t)v312, 0x200000000, v258);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v258, (uint64_t)v281, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v281[0])
    return result;
  v288 = v281[0];
  v289 = v281[1];
  v290 = v282;
  if (v287 < 1)
    return sub_1B19ED748(v258);
  v218 = v284;
  if (!v284)
    return sub_1B19ED748(v258);
  v217 = v283;
  v221 = v286[4];
  v220 = *(unsigned __int8 *)(v285 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v216 = (uint64_t)(v286 + 6);
  v224 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  v222 = v286;
  v223 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  v215 = v286 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = 0;
  v228 = v4;
  while (1)
  {
    v219 = v6;
    v7 = (unsigned int *)(v217 + 48 * v6);
    v250 = *v7;
    v230 = v7[1];
    v8 = *((_QWORD *)v7 + 3);
    v226 = (uint64_t *)*((_QWORD *)v7 + 2);
    v10 = *((_QWORD *)v7 + 4);
    v9 = *((_QWORD *)v7 + 5);
    if (v220)
    {
      v11 = *(os_unfair_lock_s **)(v9 + 376);
      swift_retain();
      os_unfair_lock_lock(v11);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v221);
    sub_1B1A18378(v216, (uint64_t)v297, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v12 = v222[4];
    v256 = v9;
    v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v222[6] = ecs_stack_allocator_allocate(v12, 48 * v13, 8);
    v222[7] = v13;
    v14 = v9;
    v215[1] = 0;
    v215[2] = 0;
    *v215 = 0;
    swift_release();
    sub_1B1A12038((uint64_t)&type metadata for TextureFileAsset, (uint64_t)&off_1E638AD98, v226, v8, v10, (uint64_t)v222);
    if (v226)
    {
      if (v10)
      {
        v15 = 0;
        v225 = v10;
        while (1)
        {
          v231 = v15;
          v251 = v226[v15];
          v16 = *(_QWORD *)(v227 + 440);
          v252 = *(_DWORD *)(v227 + 448);
          v17 = *(_QWORD *)(v227 + 456);
          v18 = *(unsigned __int8 *)(v227 + 464);
          v19 = *(_QWORD *)(v227 + 472);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 40));
          v20 = *(_QWORD *)(v4 + 48);
          if (!*(_QWORD *)(v20 + 16))
            goto LABEL_17;
          v21 = sub_1B1DC3AC8(*(_QWORD *)(v16 + 32));
          if ((v22 & 1) != 0)
          {
            v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 24 * v21 + 8);
            v24 = v4;
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
LABEL_17:
            sub_1B1E8F784(a1, v16);
            v23 = v25;
            v24 = v4;
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 40));
          v27 = *(_QWORD *)(v23 + 16);
          if (!v27)
            break;
          v28 = (_QWORD *)thread_worker_index(v26);
          if (*(_BYTE *)(a1 + v223) == 4)
          {
            v30 = *(_QWORD *)(a1 + 216);
            v31 = v17;
            v32 = v252;
            if (*(_BYTE *)(a1 + 225) == 1)
              v33 = v30 <= 1;
            else
              v33 = v30 <= 0;
            v34 = !v33;
          }
          else
          {
            v32 = v252;
            v34 = 1;
            v31 = v17;
          }
          v35 = *(_QWORD *)(*(_QWORD *)(a1 + v224) + 8 * *v28 + 8);
          if (v18 != 2)
            v34 = v18;
          v299 = v16;
          v300 = v32;
          v301 = v29;
          v302 = v31;
          v303 = v34;
          v304 = v19;
          swift_retain();
          swift_retain();
          sub_1B1BED22C(a1, v35, (uint64_t)&v299, (int *)(v23 + 32), v27, (uint64_t)v259);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          sub_1B1A18378((uint64_t)v259, (uint64_t)v261, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
          if (!*(_QWORD *)&v261[0])
            goto LABEL_105;
          v268 = v261[0];
          v269 = v261[1];
          v270 = v262;
          v4 = v228;
          v14 = v256;
          if (v267 >= 1)
          {
            v240 = v264;
            if (v264)
            {
              v36 = v266;
              v238 = v263;
              v37 = v266[4];
              v244 = *(unsigned __int8 *)(v265 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
              v232 = v266 + 8;
              v234 = (uint64_t)(v266 + 6);
              swift_retain();
              swift_retain();
              swift_retain();
              v38 = 0;
              v246 = v36;
              v236 = v37;
              while (1)
              {
                v242 = v38;
                v39 = (unsigned int *)(v238 + 48 * v38);
                v41 = *v39;
                v40 = v39[1];
                v42 = *((_QWORD *)v39 + 3);
                v248 = (uint64_t *)*((_QWORD *)v39 + 2);
                v44 = *((_QWORD *)v39 + 4);
                v43 = *((_QWORD *)v39 + 5);
                if (v244)
                {
                  v45 = *(os_unfair_lock_s **)(v43 + 376);
                  swift_retain();
                  os_unfair_lock_lock(v45);
                  os_unfair_lock_lock(*(os_unfair_lock_t *)(v43 + 344));
                }
                else
                {
                  swift_retain();
                }
                ecs_stack_allocator_push_snapshot(v37);
                sub_1B1A18378(v234, (uint64_t)v298, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
                v46 = v246[4];
                v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v43 + 40) + 16) + 32) + 16) + 1;
                swift_retain();
                v246[6] = ecs_stack_allocator_allocate(v46, 48 * v47, 8);
                v246[7] = v47;
                v232[1] = 0;
                v232[2] = 0;
                *v232 = 0;
                swift_release();
                v253 = sub_1B1A12038((uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, v248, v42, v44, (uint64_t)v246);
                sub_1B1A12038((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1E6384348, v248, v42, v44, (uint64_t)v246);
                if (v248)
                {
                  v14 = v256;
                  if (v44)
                  {
                    v48 = 0;
                    while (1)
                    {
                      v49 = v253 + 104 * v48;
                      v51 = *(_QWORD *)(v49 + 24);
                      v50 = v49 + 24;
                      if (v51)
                      {
                        v52 = v248[v48];
                        v53 = *(_QWORD *)(v50 + 8);
                        v54 = *(_QWORD *)(v14 + 16);
                        v55 = *(_BYTE *)(v14 + 184);
                        swift_retain();
                        if ((v55 & 1) != 0)
                          goto LABEL_208;
                        v56 = *(_QWORD *)(v14 + 168);
                        ObjectType = swift_getObjectType();
                        v58 = *(unsigned int *)(v56 + 4 * v251);
                        v59 = *(unsigned int *)(*(_QWORD *)(v54 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                              + 12 * (int)v58
                                              + 8);
                        swift_unknownObjectRetain();
                        swift_release();
                        if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v58 | (v59 << 32), ObjectType, v53) & 1) != 0)
                        {
                          v60 = *(_QWORD *)(v43 + 192);
                          swift_retain();
                          if (v60)
                          {
                            v61 = *(_QWORD *)(v43 + 208);
                            v62 = 8 * (v52 >> 6);
                            *(_QWORD *)(v60 + v62) |= 1 << v52;
                            *(_QWORD *)(v61 + v62) &= ~(1 << v52);
                          }
                          v14 = v256;
                          if (*(_BYTE *)(*(_QWORD *)(v43 + 40) + 213) == 1)
                          {
                            v63 = *(_QWORD *)(v43 + 48);
                            v64 = *(_QWORD *)(v63 + 16);
                            if (v64)
                            {
                              v65 = (uint64_t *)(v63 + 56);
                              while ((ValueMetadata *)*(v65 - 3) != &type metadata for PropagateDirtiness)
                              {
                                v65 += 5;
                                if (!--v64)
                                  goto LABEL_53;
                              }
                              v66 = *v65;
                            }
                            else
                            {
LABEL_53:
                              v66 = 0;
                            }
                            v67 = *(_QWORD *)(v43 + 128);
                            v68 = *(_BYTE *)(v43 + 184);
                            v69 = swift_retain();
                            if ((v68 & 1) != 0)
                              goto LABEL_208;
                            v70 = v67 + v66;
                            v71 = *(_DWORD *)(*(_QWORD *)(v43 + 168) + 4 * v52);
                            v72 = (unsigned int *)(v70 + 8 * v52);
                            v73 = *(unsigned int *)(*(_QWORD *)(v69 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                                  + 12 * (int)v71
                                                  + 8);
                            swift_release();
                            v74 = *v72;
                            v75 = v72[1];
                            if ((_DWORD)v74 != -1 || (_DWORD)v75 != 0)
                              sub_1B1B8A6C8(v257, v71 | (unint64_t)(v73 << 32), v74 | (v75 << 32));
                          }
                          swift_unknownObjectRelease();
                          swift_release();
                        }
                        else
                        {
                          swift_unknownObjectRelease();
                          v14 = v256;
                        }
                      }
                      if (++v48 == v44)
                        goto LABEL_63;
                    }
                  }
                  goto LABEL_63;
                }
                v77 = v40;
                v14 = v256;
                if ((_DWORD)v41 != (_DWORD)v40)
                  break;
LABEL_63:
                v295[0] = v268;
                v295[1] = v269;
                v296 = v270;
                sub_1B1F05D48(v246, (unsigned __int16 **)v295, (uint64_t)v298);
                if (*(_QWORD *)(v246[13] + 16))
                {
                  v78 = (_QWORD *)swift_bridgeObjectRetain();
                  sub_1B1F05034(v78, v43);
                  swift_bridgeObjectRelease();
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v80 = (_QWORD *)v246[13];
                  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                  {
                    v81 = v80[2];
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v80 = sub_1B1C631A0(0, v81, 1, v80);
                    sub_1B1B1F228();
                    swift_arrayDestroy();
                    if (v81)
                    {
                      v82 = v80[2] - v81;
                      if (v82 < 0)
                        goto LABEL_209;
                      memmove(v80 + 4, &v80[9 * v81 + 4], 72 * v82);
                      v80[2] = v82;
                    }
                    v246[13] = v80;
                    v14 = v256;
                  }
                  else
                  {
                    v111 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                    if (v80[3] >= 2uLL)
                    {
                      sub_1B1BBF038();
                      v111 = (_QWORD *)swift_allocObject();
                      v112 = j__malloc_size(v111);
                      v111[2] = 0;
                      v111[3] = 2 * ((uint64_t)(v112 - 32) / 72);
                    }
                    v246[13] = v111;
                    swift_bridgeObjectRelease();
                  }
                  if (*(unsigned __int8 *)(v246[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
                     - 1 >= 2)
                  {
                    v113 = *(char **)(v43 + 232);
                    v114 = *(char **)(v43 + 256);
                    if (v113 == v114)
                    {
                      v115 = *(char **)(v43 + 240);
                    }
                    else
                    {
                      sub_1B1A1059C(v114, v113);
                      v114 = *(char **)(v43 + 232);
                      v115 = *(char **)(v43 + 240);
                      if (v115 == v114)
                      {
                        v115 = 0;
                        v114 = 0;
                        *(_QWORD *)(v43 + 232) = 0;
                        *(_QWORD *)(v43 + 240) = 0;
                      }
                    }
                    *(_QWORD *)(v43 + 248) = v115;
                    *(_QWORD *)(v43 + 256) = v114;
                  }
                }
                v37 = v236;
                ecs_stack_allocator_pop_snapshot(v236);
                if ((v244 & 1) != 0)
                {
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 344));
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 376));
                }
                swift_release();
                v38 = v242 + 1;
                if (v242 + 1 == v240)
                {
                  sub_1B19ED748(v259);
                  sub_1B19ED748(v259);
                  v4 = v228;
                  goto LABEL_13;
                }
              }
              while (2)
              {
                v83 = v253 + 104 * v41;
                v85 = *(_QWORD *)(v83 + 24);
                v84 = v83 + 24;
                if (v85)
                {
                  v86 = *(_QWORD *)(v84 + 8);
                  v87 = *(_QWORD *)(v14 + 16);
                  v88 = v14;
                  v89 = *(_BYTE *)(v14 + 184);
                  swift_retain();
                  if ((v89 & 1) != 0)
                    goto LABEL_208;
                  v90 = *(_QWORD *)(v88 + 168);
                  v91 = swift_getObjectType();
                  v92 = *(unsigned int *)(v90 + 4 * v251);
                  v93 = *(unsigned int *)(*(_QWORD *)(v87 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                        + 12 * (int)v92
                                        + 8);
                  swift_unknownObjectRetain();
                  swift_release();
                  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v92 | (v93 << 32), v91, v86) & 1) == 0)
                  {
                    swift_unknownObjectRelease();
                    goto LABEL_93;
                  }
                  v94 = *(_QWORD *)(v43 + 192);
                  swift_retain();
                  if (v94)
                  {
                    v95 = *(_QWORD *)(v43 + 208);
                    v96 = 8 * (v41 >> 6);
                    *(_QWORD *)(v94 + v96) |= 1 << v41;
                    *(_QWORD *)(v95 + v96) &= ~(1 << v41);
                  }
                  v14 = v256;
                  if (*(_BYTE *)(*(_QWORD *)(v43 + 40) + 213) == 1)
                  {
                    v97 = *(_QWORD *)(v43 + 48);
                    v98 = *(_QWORD *)(v97 + 16);
                    if (v98)
                    {
                      v99 = (uint64_t *)(v97 + 56);
                      while ((ValueMetadata *)*(v99 - 3) != &type metadata for PropagateDirtiness)
                      {
                        v99 += 5;
                        if (!--v98)
                          goto LABEL_83;
                      }
                      v100 = *v99;
                    }
                    else
                    {
LABEL_83:
                      v100 = 0;
                    }
                    v101 = *(_QWORD *)(v43 + 128);
                    v102 = *(_BYTE *)(v43 + 184);
                    v103 = swift_retain();
                    if ((v102 & 1) != 0)
                      goto LABEL_208;
                    v104 = v101 + v100;
                    v105 = *(_DWORD *)(*(_QWORD *)(v43 + 168) + 4 * v41);
                    v106 = (unsigned int *)(v104 + 8 * v41);
                    v107 = *(unsigned int *)(*(_QWORD *)(v103 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)v105
                                           + 8);
                    swift_release();
                    v108 = *v106;
                    v109 = v106[1];
                    if ((_DWORD)v108 != -1 || (_DWORD)v109 != 0)
                      sub_1B1B8A6C8(v257, v105 | (unint64_t)(v107 << 32), v108 | (v109 << 32));
                    swift_unknownObjectRelease();
                    swift_release();
LABEL_93:
                    v14 = v256;
                  }
                  else
                  {
                    swift_unknownObjectRelease();
                    swift_release();
                  }
                }
                if (++v41 == v77)
                  goto LABEL_63;
                continue;
              }
            }
          }
          sub_1B19ED748(v259);
LABEL_13:
          v15 = v231 + 1;
          if (v231 + 1 == v225)
            goto LABEL_108;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_105:
        v4 = v228;
        v14 = v256;
        goto LABEL_13;
      }
      goto LABEL_108;
    }
    if ((_DWORD)v250 != (_DWORD)v230)
      break;
LABEL_108:
    v291[0] = v288;
    v291[1] = v289;
    v292 = v290;
    sub_1B1F05D48(v222, (unsigned __int16 **)v291, (uint64_t)v297);
    sub_1B1F03804((char *)v14);
    ecs_stack_allocator_pop_snapshot(v221);
    if ((v220 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
    }
    swift_release();
    v6 = v219 + 1;
    if (v219 + 1 == v218)
    {
      sub_1B19ED748(v258);
      return sub_1B19ED748(v258);
    }
  }
  while (1)
  {
    v116 = *(_QWORD *)(v227 + 440);
    v117 = *(_DWORD *)(v227 + 448);
    v118 = *(_QWORD *)(v227 + 456);
    v119 = *(unsigned __int8 *)(v227 + 464);
    v254 = *(_QWORD *)(v227 + 472);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 40));
    v120 = *(_QWORD *)(v4 + 48);
    if (!*(_QWORD *)(v120 + 16))
      goto LABEL_115;
    v121 = sub_1B1DC3AC8(*(_QWORD *)(v116 + 32));
    if ((v122 & 1) != 0)
    {
      v123 = *(_QWORD *)(*(_QWORD *)(v120 + 56) + 24 * v121 + 8);
      v124 = v4;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_115:
      sub_1B1E8F784(a1, v116);
      v123 = v125;
      v124 = v4;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v124 + 40));
    v127 = *(_QWORD *)(v123 + 16);
    if (v127)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_203:
    v4 = v228;
    v14 = v256;
LABEL_111:
    if (++v250 == v230)
      goto LABEL_108;
  }
  v128 = (_QWORD *)thread_worker_index(v126);
  if (*(_BYTE *)(a1 + v223) == 4)
  {
    v130 = *(_QWORD *)(a1 + 216);
    v131 = v117;
    if (*(_BYTE *)(a1 + 225) == 1)
      v132 = v130 <= 1;
    else
      v132 = v130 <= 0;
    v133 = !v132;
  }
  else
  {
    v131 = v117;
    v133 = 1;
  }
  v134 = *(_QWORD *)(*(_QWORD *)(a1 + v224) + 8 * *v128 + 8);
  if (v119 != 2)
    v133 = v119;
  v306 = v116;
  v307 = v131;
  v308 = v129;
  v309 = v118;
  v310 = v133;
  v311 = v254;
  swift_retain();
  swift_retain();
  sub_1B1BED22C(a1, v134, (uint64_t)&v306, (int *)(v123 + 32), v127, (uint64_t)v260);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1B1A18378((uint64_t)v260, (uint64_t)v271, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v271[0])
    goto LABEL_203;
  v278 = v271[0];
  v279 = v271[1];
  v280 = v272;
  v4 = v228;
  v14 = v256;
  if (v277 < 1 || (v241 = v274) == 0)
  {
    sub_1B19ED748(v260);
    goto LABEL_111;
  }
  v135 = v276;
  v239 = v273;
  v136 = v276[4];
  v245 = *(unsigned __int8 *)(v275 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v233 = v276 + 8;
  v235 = (uint64_t)(v276 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  v137 = 0;
  v247 = v135;
  v237 = v136;
  while (1)
  {
    v243 = v137;
    v138 = (unsigned int *)(v239 + 48 * v137);
    v140 = *v138;
    v139 = v138[1];
    v141 = *((_QWORD *)v138 + 3);
    v249 = (uint64_t *)*((_QWORD *)v138 + 2);
    v143 = *((_QWORD *)v138 + 4);
    v142 = *((_QWORD *)v138 + 5);
    if (v245)
    {
      v144 = *(os_unfair_lock_s **)(v142 + 376);
      swift_retain();
      os_unfair_lock_lock(v144);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v142 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v136);
    sub_1B1A18378(v235, (uint64_t)v305, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v145 = v247[4];
    v146 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v142 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v247[6] = ecs_stack_allocator_allocate(v145, 48 * v146, 8);
    v247[7] = v146;
    v233[1] = 0;
    v233[2] = 0;
    *v233 = 0;
    swift_release();
    v255 = sub_1B1A12038((uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, v249, v141, v143, (uint64_t)v247);
    sub_1B1A12038((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1E6384348, v249, v141, v143, (uint64_t)v247);
    if (v249)
    {
      v14 = v256;
      if (v143)
      {
        v147 = 0;
        while (1)
        {
          v148 = v255 + 104 * v147;
          v150 = *(_QWORD *)(v148 + 24);
          v149 = v148 + 24;
          if (v150)
          {
            v151 = v249[v147];
            v152 = *(_QWORD *)(v149 + 8);
            v153 = *(_QWORD *)(v14 + 16);
            v154 = *(_BYTE *)(v14 + 184);
            swift_retain();
            if ((v154 & 1) != 0)
              goto LABEL_208;
            v155 = *(_QWORD *)(v14 + 168);
            v156 = swift_getObjectType();
            v157 = *(unsigned int *)(v155 + 4 * v250);
            v158 = *(unsigned int *)(*(_QWORD *)(v153 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                   + 12 * (int)v157
                                   + 8);
            swift_unknownObjectRetain();
            swift_release();
            if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v157 | (v158 << 32), v156, v152) & 1) != 0)
            {
              v159 = *(_QWORD *)(v142 + 192);
              swift_retain();
              if (v159)
              {
                v160 = *(_QWORD *)(v142 + 208);
                v161 = 8 * (v151 >> 6);
                *(_QWORD *)(v159 + v161) |= 1 << v151;
                *(_QWORD *)(v160 + v161) &= ~(1 << v151);
              }
              v14 = v256;
              if (*(_BYTE *)(*(_QWORD *)(v142 + 40) + 213) == 1)
              {
                v162 = *(_QWORD *)(v142 + 48);
                v163 = *(_QWORD *)(v162 + 16);
                if (v163)
                {
                  v164 = (uint64_t *)(v162 + 56);
                  while ((ValueMetadata *)*(v164 - 3) != &type metadata for PropagateDirtiness)
                  {
                    v164 += 5;
                    if (!--v163)
                      goto LABEL_151;
                  }
                  v165 = *v164;
                }
                else
                {
LABEL_151:
                  v165 = 0;
                }
                v166 = *(_QWORD *)(v142 + 128);
                v167 = *(_BYTE *)(v142 + 184);
                v168 = swift_retain();
                if ((v167 & 1) != 0)
                  goto LABEL_208;
                v169 = v166 + v165;
                v170 = *(_DWORD *)(*(_QWORD *)(v142 + 168) + 4 * v151);
                v171 = (unsigned int *)(v169 + 8 * v151);
                v172 = *(unsigned int *)(*(_QWORD *)(v168 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                       + 12 * (int)v170
                                       + 8);
                swift_release();
                v173 = *v171;
                v174 = v171[1];
                if ((_DWORD)v173 != -1 || (_DWORD)v174 != 0)
                  sub_1B1B8A6C8(v257, v170 | (unint64_t)(v172 << 32), v173 | (v174 << 32));
              }
              swift_unknownObjectRelease();
              swift_release();
            }
            else
            {
              swift_unknownObjectRelease();
              v14 = v256;
            }
          }
          if (++v147 == v143)
            goto LABEL_161;
        }
      }
      goto LABEL_161;
    }
    v176 = v139;
    v14 = v256;
    if ((_DWORD)v140 != (_DWORD)v139)
      break;
LABEL_161:
    v293[0] = v278;
    v293[1] = v279;
    v294 = v280;
    sub_1B1F05D48(v247, (unsigned __int16 **)v293, (uint64_t)v305);
    if (*(_QWORD *)(v247[13] + 16))
    {
      v177 = (_QWORD *)swift_bridgeObjectRetain();
      sub_1B1F05034(v177, v142);
      swift_bridgeObjectRelease();
      v178 = swift_isUniquelyReferenced_nonNull_native();
      v179 = (_QWORD *)v247[13];
      if ((v178 & 1) != 0)
      {
        v180 = v179[2];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v179 = sub_1B1C631A0(0, v180, 1, v179);
        sub_1B1B1F228();
        swift_arrayDestroy();
        if (v180)
        {
          v181 = v179[2] - v180;
          if (v181 < 0)
            goto LABEL_209;
          memmove(v179 + 4, &v179[9 * v180 + 4], 72 * v181);
          v179[2] = v181;
        }
        v247[13] = v179;
        v14 = v256;
      }
      else
      {
        v210 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (v179[3] >= 2uLL)
        {
          sub_1B1BBF038();
          v210 = (_QWORD *)swift_allocObject();
          v211 = j__malloc_size(v210);
          v210[2] = 0;
          v210[3] = 2 * ((uint64_t)(v211 - 32) / 72);
        }
        v247[13] = v210;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v247[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        v212 = *(char **)(v142 + 232);
        v213 = *(char **)(v142 + 256);
        if (v212 == v213)
        {
          v214 = *(char **)(v142 + 240);
        }
        else
        {
          sub_1B1A1059C(v213, v212);
          v213 = *(char **)(v142 + 232);
          v214 = *(char **)(v142 + 240);
          if (v214 == v213)
          {
            v214 = 0;
            v213 = 0;
            *(_QWORD *)(v142 + 232) = 0;
            *(_QWORD *)(v142 + 240) = 0;
          }
        }
        *(_QWORD *)(v142 + 248) = v214;
        *(_QWORD *)(v142 + 256) = v213;
      }
    }
    v136 = v237;
    ecs_stack_allocator_pop_snapshot(v237);
    if ((v245 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 376));
    }
    swift_release();
    v137 = v243 + 1;
    if (v243 + 1 == v241)
    {
      sub_1B19ED748(v260);
      sub_1B19ED748(v260);
      v4 = v228;
      goto LABEL_111;
    }
  }
  while (2)
  {
    v182 = v255 + 104 * v140;
    v184 = *(_QWORD *)(v182 + 24);
    v183 = v182 + 24;
    if (!v184)
      goto LABEL_170;
    v185 = *(_QWORD *)(v183 + 8);
    v186 = *(_QWORD *)(v14 + 16);
    v187 = v14;
    v188 = *(_BYTE *)(v14 + 184);
    swift_retain();
    if ((v188 & 1) != 0)
      break;
    v189 = *(_QWORD *)(v187 + 168);
    v190 = swift_getObjectType();
    v191 = *(unsigned int *)(v189 + 4 * v250);
    v192 = *(unsigned int *)(*(_QWORD *)(v186 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v191 + 8);
    swift_unknownObjectRetain();
    swift_release();
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v191 | (v192 << 32), v190, v185) & 1) == 0)
    {
      swift_unknownObjectRelease();
      goto LABEL_191;
    }
    v193 = *(_QWORD *)(v142 + 192);
    swift_retain();
    if (v193)
    {
      v194 = *(_QWORD *)(v142 + 208);
      v195 = 8 * (v140 >> 6);
      *(_QWORD *)(v193 + v195) |= 1 << v140;
      *(_QWORD *)(v194 + v195) &= ~(1 << v140);
    }
    v14 = v256;
    if (*(_BYTE *)(*(_QWORD *)(v142 + 40) + 213) != 1)
    {
      swift_unknownObjectRelease();
      swift_release();
      goto LABEL_170;
    }
    v196 = *(_QWORD *)(v142 + 48);
    v197 = *(_QWORD *)(v196 + 16);
    if (v197)
    {
      v198 = (uint64_t *)(v196 + 56);
      while ((ValueMetadata *)*(v198 - 3) != &type metadata for PropagateDirtiness)
      {
        v198 += 5;
        if (!--v197)
          goto LABEL_181;
      }
      v199 = *v198;
    }
    else
    {
LABEL_181:
      v199 = 0;
    }
    v200 = *(_QWORD *)(v142 + 128);
    v201 = *(_BYTE *)(v142 + 184);
    v202 = swift_retain();
    if ((v201 & 1) == 0)
    {
      v203 = v200 + v199;
      v204 = *(_DWORD *)(*(_QWORD *)(v142 + 168) + 4 * v140);
      v205 = (unsigned int *)(v203 + 8 * v140);
      v206 = *(unsigned int *)(*(_QWORD *)(v202 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v204 + 8);
      swift_release();
      v207 = *v205;
      v208 = v205[1];
      if ((_DWORD)v207 != -1 || (_DWORD)v208 != 0)
        sub_1B1B8A6C8(v257, v204 | (unint64_t)(v206 << 32), v207 | (v208 << 32));
      swift_unknownObjectRelease();
      swift_release();
LABEL_191:
      v14 = v256;
LABEL_170:
      if (++v140 == v176)
        goto LABEL_161;
      continue;
    }
    break;
  }
LABEL_208:
  sub_1B2229688();
  __break(1u);
LABEL_209:
  result = (uint64_t *)sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1CC53C0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B1CC5434()
{
  sub_1B1CC53C0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceUsageSystem()
{
  return objc_opt_self();
}

uint64_t sub_1B1CC5474()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  int v96;
  char v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  char v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  char v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  char v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  char v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  char v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  char v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  char v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  char v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  char v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  char v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  char v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  char v174;
  uint64_t v175;
  char v176;
  uint64_t v177;

  *(_QWORD *)(v0 + 16) = "ResourceUsage";
  *(_QWORD *)(v0 + 24) = 13;
  *(_BYTE *)(v0 + 32) = 2;
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v172 = qword_1ED4D09F8;
  v173 = 0;
  v174 = 2;
  v175 = 0;
  v176 = 2;
  v177 = 0;
  swift_retain();
  sub_1B1E3D5CC(1, (uint64_t)&v48);
  swift_release();
  v1 = v49;
  v2 = v50;
  v3 = v52;
  v4 = v51 | 4;
  *(_QWORD *)(v0 + 40) = v48;
  *(_DWORD *)(v0 + 48) = v1;
  *(_BYTE *)(v0 + 52) = v2;
  *(_QWORD *)(v0 + 56) = v4;
  *(_BYTE *)(v0 + 64) = 2;
  *(_QWORD *)(v0 + 72) = v3;
  v166 = qword_1ED4D09F8;
  v167 = 0;
  v168 = 2;
  v169 = 0;
  v170 = 2;
  v171 = 0;
  swift_retain();
  sub_1B1E3D7C4(1, (uint64_t)&v53);
  swift_release();
  v5 = v54;
  v6 = v55;
  v7 = v57;
  v8 = v56 | 4;
  *(_QWORD *)(v0 + 80) = v53;
  *(_DWORD *)(v0 + 88) = v5;
  *(_BYTE *)(v0 + 92) = v6;
  *(_QWORD *)(v0 + 96) = v8;
  *(_BYTE *)(v0 + 104) = 2;
  *(_QWORD *)(v0 + 112) = v7;
  v160 = qword_1ED4D09F8;
  v161 = 0;
  v162 = 2;
  v163 = 0;
  v164 = 2;
  v165 = 0;
  swift_retain();
  sub_1B1E3CBF4(1, (uint64_t)&v58);
  swift_release();
  v9 = v59;
  v10 = v60;
  v11 = v62;
  v12 = v61 | 4;
  *(_QWORD *)(v0 + 120) = v58;
  *(_DWORD *)(v0 + 128) = v9;
  *(_BYTE *)(v0 + 132) = v10;
  *(_QWORD *)(v0 + 136) = v12;
  *(_BYTE *)(v0 + 144) = 2;
  *(_QWORD *)(v0 + 152) = v11;
  v154 = qword_1ED4D09F8;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  v158 = 2;
  v159 = 0;
  swift_retain();
  sub_1B1E3A248(1, (uint64_t)&v63);
  swift_release();
  v13 = v64;
  v14 = v65;
  v15 = v67;
  v16 = v66 | 4;
  *(_QWORD *)(v0 + 160) = v63;
  *(_DWORD *)(v0 + 168) = v13;
  *(_BYTE *)(v0 + 172) = v14;
  *(_QWORD *)(v0 + 176) = v16;
  *(_BYTE *)(v0 + 184) = 2;
  *(_QWORD *)(v0 + 192) = v15;
  v148 = qword_1ED4D09F8;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  v152 = 2;
  v153 = 0;
  swift_retain();
  sub_1B1E3D9BC(1, (uint64_t)&v68);
  swift_release();
  v17 = v69;
  v18 = v70;
  v19 = v72;
  v20 = v71 | 4;
  *(_QWORD *)(v0 + 200) = v68;
  *(_DWORD *)(v0 + 208) = v17;
  *(_BYTE *)(v0 + 212) = v18;
  *(_QWORD *)(v0 + 216) = v20;
  *(_BYTE *)(v0 + 224) = 2;
  *(_QWORD *)(v0 + 232) = v19;
  v142 = qword_1ED4D09F8;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  v146 = 2;
  v147 = 0;
  swift_retain();
  sub_1B1E3DC14(1, (uint64_t)&v73);
  swift_release();
  v21 = v74;
  v22 = v75;
  v23 = v77;
  v24 = v76 | 4;
  *(_QWORD *)(v0 + 240) = v73;
  *(_DWORD *)(v0 + 248) = v21;
  *(_BYTE *)(v0 + 252) = v22;
  *(_QWORD *)(v0 + 256) = v24;
  *(_BYTE *)(v0 + 264) = 2;
  *(_QWORD *)(v0 + 272) = v23;
  v136 = qword_1ED4D09F8;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  v140 = 2;
  v141 = 0;
  swift_retain();
  sub_1B1E3DC70(1, (uint64_t)&v78);
  swift_release();
  v25 = v79;
  v26 = v80;
  v27 = v82;
  v28 = v81 | 4;
  *(_QWORD *)(v0 + 280) = v78;
  *(_DWORD *)(v0 + 288) = v25;
  *(_BYTE *)(v0 + 292) = v26;
  *(_QWORD *)(v0 + 296) = v28;
  *(_BYTE *)(v0 + 304) = 2;
  *(_QWORD *)(v0 + 312) = v27;
  v130 = qword_1ED4D09F8;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  v134 = 2;
  v135 = 0;
  swift_retain();
  sub_1B1E39870(1, (uint64_t)&v83);
  swift_release();
  v29 = v84;
  v30 = v85;
  v31 = v87;
  v32 = v86 | 4;
  *(_QWORD *)(v0 + 320) = v83;
  *(_DWORD *)(v0 + 328) = v29;
  *(_BYTE *)(v0 + 332) = v30;
  *(_QWORD *)(v0 + 336) = v32;
  *(_BYTE *)(v0 + 344) = 2;
  *(_QWORD *)(v0 + 352) = v31;
  v124 = qword_1ED4D09F8;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  v128 = 2;
  v129 = 0;
  swift_retain();
  sub_1B1E3DCCC(1, (uint64_t)&v88);
  swift_release();
  v33 = v89;
  v34 = v90;
  v35 = v92;
  v36 = v91 | 4;
  *(_QWORD *)(v0 + 360) = v88;
  *(_DWORD *)(v0 + 368) = v33;
  *(_BYTE *)(v0 + 372) = v34;
  *(_QWORD *)(v0 + 376) = v36;
  *(_BYTE *)(v0 + 384) = 2;
  *(_QWORD *)(v0 + 392) = v35;
  v118 = qword_1ED4D09F8;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  v122 = 2;
  v123 = 0;
  swift_retain();
  sub_1B1E3D7C4(1, (uint64_t)v93);
  swift_release();
  v37 = v93[1];
  *(_OWORD *)(v0 + 400) = v93[0];
  *(_OWORD *)(v0 + 416) = v37;
  *(_QWORD *)(v0 + 432) = v94;
  v112 = qword_1ED4D09F8;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  v116 = 2;
  v117 = 0;
  swift_retain();
  sub_1B1B11F54(3, 2, (uint64_t)&v95);
  swift_release();
  v38 = v96;
  v39 = v97;
  v40 = v99;
  v41 = v100;
  v42 = v98 | 0x20;
  *(_QWORD *)(v0 + 440) = v95;
  *(_DWORD *)(v0 + 448) = v38;
  *(_BYTE *)(v0 + 452) = v39;
  *(_QWORD *)(v0 + 456) = v42;
  *(_BYTE *)(v0 + 464) = v40;
  *(_QWORD *)(v0 + 472) = v41;
  v106 = qword_1ED4D09F8;
  v107 = 0;
  v108 = 2;
  v109 = 0;
  v110 = 2;
  v111 = 0;
  swift_retain();
  sub_1B1E3A830(1, (uint64_t)&v101);
  swift_release();
  v43 = v102;
  v44 = v103;
  v45 = v105;
  v46 = v104 | 4;
  *(_QWORD *)(v0 + 480) = v101;
  *(_DWORD *)(v0 + 488) = v43;
  *(_BYTE *)(v0 + 492) = v44;
  *(_QWORD *)(v0 + 496) = v46;
  *(_BYTE *)(v0 + 504) = 2;
  *(_QWORD *)(v0 + 512) = v45;
  *(_BYTE *)(v0 + 520) = 0;
  return v0;
}

uint64_t sub_1B1CC59FC()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1B1CC5474();
  return v0;
}

uint64_t sub_1B1CC5A30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t *sub_1B1CC5A40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B1E6CB9C(a1, a2, a3, *a4, a4[1], a5, a6, a7, a8, a9);
}

uint64_t *sub_1B1CC5A70(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;

  if (a2)
  {
    v6 = a2;
    v7 = result;
    v8 = 0;
    v9 = -1;
    v10 = -1;
    do
    {
      v12 = *v7++;
      v11 = v12;
      if (v12 != v9)
      {
        v13 = v9 - v10;
        if (v9 > v10)
        {
          if (v9 - v10 < 0)
            goto LABEL_19;
          v14 = (uint64_t *)(a3 + 8 * v10);
          result = (uint64_t *)(a4 + 8 * v8);
          if (result != v14 || (unint64_t)result >= a3 + 8 * v9)
            result = (uint64_t *)memmove(result, v14, 8 * v13);
          v8 += v13;
        }
        v10 = v11;
      }
      v9 = v11 + 1;
      --v6;
    }
    while (v6);
    if (v9 <= v10)
      return result;
    if (v9 - v10 < 0)
    {
LABEL_19:
      result = (uint64_t *)sub_1B2229700();
      __break(1u);
      return result;
    }
    v15 = (uint64_t *)(a3 + 8 * v10);
    result = (uint64_t *)(a4 + 8 * v8);
    if (result != v15 || (unint64_t)result >= a3 + 8 * v9)
      return (uint64_t *)memmove(result, v15, 8 * (v9 - v10));
  }
  return result;
}

uint64_t sub_1B1CC5BB0(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t result;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  char *v46;
  uint64_t v47;
  _OWORD v48[9];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char v53;

  v3 = *(unsigned __int8 *)(a2 + 45);
  v4 = *(_QWORD *)(a2 + 8);
  v47 = v4;
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_44:
    v39 = swift_bridgeObjectRetain();
    sub_1B1CBD0B4(v39, (v3 & 1) == 0);
    return swift_bridgeObjectRelease_n();
  }
  v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v7 = v4 + 32;
  swift_bridgeObjectRetain();
  v8 = 0;
  v46 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = (int *)(v7 + 8 * v8);
    v11 = v10[1];
    v12 = *v10;
    if ((_DWORD)v12 == -1 && v11 == 0)
      goto LABEL_4;
    if ((v12 & 0x80000000) != 0)
      goto LABEL_4;
    v14 = v6[1];
    if (v14 <= v12)
      goto LABEL_4;
    v15 = *v6;
    if (v11 != -1 && *(_DWORD *)(*v6 + 12 * (int)v12 + 8) != v11)
      goto LABEL_4;
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * *(int *)(v15 + 12 * (int)v12) + 32);
    if ((*(_BYTE *)(v17 + 120) & 1) == 0)
      goto LABEL_4;
    v18 = *(_QWORD *)(v17 + 48);
    v19 = *(_QWORD *)(v18 + 16);
    if (!v19)
      goto LABEL_4;
    v20 = (_QWORD *)(v18 + 56);
    while ((ValueMetadata *)*(v20 - 3) != &type metadata for EmitterShape)
    {
      v20 += 5;
      if (!--v19)
        goto LABEL_4;
    }
    v45 = v3;
    v21 = *(_QWORD *)(v17 + 128) + *v20 + 224 * *(__int16 *)(v15 + 12 * (int)v12 + 4);
    v22 = *(_OWORD *)(v21 + 176);
    v50 = *(_OWORD *)(v21 + 160);
    v51 = v22;
    v52 = *(_OWORD *)(v21 + 192);
    v53 = *(_BYTE *)(v21 + 208);
    v23 = *(_OWORD *)(v21 + 112);
    v48[6] = *(_OWORD *)(v21 + 96);
    v48[7] = v23;
    v24 = *(_OWORD *)(v21 + 144);
    v48[8] = *(_OWORD *)(v21 + 128);
    v49 = v24;
    v25 = *(_OWORD *)(v21 + 48);
    v48[2] = *(_OWORD *)(v21 + 32);
    v48[3] = v25;
    v26 = *(_OWORD *)(v21 + 80);
    v48[4] = *(_OWORD *)(v21 + 64);
    v48[5] = v26;
    v27 = *(_OWORD *)(v21 + 16);
    v48[0] = *(_OWORD *)v21;
    v48[1] = v27;
    v28 = DWORD2(v49);
    if (*((_QWORD *)&v49 + 1) != 0xFFFFFFFFLL
      && (DWORD2(v49) & 0x80000000) == 0
      && v14 > SDWORD2(v49)
      && (HIDWORD(v49) == -1 || *(_DWORD *)(v15 + 12 * SDWORD2(v49) + 8) == HIDWORD(v49)))
    {
      if (*((_QWORD *)v46 + 2))
      {
        v30 = v46 + 36;
        v31 = *((_QWORD *)v46 + 2);
        while (*(v30 - 1) != DWORD2(v49) || *v30 != HIDWORD(v49))
        {
          v30 += 2;
          if (!--v31)
            goto LABEL_38;
        }
      }
      else
      {
LABEL_38:
        v42 = *((_QWORD *)v46 + 2);
        v44 = HIDWORD(v49);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v46 = sub_1B1C63D98(0, v42 + 1, 1, v46);
        v34 = *((_QWORD *)v46 + 2);
        v33 = *((_QWORD *)v46 + 3);
        v35 = v34 + 1;
        v36 = v44;
        if (v34 >= v33 >> 1)
        {
          v41 = *((_QWORD *)v46 + 2);
          v43 = v34 + 1;
          v38 = sub_1B1C63D98(v33 > 1, v34 + 1, 1, v46);
          v34 = v41;
          v35 = v43;
          v36 = v44;
          v46 = v38;
        }
        *((_QWORD *)v46 + 2) = v35;
        v37 = &v46[8 * v34];
        *((_DWORD *)v37 + 8) = v28;
        *((_DWORD *)v37 + 9) = v36;
        v14 = v6[1];
      }
    }
    if (v14 <= v12)
      break;
    v29 = *v6;
    if (v11 != -1 && *(_DWORD *)(v29 + 12 * (int)v12 + 8) != v11)
      break;
    v9 = *(__int16 *)(v29 + 12 * (int)v12 + 4);
    swift_retain();
    sub_1B1FD9A20(v9, (uint64_t)v48);
    swift_release();
    v3 = v45;
LABEL_4:
    if (++v8 == v5)
    {
      sub_1B1B28C6C((uint64_t)&v47);
      goto LABEL_44;
    }
  }
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1CC5F44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t v21;

  v3 = *(_QWORD *)(a2 + 24);
  v20 = MEMORY[0x1E0DEE9D8];
  v21 = v3;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v6 = swift_bridgeObjectRetain();
    v8 = (int *)(v6 + 36);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      if ((_DWORD)v9 != -1 || v10 != 0)
      {
        if ((v9 & 0x80000000) != 0
          || v5[1] <= v9
          || (v12 = *v5, v10 != -1) && *(_DWORD *)(v12 + 12 * (int)v9 + 8) != v10
          || (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * *(int *)(v12 + 12 * (int)v9) + 32) + 120) & 1) != 0)
        {
          MEMORY[0x1E0C80A78](v6, v7);
          v19[2] = a1;
          v19[3] = &v20;
          if ((v13 & 0x80000000) == 0 && v5[1] > v13)
          {
            v15 = *(unsigned int *)(*v5 + 12 * (int)v13 + 8);
            if (v14 == -1 || (_DWORD)v15 == v14)
            {
              v16 = (unsigned int *)(*v5 + 12 * (int)v13);
              v6 = sub_1B1FE4F9C(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * (int)*v16 + 32), a1, *v16 | ((unint64_t)*((unsigned __int16 *)v16 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v16 + 2) << 32), v15, (void (*)(_BYTE *))sub_1B1CC6370, (uint64_t)v19);
            }
          }
        }
      }
      v8 += 2;
      --v4;
    }
    while (v4);
    sub_1B1B28C6C((uint64_t)&v21);
  }
  v17 = swift_bridgeObjectRetain();
  sub_1B1CBD0B4(v17, 0);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B1CC60E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
    return swift_bridgeObjectRetain();
  if (!a4)
    return swift_unknownObjectRetain();
  return result;
}

uint64_t sub_1B1CC6104(uint64_t a1)
{
  sub_1B1CC617C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24));
  return a1;
}

uint64_t sub_1B1CC617C(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B1CC62AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
    return swift_bridgeObjectRelease();
  if (!a4)
    return swift_unknownObjectRelease();
  return result;
}

uint64_t sub_1B1CC62CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1B1CC6310(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1B1CC6310(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1B1A025A0(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1B1CC6370(_QWORD *a1)
{
  return sub_1B1CBFB4C(a1);
}

uint64_t sub_1B1CC6378(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1B1CC3CC0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B1CC6384(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  __int128 *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  __int128 *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  os_unfair_lock_s *v48;
  char isUniquelyReferenced_nonNull_native;
  char v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_unfair_lock_t lock;
  os_unfair_lock_s *lockb;
  os_unfair_lock_t locka;
  uint64_t v59;
  int v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  __int16 v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  int v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  __int16 v77;
  char v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  int v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  _QWORD v94[5];
  uint64_t v95;

  v2 = a2;
  v60 = *((unsigned __int8 *)a1 + 45);
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v93 = xmmword_1B227BE30;
  v94[0] = v3;
  v94[1] = v4;
  v94[2] = v5;
  v94[3] = v6;
  v7 = (_QWORD *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v59 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  v10 = 0;
  while (1)
  {
LABEL_2:
    while (v8 && v9 != *(_QWORD *)(v8 + 16))
    {
      v12 = v8 + 8 * v9;
      v13 = *(_DWORD *)(v12 + 36);
      v14 = *(int *)(v12 + 32);
      ++v9;
      if (__PAIR64__(v13, v14) != 0xFFFFFFFF && (v14 & 0x80000000) == 0 && v7[1] > v14)
      {
        v15 = *v7 + 12 * (int)v14;
        if (v13 == -1 || *(_DWORD *)(v15 + 8) == v13)
        {
          v16 = *(_QWORD *)(*(_QWORD *)(v2 + 136) + 8 * *(int *)(*v7 + 12 * (int)v14) + 32);
          v17 = *(_QWORD *)(v16 + 48);
          v18 = *(_QWORD *)(v17 + 16);
          if (v18)
          {
            v19 = (_QWORD *)(v17 + 56);
            while ((ValueMetadata *)*(v19 - 3) != &type metadata for ParticleNoise)
            {
              v19 += 5;
              if (!--v18)
                goto LABEL_2;
            }
            v20 = *(_QWORD *)(v16 + 128) + *v19 + ((uint64_t)*(__int16 *)(v15 + 4) << 6);
            v21 = *(unsigned __int8 *)(v20 + 36);
            if (v21 != 2)
            {
              v22 = *(_QWORD *)(v2 + v59);
              if (v60)
              {
                if (v22)
                {
                  v54 = *(_QWORD *)(v2 + v59);
                  lock = *(os_unfair_lock_t *)(v20 + 40);
                  v23 = *(_QWORD *)(v22 + 240);
                  v24 = *(os_unfair_lock_s **)(v23 + 48);
                  swift_retain();
                  swift_retain();
                  os_unfair_lock_lock(v24);
                  v52 = v23;
                  v25 = *(_QWORD *)(v23 + 136);
                  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1B1DC4510(v21, (uint64_t)lock), (v27 & 1) != 0))
                  {
                    v28 = (__int128 *)(*(_QWORD *)(v25 + 56) + (v26 << 7));
                    v29 = v28[2];
                    v30 = v28[3];
                    v31 = v28[1];
                    v85 = *v28;
                    v32 = v28[4];
                    v33 = v28[5];
                    v34 = v28[7];
                    v91 = v28[6];
                    v92 = v34;
                    v89 = v32;
                    v90 = v33;
                    v87 = v29;
                    v88 = v30;
                    v86 = v31;
                    lockb = *(os_unfair_lock_s **)(v52 + 48);
                    sub_1B1CC6C0C((uint64_t)&v85);
                    os_unfair_lock_unlock(lockb);
                    swift_release();
                    swift_release();
                  }
                  else
                  {
                    sub_1B1D9A3D0(v54, v21, (uint64_t)lock, (uint64_t)&v85);
                    sub_1B1CC6C0C((uint64_t)&v85);
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v95 = *(_QWORD *)(v52 + 136);
                    *(_QWORD *)(v52 + 136) = 0x8000000000000000;
                    v61 = v85;
                    v62 = v86;
                    v63 = BYTE8(v86);
                    v64 = v87;
                    v65 = WORD4(v87);
                    v66 = BYTE10(v87);
                    v67 = v88;
                    v68 = v89;
                    v69 = v90;
                    v70 = v91;
                    v71 = DWORD2(v91);
                    v72 = v92;
                    sub_1B1B87BAC((uint64_t *)&v61, v21, (uint64_t)lock, isUniquelyReferenced_nonNull_native);
                    *(_QWORD *)(v52 + 136) = v95;
                    swift_bridgeObjectRelease();
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v52 + 48));
                    swift_release();
                    swift_release();
                  }
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_unknownObjectRelease();
                }
              }
              else if (v22)
              {
                v53 = v2;
                v55 = *(_QWORD *)(v2 + v59);
                locka = *(os_unfair_lock_t *)(v20 + 40);
                v35 = *(_QWORD *)(v22 + 240);
                v36 = *(os_unfair_lock_s **)(v35 + 48);
                swift_retain();
                swift_retain();
                os_unfair_lock_lock(v36);
                v37 = v35;
                v38 = *(_QWORD *)(v35 + 136);
                if (*(_QWORD *)(v38 + 16) && (v39 = sub_1B1DC4510(v21, (uint64_t)locka), (v40 & 1) != 0))
                {
                  v41 = (__int128 *)(*(_QWORD *)(v38 + 56) + (v39 << 7));
                  v42 = v41[2];
                  v43 = v41[3];
                  v44 = v41[1];
                  v85 = *v41;
                  v45 = v41[4];
                  v46 = v41[5];
                  v47 = v41[7];
                  v91 = v41[6];
                  v92 = v47;
                  v89 = v45;
                  v90 = v46;
                  v87 = v42;
                  v88 = v43;
                  v86 = v44;
                  v48 = *(os_unfair_lock_s **)(v37 + 48);
                  sub_1B1CC6C0C((uint64_t)&v85);
                  os_unfair_lock_unlock(v48);
                  swift_release();
                  swift_release();
                }
                else
                {
                  sub_1B1D9A3D0(v55, v21, (uint64_t)locka, (uint64_t)&v85);
                  sub_1B1CC6C0C((uint64_t)&v85);
                  v50 = swift_isUniquelyReferenced_nonNull_native();
                  v95 = *(_QWORD *)(v37 + 136);
                  *(_QWORD *)(v37 + 136) = 0x8000000000000000;
                  v73 = v85;
                  v74 = v86;
                  v75 = BYTE8(v86);
                  v76 = v87;
                  v77 = WORD4(v87);
                  v78 = BYTE10(v87);
                  v79 = v88;
                  v80 = v89;
                  v81 = v90;
                  v82 = v91;
                  v83 = DWORD2(v91);
                  v84 = v92;
                  sub_1B1B87BAC((uint64_t *)&v73, v21, (uint64_t)locka, v50);
                  *(_QWORD *)(v37 + 136) = v95;
                  swift_bridgeObjectRelease();
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 48));
                  swift_release();
                  swift_release();
                }
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                v2 = v53;
              }
            }
          }
        }
      }
    }
    if (v10 == 4)
      break;
    v11 = v94[v10++];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9 = 0;
    v8 = v11;
  }
  sub_1B1CC6B34();
  swift_arrayDestroy();
  return swift_bridgeObjectRelease();
}

char *sub_1B1CC6970(char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v16;
  BOOL v17;
  uint64_t v18;
  char *v19;

  if (a2)
  {
    v6 = a2;
    v7 = (uint64_t *)result;
    v8 = 0;
    v9 = -1;
    v10 = -1;
    do
    {
      v12 = *v7++;
      v11 = v12;
      if (v12 != v9)
      {
        v13 = v9 - v10;
        if (v9 > v10)
        {
          if (v9 - v10 < 0)
            goto LABEL_24;
          v14 = (char *)(a3 + 88 * v10);
          result = (char *)(a4 + 88 * v8);
          if (result != v14 || result >= &v14[88 * v13])
            result = (char *)memmove(result, v14, 88 * v13);
          v8 += v13;
        }
        v10 = v11;
      }
      v9 = v11 + 1;
      --v6;
    }
    while (v6);
    v16 = v9 - v10 < 0;
    v17 = v9 <= v10;
    v18 = v9 - v10;
    if (v17)
      return result;
    if (v16)
    {
LABEL_24:
      result = (char *)sub_1B2229700();
      __break(1u);
      return result;
    }
    v19 = (char *)(a3 + 88 * v10);
    result = (char *)(a4 + 88 * v8);
    if (result != v19 || result >= &v19[88 * v18])
      return (char *)memmove(result, v19, 88 * v18);
  }
  return result;
}

uint64_t sub_1B1CC6AB4()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t *sub_1B1CC6ADC()
{
  uint64_t v0;

  return sub_1B1E6CB9C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

double sub_1B1CC6B1C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1B21322A0(a1, *(double **)(v1 + 16));
}

void sub_1B1CC6B34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4BA840)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1B1CC6BAC();
    v0 = sub_1B2229448();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4BA840);
  }
}

unint64_t sub_1B1CC6BAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4BA468;
  if (!qword_1ED4BA468)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4BA468);
  }
  return result;
}

uint64_t sub_1B1CC6C0C(uint64_t a1)
{
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1B1CC6C50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5;

  sub_1B19F8EB0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B1CC6C8C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;

  sub_1B19F8EB0(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

double sub_1B1CC6CE4(_QWORD *a1)
{
  return sub_1B1CC6B1C(a1);
}

double sub_1B1CC6CF8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_1B2244E50;
  result = 0.0078125;
  *(_QWORD *)(a1 + 16) = 0x3F80000000000000;
  return result;
}

uint64_t sub_1B1CC6D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for ParticleFloat3Init.System(0, a1, a2, a4);
}

void sub_1B1CC6D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  _QWORD *v28;
  size_t v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[12];
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _OWORD v57[2];
  uint64_t v58;
  _OWORD v59[2];
  uint64_t v60;
  _OWORD v61[2];
  uint64_t v62;
  _BYTE v63[40];
  _QWORD v64[10];
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;

  v7 = v6;
  v9 = *(_OWORD *)(a3 + 104);
  v61[0] = *(_OWORD *)(a3 + 88);
  v61[1] = v9;
  v62 = *(_QWORD *)(a3 + 120);
  sub_1B1E8FCE4(a2, (uint64_t)v61, 0x200000000, v46);
  sub_1B1A18378((uint64_t)v46, (uint64_t)v47, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v47[0])
  {
    v54 = v47[0];
    v55 = v47[1];
    v56 = v48;
    v40 = v53;
    if (v53 >= 1 && (v10 = v50) != 0)
    {
      v11 = v52;
      v12 = v52[4];
      v38 = v51;
      v39 = v12;
      v13 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v33 = v52 + 13;
      v35 = v52 + 8;
      v36 = (uint64_t)(v52 + 6);
      v34 = (uint64_t *)(a1 + 8);
      v14 = (uint64_t *)(v49 + 24);
      v37 = v13;
      while (1)
      {
        v69 = v7;
        v15 = *((unsigned int *)v14 - 6);
        v16 = *((unsigned int *)v14 - 5);
        v17 = *((unsigned int *)v14 - 4);
        v18 = *v14;
        v19 = v14[2];
        v43 = v14[1];
        v44 = *(v14 - 1);
        v45 = v10;
        if (v13)
        {
          v20 = *(os_unfair_lock_s **)(v19 + 376);
          swift_retain();
          os_unfair_lock_lock(v20);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v12);
        sub_1B1A18378(v36, (uint64_t)v63, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
        v21 = v11[4];
        v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v11[6] = ecs_stack_allocator_allocate(v21, 48 * v22, 8);
        v11[7] = v22;
        v35[1] = 0;
        v35[2] = 0;
        *v35 = 0;
        swift_release();
        v64[0] = v38;
        v64[1] = v19;
        v64[2] = v11;
        v64[3] = v17;
        v64[4] = (v16 - v15 + v17);
        v64[5] = v40;
        v64[6] = v15;
        v64[7] = v16;
        v64[8] = 0;
        v64[9] = 0;
        v65 = 1;
        v66 = v44;
        v67 = v18;
        v68 = v43;
        v24 = type metadata accessor for ParticleFloat3Init(0, a5, a6, v23);
        sub_1B1CC7A74((uint64_t)v64, v34, v24);
        if (v69)
          break;
        v59[0] = v54;
        v59[1] = v55;
        v60 = v56;
        sub_1B1F05D48(v11, (unsigned __int16 **)v59, (uint64_t)v63);
        v7 = 0;
        if (*(_QWORD *)(v11[13] + 16))
        {
          v25 = (_QWORD *)swift_bridgeObjectRetain();
          sub_1B1F05034(v25, v19);
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v27 = v11[13];
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            sub_1B1C92670(0, *(_QWORD *)(v27 + 16));
          }
          else
          {
            v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            if (*(_QWORD *)(v27 + 24) >= 2uLL)
            {
              sub_1B1BF28AC(0, (unint64_t *)&qword_1ED4BADE0, (void (*)(uint64_t))sub_1B1B1F228);
              v28 = (_QWORD *)swift_allocObject();
              v29 = j__malloc_size(v28);
              v28[2] = 0;
              v28[3] = 2 * ((uint64_t)(v29 - 32) / 72);
            }
            *v33 = v28;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v11[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            v30 = *(char **)(v19 + 232);
            v31 = *(char **)(v19 + 256);
            if (v30 == v31)
            {
              v32 = *(char **)(v19 + 240);
            }
            else
            {
              sub_1B1A1059C(v31, v30);
              v31 = *(char **)(v19 + 232);
              v32 = *(char **)(v19 + 240);
              if (v32 == v31)
              {
                v32 = 0;
                v31 = 0;
                *(_QWORD *)(v19 + 232) = 0;
                *(_QWORD *)(v19 + 240) = 0;
              }
            }
            *(_QWORD *)(v19 + 248) = v32;
            *(_QWORD *)(v19 + 256) = v31;
          }
        }
        v12 = v39;
        ecs_stack_allocator_pop_snapshot(v39);
        v13 = v37;
        if ((v37 & 1) != 0)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
        }
        swift_release();
        v14 += 6;
        v10 = v45 - 1;
        if (v45 == 1)
          goto LABEL_24;
      }

      v57[0] = v54;
      v57[1] = v55;
      v58 = v56;
      sub_1B1F05D48(v11, (unsigned __int16 **)v57, (uint64_t)v63);
      sub_1B1F03804((char *)v19);
      ecs_stack_allocator_pop_snapshot(v39);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
      __break(1u);
    }
    else
    {
LABEL_24:
      sub_1B19ED748(v46);
    }
  }
}

uint64_t type metadata accessor for ParticleFloat3Init.System(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B19E5E34(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ParticleFloat3Init.System);
}

uint64_t sub_1B1CC718C()
{
  return sub_1B222A078();
}

uint64_t sub_1B1CC71B0()
{
  sub_1B222A06C();
  sub_1B222A078();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CC71F4(unsigned __int8 a1)
{
  return a1 + 0x65676E615278;
}

uint64_t sub_1B1CC720C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v5 = v4;
  v7 = type metadata accessor for ParticleFloat3Init.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x1B5E23E74](&unk_1B228BC68, v7);
  v8 = sub_1B22299C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v15 - v11;
  sub_1B19FA070(a1, a1[3]);
  sub_1B222A180();
  v17 = *v5;
  v16 = 0;
  sub_1B1B4D924();
  sub_1B1B67480(qword_1EEF5B108, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEB880]);
  v13 = v15;
  sub_1B2229958();
  if (!v13)
  {
    v17 = v5[1];
    v16 = 1;
    sub_1B2229958();
    v17 = v5[2];
    v16 = 2;
    sub_1B2229958();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B1CC73D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v20 = a5;
  v7 = type metadata accessor for ParticleFloat3Init.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1B5E23E74](&unk_1B228BC68, v7);
  v8 = sub_1B2229898();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v19 - v11;
  sub_1B19FA070(a1, a1[3]);
  sub_1B222A150();
  if (v5)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v13 = v9;
  v14 = v20;
  sub_1B1B4D924();
  v21 = 0;
  sub_1B1B67480((unint64_t *)&qword_1ED4BA5B0, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEB8B0]);
  sub_1B2229814();
  v15 = v22;
  v21 = 1;
  sub_1B2229814();
  v16 = v22;
  v21 = 2;
  sub_1B2229814();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v8);
  v17 = v22;
  result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *v14 = v15;
  v14[1] = v16;
  v14[2] = v17;
  return result;
}

uint64_t sub_1B1CC75E0(uint64_t a1, uint64_t a2)
{
  return sub_1B1CC7CD8(a1, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88));
}

uint64_t sub_1B1CC75EC(uint64_t a1, uint64_t a2)
{
  return sub_1B1CC7840(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1B1CC7870);
}

uint64_t sub_1B1CC75F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1B5E23E74](&unk_1B228BC68, a3);
  return sub_1B1F1DDE8();
}

uint64_t sub_1B1CC7644()
{
  return sub_1B1CC71B0();
}

uint64_t sub_1B1CC7650()
{
  return sub_1B1CC718C();
}

uint64_t sub_1B1CC765C()
{
  sub_1B222A06C();
  sub_1B1CC718C();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CC76A0()
{
  unsigned __int8 *v0;

  return sub_1B1CC71F4(*v0);
}

uint64_t sub_1B1CC76AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1CB7EEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1CC76D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1B275A4();
  *a1 = result;
  return result;
}

uint64_t sub_1B1CC7700(uint64_t a1)
{
  MEMORY[0x1B5E23E74](&unk_1B228BC68, a1);
  return sub_1B222A1D4();
}

uint64_t sub_1B1CC7734(uint64_t a1)
{
  MEMORY[0x1B5E23E74](&unk_1B228BC68, a1);
  return sub_1B222A1E0();
}

double sub_1B1CC7768@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v7;
  uint64_t v8;

  sub_1B1CC73D0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, &v7);
  if (!v4)
  {
    result = *(double *)&v7;
    *(_OWORD *)a4 = v7;
    *(_QWORD *)(a4 + 16) = v8;
  }
  return result;
}

uint64_t sub_1B1CC77B0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1CC720C(a1, a2, a3, a4);
}

uint64_t sub_1B1CC77C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1CC6D14(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a3, a4);
}

double sub_1B1CC77E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1CC7A20(*(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1B1CC77F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for ParticleFloat3Init.GPUSystem(0, a1, a2, a4);
}

uint64_t type metadata accessor for ParticleFloat3Init.GPUSystem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B19E5E34(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ParticleFloat3Init.GPUSystem);
}

uint64_t sub_1B1CC7828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1CC7DA4(a1, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
}

uint64_t sub_1B1CC7834(uint64_t a1, uint64_t a2)
{
  return sub_1B1CC7840(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1B1CC7948);
}

uint64_t sub_1B1CC7840(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  return a3(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
}

uint64_t sub_1B1CC784C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B1CC77F4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a3, a4);
}

const char *sub_1B1CC7870()
{
  const char *result;

  if (swift_dynamicCastMetatype())
    return "SetLinearFactor.CPU";
  if (swift_dynamicCastMetatype())
    return "SetAngularFactor.CPU";
  if (swift_dynamicCastMetatype())
    return "SetTargetPosition.CPU";
  result = (const char *)sub_1B2229688();
  __break(1u);
  return result;
}

const char *sub_1B1CC7948()
{
  const char *result;

  if (swift_dynamicCastMetatype())
    return "SetLinearFactor.GPU";
  if (swift_dynamicCastMetatype())
    return "SetAngularFactor.GPU";
  if (swift_dynamicCastMetatype())
    return "SetTargetPosition.GPU";
  result = (const char *)sub_1B2229688();
  __break(1u);
  return result;
}

double sub_1B1CC7A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  sub_1B1BF28AC(0, (unint64_t *)&qword_1ED4BAD80, (void (*)(uint64_t))sub_1B19ED84C);
  v4 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  return result;
}

uint64_t sub_1B1CC7A74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  float *v3;
  float *v4;
  uint64_t result;
  float v8;
  float v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  v4 = v3;
  sub_1B1BD0324(*(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  result = sub_1B22291F0();
  v8 = *v4;
  v9 = v4[1];
  if (*v4 == v9 && v4[2] == v4[3] && v4[4] == v4[5])
  {
    v10 = *(_QWORD *)(a1 + 48);
    v11 = *(_QWORD *)(a1 + 56) - v10;
    if (v11)
    {
      *(float *)&v12 = *v4;
      *((float *)&v12 + 1) = v4[2];
      *((_QWORD *)&v12 + 1) = *((unsigned int *)v4 + 4);
      v13 = (_OWORD *)(result + 16 * v10);
      do
      {
        *v13++ = v12;
        --v11;
      }
      while (v11);
    }
  }
  else
  {
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56) - v14;
    if (v15)
    {
      v16 = a2[2];
      v17 = a2[3];
      v19 = *a2;
      v18 = a2[1];
      v20 = v9 - v8;
      v21 = v4[2];
      v22 = v4[3] - v21;
      v23 = v4[4];
      v24 = v4[5] - v23;
      v25 = (_OWORD *)(result + 16 * v14);
      do
      {
        v26 = v19 ^ v16;
        v27 = v18 ^ v17;
        v28 = v26 ^ v18;
        v29 = v19 ^ v27;
        v30 = (float)((9 * ((((unint64_t)(5 * v18) >> 32) >> 25) | (640 * v18))) & 0xFFFFFF);
        v31 = v26 ^ (v18 << 17) ^ v29;
        v32 = __ROR8__(v27, 19);
        v33 = v31 ^ v28;
        v34 = v28 ^ v32 ^ v29;
        v35 = v31 ^ (v28 << 17) ^ v34;
        v36 = __ROR8__(v28 ^ v32, 19);
        v18 = v35 ^ v33;
        v19 = v33 ^ v36 ^ v34;
        v16 = v35 ^ (v33 << 17);
        HIDWORD(v37) = 0;
        *(float *)&v37 = v8 + (float)(v20 * (float)(v30 * 0.000000059605));
        *((float *)&v37 + 1) = v21
                             + (float)(v22
                                     * (float)((float)((9
                                                      * ((((unint64_t)(5 * v28) >> 32) >> 25) | (640 * v28))) & 0xFFFFFF)
                                             * 0.000000059605));
        v17 = __ROR8__(v33 ^ v36, 19);
        *((float *)&v37 + 2) = v23
                             + (float)(v24
                                     * (float)((float)((9
                                                      * ((((unint64_t)(5 * v33) >> 32) >> 25) | (640 * v33))) & 0xFFFFFF)
                                             * 0.000000059605));
        *v25++ = v37;
        --v15;
      }
      while (v15);
      *a2 = v19;
      a2[1] = v18;
      a2[2] = v16;
      a2[3] = v17;
    }
  }
  return result;
}

uint64_t sub_1B1CC7C1C()
{
  uint64_t result;

  if (swift_dynamicCastMetatype())
    return 28;
  if (swift_dynamicCastMetatype())
    return 29;
  if (swift_dynamicCastMetatype())
    return 14;
  result = sub_1B2229688();
  __break(1u);
  return result;
}

uint64_t sub_1B1CC7CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  swift_retain();
  v7 = type metadata accessor for ParticleFloat3Init(0, a2, a3, v6);
  sub_1B1E52568(v7, (uint64_t)&off_1E63942E0, (uint64_t)v9);
  sub_1B1DB6BF4(*(_QWORD *)(a1 + 32), sub_1B1CC7D84);
  return swift_release();
}

uint64_t type metadata accessor for ParticleFloat3Init(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B19E5E34(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ParticleFloat3Init);
}

void sub_1B1CC7D84(uint64_t a1)
{
  uint64_t *v1;

  sub_1B1CC6D3C(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_1B1CC7DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v5 = *(_OWORD *)(a1 + 96);
  v30 = *(_OWORD *)(a1 + 80);
  v31 = v5;
  v6 = *(_OWORD *)(a1 + 128);
  v32 = *(_OWORD *)(a1 + 112);
  v33 = v6;
  v7 = *(_OWORD *)(a1 + 32);
  v26 = *(_OWORD *)(a1 + 16);
  v27 = v7;
  v8 = *(_OWORD *)(a1 + 64);
  v28 = *(_OWORD *)(a1 + 48);
  v29 = v8;
  v9 = type metadata accessor for ParticleFloat3Init(0, a2, a3, a4);
  sub_1B1E52568(v9, (uint64_t)&off_1E63942E0, (uint64_t)&v23);
  v22 = v23;
  v10 = v24;
  v11 = sub_1B1CC7C1C();
  v23 = v22;
  v24 = v10;
  v25 = v11;
  v12 = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
  {
    ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_float3_generic_uniforms(0);
    sub_1B1F40E1C((uint64_t)&v23, 1, ObjectType, v14, v15, v16, v17, v18);
  }
  v19 = v26;
  v20 = v28;
  swift_retain();
  sub_1B1B1FC34(a1);
  sub_1B1FE6FB8(v20, v19, v12 == 0, 0, a1, 0xD00000000000001BLL, 0x80000001B2338210, 0);
  sub_1B1B1FC88(a1);
  return swift_release();
}

uint64_t sub_1B1CC7EF0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for ParticleFloat3Init.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B19E5E34(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ParticleFloat3Init.CodingKeys);
}

uint64_t sub_1B1CC7F04(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1CC7F50 + 4 * byte_1B228B9E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1CC7F84 + 4 * byte_1B228B9E0[v4]))();
}

uint64_t sub_1B1CC7F84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CC7F8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CC7F94);
  return result;
}

uint64_t sub_1B1CC7FA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CC7FA8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1CC7FAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CC7FB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1B1CC7FC0()
{
  JUMPOUT(0x1B5E23E74);
}

void sub_1B1CC7FD0()
{
  JUMPOUT(0x1B5E23E74);
}

void sub_1B1CC7FE0()
{
  JUMPOUT(0x1B5E23E74);
}

uint64_t type metadata accessor for QueryBuffer()
{
  uint64_t result;

  result = qword_1ED4B7DC0;
  if (!qword_1ED4B7DC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B1CC802C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B1CC8068()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B222A06C();
  sub_1B222A078();
  if (v1 != 1)
    sub_1B222A09C();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CC80D4()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 4) == 1)
    return sub_1B222A078();
  sub_1B222A078();
  return sub_1B222A09C();
}

uint64_t sub_1B1CC8120()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B222A06C();
  sub_1B222A078();
  if (v1 != 1)
    sub_1B222A09C();
  return sub_1B222A0C0();
}

BOOL sub_1B1CC8188(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 4) == 1)
    return (*(_BYTE *)(a2 + 4) & 1) != 0;
  if ((*(_BYTE *)(a2 + 4) & 1) != 0)
    return 0;
  return *(_DWORD *)a1 == *(_DWORD *)a2;
}

uint64_t sub_1B1CC81C4()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B222A06C();
  sub_1B222A078();
  if (v1 <= 1)
    sub_1B222A09C();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CC8240()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 4) && *(_BYTE *)(v0 + 4) != 1)
    return sub_1B222A078();
  sub_1B222A078();
  return sub_1B222A09C();
}

uint64_t sub_1B1CC8298()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1B222A06C();
  sub_1B222A078();
  if (v1 <= 1)
    sub_1B222A09C();
  return sub_1B222A0C0();
}

BOOL sub_1B1CC8310(uint64_t a1, int *a2)
{
  int v2;
  int v3;

  v2 = *a2;
  v3 = *((unsigned __int8 *)a2 + 4);
  if (!*(_BYTE *)(a1 + 4))
  {
    if (*((_BYTE *)a2 + 4))
      return 0;
    return *(_DWORD *)a1 == v2;
  }
  if (*(_BYTE *)(a1 + 4) == 1)
  {
    if (v3 != 1)
      return 0;
    return *(_DWORD *)a1 == v2;
  }
  return v3 == 2 && v2 == 0;
}

uint64_t sub_1B1CC8364()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1CC8388 + 4 * byte_1B228BCB8[*v0]))(45, 0xE100000000000000);
}

uint64_t sub_1B1CC8388()
{
  return 114;
}

uint64_t sub_1B1CC8390()
{
  return 119;
}

uint64_t sub_1B1CC8398()
{
  return 30578;
}

uint64_t sub_1B1CC83A4()
{
  return 0x7269646F6E2D7772;
}

uint64_t sub_1B1CC83C0()
{
  return 63;
}

_QWORD *sub_1B1CC83C8()
{
  unint64_t *v0;

  return sub_1B1C69DC4(*v0);
}

uint64_t sub_1B1CC83D0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1B19F6788(a1, a2, a3, *v3);
}

uint64_t sub_1B1CC83D8()
{
  uint64_t result;

  type metadata accessor for QueryBuffer();
  result = swift_allocObject();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 40) = 0;
  qword_1ED4D09F8 = result;
  return result;
}

uint64_t sub_1B1CC8410(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = 0;
  if (a2)
  {
    v6 = a3;
    if (a3)
    {
      if (a4)
      {
        v7 = a3 + 16 * a4;
        while (((*(uint64_t (**)(void))(*(_QWORD *)(v6 + 8) + 48))() & 1) == 0 || (*a1 & 0xFA) == 0)
        {
          ++a1;
          v6 += 16;
          if (v6 == v7)
            return 0;
        }
        return 1;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B1CC8498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1B222A0CC();
  sub_1B222A078();
  if (a1 && a2)
  {
    v16 = 16 * a2;
    do
    {
      a1 += 16;
      sub_1B222A078();
      v16 -= 16;
    }
    while (v16);
  }
  sub_1B222A078();
  if (a3 && a4)
  {
    do
    {
      ++a3;
      sub_1B222A078();
      --a4;
    }
    while (a4);
  }
  sub_1B222A078();
  if (a5 && a6)
  {
    v17 = 16 * a6;
    do
    {
      a5 += 16;
      sub_1B222A078();
      v17 -= 16;
    }
    while (v17);
  }
  sub_1B222A078();
  if (a7 && a8)
  {
    v18 = a7 + 16;
    v19 = 24 * a8;
    do
    {
      v18 += 24;
      sub_1B222A078();
      v19 -= 24;
    }
    while (v19);
  }
  return sub_1B222A0B4();
}

uint64_t sub_1B1CC85DC@<X0>(unint64_t a1@<X1>, unint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t a4@<X4>, unint64_t a5@<X5>, unint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10, uint64_t a11, _BYTE *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  __int16 v17;
  __int16 v18;
  uint64_t v20;
  uint64_t result;
  __int16 v22;
  __int16 v23;
  __int16 v24;
  __int16 v25;
  __int16 v26;

  if ((a1 & 0x8000000000000000) != 0
    || (v17 = a1, a1 >= 0x10000)
    || (v18 = a2, (a2 & 0x8000000000000000) != 0)
    || a2 >= 0x10000
    || (a3 & 0x8000000000000000) != 0
    || a3 >= 0x10000
    || (a4 & 0x8000000000000000) != 0
    || a4 >= 0x10000
    || (a5 & 0x8000000000000000) != 0
    || a5 >= 0x10000
    || (a6 & 0x8000000000000000) != 0
    || a6 >= 0x10000
    || (a7 & 0x8000000000000000) != 0
    || a7 >= 0x10000
    || (a9 & 0x8000000000000000) != 0
    || (v22 = a3, v23 = a4, v24 = a5, v25 = a6, v26 = a7, a9 >= 0x10000))
  {
    result = sub_1B222967C();
    __break(1u);
  }
  else
  {
    v20 = sub_1B1CC8498(a10, a11, (uint64_t)a12, a13, a14, a15, a16, a17);
    result = sub_1B1CC8410(a12, a13, a10, a11);
    *(_WORD *)a8 = v17;
    *(_WORD *)(a8 + 2) = v18;
    *(_WORD *)(a8 + 4) = v22;
    *(_WORD *)(a8 + 6) = v23;
    *(_WORD *)(a8 + 8) = v24;
    *(_WORD *)(a8 + 10) = v25;
    *(_WORD *)(a8 + 12) = v26;
    *(_WORD *)(a8 + 14) = a9;
    *(_QWORD *)(a8 + 16) = v20;
    *(_BYTE *)(a8 + 24) = result & 1;
  }
  return result;
}

uint64_t sub_1B1CC879C(uint64_t a1, uint64_t a2, uint64_t a3, char *__src, uint64_t a5, uint64_t a6, int64_t a7, char *a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, uint64_t a17)
{
  char *v22[2];

  sub_1B1CC88AC(v22, __src, a5, (char *)(a1 + a2), a3 / 16);
  sub_1B1CC89C8(v22, a8, a9, (char *)(a1 + a6), a7);
  sub_1B1CC88AC(v22, a12, a13, (char *)(a1 + a10), a11 / 16);
  return sub_1B1CC8AE8(v22, a16, a17, (char *)(a1 + a14), a15 / 24);
}

uint64_t sub_1B1CC88AC(char **a1, char *__src, uint64_t a3, char *__dst, uint64_t a5)
{
  char *v6;
  uint64_t v8;
  char *v10;
  uint64_t result;

  v6 = __src;
  if (!a3 || !a5)
  {
    v8 = 0;
    v10 = &__src[16 * a3];
    if (!__src)
      v10 = 0;
    goto LABEL_14;
  }
  if (a3 >= a5)
    v8 = a5;
  else
    v8 = a3;
  if ((v8 & 0x8000000000000000) == 0 && (&__dst[16 * v8] <= __src || &__src[16 * v8] <= __dst))
  {
    memcpy(__dst, __src, 16 * v8);
    v10 = &v6[16 * a3];
    v6 += 16 * v8;
LABEL_14:
    *a1 = v6;
    a1[1] = v10;
    return v8;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

size_t sub_1B1CC89C8(char **a1, char *__src, int64_t a3, char *__dst, int64_t a5)
{
  char *v6;
  size_t v8;
  char *v9;
  size_t result;

  v6 = __src;
  if (!a3 || !a5)
  {
    v8 = 0;
    v9 = &__src[a3];
    if (!__src)
      v9 = 0;
    goto LABEL_12;
  }
  if (a3 >= a5)
    v8 = a5;
  else
    v8 = a3;
  if ((v8 & 0x8000000000000000) == 0 && (&__dst[v8] <= __src || &__src[v8] <= __dst))
  {
    memcpy(__dst, __src, v8);
    v9 = &v6[a3];
    v6 += v8;
LABEL_12:
    *a1 = v6;
    a1[1] = v9;
    return v8;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1CC8AE8(char **a1, char *__src, uint64_t a3, char *__dst, uint64_t a5)
{
  char *v6;
  uint64_t v8;
  char *v10;
  uint64_t result;

  v6 = __src;
  if (!a3 || !a5)
  {
    v8 = 0;
    v10 = &__src[24 * a3];
    if (!__src)
      v10 = 0;
    goto LABEL_14;
  }
  if (a3 >= a5)
    v8 = a5;
  else
    v8 = a3;
  if ((v8 & 0x8000000000000000) == 0 && (&__dst[24 * v8] <= __src || &__src[24 * v8] <= __dst))
  {
    memcpy(__dst, __src, 24 * v8);
    v10 = &v6[24 * a3];
    v6 += 24 * v8;
LABEL_14:
    *a1 = v6;
    a1[1] = v10;
    return v8;
  }
  result = sub_1B2229700();
  __break(1u);
  return result;
}

uint64_t sub_1B1CC8C10()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B1CC8C20()
{
  return type metadata accessor for QueryBuffer();
}

ValueMetadata *type metadata accessor for QueryHeader()
{
  return &type metadata for QueryHeader;
}

uint64_t getEnumTagSinglePayload for QueryScope(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryScope(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B1CC8CC4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u)
    return *(unsigned __int8 *)(a1 + 4);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1B1CC8CDC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryScope()
{
  return &type metadata for QueryScope;
}

ValueMetadata *type metadata accessor for Scope()
{
  return &type metadata for Scope;
}

unint64_t sub_1B1CC8D18()
{
  unint64_t result;

  result = qword_1EEF5D788;
  if (!qword_1EEF5D788)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BD2C, &type metadata for Scope);
    atomic_store(result, (unint64_t *)&qword_1EEF5D788);
  }
  return result;
}

unint64_t sub_1B1CC8D60()
{
  unint64_t result;

  result = qword_1EEF5D790;
  if (!qword_1EEF5D790)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BD94, &type metadata for QueryScope);
    atomic_store(result, (unint64_t *)&qword_1EEF5D790);
  }
  return result;
}

uint64_t sub_1B1CC8DA4(char *a1, uint64_t a2, char *a3, unint64_t a4, char *a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v25;
  __int128 v29;
  uint64_t v30;
  char v31;

  v13 = 16 * a2;
  v14 = a4 + 16 * a2 + 7;
  v25 = v14 & 0xFFFFFFFFFFFFFFF8;
  v15 = 16 * a6;
  v16 = (16 * a6 + v14) & 0xFFFFFFFFFFFFFFF8;
  v17 = 24 * a8;
  type metadata accessor for QueryBuffer();
  v18 = swift_allocObject();
  sub_1B1CC85DC(0, v13, v13, a4, v25, v15, v16, (uint64_t)&v29, v17, (uint64_t)a1, a2, a3, a4, (uint64_t)a5, a6, (uint64_t)a7, a8);
  v19 = v30;
  v20 = v31;
  *(_OWORD *)(v18 + 16) = v29;
  *(_QWORD *)(v18 + 32) = v19;
  *(_BYTE *)(v18 + 40) = v20;
  sub_1B1CC879C(v18 + 41, 0, v13, a1, a2, v13, a4, a3, a4, v25, v15, a5, a6, v16, v17, a7, a8);
  return v18;
}

uint64_t storeEnumTagSinglePayload for AccessControl(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B1CC8F34 + 4 * byte_1B228BCC3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B1CC8F68 + 4 * byte_1B228BCBE[v4]))();
}

uint64_t sub_1B1CC8F68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CC8F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CC8F78);
  return result;
}

uint64_t sub_1B1CC8F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CC8F8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B1CC8F90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CC8F98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessControl()
{
  return &type metadata for AccessControl;
}

ValueMetadata *type metadata accessor for QueryHeader.Field()
{
  return &type metadata for QueryHeader.Field;
}

uint64_t storeEnumTagSinglePayload for DirtyReadPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1CC9010 + 4 * byte_1B228BCCD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1CC9044 + 4 * byte_1B228BCC8[v4]))();
}

uint64_t sub_1B1CC9044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CC904C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CC9054);
  return result;
}

uint64_t sub_1B1CC9060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CC9068);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1CC906C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CC9074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirtyReadPolicy()
{
  return &type metadata for DirtyReadPolicy;
}

ValueMetadata *type metadata accessor for QueryOptions()
{
  return &type metadata for QueryOptions;
}

unint64_t sub_1B1CC90A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5D798;
  if (!qword_1EEF5D798)
  {
    sub_1B1CC90EC(255);
    result = MEMORY[0x1B5E23E74](&unk_1B22954A4, v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5D798);
  }
  return result;
}

void sub_1B1CC90EC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EEF5D7A0)
  {
    v2 = sub_1B1CC9144();
    v4 = type metadata accessor for OptionSetIterator(a1, (uint64_t)&type metadata for QueryOptions, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EEF5D7A0);
  }
}

unint64_t sub_1B1CC9144()
{
  unint64_t result;

  result = qword_1EEF5D7A8;
  if (!qword_1EEF5D7A8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BFF0, &type metadata for QueryOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7A8);
  }
  return result;
}

unint64_t sub_1B1CC918C()
{
  unint64_t result;

  result = qword_1EEF5D7B0;
  if (!qword_1EEF5D7B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BE60, &type metadata for QueryOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7B0);
  }
  return result;
}

unint64_t sub_1B1CC91D4()
{
  unint64_t result;

  result = qword_1EEF5D7B8;
  if (!qword_1EEF5D7B8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BE30, &type metadata for QueryOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7B8);
  }
  return result;
}

unint64_t sub_1B1CC921C()
{
  unint64_t result;

  result = qword_1ED484270;
  if (!qword_1ED484270)
  {
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED484270);
  }
  return result;
}

unint64_t sub_1B1CC9260(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1B1CC928C();
  result = sub_1B1CC92D0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B1CC928C()
{
  unint64_t result;

  result = qword_1EEF5D7C0;
  if (!qword_1EEF5D7C0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C00C, &type metadata for QueryOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7C0);
  }
  return result;
}

unint64_t sub_1B1CC92D0()
{
  unint64_t result;

  result = qword_1EEF5D7C8;
  if (!qword_1EEF5D7C8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BE88, &type metadata for QueryOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7C8);
  }
  return result;
}

unint64_t sub_1B1CC9318()
{
  unint64_t result;

  result = qword_1EEF5D7D0;
  if (!qword_1EEF5D7D0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BEF0, &type metadata for QueryOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7D0);
  }
  return result;
}

unint64_t sub_1B1CC9360()
{
  unint64_t result;

  result = qword_1EEF5D7D8;
  if (!qword_1EEF5D7D8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228BF28, &type metadata for QueryOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7D8);
  }
  return result;
}

unint64_t sub_1B1CC93A8()
{
  unint64_t result;

  result = qword_1EEF5D7E0;
  if (!qword_1EEF5D7E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C084, &type metadata for DirtyReadPolicy);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7E0);
  }
  return result;
}

unint64_t sub_1B1CC93F0()
{
  unint64_t result;

  result = qword_1EEF5D7E8;
  if (!qword_1EEF5D7E8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C114, &type metadata for AccessControl);
    atomic_store(result, (unint64_t *)&qword_1EEF5D7E8);
  }
  return result;
}

BOOL sub_1B1CC9434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _BOOL8 result;
  float v9;
  float v10;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a1 + 32;
  do
  {
    v5 = 0;
    v6 = *(_OWORD *)(v4 + 16 * v3);
    v7 = *(_OWORD *)(a2 + 32 + 16 * v3);
    while (1)
    {
      v12 = v6;
      v9 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      v13 = v7;
      v10 = *(float *)((unint64_t)&v13 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      result = v9 == v10;
      if (v5 == 3)
        break;
      while (1)
      {
        ++v5;
        if (result)
          break;
        result = 0;
        if (v5 == 3)
          return result;
      }
    }
    ++v3;
  }
  while (v9 == v10 && v3 != v2);
  return result;
}

BOOL sub_1B1CC94F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  float *v5;
  float *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (float *)(a2 + 36);
  v6 = (float *)(a1 + 36);
  do
  {
    v7 = *v6++;
    v8 = v7;
    v9 = *v5++;
    v10 = v9;
    result = v8 == v9;
    v11 = v4-- != 0;
  }
  while (v11 && v8 == v10);
  return result;
}

uint64_t sub_1B1CC9568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  char v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    for (i = 0; ; i += 40)
    {
      v5 = a1 + i;
      v6 = a2 + i;
      v7 = *(_QWORD *)(a1 + i + 32) == *(_QWORD *)(a2 + i + 32) && *(_QWORD *)(a1 + i + 40) == *(_QWORD *)(a2 + i + 40);
      if (!v7 || *(_QWORD *)(a1 + i + 48) != *(_QWORD *)(a2 + i + 48))
        break;
      if ((*(_BYTE *)(v5 + 64) & 1) != 0)
      {
        if (!*(_BYTE *)(v6 + 64))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(v5 + 56) == *(_QWORD *)(v6 + 56))
          v4 = *(_BYTE *)(v6 + 64);
        else
          v4 = 1;
        if ((v4 & 1) != 0)
          return 0;
      }
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1B1CC95F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  BOOL v11;
  char v12;
  char v13;
  char v14;
  _BYTE v16[80];
  _BYTE v17[80];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a2 + 64;
    v4 = a1 + 64;
    do
    {
      v5 = *(_QWORD *)(v4 - 32);
      v6 = *(_QWORD *)(v4 - 24);
      v7 = *(unsigned __int8 *)(v4 - 16);
      sub_1B1B2A86C(v4, (uint64_t)v16);
      v8 = *(_QWORD *)(v3 - 32);
      v9 = *(_QWORD *)(v3 - 24);
      v10 = *(_BYTE *)(v3 - 16);
      sub_1B1B2A86C(v3, (uint64_t)v17);
      if (v7 == 1)
      {
        if ((v10 & 1) == 0)
          return 0;
        v11 = v5 == v8 && v6 == v9;
        if (!v11 && (sub_1B2229D24() & 1) == 0)
          return 0;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v5 == v8)
          v12 = v10;
        else
          v12 = 1;
        if ((v12 & 1) != 0)
          return 0;
      }
      sub_1B1B2A920((uint64_t)v16);
      v14 = v13;
      sub_1B1B40E74(v5, v6, v7);
      if ((v14 & 1) == 0)
        return 0;
      v3 += 112;
      v4 += 112;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1B1CC970C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a1 + 48);
    v4 = (uint64_t *)(a2 + 48);
    do
    {
      v5 = *v3;
      v6 = v3[1];
      v8 = v3[2];
      v7 = v3[3];
      v9 = *((unsigned __int8 *)v3 + 40);
      v11 = *v4;
      v10 = v4[1];
      v12 = v4[2];
      v13 = v4[3];
      v14 = *((_BYTE *)v4 + 40);
      if (*(v3 - 2) == *(v4 - 2) && *(v3 - 1) == *(v4 - 1))
      {
        if (v5 != v11)
          return 0;
      }
      else
      {
        v20 = *((_BYTE *)v4 + 40);
        v21 = *((unsigned __int8 *)v3 + 40);
        v19 = v4[1];
        v15 = v3[3];
        v16 = sub_1B2229D24();
        result = 0;
        if ((v16 & 1) == 0)
          return result;
        LOBYTE(v7) = v15;
        v10 = v19;
        v14 = v20;
        v9 = v21;
        if (v5 != v11)
          return result;
      }
      if (v9)
      {
        result = 0;
        if (v6 == v10)
          v18 = v14;
        else
          v18 = 0;
        if ((v18 & 1) == 0 || v8 != v12 || ((((v7 & 1) == 0) ^ v13) & 1) == 0)
          return result;
      }
      else
      {
        result = 0;
        if ((v14 & 1) != 0 || v6 != v10 || v8 != v12)
          return result;
      }
      v4 += 8;
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1B1CC984C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t result;
  uint64_t *v11;
  uint64_t *i;
  int v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _OWORD v23[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v5 = *(_OWORD *)(a1 + 48);
    v22[0] = *(_OWORD *)(a1 + 32);
    v22[1] = v5;
    v6 = *(_OWORD *)(a2 + 32);
    v7 = *(_OWORD *)(a2 + 48);
    v22[2] = *(_OWORD *)(a1 + 64);
    v23[0] = v6;
    v8 = *(_OWORD *)(a2 + 64);
    v23[1] = v7;
    v23[2] = v8;
    if (sub_1B1D496A0((uint64_t)v22, (uint64_t)v23))
    {
      v9 = v2 - 1;
      if (v2 == 1)
        return 1;
      v11 = (uint64_t *)(a2 + 120);
      for (i = (uint64_t *)(a1 + 120); *(i - 5) == *(v11 - 5); i += 6)
      {
        v17 = *(i - 2);
        v16 = *(i - 1);
        v18 = *i;
        v20 = *(v11 - 2);
        v19 = *(v11 - 1);
        v21 = *v11;
        if ((*(_BYTE *)(i - 3) & 1) != 0)
        {
          if (v17 == v20)
            v13 = *((unsigned __int8 *)v11 - 24);
          else
            v13 = 0;
          if (v13 != 1 || v16 != v19 || v18 != v21)
            return 0;
        }
        else
        {
          result = 0;
          if ((*(_BYTE *)(v11 - 3) & 1) != 0 || *(i - 4) != *(v11 - 4) || v17 != v20 || v16 != v19 || v18 != v21)
            return result;
        }
        v11 += 6;
        result = 1;
        if (!--v9)
          return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1B1CC9978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  if (v2 != 1)
  {
    v4 = v2 - 2;
    v5 = (_BYTE *)(a2 + 33);
    v6 = (_BYTE *)(a1 + 33);
    do
    {
      v7 = v4;
      v8 = *v6 ^ *v5;
      if ((v8 & 1) != 0)
        break;
      --v4;
      ++v5;
      ++v6;
    }
    while (v7);
    LOBYTE(v2) = v8 ^ 1;
  }
  return v2 & 1;
}

BOOL sub_1B1CC9A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (unsigned __int8 *)(a2 + 33);
  v6 = (unsigned __int8 *)(a1 + 33);
  do
  {
    v8 = *v6++;
    v7 = v8;
    v10 = *v5++;
    v9 = v10;
    result = v7 == v10;
    v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

BOOL sub_1B1CC9A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  unsigned __int16 *v5;
  unsigned __int16 *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int16 *)(a1 + 32) != *(unsigned __int16 *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (unsigned __int16 *)(a2 + 34);
  v6 = (unsigned __int16 *)(a1 + 34);
  do
  {
    v8 = *v6++;
    v7 = v8;
    v10 = *v5++;
    v9 = v10;
    result = v7 == v10;
    v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

BOOL sub_1B1CC9AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  int *v5;
  int *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (int *)(a2 + 36);
  v6 = (int *)(a1 + 36);
  do
  {
    v8 = *v6++;
    v7 = v8;
    v10 = *v5++;
    v9 = v10;
    result = v7 == v10;
    v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

BOOL sub_1B1CC9B68(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a2 + 5;
  v6 = a1 + 5;
  do
  {
    v8 = *v6++;
    v7 = v8;
    v10 = *v5++;
    v9 = v10;
    result = v7 == v10;
    v11 = v4-- != 0;
  }
  while (v11 && v7 == v9);
  return result;
}

uint64_t sub_1B1CC9BDC(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2;
  float32x2_t *v3;
  float32x2_t *v4;
  uint64_t v5;
  float32x2_t v6;
  float32x2_t v7;
  float32x2_t v8;
  int32x2_t v9;
  BOOL v11;

  v2 = a1[2];
  if (*(_QWORD *)&v2 != *(_QWORD *)&a2[2])
    return 0;
  if (!*(_QWORD *)&v2 || a1 == a2)
    return 1;
  v3 = a1 + 4;
  v4 = a2 + 4;
  v5 = *(_QWORD *)&v2 - 1;
  do
  {
    v6 = *v3++;
    v7 = v6;
    v8 = *v4++;
    v9 = vceq_f32(v7, v8);
    v11 = v5-- != 0;
  }
  while ((v9.i8[0] & v9.i8[4] & 1) != 0 && v11);
  return v9.i8[0] & v9.i8[4] & 1;
}

BOOL sub_1B1CC9C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _BOOL8 result;
  float v9;
  float v10;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a1 + 32;
  do
  {
    v5 = 0;
    v6 = *(_OWORD *)(v4 + 16 * v3);
    v7 = *(_OWORD *)(a2 + 32 + 16 * v3);
    while (1)
    {
      v12 = v6;
      v9 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      v13 = v7;
      v10 = *(float *)((unint64_t)&v13 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
      result = v9 == v10;
      if (v5 == 2)
        break;
      while (1)
      {
        ++v5;
        if (result)
          break;
        result = 0;
        if (v5 == 2)
          return result;
      }
    }
    ++v3;
  }
  while (v9 == v10 && v3 != v2);
  return result;
}

uint64_t sub_1B1CC9D08(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1B2229D24(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1B2229D24() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B1CC9DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  BOOL v23;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1B2228110();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11.n128_f64[0] = MEMORY[0x1E0C80A78](v8, v9);
  v13 = (char *)&v25 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14 == *(_QWORD *)(a2 + 16))
  {
    if (!v14 || a1 == a2)
    {
      v20 = 1;
    }
    else
    {
      v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v25 = *(_QWORD *)(v10 + 72);
      v26 = v10;
      v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
      v17 = v14 - 1;
      do
      {
        v18 = a1;
        v16(v13, a1 + v15, v4, v11);
        v19 = a2;
        ((void (*)(char *, unint64_t, uint64_t))v16)(v7, a2 + v15, v4);
        sub_1B1CDB0F4();
        v20 = sub_1B22286E0();
        v21 = *(void (**)(char *, uint64_t))(v26 + 8);
        v21(v7, v4);
        v21(v13, v4);
        v23 = v17-- != 0;
        if ((v20 & 1) == 0)
          break;
        v15 += v25;
        a2 = v19;
        a1 = v18;
      }
      while (v23);
    }
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1B1CC9F30(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2;
  uint64_t v5;
  uint64_t result;
  float32x2_t *v7;
  float32x2_t *v8;
  float32x2_t v9;
  float32x2_t v10;
  int32x2_t v11;

  v2 = a1[2];
  if (*(_QWORD *)&v2 != *(_QWORD *)&a2[2])
    return 0;
  if (!*(_QWORD *)&v2 || a1 == a2)
    return 1;
  if ((sub_1B20D7BAC(a1[6].u8[0] | (unsigned __int16)(a1[6].u8[1] << 8), a2[6].u8[0] | (a2[6].u8[1] << 8), a1[4], a1[5], a2[4], a2[5]) & 1) == 0)return 0;
  v5 = *(_QWORD *)&v2 - 1;
  if (*(_QWORD *)&v2 == 1)
    return 1;
  v7 = (float32x2_t *)((char *)a2 + 73);
  v8 = (float32x2_t *)((char *)a1 + 73);
  do
  {
    result = 0;
    if ((vceq_f32(*(float32x2_t *)((char *)v8 - 17), *(float32x2_t *)((char *)v7 - 17)).u32[0] & 1) == 0)
      break;
    v9.i32[0] = (__int32)*(float32x2_t *)((char *)&v8[-2] + 7);
    v9.i32[1] = HIDWORD(*(unint64_t *)((char *)&v8[-3] + 7));
    v10.i32[0] = (__int32)*(float32x2_t *)((char *)&v7[-2] + 7);
    v10.i32[1] = HIDWORD(*(unint64_t *)((char *)&v7[-3] + 7));
    v11 = vceq_f32(v9, v10);
    if ((v11.i8[4] & 1) == 0)
      break;
    if ((v11.i8[0] & 1) == 0)
      break;
    result = 0;
    if ((vceq_f32(*(v8 - 9), *(v7 - 9)).i32[1] & 1) == 0)
      break;
    if (((v8[-1].u8[7] ^ v7[-1].u8[7]) & 1) != 0)
      break;
    if (v8->u8[0] != v7->u8[0])
      break;
    v7 += 3;
    v8 += 3;
    result = 1;
    --v5;
  }
  while (v5);
  return result;
}

uint64_t sub_1B1CCA044(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2;
  char v5;
  uint64_t v6;
  int32x2_t *v7;
  int32x2_t *v8;
  int32x2_t v9;
  int32x2_t v10;
  int32x2_t v11;
  int32x2_t v12;
  BOOL v13;

  v2 = a1[2];
  if (*(_QWORD *)&v2 != *(_QWORD *)&a2[2])
    return 0;
  if (!*(_QWORD *)&v2 || a1 == a2)
    goto LABEL_10;
  if (a1[4].i32[0] != a2[4].i32[0] || a1[4].i32[1] != a2[4].i32[1])
    return 0;
  if (*(_QWORD *)&v2 == 1)
  {
LABEL_10:
    v5 = 1;
  }
  else
  {
    v6 = *(_QWORD *)&v2 - 2;
    v7 = a2 + 5;
    v8 = a1 + 5;
    do
    {
      v9 = *v8++;
      v10 = v9;
      v11 = *v7++;
      v12 = vceq_s32(v10, v11);
      v5 = v12.i8[0] & v12.i8[4];
      v13 = v6-- != 0;
    }
    while (v13 && (v12.i8[0] & v12.i8[4] & 1) != 0);
  }
  return v5 & 1;
}

uint64_t sub_1B1CCA0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    v4 = a2 + 80;
    while (1)
    {
      v6 = v3[1];
      v18 = v3[2];
      v8 = *(_QWORD *)(v4 - 32);
      v7 = *(_QWORD *)(v4 - 24);
      v17 = v4;
      if ((*(v3 - 1) != *(_QWORD *)(v4 - 48) || *v3 != *(_QWORD *)(v4 - 40)) && (sub_1B2229D24() & 1) == 0)
        break;
      v15 = v3;
      swift_bridgeObjectRetain();
      v16 = v6;
      sub_1B19FA2B4(v6, v18);
      swift_bridgeObjectRetain();
      v9 = v8;
      sub_1B19FA2B4(v8, v7);
      v10 = sub_1B1E03DBC();
      v12 = v11;
      if (v10 == sub_1B1E03DBC() && v12 == v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_1B19F9FEC(v9, v7);
        swift_bridgeObjectRelease();
        sub_1B19F9FEC(v16, v18);
      }
      else
      {
        v5 = sub_1B2229D24();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B19F9FEC(v9, v7);
        swift_bridgeObjectRelease();
        sub_1B19F9FEC(v16, v18);
        if ((v5 & 1) == 0)
          return 0;
      }
      v4 = v17 + 56;
      v3 = v15 + 7;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1B1CCA310()
{
  uint64_t v0;

  return (*(unsigned __int16 *)(v0 + 74) >> 6) & 1;
}

uint64_t sub_1B1CCA31C(uint64_t a1, unint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52[3];
  __int128 v53;

  v6 = a5;
  v7 = a4;
  v9 = a1;
  ++*(_QWORD *)(a4 + 472);
  if ((a6 & 1) != 0)
    sub_1B1CCC6C8(a1, a2 | ((HIDWORD(a2) & 1) << 32), a4, a5);
  v45 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  if (v45)
  {
    v41 = v9;
    v42 = a3;
    v43 = v7;
    v10 = (_QWORD *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v44 = *(_QWORD *)a3 + 32;
    swift_bridgeObjectRetain();
    v11 = 0;
    v12 = MEMORY[0x1E0DEE9D8];
    v47 = v6;
    while (1)
    {
      v13 = (int *)(v44 + 8 * v11);
      v14 = v13[1];
      v15 = *v13;
      v16 = v15 == -1 && v14 == 0;
      v17 = v16;
      v18 = v12;
      if (v16)
        goto LABEL_22;
      if ((v15 & 0x80000000) == 0)
      {
        v18 = v12;
        if (v10[1] > v15)
        {
          v19 = (_DWORD)v14 == -1 || *(_DWORD *)(*v10 + 12 * (int)v15 + 8) == (_DWORD)v14;
          v18 = v12;
          if (v19)
          {
            if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v6 + 136) + 8 * *(int *)(*v10 + 12 * (int)v15) + 32) + 120) & 1) == 0)
              goto LABEL_5;
            v18 = swift_retain();
          }
        }
LABEL_22:
        v20 = *(_QWORD *)(v18 + 16);
        if (v20)
          break;
        goto LABEL_45;
      }
      v18 = v12;
      v20 = *(_QWORD *)(v12 + 16);
      if (v20)
        break;
LABEL_45:
      swift_bridgeObjectRelease();
LABEL_5:
      if (++v11 == v45)
      {
        swift_bridgeObjectRelease();
        a3 = v42;
        v7 = v43;
        v9 = v41;
        goto LABEL_47;
      }
    }
    v46 = v11;
    v21 = 0;
    v48 = v18 + 32;
    while (1)
    {
      if ((v17 & 1) == 0
        && (v15 & 0x80000000) == 0
        && v10[1] > v15
        && ((v22 = *v10 + 12 * (int)v15, v23 = *(__int16 *)(v22 + 4), (_DWORD)v14 == -1)
         || *(_DWORD *)(v22 + 8) == (_DWORD)v14)
        && (v24 = *(_QWORD *)(*(_QWORD *)(v6 + 136) + 8 * *(int *)(*v10 + 12 * (int)v15) + 32),
            v25 = *(_QWORD *)(v24 + 48),
            (v26 = *(_QWORD *)(v25 + 16)) != 0))
      {
        v27 = *(_QWORD *)(v48 + 16 * v21);
        v28 = v25 + 56;
        while (*(_QWORD *)(v28 - 24) != *(_QWORD *)(v48 + 16 * v21))
        {
          v28 += 40;
          if (!--v26)
            goto LABEL_25;
        }
        v31 = v28 - 8;
        v30 = *(_QWORD *)(v28 - 8);
        v29 = *(_QWORD *)(v31 + 8);
        if (v30 <= 1)
          v30 = 1;
        v32 = *(_QWORD *)(v24 + 128) + v29 + v30 * v23;
        v53 = *(_OWORD *)(v48 + 16 * v21);
        v33 = sub_1B1A137F4(v52);
        sub_1B1F28148(v32, v27, (uint64_t)v33);
        sub_1B1A025A0(0, (unint64_t *)&qword_1ED4B8C70);
        sub_1B1A025A0(0, &qword_1ED4B9AD8);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v6 = v47;
          if (*((_QWORD *)&v50 + 1))
          {
            sub_1B1A02518(&v49, (uint64_t)v52);
            v34 = *((_QWORD *)&v53 + 1);
            v35 = v53;
            sub_1B19FA070(v52, v53);
            v36 = v35;
            v6 = v47;
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v34 + 16))(v15 | (unint64_t)(v14 << 32), v47, v36, v34);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v52);
            goto LABEL_27;
          }
        }
        else
        {
          v51 = 0;
          v49 = 0u;
          v50 = 0u;
          v6 = v47;
        }
      }
      else
      {
LABEL_25:
        v49 = 0u;
        v50 = 0u;
        v51 = 0;
      }
      sub_1B1CC62CC((uint64_t)&v49, &qword_1ED4B9AE0, &qword_1ED4B9AD8, (uint64_t)&protocol descriptor for ParticleComponentSpawner);
LABEL_27:
      if (++v21 == v20)
      {
        swift_bridgeObjectRelease();
        v11 = v46;
        v12 = MEMORY[0x1E0DEE9D8];
        goto LABEL_5;
      }
    }
  }
LABEL_47:
  *(_DWORD *)(v7 + 96) = 0;
  *(_QWORD *)(v7 + 104) = 0;
  *(_WORD *)(v7 + 129) = 1;
  *(_BYTE *)(v7 + 49) = a3[56];
  *(_QWORD *)(v7 + 144) = 0;
  *(_QWORD *)(v7 + 152) = 0;
  *(_QWORD *)(v7 + 136) = 0;
  *(_BYTE *)(v7 + 160) = 1;
  *(_QWORD *)(v7 + 488) = 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = *(_QWORD *)(v7 + 496);
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1B1C92AE0(0, *(_QWORD *)(v38 + 16));
  }
  else
  {
    *(_QWORD *)(v7 + 496) = sub_1B1B1C93C(0, *(_QWORD *)(v38 + 24) >> 1);
    swift_bridgeObjectRelease();
  }
  result = sub_1B1D15A1C(v9);
  if ((result & 0xFF00000000) == 0x200000000)
    v40 = 0;
  else
    v40 = result;
  *(_QWORD *)(v7 + 8) = v40 + 0x76E15D3EFEFDCBBFLL;
  *(_QWORD *)(v7 + 16) = 0xC5004E441C522FB3 * v40 - 0x3AFFB1BBE3ADD04DLL;
  *(_QWORD *)(v7 + 24) = 0x77710069854EE241 - v40;
  *(_QWORD *)(v7 + 32) = 0x39109BB02ACBE635 * v40;
  *(_QWORD *)(v7 + 40) = v40;
  *(_BYTE *)(v7 + 48) = 0;
  *(_BYTE *)(v7 + 272) = a3[45];
  *(_DWORD *)(v7 + 456) = v40;
  return result;
}

uint64_t sub_1B1CCA790(Swift::Int a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64x2_t v27;
  int16x8_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unsigned __int32 v34;
  int v35;
  char v36;
  ValueMetadata *v37;
  _UNKNOWN **v38;

  v4 = (uint64_t)v3;
  v8 = *v3;
  v9 = qword_1ED4B7D30;
  swift_retain();
  if (v9 != -1)
    swift_once();
  v10 = qword_1ED4D09E0;
  result = swift_release();
  if (v8 != v10)
  {
    if (*(_BYTE *)(v4 + 128) == 1)
      v12 = 4000000;
    else
      v12 = *(_QWORD *)(v4 + 120);
    v13 = *(_QWORD *)a3;
    v14 = *(_BYTE *)(v4 + 272);
    swift_retain();
    if ((v14 & 1) != 0)
    {
      v15 = v12 - *(_QWORD *)(v4 + 464);
      if (v15 >= a1)
      {
        if (a1 <= 0)
          return swift_release();
      }
      else
      {
        a1 = v12 - *(_QWORD *)(v4 + 464);
        if (v15 <= 0)
          return swift_release();
      }
    }
    else
    {
      v16 = sub_1B1C8DF10(*(_DWORD *)(v8 + 204));
      if (v12 - v16 >= a1)
      {
        if (a1 <= 0)
          return swift_release();
      }
      else
      {
        a1 = v12 - v16;
        if (v12 - v16 <= 0)
          return swift_release();
      }
      v17 = *(_QWORD *)(a3 + 8);
      swift_retain();
      v18 = sub_1B1D16C4C(v17);
      if ((v20 & 1) == 0)
      {
        v21 = v18;
        swift_retain();
        v37 = &type metadata for ParticleClassSpawnID;
        v38 = &off_1E639C000;
        v32 = v21;
        v31 = 0;
        v29 = 0u;
        v30 = 0u;
        v22 = *(_QWORD *)(*(_QWORD *)(v13 + 80)
                        + 8
                        * (int)sub_1B1DA4ED8(*(_DWORD *)(v8 + 204), 0, 0, 0, 0, (uint64_t)&v32, (uint64_t)&v29)
                        + 32);
        swift_retain();
        swift_release_n();
        sub_1B1CC62CC((uint64_t)&v29, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
        sub_1B1CC62CC((uint64_t)&v32, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
        v8 = v22;
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                      + 8 * *(_QWORD *)thread_worker_index(v19)
                      + 8);
      v24 = *(unsigned int *)(a3 + 40);
      LOBYTE(v32) = *(_BYTE *)(a3 + 44);
      sub_1B1F0A3A0(v8, v24 | ((unint64_t)v32 << 32), a1, v23);
      swift_release();
    }
    a2[10] = a1;
    v25 = *(_QWORD *)(v4 + 112);
    a2[11] = v25;
    a2[12] = v25 + a1;
    *(_QWORD *)(v4 + 104) += a1;
    *(_QWORD *)(v4 + 112) = v25 + a1;
    a2[9] += a1;
    v26 = *(_QWORD *)(a3 + 8);
    sub_1B1D16B60(v26, (uint64_t)&v29);
    if ((*((_QWORD *)&v29 + 1) & 0xFF00000000) != 0x200000000)
    {
      v32 = v29;
      v33 = DWORD2(v29);
      v27 = (uint64x2_t)vdupq_n_s64(*((unint64_t *)&v29 + 1));
      v28 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_1B2280B00), (int32x4_t)vshlq_u64(v27, (uint64x2_t)xmmword_1B2280B10));
      *(int8x8_t *)v28.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v28), (int8x8_t)0x1000100010001);
      v34 = vmovn_s16(v28).u32[0];
      v35 = v30;
      v36 = BYTE4(v30);
      sub_1B1BEE528(a3);
      sub_1B1FE7AAC(v26, v13, a1, (uint64_t)a2, v4, (uint64_t)&v32, a3);
      sub_1B1B4F21C(a3);
    }
    return swift_release();
  }
  return result;
}

BOOL sub_1B1CCAAD8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1B1CCAAF0(char *a1, char *a2)
{
  return sub_1B1F992EC(*a1, *a2);
}

uint64_t sub_1B1CCAAFC()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CCAB7C()
{
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CCABD8()
{
  sub_1B222A06C();
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CCAC54@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B2229730();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1B1CCACB0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65756C6176;
  if (*v1)
    v2 = 0x7A696D6F646E6172;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B1CCACF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x7A696D6F646E6172;
  else
    return 0x65756C6176;
}

uint64_t sub_1B1CCAD2C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B2229730();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B1CCAD8C()
{
  sub_1B1CD9F50();
  return sub_1B222A1D4();
}

uint64_t sub_1B1CCADB4()
{
  sub_1B1CD9F50();
  return sub_1B222A1E0();
}

uint64_t sub_1B1CCADDC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
    return (*(unsigned __int8 *)(a2 + 4) ^ *(unsigned __int8 *)(a1 + 4) ^ 1) & 1;
  else
    return 0;
}

void sub_1B1CCAE0C(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 0;
}

uint64_t sub_1B1CCAE18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1B19F8E54(0, &qword_1EEF5D7F0, (uint64_t (*)(void))sub_1B1CD9F50, (uint64_t)&type metadata for Seed.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v10 - v7;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CD9F50();
  sub_1B222A180();
  v12 = 0;
  sub_1B22299AC();
  if (!v1)
  {
    v11 = 1;
    sub_1B222991C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B1CCAF48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1B1CD9DD0(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  }
  return result;
}

uint64_t sub_1B1CCAF78(_QWORD *a1)
{
  return sub_1B1CCAE18(a1);
}

void sub_1B1CCAFA4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6391A50;
}

uint64_t sub_1B1CCAFB4()
{
  sub_1B1CDBF60();
  return sub_1B2228A70();
}

uint64_t sub_1B1CCB010()
{
  sub_1B1CDBF60();
  return sub_1B22289F8();
}

unint64_t sub_1B1CCB05C()
{
  return 0xD000000000000024;
}

uint64_t sub_1B1CCB078(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  swift_unknownObjectRetain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1B1CD6880(v5, a1, a2);
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  *v2 = v6;
  swift_unknownObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1B1CD6880(v7, a1, a2);
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  v2[1] = v8;
  swift_unknownObjectRetain();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1B1CD6880(v9, a1, a2);
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  v2[2] = v10;
  swift_unknownObjectRetain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1B1CD6880(v11, a1, a2);
  swift_bridgeObjectRelease_n();
  result = swift_unknownObjectRelease();
  v2[3] = v12;
  return result;
}

uint64_t sub_1B1CCB1B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1CCB1F0 + 4 * byte_1B228C300[a1]))(0x746E456E77617073, 0xED00007365697469);
}

unint64_t sub_1B1CCB1F0()
{
  return 0xD000000000000012;
}

uint64_t sub_1B1CCB40C()
{
  return 0x7265646E6572;
}

BOOL sub_1B1CCB420(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  int v8;
  _OWORD v9[5];
  int v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_DWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_DWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1B1CD6688((uint64_t)v7, (uint64_t)v9);
}

BOOL sub_1B1CCB488(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  int v8;
  _OWORD v9[5];
  int v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_DWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_DWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return !sub_1B1CD6688((uint64_t)v7, (uint64_t)v9);
}

double sub_1B1CCB4F8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = v1;
  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_DWORD *)(a1 + 41) = 256;
  *(_BYTE *)(a1 + 45) = 0;
  result = 0.0078125;
  *(_QWORD *)(a1 + 48) = 0x3F80000000000000;
  *(_WORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 58) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 74) = 0x10000;
  *(_DWORD *)(a1 + 80) = 1036831949;
  return result;
}

uint64_t sub_1B1CCB554(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1B1CCB1B0(*a1);
  v5 = v4;
  if (v3 == sub_1B1CCB1B0(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1B2229D24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B1CCB5DC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1CCB1B0(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CCB63C()
{
  unsigned __int8 *v0;

  sub_1B1CCB1B0(*v0);
  sub_1B2228824();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CCB67C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B222A06C();
  sub_1B1CCB1B0(v1);
  sub_1B2228824();
  swift_bridgeObjectRelease();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CCB6D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CD6980();
  *a1 = result;
  return result;
}

uint64_t sub_1B1CCB704@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1CCB1B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1CCB72C()
{
  unsigned __int8 *v0;

  return sub_1B1CCB1B0(*v0);
}

uint64_t sub_1B1CCB734@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1CD6980();
  *a1 = result;
  return result;
}

void sub_1B1CCB758(_BYTE *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_1B1CCB764()
{
  sub_1B1CDAE0C();
  return sub_1B222A1D4();
}

uint64_t sub_1B1CCB78C()
{
  sub_1B1CDAE0C();
  return sub_1B222A1E0();
}

uint64_t sub_1B1CCB7B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[2];
  _BYTE v14[16];
  char v15;

  v3 = v1;
  sub_1B19F8E54(0, (unint64_t *)&unk_1EEF5D820, (uint64_t (*)(void))sub_1B1CDAE0C, (uint64_t)&type metadata for EmitterDescription.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)v13 - v9;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CDAE0C();
  sub_1B222A180();
  v13[0] = *(_QWORD *)v3;
  v15 = 0;
  sub_1B1A02758(0, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1B1CDAFC0((unint64_t *)&unk_1EEF63400, (uint64_t (*)(void))sub_1B1A0895C, MEMORY[0x1E0DEAF10]);
  sub_1B2229958();
  if (!v2)
  {
    v13[0] = *(_QWORD *)(v3 + 8);
    v15 = 1;
    sub_1B2229958();
    v13[0] = *(_QWORD *)(v3 + 16);
    v15 = 2;
    sub_1B2229958();
    v13[0] = *(_QWORD *)(v3 + 24);
    v15 = 3;
    sub_1B2229958();
    v11 = MEMORY[0x1E0DEB418];
    sub_1B1A18378(v3 + 32, (uint64_t)v14, &qword_1ED4BA580, MEMORY[0x1E0DEB418]);
    sub_1B1A18378((uint64_t)v14, (uint64_t)v13, &qword_1ED4BA580, v11);
    v15 = 4;
    sub_1B1A02758(0, &qword_1ED4BA580, v11, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1B1CDB03C(&qword_1EEF636B0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEE988]);
    sub_1B2229958();
    LOBYTE(v13[0]) = 5;
    sub_1B222991C();
    LOBYTE(v13[0]) = 6;
    sub_1B222991C();
    LOBYTE(v13[0]) = 7;
    sub_1B222991C();
    LOBYTE(v13[0]) = *(_BYTE *)(v3 + 76);
    v15 = 8;
    sub_1B1CDB0B0();
    sub_1B2229958();
    LOBYTE(v13[0]) = 9;
    sub_1B222991C();
    LOBYTE(v13[0]) = 10;
    sub_1B2229934();
    LOBYTE(v13[0]) = 11;
    sub_1B222991C();
    LOBYTE(v13[0]) = 12;
    sub_1B222991C();
    LOBYTE(v13[0]) = 13;
    sub_1B2229934();
    LOBYTE(v13[0]) = 14;
    sub_1B222991C();
    LOBYTE(v13[0]) = 15;
    sub_1B2229934();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B1CCBC2C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  int v8;

  sub_1B1CD9F94(a1, v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_DWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B1CCBC84(_QWORD *a1)
{
  return sub_1B1CCB7B4(a1);
}

uint64_t sub_1B1CCBCCC()
{
  uint64_t v0;

  vfx_uniform_grid_destroy(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmitterRuntime.Storage()
{
  return objc_opt_self();
}

void *sub_1B1CCBD10@<X0>(void *a1@<X8>)
{
  _BYTE v3[656];

  sub_1B1CD648C((uint64_t)v3);
  return memcpy(a1, v3, 0x290uLL);
}

uint64_t sub_1B1CCBD4C(uint64_t a1, char a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  _BOOL8 v13;
  BOOL v14;
  BOOL v15;
  _BOOL8 v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  _BOOL8 v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  _BOOL8 v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;

  sub_1B1A02758(0, (unint64_t *)&qword_1ED4BF6E0, (uint64_t)&type metadata for FunctionConstant, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  v7 = *(unsigned __int8 *)(a1 + 49);
  *(_OWORD *)(v6 + 16) = xmmword_1B228C140;
  *(_OWORD *)(v6 + 32) = xmmword_1B228C150;
  *(_BYTE *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 64) = (v7 | (a2 & a3)) & 1;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(_QWORD *)(v6 + 120) = 0;
  *(_BYTE *)(v6 + 128) = 13;
  *(_OWORD *)(v6 + 144) = xmmword_1B228C160;
  *(_BYTE *)(v6 + 160) = 0;
  *(_QWORD *)(v6 + 176) = v7;
  *(_OWORD *)(v6 + 184) = 0u;
  *(_OWORD *)(v6 + 200) = 0u;
  *(_OWORD *)(v6 + 216) = 0u;
  *(_QWORD *)(v6 + 232) = 0;
  *(_BYTE *)(v6 + 240) = 13;
  swift_retain();
  v8 = sub_1B1E36538((uint64_t)&type metadata for Velocity);
  swift_release();
  *(_OWORD *)(v6 + 256) = xmmword_1B228C170;
  *(_BYTE *)(v6 + 272) = 0;
  *(_QWORD *)(v6 + 288) = v8;
  *(_OWORD *)(v6 + 296) = 0u;
  *(_OWORD *)(v6 + 312) = 0u;
  *(_OWORD *)(v6 + 328) = 0u;
  *(_QWORD *)(v6 + 344) = 0;
  *(_BYTE *)(v6 + 352) = 13;
  swift_retain();
  v9 = sub_1B1E36538((uint64_t)&type metadata for ParticleAge);
  swift_release();
  *(_OWORD *)(v6 + 368) = xmmword_1B228C180;
  *(_BYTE *)(v6 + 384) = 0;
  *(_QWORD *)(v6 + 400) = v9;
  *(_OWORD *)(v6 + 408) = 0u;
  *(_OWORD *)(v6 + 424) = 0u;
  *(_OWORD *)(v6 + 440) = 0u;
  *(_QWORD *)(v6 + 456) = 0;
  *(_BYTE *)(v6 + 464) = 13;
  swift_retain();
  v10 = sub_1B1E36538((uint64_t)&type metadata for ParticleLifetime);
  swift_release();
  *(_OWORD *)(v6 + 480) = xmmword_1B228C190;
  *(_BYTE *)(v6 + 496) = 0;
  *(_QWORD *)(v6 + 512) = v10;
  *(_OWORD *)(v6 + 520) = 0u;
  *(_OWORD *)(v6 + 536) = 0u;
  *(_OWORD *)(v6 + 552) = 0u;
  *(_QWORD *)(v6 + 568) = 0;
  *(_BYTE *)(v6 + 576) = 13;
  swift_retain();
  v11 = sub_1B1E36538((uint64_t)&type metadata for Color);
  swift_release();
  *(_OWORD *)(v6 + 592) = xmmword_1B228C1A0;
  *(_BYTE *)(v6 + 608) = 0;
  *(_QWORD *)(v6 + 624) = v11;
  *(_OWORD *)(v6 + 632) = 0u;
  *(_OWORD *)(v6 + 648) = 0u;
  *(_OWORD *)(v6 + 664) = 0u;
  *(_QWORD *)(v6 + 680) = 0;
  *(_BYTE *)(v6 + 688) = 13;
  swift_retain();
  v12 = sub_1B1E36538((uint64_t)&type metadata for Orientation);
  swift_release();
  v13 = 0;
  *(_OWORD *)(v6 + 704) = xmmword_1B228C1B0;
  *(_BYTE *)(v6 + 720) = 0;
  *(_QWORD *)(v6 + 736) = v12;
  *(_OWORD *)(v6 + 744) = 0u;
  *(_OWORD *)(v6 + 760) = 0u;
  *(_OWORD *)(v6 + 776) = 0u;
  *(_QWORD *)(v6 + 792) = 0;
  *(_BYTE *)(v6 + 800) = 13;
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v14 = sub_1B1E36538((uint64_t)&type metadata for AngularVelocity);
    swift_release();
    v13 = v14;
  }
  *(_OWORD *)(v6 + 816) = xmmword_1B228C1C0;
  *(_BYTE *)(v6 + 832) = 0;
  *(_QWORD *)(v6 + 848) = v13;
  *(_QWORD *)(v6 + 904) = 0;
  *(_OWORD *)(v6 + 856) = 0u;
  *(_OWORD *)(v6 + 872) = 0u;
  *(_OWORD *)(v6 + 888) = 0u;
  *(_BYTE *)(v6 + 912) = 13;
  swift_retain();
  v15 = sub_1B1E36538((uint64_t)&type metadata for ParticleAngle);
  swift_release();
  v16 = 0;
  *(_OWORD *)(v6 + 928) = xmmword_1B228C1D0;
  *(_BYTE *)(v6 + 944) = 0;
  *(_QWORD *)(v6 + 960) = v15;
  *(_OWORD *)(v6 + 968) = 0u;
  *(_OWORD *)(v6 + 984) = 0u;
  *(_OWORD *)(v6 + 1000) = 0u;
  *(_QWORD *)(v6 + 1016) = 0;
  *(_BYTE *)(v6 + 1024) = 13;
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v17 = sub_1B1E36538((uint64_t)&type metadata for ParticleAngleVelocity);
    swift_release();
    v16 = v17;
  }
  *(_OWORD *)(v6 + 1040) = xmmword_1B228C1E0;
  *(_BYTE *)(v6 + 1056) = 0;
  *(_QWORD *)(v6 + 1072) = v16;
  *(_QWORD *)(v6 + 1128) = 0;
  *(_OWORD *)(v6 + 1080) = 0u;
  *(_OWORD *)(v6 + 1096) = 0u;
  *(_OWORD *)(v6 + 1112) = 0u;
  *(_BYTE *)(v6 + 1136) = 13;
  swift_retain();
  v18 = sub_1B1E36538((uint64_t)&type metadata for ParticlePivot);
  swift_release();
  *(_OWORD *)(v6 + 1152) = xmmword_1B228C1F0;
  *(_BYTE *)(v6 + 1168) = 0;
  *(_QWORD *)(v6 + 1184) = v18;
  *(_OWORD *)(v6 + 1192) = 0u;
  *(_OWORD *)(v6 + 1208) = 0u;
  *(_OWORD *)(v6 + 1224) = 0u;
  *(_QWORD *)(v6 + 1240) = 0;
  *(_BYTE *)(v6 + 1248) = 13;
  swift_retain();
  v19 = sub_1B1E36538((uint64_t)&type metadata for ParticleTarget);
  swift_release();
  v20 = 0;
  *(_OWORD *)(v6 + 1264) = xmmword_1B228C200;
  *(_BYTE *)(v6 + 1280) = 0;
  *(_QWORD *)(v6 + 1296) = v19;
  *(_OWORD *)(v6 + 1304) = 0u;
  *(_OWORD *)(v6 + 1320) = 0u;
  *(_OWORD *)(v6 + 1336) = 0u;
  *(_QWORD *)(v6 + 1352) = 0;
  *(_BYTE *)(v6 + 1360) = 13;
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v21 = sub_1B1E36538((uint64_t)&type metadata for Mass);
    swift_release();
    v20 = v21;
  }
  *(_OWORD *)(v6 + 1376) = xmmword_1B228C210;
  *(_BYTE *)(v6 + 1392) = 0;
  *(_QWORD *)(v6 + 1408) = v20;
  *(_QWORD *)(v6 + 1464) = 0;
  *(_OWORD *)(v6 + 1416) = 0u;
  *(_OWORD *)(v6 + 1432) = 0u;
  *(_OWORD *)(v6 + 1448) = 0u;
  *(_BYTE *)(v6 + 1472) = 13;
  swift_retain();
  v22 = sub_1B1E36538((uint64_t)&type metadata for ParticleRibbonLength);
  swift_release();
  *(_OWORD *)(v6 + 1488) = xmmword_1B228C220;
  *(_BYTE *)(v6 + 1504) = 0;
  *(_QWORD *)(v6 + 1520) = v22;
  *(_OWORD *)(v6 + 1528) = 0u;
  *(_OWORD *)(v6 + 1544) = 0u;
  *(_OWORD *)(v6 + 1560) = 0u;
  *(_QWORD *)(v6 + 1576) = 0;
  *(_BYTE *)(v6 + 1584) = 13;
  swift_retain();
  v23 = sub_1B1E36538((uint64_t)&type metadata for ParticleTextureFrame);
  swift_release();
  *(_OWORD *)(v6 + 1600) = xmmword_1B228C230;
  *(_BYTE *)(v6 + 1616) = 0;
  *(_QWORD *)(v6 + 1632) = v23;
  *(_OWORD *)(v6 + 1640) = 0u;
  *(_OWORD *)(v6 + 1656) = 0u;
  *(_OWORD *)(v6 + 1672) = 0u;
  *(_QWORD *)(v6 + 1688) = 0;
  *(_BYTE *)(v6 + 1696) = 13;
  if ((a2 & 1) != 0)
  {
    v24 = 0;
    *(_OWORD *)(v6 + 1712) = xmmword_1B228C240;
    *(_BYTE *)(v6 + 1728) = 0;
    *(_QWORD *)(v6 + 1744) = 0;
    *(_QWORD *)(v6 + 1800) = 0;
    *(_OWORD *)(v6 + 1752) = 0u;
    *(_OWORD *)(v6 + 1768) = 0u;
    *(_OWORD *)(v6 + 1784) = 0u;
    *(_BYTE *)(v6 + 1808) = 13;
  }
  else
  {
    swift_retain();
    v25 = sub_1B1E36538((uint64_t)&type metadata for LinearFactor);
    swift_release();
    *(_OWORD *)(v6 + 1712) = xmmword_1B228C240;
    *(_BYTE *)(v6 + 1728) = 0;
    *(_QWORD *)(v6 + 1744) = v25;
    *(_OWORD *)(v6 + 1752) = 0u;
    *(_OWORD *)(v6 + 1768) = 0u;
    *(_OWORD *)(v6 + 1784) = 0u;
    *(_QWORD *)(v6 + 1800) = 0;
    *(_BYTE *)(v6 + 1808) = 13;
    swift_retain();
    v26 = sub_1B1E36538((uint64_t)&type metadata for AngularFactor);
    swift_release();
    v24 = v26;
  }
  *(_OWORD *)(v6 + 1824) = xmmword_1B228C250;
  *(_BYTE *)(v6 + 1840) = 0;
  *(_QWORD *)(v6 + 1856) = v24;
  *(_QWORD *)(v6 + 1912) = 0;
  *(_OWORD *)(v6 + 1864) = 0u;
  *(_OWORD *)(v6 + 1880) = 0u;
  *(_OWORD *)(v6 + 1896) = 0u;
  *(_BYTE *)(v6 + 1920) = 13;
  swift_retain();
  v27 = sub_1B1E36538((uint64_t)&type metadata for ParticleID);
  swift_release();
  *(_OWORD *)(v6 + 1936) = xmmword_1B228C260;
  *(_BYTE *)(v6 + 1952) = 0;
  *(_QWORD *)(v6 + 1968) = v27;
  *(_OWORD *)(v6 + 1976) = 0u;
  *(_OWORD *)(v6 + 1992) = 0u;
  *(_OWORD *)(v6 + 2008) = 0u;
  *(_QWORD *)(v6 + 2024) = 0;
  *(_BYTE *)(v6 + 2032) = 13;
  swift_retain();
  v28 = sub_1B1E36538((uint64_t)&type metadata for ParticleParentID);
  swift_release();
  *(_OWORD *)(v6 + 2048) = xmmword_1B228C270;
  *(_BYTE *)(v6 + 2064) = 0;
  *(_QWORD *)(v6 + 2080) = v28;
  *(_OWORD *)(v6 + 2088) = 0u;
  *(_OWORD *)(v6 + 2104) = 0u;
  *(_OWORD *)(v6 + 2120) = 0u;
  *(_QWORD *)(v6 + 2136) = 0;
  *(_BYTE *)(v6 + 2144) = 13;
  swift_retain();
  v29 = sub_1B1E36538((uint64_t)&type metadata for UserData1);
  swift_release();
  *(_OWORD *)(v6 + 2160) = xmmword_1B228C280;
  *(_BYTE *)(v6 + 2176) = 0;
  *(_QWORD *)(v6 + 2192) = v29;
  *(_OWORD *)(v6 + 2200) = 0u;
  *(_OWORD *)(v6 + 2216) = 0u;
  *(_OWORD *)(v6 + 2232) = 0u;
  *(_QWORD *)(v6 + 2248) = 0;
  *(_BYTE *)(v6 + 2256) = 13;
  swift_retain();
  v30 = sub_1B1E36538((uint64_t)&type metadata for UserData2);
  swift_release();
  *(_OWORD *)(v6 + 2272) = xmmword_1B228C290;
  *(_BYTE *)(v6 + 2288) = 0;
  *(_QWORD *)(v6 + 2304) = v30;
  *(_OWORD *)(v6 + 2312) = 0u;
  *(_OWORD *)(v6 + 2328) = 0u;
  *(_OWORD *)(v6 + 2344) = 0u;
  *(_QWORD *)(v6 + 2360) = 0;
  *(_BYTE *)(v6 + 2368) = 13;
  swift_retain();
  v31 = sub_1B1E36538((uint64_t)&type metadata for UserData3);
  swift_release();
  *(_OWORD *)(v6 + 2384) = xmmword_1B228C2A0;
  *(_BYTE *)(v6 + 2400) = 0;
  *(_QWORD *)(v6 + 2416) = v31;
  *(_OWORD *)(v6 + 2424) = 0u;
  *(_OWORD *)(v6 + 2440) = 0u;
  *(_OWORD *)(v6 + 2456) = 0u;
  *(_QWORD *)(v6 + 2472) = 0;
  *(_BYTE *)(v6 + 2480) = 13;
  swift_retain();
  v32 = sub_1B1E36538((uint64_t)&type metadata for UserData4);
  swift_release();
  *(_OWORD *)(v6 + 2496) = xmmword_1B228C2B0;
  *(_BYTE *)(v6 + 2512) = 0;
  *(_QWORD *)(v6 + 2528) = v32;
  *(_OWORD *)(v6 + 2536) = 0u;
  *(_OWORD *)(v6 + 2552) = 0u;
  *(_OWORD *)(v6 + 2568) = 0u;
  *(_QWORD *)(v6 + 2584) = 0;
  *(_BYTE *)(v6 + 2592) = 13;
  swift_retain();
  v33 = sub_1B1E36538((uint64_t)&type metadata for Scale1);
  swift_release();
  *(_OWORD *)(v6 + 2608) = xmmword_1B228C2C0;
  *(_BYTE *)(v6 + 2624) = 0;
  *(_QWORD *)(v6 + 2640) = v33;
  *(_OWORD *)(v6 + 2648) = 0u;
  *(_OWORD *)(v6 + 2664) = 0u;
  *(_OWORD *)(v6 + 2680) = 0u;
  *(_QWORD *)(v6 + 2696) = 0;
  *(_BYTE *)(v6 + 2704) = 13;
  swift_retain();
  v34 = sub_1B1E36538((uint64_t)&type metadata for Scale2);
  swift_release();
  *(_OWORD *)(v6 + 2720) = xmmword_1B228C2D0;
  *(_BYTE *)(v6 + 2736) = 0;
  *(_QWORD *)(v6 + 2752) = v34;
  *(_OWORD *)(v6 + 2760) = 0u;
  *(_OWORD *)(v6 + 2776) = 0u;
  *(_OWORD *)(v6 + 2792) = 0u;
  *(_QWORD *)(v6 + 2808) = 0;
  *(_BYTE *)(v6 + 2816) = 13;
  swift_retain();
  v35 = sub_1B1E36538((uint64_t)&type metadata for Scale3);
  swift_release();
  *(_OWORD *)(v6 + 2832) = xmmword_1B228C2E0;
  *(_BYTE *)(v6 + 2848) = 0;
  *(_QWORD *)(v6 + 2864) = v35;
  *(_OWORD *)(v6 + 2872) = 0u;
  *(_OWORD *)(v6 + 2888) = 0u;
  *(_OWORD *)(v6 + 2904) = 0u;
  *(_QWORD *)(v6 + 2920) = 0;
  *(_BYTE *)(v6 + 2928) = 13;
  return v6;
}

double sub_1B1CCC6C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15[12];
  _OWORD v16[12];
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v7 = a2;
  sub_1B1E530E0(a1, a2 | ((HIDWORD(a2) & 1) << 32), (uint64_t)&v12);
  swift_release();
  v8 = v13;
  *(_OWORD *)(a3 + 56) = v12;
  *(_OWORD *)(a3 + 72) = v8;
  *(_QWORD *)(a3 + 88) = v14;
  if ((a2 & 0x100000000) != 0)
    v9 = 0x200000000;
  else
    v9 = v7;
  sub_1B1E8FCE4(a4, (uint64_t)&v12, v9, v15);
  sub_1B1A18378((uint64_t)v15, (uint64_t)v16, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v16[0])
  {
    v16[8] = v16[2];
    v16[9] = v16[3];
    v16[10] = v16[4];
    v16[11] = v16[5];
    v16[6] = v16[0];
    v16[7] = v16[1];
    sub_1B1BEAAFC(0);
    sub_1B19ED748(v15);
  }
  v17 = v12;
  v18 = DWORD2(v12);
  v19 = BYTE12(v12);
  v20 = v13 | 0x10;
  v21 = BYTE8(v13);
  v22 = v14;
  swift_retain();
  sub_1B1C90414(&v17);
  sub_1B19ED720((uint64_t)&v12);
  if (*(_QWORD *)(*(_QWORD *)(a3 + 176) + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    v11 = *(_QWORD *)(a3 + 176);
    *(_QWORD *)(a3 + 176) = 0x8000000000000000;
    sub_1B1CDB13C();
    sub_1B2229634();
    *(_QWORD *)(a3 + 176) = v11;
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  *(_QWORD *)(a3 + 192) = 0;
  *(_QWORD *)(a3 + 200) = 0;
  *(_QWORD *)(a3 + 208) = 0;
  swift_release();
  *(_QWORD *)(a3 + 264) = 0;
  swift_unknownObjectRelease();
  *(_QWORD *)(a3 + 400) = 0;
  *(_QWORD *)(a3 + 408) = 0;
  *(_QWORD *)(a3 + 416) = 0;
  swift_unknownObjectRelease();
  *(_QWORD *)(a3 + 464) = 0;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  swift_unknownObjectRelease();
  *(_OWORD *)(a3 + 280) = 0u;
  *(_OWORD *)(a3 + 296) = 0u;
  swift_unknownObjectRelease();
  *(_QWORD *)(a3 + 392) = 0;
  result = 0.0;
  *(_OWORD *)(a3 + 360) = 0u;
  *(_OWORD *)(a3 + 376) = 0u;
  return result;
}

uint64_t sub_1B1CCC8C0(uint64_t a1, uint64_t a2)
{
  if (sub_1B1FD568C((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2410, a2)
    || sub_1B1FD568C((uint64_t)&type metadata for Orientation, (uint64_t)&off_1E63715B8, a2)
    || sub_1B1FD568C((uint64_t)&type metadata for Scale1, (uint64_t)&off_1E63BC300, a2)
    || sub_1B1FD568C((uint64_t)&type metadata for Scale2, (uint64_t)&off_1E63BC468, a2)
    || sub_1B1FD568C((uint64_t)&type metadata for Scale3, (uint64_t)&off_1E63BC5D0, a2))
  {
    sub_1B1FE16DC((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, a2);
    return sub_1B1FE16DC((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1E6380040, a2);
  }
  else
  {
    sub_1B1FE1E1C((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, a2, 0);
    return sub_1B1FE1E1C((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1E6380040, a2, 0);
  }
}

uint64_t sub_1B1CCC9D8()
{
  uint64_t v0;
  __int128 v1;
  uint64_t inited;
  __int128 v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD v17[2];
  uint64_t v18;
  _BYTE v19[40];
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BYTE v35[40];
  _OWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;

  v74 = *MEMORY[0x1E0C80C00];
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v68 = qword_1ED4D09F8;
  v69 = 0;
  v70 = 2;
  v71 = 0;
  v72 = 2;
  v73 = 0;
  swift_retain();
  sub_1B1E3E6CC(1, (uint64_t)v17);
  swift_release();
  v1 = v17[1];
  *(_OWORD *)(v0 + 16) = v17[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = v18;
  v62 = qword_1ED4D09F8;
  v63 = 0;
  v64 = 2;
  v65 = 0;
  v66 = 2;
  v67 = 0;
  swift_retain();
  sub_1B1E3D7C4(1, (uint64_t)v19);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = &type metadata for EmitterRuntime;
  *(_QWORD *)(inited + 40) = &off_1E637F470;
  sub_1B1B44110(v20, inited);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v19);
  v3 = v20[1];
  *(_OWORD *)(v0 + 56) = v20[0];
  *(_OWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 88) = v21;
  v56 = qword_1ED4D09F8;
  v57 = 0;
  v58 = 2;
  v59 = 0;
  v60 = 2;
  v61 = 0;
  swift_retain();
  sub_1B1E3D7C4(1, (uint64_t)&v22);
  swift_release();
  v4 = v23;
  v5 = v24;
  v6 = v26;
  v7 = v25 | 4;
  *(_QWORD *)(v0 + 96) = v22;
  *(_DWORD *)(v0 + 104) = v4;
  *(_BYTE *)(v0 + 108) = v5;
  *(_QWORD *)(v0 + 112) = v7;
  *(_BYTE *)(v0 + 120) = 2;
  *(_QWORD *)(v0 + 128) = v6;
  v50 = qword_1ED4D09F8;
  v51 = 0;
  v52 = 2;
  v53 = 0;
  v54 = 2;
  v55 = 0;
  swift_retain();
  sub_1B1B116A4(1, 2, (uint64_t)v27);
  swift_release();
  v8 = v27[1];
  *(_OWORD *)(v0 + 136) = v27[0];
  *(_OWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 168) = v28;
  v44 = qword_1ED4D09F8;
  v45 = 0;
  v46 = 2;
  v47 = 0;
  v48 = 2;
  v49 = 0;
  swift_retain();
  sub_1B1E3E8C4(2, (uint64_t)&v29);
  swift_release();
  v9 = v30;
  v10 = v31;
  v11 = v33;
  v12 = v34;
  v13 = v32 | 1;
  *(_QWORD *)(v0 + 176) = v29;
  *(_DWORD *)(v0 + 184) = v9;
  *(_BYTE *)(v0 + 188) = v10;
  *(_QWORD *)(v0 + 192) = v13;
  *(_BYTE *)(v0 + 200) = v11;
  *(_QWORD *)(v0 + 208) = v12;
  v38 = qword_1ED4D09F8;
  v39 = 0;
  v40 = 2;
  v41 = 0;
  v42 = 2;
  v43 = 0;
  swift_retain();
  sub_1B1B6EE3C((uint64_t)v35);
  swift_release();
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v14 + 32) = &type metadata for EmitterDescription;
  *(_QWORD *)(v14 + 40) = &off_1E6391B38;
  sub_1B1B44110(v36, v14);
  swift_setDeallocating();
  sub_1B19ED720((uint64_t)v35);
  v15 = v36[1];
  *(_OWORD *)(v0 + 216) = v36[0];
  *(_OWORD *)(v0 + 232) = v15;
  *(_QWORD *)(v0 + 248) = v37;
  return v0;
}

uint64_t sub_1B1CCCD54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  int v46;
  int v47;
  uint64_t v49;
  uint64_t v50;
  ValueMetadata **v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  int v57;
  int v58;
  uint64_t v60;
  uint64_t v61;
  ValueMetadata **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t (**v76)(double);
  uint64_t (*v77)(double);
  int *v78;
  int v79;
  int v80;
  BOOL v81;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  unsigned int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  BOOL v156;
  BOOL v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  void (*v164)(uint64_t, char);
  uint64_t v165;
  BOOL v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(uint64_t, char);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int *v178;
  uint64_t v179;
  uint64_t v180;
  BOOL v181;
  uint64_t v182;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t (*v191)(_OWORD *, uint64_t, uint64_t);
  uint64_t v192;
  void (*v193)(uint64_t, char);
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _OWORD *v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  BOOL v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  char v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(uint64_t, char);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t inited;
  uint64_t v233;
  _OWORD *v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  uint64_t v239;
  unint64_t v240;
  char v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258;
  void (*v259)(uint64_t, char);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  void (*v276)(uint64_t, char);
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  __int128 v283;
  void (*v284)(uint64_t, char);
  uint64_t v285;
  BOOL v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  __int128 v292;
  void (*v293)(uint64_t, char);
  uint64_t v294;
  uint64_t v295;
  char v296;
  _OWORD *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t updated;
  uint64_t v302;
  void (*v303)(uint64_t, char);
  uint64_t v304;
  int v305;
  uint64_t v306;
  uint64_t result;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char v321;
  uint64_t v322;
  char v323;
  uint64_t v324;
  int v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  char v347;
  uint64_t v348;
  char v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char v361;
  int v362;
  uint64_t v363;
  char v364;
  uint64_t v365;
  char v366;
  uint64_t v367;
  char v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  uint64_t v381;
  unint64_t v382;
  uint64_t v383;
  int v384;
  _QWORD *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t *v396;
  char v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  int v403;
  uint64_t v404;
  uint64_t *v405;
  uint64_t v406;
  uint64_t (*v407)(double);
  char v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  _QWORD *v412;
  char v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  unint64_t v419;
  uint64_t v420[4];
  _QWORD __src[82];
  _QWORD v422[82];
  uint64_t v423[8];
  _OWORD v424[5];
  uint64_t v425;
  _OWORD v426[8];
  _OWORD v427[8];
  _OWORD v428[8];
  _OWORD v429[3];
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  uint64_t v435;
  int v436;
  char v437;
  uint64_t v438;
  char v439;
  uint64_t v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  _OWORD v449[2];
  uint64_t v450;
  _OWORD v451[3];
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  _OWORD v457[8];
  _QWORD v458[16];
  _OWORD v459[2];
  uint64_t v460;
  _QWORD v461[16];
  _OWORD v462[8];
  _OWORD v463[2];
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  _QWORD *v468;
  uint64_t v469;
  _OWORD v470[2];
  uint64_t v471;
  _OWORD v472[2];
  uint64_t v473;
  __int128 v474;
  __int128 v475;
  uint64_t v476;
  __int128 v477;
  __int128 v478;
  uint64_t v479;
  __int128 v480;
  __int128 v481;
  uint64_t v482;
  _OWORD v483[2];
  uint64_t v484;
  __int128 v485;
  __int128 v486;
  uint64_t v487;
  _BYTE v488[656];
  _BYTE v489[656];
  _BYTE v490[40];
  _OWORD v491[2];
  uint64_t v492;

  MEMORY[0x1E0C80A78](a1, a2);
  v3 = v2;
  v5 = v4;
  v417 = v6;
  ++*(_QWORD *)(v6 + 480);
  v9 = *v7;
  v8 = v7[1];
  v10 = v7[4];
  swift_retain();
  swift_retain();
  v11 = sub_1B1A101F0(v10);
  swift_release();
  swift_retain();
  v309 = v10;
  v12 = sub_1B1A101F0(v10);
  v310 = v8;
  swift_release();
  v381 = swift_allocObject();
  *(_QWORD *)(v381 + 16) = MEMORY[0x1E0DEE9D8];
  v13 = (uint64_t *)(v381 + 16);
  sub_1B1DA4C88(16);
  v382 = sub_1B211F780(v12, v9);
  v419 = v12;
  v418 = v9;
  v415 = sub_1B1D170CC(v12);
  v395 = v5;
  if ((v14 & 1) != 0)
  {
    v415 = 0;
    if ((*(_BYTE *)(v5 + 57) & 1) == 0)
      goto LABEL_3;
  }
  else if (*(_BYTE *)(v5 + 57) != 1)
  {
LABEL_3:
    sub_1B1CC6310(0, (unint64_t *)&qword_1ED4BAD30, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1B226E100;
    *(_QWORD *)(v15 + 56) = &type metadata for EmitterReference;
    *(_QWORD *)(v15 + 64) = &off_1E6387218;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 96) = &type metadata for AnonymousEntity;
    *(_QWORD *)(v15 + 104) = &off_1E63832E0;
    *(_QWORD *)(v15 + 136) = &type metadata for UnstableOrdering;
    v379 = v15;
    *(_QWORD *)(v15 + 144) = &off_1E638AF90;
    goto LABEL_6;
  }
  sub_1B1CC6310(0, (unint64_t *)&qword_1ED4BAD30, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B227BE30;
  *(_QWORD *)(v16 + 56) = &type metadata for EmitterReference;
  *(_QWORD *)(v16 + 64) = &off_1E6387218;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 96) = &type metadata for AnonymousEntity;
  *(_QWORD *)(v16 + 104) = &off_1E63832E0;
  *(_QWORD *)(v16 + 136) = &type metadata for UnstableOrdering;
  *(_QWORD *)(v16 + 144) = &off_1E638AF90;
  *(_QWORD *)(v16 + 176) = &type metadata for MonoChunk;
  *(_QWORD *)(v16 + 184) = &off_1E63C4620;
  v379 = v16;
LABEL_6:
  sub_1B1DA65C8((uint64_t)&type metadata for Particle, (uint64_t)&off_1E63C2180);
  sub_1B1DA65C8((uint64_t)&type metadata for Position, (uint64_t)&off_1E63C2398);
  v17 = v5;
  v384 = *(unsigned __int8 *)(v5 + 45);
  v18 = v417;
  v19 = v419;
  if (v384 == 1)
    sub_1B1DA65C8((uint64_t)&type metadata for ParticleGPU, (uint64_t)&off_1E63718E8);
  if (*(_BYTE *)(v5 + 76) == 1)
    sub_1B1DA65C8((uint64_t)&type metadata for Velocity, (uint64_t)&off_1E63C30D0);
  v20 = *(_QWORD *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  v21 = *(_QWORD *)v5;
  swift_retain();
  sub_1B1CCF894(v21, 1, v418, v20, v419, v381);
  sub_1B1CCF894(*(_QWORD *)(v5 + 8), 2, v418, v20, v419, v381);
  sub_1B1CCF894(*(_QWORD *)(v5 + 16), 3, v418, v20, v419, v381);
  v383 = v20;
  sub_1B1CCF894(*(_QWORD *)(v5 + 24), 4, v418, v20, v419, v381);
  v22 = sub_1B1CD039C(v21, v418);
  *(_BYTE *)(v417 + 50) = v22 & 1;
  if ((v22 & 1) != 0)
  {
    v23 = (char *)*v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_1B1C62F18(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v25 = *((_QWORD *)v23 + 2);
    v24 = *((_QWORD *)v23 + 3);
    if (v25 >= v24 >> 1)
      v23 = sub_1B1C62F18(v24 > 1, v25 + 1, 1, v23);
    *((_QWORD *)v23 + 2) = v25 + 1;
    v26 = &v23[16 * v25];
    *((_QWORD *)v26 + 4) = &type metadata for ParticleParentID;
    *((_QWORD *)v26 + 5) = &off_1E63895A0;
    *v13 = (uint64_t)v23;
  }
  v27 = *(_OWORD *)(v3 + 32);
  v491[0] = *(_OWORD *)(v3 + 16);
  v491[1] = v27;
  v492 = *(_QWORD *)(v3 + 48);
  sub_1B1E8FCE4(v418, (uint64_t)v491, 0x200000000, v423);
  sub_1B1A18378((uint64_t)v423, (uint64_t)v463, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v463[0])
  {
    if (v469 >= 1)
    {
      v392 = v466;
      if (v466)
      {
        v406 = v468[4];
        v403 = *(unsigned __int8 *)(v467 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v470[0] = v463[0];
        v470[1] = v463[1];
        v389 = v465;
        v471 = v464;
        v387 = (uint64_t)(v468 + 6);
        v412 = v468;
        v385 = v468 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v28 = 0;
        v29 = 0;
        do
        {
          v30 = (unsigned int *)(v389 + 48 * v28);
          v31 = *v30;
          v32 = v30[1];
          v34 = *((_QWORD *)v30 + 4);
          v33 = *((_QWORD *)v30 + 5);
          v410 = v29;
          v401 = v28;
          v396 = (uint64_t *)*((_QWORD *)v30 + 2);
          v398 = *((_QWORD *)v30 + 3);
          if (v403)
          {
            v35 = *(os_unfair_lock_s **)(v33 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v35);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v33 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v406);
          sub_1B1A18378(v387, (uint64_t)v490, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v36 = v412[4];
          v37 = v33;
          v38 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v33 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v412[6] = ecs_stack_allocator_allocate(v36, 48 * v38, 8);
          v412[7] = v38;
          v385[1] = 0;
          v385[2] = 0;
          *v385 = 0;
          swift_release();
          v39 = v398;
          v399 = v37;
          v40 = sub_1B1A12038((uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1E6389F98, v396, v39, v34, (uint64_t)v412);
          if (v396)
          {
            v19 = v419;
            if (v34)
            {
              v41 = 0;
              v42 = HIDWORD(v419);
              do
              {
                v45 = (int *)(v40 + 24 * v41);
                v47 = *v45;
                v46 = v45[1];
                if (v47 == (_DWORD)v419 && v46 == v42)
                {
                  v49 = *v13;
                  v50 = sub_1B1C7A1C4(*v13);
                  if (v50)
                  {
                    v51 = (ValueMetadata **)(v49 + 32);
                    while (*v51 != &type metadata for ParticleID)
                    {
                      v51 += 2;
                      if (!--v50)
                        goto LABEL_27;
                    }
                  }
                  else
                  {
LABEL_27:
                    sub_1B1DC9A58();
                    v43 = *(_QWORD *)(*v13 + 16);
                    sub_1B1DC9AF4(v43);
                    v42 = HIDWORD(v419);
                    v44 = sub_1B1DC9B80(v43, (uint64_t)&type metadata for ParticleID, (uint64_t)&off_1E636E760);
                    nullsub_16(v44);
                  }
                }
                ++v41;
              }
              while (v41 != v34);
            }
          }
          else
          {
            v19 = v419;
            if ((_DWORD)v31 != (_DWORD)v32)
            {
              v52 = HIDWORD(v419);
              do
              {
                v56 = (int *)(v40 + 24 * v31);
                v58 = *v56;
                v57 = v56[1];
                if (v58 == (_DWORD)v419 && v57 == v52)
                {
                  v60 = *v13;
                  v61 = sub_1B1C7A1C4(*v13);
                  if (v61)
                  {
                    v62 = (ValueMetadata **)(v60 + 32);
                    while (*v62 != &type metadata for ParticleID)
                    {
                      v62 += 2;
                      if (!--v61)
                        goto LABEL_43;
                    }
                  }
                  else
                  {
LABEL_43:
                    sub_1B1DC9A58();
                    v53 = *(_QWORD *)(*v13 + 16);
                    sub_1B1DC9AF4(v53);
                    v54 = v53;
                    v52 = HIDWORD(v419);
                    v55 = sub_1B1DC9B80(v54, (uint64_t)&type metadata for ParticleID, (uint64_t)&off_1E636E760);
                    nullsub_16(v55);
                  }
                }
                ++v31;
              }
              while (v31 != v32);
            }
          }
          v29 = v410;
          sub_1B1F05D48(v412, (unsigned __int16 **)v470, (uint64_t)v490);
          sub_1B1F03804((char *)v399);
          ecs_stack_allocator_pop_snapshot(v406);
          if ((v403 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v399 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v399 + 376));
          }
          swift_release();
          v28 = v401 + 1;
        }
        while (v401 + 1 != v392);
        sub_1B19ED748(v423);
        v18 = v417;
        v17 = v395;
      }
    }
    sub_1B19ED748(v423);
  }
  v63 = swift_bridgeObjectRetain();
  v64 = sub_1B1DA66BC(v63, v379);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v65 = swift_retain();
  v402 = v64;
  v66 = sub_1B1CDB264(v65, v19, (_BYTE *)v17, (uint64_t *)v18, v64);
  swift_release();
  if (v66 != 2)
  {
    swift_retain();
    v67 = sub_1B1A101F0(v309);
    swift_release();
    v68 = *(unsigned int *)(v310 + 28);
    v69 = *(_BYTE *)(v310 + 32);
    swift_retain();
    v489[0] = v69;
    sub_1B1CCA31C(v67, v68 | ((unint64_t)v69 << 32), (_BYTE *)v17, v18, v418, 1);
    swift_release();
    if ((v66 & 1) != 0)
    {
      v70 = *(_QWORD *)(v17 + 24);
      v71 = *(_QWORD *)(v70 + 16);
      if (v71)
      {
        v72 = (_QWORD *)(v418 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        v73 = v70 + 32;
        swift_bridgeObjectRetain();
        v74 = 0;
        v75 = 12;
        v76 = &thread_worker_index;
        v77 = thread_worker_index;
        v407 = thread_worker_index;
        do
        {
          v78 = (int *)(v73 + 8 * v74);
          v79 = *v78;
          v80 = v78[1];
          v81 = v79 == -1 && v80 == 0;
          if (!v81
            && (v79 & 0x80000000) == 0
            && v72[1] > v79
            && (v80 == -1 || *(_DWORD *)(*v72 + v79 * (uint64_t)v75 + 8) == v80))
          {
            v83 = (int *)(*v72 + v79 * (uint64_t)v75);
            v84 = *((__int16 *)v83 + 2);
            v85 = *(_QWORD *)(*(_QWORD *)(v418 + 136) + 8 * *v83 + 32);
            ((void (*)(uint64_t (**)(double)))v77)(v76);
            v86 = *(_QWORD *)(v85 + 192);
            if (v86)
            {
              v87 = *(_QWORD *)(v85 + 208);
              v88 = 8 * (v84 >> 6);
              *(_QWORD *)(v86 + v88) |= 1 << v84;
              *(_QWORD *)(v87 + v88) &= ~(1 << v84);
            }
            if (*(_BYTE *)(*(_QWORD *)(v85 + 40) + 213) == 1)
            {
              v89 = *(_QWORD *)(v85 + 48);
              v90 = *(_QWORD *)(v89 + 16);
              if (v90)
              {
                v91 = (uint64_t *)(v89 + 56);
                while ((ValueMetadata *)*(v91 - 3) != &type metadata for PropagateDirtiness)
                {
                  v91 += 5;
                  if (!--v90)
                    goto LABEL_83;
                }
                v92 = *v91;
              }
              else
              {
LABEL_83:
                v92 = 0;
              }
              v93 = *(_QWORD *)(v85 + 128);
              v94 = *(_BYTE *)(v85 + 184);
              v95 = swift_retain();
              if ((v94 & 1) != 0)
                goto LABEL_240;
              v96 = *(unsigned int *)(*(_QWORD *)(v85 + 168) + 4 * v84);
              v97 = *(unsigned int *)(*(_QWORD *)(v95 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                    + 12 * (int)v96
                                    + 8);
              swift_release();
              sub_1B1F04058(v96 | (v97 << 32), *(_QWORD *)(v93 + v92 + 8 * v84));
              v75 = 12;
              v18 = v417;
              v17 = v395;
              v76 = &thread_worker_index;
              v77 = v407;
            }
            else
            {
              v17 = v395;
            }
          }
          ++v74;
        }
        while (v74 != v71);
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_1B1F21F0C((uint64_t)&type metadata for WorldFromScene);
  v413 = v98 & 1;
  os_unfair_recursive_lock_unlock();
  swift_release();
  *(_QWORD *)v18 = v402;
  v404 = *(_QWORD *)(v17 + 32);
  v99 = *(_BYTE *)(v17 + 40);
  v408 = v99;
  *(_QWORD *)(v18 + 120) = v404;
  *(_BYTE *)(v18 + 128) = v99;
  v393 = *(_QWORD *)(v18 + 8);
  v376 = *(_QWORD *)(v18 + 16);
  v375 = *(_QWORD *)(v18 + 24);
  v372 = *(_QWORD *)(v18 + 32);
  v370 = *(_QWORD *)(v18 + 40);
  v368 = *(_BYTE *)(v18 + 48);
  v366 = *(_BYTE *)(v18 + 49);
  v364 = *(_BYTE *)(v18 + 50);
  v363 = *(_QWORD *)(v18 + 56);
  v362 = *(_DWORD *)(v18 + 64);
  v361 = *(_BYTE *)(v18 + 68);
  v359 = *(_QWORD *)(v18 + 72);
  v357 = *(_BYTE *)(v18 + 80);
  v356 = *(_QWORD *)(v18 + 88);
  v100 = *(_DWORD *)(v18 + 96);
  v352 = *(_QWORD *)(v18 + 112);
  v353 = *(_QWORD *)(v18 + 104);
  v349 = *(_BYTE *)(v18 + 129);
  v347 = *(_BYTE *)(v18 + 130);
  v344 = *(_QWORD *)(v18 + 136);
  v342 = *(_QWORD *)(v18 + 144);
  v340 = *(_QWORD *)(v18 + 152);
  v338 = *(_BYTE *)(v18 + 160);
  v335 = *(_QWORD *)(v18 + 168);
  v333 = *(_QWORD *)(v18 + 176);
  v331 = *(_BYTE *)(v18 + 184);
  v329 = *(_QWORD *)(v18 + 192);
  v327 = *(_QWORD *)(v18 + 200);
  v400 = *(_QWORD *)(v18 + 208);
  v397 = *(_BYTE *)(v18 + 216);
  __src[0] = v402;
  __src[1] = v393;
  __src[2] = v376;
  __src[3] = v375;
  __src[4] = v372;
  __src[5] = v370;
  LOBYTE(__src[6]) = v368;
  BYTE1(__src[6]) = v366;
  BYTE2(__src[6]) = v364;
  __src[7] = v363;
  LODWORD(__src[8]) = v362;
  BYTE4(__src[8]) = v361;
  __src[9] = v359;
  LOBYTE(__src[10]) = v357;
  __src[11] = v356;
  LODWORD(__src[12]) = v100;
  __src[13] = v353;
  __src[14] = v352;
  __src[15] = v404;
  LOBYTE(__src[16]) = v99;
  BYTE1(__src[16]) = v349;
  BYTE2(__src[16]) = v347;
  __src[17] = v344;
  __src[18] = v342;
  __src[19] = v340;
  LOBYTE(__src[20]) = v338;
  __src[21] = v335;
  __src[22] = v333;
  LOBYTE(__src[23]) = v331;
  __src[24] = v329;
  __src[25] = v327;
  __src[26] = v400;
  LOBYTE(__src[27]) = v397;
  v325 = *(_DWORD *)(v18 + 224);
  HIDWORD(__src[27]) = *(_DWORD *)(v18 + 220);
  v326 = HIDWORD(__src[27]);
  LODWORD(__src[28]) = v325;
  __src[29] = *(_QWORD *)(v18 + 232);
  v324 = __src[29];
  LOBYTE(__src[30]) = *(_BYTE *)(v18 + 240);
  v323 = __src[30];
  v390 = *(_QWORD *)(v18 + 256);
  __src[31] = *(_QWORD *)(v18 + 248);
  __src[32] = v390;
  __src[33] = *(_QWORD *)(v18 + 264);
  v322 = __src[33];
  LOBYTE(__src[34]) = *(_BYTE *)(v18 + 272);
  v321 = __src[34];
  v319 = *(_QWORD *)(v18 + 288);
  __src[35] = *(_QWORD *)(v18 + 280);
  v320 = __src[35];
  __src[36] = v319;
  v317 = *(_QWORD *)(v18 + 304);
  __src[37] = *(_QWORD *)(v18 + 296);
  v318 = __src[37];
  __src[38] = v317;
  v315 = *(_QWORD *)(v18 + 320);
  __src[39] = *(_QWORD *)(v18 + 312);
  v316 = __src[39];
  __src[40] = v315;
  v313 = *(_QWORD *)(v18 + 336);
  __src[41] = *(_QWORD *)(v18 + 328);
  v314 = __src[41];
  __src[42] = v313;
  v311 = *(_QWORD *)(v18 + 352);
  __src[43] = *(_QWORD *)(v18 + 344);
  v312 = __src[43];
  __src[44] = v311;
  v102 = *(_QWORD *)(v18 + 368);
  __src[45] = *(_QWORD *)(v18 + 360);
  v101 = __src[45];
  __src[46] = v102;
  v104 = *(_QWORD *)(v18 + 384);
  __src[47] = *(_QWORD *)(v18 + 376);
  v103 = __src[47];
  __src[48] = v104;
  v106 = *(_QWORD *)(v18 + 400);
  __src[49] = *(_QWORD *)(v18 + 392);
  v105 = __src[49];
  __src[50] = v106;
  v107 = *(_QWORD *)(v18 + 408);
  v108 = *(_QWORD *)(v417 + 416);
  __src[51] = v107;
  __src[52] = v108;
  v386 = *(_QWORD *)(v417 + 432);
  __src[53] = *(_QWORD *)(v417 + 424);
  v388 = __src[53];
  __src[54] = v386;
  v378 = *(_QWORD *)(v417 + 448);
  __src[55] = *(_QWORD *)(v417 + 440);
  v377 = __src[55];
  __src[56] = v378;
  LODWORD(__src[57]) = *(_DWORD *)(v417 + 456);
  v380 = __src[57];
  v374 = *(_QWORD *)(v417 + 472);
  __src[58] = *(_QWORD *)(v417 + 464);
  v373 = __src[58];
  __src[59] = v374;
  v371 = *(_QWORD *)(v417 + 488);
  __src[60] = *(_QWORD *)(v417 + 480);
  v369 = __src[60];
  __src[61] = v371;
  v367 = *(_QWORD *)(v417 + 504);
  __src[62] = *(_QWORD *)(v417 + 496);
  v365 = __src[62];
  __src[63] = v367;
  __src[64] = *(_QWORD *)(v417 + 512);
  v360 = __src[64];
  __src[65] = *(_QWORD *)(v417 + 520);
  v358 = __src[65];
  __src[66] = *(_QWORD *)(v417 + 528);
  v355 = __src[66];
  __src[67] = *(_QWORD *)(v417 + 536);
  v354 = __src[67];
  __src[68] = *(_QWORD *)(v417 + 544);
  v351 = __src[68];
  __src[69] = *(_QWORD *)(v417 + 552);
  v350 = __src[69];
  __src[70] = *(_QWORD *)(v417 + 560);
  v348 = __src[70];
  __src[71] = *(_QWORD *)(v417 + 568);
  v346 = __src[71];
  __src[72] = *(_QWORD *)(v417 + 576);
  v345 = __src[72];
  __src[73] = *(_QWORD *)(v417 + 584);
  v343 = __src[73];
  __src[74] = *(_QWORD *)(v417 + 592);
  v341 = __src[74];
  __src[75] = *(_QWORD *)(v417 + 600);
  v339 = __src[75];
  __src[76] = *(_QWORD *)(v417 + 608);
  v337 = __src[76];
  __src[77] = *(_QWORD *)(v417 + 616);
  v336 = __src[77];
  __src[78] = *(_QWORD *)(v417 + 624);
  v334 = __src[78];
  __src[79] = *(_QWORD *)(v417 + 632);
  v332 = __src[79];
  __src[80] = *(_QWORD *)(v417 + 640);
  v330 = __src[80];
  __src[81] = *(_QWORD *)(v417 + 648);
  v328 = __src[81];
  memcpy(v489, __src, sizeof(v489));
  sub_1B1C1FAFC((uint64_t)__src);
  v109 = sub_1B1CCBD4C((uint64_t)v489, 0, v413);
  sub_1B1CDB618((uint64_t)__src);
  swift_bridgeObjectRelease();
  v422[2] = v376;
  v422[3] = v375;
  v422[4] = v372;
  v422[5] = v370;
  LOBYTE(v422[6]) = v368;
  BYTE1(v422[6]) = v366;
  BYTE2(v422[6]) = v364;
  v422[7] = v363;
  LODWORD(v422[8]) = v362;
  BYTE4(v422[8]) = v361;
  v422[9] = v359;
  LOBYTE(v422[10]) = v357;
  v422[11] = v356;
  v422[13] = v353;
  v422[14] = v352;
  v422[15] = v404;
  LOBYTE(v422[16]) = v408;
  BYTE1(v422[16]) = v349;
  BYTE2(v422[16]) = v347;
  v422[17] = v344;
  v422[18] = v342;
  v422[19] = v340;
  LOBYTE(v422[20]) = v338;
  v422[21] = v335;
  v422[22] = v333;
  LOBYTE(v422[23]) = v331;
  v422[24] = v329;
  v422[25] = v327;
  v422[26] = v400;
  LOBYTE(v422[27]) = v397;
  HIDWORD(v422[27]) = v326;
  LODWORD(v422[28]) = v325;
  v422[29] = v324;
  LOBYTE(v422[30]) = v323;
  v422[33] = v322;
  LOBYTE(v422[34]) = v321;
  v422[35] = v320;
  v422[36] = v319;
  v422[37] = v318;
  v422[38] = v317;
  v422[39] = v316;
  v422[40] = v315;
  v422[41] = v314;
  v422[42] = v313;
  v422[43] = v312;
  v422[44] = v311;
  v422[45] = v101;
  v422[46] = v102;
  v422[47] = v103;
  v422[48] = v104;
  v422[49] = v105;
  v110 = v395;
  v422[50] = v106;
  v422[51] = v107;
  v422[52] = v108;
  *(_QWORD *)(v417 + 248) = v109;
  v422[0] = v402;
  v422[1] = v393;
  LODWORD(v422[12]) = v100;
  v422[31] = v109;
  v422[32] = v390;
  v422[53] = v388;
  v422[54] = v386;
  v422[55] = v377;
  v422[56] = v378;
  LODWORD(v422[57]) = v380;
  v422[58] = v373;
  v422[59] = v374;
  v422[60] = v369;
  v422[61] = v371;
  v422[62] = v365;
  v422[63] = v367;
  v422[64] = v360;
  v422[65] = v358;
  v422[66] = v355;
  v422[67] = v354;
  v422[68] = v351;
  v422[69] = v350;
  v422[70] = v348;
  v422[71] = v346;
  v422[72] = v345;
  v422[73] = v343;
  v422[74] = v341;
  v422[75] = v339;
  v422[76] = v337;
  v422[77] = v336;
  v422[78] = v334;
  v422[79] = v332;
  v422[80] = v330;
  v422[81] = v328;
  memcpy(v488, v422, sizeof(v488));
  sub_1B1C1FAFC((uint64_t)v422);
  v111 = sub_1B1CCBD4C((uint64_t)v488, 1, v413);
  sub_1B1CDB618((uint64_t)v422);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v417 + 256) = v111;
  *(_QWORD *)(v417 + 168) = 0;
  *(_BYTE *)(v417 + 184) = 0;
  v112 = *(_QWORD *)(*(_QWORD *)(v395 + 24) + 16);
  if (v112)
  {
    v113 = v418;
    v114 = (uint64_t *)(v418 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v115 = (unsigned int *)(swift_bridgeObjectRetain() + 36);
    while (1)
    {
      v116 = (int)*(v115 - 1);
      v117 = *v115;
      v118 = *(v115 - 1);
      if ((_DWORD)v116 == -1 && (_DWORD)v117 == 0)
        goto LABEL_144;
      v120 = v114[1];
      if ((v118 & 0x80000000) != 0 || v120 <= v116)
        goto LABEL_103;
      v121 = *v114;
      v122 = *(unsigned int *)(*v114 + 12 * (int)v116 + 8);
      if ((_DWORD)v117 != -1 && (_DWORD)v122 != (_DWORD)v117)
        goto LABEL_103;
      v124 = *(_QWORD *)(*(_QWORD *)(v113 + 136) + 8 * *(int *)(v121 + 12 * (int)v116) + 32);
      if ((*(_BYTE *)(v124 + 120) & 1) != 0)
        break;
LABEL_146:
      v151 = v419;
      v115 += 2;
      if (!--v112)
      {
        swift_bridgeObjectRelease();
        v110 = v395;
        goto LABEL_150;
      }
    }
    sub_1B1FE5258(v124, v113, *(unsigned int *)(v121 + 12 * (int)v116) | ((unint64_t)*(unsigned __int16 *)(v121 + 12 * (int)v116 + 6) << 48) | ((unint64_t)*(unsigned __int16 *)(v121 + 12 * (int)v116 + 4) << 32), v122, v417);
    v120 = v114[1];
LABEL_103:
    if ((v118 & 0x80000000) != 0 || v120 <= v116)
    {
      if ((_DWORD)v116 == -1)
        goto LABEL_143;
    }
    else if ((_DWORD)v117 == -1 || *(_DWORD *)(*v114 + 12 * (int)v116 + 8) == (_DWORD)v117)
    {
      v126 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v418 + 80) + 8 * *(__int16 *)(*v114 + 12 * (int)v116 + 6) + 32)
                       + 16);
      v127 = *(_QWORD *)(v126 + 128);
      if (*(_QWORD *)(v127 + 16))
      {
        v128 = sub_1B1DC3AC8((uint64_t)&type metadata for Position);
        if ((v129 & 1) != 0
          && *(ValueMetadata **)(*(_QWORD *)(v126 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v127 + 56) + 8 * v128) + 32) == &type metadata for Position)
        {
          goto LABEL_148;
        }
      }
    }
    if ((v118 & 0x80000000) == 0 && v114[1] > v116)
    {
      v130 = *v114;
      if ((_DWORD)v117 == -1 || *(_DWORD *)(v130 + 12 * (int)v116 + 8) == (_DWORD)v117)
      {
        v131 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v418 + 80) + 8 * *(__int16 *)(v130 + 12 * (int)v116 + 6) + 32)
                         + 16);
        v132 = *(_QWORD *)(v131 + 128);
        if (*(_QWORD *)(v132 + 16))
        {
          v133 = sub_1B1DC3AC8((uint64_t)&type metadata for Orientation);
          if ((v134 & 1) != 0
            && *(ValueMetadata **)(*(_QWORD *)(v131 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v132 + 56) + 8 * v133) + 32) == &type metadata for Orientation)
          {
            goto LABEL_148;
          }
        }
      }
    }
    if ((v118 & 0x80000000) == 0 && v114[1] > v116)
    {
      v135 = *v114;
      if ((_DWORD)v117 == -1 || *(_DWORD *)(v135 + 12 * (int)v116 + 8) == (_DWORD)v117)
      {
        v136 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v418 + 80) + 8 * *(__int16 *)(v135 + 12 * (int)v116 + 6) + 32)
                         + 16);
        v137 = *(_QWORD *)(v136 + 128);
        if (*(_QWORD *)(v137 + 16))
        {
          v138 = sub_1B1DC3AC8((uint64_t)&type metadata for Scale1);
          if ((v139 & 1) != 0
            && *(ValueMetadata **)(*(_QWORD *)(v136 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v137 + 56) + 8 * v138) + 32) == &type metadata for Scale1)
          {
            goto LABEL_148;
          }
        }
      }
    }
    if ((v118 & 0x80000000) == 0 && v114[1] > v116)
    {
      v140 = *v114;
      if ((_DWORD)v117 == -1 || *(_DWORD *)(v140 + 12 * (int)v116 + 8) == (_DWORD)v117)
      {
        v141 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v418 + 80) + 8 * *(__int16 *)(v140 + 12 * (int)v116 + 6) + 32)
                         + 16);
        v142 = *(_QWORD *)(v141 + 128);
        if (*(_QWORD *)(v142 + 16))
        {
          v143 = sub_1B1DC3AC8((uint64_t)&type metadata for Scale2);
          if ((v144 & 1) != 0
            && *(ValueMetadata **)(*(_QWORD *)(v141 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v142 + 56) + 8 * v143) + 32) == &type metadata for Scale2)
          {
            goto LABEL_148;
          }
        }
      }
    }
    if ((v116 & 0x80000000) == 0)
    {
      v113 = v418;
      if (v114[1] <= v116)
        goto LABEL_144;
      v145 = *v114;
      if ((_DWORD)v117 != -1 && *(_DWORD *)(v145 + 12 * (int)v116 + 8) != (_DWORD)v117)
        goto LABEL_144;
      v146 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v418 + 80) + 8 * *(__int16 *)(v145 + 12 * (int)v116 + 6) + 32)
                       + 16);
      v147 = *(_QWORD *)(v146 + 128);
      if (*(_QWORD *)(v147 + 16))
      {
        v148 = sub_1B1DC3AC8((uint64_t)&type metadata for Scale3);
        if ((v149 & 1) != 0
          && *(ValueMetadata **)(*(_QWORD *)(v146 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v147 + 56) + 8 * v148) + 32) == &type metadata for Scale3)
        {
LABEL_148:
          v150 = v118 | (v117 << 32);
          v113 = v418;
          sub_1B1FE16DC((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v150);
          sub_1B1FE16DC((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1E6380040, v150);
          goto LABEL_145;
        }
      }
    }
LABEL_143:
    v113 = v418;
LABEL_144:
    v150 = v118 | (v117 << 32);
    sub_1B1FE1E1C((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1E6382C00, v150, 0);
    sub_1B1FE1E1C((uint64_t)&type metadata for NotInHierarchy, (uint64_t)&off_1E6380040, v150, 0);
LABEL_145:
    sub_1B1FE20C0((uint64_t)&type metadata for Parent, (uint64_t)&off_1E63BB8E8, v150, 0);
    goto LABEL_146;
  }
  v113 = v418;
  v151 = v419;
LABEL_150:
  v152 = *(_QWORD *)(v113 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler);
  swift_retain();
  v414 = v152;
  sub_1B204C5F0(v151);
  LODWORD(v153) = v382;
  v154 = HIDWORD(v382) & 1;
  v155 = v415;
  if ((v384 & 1) != 0)
    goto LABEL_158;
  swift_retain();
  v156 = sub_1B1E36538((uint64_t)&type metadata for ParticleLifetime);
  swift_release();
  if (v156 || (swift_retain(), v157 = sub_1B1E36538((uint64_t)&type metadata for ParticleAge), swift_release(), v157))
  {
    v158 = swift_conformsToProtocol2();
    if (!v158)
    {
      __break(1u);
      goto LABEL_230;
    }
    v159 = v158;
    v160 = swift_retain();
    sub_1B1E56D20(v160, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleLifeAndDeath, v159, v151, v382 | (v154 << 32), 1u, (uint64_t)v424);
    v161 = type metadata accessor for ParticleLifeAndDeath.System();
    v162 = swift_allocObject();
    v485 = v424[3];
    v486 = v424[4];
    v487 = v425;
    sub_1B19F0FC0((uint64_t)v483);
    v163 = v483[1];
    *(_OWORD *)(v162 + 16) = v483[0];
    *(_OWORD *)(v162 + 32) = v163;
    *(_QWORD *)(v162 + 48) = v484;
    v164 = sub_1B1E532D4(v424, v161, (uint64_t)&off_1E639C460);
    LODWORD(v153) = v382;
    v308 = v161;
    v155 = v415;
    sub_1B2050DA0(v162, (uint64_t)v164, v165, qword_1EEF5DE08, v415, 1, v151, v414, v308, (uint64_t)&off_1E639C488);
    swift_release();
    swift_release();
    sub_1B1B4F21C((uint64_t)v424);
    v110 = v395;
  }
  swift_retain();
  v166 = sub_1B1E36538((uint64_t)&type metadata for ParticleRibbonLength);
  swift_release();
  if (v166)
  {
    v167 = swift_conformsToProtocol2();
    if (v167)
    {
      v168 = v167;
      v169 = swift_retain();
      sub_1B1E56D20(v169, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleRibbonLengthUpdate, v168, v151, v153 | (v154 << 32), 3u, (uint64_t)v426);
      v170 = type metadata accessor for ParticleRibbonLengthUpdate.System();
      v171 = swift_allocObject();
      v172 = sub_1B1E532D4(v426, v170, (uint64_t)&off_1E63B1D98);
      sub_1B2050DA0(v171, (uint64_t)v172, v173, qword_1EEF5DE18, v155, 1, v151, v414, v170, (uint64_t)&off_1E63B1DC0);
      swift_release();
      swift_release();
      sub_1B1B4F21C((uint64_t)v426);
      v110 = v395;
      goto LABEL_158;
    }
LABEL_230:
    __break(1u);
    goto LABEL_231;
  }
LABEL_158:
  *(_QWORD *)&v462[0] = *(_QWORD *)v110;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B1CD9D30((uint64_t *)v462, v113);
  swift_release();
  v174 = *(_QWORD *)(*(_QWORD *)&v462[0] + 16);
  v411 = HIDWORD(v382) & 1;
  if (!v174)
  {
    swift_release();
    if ((v384 & 1) != 0)
      goto LABEL_187;
    goto LABEL_188;
  }
  v405 = (uint64_t *)(v418 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v175 = *(_QWORD *)&v462[0] + 32;
  v409 = v153;
  swift_retain();
  v176 = v175;
  v177 = 0;
  v394 = v174;
  v391 = v175;
  while (1)
  {
    v178 = (unsigned int *)(v176 + 8 * v177);
    v179 = *v178;
    v180 = v178[1];
    v181 = (_DWORD)v179 == -1 && (_DWORD)v180 == 0;
    if (!v181 && (v179 & 0x80000000) == 0 && v405[1] > (int)v179)
    {
      v182 = *v405;
      if (((_DWORD)v180 == -1 || *(_DWORD *)(*v405 + 12 * (int)v179 + 8) == (_DWORD)v180)
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v418 + 136) + 8 * *(int *)(v182 + 12 * (int)v179) + 32) + 120) & 1) != 0)
      {
        v184 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v418 + 80)
                                                 + 8 * *(__int16 *)(v182 + 12 * (int)v179 + 6)
                                                 + 32)
                                     + 16)
                         + 32);
        v185 = *(_QWORD *)(v184 + 16);
        if (v185)
          break;
      }
    }
LABEL_161:
    if (++v177 == v174)
      goto LABEL_186;
  }
  v154 = v179 | (v180 << 32);
  swift_retain();
  swift_retain();
  v110 = 32;
  while (1)
  {
    v195 = *(_QWORD *)(v184 + v110);
    v196 = swift_conformsToProtocol2();
    if (v196)
      v153 = v196;
    else
      v153 = 0;
    if (!v196)
      v195 = 0;
    if (!v195)
      goto LABEL_177;
    v197 = swift_conformsToProtocol2();
    if (!v197)
      break;
    v186 = v197;
    v187 = swift_retain();
    sub_1B1E56D20(v187, v154, v195, v186, v419, v409 | (v411 << 32), 1u, (uint64_t)v427);
    v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v153 + 8))(v195, v153);
    v190 = v189;
    v191 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v189 + 16);
    sub_1B1BEE528((uint64_t)v427);
    v192 = v191(v427, v188, v190);
    v193 = sub_1B1E532D4(v427, v188, v190);
    v155 = v194;
    sub_1B2050DA0(v192, (uint64_t)v193, v194, qword_1EEF5DE08, v415, 1, v419, v414, v188, *(_QWORD *)(v190 + 8));
    swift_unknownObjectRelease();
    swift_release();
    sub_1B1B4F21C((uint64_t)v427);
LABEL_177:
    v110 += 16;
    if (!--v185)
    {
      swift_release();
      swift_release();
      v110 = v395;
      v155 = v415;
      LODWORD(v153) = v382;
      v154 = HIDWORD(v382) & 1;
      v174 = v394;
      v176 = v391;
      goto LABEL_161;
    }
  }
  __break(1u);
LABEL_186:
  swift_release_n();
  v151 = v419;
  if ((v384 & 1) != 0)
  {
LABEL_187:
    v198 = swift_retain();
    sub_1B1E56D20(v198, 0xFFFFFFFFuLL, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, v151, v153 | (v154 << 32), 2u, (uint64_t)v428);
    v199 = type metadata accessor for ParticlePrepareGPUSystem();
    v200 = qword_1EEF5DE10 - 2;
    v201 = (_OWORD *)swift_allocObject();
    v202 = v428[5];
    v201[5] = v428[4];
    v201[6] = v202;
    v203 = v428[7];
    v201[7] = v428[6];
    v201[8] = v203;
    v204 = v428[1];
    v201[1] = v428[0];
    v201[2] = v204;
    v205 = v428[3];
    v201[3] = v428[2];
    v201[4] = v205;
    sub_1B1BEE528((uint64_t)v428);
    sub_1B204C9A0(v199, (uint64_t)&off_1E63AEB70, v200, v155, 1, v151, (uint64_t)sub_1B1CDBFA4, (uint64_t)v201);
    swift_release();
    sub_1B1B4F21C((uint64_t)v428);
  }
LABEL_188:
  v416 = v155;
  swift_retain();
  v206 = sub_1B1E36538((uint64_t)&type metadata for ParticleID);
  swift_release();
  v207 = v418;
  if (v206)
  {
    swift_retain();
    v208 = swift_bridgeObjectRetain();
    v209 = sub_1B1CD69D0(v208, v418);
    v207 = v418;
    swift_bridgeObjectRelease();
    swift_release();
    if ((v209 & 1) == 0)
    {
      v210 = swift_conformsToProtocol2();
      v211 = v210;
      if (v384)
      {
        if (v210)
        {
          v212 = swift_retain();
          sub_1B1E56D20(v212, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleSetID, v211, v151, v153 | (v154 << 32), 2u, (uint64_t)v429);
          v213 = type metadata accessor for ParticleSetID.GPUSystem();
          v214 = qword_1EEF5DE10;
          v215 = swift_allocObject();
          v216 = v432;
          *(_OWORD *)(v215 + 104) = v431;
          *(_OWORD *)(v215 + 120) = v216;
          v217 = v434;
          *(_OWORD *)(v215 + 136) = v433;
          *(_OWORD *)(v215 + 152) = v217;
          v218 = v429[1];
          *(_OWORD *)(v215 + 40) = v429[0];
          *(_OWORD *)(v215 + 56) = v218;
          v219 = v430;
          *(_OWORD *)(v215 + 72) = v429[2];
          *(_QWORD *)(v215 + 16) = v383;
          *(_DWORD *)(v215 + 24) = v151;
          *(_DWORD *)(v215 + 28) = HIDWORD(v419);
          *(_BYTE *)(v215 + 32) = 2;
          *(_OWORD *)(v215 + 88) = v219;
          swift_retain();
          sub_1B1BEE528((uint64_t)v429);
          sub_1B204C9A0(v213, (uint64_t)&off_1E637C868, v214, v416, 1, v151, (uint64_t)sub_1B1CDBFA8, v215);
          goto LABEL_197;
        }
LABEL_236:
        __break(1u);
LABEL_237:
        __break(1u);
LABEL_238:
        __break(1u);
LABEL_239:
        __break(1u);
        swift_release();
        __break(1u);
LABEL_240:
        result = sub_1B2229688();
        __break(1u);
        return result;
      }
      if (!v210)
        goto LABEL_237;
      v220 = swift_retain();
      sub_1B1E56D20(v220, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleSetID, v211, v151, v153 | (v154 << 32), 2u, (uint64_t)v429);
      v221 = type metadata accessor for ParticleSetID.System();
      v222 = swift_allocObject();
      v480 = v430;
      v481 = v431;
      v482 = v432;
      sub_1B1B7057C((uint64_t)&v435);
      v223 = v436;
      v224 = v437;
      v225 = v439;
      v226 = v440;
      v227 = v438 | 0x10;
      *(_QWORD *)(v222 + 16) = v435;
      *(_DWORD *)(v222 + 24) = v223;
      *(_BYTE *)(v222 + 28) = v224;
      *(_QWORD *)(v222 + 32) = v227;
      *(_BYTE *)(v222 + 40) = v225;
      *(_QWORD *)(v222 + 48) = v226;
      v228 = sub_1B1E532D4(v429, v221, (uint64_t)&off_1E637C7F8);
      sub_1B2050DA0(v222, (uint64_t)v228, v229, qword_1EEF5DE10, v155, 1, v151, v414, v221, (uint64_t)&off_1E637C820);
      swift_release();
LABEL_197:
      swift_release();
      sub_1B1B4F21C((uint64_t)v429);
      v207 = v418;
      LODWORD(v153) = v382;
    }
  }
  *(_QWORD *)&v462[0] = *(_QWORD *)(v110 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B1CD9D30((uint64_t *)v462, v207);
  swift_release();
  v230 = v153;
  sub_1B1CD08C8(*(uint64_t *)&v462[0], 2u, v384, v207, v383, v419, v153 | (unint64_t)(v411 << 32));
  swift_release();
  if ((v384 & 1) != 0)
  {
    v231 = swift_retain();
    sub_1B1E56D20(v231, 0xFFFFFFFFuLL, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, v419, v153 | (unint64_t)(v411 << 32), 2u, (uint64_t)&v441);
    inited = type metadata accessor for ParticlePostInitGPUSystem();
    v233 = qword_1EEF5DE10;
    v234 = (_OWORD *)swift_allocObject();
    v235 = v446;
    v234[5] = v445;
    v234[6] = v235;
    v236 = v448;
    v234[7] = v447;
    v234[8] = v236;
    v237 = v442;
    v234[1] = v441;
    v234[2] = v237;
    v238 = v444;
    v234[3] = v443;
    v234[4] = v238;
    sub_1B1BEE528((uint64_t)&v441);
    sub_1B204C9A0(inited, (uint64_t)&off_1E63B07D0, v233, v416, 1, v419, (uint64_t)sub_1B1CDB820, (uint64_t)v234);
    swift_release();
    sub_1B1B4F21C((uint64_t)&v441);
    v239 = v395;
    v240 = sub_1B1CD07A0((uint64_t)&type metadata for PointCacheSpawner, (uint64_t)&off_1E638F6B8, *(_QWORD *)v395, v207);
    if ((v241 & 1) == 0)
    {
      v242 = v240;
      v243 = swift_conformsToProtocol2();
      if (v243)
      {
        v244 = v243;
        v245 = swift_retain();
        sub_1B1E56D20(v245, v242, (uint64_t)&type metadata for PointCacheSpawner, v244, v419, v153 | (unint64_t)(v411 << 32), 2u, (uint64_t)v451);
        v246 = type metadata accessor for PointCacheSpawner.GPUSystem();
        v247 = qword_1EEF5DE10;
        v248 = swift_allocObject();
        v249 = v454;
        *(_OWORD *)(v248 + 104) = v453;
        *(_OWORD *)(v248 + 120) = v249;
        v250 = v456;
        *(_OWORD *)(v248 + 136) = v455;
        *(_OWORD *)(v248 + 152) = v250;
        v251 = v451[1];
        *(_OWORD *)(v248 + 40) = v451[0];
        *(_OWORD *)(v248 + 56) = v251;
        v252 = v452;
        *(_OWORD *)(v248 + 72) = v451[2];
        *(_QWORD *)(v248 + 16) = v383;
        *(_QWORD *)(v248 + 24) = v419;
        *(_BYTE *)(v248 + 32) = 2;
        *(_OWORD *)(v248 + 88) = v252;
        swift_retain();
        sub_1B1BEE528((uint64_t)v451);
        sub_1B204C9A0(v246, (uint64_t)&off_1E638F628, v247, v416, 1, v419, (uint64_t)sub_1B1CDBFA8, v248);
        goto LABEL_205;
      }
LABEL_231:
      __break(1u);
LABEL_232:
      __break(1u);
LABEL_233:
      __break(1u);
LABEL_234:
      __break(1u);
LABEL_235:
      __break(1u);
      goto LABEL_236;
    }
  }
  else
  {
    v239 = v395;
    if (*(_BYTE *)(v395 + 77) == 1)
    {
      v253 = swift_conformsToProtocol2();
      if (!v253)
        goto LABEL_232;
      v254 = v253;
      v255 = swift_retain();
      sub_1B1E56D20(v255, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleGenerateGrid, v254, v419, v153 | (unint64_t)(v411 << 32), 2u, (uint64_t)v451);
      v256 = type metadata accessor for ParticleGenerateGrid.System();
      v257 = swift_allocObject();
      v441 = v452;
      v442 = v453;
      *(_QWORD *)&v443 = v454;
      sub_1B1E40AF4(1, (uint64_t)v449);
      v258 = v449[1];
      *(_OWORD *)(v257 + 16) = v449[0];
      *(_OWORD *)(v257 + 32) = v258;
      *(_QWORD *)(v257 + 48) = v450;
      v259 = sub_1B1E532D4(v451, v256, (uint64_t)&off_1E639C168);
      sub_1B2050DA0(v257, (uint64_t)v259, v260, qword_1EEF5DE10, v416, 1, v419, v414, v256, (uint64_t)&off_1E639C190);
      swift_release();
LABEL_205:
      swift_release();
      sub_1B1B4F21C((uint64_t)v451);
      v239 = v395;
    }
  }
  *(_QWORD *)&v462[0] = *(_QWORD *)(v239 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B1CD9D30((uint64_t *)v462, v418);
  swift_release();
  v261 = HIDWORD(v382) & 1;
  sub_1B1CD08C8(*(uint64_t *)&v462[0], 3u, v384, v418, v383, v419, v230 | (v411 << 32));
  swift_release();
  if ((*(_BYTE *)(v239 + 76) & 1) != 0)
  {
    v262 = swift_conformsToProtocol2();
    v263 = v262;
    if (v384)
    {
      if (!v262)
        goto LABEL_233;
      v264 = swift_retain();
      sub_1B1E56D20(v264, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrate, v263, v419, v230 | (v411 << 32), 3u, (uint64_t)v462);
      v265 = type metadata accessor for ParticleIntegrate.GPUSystem();
      v266 = qword_1EEF5DE18;
      v267 = swift_allocObject();
      v268 = v462[5];
      *(_OWORD *)(v267 + 104) = v462[4];
      *(_OWORD *)(v267 + 120) = v268;
      v269 = v462[7];
      *(_OWORD *)(v267 + 136) = v462[6];
      *(_OWORD *)(v267 + 152) = v269;
      v270 = v462[1];
      *(_OWORD *)(v267 + 40) = v462[0];
      *(_OWORD *)(v267 + 56) = v270;
      v271 = v462[3];
      *(_OWORD *)(v267 + 72) = v462[2];
      *(_QWORD *)(v267 + 16) = v383;
      *(_QWORD *)(v267 + 24) = v419;
      *(_BYTE *)(v267 + 32) = 3;
      *(_OWORD *)(v267 + 88) = v271;
      swift_retain();
      sub_1B1BEE528((uint64_t)v462);
      sub_1B204C9A0(v265, (uint64_t)&off_1E638E368, v266, v416, 1, v419, (uint64_t)sub_1B1CDB808, v267);
      swift_release();
      sub_1B1B4F21C((uint64_t)v462);
      v272 = v395;
      if ((*(_BYTE *)(v395 + 42) & 1) == 0)
        goto LABEL_224;
LABEL_220:
      v295 = sub_1B1A11FDC((uint64_t)&type metadata for LocalAABB);
      if ((v296 & 1) == 0)
      {
        v297 = (_OWORD *)(v295 + 32 * v309);
        *v297 = xmmword_1B2244E20;
        v297[1] = xmmword_1B228C2F0;
      }
      goto LABEL_224;
    }
    if (!v262)
      goto LABEL_234;
    v273 = swift_retain();
    sub_1B1E56D20(v273, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrate, v263, v419, v230 | (v411 << 32), 3u, (uint64_t)v457);
    v274 = type metadata accessor for ParticleIntegrate.System();
    swift_allocObject();
    sub_1B1BEE528((uint64_t)v457);
    v275 = sub_1B1F41FB4((uint64_t)v457);
    v276 = sub_1B1E532D4(v457, v274, (uint64_t)&off_1E638E2F8);
    sub_1B2050DA0(v275, (uint64_t)v276, v277, qword_1EEF5DE18, v416, 1, v419, v414, v274, (uint64_t)&off_1E638E320);
    swift_release();
    swift_release();
    sub_1B1B4F21C((uint64_t)v457);
    swift_retain();
    LOBYTE(v275) = sub_1B1E36538((uint64_t)&type metadata for AngularVelocity);
    swift_release();
    if ((v275 & 1) != 0)
    {
      v278 = swift_conformsToProtocol2();
      if (!v278)
        goto LABEL_238;
      v279 = v278;
      v280 = swift_retain();
      sub_1B1E56D20(v280, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrateOrientation, v279, v419, v230 | (v411 << 32), 3u, (uint64_t)v458);
      v281 = type metadata accessor for ParticleIntegrateOrientation.System();
      v282 = swift_allocObject();
      v477 = *(_OWORD *)&v458[11];
      v478 = *(_OWORD *)&v458[13];
      v479 = v458[15];
      sub_1B19EF994((uint64_t)v459);
      v283 = v459[1];
      *(_OWORD *)(v282 + 16) = v459[0];
      *(_OWORD *)(v282 + 32) = v283;
      *(_QWORD *)(v282 + 48) = v460;
      v284 = sub_1B1E532D4(v458, v281, (uint64_t)&off_1E63B4888);
      v261 = HIDWORD(v382) & 1;
      sub_1B2050DA0(v282, (uint64_t)v284, v285, qword_1EEF5DE18, v416, 1, v419, v414, v281, (uint64_t)&off_1E63B48B0);
      swift_release();
      swift_release();
      sub_1B1B4F21C((uint64_t)v458);
    }
    swift_retain();
    v286 = sub_1B1E36538((uint64_t)&type metadata for ParticleAngleVelocity);
    swift_release();
    if (v286)
    {
      v287 = swift_conformsToProtocol2();
      if (!v287)
        goto LABEL_239;
      v288 = v287;
      v289 = swift_retain();
      sub_1B1E56D20(v289, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleIntegrateAngle, v288, v419, v230 | (v261 << 32), 3u, (uint64_t)v461);
      v290 = type metadata accessor for ParticleIntegrateAngle.System();
      v291 = swift_allocObject();
      v474 = *(_OWORD *)&v461[11];
      v475 = *(_OWORD *)&v461[13];
      v476 = v461[15];
      sub_1B19F13C8((uint64_t)v472);
      v292 = v472[1];
      *(_OWORD *)(v291 + 16) = v472[0];
      *(_OWORD *)(v291 + 32) = v292;
      *(_QWORD *)(v291 + 48) = v473;
      v293 = sub_1B1E532D4(v461, v290, (uint64_t)&off_1E63A86A8);
      sub_1B2050DA0(v291, (uint64_t)v293, v294, qword_1EEF5DE18, v416, 1, v419, v414, v290, (uint64_t)&off_1E63A86D0);
      swift_release();
      swift_release();
      sub_1B1B4F21C((uint64_t)v461);
    }
  }
  v272 = v395;
  if ((*(_BYTE *)(v395 + 42) & 1) == 0)
    goto LABEL_224;
  if (v384)
    goto LABEL_220;
  v298 = swift_conformsToProtocol2();
  if (!v298)
    goto LABEL_235;
  v299 = v298;
  v300 = swift_retain();
  sub_1B1E56D20(v300, 0xFFFFFFFFuLL, (uint64_t)&type metadata for ParticleUpdateAABB, v299, v419, v230 | (v261 << 32), 3u, (uint64_t)v462);
  updated = type metadata accessor for ParticleUpdateAABB.System();
  v302 = swift_allocObject();
  v303 = sub_1B1E532D4(v462, updated, (uint64_t)&off_1E6395128);
  sub_1B2050DA0(v302, (uint64_t)v303, v304, qword_1EEF5DE18, v416, 1, v419, v414, updated, (uint64_t)&off_1E6395150);
  swift_release();
  swift_release();
  sub_1B1B4F21C((uint64_t)v462);
LABEL_224:
  v420[0] = *(_QWORD *)(v272 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B1CD9D30(v420, v418);
  swift_release();
  sub_1B1CD08C8(v420[0], 4u, 0, v418, v383, v419, v230 | (v261 << 32));
  swift_release();
  if ((v384 & 1) != 0)
  {
    if (v383)
    {
      v305 = *(unsigned __int8 *)(v418 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare);
      v306 = swift_retain();
      sub_1B2042620(v306, v305);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release_n();
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1B1CCF894(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL4 v40;
  BOOL v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  uint64_t v52;
  uint64_t i;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  BOOL v58;
  int v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  unsigned int *v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  __int16 v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __int128 v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  int *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  __int128 v116;
  uint64_t v117;
  int v118;
  unint64_t v119;
  unint64_t v120;

  v118 = a2;
  sub_1B1B1F358();
  v102 = v11;
  MEMORY[0x1E0C80A78](v11, v12);
  v101 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1B222820C();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100, v14);
  v98 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v117 = a4;
    v94 = a5;
    v93 = HIDWORD(a5);
    v17 = a6 + 16;
    v18 = (_QWORD *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v95 = a1;
    v19 = a1 + 32;
    swift_bridgeObjectRetain();
    v21 = 0;
    v109 = 0;
    v22 = 12;
    v97 = 0x80000001B2338420;
    *((_QWORD *)&v23 + 1) = 2;
    v96 = xmmword_1B226D240;
    v108 = a3;
    v112 = v16;
    v113 = a6 + 16;
    v115 = v18;
    v110 = v19;
    while (1)
    {
      *(_QWORD *)&v23 = *(_QWORD *)(v19 + 8 * v21);
      v24 = v23;
      v25 = DWORD1(v23);
      v26 = (_DWORD)v23 == -1 && DWORD1(v23) == 0;
      v27 = v26;
      if (v26)
        goto LABEL_94;
      v28 = *(_QWORD *)(v19 + 8 * v21);
      if ((v23 & 0x80000000) == 0 && v18[1] > (int)v23)
      {
        v29 = *v18;
        if (DWORD1(v23) == -1 || *(_DWORD *)(*v18 + (int)v23 * (uint64_t)v22 + 8) == DWORD1(v23))
        {
          v31 = v27;
          v116 = v23;
          v32 = DWORD1(v23);
          v33 = (int *)(v29 + (int)v23 * (uint64_t)v22);
          v34 = *((__int16 *)v33 + 2);
          v35 = *(_QWORD **)(*(_QWORD *)(a3 + 136) + 8 * *v33 + 32);
          v36 = *(unsigned __int8 *)(v35[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
          v37 = swift_retain();
          if (v36 == 4)
          {
            v38 = *(_BYTE *)(v37 + 225);
            v39 = *(_QWORD *)(v37 + 216);
            swift_release();
            v40 = v39 > 1;
            v41 = v39 <= 0;
            v19 = v110;
            v42 = !v41;
            if ((v38 & 1) == 0)
              v40 = v42;
          }
          else
          {
            swift_release();
            v40 = 1;
          }
          v18 = v115;
          v22 = 12;
          v25 = v32;
          v23 = v116;
          v27 = v31;
          v16 = v112;
          v17 = v113;
          v43 = v35[24];
          if (v43)
          {
            if ((*(_QWORD *)(v43 + 8 * (v34 >> 6)) & (1 << v34)) == 0)
              v40 = 0;
            if (v40)
              *(_QWORD *)(v35[26] + 8 * (v34 >> 6)) |= 1 << v34;
          }
        }
      }
      if ((v24 & 0x80000000) != 0 || (v44 = v18[1], v44 <= (int)v24))
      {
LABEL_66:
        if ((v24 & 0x80000000) != 0)
          goto LABEL_94;
        goto LABEL_67;
      }
      if ((_DWORD)v25 != -1 && *(_DWORD *)(*v18 + v28 * (uint64_t)v22 + 8) != (_DWORD)v25)
        goto LABEL_56;
      v46 = *(_QWORD *)(*(_QWORD *)(a3 + 80) + 8 * *(__int16 *)(*v18 + v28 * (uint64_t)v22 + 6) + 32);
      v47 = *(_QWORD *)(*(_QWORD *)(v46 + 16) + 32);
      v48 = *(_QWORD *)(v47 + 16);
      if (!v48)
      {
        v17 = v113;
LABEL_56:
        if (v44 <= (int)v24)
          goto LABEL_94;
        goto LABEL_68;
      }
      v111 = v27;
      v116 = v23;
      v114 = v25;
      swift_retain();
      swift_retain();
      v49 = 0;
      v50 = 0;
      v51 = 0;
      v52 = v47 + 40;
      v107 = v46;
      v104 = v47 + 40;
      v105 = v47;
LABEL_39:
      v106 = v50;
      for (i = v52 + 16 * v49++; ; i += 16)
      {
        v54 = *(_QWORD *)(i - 8);
        v55 = *(_QWORD *)(*(_QWORD *)i + 8);
        v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 48))(v54, v55);
        if ((v51 & 1) == 0)
        {
          v51 = v56;
          if (v118 != 4)
            goto LABEL_40;
          goto LABEL_46;
        }
        if (v118 != 4)
          break;
        v51 = 1;
LABEL_46:
        if (v117)
        {
          v57 = swift_retain();
          v58 = sub_1B1BA5848(v57, v54, v55);
          swift_release();
          if (!v58)
          {
            v50 = 1;
            v52 = v104;
            if (v48 != v49)
              goto LABEL_39;
            swift_release();
            swift_release();
            goto LABEL_54;
          }
        }
LABEL_40:
        if (v48 == v49)
        {
          swift_release();
          swift_release();
          if ((v106 & 1) != 0)
          {
LABEL_54:
            a3 = v108;
            v16 = v112;
            v17 = v113;
            v18 = v115;
            v19 = v110;
            v22 = 12;
            goto LABEL_3;
          }
          v17 = v113;
          v18 = v115;
          v19 = v110;
          v22 = 12;
          if ((v51 & 1) != 0)
            goto LABEL_62;
          a3 = v108;
          v16 = v112;
          v25 = v114;
LABEL_65:
          v23 = v116;
          v27 = v111;
          goto LABEL_66;
        }
LABEL_41:
        ++v49;
      }
      if (v48 != v49)
      {
        v51 = 1;
        goto LABEL_41;
      }
      swift_release();
      swift_release();
      v17 = v113;
      v18 = v115;
      v19 = v110;
      v22 = 12;
      if ((v106 & 1) != 0)
      {
        a3 = v108;
        v16 = v112;
        goto LABEL_3;
      }
LABEL_62:
      v25 = v114;
      if ((_DWORD)v24 == (_DWORD)v94 && (_DWORD)v114 == (_DWORD)v93)
      {
        a3 = v108;
        v16 = v112;
        goto LABEL_65;
      }
      a3 = v108;
      v23 = v116;
      v27 = v111;
      if (v18[1] > (int)v24)
      {
        v87 = *v18;
        if ((_DWORD)v114 == -1 || *(_DWORD *)(v87 + 12 * v28 + 8) == (_DWORD)v114)
        {
          v88 = (int *)(v87 + 12 * v28);
          v89 = *(_QWORD *)(*(_QWORD *)(v108 + 136) + 8 * *v88 + 32);
          v90 = *((_WORD *)v88 + 2);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v89 + 344));
          v91 = v109;
          sub_1B1C0B490(v89, v90, v94, a3, v24 | (v114 << 32));
          v109 = v91;
          v18 = v115;
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v89 + 344));
          v27 = v111;
          v23 = v116;
          v25 = v114;
          v22 = 12;
        }
      }
      v16 = v112;
      if ((v24 & 0x80000000) != 0)
      {
LABEL_94:
        *(double *)&v23 = MEMORY[0x1E0C80A78](v27, v20);
        *(&v92 - 4) = v17;
        *(&v92 - 3) = v23;
        *(&v92 - 2) = a3;
        if (!v82 && (v24 & 0x80000000) == 0 && v18[1] > (int)v24)
        {
          v83 = *(unsigned int *)(*v18 + (int)v24 * (uint64_t)v22 + 8);
          if (v81 == -1 || (_DWORD)v83 == v81)
          {
            v85 = (unsigned int *)(*v18 + (int)v24 * (uint64_t)v22);
            v86 = v109;
            sub_1B1FE4FDC(*(_QWORD *)(*(_QWORD *)(a3 + 136) + 8 * (int)*v85 + 32), a3, *v85 | ((unint64_t)*((unsigned __int16 *)v85 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v85 + 2) << 32), v83, (void (*)(_BYTE *))sub_1B1CDB85C, (uint64_t)(&v92 - 6));
            v22 = 12;
            v109 = v86;
            v18 = v115;
          }
        }
        goto LABEL_3;
      }
LABEL_67:
      if (v18[1] <= (int)v24)
        goto LABEL_94;
LABEL_68:
      if ((_DWORD)v25 == -1 || *(_DWORD *)(*v18 + v28 * (uint64_t)v22 + 8) == (_DWORD)v25)
      {
        v60 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 136) + 8 * *(int *)(*v18 + v28 * (uint64_t)v22) + 32)
                                 + 120);
        if ((v24 & 0x80000000) == 0)
          goto LABEL_76;
LABEL_85:
        v68 = v60;
        goto LABEL_93;
      }
      v60 = 1;
      if ((v24 & 0x80000000) != 0)
        goto LABEL_85;
LABEL_76:
      v61 = *v18 + v28 * (uint64_t)v22;
      if ((_DWORD)v25 != -1 && *(_DWORD *)(v61 + 8) != (_DWORD)v25)
        goto LABEL_85;
      v63 = *(_QWORD *)(*(_QWORD *)(a3 + 136) + 8 * *(int *)(*v18 + v28 * (uint64_t)v22) + 32);
      v64 = *(_QWORD *)(v63 + 48);
      v65 = *(_QWORD *)(v64 + 16);
      if (!v65)
        goto LABEL_85;
      v66 = *(__int16 *)(v61 + 4);
      v67 = (_QWORD *)(v64 + 56);
      while ((ValueMetadata *)*(v67 - 3) != &type metadata for SetActive)
      {
        v67 += 5;
        if (!--v65)
          goto LABEL_85;
      }
      v68 = *(unsigned __int8 *)(*(_QWORD *)(v63 + 128) + *v67 + v66);
      if (v60 != v68)
      {
        v106 = v68;
        LODWORD(v107) = v60;
        v111 = v27;
        v116 = v23;
        v114 = v25;
        if (qword_1ED4BF430 != -1)
          swift_once();
        v119 = 0;
        v120 = 0xE000000000000000;
        v105 = qword_1ED4D0FB0;
        swift_retain();
        sub_1B2229430();
        swift_bridgeObjectRelease();
        v119 = 0xD000000000000021;
        v120 = v97;
        sub_1B1DA5AB0(v24 | (v114 << 32));
        sub_1B2228890();
        swift_bridgeObjectRelease();
        v69 = v119;
        v70 = v120;
        v71 = sub_1B2228E90();
        if (qword_1ED4BF658 != -1)
          swift_once();
        v72 = qword_1ED4D0FD0;
        v73 = qword_1ED4BF688;
        swift_retain();
        if (v73 != -1)
          swift_once();
        sub_1B1CC6310(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = v96;
        *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v74 + 64) = sub_1B1B1F47C();
        *(_QWORD *)(v74 + 32) = v69;
        *(_QWORD *)(v74 + 40) = v70;
        swift_bridgeObjectRetain();
        sub_1B222835C();
        swift_bridgeObjectRelease();
        swift_retain();
        v103 = v69;
        v104 = v72;
        v75 = v98;
        sub_1B2228200();
        v76 = v102[12];
        v77 = v102[16];
        v78 = v71;
        v79 = (uint64_t)v101;
        v80 = &v101[v102[20]];
        (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v101, v75, v100);
        *(_BYTE *)(v79 + v76) = v78;
        *(_QWORD *)(v79 + v77) = 0;
        *(_QWORD *)v80 = v103;
        *((_QWORD *)v80 + 1) = v70;
        swift_bridgeObjectRetain();
        sub_1B2228428();
        swift_release();
        sub_1B1A04628(v79, (uint64_t (*)(_QWORD))sub_1B1B1F358);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        a3 = v108;
        v16 = v112;
        v17 = v113;
        v18 = v115;
        v19 = v110;
        v22 = 12;
        *((_QWORD *)&v23 + 1) = *((_QWORD *)&v116 + 1);
        v27 = v111;
        v68 = v106;
        v60 = v107;
      }
LABEL_93:
      if ((v60 | v68) == 1)
        goto LABEL_94;
LABEL_3:
      if (++v21 == v16)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B1CD0204(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a1[3];
  v7 = a1[4];
  sub_1B19FA070(a1, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(a3, a4, v6, v7);
  sub_1B1CD0274(v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CD0274(uint64_t result)
{
  char **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = result + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = *v1;
    do
    {
      v6 = *((_QWORD *)v5 + 2);
      if (v6)
      {
        v7 = 32;
        v8 = *((_QWORD *)v5 + 2);
        while (*(_QWORD *)&v5[v7] != *(_QWORD *)(v3 + 16 * v4))
        {
          v7 += 16;
          if (!--v8)
            goto LABEL_9;
        }
      }
      else
      {
LABEL_9:
        v13 = *(_OWORD *)(v3 + 16 * v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1B1C62F18(0, v6 + 1, 1, v5);
        v10 = *((_QWORD *)v5 + 2);
        v9 = *((_QWORD *)v5 + 3);
        v11 = v13;
        if (v10 >= v9 >> 1)
        {
          v12 = sub_1B1C62F18(v9 > 1, v10 + 1, 1, v5);
          v11 = v13;
          v5 = v12;
        }
        *((_QWORD *)v5 + 2) = v10 + 1;
        *(_OWORD *)&v5[16 * v10 + 32] = v11;
        *v1 = v5;
      }
      ++v4;
    }
    while (v4 != v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1CD039C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  int *i;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  for (i = (int *)(a1 + 36); ; i += 2)
  {
    v6 = *(i - 1);
    v7 = *i;
    if (((_DWORD)v6 != -1 || v7 != 0) && (v6 & 0x80000000) == 0 && v4[1] > v6)
    {
      v9 = *v4;
      if ((v7 == -1 || *(_DWORD *)(v9 + 12 * (int)v6 + 8) == v7)
        && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)v6) + 32) + 120) == 1)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 80) + 8 * *(__int16 *)(v9 + 12 * (int)v6 + 6) + 32) + 16);
        v11 = *(_QWORD *)(v10 + 128);
        if (*(_QWORD *)(v11 + 16))
        {
          v12 = sub_1B1DC3AC8((uint64_t)&type metadata for ParticleSubSpawn);
          if ((v13 & 1) != 0
            && *(ValueMetadata **)(*(_QWORD *)(v10 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12) + 32) == &type metadata for ParticleSubSpawn)
          {
            break;
          }
        }
      }
    }
    if (!--v2)
      return 0;
  }
  return 1;
}

uint64_t sub_1B1CD04BC(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, __int128 *a8)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  void *v21;
  void *v22;
  void (*v23)(__int128 *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void (*v30)(__int128 *, uint64_t, uint64_t);
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v8 = a8[5];
  v53 = a8[4];
  v54 = v8;
  v9 = a8[7];
  v55 = a8[6];
  v56 = v9;
  v10 = a8[1];
  v49 = *a8;
  v50 = v10;
  v11 = a8[3];
  v51 = a8[2];
  v52 = v11;
  if (a5)
  {
    if (a4)
    {
      if (a4 == 3)
      {
        v16 = result;
        swift_retain();
        if ((sub_1B1FE073C(a6, v16, a7) & 1) == 0)
          return swift_release();
        ObjectType = swift_getObjectType();
        result = swift_conformsToProtocol2();
        if (result)
        {
          v18 = result;
          v19 = *(_QWORD *)(result + 8);
          v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
          swift_unknownObjectRetain();
          v20(ObjectType, v19);
          sub_1B2229454();
          v21 = (void *)sub_1B1BA669C(0x657475706D6F43, 0xE700000000000000, 0);
          v22 = (void *)sub_1B2228728();
          objc_msgSend(v21, sel_pushDebugGroup_, v22);

          *(_QWORD *)&v31 = v21;
          *((_QWORD *)&v31 + 1) = a5;
          v36 = v53;
          v37 = v54;
          v38 = v55;
          v39 = v56;
          v32 = v49;
          v33 = v50;
          v34 = v51;
          v35 = v52;
          v47 = v55;
          v48 = v56;
          v45 = v53;
          v46 = v54;
          v43 = v51;
          v44 = v52;
          v41 = v49;
          v42 = v50;
          v40 = v31;
          v23 = *(void (**)(__int128 *, uint64_t, uint64_t))(v18 + 16);
          swift_retain();
          sub_1B1BEE528((uint64_t)a8);
          swift_unknownObjectRetain();
          v23(&v40, ObjectType, v18);
          sub_1B1B1FC88((uint64_t)&v31);
          objc_msgSend(v21, sel_popDebugGroup);
          swift_bridgeObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          return swift_unknownObjectRelease();
        }
        goto LABEL_12;
      }
    }
    else
    {
      v24 = swift_getObjectType();
      result = swift_conformsToProtocol2();
      if (!result)
      {
        __break(1u);
LABEL_12:
        __break(1u);
        return result;
      }
      v25 = result;
      *(_QWORD *)&v31 = 0;
      *((_QWORD *)&v31 + 1) = a5;
      v26 = a8[5];
      v36 = a8[4];
      v37 = v26;
      v27 = a8[7];
      v38 = a8[6];
      v39 = v27;
      v28 = a8[1];
      v32 = *a8;
      v33 = v28;
      v29 = a8[3];
      v34 = a8[2];
      v35 = v29;
      v42 = v28;
      v43 = v34;
      v40 = v31;
      v41 = v32;
      v47 = v38;
      v48 = v27;
      v45 = v36;
      v46 = v26;
      v44 = v29;
      v30 = *(void (**)(__int128 *, uint64_t, uint64_t))(result + 16);
      swift_retain_n();
      swift_unknownObjectRetain();
      sub_1B1BEE528((uint64_t)a8);
      v30(&v40, v24, v25);
      swift_unknownObjectRelease();
      swift_release();
      return sub_1B1B1FC88((uint64_t)&v31);
    }
  }
  return result;
}

unint64_t sub_1B1CD07A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  v7 = (uint64_t *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v8 = a3 + 32;
  while (1)
  {
    v9 = (unsigned int *)(v8 + 8 * v6);
    v10 = *v9;
    v11 = v9[1];
    v12 = v10 == -1 && (_DWORD)v11 == 0;
    if (!v12 && (v10 & 0x80000000) == 0 && v7[1] > (int)v10)
    {
      v13 = *v7;
      if (((_DWORD)v11 == -1 || *(_DWORD *)(*v7 + 12 * (int)v10 + 8) == (_DWORD)v11)
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a4 + 136) + 8 * *(int *)(v13 + 12 * (int)v10) + 32) + 120) & 1) != 0)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 80)
                                                + 8 * *(__int16 *)(v13 + 12 * (int)v10 + 6)
                                                + 32)
                                    + 16)
                        + 32);
        v16 = *(_QWORD *)(v15 + 16);
        if (v16)
          break;
      }
    }
LABEL_4:
    if (++v6 == v4)
      return 0;
  }
  v17 = 0;
  v18 = 0;
  v19 = v15 + 32;
  while (2)
  {
    v20 = (_QWORD *)(v19 + 16 * v17);
    while (1)
    {
      v21 = v17 + 1;
      if (*v20 == a1)
        break;
      v20 += 2;
      ++v17;
      if (v16 == v21)
      {
        if ((v18 & 1) == 0)
          goto LABEL_4;
        return v10 | ((unint64_t)v11 << 32);
      }
    }
    v18 = 1;
    v12 = v16 - 1 == v17++;
    if (!v12)
      continue;
    return v10 | (unint64_t)(v11 << 32);
  }
}

uint64_t sub_1B1CD08C8(uint64_t result, unsigned __int8 a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_OWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  BOOL v50;
  unsigned __int8 v52;
  _OWORD v53[8];
  char v54[136];

  v7 = *(_QWORD *)(result + 16);
  if (!v7)
    return result;
  v10 = a4;
  v12 = (_QWORD *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v13 = result + 32;
  v15 = a2 != 4 || a5 == 0;
  v50 = v15;
  v47 = a7;
  swift_bridgeObjectRetain();
  v16 = v13;
  v17 = 0;
  v45 = a2;
  v52 = a2;
  v46 = a2;
  v49 = v10;
  v43 = v12;
  v44 = v7;
  v42 = v16;
  while (1)
  {
    v18 = (unsigned int *)(v16 + 8 * v17);
    v20 = *v18;
    v19 = v18[1];
    v21 = v20 == -1 && (_DWORD)v19 == 0;
    if (!v21 && (v20 & 0x80000000) == 0 && v12[1] > (int)v20)
    {
      v22 = *v12;
      if (((_DWORD)v19 == -1 || *(_DWORD *)(*v12 + 12 * (int)v20 + 8) == (_DWORD)v19)
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 136) + 8 * *(int *)(v22 + 12 * (int)v20) + 32) + 120) & 1) != 0)
      {
        v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 80)
                                                + 8 * *(__int16 *)(v22 + 12 * (int)v20 + 6)
                                                + 32)
                                    + 16)
                        + 32);
        v25 = *(_QWORD *)(v24 + 16);
        if (v25)
          break;
      }
    }
LABEL_10:
    if (++v17 == v7)
      return swift_bridgeObjectRelease();
  }
  v48 = v20 | (unint64_t)(v19 << 32);
  swift_retain();
  swift_retain();
  v26 = v24 + 40;
  while (1)
  {
    v27 = *(_QWORD *)(v26 - 8);
    if (!v50)
    {
      v28 = *(_QWORD *)(*(_QWORD *)v26 + 8);
      v29 = swift_retain();
      LOBYTE(v28) = sub_1B1BA5848(v29, v27, v28);
      swift_release();
      if ((v28 & 1) == 0)
        goto LABEL_25;
    }
    if ((a3 & 1) != 0)
    {
      type metadata accessor for GraphScript(0);
      if (!swift_dynamicCastMetatype())
        break;
    }
    v30 = swift_conformsToProtocol2();
    if (v30)
      v31 = v30;
    else
      v31 = 0;
    if (!v30)
      v27 = 0;
    if (v27)
    {
      result = swift_conformsToProtocol2();
      if (result)
      {
        v32 = result;
        v33 = swift_retain();
        sub_1B1E56D20(v33, v48, v27, v32, a6, v47 | ((HIDWORD(a7) & 1) << 32), v52, (uint64_t)v53);
        v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v27, v31);
        v36 = v35;
        v37 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v35 + 16);
        sub_1B1BEE528((uint64_t)v53);
        v37(v53, v34, v36);
        sub_1B1E532D4(v53, v34, v36);
        __asm { BR              X9 }
      }
      __break(1u);
      goto LABEL_49;
    }
LABEL_25:
    v26 += 16;
    if (!--v25)
    {
      swift_release();
      swift_release();
      v10 = v49;
      v12 = v43;
      v7 = v44;
      v16 = v42;
      goto LABEL_10;
    }
  }
  v38 = swift_conformsToProtocol2();
  if (v38)
    v39 = v38;
  else
    v39 = 0;
  if (!v38)
    v27 = 0;
  if (!v27)
    goto LABEL_25;
  result = swift_conformsToProtocol2();
  if (result)
  {
    v40 = result;
    v41 = swift_retain();
    sub_1B1E56D20(v41, v48, v27, v40, a6, v47 | ((HIDWORD(a7) & 1) << 32), v52, (uint64_t)v54);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v27, v39);
    __asm { BR              X9 }
  }
LABEL_49:
  __break(1u);
  return result;
}

void sub_1B1CD0DCC()
{
  sub_1B2229688();
  __break(1u);
  JUMPOUT(0x1B1CD0E0CLL);
}

uint64_t sub_1B1CD0E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _QWORD v7[6];
  int v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v7[5] = qword_1ED4D09F8;
  v8 = 0;
  v9 = 2;
  v10 = 0;
  v11 = 2;
  v12 = 0;
  swift_retain();
  sub_1B1E3D7C4(1, (uint64_t)v7);
  swift_release();
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  v3 = sub_1B204D6E4();
  v4 = v7[0];
  v5 = *(os_unfair_lock_s **)(v2 + 40);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1B1E8F784(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v3, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 40));
  sub_1B19ED720((uint64_t)v7);
  sub_1B19ED720((uint64_t)v7);
  swift_getObjectType();
  return sub_1B204D6E4();
}

uint64_t *sub_1B1CD0F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  int v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  char v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  os_unfair_lock_s *v83;
  int v84;
  int v85;
  __int128 v86;
  uint64_t *result;
  uint64_t v88;
  int v89;
  uint64_t v90;
  unsigned int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_unfair_lock_s *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BOOL4 v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BOOL4 v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD v150[5];
  _QWORD v151[5];
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  _OWORD v155[2];
  uint64_t v156;
  _OWORD v157[2];
  uint64_t v158;
  _OWORD v159[2];
  uint64_t v160;
  uint64_t v161;
  int v162;
  char v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  _OWORD v172[2];
  uint64_t v173;
  uint64_t v174[12];
  uint64_t v175[8];
  uint64_t v176[8];
  _OWORD v177[2];
  uint64_t v178;
  char v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  _OWORD v194[2];
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  char v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  _BYTE v212[40];
  _OWORD v213[2];
  uint64_t v214;
  _OWORD v215[2];
  uint64_t v216;
  _BYTE v217[40];
  uint64_t v218;

  v2 = a1;
  v3 = 0;
  v218 = *MEMORY[0x1E0C80C00];
  v4 = *(_OWORD *)(v1 + 56);
  v5 = *(_OWORD *)(v1 + 72);
  v173 = *(_QWORD *)(v1 + 88);
  v172[0] = v4;
  v172[1] = v5;
  sub_1B1E8FCE4(a1, (uint64_t)v172, 0x200000000, v174);
  sub_1B1A18378((uint64_t)v174, (uint64_t)&v201, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (v201)
  {
    v161 = v201;
    v162 = v202;
    v163 = v203;
    v164 = v204;
    v165 = v205;
    v166 = v206;
    v167 = v207;
    v168 = v208;
    v169 = v209;
    v170 = v210;
    v171 = v211;
    sub_1B21873EC((uint64_t)&v161);
    sub_1B19ED748(v174);
  }
  v6 = *(_OWORD *)(v137 + 112);
  v159[0] = *(_OWORD *)(v137 + 96);
  v159[1] = v6;
  v160 = *(_QWORD *)(v137 + 128);
  sub_1B1E8FCE4(v2, (uint64_t)v159, 0x200000000, v175);
  sub_1B1A18378((uint64_t)v175, (uint64_t)v194, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v194[0])
  {
    if (v200 < 1)
      goto LABEL_60;
    v125 = v197;
    if (!v197)
      goto LABEL_60;
    v118 = v2;
    v129 = v199[4];
    v7 = *(unsigned __int8 *)(v198 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v155[0] = v194[0];
    v155[1] = v194[1];
    v156 = v195;
    v121 = (uint64_t)(v199 + 6);
    v122 = v196;
    v140 = v199;
    v142 = v199 + 13;
    v120 = v199 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    v8 = 0;
    v123 = v7;
    while (1)
    {
      v131 = v3;
      v127 = v8;
      v9 = (unsigned int *)(v122 + 48 * v8);
      v10 = *v9;
      v135 = v9[1];
      v12 = (uint64_t *)*((_QWORD *)v9 + 2);
      v11 = *((_QWORD *)v9 + 3);
      v13 = *((_QWORD *)v9 + 5);
      v138 = *((_QWORD *)v9 + 4);
      if (v7)
      {
        v14 = *(os_unfair_lock_s **)(v13 + 376);
        swift_retain();
        os_unfair_lock_lock(v14);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v129);
      sub_1B1A18378(v121, (uint64_t)v217, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
      v15 = v140[4];
      v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v140[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
      v140[7] = v16;
      v120[1] = 0;
      v120[2] = 0;
      *v120 = 0;
      swift_release();
      v17 = v138;
      v144 = sub_1B1A12038((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, v12, v11, v138, (uint64_t)v140);
      v146 = v13;
      v18 = v13;
      if (v12)
      {
        if (v138)
        {
          v19 = 0;
          while (1)
          {
            v20 = v12[v19];
            v21 = v144 + 88 * v19;
            if (*(_BYTE *)(v21 + 56) == 1)
              break;
            v23 = *(unsigned __int8 *)(v21 + 42);
            v22 = *(_QWORD *)(v18 + 40);
            if (v23 == 1)
              goto LABEL_19;
            v29 = *(_QWORD *)(v22 + 16);
            v30 = *(_QWORD *)(v29 + 128);
            if (*(_QWORD *)(v30 + 16))
            {
              v31 = sub_1B1DC3AC8((uint64_t)&type metadata for InverseWorldTransform);
              if ((v32 & 1) != 0
                && *(ValueMetadata **)(*(_QWORD *)(v29 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) + 32) == &type metadata for InverseWorldTransform)
              {
                *(_QWORD *)&v177[0] = &type metadata for InverseWorldTransform;
                *((_QWORD *)&v177[0] + 1) = &off_1E63A3318;
                v179 = 1;
                v33 = *v142;
                if (*(_QWORD *)(*v142 + 16))
                {
                  swift_retain();
                  swift_bridgeObjectRetain();
                  sub_1B1792810(v33 + 32, (uint64_t)&v180, (uint64_t (*)(_QWORD))sub_1B1B1F228);
                  sub_1B1BE90FC((uint64_t)&v180, (uint64_t)&v188);
                  sub_1B1BE90FC((uint64_t)v177, (uint64_t)&v191);
                  __asm { BR              X9 }
                }
                v45 = swift_retain();
                v46 = *(_QWORD *)(v45 + 240) - *(_QWORD *)(v45 + 232);
                v47 = ecs_stack_allocator_allocate(v140[4], 8 * v46, 8);
                *v47 = v20;
                sub_1B1BE90FC((uint64_t)v177, (uint64_t)&v188);
                *(_QWORD *)&v191 = v47;
                *((_QWORD *)&v191 + 1) = v46;
                v192 = 1;
                v37 = (_QWORD *)v140[13];
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v140[13] = v37;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
LABEL_34:
                  v37 = sub_1B1C631A0(0, v37[2] + 1, 1, v37);
                  *v142 = v37;
                }
LABEL_30:
                v40 = v37[2];
                v39 = v37[3];
                if (v40 >= v39 >> 1)
                {
                  v37 = sub_1B1C631A0(v39 > 1, v40 + 1, 1, v37);
                  *v142 = v37;
                }
                v37[2] = v40 + 1;
                v41 = &v37[9 * v40];
                *((_OWORD *)v41 + 2) = v188;
                v42 = v189;
                v43 = v190;
                v44 = v191;
                v41[12] = v192;
                *((_OWORD *)v41 + 4) = v43;
                *((_OWORD *)v41 + 5) = v44;
                *((_OWORD *)v41 + 3) = v42;
                v17 = v138;
                v18 = v146;
                sub_1B1B68F14((uint64_t)v177);
                swift_release();
                goto LABEL_15;
              }
            }
LABEL_14:
            v18 = v146;
LABEL_15:
            if (++v19 == v17)
              goto LABEL_36;
          }
          v22 = *(_QWORD *)(v18 + 40);
LABEL_19:
          v24 = *(_QWORD *)(v22 + 16);
          v25 = *(_QWORD *)(v24 + 128);
          if (!*(_QWORD *)(v25 + 16)
            || (v26 = sub_1B1DC3AC8((uint64_t)&type metadata for InverseWorldTransform), (v27 & 1) == 0)
            || *(ValueMetadata **)(*(_QWORD *)(v24 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26) + 32) != &type metadata for InverseWorldTransform)
          {
            *(_QWORD *)&v177[0] = &type metadata for InverseWorldTransform;
            *((_QWORD *)&v177[0] + 1) = &off_1E63A3318;
            v179 = 0;
            v28 = *v142;
            if (*(_QWORD *)(*v142 + 16))
            {
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1B1792810(v28 + 32, (uint64_t)&v180, (uint64_t (*)(_QWORD))sub_1B1B1F228);
              sub_1B1BE90FC((uint64_t)&v180, (uint64_t)&v188);
              sub_1B1BE90FC((uint64_t)v177, (uint64_t)&v191);
              __asm { BR              X9 }
            }
            v34 = swift_retain();
            v35 = *(_QWORD *)(v34 + 240) - *(_QWORD *)(v34 + 232);
            v36 = ecs_stack_allocator_allocate(v140[4], 8 * v35, 8);
            *v36 = v20;
            sub_1B1BE90FC((uint64_t)v177, (uint64_t)&v188);
            *(_QWORD *)&v191 = v36;
            *((_QWORD *)&v191 + 1) = v35;
            v192 = 1;
            v37 = (_QWORD *)v140[13];
            v38 = swift_isUniquelyReferenced_nonNull_native();
            v140[13] = v37;
            if ((v38 & 1) == 0)
              goto LABEL_34;
            goto LABEL_30;
          }
          goto LABEL_14;
        }
        goto LABEL_36;
      }
      if ((_DWORD)v10 != (_DWORD)v135)
        break;
LABEL_36:
      v3 = v131;
      sub_1B1F05D48(v140, (unsigned __int16 **)v155, (uint64_t)v217);
      sub_1B1F03804((char *)v18);
      ecs_stack_allocator_pop_snapshot(v129);
      v7 = v123;
      if ((v123 & 1) != 0)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
      }
      swift_release();
      v8 = v127 + 1;
      if (v127 + 1 == v125)
      {
        sub_1B19ED748(v175);
        v2 = v118;
LABEL_60:
        sub_1B19ED748(v175);
        goto LABEL_61;
      }
    }
    while (1)
    {
      v49 = v144 + 88 * v10;
      if (*(_BYTE *)(v49 + 56) == 1)
        break;
      v51 = *(unsigned __int8 *)(v49 + 42);
      v50 = *(_QWORD *)(v18 + 40);
      if (v51 == 1)
        goto LABEL_44;
      v57 = *(_QWORD *)(v50 + 16);
      v58 = *(_QWORD *)(v57 + 128);
      if (*(_QWORD *)(v58 + 16))
      {
        v59 = sub_1B1DC3AC8((uint64_t)&type metadata for InverseWorldTransform);
        if ((v60 & 1) != 0
          && *(ValueMetadata **)(*(_QWORD *)(v57 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v59) + 32) == &type metadata for InverseWorldTransform)
        {
          *(_QWORD *)&v177[0] = &type metadata for InverseWorldTransform;
          *((_QWORD *)&v177[0] + 1) = &off_1E63A3318;
          v179 = 1;
          v61 = *v142;
          if (*(_QWORD *)(*v142 + 16))
          {
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1B1792810(v61 + 32, (uint64_t)&v180, (uint64_t (*)(_QWORD))sub_1B1B1F228);
            sub_1B1BE90FC((uint64_t)&v180, (uint64_t)&v188);
            sub_1B1BE90FC((uint64_t)v177, (uint64_t)&v191);
            __asm { BR              X9 }
          }
          goto LABEL_54;
        }
      }
LABEL_39:
      v18 = v13;
LABEL_40:
      if (++v10 == v135)
        goto LABEL_36;
    }
    v50 = *(_QWORD *)(v18 + 40);
LABEL_44:
    v52 = *(_QWORD *)(v50 + 16);
    v53 = *(_QWORD *)(v52 + 128);
    if (!*(_QWORD *)(v53 + 16)
      || (v54 = sub_1B1DC3AC8((uint64_t)&type metadata for InverseWorldTransform), (v55 & 1) == 0)
      || *(ValueMetadata **)(*(_QWORD *)(v52 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v54) + 32) != &type metadata for InverseWorldTransform)
    {
      *(_QWORD *)&v177[0] = &type metadata for InverseWorldTransform;
      *((_QWORD *)&v177[0] + 1) = &off_1E63A3318;
      v179 = 0;
      v56 = *v142;
      if (*(_QWORD *)(*v142 + 16))
      {
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1B1792810(v56 + 32, (uint64_t)&v180, (uint64_t (*)(_QWORD))sub_1B1B1F228);
        sub_1B1BE90FC((uint64_t)&v180, (uint64_t)&v188);
        sub_1B1BE90FC((uint64_t)v177, (uint64_t)&v191);
        __asm { BR              X9 }
      }
LABEL_54:
      v62 = swift_retain();
      v63 = *(_QWORD *)(v62 + 240) - *(_QWORD *)(v62 + 232);
      v64 = ecs_stack_allocator_allocate(v140[4], 8 * v63, 8);
      *v64 = v10;
      sub_1B1BE90FC((uint64_t)v177, (uint64_t)&v188);
      *(_QWORD *)&v191 = v64;
      *((_QWORD *)&v191 + 1) = v63;
      v192 = 1;
      v65 = (_QWORD *)v140[13];
      v66 = swift_isUniquelyReferenced_nonNull_native();
      v140[13] = v65;
      if ((v66 & 1) == 0)
      {
        v65 = sub_1B1C631A0(0, v65[2] + 1, 1, v65);
        *v142 = v65;
      }
      v68 = v65[2];
      v67 = v65[3];
      if (v68 >= v67 >> 1)
      {
        v65 = sub_1B1C631A0(v67 > 1, v68 + 1, 1, v65);
        *v142 = v65;
      }
      v65[2] = v68 + 1;
      v69 = &v65[9 * v68];
      *((_OWORD *)v69 + 2) = v188;
      v70 = v189;
      v71 = v190;
      v72 = v191;
      v69[12] = v192;
      *((_OWORD *)v69 + 4) = v71;
      *((_OWORD *)v69 + 5) = v72;
      *((_OWORD *)v69 + 3) = v70;
      v18 = v13;
      sub_1B1B68F14((uint64_t)v177);
      swift_release();
      goto LABEL_40;
    }
    goto LABEL_39;
  }
LABEL_61:
  v73 = *(_OWORD *)(v137 + 232);
  v215[0] = *(_OWORD *)(v137 + 216);
  v215[1] = v73;
  v216 = *(_QWORD *)(v137 + 248);
  sub_1B1E8FCE4(v2, (uint64_t)v215, 0x200000000, v176);
  sub_1B1A18378((uint64_t)v176, (uint64_t)&v188, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if ((_QWORD)v188)
  {
    if (v193 >= 1)
    {
      v74 = *((_QWORD *)&v191 + 1);
      if (*((_QWORD *)&v191 + 1))
      {
        v119 = v2;
        v132 = v3;
        v75 = *((_QWORD *)&v190 + 1);
        swift_retain();
        swift_retain();
        swift_retain();
        v76 = 48 * v74;
        v77 = (uint64_t *)(v75 + 40);
        do
        {
          v82 = *v77;
          v83 = *(os_unfair_lock_s **)(*v77 + 376);
          swift_retain();
          os_unfair_lock_lock(v83);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v82 + 344));
          v84 = *(_DWORD *)(v82 + 24);
          swift_retain();
          v182 = 0;
          v180 = 0u;
          v181 = 0u;
          v178 = 0;
          memset(v177, 0, sizeof(v177));
          v85 = sub_1B1DA4ED8(v84, 0, 0, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, (uint64_t)&v180, (uint64_t)v177);
          swift_release();
          sub_1B1CC62CC((uint64_t)v177, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
          sub_1B1CC62CC((uint64_t)&v180, (unint64_t *)&qword_1ED4B89E0, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent);
          if (sub_1B1A10B20(v85))
          {
            sub_1B1A10BB0(v85);
          }
          else
          {
            v78 = *(_QWORD *)(v82 + 232);
            v79 = *(_QWORD *)(v82 + 240);
            v80 = *(unsigned __int8 *)(v82 + 120);
            v81 = *(unsigned int *)(v82 + 28);
            LOBYTE(v180) = *(_BYTE *)(v82 + 32);
            sub_1B1FD8C68(v78, v79, v85, v80, v81 | ((unint64_t)v180 << 32), 0, 0, 0);
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v82 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v82 + 376));
          swift_release();
          v77 += 6;
          v76 -= 48;
        }
        while (v76);
        sub_1B19ED748(v176);
        v3 = v132;
        v2 = v119;
      }
    }
    sub_1B19ED748(v176);
  }
  v86 = *(_OWORD *)(v137 + 152);
  v213[0] = *(_OWORD *)(v137 + 136);
  v213[1] = v86;
  v214 = *(_QWORD *)(v137 + 168);
  sub_1B1E8FCE4(v2, (uint64_t)v213, 0x200000000, v177);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v177, (uint64_t)&v180, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if ((_QWORD)v180)
  {
    v152 = v180;
    v153 = v181;
    v154 = v182;
    if (v187 >= 1)
    {
      v136 = v184;
      if (v184)
      {
        v134 = v183;
        v88 = v186[4];
        v145 = v185;
        v89 = *(unsigned __int8 *)(v185 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v126 = (uint64_t)(v186 + 6);
        v143 = v2 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
        v147 = v186;
        v124 = v186 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v90 = 0;
        v128 = v89;
        v130 = v88;
        do
        {
          v133 = v3;
          v91 = (unsigned int *)(v134 + 48 * v90);
          v92 = *v91;
          v139 = v91[1];
          v141 = v90;
          v93 = v91[2];
          v94 = (uint64_t *)*((_QWORD *)v91 + 2);
          v95 = *((_QWORD *)v91 + 3);
          v97 = *((_QWORD *)v91 + 4);
          v96 = *((_QWORD *)v91 + 5);
          if (v89)
          {
            v98 = *(os_unfair_lock_s **)(v96 + 376);
            swift_retain();
            os_unfair_lock_lock(v98);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v96 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v88);
          sub_1B1A18378(v126, (uint64_t)v212, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v99 = v147[4];
          v100 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v96 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v147[6] = ecs_stack_allocator_allocate(v99, 48 * v100, 8);
          v147[7] = v100;
          v124[1] = 0;
          v124[2] = 0;
          *v124 = 0;
          swift_release();
          v101 = sub_1B1A12038((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, v94, v95, v97, (uint64_t)v147);
          v102 = sub_1B1A12038((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, v94, v95, v97, (uint64_t)v147);
          v103 = v102;
          if (v94)
          {
            for (; v97; --v97)
            {
              v105 = *v94++;
              v104 = v105;
              v150[0] = v145;
              v150[1] = v96;
              v150[2] = v147;
              v150[3] = v93;
              v150[4] = v105;
              if (*(_QWORD *)(v143 + 8) == 1 && *(_QWORD *)(v143 + 16) == 0)
              {
                *(_QWORD *)(v103 + 472) = 0;
                *(_QWORD *)(v103 + 480) = 0;
              }
              if (*(_QWORD *)(*(_QWORD *)(v103 + 176) + 16))
              {
                swift_isUniquelyReferenced_nonNull_native();
                v148 = *(_QWORD *)(v103 + 176);
                *(_QWORD *)(v103 + 176) = 0x8000000000000000;
                sub_1B1CDB13C();
                sub_1B2229634();
                *(_QWORD *)(v103 + 176) = v148;
                swift_bridgeObjectRelease();
              }
              *(_QWORD *)(v103 + 200) = 0;
              *(_QWORD *)(v103 + 208) = 0;
              *(_QWORD *)(v103 + 192) = 0;
              swift_unknownObjectRelease();
              if ((*(_BYTE *)(v103 + 272) & 1) == 0)
              {
                *(_QWORD *)(v103 + 288) = 0;
                *(_QWORD *)(v103 + 296) = 0;
                *(_QWORD *)(v103 + 280) = 0;
                swift_unknownObjectRelease();
                *(_QWORD *)(v103 + 304) = 0;
                *(_QWORD *)(v103 + 368) = 0;
                *(_QWORD *)(v103 + 376) = 0;
                *(_QWORD *)(v103 + 360) = 0;
                swift_unknownObjectRelease();
                *(_QWORD *)(v103 + 384) = 0;
                *(_QWORD *)(v103 + 392) = 0;
              }
              *(_QWORD *)(v103 + 112) = 0;
              *(_QWORD *)(v103 + 144) = 0;
              *(_QWORD *)(v103 + 152) = 0;
              *(_QWORD *)(v103 + 136) = 0;
              v107 = 1;
              *(_BYTE *)(v103 + 160) = 1;
              v108 = *(_QWORD *)(v96 + 16);
              v109 = *(unsigned __int8 *)(v108 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
              swift_retain();
              if (v109 == 4)
                v107 = *(_QWORD *)(v108 + 216) > (uint64_t)*(unsigned __int8 *)(v108 + 225);
              swift_retain();
              swift_release();
              v110 = *(_QWORD *)(v96 + 192);
              if (v110 && (*(_QWORD *)(v110 + 8 * (v104 >> 6)) & (1 << v104)) != 0)
              {
                if (v107)
                  *(_QWORD *)(*(_QWORD *)(v96 + 208) + 8 * (v104 >> 6)) |= 1 << v104;
                swift_release();
                sub_1B1CCCD54((uint64_t)v150, v101);
              }
              else
              {
                swift_release();
              }
              v103 += 656;
              v101 += 88;
              ++v93;
            }
          }
          else if ((_DWORD)v92 != (_DWORD)v139)
          {
            v111 = v102 + 656 * v92;
            v112 = v101 + 88 * v92;
            do
            {
              v151[0] = v145;
              v151[1] = v96;
              v151[2] = v147;
              v151[3] = v93;
              v151[4] = v92;
              if (*(_QWORD *)(v143 + 8) == 1 && *(_QWORD *)(v143 + 16) == 0)
              {
                *(_QWORD *)(v111 + 472) = 0;
                *(_QWORD *)(v111 + 480) = 0;
              }
              if (*(_QWORD *)(*(_QWORD *)(v111 + 176) + 16))
              {
                swift_isUniquelyReferenced_nonNull_native();
                v149 = *(_QWORD *)(v111 + 176);
                *(_QWORD *)(v111 + 176) = 0x8000000000000000;
                sub_1B1CDB13C();
                sub_1B2229634();
                *(_QWORD *)(v111 + 176) = v149;
                swift_bridgeObjectRelease();
              }
              *(_QWORD *)(v111 + 200) = 0;
              *(_QWORD *)(v111 + 208) = 0;
              *(_QWORD *)(v111 + 192) = 0;
              swift_unknownObjectRelease();
              if ((*(_BYTE *)(v111 + 272) & 1) == 0)
              {
                *(_QWORD *)(v111 + 288) = 0;
                *(_QWORD *)(v111 + 296) = 0;
                *(_QWORD *)(v111 + 280) = 0;
                swift_unknownObjectRelease();
                *(_QWORD *)(v111 + 304) = 0;
                *(_QWORD *)(v111 + 368) = 0;
                *(_QWORD *)(v111 + 376) = 0;
                *(_QWORD *)(v111 + 360) = 0;
                swift_unknownObjectRelease();
                *(_QWORD *)(v111 + 384) = 0;
                *(_QWORD *)(v111 + 392) = 0;
              }
              *(_QWORD *)(v111 + 112) = 0;
              *(_QWORD *)(v111 + 144) = 0;
              *(_QWORD *)(v111 + 152) = 0;
              *(_QWORD *)(v111 + 136) = 0;
              v114 = 1;
              *(_BYTE *)(v111 + 160) = 1;
              v115 = *(_QWORD *)(v96 + 16);
              v116 = *(unsigned __int8 *)(v115 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
              swift_retain();
              if (v116 == 4)
                v114 = *(_QWORD *)(v115 + 216) > (uint64_t)*(unsigned __int8 *)(v115 + 225);
              swift_retain();
              swift_release();
              v117 = *(_QWORD *)(v96 + 192);
              if (v117 && (*(_QWORD *)(v117 + 8 * (v92 >> 6)) & (1 << v92)) != 0)
              {
                if (v114)
                  *(_QWORD *)(*(_QWORD *)(v96 + 208) + 8 * (v92 >> 6)) |= 1 << v92;
                swift_release();
                sub_1B1CCCD54((uint64_t)v151, v112);
              }
              else
              {
                swift_release();
              }
              ++v92;
              v111 += 656;
              v112 += 88;
              ++v93;
            }
            while (v139 != v92);
          }
          v157[0] = v152;
          v157[1] = v153;
          v158 = v154;
          v3 = v133;
          sub_1B1F05D48(v147, (unsigned __int16 **)v157, (uint64_t)v212);
          sub_1B1F03804((char *)v96);
          v88 = v130;
          ecs_stack_allocator_pop_snapshot(v130);
          v89 = v128;
          if ((v128 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 376));
          }
          swift_release();
          v90 = v141 + 1;
        }
        while (v141 + 1 != v136);
        sub_1B19ED748((uint64_t *)v177);
      }
    }
    return sub_1B19ED748((uint64_t *)v177);
  }
  return result;
}

uint64_t *sub_1B1CD2918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  __int128 v43;
  uint64_t *result;
  uint64_t v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  unsigned int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  os_unfair_lock_s *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  int isUniquelyReferenced_nonNull_native;
  char *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  int64_t v66;
  uint64_t v67;
  int v68;
  char *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _QWORD *v73;
  int64_t v74;
  uint64_t v75;
  int v76;
  char *v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  _QWORD *v81;
  int64_t v82;
  uint64_t v83;
  int v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int64_t v89;
  uint64_t v90;
  int v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  int64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  _QWORD *v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  int v105;
  char *v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  _QWORD *v110;
  int64_t v111;
  uint64_t v112;
  int v113;
  char *v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  _QWORD *v118;
  int64_t v119;
  uint64_t v120;
  int v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  int64_t v126;
  uint64_t v127;
  uint64_t *v128;
  int v129;
  uint64_t v130;
  _QWORD *v131;
  int64_t v132;
  uint64_t v133;
  int v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  int64_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  _QWORD *v143;
  int64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167[8];
  uint64_t v168[8];
  _OWORD v169[2];
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  _OWORD v179[2];
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  _OWORD v189[2];
  uint64_t v190;
  _OWORD v191[2];
  uint64_t v192;
  _BYTE v193[40];
  _OWORD v194[2];
  uint64_t v195;
  _BYTE v196[40];
  uint64_t v197;
  int v198;
  char v199;
  uint64_t v200;
  char v201;
  uint64_t v202;

  v3 = v2;
  v5 = 0;
  v6 = *(_DWORD *)(v2 + 144);
  v7 = *(_BYTE *)(v2 + 148);
  v8 = *(_BYTE *)(v2 + 160);
  v9 = *(_QWORD *)(v2 + 168);
  v10 = *(_QWORD *)(v2 + 152) | 1;
  v197 = *(_QWORD *)(v2 + 136);
  v198 = v6;
  v199 = v7;
  v200 = v10;
  v201 = v8;
  v202 = v9;
  v11 = a2 & 0xFFFFFFFFFFLL;
  swift_retain();
  sub_1B1E8FCE4(a1, (uint64_t)&v197, v11, v167);
  sub_1B1A18378((uint64_t)v167, (uint64_t)v179, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v179[0])
  {
    swift_release();
    goto LABEL_24;
  }
  v148 = v11;
  v186 = v179[0];
  v187 = v179[1];
  v153 = v181;
  v188 = v180;
  v12 = v182;
  v165 = v183;
  v161 = v184;
  v13 = v185;
  swift_release();
  if (v13 <= 0 || !v12)
  {
    sub_1B19ED748(v167);
    goto LABEL_23;
  }
  v146 = v3;
  v147 = a1;
  v159 = v161[4];
  v157 = *(unsigned __int8 *)(v165 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = 0;
  v151 = v12;
  do
  {
    v163 = v5;
    v155 = v14;
    v15 = (unsigned int *)(v153 + 48 * v14);
    v17 = *v15;
    v16 = v15[1];
    v19 = (uint64_t *)*((_QWORD *)v15 + 2);
    v18 = *((_QWORD *)v15 + 3);
    v20 = *((_QWORD *)v15 + 4);
    v21 = *((_QWORD *)v15 + 5);
    if (v157)
    {
      v22 = *(os_unfair_lock_s **)(v21 + 376);
      swift_retain();
      os_unfair_lock_lock(v22);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v159);
    sub_1B1A18378((uint64_t)(v161 + 6), (uint64_t)v196, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v23 = v161[4];
    v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v161[6] = ecs_stack_allocator_allocate(v23, 48 * v24, 8);
    v161[7] = v24;
    v161[9] = 0;
    v161[10] = 0;
    v161[8] = 0;
    swift_release();
    v25 = (_BYTE *)sub_1B1A12038((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, v19, v18, v20, (uint64_t)v161);
    v26 = sub_1B1A12038((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, v19, v18, v20, (uint64_t)v161);
    v27 = v26;
    if (v19)
    {
      if (v20)
      {
        while (1)
        {
          v29 = *v19++;
          v28 = v29;
          v30 = swift_retain();
          if ((*(_BYTE *)(v21 + 184) & 1) != 0)
            break;
          v31 = *(unsigned int *)(*(_QWORD *)(v21 + 168) + 4 * v28);
          v32 = *(unsigned int *)(*(_QWORD *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v31 + 8);
          swift_release();
          v33 = *(unsigned int *)(v21 + 28);
          v34 = *(_BYTE *)(v21 + 32);
          swift_retain();
          LOBYTE(v169[0]) = v34;
          sub_1B1CCA31C(v31 | (v32 << 32), v33 | ((unint64_t)v34 << 32), v25, v27, v165, 1);
          swift_release();
          v27 += 656;
          v25 += 88;
          if (!--v20)
            goto LABEL_18;
        }
LABEL_183:
        sub_1B2229688();
        __break(1u);
LABEL_184:
        result = (uint64_t *)sub_1B2229700();
        __break(1u);
        return result;
      }
    }
    else if ((_DWORD)v17 != (_DWORD)v16)
    {
      v35 = v26 + 656 * v17;
      v36 = &v25[88 * v17];
      do
      {
        v37 = swift_retain();
        if ((*(_BYTE *)(v21 + 184) & 1) != 0)
          goto LABEL_183;
        v38 = *(unsigned int *)(*(_QWORD *)(v21 + 168) + 4 * v17);
        v39 = v17 + 1;
        v40 = *(unsigned int *)(*(_QWORD *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v38 + 8);
        swift_release();
        v41 = *(unsigned int *)(v21 + 28);
        v42 = *(_BYTE *)(v21 + 32);
        swift_retain();
        LOBYTE(v169[0]) = v42;
        sub_1B1CCA31C(v38 | (v40 << 32), v41 | ((unint64_t)v42 << 32), v36, v35, v165, 1);
        swift_release();
        v35 += 656;
        v36 += 88;
        v17 = v39;
      }
      while (v16 != v39);
    }
LABEL_18:
    v189[0] = v186;
    v189[1] = v187;
    v190 = v188;
    v5 = v163;
    sub_1B1F05D48(v161, (unsigned __int16 **)v189, (uint64_t)v196);
    sub_1B1F03804((char *)v21);
    ecs_stack_allocator_pop_snapshot(v159);
    if ((v157 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
    }
    swift_release();
    v14 = v155 + 1;
  }
  while (v155 + 1 != v151);
  sub_1B19ED748(v167);
  sub_1B19ED748(v167);
  v3 = v146;
  a1 = v147;
LABEL_23:
  v11 = v148;
LABEL_24:
  v43 = *(_OWORD *)(v3 + 192);
  v194[0] = *(_OWORD *)(v3 + 176);
  v194[1] = v43;
  v195 = *(_QWORD *)(v3 + 208);
  sub_1B1E8FCE4(a1, (uint64_t)v194, v11, v168);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v168, (uint64_t)v169, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v169[0])
  {
    v176 = v169[0];
    v177 = v169[1];
    v178 = v170;
    if (v175 < 1)
      return sub_1B19ED748(v168);
    v156 = v172;
    if (!v172)
      return sub_1B19ED748(v168);
    v154 = v171;
    v45 = v174[4];
    v46 = *(unsigned __int8 *)(v173 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v162 = v174;
    v150 = v174 + 8;
    v152 = (uint64_t)(v174 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    v47 = 0;
    v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v149 = v46;
    while (2)
    {
      v164 = v5;
      v160 = v47;
      v49 = (unsigned int *)(v154 + 48 * v47);
      v50 = *v49;
      v158 = v49[1];
      v52 = (uint64_t *)*((_QWORD *)v49 + 2);
      v51 = *((_QWORD *)v49 + 3);
      v54 = *((_QWORD *)v49 + 4);
      v53 = *((_QWORD *)v49 + 5);
      if (v46)
      {
        v55 = *(os_unfair_lock_s **)(v53 + 376);
        swift_retain();
        os_unfair_lock_lock(v55);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v53 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v45);
      sub_1B1A18378(v152, (uint64_t)v193, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
      v56 = v162[4];
      v57 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v53 + 40) + 16) + 32) + 16) + 1;
      v166 = v53;
      swift_retain();
      v162[6] = ecs_stack_allocator_allocate(v56, 48 * v57, 8);
      v162[7] = v57;
      v150[1] = 0;
      v150[2] = 0;
      *v150 = 0;
      swift_release();
      v58 = sub_1B1A12038((uint64_t)&type metadata for ParticleSubSpawn.State, (uint64_t)&off_1E6389E08, v52, v51, v54, (uint64_t)v162);
      if (v52)
      {
        if (v54)
        {
          v59 = (uint64_t *)(v58 + 56);
          v46 = v149;
          while (1)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v61 = (char *)*(v59 - 7);
            if (isUniquelyReferenced_nonNull_native)
            {
              v62 = *((_QWORD *)v61 + 2);
              v63 = swift_isUniquelyReferenced_nonNull_native();
              *(v59 - 7) = (uint64_t)v61;
              if ((v63 & 1) == 0)
              {
                v61 = sub_1B1C636E0(0, v62, 1, v61);
                *(v59 - 7) = (uint64_t)v61;
              }
              if (v62)
              {
                v64 = *((_QWORD *)v61 + 2) - v62;
                if (v64 < 0)
                  goto LABEL_184;
                memmove(v61 + 32, &v61[16 * v62 + 32], 16 * v64);
                *((_QWORD *)v61 + 2) = v64;
              }
              *(v59 - 7) = (uint64_t)v61;
              if (!*(v59 - 6))
                goto LABEL_57;
            }
            else
            {
              v65 = v48;
              if (*((_QWORD *)v61 + 3) >= 2uLL)
              {
                sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
                v65 = (_QWORD *)swift_allocObject();
                v66 = j__malloc_size(v65);
                v67 = v66 - 32;
                if (v66 < 32)
                  v67 = v66 - 17;
                v65[2] = 0;
                v65[3] = 2 * (v67 >> 4);
              }
              *(v59 - 7) = (uint64_t)v65;
              swift_bridgeObjectRelease();
              if (!*(v59 - 6))
                goto LABEL_57;
            }
            v68 = swift_isUniquelyReferenced_nonNull_native();
            v69 = (char *)*(v59 - 6);
            if (v68)
            {
              v70 = *((_QWORD *)v69 + 2);
              v71 = swift_isUniquelyReferenced_nonNull_native();
              *(v59 - 6) = (uint64_t)v69;
              if ((v71 & 1) == 0)
              {
                v69 = sub_1B1C66198(0, v70, 1, v69);
                *(v59 - 6) = (uint64_t)v69;
              }
              if (v70)
              {
                v72 = *((_QWORD *)v69 + 2) - v70;
                if (v72 < 0)
                  goto LABEL_184;
                memmove(v69 + 32, &v69[16 * v70 + 32], 16 * v72);
                *((_QWORD *)v69 + 2) = v72;
              }
              *(v59 - 6) = (uint64_t)v69;
LABEL_57:
              if (!*(v59 - 5))
                goto LABEL_71;
              goto LABEL_64;
            }
            v73 = v48;
            if (*((_QWORD *)v69 + 3) >= 2uLL)
            {
              sub_1B1791524(0, (unint64_t *)&unk_1EEF5AB30, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v73 = (_QWORD *)swift_allocObject();
              v74 = j__malloc_size(v73);
              v75 = v74 - 32;
              if (v74 < 32)
                v75 = v74 - 17;
              v73[2] = 0;
              v73[3] = 2 * (v75 >> 4);
            }
            *(v59 - 6) = (uint64_t)v73;
            swift_bridgeObjectRelease();
            if (!*(v59 - 5))
              goto LABEL_71;
LABEL_64:
            v76 = swift_isUniquelyReferenced_nonNull_native();
            v77 = (char *)*(v59 - 5);
            if (v76)
            {
              v78 = *((_QWORD *)v77 + 2);
              v79 = swift_isUniquelyReferenced_nonNull_native();
              *(v59 - 5) = (uint64_t)v77;
              if ((v79 & 1) == 0)
              {
                v77 = sub_1B1C636E0(0, v78, 1, v77);
                *(v59 - 5) = (uint64_t)v77;
              }
              if (v78)
              {
                v80 = *((_QWORD *)v77 + 2) - v78;
                if (v80 < 0)
                  goto LABEL_184;
                memmove(v77 + 32, &v77[16 * v78 + 32], 16 * v80);
                *((_QWORD *)v77 + 2) = v80;
              }
              *(v59 - 5) = (uint64_t)v77;
LABEL_71:
              if (*(v59 - 4))
                goto LABEL_78;
              goto LABEL_90;
            }
            v81 = v48;
            if (*((_QWORD *)v77 + 3) >= 2uLL)
            {
              sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
              v81 = (_QWORD *)swift_allocObject();
              v82 = j__malloc_size(v81);
              v83 = v82 - 32;
              if (v82 < 32)
                v83 = v82 - 17;
              v81[2] = 0;
              v81[3] = 2 * (v83 >> 4);
            }
            *(v59 - 5) = (uint64_t)v81;
            swift_bridgeObjectRelease();
            if (*(v59 - 4))
            {
LABEL_78:
              v84 = swift_isUniquelyReferenced_nonNull_native();
              v85 = (char *)*(v59 - 4);
              if (v84)
              {
                v86 = *((_QWORD *)v85 + 2);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v85 = sub_1B1791058(0, v86, 1, v85);
                if (v86)
                {
                  v87 = *((_QWORD *)v85 + 2) - v86;
                  if (v87 < 0)
                    goto LABEL_184;
                  memmove(v85 + 32, &v85[16 * v86 + 32], 16 * v87);
                  *((_QWORD *)v85 + 2) = v87;
                }
                *(v59 - 4) = (uint64_t)v85;
              }
              else
              {
                v88 = v48;
                if (*((_QWORD *)v85 + 3) >= 2uLL)
                {
                  sub_1B1C87F3C(0, (unint64_t *)&qword_1ED4BAF90, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
                  v88 = (_QWORD *)swift_allocObject();
                  v89 = j__malloc_size(v88);
                  v90 = v89 - 32;
                  if (v89 < 32)
                    v90 = v89 - 17;
                  v88[2] = 0;
                  v88[3] = 2 * (v90 >> 4);
                }
                *(v59 - 4) = (uint64_t)v88;
                swift_bridgeObjectRelease();
              }
            }
LABEL_90:
            v91 = swift_isUniquelyReferenced_nonNull_native();
            v92 = (char *)*(v59 - 1);
            if (v91)
            {
              v93 = *((_QWORD *)v92 + 2);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v92 = sub_1B1C635D8(0, v93, 1, v92);
              if (v93)
              {
                v94 = *((_QWORD *)v92 + 2) - v93;
                if (v94 < 0)
                  goto LABEL_184;
                memmove(v92 + 32, &v92[4 * v93 + 32], 4 * v94);
                *((_QWORD *)v92 + 2) = v94;
              }
              *(v59 - 1) = (uint64_t)v92;
            }
            else
            {
              v95 = v48;
              if (*((_QWORD *)v92 + 3) >= 2uLL)
              {
                sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAF10, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
                v95 = (_QWORD *)swift_allocObject();
                v96 = j__malloc_size(v95);
                v97 = v96 - 32;
                if (v96 < 32)
                  v97 = v96 - 29;
                v95[2] = 0;
                v95[3] = 2 * (v97 >> 2);
              }
              *(v59 - 1) = (uint64_t)v95;
              swift_bridgeObjectRelease();
            }
            v98 = swift_isUniquelyReferenced_nonNull_native();
            v99 = *v59;
            if (v98)
            {
              sub_1B1C92C04(0, *(_QWORD *)(v99 + 16));
            }
            else
            {
              v100 = v48;
              if (*(_QWORD *)(v99 + 24) >= 2uLL)
              {
                sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAF70, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
                v100 = (_QWORD *)swift_allocObject();
                v101 = j__malloc_size(v100);
                v102 = v101 - 32;
                if (v101 < 32)
                  v102 = v101 - 29;
                v100[2] = 0;
                v100[3] = 2 * (v102 >> 2);
              }
              *v59 = (uint64_t)v100;
              swift_bridgeObjectRelease();
            }
            v59 += 8;
            if (!--v54)
              goto LABEL_110;
          }
        }
LABEL_109:
        v46 = v149;
LABEL_110:
        v191[0] = v176;
        v191[1] = v177;
        v192 = v178;
        v5 = v164;
        sub_1B1F05D48(v162, (unsigned __int16 **)v191, (uint64_t)v193);
        sub_1B1F03804((char *)v166);
        ecs_stack_allocator_pop_snapshot(v45);
        if ((v46 & 1) != 0)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v166 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v166 + 376));
        }
        swift_release();
        v47 = v160 + 1;
        if (v160 + 1 == v156)
        {
          sub_1B19ED748(v168);
          return sub_1B19ED748(v168);
        }
        continue;
      }
      break;
    }
    if ((_DWORD)v50 == (_DWORD)v158)
      goto LABEL_109;
    v103 = v158 - v50;
    v104 = (uint64_t *)(v58 + (v50 << 6) + 56);
    v46 = v149;
    while (1)
    {
      v105 = swift_isUniquelyReferenced_nonNull_native();
      v106 = (char *)*(v104 - 7);
      if (v105)
      {
        v107 = *((_QWORD *)v106 + 2);
        v108 = swift_isUniquelyReferenced_nonNull_native();
        *(v104 - 7) = (uint64_t)v106;
        if ((v108 & 1) == 0)
        {
          v106 = sub_1B1C636E0(0, v107, 1, v106);
          *(v104 - 7) = (uint64_t)v106;
        }
        if (v107)
        {
          v109 = *((_QWORD *)v106 + 2) - v107;
          if (v109 < 0)
            goto LABEL_184;
          memmove(v106 + 32, &v106[16 * v107 + 32], 16 * v109);
          *((_QWORD *)v106 + 2) = v109;
        }
        *(v104 - 7) = (uint64_t)v106;
        if (!*(v104 - 6))
          goto LABEL_135;
      }
      else
      {
        v110 = v48;
        if (*((_QWORD *)v106 + 3) >= 2uLL)
        {
          sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
          v110 = (_QWORD *)swift_allocObject();
          v111 = j__malloc_size(v110);
          v112 = v111 - 32;
          if (v111 < 32)
            v112 = v111 - 17;
          v110[2] = 0;
          v110[3] = 2 * (v112 >> 4);
        }
        *(v104 - 7) = (uint64_t)v110;
        swift_bridgeObjectRelease();
        if (!*(v104 - 6))
          goto LABEL_135;
      }
      v113 = swift_isUniquelyReferenced_nonNull_native();
      v114 = (char *)*(v104 - 6);
      if (v113)
      {
        v115 = *((_QWORD *)v114 + 2);
        v116 = swift_isUniquelyReferenced_nonNull_native();
        *(v104 - 6) = (uint64_t)v114;
        if ((v116 & 1) == 0)
        {
          v114 = sub_1B1C66198(0, v115, 1, v114);
          *(v104 - 6) = (uint64_t)v114;
        }
        if (v115)
        {
          v117 = *((_QWORD *)v114 + 2) - v115;
          if (v117 < 0)
            goto LABEL_184;
          memmove(v114 + 32, &v114[16 * v115 + 32], 16 * v117);
          *((_QWORD *)v114 + 2) = v117;
        }
        *(v104 - 6) = (uint64_t)v114;
LABEL_135:
        if (*(v104 - 5))
          goto LABEL_142;
        goto LABEL_154;
      }
      v118 = v48;
      if (*((_QWORD *)v114 + 3) >= 2uLL)
      {
        sub_1B1791524(0, (unint64_t *)&unk_1EEF5AB30, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v118 = (_QWORD *)swift_allocObject();
        v119 = j__malloc_size(v118);
        v120 = v119 - 32;
        if (v119 < 32)
          v120 = v119 - 17;
        v118[2] = 0;
        v118[3] = 2 * (v120 >> 4);
      }
      *(v104 - 6) = (uint64_t)v118;
      swift_bridgeObjectRelease();
      if (*(v104 - 5))
      {
LABEL_142:
        v121 = swift_isUniquelyReferenced_nonNull_native();
        v122 = (char *)*(v104 - 5);
        if (v121)
        {
          v123 = *((_QWORD *)v122 + 2);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v122 = sub_1B1C636E0(0, v123, 1, v122);
          if (v123)
          {
            v124 = *((_QWORD *)v122 + 2) - v123;
            if (v124 < 0)
              goto LABEL_184;
            memmove(v122 + 32, &v122[16 * v123 + 32], 16 * v124);
            *((_QWORD *)v122 + 2) = v124;
          }
          *(v104 - 5) = (uint64_t)v122;
        }
        else
        {
          v125 = v48;
          if (*((_QWORD *)v122 + 3) >= 2uLL)
          {
            sub_1B1C87F3C(0, (unint64_t *)&qword_1EEF5CB50, (unint64_t *)&qword_1ED4BB0A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDD50]);
            v125 = (_QWORD *)swift_allocObject();
            v126 = j__malloc_size(v125);
            v127 = v126 - 32;
            if (v126 < 32)
              v127 = v126 - 17;
            v125[2] = 0;
            v125[3] = 2 * (v127 >> 4);
          }
          *(v104 - 5) = (uint64_t)v125;
          swift_bridgeObjectRelease();
        }
      }
LABEL_154:
      v128 = v104 - 4;
      if (*(v104 - 4))
      {
        v129 = swift_isUniquelyReferenced_nonNull_native();
        v130 = *v128;
        if (v129)
        {
          sub_1B1C92AEC(0, *(_QWORD *)(v130 + 16));
        }
        else
        {
          v131 = v48;
          if (*(_QWORD *)(v130 + 24) >= 2uLL)
          {
            sub_1B1C87F3C(0, (unint64_t *)&qword_1ED4BAF90, (unint64_t *)&qword_1ED4BB0E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEDDA8]);
            v131 = (_QWORD *)swift_allocObject();
            v132 = j__malloc_size(v131);
            v133 = v132 - 32;
            if (v132 < 32)
              v133 = v132 - 17;
            v131[2] = 0;
            v131[3] = 2 * (v133 >> 4);
          }
          *v128 = (uint64_t)v131;
          swift_bridgeObjectRelease();
        }
      }
      v134 = swift_isUniquelyReferenced_nonNull_native();
      v135 = (char *)*(v104 - 1);
      if (v134)
      {
        v136 = *((_QWORD *)v135 + 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v135 = sub_1B1C635D8(0, v136, 1, v135);
        if (v136)
        {
          v137 = *((_QWORD *)v135 + 2) - v136;
          if (v137 < 0)
            goto LABEL_184;
          memmove(v135 + 32, &v135[4 * v136 + 32], 4 * v137);
          *((_QWORD *)v135 + 2) = v137;
        }
        *(v104 - 1) = (uint64_t)v135;
      }
      else
      {
        v138 = v48;
        if (*((_QWORD *)v135 + 3) >= 2uLL)
        {
          sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAF10, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
          v138 = (_QWORD *)swift_allocObject();
          v139 = j__malloc_size(v138);
          v140 = v139 - 32;
          if (v139 < 32)
            v140 = v139 - 29;
          v138[2] = 0;
          v138[3] = 2 * (v140 >> 2);
        }
        *(v104 - 1) = (uint64_t)v138;
        swift_bridgeObjectRelease();
      }
      v141 = swift_isUniquelyReferenced_nonNull_native();
      v142 = *v104;
      if (v141)
      {
        sub_1B1C92C04(0, *(_QWORD *)(v142 + 16));
      }
      else
      {
        v143 = v48;
        if (*(_QWORD *)(v142 + 24) >= 2uLL)
        {
          sub_1B1A02758(0, (unint64_t *)&unk_1ED4BAF70, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
          v143 = (_QWORD *)swift_allocObject();
          v144 = j__malloc_size(v143);
          v145 = v144 - 32;
          if (v144 < 32)
            v145 = v144 - 29;
          v143[2] = 0;
          v143[3] = 2 * (v145 >> 2);
        }
        *v104 = (uint64_t)v143;
        swift_bridgeObjectRelease();
      }
      v104 += 8;
      if (!--v103)
        goto LABEL_110;
    }
  }
  return result;
}

uint64_t sub_1B1CD3A80()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmitterPrepareRuntime()
{
  return objc_opt_self();
}

uint64_t sub_1B1CD3AF0(uint64_t a1, uint64_t a2)
{
  return sub_1B1CD4B78(a1, a2, (void (*)(void))type metadata accessor for EmitterPrepareRuntime, 256, (void (*)(void))sub_1B1CCC9D8);
}

const char *sub_1B1CD3B08()
{
  return "EmitterPrepareRuntime";
}

uint64_t sub_1B1CD3B20()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t inited;
  __int128 v4;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v16 = qword_1ED4D09F8;
  v17 = 0;
  v18 = 2;
  v19 = 0;
  v20 = 2;
  v21 = 0;
  swift_retain();
  sub_1B1B116A4(1, 2, (uint64_t)v6);
  swift_release();
  v1 = v6[1];
  *(_OWORD *)(v0 + 16) = v6[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = v7;
  v2 = qword_1ED4D09F8;
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B226D240;
  *(_QWORD *)(inited + 32) = &type metadata for OldEvent;
  *(_QWORD *)(inited + 40) = &off_1E63C20C0;
  v10 = v2;
  v11 = 0;
  v12 = 2;
  v13 = 0;
  v14 = 2;
  v15 = 0;
  swift_retain();
  sub_1B1E68AF8(inited, 1, (uint64_t)v8);
  swift_setDeallocating();
  swift_release();
  v4 = v8[1];
  *(_OWORD *)(v0 + 56) = v8[0];
  *(_OWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 88) = v9;
  return v0;
}

uint64_t sub_1B1CD3CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  v5 = sub_1B204D6E4();
  v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B1E8F784(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  swift_release_n();
  swift_getObjectType();
  return sub_1B204D6E4();
}

uint64_t sub_1B1CD3D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  double v6;
  uint64_t v7;
  char *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float *v20;
  _BYTE *v21;
  float *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int v27;
  int v28;
  float v29;
  unint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  float *v33;
  float *v34;
  char v35;
  uint64_t v36;
  int v37;
  int v38;
  float v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  float v50;
  uint64_t v51;
  uint64_t v52;
  float *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t *v61;
  void (*v62)(uint64_t, uint64_t);
  BOOL v63;
  uint64_t ObjCClassFromObject;
  uint64_t i;
  char *v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  __int128 v79;
  float v80;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(double);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char v112;
  int v113;
  uint64_t v114;
  _QWORD *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  _BYTE v123[40];
  _QWORD v124[3];
  char v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  _OWORD v130[2];
  uint64_t v131;
  _OWORD v132[2];
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  _OWORD v146[2];
  uint64_t v147;
  uint64_t v148[8];
  _OWORD v149[2];
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  _BYTE v156[40];
  uint64_t v157;

  v2 = v1;
  v3 = a1;
  v4 = 0;
  v157 = *MEMORY[0x1E0C80C00];
  v5 = *(_OWORD *)(v1 + 32);
  v146[0] = *(_OWORD *)(v1 + 16);
  v146[1] = v5;
  v147 = *(_QWORD *)(v1 + 48);
  sub_1B1E8FCE4(a1, (uint64_t)v146, 0x200000000, v148);
  sub_1B1A18378((uint64_t)v148, (uint64_t)v149, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v149[0])
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v42 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v42)
      return swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  v127 = v149[0];
  v128 = v149[1];
  v129 = v150;
  if (v155 >= 1 && (v109 = v152) != 0)
  {
    v102 = v1;
    v118 = v3;
    v107 = v151;
    v120 = v154[4];
    v116 = *(unsigned __int8 *)(v153 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v121 = v154;
    v104 = v154 + 8;
    v106 = (uint64_t)(v154 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    v7 = 0;
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v95 = v4;
      v9 = (unsigned int *)(v107 + 48 * v7);
      v11 = *v9;
      v10 = v9[1];
      v12 = (uint64_t *)*((_QWORD *)v9 + 2);
      v14 = *((_QWORD *)v9 + 4);
      v13 = *((_QWORD *)v9 + 5);
      v111 = *((_QWORD *)v9 + 3);
      v114 = v7;
      if (v116)
      {
        v15 = *(os_unfair_lock_s **)(v13 + 376);
        swift_retain();
        os_unfair_lock_lock(v15);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v120);
      sub_1B1A18378(v106, (uint64_t)v156, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
      v16 = v121[4];
      v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v121[6] = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
      v121[7] = v17;
      v104[1] = 0;
      v104[2] = 0;
      *v104 = 0;
      swift_release();
      v18 = sub_1B1A12038((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, v12, v111, v14, (uint64_t)v121);
      v19 = sub_1B1A12038((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, v12, v111, v14, (uint64_t)v121);
      if (v12)
      {
        if (v14)
        {
          v20 = (float *)(v18 + 48);
          v21 = (_BYTE *)(v19 + 130);
          do
          {
            v24 = *v12++;
            v23 = v24;
            if ((*v21 & 1) == 0)
            {
              *v21 = 1;
              if (*v20 > 0.0)
              {
                v25 = *(_BYTE *)(v13 + 184);
                v26 = swift_retain();
                if ((v25 & 1) != 0)
                  goto LABEL_95;
                v27 = *(_DWORD *)(*(_QWORD *)(v13 + 168) + 4 * v23);
                v28 = *(_DWORD *)(*(_QWORD *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v27 + 8);
                swift_release();
                v29 = *v20;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v8 = sub_1B1C67958(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
                v31 = *((_QWORD *)v8 + 2);
                v30 = *((_QWORD *)v8 + 3);
                if (v31 >= v30 >> 1)
                  v8 = sub_1B1C67958(v30 > 1, v31 + 1, 1, v8);
                *((_QWORD *)v8 + 2) = v31 + 1;
                v22 = (float *)&v8[12 * v31];
                *((_DWORD *)v22 + 8) = v27;
                *((_DWORD *)v22 + 9) = v28;
                v22[10] = v29;
              }
            }
            v21 += 656;
            v20 += 22;
            --v14;
          }
          while (v14);
        }
      }
      else if ((_DWORD)v11 != (_DWORD)v10)
      {
        v32 = (_BYTE *)(v19 + 656 * v11 + 130);
        v33 = (float *)(v18 + 88 * v11 + 48);
        do
        {
          if ((*v32 & 1) == 0)
          {
            *v32 = 1;
            if (*v33 > 0.0)
            {
              v35 = *(_BYTE *)(v13 + 184);
              v36 = swift_retain();
              if ((v35 & 1) != 0)
                goto LABEL_95;
              v37 = *(_DWORD *)(*(_QWORD *)(v13 + 168) + 4 * v11);
              v38 = *(_DWORD *)(*(_QWORD *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v37 + 8);
              swift_release();
              v39 = *v33;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v8 = sub_1B1C67958(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
              v41 = *((_QWORD *)v8 + 2);
              v40 = *((_QWORD *)v8 + 3);
              if (v41 >= v40 >> 1)
                v8 = sub_1B1C67958(v40 > 1, v41 + 1, 1, v8);
              *((_QWORD *)v8 + 2) = v41 + 1;
              v34 = (float *)&v8[12 * v41];
              *((_DWORD *)v34 + 8) = v37;
              *((_DWORD *)v34 + 9) = v38;
              v34[10] = v39;
            }
          }
          ++v11;
          v32 += 656;
          v33 += 22;
        }
        while (v10 != v11);
      }
      v130[0] = v127;
      v130[1] = v128;
      v131 = v129;
      v4 = v95;
      sub_1B1F05D48(v121, (unsigned __int16 **)v130, (uint64_t)v156);
      sub_1B1F03804((char *)v13);
      ecs_stack_allocator_pop_snapshot(v120);
      if ((v116 & 1) != 0)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
      }
      swift_release();
      v7 = v114 + 1;
    }
    while (v114 + 1 != v109);
    sub_1B19ED748(v148);
    v3 = v118;
    v2 = v102;
  }
  else
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
  }
  sub_1B19ED748(v148);
  v42 = *((_QWORD *)v8 + 2);
  if (v42)
  {
LABEL_39:
    v97 = v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
    v92 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
    v93 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock);
    v90 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 24);
    v91 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 16);
    v43 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 32);
    v44 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 40);
    v45 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 48);
    v46 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 56);
    v47 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64);
    v89 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 72);
    v88 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 80);
    v87 = *(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 88);
    v85 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 97);
    v86 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96);
    v83 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 99);
    v84 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 98);
    v82 = *(_BYTE *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 100);
    *(_DWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64) = 1040187392;
    v94 = thread_worker_index;
    v48 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                                + 8 * *(_QWORD *)thread_worker_index(v6)
                                + 8)
                    + 40);
    v100 = type metadata accessor for EventDisposeSystem();
    v105 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
    v115 = (_QWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v122 = v8 + 32;
    v49 = *(_QWORD *)(v48 + 16);
    swift_retain();
    v103 = v8 + 40;
    v98 = -v42;
    v50 = 0.0;
    v117 = v42;
    v119 = v3;
    v96 = v48;
    while (1)
    {
      v101 = v49;
      v99 = *(_QWORD *)(v48 + 32);
      swift_retain();
      sub_1B204CBF8();
      swift_release();
      swift_bridgeObjectRetain();
      v112 = 0;
      v51 = 0;
      v52 = v98;
      while (1)
      {
LABEL_43:
        v53 = (float *)&v103[12 * v51++];
        while (v50 >= *v53)
        {
          v53 += 3;
          ++v51;
          if (v52 + v51 == 1)
            goto LABEL_69;
        }
        v113 = *((_DWORD *)v53 - 2);
        v110 = *((_DWORD *)v53 - 1);
        v54 = *(_QWORD *)(v3 + v105);
        v108 = swift_retain();
        if (!v108)
          goto LABEL_68;
        v55 = (_QWORD *)((uint64_t (*)(uint64_t (**)(double)))v94)(&thread_worker_index);
        v56 = *(_QWORD *)(v54 + 120);
        if (v56 > 0)
          break;
        swift_release();
LABEL_68:
        v112 = 1;
        if (v42 == v51)
          goto LABEL_69;
      }
      v57 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v108 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                                  + 8 * *v55
                                  + 8)
                      + 32);
      v58 = *(_QWORD *)(v54 + 112);
      swift_retain();
      swift_bridgeObjectRetain();
      v59 = qword_1EEF5DE28;
      v60 = v56 + 1;
      v61 = (uint64_t *)(v58 + 96 * v56 - 8);
      while (*v61 < v59)
      {
        v62 = (void (*)(uint64_t, uint64_t))v61[3];
        v63 = *((_DWORD *)v61 - 12) == v113 && *((_DWORD *)v61 - 11) == v110;
        if (v63
          || *(v61 - 2)
          && ((ObjCClassFromObject = swift_getObjCClassFromObject(),
               ObjCClassFromObject == type metadata accessor for ParticleSubSpawnAddStateSystem())
           || ObjCClassFromObject == type metadata accessor for ParticleSubSpawnSystem()
           || ObjCClassFromObject == v100
           || ObjCClassFromObject == type metadata accessor for TransientPushSystem()
           || ObjCClassFromObject == type metadata accessor for RendererPostUpdateSystem()))
        {
          swift_unknownObjectRetain();
          swift_retain();
          ecs_stack_allocator_push_snapshot(v57);
          v62(v108, 3);
          ecs_stack_allocator_pop_snapshot(v57);
          swift_release();
          swift_unknownObjectRelease();
          v59 = qword_1EEF5DE28;
        }
        --v60;
        v61 -= 12;
        if (v60 <= 1)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          v42 = v117;
          v3 = v119;
          v52 = v98;
          goto LABEL_68;
        }
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v112 = 1;
      v42 = v117;
      v3 = v119;
      v52 = v98;
      if (v117 != v51)
        goto LABEL_43;
LABEL_69:
      for (i = 0; i != v42; ++i)
      {
        v66 = &v122[12 * i];
        if (v50 < *((float *)v66 + 2))
        {
          v68 = *(_DWORD *)v66;
          v67 = *((_DWORD *)v66 + 1);
          if (qword_1ED4B7DB8 != -1)
            swift_once();
          v69 = qword_1ED4D09F8;
          v70 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
          sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B226D240;
          *(_QWORD *)(inited + 32) = &type metadata for Particle;
          *(_QWORD *)(inited + 40) = &off_1E63C21B0;
          v140 = v69;
          v141 = 0;
          v142 = 2;
          v143 = 0;
          v144 = 2;
          v145 = 0;
          swift_retain();
          sub_1B1E68AF8(inited, 1, (uint64_t)v123);
          swift_setDeallocating();
          swift_release();
          sub_1B1CC6310(0, (unint64_t *)&qword_1ED4BAD30, (unint64_t *)&qword_1ED4B89D0, (uint64_t)&protocol descriptor for ClassComponent, v70);
          v72 = swift_initStackObject();
          *(_OWORD *)(v72 + 16) = xmmword_1B226D240;
          *(_QWORD *)(v72 + 56) = &type metadata for EmitterReference;
          *(_QWORD *)(v72 + 64) = &off_1E6387218;
          *(_DWORD *)(v72 + 32) = v68;
          *(_DWORD *)(v72 + 36) = v67;
          sub_1B1E68A14(v72, (uint64_t)v124);
          swift_setDeallocating();
          sub_1B1A025A0(0, (unint64_t *)&qword_1ED4B89D0);
          swift_arrayDestroy();
          sub_1B19ED720((uint64_t)v123);
          v134 = v124[0];
          v135 = 0;
          v136 = 2;
          v137 = v124[2];
          v138 = v125;
          v139 = v126;
          v3 = v119;
          sub_1B1C90414(&v134);
          sub_1B19ED720((uint64_t)v124);
          if (v68 == -1 && !v67
            || v68 < 0
            || v115[1] <= v68
            || (v73 = *v115 + 12 * v68, v74 = *(__int16 *)(v73 + 4), v67 != -1) && *(_DWORD *)(v73 + 8) != v67
            || (v75 = *(_QWORD *)(*(_QWORD *)(v119 + 136) + 8 * *(int *)(*v115 + 12 * v68) + 32),
                v76 = *(_QWORD *)(v75 + 48),
                (v77 = *(_QWORD *)(v76 + 16)) == 0))
          {
LABEL_94:
            sub_1B2229430();
            sub_1B2228890();
            sub_1B1BC3C70();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
            sub_1B2228890();
            sub_1B2228890();
            while (1)
            {
LABEL_95:
              sub_1B2229688();
              __break(1u);
            }
          }
          v78 = (_QWORD *)(v76 + 56);
          while ((ValueMetadata *)*(v78 - 3) != &type metadata for EmitterRuntime)
          {
            v78 += 5;
            if (!--v77)
              goto LABEL_94;
          }
          *(_QWORD *)(*(_QWORD *)(v75 + 128) + *v78 + 656 * v74 + 112) = 0;
          v42 = v117;
        }
      }
      swift_bridgeObjectRelease();
      v79 = *(_OWORD *)(v2 + 72);
      v132[0] = *(_OWORD *)(v2 + 56);
      v132[1] = v79;
      v133 = *(_QWORD *)(v2 + 88);
      sub_1B1C90414((uint64_t *)v132);
      v48 = v96;
      ++*(_QWORD *)(v97 + 8);
      v80 = *(float *)(v97 + 64);
      v49 = *(_QWORD *)(v96 + 16);
      if (!v101)
      {
        if (v49)
          goto LABEL_41;
LABEL_40:
        *(_QWORD *)(v96 + 32) = v99;
        goto LABEL_41;
      }
      if (v49 && v101 == v49)
        goto LABEL_40;
LABEL_41:
      v50 = v50 + v80;
      if ((v112 & 1) == 0)
      {
        swift_release();
        *(_QWORD *)v97 = v93;
        *(_QWORD *)(v97 + 8) = v92;
        *(_QWORD *)(v97 + 16) = v91;
        *(_QWORD *)(v97 + 24) = v90;
        *(_QWORD *)(v97 + 32) = v43;
        *(_QWORD *)(v97 + 40) = v44;
        *(_QWORD *)(v97 + 48) = v45;
        *(_QWORD *)(v97 + 56) = v46;
        *(_QWORD *)(v97 + 64) = v47;
        *(_QWORD *)(v97 + 72) = v89;
        *(_BYTE *)(v97 + 80) = v88;
        *(_QWORD *)(v97 + 88) = v87;
        *(_BYTE *)(v97 + 96) = v86;
        *(_BYTE *)(v97 + 97) = v85;
        *(_BYTE *)(v97 + 98) = v84;
        *(_BYTE *)(v97 + 99) = v83;
        *(_BYTE *)(v97 + 100) = v82;
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for EmitterWarmup()
{
  return objc_opt_self();
}

uint64_t sub_1B1CD4B60(uint64_t a1, uint64_t a2)
{
  return sub_1B1CD4B78(a1, a2, (void (*)(void))type metadata accessor for EmitterWarmup, 96, (void (*)(void))sub_1B1CD3B20);
}

uint64_t sub_1B1CD4B78(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(void))
{
  uint64_t v6;

  a3();
  v6 = swift_allocObject();
  a5();
  return v6;
}

const char *sub_1B1CD4BB4()
{
  return "EmitterWarmup";
}

uint64_t sub_1B1CD4BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  v5 = sub_1B204D6E4();
  v6 = *(os_unfair_lock_s **)(v4 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v6);
  sub_1B1E8F784(a1, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1E8FAC0(a1, v5, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 40));
  return swift_release_n();
}

uint64_t *sub_1B1CD4C94(uint64_t a1)
{
  uint64_t v1;
  float v2;
  __int128 v3;
  uint64_t *result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float *v19;
  float *v20;
  float v21;
  float *v22;
  uint64_t v23;
  float *v24;
  float v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34[8];
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  _BYTE v44[40];
  _OWORD v45[2];
  uint64_t v46;

  v2 = *(float *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64);
  v3 = *(_OWORD *)(v1 + 32);
  v45[0] = *(_OWORD *)(v1 + 16);
  v45[1] = v3;
  v46 = *(_QWORD *)(v1 + 48);
  sub_1B1E8FCE4(a1, (uint64_t)v45, 0x200000000, v34);
  result = (uint64_t *)sub_1B1A18378((uint64_t)v34, (uint64_t)v35, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v35[0])
  {
    if (v41 >= 1)
    {
      v29 = v38;
      if (v38)
      {
        v5 = v40;
        v33 = v40[4];
        v32 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v42[0] = v35[0];
        v42[1] = v35[1];
        v43 = v36;
        v27 = (uint64_t)(v40 + 6);
        v28 = v37;
        v26 = v40 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v6 = 0;
        v7 = 0;
        while (1)
        {
          v8 = (unsigned int *)(v28 + 48 * v6);
          v9 = *v8;
          v10 = (uint64_t *)*((_QWORD *)v8 + 2);
          v11 = *((_QWORD *)v8 + 3);
          v13 = *((_QWORD *)v8 + 4);
          v12 = *((_QWORD *)v8 + 5);
          v30 = v8[1];
          v31 = v7;
          if (v32)
          {
            v14 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v33);
          sub_1B1A18378(v27, (uint64_t)v44, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v15 = v5[4];
          v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v5[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v5[7] = v16;
          v26[1] = 0;
          v26[2] = 0;
          *v26 = 0;
          swift_release();
          v17 = sub_1B1A12038((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1E6391AC0, v10, v11, v13, (uint64_t)v5);
          v18 = sub_1B1A12038((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1E637F3F8, v10, v11, v13, (uint64_t)v5);
          if (v10)
          {
            if (!v13)
              goto LABEL_15;
            v19 = (float *)(v17 + 52);
            v20 = (float *)(v18 + 96);
            v7 = v31;
            do
            {
              v21 = *v19;
              v19 += 22;
              *v20 = *v20 + (float)(v2 * v21);
              v20 += 164;
              --v13;
            }
            while (v13);
          }
          else
          {
            if ((_DWORD)v9 == (_DWORD)v30)
            {
LABEL_15:
              v7 = v31;
              goto LABEL_18;
            }
            v22 = (float *)(v18 + 656 * v9 + 96);
            v23 = v30 - v9;
            v24 = (float *)(v17 + 88 * v9 + 52);
            v7 = v31;
            do
            {
              v25 = *v24;
              v24 += 22;
              *v22 = *v22 + (float)(v2 * v25);
              v22 += 164;
              --v23;
            }
            while (v23);
          }
LABEL_18:
          sub_1B1F05D48(v5, (unsigned __int16 **)v42, (uint64_t)v44);
          sub_1B1F03804((char *)v12);
          ecs_stack_allocator_pop_snapshot(v33);
          if ((v32 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          if (++v6 == v29)
          {
            sub_1B19ED748(v34);
            return sub_1B19ED748(v34);
          }
        }
      }
    }
    return sub_1B19ED748(v34);
  }
  return result;
}

uint64_t type metadata accessor for ParticleEmitterTransport()
{
  return objc_opt_self();
}

uint64_t destroy for EmitterRuntime()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for EmitterRuntime(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
  v3 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  *(_OWORD *)(a1 + 136) = v3;
  v4 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v4;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 220) = *(_QWORD *)(a2 + 220);
  v5 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v5;
  v15 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v15;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  v6 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v6;
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  v7 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v7;
  v8 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v8;
  v9 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v9;
  v10 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v10;
  v11 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v11;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_DWORD *)(a1 + 456) = *(_DWORD *)(a2 + 456);
  v12 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v12;
  v13 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v13;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmitterRuntime(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  v5 = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v6 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v6;
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  *(_OWORD *)(a1 + 136) = v7;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  v8 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v8;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_DWORD *)(a1 + 456) = *(_DWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *initializeWithTake for EmitterRuntime(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x290uLL);
}

uint64_t assignWithTake for EmitterRuntime(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  v4 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 220) = *(_QWORD *)(a2 + 220);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_release();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  v5 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v5;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_unknownObjectRelease();
  v6 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v6;
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_DWORD *)(a1 + 456) = *(_DWORD *)(a2 + 456);
  v7 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v7;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_release();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmitterRuntime(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 656))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmitterRuntime(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 648) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 656) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 656) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmitterRuntime()
{
  return &type metadata for EmitterRuntime;
}

uint64_t destroy for MetalFunctionReflection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmitterDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)(a2 + 41);
  *(_BYTE *)(a1 + 45) = *(_BYTE *)(a2 + 45);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_WORD *)(a1 + 74) = *(_WORD *)(a2 + 74);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmitterDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_BYTE *)(a1 + 45) = *(_BYTE *)(a2 + 45);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_WORD *)(a1 + 74) = *(_WORD *)(a2 + 74);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for EmitterDescription(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for EmitterDescription(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_BYTE *)(a1 + 45) = *(_BYTE *)(a2 + 45);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_WORD *)(a1 + 74) = *(_WORD *)(a2 + 74);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmitterDescription(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 84))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmitterDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 84) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 84) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmitterDescription()
{
  return &type metadata for EmitterDescription;
}

uint64_t sub_1B1CD61EC()
{
  uint64_t v0;
  __int128 v1;
  _OWORD v3[2];
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  type metadata accessor for ParticleEmitterTransport();
  v0 = swift_allocObject();
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v5 = qword_1ED4D09F8;
  v6 = 0;
  v7 = 2;
  v8 = 0;
  v9 = 2;
  v10 = 0;
  swift_retain();
  sub_1B1B116A4(1, 2, (uint64_t)v3);
  swift_release();
  v1 = v3[1];
  *(_OWORD *)(v0 + 16) = v3[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = v4;
  return v0;
}

const char *sub_1B1CD62AC()
{
  return "ParticleEmitterTransport";
}

uint64_t sub_1B1CD62C4(uint64_t a1)
{
  return sub_1B1CD62DC(a1, (uint64_t (*)(void))sub_1B202A38C);
}

uint64_t sub_1B1CD62D0(uint64_t a1)
{
  return sub_1B1CD62DC(a1, (uint64_t (*)(void))sub_1B202A198);
}

uint64_t sub_1B1CD62DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;

  v4 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v4 + 24) >> 1)
    return a2();
  return result;
}

uint64_t sub_1B1CD6354()
{
  return sub_1B1CD6378((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1B202A198);
}

uint64_t sub_1B1CD6360()
{
  return sub_1B1CD6378((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1B202A38C);
}

uint64_t sub_1B1CD636C()
{
  return sub_1B1CD6378((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1B202A3A8);
}

uint64_t sub_1B1CD6378(uint64_t (*a1)(_QWORD, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((result & 1) == 0)
    return a1(0, *(_QWORD *)(v2 + 16) + 1, 1);
  return result;
}

uint64_t sub_1B1CD63D4(uint64_t a1)
{
  return sub_1B1CD63F8(a1, (uint64_t (*)(BOOL))sub_1B202A198);
}

uint64_t sub_1B1CD63E0(uint64_t a1)
{
  return sub_1B1CD63F8(a1, (uint64_t (*)(BOOL))sub_1B202A38C);
}

uint64_t sub_1B1CD63EC(uint64_t a1)
{
  return sub_1B1CD63F8(a1, (uint64_t (*)(BOOL))sub_1B202A3A8);
}

uint64_t sub_1B1CD63F8(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
    return a2(v3 > 1);
  return result;
}

uint64_t sub_1B1CD6424(uint64_t a1, __int128 *a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1 + 1;
  return sub_1B1A02518(a2, v3 + 40 * a1 + 32);
}

uint64_t sub_1B1CD6448(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_QWORD *)(v3 + 8 * result + 32) = a2;
  return result;
}

__n128 sub_1B1CD6464(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1 + 1;
  v4 = v3 + 40 * a1;
  result = *(__n128 *)a2;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 48) = v6;
  *(_DWORD *)(v4 + 63) = *(_DWORD *)(a2 + 31);
  return result;
}

double sub_1B1CD648C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  if (qword_1ED4B7D30 != -1)
    swift_once();
  v2 = qword_1ED4D09E0;
  v13 = 0;
  MEMORY[0x1B5E23FA0](&v13, 8);
  v3 = v13;
  v13 = 0;
  MEMORY[0x1B5E23FA0](&v13, 8);
  v4 = v13;
  v13 = 0;
  MEMORY[0x1B5E23FA0](&v13, 8);
  v5 = v13;
  v13 = 0;
  MEMORY[0x1B5E23FA0](&v13, 8);
  v6 = v13;
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v7 = qword_1ED4D09F8;
  type metadata accessor for EmitterRuntime.Storage();
  v8 = swift_allocObject();
  swift_retain();
  vfx_uniform_grid_create();
  *(_QWORD *)(v8 + 16) = v9;
  v16 = 1;
  v15 = 1;
  v14 = 1;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(_WORD *)(a1 + 49) = 0;
  *(_QWORD *)(a1 + 56) = v7;
  *(_DWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 68) = 2;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 2;
  *(_QWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = v16;
  *(_WORD *)(a1 + 129) = 1;
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 160) = v15;
  v10 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = v10;
  *(_BYTE *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 216) = 0;
  *(_DWORD *)(a1 + 220) = 0;
  *(_DWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 240) = v14;
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 248) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 256) = v11;
  *(_QWORD *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 272) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_DWORD *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_QWORD *)(a1 + 496) = v11;
  *(_QWORD *)(a1 + 504) = v8;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  return result;
}

BOOL sub_1B1CD6688(uint64_t a1, uint64_t a2)
{
  int32x2_t *v2;
  int32x2_t *v3;
  uint64_t v4;
  BOOL v7;
  char v8;
  uint64_t v11;
  int32x2_t *v12;
  int32x2_t *v13;
  int32x2_t v14;

  v2 = *(int32x2_t **)a1;
  v3 = *(int32x2_t **)a2;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4 != *(_QWORD *)(*(_QWORD *)a2 + 16))
    return 0;
  if (v4)
    v7 = v2 == v3;
  else
    v7 = 1;
  if (!v7)
  {
    if (v2[4].i32[0] != v3[4].i32[0] || v2[4].i32[1] != v3[4].i32[1])
      return 0;
    v11 = v4 - 1;
    if (v11)
    {
      v12 = v3 + 5;
      v13 = v2 + 5;
      do
      {
        v14 = vceq_s32(*v13, *v12);
        if ((v14.i32[0] & v14.i32[1] & 1) == 0)
          return 0;
        ++v12;
        ++v13;
      }
      while (--v11);
    }
  }
  if ((sub_1B1CCA044(*(int32x2_t **)(a1 + 8), *(int32x2_t **)(a2 + 8)) & 1) == 0
    || (sub_1B1CCA044(*(int32x2_t **)(a1 + 16), *(int32x2_t **)(a2 + 16)) & 1) == 0
    || (sub_1B1CCA044(*(int32x2_t **)(a1 + 24), *(int32x2_t **)(a2 + 24)) & 1) == 0)
  {
    return 0;
  }
  v8 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  if (((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 42) ^ *(unsigned __int8 *)(a2 + 42)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 43) ^ *(unsigned __int8 *)(a2 + 43)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 44) ^ *(unsigned __int8 *)(a2 + 44)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 45) ^ *(unsigned __int8 *)(a2 + 45)) & 1) != 0
    || *(float *)(a1 + 48) != *(float *)(a2 + 48)
    || *(float *)(a1 + 52) != *(float *)(a2 + 52)
    || ((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 57) ^ *(unsigned __int8 *)(a2 + 57)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 58) ^ *(unsigned __int8 *)(a2 + 58)) & 1) != 0
    || *(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64)
    || ((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0
    || *(unsigned __int16 *)(a1 + 74) != *(unsigned __int16 *)(a2 + 74)
    || *(unsigned __int8 *)(a1 + 76) != *(unsigned __int8 *)(a2 + 76)
    || ((*(unsigned __int8 *)(a1 + 77) ^ *(unsigned __int8 *)(a2 + 77)) & 1) != 0)
  {
    return 0;
  }
  return *(float *)(a1 + 80) == *(float *)(a2 + 80);
}

uint64_t sub_1B1CD6880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1B202A38C(0, v3, 0);
    v4 = v14;
    ObjectType = swift_getObjectType();
    v7 = a1 + 36;
    do
    {
      v8 = *(_QWORD *)(v7 - 4);
      sub_1B1F02EF0(v8, 1, ObjectType, a3);
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1B202A38C(v10 > 1, v11 + 1, 1);
      v7 += 8;
      *(_QWORD *)(v14 + 16) = v11 + 1;
      *(_QWORD *)(v14 + 8 * v11 + 32) = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1B1CD6980()
{
  unint64_t v0;

  v0 = sub_1B2229F64();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17)
    return 23;
  else
    return v0;
}

uint64_t sub_1B1CD69D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int *v6;
  int v7;
  int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  __int128 v23;
  __int128 v24;
  _UNKNOWN **v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v3 = a1 + 32;
  v26 = a2;
  v4 = (_QWORD *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v6 = (int *)(v3 + 8 * v5);
    v7 = *v6;
    v8 = v6[1];
    v9 = v7 == -1 && v8 == 0;
    if (!v9 && (v7 & 0x80000000) == 0 && v4[1] > v7)
    {
      v10 = *v4 + 12 * v7;
      if (v8 == -1 || *(_DWORD *)(v10 + 8) == v8)
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v26 + 136) + 8 * *(int *)(*v4 + 12 * v7) + 32);
        v13 = *(_QWORD *)(v12 + 48);
        v14 = *(_QWORD *)(v13 + 16);
        if (v14)
          break;
      }
    }
LABEL_3:
    ++v5;
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1B1CC62CC((uint64_t)&v23, (unint64_t *)&qword_1ED4B8C80, (unint64_t *)&qword_1ED4B8C70, (uint64_t)&protocol descriptor for EntityComponent);
    if (v5 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v15 = *(__int16 *)(v10 + 4);
  v16 = v13 + 56;
  while (*(ValueMetadata **)(v16 - 24) != &type metadata for ParticleSetID)
  {
    v16 += 40;
    if (!--v14)
      goto LABEL_3;
  }
  v20 = v16 - 8;
  v19 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v20 + 8);
  if (v19 <= 1)
    v19 = 1;
  v21 = *(_QWORD *)(v12 + 128) + v18 + v19 * v15;
  *((_QWORD *)&v24 + 1) = &type metadata for ParticleSetID;
  v25 = &off_1E637C948;
  v22 = sub_1B1A137F4((uint64_t *)&v23);
  sub_1B1F28148(v21, (uint64_t)&type metadata for ParticleSetID, (uint64_t)v22);
  sub_1B1CC62CC((uint64_t)&v23, (unint64_t *)&qword_1ED4B8C80, (unint64_t *)&qword_1ED4B8C70, (uint64_t)&protocol descriptor for EntityComponent);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1B1CD6BA4(char *a1, char *a2, unint64_t a3, int *a4, uint64_t a5)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  uint64_t (*v71)(uint64_t);
  unsigned int *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  unsigned int *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t *v93;
  uint64_t (*v94)(uint64_t);
  unsigned int *v95;
  uint64_t v96;
  BOOL v97;
  int *v98;
  _QWORD *v99;
  char *v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int *v126;
  uint64_t v127;
  unsigned int *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  char *v137;
  uint64_t v138;
  int v139;
  uint64_t updated;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t inited;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  int *v150;
  int *v151;
  unsigned int *v152;
  uint64_t v153;
  BOOL v154;
  unsigned int *v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t result;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  unint64_t v171;
  int *v172;
  int *v173;
  int *v174;
  int *v175;
  char *v176;

  v166 = a5;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B1791524(0, &qword_1ED4B9350, type metadata accessor for ParticleInitScript, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10, v11);
  v161 = (uint64_t)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v160 - v15;
  MEMORY[0x1E0C80A78](v17, v18);
  v160 = (char *)&v160 - v19;
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v160 - v22;
  sub_1B1791524(0, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript, v9);
  MEMORY[0x1E0C80A78](v24, v25);
  v164 = (uint64_t)&v160 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27, v28);
  v163 = (uint64_t)&v160 - v29;
  MEMORY[0x1E0C80A78](v30, v31);
  v168 = (char *)&v160 - v32;
  MEMORY[0x1E0C80A78](v33, v34);
  v35 = a4;
  v167 = (uint64_t)&v160 - v36;
  v37 = a2 - a1;
  v38 = a2 - a1 + 7;
  if (a2 - a1 >= 0)
    v38 = a2 - a1;
  v39 = v38 >> 3;
  v171 = a3;
  v172 = v35;
  v40 = a3 - (_QWORD)a2;
  v41 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v41 = a3 - (_QWORD)a2;
  v42 = v41 >> 3;
  v176 = a1;
  v175 = v35;
  if (v39 >= v41 >> 3)
  {
    if (v40 < -7)
      goto LABEL_224;
    if (v35 != (int *)a2 || &a2[8 * v42] <= (char *)v35)
    {
      memmove(v35, a2, 8 * v42);
      v35 = v172;
    }
    v98 = &v35[2 * v42];
    v174 = v98;
    v176 = a2;
    if (v40 < 8 || a1 >= a2)
    {
LABEL_223:
      sub_1B216CEB8((void **)&v176, (const void **)&v175, &v174);
      return 1;
    }
    v99 = (_QWORD *)(v166 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v100 = a2;
    v101 = (_QWORD *)v171;
    v160 = a1;
    v162 = v16;
    while (1)
    {
      v169 = a2;
      v102 = v99;
      v103 = *(v98 - 2);
      v104 = *(v98 - 1);
      v106 = *((int *)v100 - 2);
      v100 -= 8;
      v105 = v106;
      v107 = *((_DWORD *)v100 + 1);
      v108 = (_DWORD)v103 == -1 && v104 == 0;
      v171 = (unint64_t)v101;
      v173 = v98;
      v168 = (char *)(v101 - 1);
      v165 = v98 - 2;
      if (v108 || (v103 & 0x80000000) != 0 || v102[1] <= v103)
        break;
      v109 = *v102 + 12 * (int)v103;
      if (v104 != -1 && *(_DWORD *)(v109 + 8) != v104)
        break;
      v111 = *(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * *(int *)(*v102 + 12 * (int)v103) + 32);
      v112 = *(_QWORD *)(v111 + 48);
      v113 = *(_QWORD *)(v112 + 16);
      if (!v113)
        break;
      v114 = *(__int16 *)(v109 + 4);
      v115 = (_QWORD *)(v112 + 56);
      while ((ValueMetadata *)*(v115 - 3) != &type metadata for GraphScriptingConfig)
      {
        v115 += 5;
        if (!--v113)
          goto LABEL_137;
      }
      v130 = *(char *)(*(_QWORD *)(v111 + 128) + *v115 + 32 * v114);
      if (v130 > 6)
        v125 = 1;
      else
        v125 = qword_1B228CC80[v130];
      v124 = (uint64_t)v162;
      v99 = v102;
      if ((_DWORD)v105 == -1 && !v107)
      {
LABEL_182:
        v167 = v125;
        v137 = a1;
        v138 = v124;
        v139 = v107;
        updated = type metadata accessor for ParticleUpdateScript(0);
        v141 = *(_QWORD *)(updated - 8);
        if (*(_QWORD *)(v141 + 64))
        {
          if ((_DWORD)v105 == -1)
            goto LABEL_191;
          v142 = *(_QWORD *)(v141 + 72);
          if ((v105 & 0x80000000) != 0)
            goto LABEL_191;
LABEL_188:
          if (v99[1] <= v105 || v139 != -1 && *(_DWORD *)(*v99 + 12 * (int)v105 + 8) != v139)
            goto LABEL_191;
          v152 = (unsigned int *)(*v99 + 12 * (int)v105);
          v143 = v164;
          v153 = v170;
          sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v152 + 32), *v152 | ((unint64_t)*((unsigned __int16 *)v152 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v152 + 2) << 32), v142, v166, v164);
          v170 = v153;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v143, 1, updated) != 1)
          {
            sub_1B1B1DC9C(v143, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
            v154 = v167 < 1;
            v149 = v172;
            v98 = v173;
            v99 = v102;
            v146 = v169;
LABEL_213:
            v150 = (int *)v168;
            a1 = v137;
            if (!v154)
              goto LABEL_203;
            goto LABEL_215;
          }
        }
        else
        {
          if ((_DWORD)v105 != -1)
          {
            v142 = 0;
            if ((v105 & 0x80000000) == 0)
              goto LABEL_188;
          }
LABEL_191:
          v143 = v164;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v164, 1, 1, updated);
        }
        sub_1B1B1DC9C(v143, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
        inited = type metadata accessor for ParticleInitScript(0);
        v145 = *(_QWORD *)(inited - 8);
        if (*(_QWORD *)(v145 + 64))
        {
          v99 = v102;
          v146 = v169;
          if ((_DWORD)v105 == -1)
            goto LABEL_201;
          v147 = *(_QWORD *)(v145 + 72);
          if ((v105 & 0x80000000) != 0)
            goto LABEL_201;
        }
        else
        {
          v99 = v102;
          v146 = v169;
          if ((_DWORD)v105 == -1 || (v147 = 0, (v105 & 0x80000000) != 0))
          {
LABEL_201:
            v148 = v138;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v145 + 56))(v138, 1, 1, inited);
LABEL_202:
            a1 = v137;
            sub_1B1B1DC9C(v148, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
            v149 = v172;
            v98 = v173;
            v150 = (int *)v168;
            if ((v167 & 0x8000000000000000) == 0)
              goto LABEL_203;
            goto LABEL_215;
          }
        }
        if (v99[1] <= v105 || v139 != -1 && *(_DWORD *)(*v99 + 12 * (int)v105 + 8) != v139)
          goto LABEL_201;
        v155 = (unsigned int *)(*v99 + 12 * (int)v105);
        v148 = v138;
        v156 = v170;
        sub_1B1D1DB30(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v155 + 32), *v155 | ((unint64_t)*((unsigned __int16 *)v155 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v155+ 2) << 32), v147, v166, v138);
        v170 = v156;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v138, 1, inited) == 1)
          goto LABEL_202;
        sub_1B1B1DC9C(v138, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
        v154 = v167 < 1;
        v149 = v172;
        v98 = v173;
        goto LABEL_213;
      }
LABEL_174:
      if ((v105 & 0x80000000) != 0)
        goto LABEL_182;
      if (v99[1] <= v105)
        goto LABEL_182;
      v131 = *v99 + 12 * (int)v105;
      v132 = *(__int16 *)(v131 + 4);
      if (v107 != -1 && *(_DWORD *)(v131 + 8) != v107)
        goto LABEL_182;
      v133 = *(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * *(int *)(*v99 + 12 * (int)v105) + 32);
      v134 = *(_QWORD *)(v133 + 48);
      v135 = *(_QWORD *)(v134 + 16);
      if (!v135)
        goto LABEL_182;
      v136 = (_QWORD *)(v134 + 56);
      while ((ValueMetadata *)*(v136 - 3) != &type metadata for GraphScriptingConfig)
      {
        v136 += 5;
        if (!--v135)
          goto LABEL_182;
      }
      v157 = *(char *)(*(_QWORD *)(v133 + 128) + *v136 + 32 * v132);
      if (v157 > 6)
        v158 = 1;
      else
        v158 = qword_1B228CC80[v157];
      v149 = v172;
      v98 = v173;
      v150 = (int *)v168;
      v146 = v169;
      if (v125 >= v158)
      {
LABEL_203:
        v151 = v165;
        v174 = v165;
        if (v171 < (unint64_t)v98 || v150 >= v98 || (int *)v171 != v98)
          *(_QWORD *)v150 = *(_QWORD *)v165;
        v100 = v146;
        v98 = v151;
        if (v151 <= v149)
          goto LABEL_223;
        goto LABEL_121;
      }
LABEL_215:
      if ((char *)v171 != v146 || v150 >= (int *)v146)
        *(_QWORD *)v150 = *(_QWORD *)v100;
      v176 = v100;
      if (v98 <= v149)
        goto LABEL_223;
LABEL_121:
      a2 = v100;
      v101 = v150;
      if (v100 <= a1)
        goto LABEL_223;
    }
LABEL_137:
    LODWORD(v167) = v107;
    v116 = type metadata accessor for ParticleUpdateScript(0);
    v117 = *(_QWORD *)(v116 - 8);
    if (*(_QWORD *)(v117 + 64))
    {
      if ((_DWORD)v103 == -1)
        goto LABEL_146;
      v118 = *(_QWORD *)(v117 + 72);
      if ((v103 & 0x80000000) != 0)
        goto LABEL_146;
    }
    else
    {
      if ((_DWORD)v103 == -1)
        goto LABEL_146;
      v118 = 0;
      if ((v103 & 0x80000000) != 0)
        goto LABEL_146;
    }
    if (v102[1] > v103 && (v104 == -1 || *(_DWORD *)(*v102 + 12 * (int)v103 + 8) == v104))
    {
      v126 = (unsigned int *)(*v102 + 12 * (int)v103);
      v119 = v163;
      v127 = v170;
      sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v126 + 32), *v126 | ((unint64_t)*((unsigned __int16 *)v126 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v126+ 2) << 32), v118, v166, v163);
      v170 = v127;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v119, 1, v116) != 1)
      {
        sub_1B1B1DC9C(v119, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
        v125 = 1;
        if ((_DWORD)v105 != -1)
        {
          v124 = (uint64_t)v162;
          a1 = v160;
LABEL_173:
          v99 = v102;
          v107 = v167;
          goto LABEL_174;
        }
        v124 = (uint64_t)v162;
        a1 = v160;
        goto LABEL_158;
      }
LABEL_147:
      sub_1B1B1DC9C(v119, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
      v120 = type metadata accessor for ParticleInitScript(0);
      v121 = *(_QWORD *)(v120 - 8);
      if (*(_QWORD *)(v121 + 64))
      {
        a1 = v160;
        if ((_DWORD)v103 == -1)
          goto LABEL_156;
        v122 = *(_QWORD *)(v121 + 72);
        if ((v103 & 0x80000000) != 0)
          goto LABEL_156;
      }
      else
      {
        a1 = v160;
        if ((_DWORD)v103 == -1)
          goto LABEL_156;
        v122 = 0;
        if ((v103 & 0x80000000) != 0)
          goto LABEL_156;
      }
      if (v102[1] > v103 && (v104 == -1 || *(_DWORD *)(*v102 + 12 * (int)v103 + 8) == v104))
      {
        v128 = (unsigned int *)(*v102 + 12 * (int)v103);
        v123 = v161;
        v129 = v170;
        sub_1B1D1DB30(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v128 + 32), *v128 | ((unint64_t)*((unsigned __int16 *)v128 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v128+ 2) << 32), v122, v166, v161);
        v170 = v129;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v123, 1, v120) != 1)
        {
          sub_1B1B1DC9C(v123, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
          v124 = (uint64_t)v162;
          v125 = 1;
          if ((_DWORD)v105 != -1)
            goto LABEL_173;
          goto LABEL_158;
        }
LABEL_157:
        v124 = (uint64_t)v162;
        sub_1B1B1DC9C(v123, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
        v125 = 0;
        if ((_DWORD)v105 != -1)
          goto LABEL_173;
LABEL_158:
        v99 = v102;
        v107 = v167;
        if (!(_DWORD)v167)
          goto LABEL_182;
        goto LABEL_174;
      }
LABEL_156:
      v123 = v161;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56))(v161, 1, 1, v120);
      goto LABEL_157;
    }
LABEL_146:
    v119 = v163;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v163, 1, 1, v116);
    goto LABEL_147;
  }
  if (v37 >= -7)
  {
    v43 = (uint64_t)v168;
    if (v35 != (int *)a1 || &a1[8 * v39] <= (char *)v35)
    {
      memmove(v35, a1, 8 * v39);
      v35 = v172;
    }
    v165 = &v35[2 * v39];
    v174 = v165;
    if (v37 >= 8 && (unint64_t)a2 < v171)
    {
      v44 = (int *)(v166 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      v173 = (int *)(v166 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      while (1)
      {
        v45 = *((_DWORD *)a2 + 1);
        v46 = *(int *)a2;
        v47 = v35[1];
        v48 = *v35;
        v49 = (_DWORD)v46 == -1 && v45 == 0;
        v172 = v35;
        if (v49)
          break;
        if ((v46 & 0x80000000) != 0)
          break;
        if (*((_QWORD *)v44 + 1) <= v46)
          break;
        v50 = *(_QWORD *)v44;
        v51 = *(_QWORD *)v44 + 12 * (int)v46;
        v52 = *(__int16 *)(v51 + 4);
        if (v45 != -1 && *(_DWORD *)(v51 + 8) != v45)
          break;
        v53 = *(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * *(int *)(v50 + 12 * (int)v46) + 32);
        v54 = *(_QWORD *)(v53 + 48);
        v55 = *(_QWORD *)(v54 + 16);
        if (!v55)
          break;
        v56 = (_QWORD *)(v54 + 56);
        while ((ValueMetadata *)*(v56 - 3) != &type metadata for GraphScriptingConfig)
        {
          v56 += 5;
          if (!--v55)
            goto LABEL_25;
        }
        v74 = *(char *)(*(_QWORD *)(v53 + 128) + *v56 + 32 * v52);
        if (v74 > 6)
        {
          v66 = 1;
          if ((_DWORD)v48 != -1)
            goto LABEL_59;
        }
        else
        {
          v66 = qword_1B228CC80[v74];
          if ((_DWORD)v48 != -1)
            goto LABEL_59;
        }
        if (!v47)
          goto LABEL_75;
LABEL_59:
        if ((v48 & 0x80000000) != 0
          || *((_QWORD *)v173 + 1) <= v48
          || (v75 = *(_QWORD *)v173 + 12 * (int)v48, v76 = *(__int16 *)(v75 + 4), v47 != -1)
          && *(_DWORD *)(v75 + 8) != v47
          || (v77 = *(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * *(int *)(*(_QWORD *)v173 + 12 * (int)v48) + 32),
              v78 = *(_QWORD *)(v77 + 48),
              (v79 = *(_QWORD *)(v78 + 16)) == 0))
        {
LABEL_75:
          v83 = type metadata accessor for ParticleUpdateScript(0);
          v84 = *(_QWORD *)(v83 - 8);
          if (*(_QWORD *)(v84 + 64))
          {
            if ((_DWORD)v48 == -1)
              goto LABEL_84;
            v85 = *(_QWORD *)(v84 + 72);
            if ((v48 & 0x80000000) != 0)
              goto LABEL_84;
LABEL_81:
            if (*((_QWORD *)v173 + 1) <= v48 || v47 != -1 && *(_DWORD *)(*(_QWORD *)v173 + 12 * (int)v48 + 8) != v47)
              goto LABEL_84;
            v90 = (unsigned int *)(*(_QWORD *)v173 + 12 * (int)v48);
            v91 = v170;
            sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v90 + 32), *v90 | ((unint64_t)*((unsigned __int16 *)v90 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v90 + 2) << 32), v85, v166, v43);
            v170 = v91;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v43, 1, v83) != 1)
            {
              v92 = v43;
              v93 = &qword_1ED4B9628;
              v94 = type metadata accessor for ParticleUpdateScript;
LABEL_103:
              sub_1B1B1DC9C(v92, v93, v94);
              v35 = v172;
              if (v66 < 1)
                goto LABEL_104;
              goto LABEL_96;
            }
          }
          else
          {
            if ((_DWORD)v48 != -1)
            {
              v85 = 0;
              if ((v48 & 0x80000000) == 0)
                goto LABEL_81;
            }
LABEL_84:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v43, 1, 1, v83);
          }
          sub_1B1B1DC9C(v43, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
          v86 = type metadata accessor for ParticleInitScript(0);
          v87 = *(_QWORD *)(v86 - 8);
          if (*(_QWORD *)(v87 + 64))
          {
            if ((_DWORD)v48 == -1)
              goto LABEL_94;
            v88 = *(_QWORD *)(v87 + 72);
            if ((v48 & 0x80000000) != 0)
              goto LABEL_94;
          }
          else if ((_DWORD)v48 == -1 || (v88 = 0, (v48 & 0x80000000) != 0))
          {
LABEL_94:
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v23, 1, 1, v86);
LABEL_95:
            sub_1B1B1DC9C((uint64_t)v23, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
            v35 = v172;
            if (v66 < 0)
              goto LABEL_104;
            goto LABEL_96;
          }
          if (*((_QWORD *)v173 + 1) <= v48 || v47 != -1 && *(_DWORD *)(*(_QWORD *)v173 + 12 * (int)v48 + 8) != v47)
            goto LABEL_94;
          v95 = (unsigned int *)(*(_QWORD *)v173 + 12 * (int)v48);
          v96 = v170;
          sub_1B1D1DB30(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v95 + 32), *v95 | ((unint64_t)*((unsigned __int16 *)v95 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v95+ 2) << 32), v88, v166, (uint64_t)v23);
          v170 = v96;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v23, 1, v86) == 1)
            goto LABEL_95;
          v92 = (uint64_t)v23;
          v93 = &qword_1ED4B9350;
          v94 = type metadata accessor for ParticleInitScript;
          goto LABEL_103;
        }
        v80 = (_QWORD *)(v78 + 56);
        while ((ValueMetadata *)*(v80 - 3) != &type metadata for GraphScriptingConfig)
        {
          v80 += 5;
          if (!--v79)
            goto LABEL_75;
        }
        v81 = *(char *)(*(_QWORD *)(v77 + 128) + *v80 + 32 * v76);
        if (v81 > 6)
          v82 = 1;
        else
          v82 = qword_1B228CC80[v81];
        v35 = v172;
        if (v66 < v82)
        {
LABEL_104:
          v89 = (int *)(a2 + 8);
          if (a1 < a2 || a1 >= (char *)v89 || a1 != a2)
            *(_QWORD *)a1 = *(_QWORD *)a2;
          goto LABEL_108;
        }
LABEL_96:
        if (a1 != (char *)v35)
          *(_QWORD *)a1 = *(_QWORD *)v35;
        v35 += 2;
        v175 = v35;
        v89 = (int *)a2;
LABEL_108:
        a1 += 8;
        v176 = a1;
        if (v35 < v165)
        {
          a2 = (char *)v89;
          v97 = (unint64_t)v89 >= v171;
          v44 = v173;
          if (!v97)
            continue;
        }
        goto LABEL_223;
      }
LABEL_25:
      LODWORD(v169) = v47;
      v57 = v23;
      v58 = type metadata accessor for ParticleUpdateScript(0);
      v59 = *(_QWORD *)(v58 - 8);
      if (*(_QWORD *)(v59 + 64))
      {
        if ((_DWORD)v46 == -1)
          goto LABEL_34;
        v60 = *(_QWORD *)(v59 + 72);
        if ((v46 & 0x80000000) != 0)
          goto LABEL_34;
      }
      else
      {
        if ((_DWORD)v46 == -1)
          goto LABEL_34;
        v60 = 0;
        if ((v46 & 0x80000000) != 0)
          goto LABEL_34;
      }
      if (*((_QWORD *)v173 + 1) > v46 && (v45 == -1 || *(_DWORD *)(*(_QWORD *)v173 + 12 * (int)v46 + 8) == v45))
      {
        v67 = (unsigned int *)(*(_QWORD *)v173 + 12 * (int)v46);
        v61 = v167;
        v68 = v170;
        sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v67 + 32), *v67 | ((unint64_t)*((unsigned __int16 *)v67 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v67+ 2) << 32), v60, v166, v167);
        v170 = v68;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v61, 1, v58) != 1)
        {
          v69 = v61;
          v70 = &qword_1ED4B9628;
          v71 = type metadata accessor for ParticleUpdateScript;
          goto LABEL_52;
        }
LABEL_35:
        sub_1B1B1DC9C(v61, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
        v62 = type metadata accessor for ParticleInitScript(0);
        v63 = *(_QWORD *)(v62 - 8);
        if (*(_QWORD *)(v63 + 64))
        {
          if ((_DWORD)v46 == -1)
            goto LABEL_44;
          v64 = *(_QWORD *)(v63 + 72);
          if ((v46 & 0x80000000) != 0)
            goto LABEL_44;
        }
        else
        {
          if ((_DWORD)v46 == -1)
            goto LABEL_44;
          v64 = 0;
          if ((v46 & 0x80000000) != 0)
            goto LABEL_44;
        }
        if (*((_QWORD *)v173 + 1) <= v46 || v45 != -1 && *(_DWORD *)(*(_QWORD *)v173 + 12 * (int)v46 + 8) != v45)
        {
LABEL_44:
          v65 = (uint64_t)v160;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v160, 1, 1, v62);
          goto LABEL_45;
        }
        v72 = (unsigned int *)(*(_QWORD *)v173 + 12 * (int)v46);
        v65 = (uint64_t)v160;
        v73 = v170;
        sub_1B1D1DB30(*(_QWORD *)(*(_QWORD *)(v166 + 136) + 8 * (int)*v72 + 32), *v72 | ((unint64_t)*((unsigned __int16 *)v72 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v72+ 2) << 32), v64, v166, (uint64_t)v160);
        v170 = v73;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v65, 1, v62) == 1)
        {
LABEL_45:
          v23 = v57;
          sub_1B1B1DC9C(v65, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
          v66 = 0;
          v43 = (uint64_t)v168;
          if ((_DWORD)v48 != -1)
            goto LABEL_58;
LABEL_46:
          v47 = (int)v169;
          if (!(_DWORD)v169)
            goto LABEL_75;
          goto LABEL_59;
        }
        v69 = v65;
        v70 = &qword_1ED4B9350;
        v71 = type metadata accessor for ParticleInitScript;
LABEL_52:
        sub_1B1B1DC9C(v69, v70, v71);
        v23 = v57;
        v66 = 1;
        if ((_DWORD)v48 != -1)
        {
          v43 = (uint64_t)v168;
LABEL_58:
          v47 = (int)v169;
          goto LABEL_59;
        }
        v43 = (uint64_t)v168;
        goto LABEL_46;
      }
LABEL_34:
      v61 = v167;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v167, 1, 1, v58);
      goto LABEL_35;
    }
    goto LABEL_223;
  }
LABEL_224:
  swift_release();
  result = sub_1B2229700();
  __break(1u);
  return result;
}

void sub_1B1CD7CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  BOOL v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t updated;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  void (*v86)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t inited;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;

  v113 = a1;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B1791524(0, &qword_1ED4B9350, type metadata accessor for ParticleInitScript, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10, v11);
  v110 = (uint64_t)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v14);
  v109 = (uint64_t)&v105 - v15;
  sub_1B1791524(0, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript, v9);
  MEMORY[0x1E0C80A78](v16, v17);
  v112 = (uint64_t)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v20);
  v111 = (uint64_t)&v105 - v21;
  v106 = a2;
  if (a3 != a2)
  {
    v22 = *a4;
    v108 = a5;
    v23 = (_QWORD *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v114 = v22;
    v115 = v23;
    while (1)
    {
      v24 = *(_QWORD *)(v22 + 8 * a3);
      v107 = a3;
      v25 = a3;
      while (1)
      {
        v116 = v25;
        v26 = v25 - 1;
        v27 = (int *)(v22 + 8 * (v25 - 1));
        v28 = v27[1];
        v29 = *v27;
        v30 = v24;
        v31 = HIDWORD(v24);
        v32 = (_DWORD)v24 == -1 && HIDWORD(v24) == 0;
        v33 = v32;
        if (v32 || (v24 & 0x80000000) != 0 || v23[1] <= (int)v24)
          break;
        v38 = *v23 + 12 * (int)v24;
        if (HIDWORD(v24) != -1 && *(_DWORD *)(v38 + 8) != HIDWORD(v24))
          break;
        v40 = *(_QWORD *)(*(_QWORD *)(v108 + 136) + 8 * *(int *)(*v23 + 12 * (int)v24) + 32);
        v41 = *(_QWORD *)(v40 + 48);
        v42 = *(_QWORD *)(v41 + 16);
        if (!v42)
          break;
        v43 = *(__int16 *)(v38 + 4);
        v44 = (_QWORD *)(v41 + 56);
        while ((ValueMetadata *)*(v44 - 3) != &type metadata for GraphScriptingConfig)
        {
          v44 += 5;
          if (!--v42)
            goto LABEL_14;
        }
        v65 = *(char *)(*(_QWORD *)(v40 + 128) + *v44 + 32 * v43);
        if (v65 > 6)
          v64 = 1;
        else
          v64 = qword_1B228CC80[v65];
        if ((_DWORD)v29 != -1 || v28)
          goto LABEL_62;
LABEL_76:
        updated = type metadata accessor for ParticleUpdateScript(0);
        v77 = updated;
        v78 = *(_QWORD *)(updated - 8);
        v79 = *(_QWORD *)(v78 + 64);
        if (v79)
          v79 = *(_QWORD *)(v78 + 72);
        if (((_DWORD)v29 != -1 || v28)
          && (v29 & 0x80000000) == 0
          && v23[1] > v29
          && ((v80 = *v23 + 12 * (int)v29, v81 = *(__int16 *)(v80 + 4), v28 == -1) || *(_DWORD *)(v80 + 8) == v28)
          && (v82 = *(_QWORD *)(*(_QWORD *)(v108 + 136) + 8 * *(int *)(*v23 + 12 * (int)v29) + 32),
              v83 = *(_QWORD *)(v82 + 48),
              (v84 = *(_QWORD *)(v83 + 16)) != 0))
        {
          v85 = (_QWORD *)(v83 + 56);
          while (*(v85 - 3) != updated)
          {
            v85 += 5;
            if (!--v84)
              goto LABEL_88;
          }
          v101 = v112;
          sub_1B1792810(*(_QWORD *)(v82 + 128) + *v85 + v79 * v81, v112, type metadata accessor for ParticleUpdateScript);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v101, 0, 1, v77);
          v102 = v101;
          v23 = v115;
          sub_1B1B1DC9C(v102, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
          v22 = v114;
          v98 = v116;
          if (v64 >= 1)
            goto LABEL_4;
        }
        else
        {
LABEL_88:
          v86 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56);
          v87 = v112;
          v86(v112, 1, 1, updated);
          sub_1B1B1DC9C(v87, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
          inited = type metadata accessor for ParticleInitScript(0);
          v89 = inited;
          v90 = *(_QWORD *)(inited - 8);
          v91 = *(_QWORD *)(v90 + 64);
          if (v91)
            v91 = *(_QWORD *)(v90 + 72);
          if (((_DWORD)v29 != -1 || v28)
            && (v29 & 0x80000000) == 0
            && v23[1] > v29
            && ((v92 = *v23 + 12 * (int)v29, v93 = *(__int16 *)(v92 + 4), v28 == -1) || *(_DWORD *)(v92 + 8) == v28)
            && (v94 = *(_QWORD *)(*(_QWORD *)(v108 + 136) + 8 * *(int *)(*v23 + 12 * (int)v29) + 32),
                v95 = *(_QWORD *)(v94 + 48),
                (v96 = *(_QWORD *)(v95 + 16)) != 0))
          {
            v97 = (_QWORD *)(v95 + 56);
            v22 = v114;
            v98 = v116;
            while (*(v97 - 3) != inited)
            {
              v97 += 5;
              if (!--v96)
                goto LABEL_102;
            }
            v103 = v109;
            sub_1B1792810(*(_QWORD *)(v94 + 128) + *v97 + v91 * v93, v109, type metadata accessor for ParticleInitScript);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v103, 0, 1, v89);
            v104 = v103;
            v23 = v115;
            sub_1B1B1DC9C(v104, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
            if (v64 >= 1)
              goto LABEL_4;
          }
          else
          {
            v22 = v114;
            v98 = v116;
LABEL_102:
            v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
            v100 = v109;
            v99(v109, 1, 1, inited);
            sub_1B1B1DC9C(v100, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
            if ((v64 & 0x8000000000000000) == 0)
              goto LABEL_4;
          }
        }
LABEL_103:
        v24 = *(_QWORD *)(v22 + 8 * v98);
        *(_QWORD *)(v22 + 8 * v98) = *(_QWORD *)(v22 + 8 * v26);
        *(_QWORD *)(v22 + 8 * v26) = v24;
        v25 = v26;
        if (v26 == v113)
          goto LABEL_4;
      }
LABEL_14:
      v34 = type metadata accessor for ParticleUpdateScript(0);
      v35 = v34;
      v36 = *(_QWORD *)(v34 - 8);
      if (*(_QWORD *)(v36 + 64))
      {
        if (v33)
          break;
        v37 = *(_QWORD *)(v36 + 72);
        if (v30 < 0)
          break;
      }
      else
      {
        if (v33)
          break;
        v37 = 0;
        if (v30 < 0)
          break;
      }
      if (v115[1] <= v30)
        break;
      v45 = *v115 + 12 * v30;
      v46 = *(__int16 *)(v45 + 4);
      if (v31 != -1 && *(_DWORD *)(v45 + 8) != v31)
        break;
      v47 = *(_QWORD *)(*(_QWORD *)(v108 + 136) + 8 * *(int *)(*v115 + 12 * v30) + 32);
      v48 = *(_QWORD *)(v47 + 48);
      v49 = *(_QWORD *)(v48 + 16);
      if (!v49)
        break;
      v50 = (_QWORD *)(v48 + 56);
      while (*(v50 - 3) != v34)
      {
        v50 += 5;
        if (!--v49)
          goto LABEL_39;
      }
      v66 = v111;
      sub_1B1792810(*(_QWORD *)(v47 + 128) + *v50 + v37 * v46, v111, type metadata accessor for ParticleUpdateScript);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v66, 0, 1, v35);
      sub_1B1B1DC9C(v66, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
      v64 = 1;
      if ((_DWORD)v29 == -1)
      {
        v23 = v115;
        if (!v28)
          goto LABEL_76;
      }
      else
      {
        v23 = v115;
      }
LABEL_62:
      if ((v29 & 0x80000000) != 0)
        goto LABEL_76;
      if (v23[1] <= v29)
        goto LABEL_76;
      v68 = *v23 + 12 * (int)v29;
      v69 = *(__int16 *)(v68 + 4);
      if (v28 != -1 && *(_DWORD *)(v68 + 8) != v28)
        goto LABEL_76;
      v70 = *(_QWORD *)(*(_QWORD *)(v108 + 136) + 8 * *(int *)(*v23 + 12 * (int)v29) + 32);
      v71 = *(_QWORD *)(v70 + 48);
      v72 = *(_QWORD *)(v71 + 16);
      if (!v72)
        goto LABEL_76;
      v73 = (_QWORD *)(v71 + 56);
      while ((ValueMetadata *)*(v73 - 3) != &type metadata for GraphScriptingConfig)
      {
        v73 += 5;
        if (!--v72)
          goto LABEL_76;
      }
      v74 = *(char *)(*(_QWORD *)(v70 + 128) + *v73 + 32 * v69);
      if (v74 > 6)
        v75 = 1;
      else
        v75 = qword_1B228CC80[v74];
      v22 = v114;
      v98 = v116;
      if (v64 < v75)
        goto LABEL_103;
LABEL_4:
      a3 = v107 + 1;
      if (v107 + 1 == v106)
        return;
    }
LABEL_39:
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v52 = v111;
    v51(v111, 1, 1, v34);
    sub_1B1B1DC9C(v52, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
    v53 = type metadata accessor for ParticleInitScript(0);
    v54 = v53;
    v55 = *(_QWORD *)(v53 - 8);
    if (*(_QWORD *)(v55 + 64))
    {
      if (v33)
        goto LABEL_52;
      v56 = *(_QWORD *)(v55 + 72);
      if (v30 < 0)
        goto LABEL_52;
    }
    else
    {
      if (v33)
        goto LABEL_52;
      v56 = 0;
      if (v30 < 0)
        goto LABEL_52;
    }
    if (v115[1] > v30)
    {
      v57 = *v115 + 12 * v30;
      v58 = *(__int16 *)(v57 + 4);
      if (v31 == -1 || *(_DWORD *)(v57 + 8) == v31)
      {
        v59 = *(_QWORD *)(*(_QWORD *)(v108 + 136) + 8 * *(int *)(*v115 + 12 * v30) + 32);
        v60 = *(_QWORD *)(v59 + 48);
        v61 = *(_QWORD *)(v60 + 16);
        if (v61)
        {
          v62 = (_QWORD *)(v60 + 56);
          while (*(v62 - 3) != v53)
          {
            v62 += 5;
            if (!--v61)
              goto LABEL_52;
          }
          v67 = v110;
          sub_1B1792810(*(_QWORD *)(v59 + 128) + *v62 + v56 * v58, v110, type metadata accessor for ParticleInitScript);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v67, 0, 1, v54);
          sub_1B1B1DC9C(v67, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
          v64 = 1;
          if ((_DWORD)v29 != -1)
          {
LABEL_61:
            v23 = v115;
            goto LABEL_62;
          }
          goto LABEL_53;
        }
      }
    }
LABEL_52:
    v63 = v110;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v110, 1, 1, v53);
    sub_1B1B1DC9C(v63, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
    v64 = 0;
    if ((_DWORD)v29 != -1)
      goto LABEL_61;
LABEL_53:
    v23 = v115;
    if (!v28)
      goto LABEL_76;
    goto LABEL_62;
  }
}

uint64_t sub_1B1CD8594(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int *v59;
  int v60;
  uint64_t v61;
  int *v62;
  int v63;
  uint64_t v64;
  uint64_t v66;
  unsigned int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  uint64_t v79;
  uint64_t updated;
  uint64_t v81;
  uint64_t v82;
  uint64_t inited;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  BOOL v95;
  unsigned int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  BOOL v120;
  char v121;
  unsigned int *v122;
  uint64_t v123;
  unsigned int *v124;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  unsigned int *v128;
  uint64_t v129;
  BOOL v130;
  char v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  BOOL v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  unint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  unsigned int *v189;
  uint64_t v190;
  unint64_t *v191;
  uint64_t (*v192)(uint64_t);
  unsigned int *v193;
  unsigned int *v194;
  unsigned int *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  unint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  unint64_t v211;
  uint64_t result;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  _QWORD *v232;
  unsigned int *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;

  v3 = v2;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1B1791524(0, &qword_1ED4B9350, type metadata accessor for ParticleInitScript, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7, v8);
  v237 = (uint64_t)&v213 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v236 = (uint64_t)&v213 - v12;
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v213 - v15;
  MEMORY[0x1E0C80A78](v17, v18);
  v223 = (uint64_t)&v213 - v19;
  MEMORY[0x1E0C80A78](v20, v21);
  v220 = (char *)&v213 - v22;
  MEMORY[0x1E0C80A78](v23, v24);
  v219 = (uint64_t)&v213 - v25;
  sub_1B1791524(0, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript, v6);
  MEMORY[0x1E0C80A78](v26, v27);
  v239 = (uint64_t)&v213 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29, v30);
  v238 = (uint64_t)&v213 - v31;
  MEMORY[0x1E0C80A78](v32, v33);
  v225 = (uint64_t)&v213 - v34;
  MEMORY[0x1E0C80A78](v35, v36);
  v38 = (char *)&v213 - v37;
  MEMORY[0x1E0C80A78](v39, v40);
  v221 = (char *)&v213 - v41;
  MEMORY[0x1E0C80A78](v42, v43);
  v45 = (char *)&v213 - v44;
  v46 = a1[1];
  swift_retain_n();
  v47 = sub_1B22299E8();
  if (v47 >= v46)
  {
    if (v46)
    {
      swift_retain();
      sub_1B1CD7CD4(0, v46, 1, a1, a2);
    }
    swift_release_n();
    return swift_release();
  }
  v218 = v47;
  v242 = a2;
  if (v46 >= 0)
    v48 = v46;
  else
    v48 = v46 + 1;
  if (v46 >= -1)
  {
    v224 = v16;
    v222 = v38;
    v227 = v46;
    v217 = v45;
    v213 = a1;
    if (v46 >= 2)
    {
      v49 = v48 >> 1;
      v50 = sub_1B2228B0C();
      *(_QWORD *)(v50 + 16) = v49;
      v216 = v50;
      v229 = (int *)(v50 + 32);
      v51 = v242;
LABEL_13:
      v53 = 0;
      v54 = *a1;
      v232 = (_QWORD *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      v214 = v54 + 20;
      v55 = (char *)MEMORY[0x1E0DEE9D8];
      v234 = v54;
      v215 = v54 - 8;
      v56 = v227;
      while (1)
      {
        v58 = v53 + 1;
        v231 = v53;
        if (v53 + 1 >= v56)
          goto LABEL_161;
        v230 = (uint64_t)v55;
        v59 = (int *)(v234 + 8 * v58);
        v60 = v59[1];
        v61 = *v59;
        v62 = (int *)(v234 + 8 * v53);
        v63 = v62[1];
        v64 = *v62;
        if ((_DWORD)v61 == -1 && v60 == 0)
          break;
        v66 = (uint64_t)v220;
        if ((v61 & 0x80000000) != 0 || v232[1] <= v61)
          goto LABEL_32;
        if (v60 != -1 && *(_DWORD *)(*v232 + 12 * (int)v61 + 8) != v60)
          goto LABEL_32;
        v68 = (unsigned int *)(*v232 + 12 * (int)v61);
        sub_1B1D1CF18(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v68 + 32), *v68 | ((unint64_t)*((unsigned __int16 *)v68 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v68+ 2) << 32), 32, v242, (uint64_t)&v240);
        if (!v241)
          goto LABEL_32;
        if (v240 >= 7u)
          v69 = 1;
        else
          v69 = qword_1B228CC80[(char)v240];
        v228 = v69;
        v77 = (uint64_t)v221;
        sub_1B1B0BC78(v240, v241);
        if ((_DWORD)v64 == -1)
        {
LABEL_54:
          if (!v63)
            goto LABEL_62;
        }
LABEL_55:
        if ((v64 & 0x80000000) == 0 && v232[1] > v64 && (v63 == -1 || *(_DWORD *)(*v232 + 12 * (int)v64 + 8) == v63))
        {
          v78 = (unsigned int *)(*v232 + 12 * (int)v64);
          sub_1B1D1CF18(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v78 + 32), *v78 | ((unint64_t)*((unsigned __int16 *)v78 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v78+ 2) << 32), 32, v242, (uint64_t)&v240);
          if (v241)
          {
            if (v240 >= 7u)
              v79 = 1;
            else
              v79 = qword_1B228CC80[(char)v240];
            v226 = v79;
            v55 = (char *)v230;
            sub_1B1B0BC78(v240, v241);
            goto LABEL_83;
          }
        }
LABEL_62:
        updated = type metadata accessor for ParticleUpdateScript(0);
        v81 = *(_QWORD *)(updated - 8);
        if (*(_QWORD *)(v81 + 64))
        {
          if ((_DWORD)v64 == -1)
            goto LABEL_71;
          v82 = *(_QWORD *)(v81 + 72);
          if ((v64 & 0x80000000) != 0)
            goto LABEL_71;
        }
        else if ((_DWORD)v64 == -1 || (v82 = 0, (v64 & 0x80000000) != 0))
        {
LABEL_71:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v77, 1, 1, updated);
          goto LABEL_72;
        }
        if (v232[1] <= v64 || v63 != -1 && *(_DWORD *)(*v232 + 12 * (int)v64 + 8) != v63)
          goto LABEL_71;
        v193 = (unsigned int *)(*v232 + 12 * (int)v64);
        sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v193 + 32), *v193 | ((unint64_t)*((unsigned __int16 *)v193 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v193+ 2) << 32), v82, v242, v77);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v77, 1, updated) != 1)
        {
          sub_1B1B1DC9C(v77, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
          v226 = 1;
          v55 = (char *)v230;
          goto LABEL_83;
        }
LABEL_72:
        sub_1B1B1DC9C(v77, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
        inited = type metadata accessor for ParticleInitScript(0);
        v84 = *(_QWORD *)(inited - 8);
        if (*(_QWORD *)(v84 + 64))
        {
          v85 = v232;
          if ((_DWORD)v64 == -1)
            goto LABEL_81;
          v86 = *(_QWORD *)(v84 + 72);
          if ((v64 & 0x80000000) != 0)
            goto LABEL_81;
        }
        else
        {
          v85 = v232;
          if ((_DWORD)v64 == -1)
            goto LABEL_81;
          v86 = 0;
          if ((v64 & 0x80000000) != 0)
            goto LABEL_81;
        }
        if (v85[1] > v64 && (v63 == -1 || *(_DWORD *)(*v85 + 12 * (int)v64 + 8) == v63))
        {
          v195 = (unsigned int *)(*v85 + 12 * (int)v64);
          v196 = v219;
          sub_1B1D1DB30(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v195 + 32), *v195 | ((unint64_t)*((unsigned __int16 *)v195 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v195 + 2) << 32), v86, v242, v219);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v196, 1, inited) != 1)
          {
            sub_1B1B1DC9C(v196, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
            v226 = 1;
            v55 = (char *)v230;
            goto LABEL_83;
          }
          v88 = v196;
          goto LABEL_82;
        }
LABEL_81:
        v87 = v219;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v219, 1, 1, inited);
        v88 = v87;
LABEL_82:
        v55 = (char *)v230;
        sub_1B1B1DC9C(v88, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
        v226 = 0;
LABEL_83:
        v58 = v231 + 2;
        if (v231 + 2 >= v227)
          goto LABEL_155;
        v235 = v3;
        v89 = (int *)(v214 + 8 * v231);
        v90 = (uint64_t)v224;
        do
        {
          v233 = (unsigned int *)v58;
          v91 = *(v89 - 2);
          v92 = *(v89 - 1);
          v93 = *v89;
          v94 = *(v89 - 3);
          v95 = (_DWORD)v92 == -1 && v93 == 0;
          if (!v95
            && (v92 & 0x80000000) == 0
            && v232[1] > v92
            && (v93 == -1 || *(_DWORD *)(*v232 + 12 * (int)v92 + 8) == v93))
          {
            v96 = (unsigned int *)(*v232 + 12 * (int)v92);
            v97 = v235;
            sub_1B1D1CF18(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v96 + 32), *v96 | ((unint64_t)*((unsigned __int16 *)v96 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v96 + 2) << 32), 32, v242, (uint64_t)&v240);
            v235 = v97;
            if (v241)
            {
              if (v240 >= 7u)
                v98 = 1;
              else
                v98 = qword_1B228CC80[(char)v240];
              sub_1B1B0BC78(v240, v241);
              goto LABEL_117;
            }
          }
          v99 = type metadata accessor for ParticleUpdateScript(0);
          v100 = *(_QWORD *)(v99 - 8);
          if (*(_QWORD *)(v100 + 64))
          {
            if ((_DWORD)v92 == -1)
              goto LABEL_105;
            v101 = *(_QWORD *)(v100 + 72);
            if ((v92 & 0x80000000) != 0)
              goto LABEL_105;
          }
          else
          {
            if ((_DWORD)v92 == -1)
              goto LABEL_105;
            v101 = 0;
            if ((v92 & 0x80000000) != 0)
              goto LABEL_105;
          }
          if (v232[1] > v92 && (v93 == -1 || *(_DWORD *)(*v232 + 12 * (int)v92 + 8) == v93))
          {
            v102 = v94;
            v103 = v90;
            v104 = v91;
            v122 = (unsigned int *)(*v232 + 12 * (int)v92);
            v105 = (uint64_t)v222;
            v123 = v235;
            sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v122 + 32), *v122 | ((unint64_t)*((unsigned __int16 *)v122 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v122 + 2) << 32), v101, v242, (uint64_t)v222);
            v235 = v123;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v105, 1, v99) != 1)
            {
              sub_1B1B1DC9C(v105, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
              v91 = v104;
              v90 = v103;
              v94 = v102;
              v98 = 1;
              goto LABEL_117;
            }
            goto LABEL_106;
          }
LABEL_105:
          v102 = v94;
          v103 = v90;
          v104 = v91;
          v105 = (uint64_t)v222;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v222, 1, 1, v99);
LABEL_106:
          sub_1B1B1DC9C(v105, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
          v106 = type metadata accessor for ParticleInitScript(0);
          v107 = *(_QWORD *)(v106 - 8);
          if (*(_QWORD *)(v107 + 64))
          {
            v91 = v104;
            v90 = v103;
            v94 = v102;
            if ((_DWORD)v92 == -1)
              goto LABEL_115;
            v108 = *(_QWORD *)(v107 + 72);
            if ((v92 & 0x80000000) != 0)
              goto LABEL_115;
          }
          else
          {
            v91 = v104;
            v90 = v103;
            v94 = v102;
            if ((_DWORD)v92 == -1 || (v108 = 0, (v92 & 0x80000000) != 0))
            {
LABEL_115:
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v90, 1, 1, v106);
LABEL_116:
              sub_1B1B1DC9C(v90, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
              v98 = 0;
              goto LABEL_117;
            }
          }
          if (v232[1] <= v92 || v93 != -1 && *(_DWORD *)(*v232 + 12 * (int)v92 + 8) != v93)
            goto LABEL_115;
          v128 = (unsigned int *)(*v232 + 12 * (int)v92);
          v129 = v235;
          sub_1B1D1DB30(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v128 + 32), *v128 | ((unint64_t)*((unsigned __int16 *)v128 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v128 + 2) << 32), v108, v242, v90);
          v235 = v129;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v90, 1, v106) == 1)
            goto LABEL_116;
          sub_1B1B1DC9C(v90, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
          v98 = 1;
LABEL_117:
          v109 = v94;
          if ((_DWORD)v94 == -1 && !(_DWORD)v91
            || (v94 & 0x80000000) != 0
            || v232[1] <= v94
            || (_DWORD)v91 != -1 && *(_DWORD *)(*v232 + 12 * (int)v94 + 8) != (_DWORD)v91
            || (v113 = (unsigned int *)(*v232 + 12 * (int)v94),
                v114 = v235,
                sub_1B1D1CF18(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v113 + 32), *v113 | ((unint64_t)*((unsigned __int16 *)v113 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v113 + 2) << 32), 32, v242, (uint64_t)&v240), v235 = v114, !v241))
          {
            v110 = type metadata accessor for ParticleUpdateScript(0);
            v111 = *(_QWORD *)(v110 - 8);
            if (*(_QWORD *)(v111 + 64))
            {
              if ((_DWORD)v94 == -1)
                goto LABEL_135;
              v112 = *(_QWORD *)(v111 + 72);
              if ((v94 & 0x80000000) != 0)
                goto LABEL_135;
LABEL_132:
              if (v232[1] <= v94 || (_DWORD)v91 != -1 && *(_DWORD *)(*v232 + 12 * (int)v94 + 8) != (_DWORD)v91)
                goto LABEL_135;
              v124 = (unsigned int *)(*v232 + 12 * (int)v94);
              v116 = v225;
              v125 = v235;
              sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v124 + 32), *v124 | ((unint64_t)*((unsigned __int16 *)v124 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v124 + 2) << 32), v112, v242, v225);
              v235 = v125;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v116, 1, v110) != 1)
              {
                v126 = v116;
                v127 = v228 < v226;
                sub_1B1B1DC9C(v126, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
                v121 = v127 ^ (v98 > 0);
                goto LABEL_140;
              }
            }
            else
            {
              if ((_DWORD)v94 != -1)
              {
                v112 = 0;
                if ((v94 & 0x80000000) == 0)
                  goto LABEL_132;
              }
LABEL_135:
              v116 = v225;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56))(v225, 1, 1, v110);
            }
            sub_1B1B1DC9C(v116, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
            v117 = v223;
            sub_1B1D18394(v109 | (v91 << 32), v223);
            v118 = type metadata accessor for ParticleInitScript(0);
            v119 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48))(v117, 1, v118);
            sub_1B1B1DC9C(v117, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
            if (v119 == 1)
              v120 = v98 >= 0;
            else
              v120 = v98 > 0;
            v121 = (v228 < v226) ^ v120;
LABEL_140:
            v90 = (uint64_t)v224;
            v58 = (uint64_t)v233;
            if ((v121 & 1) == 0)
              goto LABEL_154;
            goto LABEL_141;
          }
          if (v240 >= 7u)
            v115 = 1;
          else
            v115 = qword_1B228CC80[(char)v240];
          v130 = v228 < v226;
          sub_1B1B0BC78(v240, v241);
          v131 = v130 ^ (v98 >= v115);
          v58 = (uint64_t)v233;
          if ((v131 & 1) == 0)
            goto LABEL_154;
LABEL_141:
          v89 += 2;
          ++v58;
        }
        while (v227 != v58);
        v58 = v227;
LABEL_154:
        v3 = v235;
        v55 = (char *)v230;
LABEL_155:
        if (v228 < v226 && v231 < v58)
        {
          v132 = (uint64_t *)(v215 + 8 * v58);
          v133 = v58;
          v134 = v231;
          v135 = (uint64_t *)(v234 + 8 * v231);
          do
          {
            if (v134 != --v133)
            {
              v136 = *v135;
              *v135 = *v132;
              *v132 = v136;
            }
            ++v134;
            --v132;
            ++v135;
          }
          while (v134 < v133);
        }
LABEL_161:
        if (v58 < v227 && v58 - v231 < v218)
        {
          v137 = v231 + v218;
          if (v231 + v218 >= v227)
            v137 = v227;
          v228 = v137;
          if (v58 != v137)
          {
            v230 = (uint64_t)v55;
            v235 = v3;
            v138 = (unsigned int *)(v215 + 8 * v58);
            while (1)
            {
              v140 = *(_QWORD *)(v234 + 8 * v58);
              v141 = v231;
              v233 = v138;
              v142 = v58;
              while (1)
              {
                v144 = *v138;
                v145 = v138[1];
                v146 = v140;
                sub_1B1D165B4(v140, (uint64_t)&v240);
                if (v241)
                {
                  v147 = v240 > 6u ? 1 : qword_1B228CC80[(char)v240];
                  sub_1B1B0BC78(v240, v241);
                }
                else
                {
                  v148 = v238;
                  sub_1B1D18388(v146, v238);
                  v149 = type metadata accessor for ParticleUpdateScript(0);
                  v150 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 48))(v148, 1, v149);
                  sub_1B1B1DC9C(v148, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
                  if (v150 == 1)
                  {
                    v151 = v237;
                    sub_1B1D18394(v146, v237);
                    v152 = type metadata accessor for ParticleInitScript(0);
                    v147 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 48))(v151, 1, v152) != 1;
                    sub_1B1B1DC9C(v151, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
                  }
                  else
                  {
                    v147 = 1;
                  }
                }
                v153 = v144 | (v145 << 32);
                sub_1B1D165B4(v153, (uint64_t)&v240);
                if (v241)
                  break;
                v154 = v239;
                sub_1B1D18388(v153, v239);
                v155 = type metadata accessor for ParticleUpdateScript(0);
                v156 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 48))(v154, 1, v155);
                sub_1B1B1DC9C(v154, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
                if (v156 == 1)
                {
                  v157 = v236;
                  sub_1B1D18394(v153, v236);
                  v158 = type metadata accessor for ParticleInitScript(0);
                  v159 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 48))(v157, 1, v158);
                  sub_1B1B1DC9C(v157, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
                  if (v159 == 1)
                  {
                    if ((v147 & 0x8000000000000000) == 0)
                      goto LABEL_167;
                  }
                  else if (v147 >= 1)
                  {
                    goto LABEL_167;
                  }
                }
                else if (v147 >= 1)
                {
                  goto LABEL_167;
                }
LABEL_172:
                v140 = *((_QWORD *)v138 + 1);
                *((_QWORD *)v138 + 1) = *(_QWORD *)v138;
                *(_QWORD *)v138 = v140;
                v138 -= 2;
                ++v141;
                v139 = v142;
                if (v142 == v141)
                  goto LABEL_168;
              }
              if (v240 <= 6u)
                v143 = qword_1B228CC80[(char)v240];
              else
                v143 = 1;
              sub_1B1B0BC78(v240, v241);
              if (v147 < v143)
                goto LABEL_172;
LABEL_167:
              v139 = v142;
LABEL_168:
              v58 = v139 + 1;
              v138 = v233 + 2;
              if (v58 == v228)
              {
                v58 = v228;
                v3 = v235;
                v55 = (char *)v230;
                break;
              }
            }
          }
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v161 = v231;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v55 = sub_1B216CC74(0, *((_QWORD *)v55 + 2) + 1, 1, v55);
        v163 = *((_QWORD *)v55 + 2);
        v162 = *((_QWORD *)v55 + 3);
        v57 = v163 + 1;
        if (v163 >= v162 >> 1)
          v55 = sub_1B216CC74(v162 > 1, v163 + 1, 1, v55);
        *((_QWORD *)v55 + 2) = v57;
        v164 = v55 + 32;
        v165 = &v55[16 * v163 + 32];
        *(_QWORD *)v165 = v161;
        *((_QWORD *)v165 + 1) = v58;
        v233 = (unsigned int *)v58;
        if (!v163)
        {
          v57 = 1;
          goto LABEL_15;
        }
        v230 = (uint64_t)v55;
        while (2)
        {
          v166 = v57 - 1;
          v235 = v3;
          if (v57 >= 4)
          {
            v171 = &v164[16 * v57];
            v172 = *((_QWORD *)v171 - 7) - *((_QWORD *)v171 - 8);
            v169 = *((_QWORD *)v171 - 5) - *((_QWORD *)v171 - 6);
            v170 = v57 - 2;
            v173 = &v164[16 * v57 - 32];
            v167 = *(_QWORD *)v173;
            v168 = *((_QWORD *)v173 + 1);
            if (v169 - v167 + v168 >= v172)
            {
              v176 = v169 < *(_QWORD *)&v164[16 * v166 + 8] - *(_QWORD *)&v164[16 * v166];
            }
            else
            {
LABEL_203:
              v174 = v168 - v167;
              v175 = *(_QWORD *)&v164[16 * v166 + 8] - *(_QWORD *)&v164[16 * v166];
              if (v174 + v175 < v169)
                goto LABEL_206;
              v176 = v169 < v175;
            }
            if (v176)
              v166 = v170;
LABEL_211:
            v177 = &v164[16 * v166 - 16];
            v178 = *(_QWORD *)v177;
            v179 = v164;
            v180 = &v164[16 * v166];
            v181 = *((_QWORD *)v180 + 1);
            v182 = (char *)(v234 + 8 * *(_QWORD *)v177);
            v183 = (char *)(v234 + 8 * *(_QWORD *)v180);
            v184 = v234 + 8 * v181;
            v185 = v242;
            swift_retain();
            v186 = v182;
            v187 = v235;
            sub_1B1CD6BA4(v186, v183, v184, v229, v185);
            v3 = v187;
            if (v187)
              goto LABEL_240;
            swift_release();
            *(_QWORD *)v177 = v178;
            *((_QWORD *)v177 + 1) = v181;
            v55 = (char *)v230;
            v188 = *(_QWORD *)(v230 + 16);
            v57 = v188 - 1;
            memmove(v180, v180 + 16, 16 * (v188 - 1 - v166));
            *((_QWORD *)v55 + 2) = v188 - 1;
            v164 = v179;
            if (v188 <= 2)
              goto LABEL_15;
            continue;
          }
          break;
        }
        if (v57 == 3)
        {
          v167 = *((_QWORD *)v55 + 6);
          v168 = *((_QWORD *)v55 + 7);
          v169 = *((_QWORD *)v55 + 5) - *((_QWORD *)v55 + 4);
          v170 = 1;
          goto LABEL_203;
        }
        v174 = *(_QWORD *)&v164[16 * v57 - 24] - *(_QWORD *)&v164[16 * v57 - 32];
        v175 = *(_QWORD *)&v164[16 * v166 + 8] - *(_QWORD *)&v164[16 * v166];
LABEL_206:
        if (v175 >= v174)
          goto LABEL_211;
        v3 = v235;
LABEL_15:
        v56 = v227;
        v53 = (uint64_t)v233;
        if ((uint64_t)v233 >= v227)
        {
          v52 = v216;
          goto LABEL_232;
        }
      }
      v66 = (uint64_t)v220;
LABEL_32:
      v70 = type metadata accessor for ParticleUpdateScript(0);
      v71 = *(_QWORD *)(v70 - 8);
      if (*(_QWORD *)(v71 + 64))
      {
        if ((_DWORD)v61 == -1)
          goto LABEL_41;
        v72 = *(_QWORD *)(v71 + 72);
        if ((v61 & 0x80000000) != 0)
          goto LABEL_41;
      }
      else
      {
        if ((_DWORD)v61 == -1)
          goto LABEL_41;
        v72 = 0;
        if ((v61 & 0x80000000) != 0)
          goto LABEL_41;
      }
      if (v232[1] > v61 && (v60 == -1 || *(_DWORD *)(*v232 + 12 * (int)v61 + 8) == v60))
      {
        v189 = (unsigned int *)(*v232 + 12 * (int)v61);
        v73 = (uint64_t)v217;
        sub_1B1D1DB4C(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v189 + 32), *v189 | ((unint64_t)*((unsigned __int16 *)v189 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v189+ 2) << 32), v72, v242, (uint64_t)v217);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v73, 1, v70) != 1)
        {
          v190 = v73;
          v191 = &qword_1ED4B9628;
          v192 = type metadata accessor for ParticleUpdateScript;
          goto LABEL_220;
        }
LABEL_42:
        sub_1B1B1DC9C(v73, &qword_1ED4B9628, type metadata accessor for ParticleUpdateScript);
        v74 = type metadata accessor for ParticleInitScript(0);
        v75 = *(_QWORD *)(v74 - 8);
        if (*(_QWORD *)(v75 + 64))
        {
          if ((_DWORD)v61 == -1)
            goto LABEL_51;
          v76 = *(_QWORD *)(v75 + 72);
          if ((v61 & 0x80000000) != 0)
            goto LABEL_51;
        }
        else
        {
          if ((_DWORD)v61 == -1)
            goto LABEL_51;
          v76 = 0;
          if ((v61 & 0x80000000) != 0)
            goto LABEL_51;
        }
        if (v232[1] <= v61 || v60 != -1 && *(_DWORD *)(*v232 + 12 * (int)v61 + 8) != v60)
        {
LABEL_51:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v66, 1, 1, v74);
LABEL_52:
          sub_1B1B1DC9C(v66, &qword_1ED4B9350, type metadata accessor for ParticleInitScript);
          v228 = 0;
          goto LABEL_53;
        }
        v194 = (unsigned int *)(*v232 + 12 * (int)v61);
        sub_1B1D1DB30(*(_QWORD *)(*(_QWORD *)(v242 + 136) + 8 * (int)*v194 + 32), *v194 | ((unint64_t)*((unsigned __int16 *)v194 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v194+ 2) << 32), v76, v242, v66);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v66, 1, v74) == 1)
          goto LABEL_52;
        v190 = v66;
        v191 = &qword_1ED4B9350;
        v192 = type metadata accessor for ParticleInitScript;
LABEL_220:
        sub_1B1B1DC9C(v190, v191, v192);
        v228 = 1;
LABEL_53:
        v77 = (uint64_t)v221;
        if ((_DWORD)v64 == -1)
          goto LABEL_54;
        goto LABEL_55;
      }
LABEL_41:
      v73 = (uint64_t)v217;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v217, 1, 1, v70);
      goto LABEL_42;
    }
    v52 = MEMORY[0x1E0DEE9D8];
    v229 = (int *)(MEMORY[0x1E0DEE9D8] + 32);
    v51 = v242;
    if (v46 == 1)
    {
      v216 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v57 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v55 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_232:
    v235 = v3;
    v216 = v52;
    if (v57 < 2)
    {
LABEL_238:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v216 + 16) = 0;
      swift_release_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      v239 = *v213;
      while (1)
      {
        v197 = v55 + 32;
        v198 = (uint64_t)v55;
        v199 = *(_QWORD *)&v55[16 * v57];
        v200 = &v197[16 * v57 - 16];
        v201 = *((_QWORD *)v200 + 1);
        v202 = (char *)(v239 + 8 * v199);
        v203 = (char *)(v239 + 8 * *(_QWORD *)v200);
        v204 = v239 + 8 * v201;
        v205 = v242;
        swift_retain();
        v206 = v202;
        v207 = v235;
        sub_1B1CD6BA4(v206, v203, v204, v229, v205);
        v235 = v207;
        if (v207)
          break;
        swift_release();
        v208 = (char *)v198;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v208 = sub_1B216D510(v198);
        v209 = v208 + 32;
        v210 = &v208[16 * v57];
        *(_QWORD *)v210 = v199;
        *((_QWORD *)v210 + 1) = v201;
        v55 = v208;
        v211 = *((_QWORD *)v208 + 2);
        memmove(&v209[16 * v57 - 16], &v209[16 * v57], 16 * (v211 - v57));
        *((_QWORD *)v55 + 2) = v211 - 1;
        v57 = v211 - 1;
        if (v211 <= 2)
          goto LABEL_238;
      }
      v230 = v198;
LABEL_240:
      swift_bridgeObjectRelease();
      swift_release();
      *(_QWORD *)(v216 + 16) = 0;
      swift_release_n();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  swift_release_n();
  result = sub_1B222967C();
  __break(1u);
  return result;
}

uint64_t sub_1B1CD9D30(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1B216D5D8(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_1B1CD8594(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t sub_1B1CD9DD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned int v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1B19F8E54(0, &qword_1ED4BAC60, (uint64_t (*)(void))sub_1B1CD9F50, (uint64_t)&type metadata for Seed.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v6);
  v8 = (char *)&v13 - v7;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CD9F50();
  sub_1B222A150();
  if (v1)
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  v15 = 0;
  v9 = sub_1B2229868();
  v14 = 1;
  v10 = sub_1B22297D8();
  if ((v10 & 1) != 0)
  {
    v12 = 0x100000000;
    v9 = arc4random();
  }
  else
  {
    v12 = 0;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v12 | v9;
}

unint64_t sub_1B1CD9F50()
{
  unint64_t result;

  result = qword_1ED4B9DE8;
  if (!qword_1ED4B9DE8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CBF8, &type metadata for Seed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9DE8);
  }
  return result;
}

uint64_t sub_1B1CD9F94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  char v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  float v76;
  char v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  unsigned __int8 v100;
  unsigned __int8 v101;
  char v102;
  unsigned __int8 v103;
  unsigned __int8 v104;
  char v105;
  char v106;
  char v107;

  v98 = a2;
  sub_1B19F8E54(0, &qword_1ED4BAB88, (uint64_t (*)(void))sub_1B1CDAE0C, (uint64_t)&type metadata for EmitterDescription.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v84 - v8;
  v107 = 0;
  v106 = 0;
  v105 = 0;
  v104 = 1;
  v103 = 0;
  sub_1B19FA070(a1, a1[3]);
  sub_1B1CDAE0C();
  sub_1B222A150();
  if (v2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v96 = v6;
  v97 = v5;
  v94 = v9;
  v95 = a1;
  v10 = a1[3];
  v11 = a1[4];
  sub_1B19FA070(a1, v10);
  if (sub_1B2067B64(1036, v10, v11))
  {
    sub_1B1A02758(0, &qword_1EEF5D808, (uint64_t)&type metadata for EntityComponentReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v102 = 16;
    sub_1B1CDAF04();
    sub_1B2229814();
    v12 = v99;
    v102 = 17;
    sub_1B2229814();
    v14 = v99;
    v102 = 18;
    sub_1B2229814();
    v92 = v14;
    v16 = v99;
    v102 = 19;
    sub_1B2229814();
    v91 = v99;
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
    {
      v99 = MEMORY[0x1E0DEE9D8];
      sub_1B202A38C(0, v19, 0);
      v20 = v99;
      v21 = *(_QWORD *)(v99 + 16);
      v22 = 32;
      do
      {
        v23 = *(_QWORD *)(v12 + v22);
        v99 = v20;
        v24 = *(_QWORD *)(v20 + 24);
        if (v21 >= v24 >> 1)
        {
          sub_1B202A38C(v24 > 1, v21 + 1, 1);
          v20 = v99;
        }
        *(_QWORD *)(v20 + 16) = v21 + 1;
        *(_QWORD *)(v20 + 8 * v21 + 32) = v23;
        v22 += 16;
        ++v21;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v20 = MEMORY[0x1E0DEE9D8];
    }
    v93 = v20;
    v26 = *(_QWORD *)(v92 + 16);
    if (v26)
    {
      v99 = MEMORY[0x1E0DEE9D8];
      sub_1B202A38C(0, v26, 0);
      v27 = v92;
      v15 = v99;
      v28 = *(_QWORD *)(v99 + 16);
      v29 = 32;
      do
      {
        v30 = *(_QWORD *)(v27 + v29);
        v99 = v15;
        v31 = *(_QWORD *)(v15 + 24);
        if (v28 >= v31 >> 1)
        {
          sub_1B202A38C(v31 > 1, v28 + 1, 1);
          v27 = v92;
          v15 = v99;
        }
        *(_QWORD *)(v15 + 16) = v28 + 1;
        *(_QWORD *)(v15 + 8 * v28 + 32) = v30;
        v29 += 16;
        ++v28;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x1E0DEE9D8];
    }
    v32 = *(_QWORD *)(v16 + 16);
    if (v32)
    {
      v99 = MEMORY[0x1E0DEE9D8];
      sub_1B202A38C(0, v32, 0);
      v33 = v99;
      v34 = *(_QWORD *)(v99 + 16);
      v35 = 32;
      do
      {
        v36 = *(_QWORD *)(v16 + v35);
        v99 = v33;
        v37 = *(_QWORD *)(v33 + 24);
        if (v34 >= v37 >> 1)
        {
          sub_1B202A38C(v37 > 1, v34 + 1, 1);
          v33 = v99;
        }
        *(_QWORD *)(v33 + 16) = v34 + 1;
        *(_QWORD *)(v33 + 8 * v34 + 32) = v36;
        v35 += 16;
        ++v34;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease();
      v18 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x1E0DEE9D8];
    }
    v38 = *(_QWORD *)(v91 + 16);
    v13 = v95;
    if (v38)
    {
      v92 = v18;
      v90 = v15;
      v99 = MEMORY[0x1E0DEE9D8];
      sub_1B202A38C(0, v38, 0);
      v39 = v91;
      v25 = v99;
      v40 = *(_QWORD *)(v99 + 16);
      v41 = 32;
      do
      {
        v42 = *(_QWORD *)(v39 + v41);
        v99 = v25;
        v43 = *(_QWORD *)(v25 + 24);
        if (v40 >= v43 >> 1)
        {
          sub_1B202A38C(v43 > 1, v40 + 1, 1);
          v39 = v91;
          v25 = v99;
        }
        *(_QWORD *)(v25 + 16) = v40 + 1;
        *(_QWORD *)(v25 + 8 * v40 + 32) = v42;
        v41 += 16;
        ++v40;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease();
      v15 = v90;
      v18 = v92;
    }
    else
    {
      swift_bridgeObjectRelease();
      v25 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    sub_1B1A02758(0, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v102 = 0;
    sub_1B1CDAFC0((unint64_t *)&unk_1ED4BA470, (uint64_t (*)(void))sub_1B1A08878, MEMORY[0x1E0DEAF40]);
    sub_1B2229814();
    v93 = v99;
    v102 = 1;
    sub_1B2229814();
    v13 = v95;
    v15 = v99;
    v102 = 2;
    sub_1B2229814();
    v18 = v99;
    v102 = 3;
    sub_1B2229814();
    v25 = v99;
  }
  sub_1B1A02758(0, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v102 = 4;
  sub_1B1CDB03C((unint64_t *)&qword_1ED4BA590, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEE9A0]);
  sub_1B22297B4();
  LODWORD(v91) = v100;
  LODWORD(v90) = v101;
  if (v101)
    v44 = 0;
  else
    v44 = v99;
  v45 = v13[3];
  v46 = v13[4];
  sub_1B19FA070(v13, v45);
  if (sub_1B2067B64(1087, v45, v46))
  {
    v47 = v13[3];
    v48 = v13[4];
    sub_1B19FA070(v13, v47);
    if (sub_1B2067B64(1071, v47, v48))
    {
      v49 = 0;
    }
    else
    {
      LOBYTE(v99) = 22;
      v49 = sub_1B22297D8() & 1;
      v13 = v95;
    }
    v105 = v49;
    v55 = v13[3];
    v56 = v13[4];
    sub_1B19FA070(v13, v55);
    if (sub_1B2067B64(1051, v55, v56))
    {
      sub_1B1A02758(0, &qword_1EEF5D7F8, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      v102 = 21;
      sub_1B1CDAE94();
      sub_1B22297B4();
      v88 = v44;
      if ((v101 & 1) != 0)
      {
        v13 = v95;
LABEL_50:
        v89 = 0;
        v105 = 1;
        goto LABEL_41;
      }
      v13 = v95;
      if ((v100 & 1) != 0)
        goto LABEL_50;
      v89 = v99;
    }
    else
    {
      LOBYTE(v99) = 21;
      v57 = sub_1B2229874();
      v88 = v44;
      v89 = v57;
      v13 = v95;
    }
  }
  else
  {
    v88 = v44;
    v89 = 0;
  }
LABEL_41:
  LOBYTE(v99) = 5;
  v87 = sub_1B22297D8();
  LOBYTE(v99) = 6;
  v86 = sub_1B22297D8();
  LOBYTE(v99) = 7;
  v50 = sub_1B22297D8();
  v92 = v18;
  v51 = v13[3];
  v52 = v13[4];
  sub_1B19FA070(v13, v51);
  if (sub_1B2067B64(1002, v51, v52))
  {
    v53 = v97;
    v54 = 1;
  }
  else
  {
    v102 = 8;
    sub_1B1CDAE50();
    v53 = v97;
    sub_1B2229814();
    v54 = v99;
  }
  v104 = v54;
  v58 = v95[3];
  v59 = v95[4];
  sub_1B19FA070(v95, v58);
  if (sub_1B2067B64(1032, v58, v59))
  {
    v60 = 0;
  }
  else
  {
    LOBYTE(v99) = 9;
    v60 = sub_1B22297D8() & 1;
  }
  v107 = v60;
  v61 = v95[3];
  v62 = v95[4];
  sub_1B19FA070(v95, v61);
  v63 = 0;
  if (!sub_1B2067B64(1064, v61, v62))
  {
    LOBYTE(v99) = 10;
    sub_1B22297F0();
    v63 = v64;
  }
  v65 = v95[3];
  v66 = v95[4];
  sub_1B19FA070(v95, v65);
  if (sub_1B2067B64(1069, v65, v66))
  {
    v67 = 0;
  }
  else
  {
    LOBYTE(v99) = 11;
    v67 = sub_1B22297D8() & 1;
  }
  v106 = v67;
  v68 = v95[3];
  v69 = v95[4];
  sub_1B19FA070(v95, v68);
  if (sub_1B2067BAC(2016, v68, v69))
  {
    LOBYTE(v99) = 12;
    v103 = sub_1B22297D8() & 1;
    LOBYTE(v99) = 13;
    sub_1B22297F0();
    v71 = v70;
  }
  else
  {
    v71 = 1036831949;
  }
  LOBYTE(v99) = 14;
  v72 = sub_1B2229784();
  LOBYTE(v99) = 15;
  v73 = sub_1B222979C();
  v85 = v90 | v91;
  v74 = v87 & 1;
  LODWORD(v91) = v86 & 1;
  LODWORD(v90) = v50 & 1;
  v75 = *(void (**)(char *, uint64_t))(v96 + 8);
  v87 = v72 & 1;
  v75(v94, v53);
  if ((v73 & 0x100000000) != 0)
    v76 = 1.0;
  else
    v76 = *(float *)&v73;
  v77 = v107;
  v78 = v106;
  v79 = v105;
  LODWORD(v97) = v104;
  LODWORD(v96) = v103;
  v80 = v93;
  swift_bridgeObjectRetain();
  v81 = v15;
  swift_bridgeObjectRetain();
  v82 = v92;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v83 = v98;
  *v98 = v80;
  v83[1] = v81;
  v83[2] = v82;
  v83[3] = v25;
  v83[4] = v88;
  *((_BYTE *)v83 + 40) = v85 & 1;
  *((_BYTE *)v83 + 41) = v87;
  *((_BYTE *)v83 + 42) = v74;
  *((_BYTE *)v83 + 43) = v91;
  *((_BYTE *)v83 + 44) = v90;
  *((_BYTE *)v83 + 45) = v77;
  *((_DWORD *)v83 + 12) = v63;
  *((float *)v83 + 13) = v76;
  *((_BYTE *)v83 + 56) = v78;
  *(_WORD *)((char *)v83 + 57) = 0;
  v83[8] = v89;
  *((_BYTE *)v83 + 72) = v79;
  *((_WORD *)v83 + 37) = 0;
  *((_BYTE *)v83 + 76) = v97;
  *((_BYTE *)v83 + 77) = v96;
  *((_DWORD *)v83 + 20) = v71;
  return result;
}

unint64_t sub_1B1CDAE0C()
{
  unint64_t result;

  result = qword_1ED4B91E0;
  if (!qword_1ED4B91E0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CBA8, &type metadata for EmitterDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B91E0);
  }
  return result;
}

unint64_t sub_1B1CDAE50()
{
  unint64_t result;

  result = qword_1ED4B9210;
  if (!qword_1ED4B9210)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CB80, &type metadata for EmitterDescription.PhysicsSimulation);
    atomic_store(result, (unint64_t *)&qword_1ED4B9210);
  }
  return result;
}

unint64_t sub_1B1CDAE94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEF5D800;
  if (!qword_1EEF5D800)
  {
    sub_1B1A02758(255, &qword_1EEF5D7F8, MEMORY[0x1E0DEE190], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = MEMORY[0x1E0DEE1C0];
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEE9A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEF5D800);
  }
  return result;
}

unint64_t sub_1B1CDAF04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEF5D810;
  if (!qword_1EEF5D810)
  {
    sub_1B1A02758(255, &qword_1EEF5D808, (uint64_t)&type metadata for EntityComponentReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1B1CDAF7C();
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEF5D810);
  }
  return result;
}

unint64_t sub_1B1CDAF7C()
{
  unint64_t result;

  result = qword_1EEF5D818;
  if (!qword_1EEF5D818)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B5B1C, &type metadata for EntityComponentReference);
    atomic_store(result, (unint64_t *)&qword_1EEF5D818);
  }
  return result;
}

uint64_t sub_1B1CDAFC0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1B1A02758(255, &qword_1ED4BA460, (uint64_t)&type metadata for Entity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1B5E23E74](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B1CDB03C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1B1A02758(255, &qword_1ED4BA580, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = a2;
    result = MEMORY[0x1B5E23E74](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B1CDB0B0()
{
  unint64_t result;

  result = qword_1EEF5D840;
  if (!qword_1EEF5D840)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CB58, &type metadata for EmitterDescription.PhysicsSimulation);
    atomic_store(result, (unint64_t *)&qword_1EEF5D840);
  }
  return result;
}

unint64_t sub_1B1CDB0F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5D850;
  if (!qword_1EEF5D850)
  {
    v1 = sub_1B2228110();
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0CB0028], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5D850);
  }
  return result;
}

void sub_1B1CDB13C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4842A8)
  {
    sub_1B1CDB19C();
    v0 = sub_1B2229640();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4842A8);
  }
}

unint64_t sub_1B1CDB19C()
{
  unint64_t result;

  result = qword_1ED4842B0;
  if (!qword_1ED4842B0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B22B5014, &type metadata for ParticleSortMode);
    atomic_store(result, (unint64_t *)&qword_1ED4842B0);
  }
  return result;
}

void sub_1B1CDB1E0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEF5D860)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEF5D860);
  }
}

uint64_t sub_1B1CDB240()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1CDB264(uint64_t a1, unint64_t a2, _BYTE *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  BOOL v41;
  BOOL v42;
  BOOL v43;
  uint64_t v44;
  int *v45;
  uint64_t *v46;

  v10 = *a4;
  v11 = qword_1ED4B7D30;
  swift_retain();
  if (v11 != -1)
    swift_once();
  v12 = qword_1ED4D09E0;
  swift_release();
  if (v10 == v12)
    return 2;
  if (v10 != a5)
    return 1;
  if (a3[45] == 1)
  {
    if ((a4[34] & 1) == 0)
      return 1;
  }
  else if ((a4[34] & 1) != 0)
  {
    return 1;
  }
  if (a3[56] != *((_BYTE *)a4 + 49))
    return 1;
  v14 = sub_1B1D15A1C(a2);
  if ((a4[6] & 1) != 0)
    return 0;
  v15 = (v14 & 0xFF00000000) == 0x200000000 ? 0 : v14;
  if (v15 != a4[5])
    return 0;
  v16 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  if (!v16)
    return 2;
  v46 = (uint64_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v17 = *(_QWORD *)a3 + 32;
  swift_bridgeObjectRetain();
  for (i = 0; i != v16; ++i)
  {
    v20 = (int *)(v17 + 8 * i);
    v21 = v20[1];
    v22 = *v20;
    v23 = (_DWORD)v22 == -1 && (_DWORD)v21 == 0;
    if (!v23 && (v22 & 0x80000000) == 0 && v46[1] > v22)
    {
      v24 = *v46;
      if ((_DWORD)v21 == -1 || *(_DWORD *)(*v46 + 12 * (int)v22 + 8) == (_DWORD)v21)
      {
        v45 = (int *)(v24 + 12 * (int)v22);
        if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * *v45 + 32) + 120) & 1) != 0)
        {
          v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80)
                                                  + 8 * *(__int16 *)(v24 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 32);
          v27 = *(_QWORD *)(v26 + 16);
          if (v27)
          {
            v44 = v22;
            v28 = (uint64_t *)(v26 + 32);
            while (1)
            {
              v29 = *v28;
              if (swift_conformsToProtocol2() ? v29 : 0)
                break;
              v28 += 2;
              if (!--v27)
                goto LABEL_20;
            }
            v31 = *(__int16 *)(v24 + 12 * (int)v22 + 4);
            v32 = *(_QWORD **)(*(_QWORD *)(a1 + 136) + 8 * *v45 + 32);
            v33 = *(unsigned __int8 *)(v32[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
            v34 = swift_retain();
            if (v33 == 4)
            {
              v35 = *(_BYTE *)(v34 + 225);
              v36 = *(_QWORD *)(v34 + 216);
              swift_release();
              v37 = v36 > 1;
              if ((v35 & 1) == 0)
                v37 = v36 > 0;
            }
            else
            {
              swift_release();
              v37 = 1;
            }
            v38 = v32[24];
            if (v38 && (*(_QWORD *)(v38 + 8 * (v31 >> 6)) & (1 << v31)) != 0)
            {
              if (v37)
                *(_QWORD *)(v32[26] + 8 * (v31 >> 6)) |= 1 << v31;
              v39 = v44 | (v21 << 32);
              swift_retain();
              v40 = sub_1B1FD568C((uint64_t)&type metadata for ParticleSpawnState, (uint64_t)&off_1E6394F20, v39);
              swift_release();
              if (!v40)
                goto LABEL_53;
              swift_retain();
              v41 = sub_1B1FD568C((uint64_t)&type metadata for ParticleBurstSpawn, (uint64_t)&off_1E6393F70, v39);
              swift_release();
              if (v41
                || (swift_retain(),
                    v42 = sub_1B1FD568C((uint64_t)&type metadata for ParticlePeriodicBurstSpawn, (uint64_t)&off_1E63B1C98, v39), swift_release(), v42)|| (swift_retain(), v43 = sub_1B1FD568C((uint64_t)&type metadata for ParticleSpawnDuration, (uint64_t)&off_1E63A5250, v39), swift_release(), v43))
              {
LABEL_53:
                v13 = 0;
                goto LABEL_56;
              }
            }
          }
        }
      }
    }
LABEL_20:
    ;
  }
  v13 = 2;
LABEL_56:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B1CDB618(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1B1CDB808(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return sub_1B1CD04BC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_BYTE *)(v4 + 32), (__int128 *)(v4 + 40));
}

void sub_1B1CDB820(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1B1E53B38(a1, a2, a3, a4);
}

uint64_t sub_1B1CDB830()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1CDB85C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1B1CD0204(a1, v1[2], v1[3], v1[4]);
}

uint64_t getEnumTagSinglePayload for EmitterDescription.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EmitterDescription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1B1CDB948 + 4 * byte_1B228C334[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1B1CDB97C + 4 * byte_1B228C32F[v4]))();
}

uint64_t sub_1B1CDB97C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CDB984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CDB98CLL);
  return result;
}

uint64_t sub_1B1CDB998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CDB9A0);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1B1CDB9A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CDB9AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmitterDescription.CodingKeys()
{
  return &type metadata for EmitterDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for Seed.CodingKeys()
{
  return &type metadata for Seed.CodingKeys;
}

ValueMetadata *type metadata accessor for EmitterReference()
{
  return &type metadata for EmitterReference;
}

uint64_t getEnumTagSinglePayload for Seed(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Seed(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Seed()
{
  return &type metadata for Seed;
}

uint64_t _s3VFX18EmitterDescriptionV17PhysicsSimulationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1CDBAE0 + 4 * byte_1B228C33E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1CDBB14 + 4 * byte_1B228C339[v4]))();
}

uint64_t sub_1B1CDBB14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CDBB1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1CDBB24);
  return result;
}

uint64_t sub_1B1CDBB30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1CDBB38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1CDBB3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1CDBB44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmitterDescription.PhysicsSimulation()
{
  return &type metadata for EmitterDescription.PhysicsSimulation;
}

ValueMetadata *type metadata accessor for EmitterDescription.DebuggingOptions()
{
  return &type metadata for EmitterDescription.DebuggingOptions;
}

unint64_t sub_1B1CDBB74()
{
  unint64_t result;

  result = qword_1EEF5D868;
  if (!qword_1EEF5D868)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C664, &type metadata for EmitterDescription.DebuggingOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D868);
  }
  return result;
}

unint64_t sub_1B1CDBBBC()
{
  unint64_t result;

  result = qword_1EEF5D870;
  if (!qword_1EEF5D870)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C634, &type metadata for EmitterDescription.DebuggingOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D870);
  }
  return result;
}

unint64_t sub_1B1CDBC04()
{
  unint64_t result;

  result = qword_1EEF5D878;
  if (!qword_1EEF5D878)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C68C, &type metadata for EmitterDescription.DebuggingOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D878);
  }
  return result;
}

unint64_t sub_1B1CDBC4C()
{
  unint64_t result;

  result = qword_1EEF5D880;
  if (!qword_1EEF5D880)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C6C4, &type metadata for EmitterDescription.DebuggingOptions);
    atomic_store(result, (unint64_t *)&qword_1EEF5D880);
  }
  return result;
}

unint64_t sub_1B1CDBC90(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1B1CDAE50();
  result = sub_1B1CDB0B0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B1CDBCC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEF5D888;
  if (!qword_1EEF5D888)
  {
    sub_1B1A02758(255, &qword_1EEF5D890, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1B5E23E74](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEF5D888);
  }
  return result;
}

unint64_t sub_1B1CDBD24()
{
  unint64_t result;

  result = qword_1EEF5D898;
  if (!qword_1EEF5D898)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C8A0, &type metadata for EmitterDescription.PhysicsSimulation);
    atomic_store(result, (unint64_t *)&qword_1EEF5D898);
  }
  return result;
}

unint64_t sub_1B1CDBD6C()
{
  unint64_t result;

  result = qword_1EEF5D8A0;
  if (!qword_1EEF5D8A0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CA00, &type metadata for Seed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEF5D8A0);
  }
  return result;
}

unint64_t sub_1B1CDBDB4()
{
  unint64_t result;

  result = qword_1EEF5D8A8[0];
  if (!qword_1EEF5D8A8[0])
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CAF0, &type metadata for EmitterDescription.CodingKeys);
    atomic_store(result, qword_1EEF5D8A8);
  }
  return result;
}

unint64_t sub_1B1CDBDFC()
{
  unint64_t result;

  result = qword_1ED484290;
  if (!qword_1ED484290)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C900, &type metadata for EmitterReference);
    atomic_store(result, (unint64_t *)&qword_1ED484290);
  }
  return result;
}

unint64_t sub_1B1CDBE44()
{
  unint64_t result;

  result = qword_1ED4B91F8;
  if (!qword_1ED4B91F8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CA28, &type metadata for EmitterDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B91F8);
  }
  return result;
}

unint64_t sub_1B1CDBE8C()
{
  unint64_t result;

  result = qword_1ED4B91F0;
  if (!qword_1ED4B91F0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CA50, &type metadata for EmitterDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B91F0);
  }
  return result;
}

unint64_t sub_1B1CDBED4()
{
  unint64_t result;

  result = qword_1ED4B9DF8;
  if (!qword_1ED4B9DF8)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C938, &type metadata for Seed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9DF8);
  }
  return result;
}

unint64_t sub_1B1CDBF1C()
{
  unint64_t result;

  result = qword_1ED4B9DF0;
  if (!qword_1ED4B9DF0)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C960, &type metadata for Seed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED4B9DF0);
  }
  return result;
}

unint64_t sub_1B1CDBF60()
{
  unint64_t result;

  result = qword_1ED4B9208;
  if (!qword_1ED4B9208)
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228C828, &type metadata for EmitterDescription.PhysicsSimulation);
    atomic_store(result, (unint64_t *)&qword_1ED4B9208);
  }
  return result;
}

uint64_t sub_1B1CDBFAC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B1CDBFCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1B1CDBFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1CDC014(a1, a2, a3, (void (*)(uint64_t))sub_1B1B21584, (void (*)(uint64_t))sub_1B1B21584);
}

uint64_t sub_1B1CDC000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B1CDC014(a1, a2, a3, (void (*)(uint64_t))sub_1B1B21584, (void (*)(uint64_t))sub_1B1B1F4C0);
}

uint64_t sub_1B1CDC014(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  ValueMetadata *v84;
  _UNKNOWN **v85;
  uint64_t v86[4];
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD v90[4];
  _OWORD v91[2];
  unint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  _OWORD v96[2];
  _BYTE v97[48];
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;

  v82 = *(_QWORD *)(a2 + 16);
  if (v82)
  {
    v81 = *(_QWORD *)(a3 + 16);
    v77 = (_QWORD *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v78 = result;
    v75 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    v76 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    v79 = a3 + 32;
    v80 = a2 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = 0;
    while (v5 != v81)
    {
      v10 = v80 + 32 * v5;
      v11 = *(_QWORD *)v10;
      v12 = *(_BYTE *)(v10 + 24);
      v13 = *(_QWORD *)(v10 + 16);
      LOBYTE(v10) = *(_BYTE *)(v10 + 8);
      v92 = v11;
      v93 = v10;
      v94 = v13;
      v95 = v12;
      sub_1B1A02864(v79 + 32 * v5, (uint64_t)v96);
      sub_1B1A0DDAC(v96, v91);
      switch(v11 >> 60)
      {
        case 1uLL:
          v29 = *(_QWORD *)(v11 + 64);
          sub_1B1A00060((v11 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v90);
          if (MEMORY[0x1B5E240CC](v90))
          {
            v30 = v90[1];
            ObjectType = swift_getObjectType();
            v32 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 40);
            sub_1B1B1DD24(v11);
            sub_1B1B1DD24(v11);
            swift_bridgeObjectRetain();
            swift_retain();
            v33 = v32(ObjectType, v30);
            v34 = sub_1B2229304();
            v35 = swift_conformsToProtocol2();
            if (v35)
              v36 = v35;
            else
              v36 = 0;
            if (!v35)
              v34 = 0;
            if (v34)
            {
              v37 = swift_getObjectType();
              swift_unknownObjectRetain();
              v38 = sub_1B1B697E8(v29, v33, v34, v36);
              swift_unknownObjectRelease();
              if (v38)
              {
                v86[3] = v37;
                v84 = &type metadata for Extensions;
                v85 = &off_1E63744C8;
                v86[0] = v33;
                swift_unknownObjectRetain();
                sub_1B1B7D784((uint64_t *)&v83, v86);
                sub_1B1A02518(&v83, (uint64_t)&v87);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86);
                v39 = v89;
                sub_1B19FA070(&v87, v89);
                sub_1B1EFFADC((uint64_t)v91, v38, v39);
                swift_unknownObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_release();
                sub_1B1A05610(v11);
                sub_1B19FC350((uint64_t)v90);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v87);
                goto LABEL_5;
              }
            }
            swift_unknownObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            sub_1B1A05610(v11);
          }
          else
          {
            swift_retain();
          }
          sub_1B19FC350((uint64_t)v90);
          goto LABEL_44;
        case 3uLL:
        case 4uLL:
          v15 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          v16 = *(unsigned int *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
          v17 = *(int *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B1B1DD24(v11);
          swift_bridgeObjectRetain();
          swift_retain();
          v18 = sub_1B2229304();
          v19 = swift_conformsToProtocol2();
          if (!v19)
          {
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            v87 = 0;
            v88 = 0xE000000000000000;
            sub_1B1B1DD24(v11);
            sub_1B1B1DD24(v11);
            sub_1B2229430();
            *(_QWORD *)&v83 = v11;
            sub_1B22295EC();
            sub_1B2228890();
            sub_1B2229688();
            __break(1u);
            JUMPOUT(0x1B1CDC95CLL);
          }
          v20 = (_DWORD)v17 == -1 && (_DWORD)v16 == 0;
          if (v20 || (v17 & 0x80000000) != 0 || v77[1] <= v17)
            goto LABEL_58;
          v21 = *v77 + 12 * (int)v17;
          if ((_DWORD)v16 != -1 && *(_DWORD *)(v21 + 8) != (_DWORD)v16)
            goto LABEL_58;
          v23 = *(_QWORD *)(*(_QWORD *)(v78 + 136) + 8 * *(int *)(*v77 + 12 * (int)v17) + 32);
          v24 = *(_QWORD *)(v23 + 48);
          v25 = *(_QWORD *)(v24 + 16);
          if (!v25)
            goto LABEL_58;
          v26 = v19;
          v27 = *(__int16 *)(v21 + 4);
          v28 = v24 + 56;
          while (*(_QWORD *)(v28 - 24) != v18)
          {
            v28 += 40;
            if (!--v25)
              goto LABEL_58;
          }
          v64 = v28 - 8;
          v63 = *(_QWORD *)(v28 - 8);
          v62 = *(_QWORD *)(v64 + 8);
          if (v63 <= 1)
            v63 = 1;
          v65 = sub_1B1E1B868((uint64_t)v91, *(_QWORD *)(v23 + 128) + v62 + v63 * v27, v15, v18);
          if ((v65 & 1) != 0)
          {
LABEL_58:
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B1A05610(v11);
          }
          else
          {
            MEMORY[0x1E0C80A78](v65, v66);
            sub_1B1FE298C(v18, v26, v17 | (unint64_t)(v16 << 32), a5);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B1A05610(v11);
          }
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
          goto LABEL_6;
        case 6uLL:
          v41 = *(_QWORD *)(v11 + 24);
          v40 = *(_QWORD *)(v11 + 32);
          v42 = *(_QWORD *)(*(_QWORD *)(v78 + v76) + 8 * *(_QWORD *)thread_worker_index(v14) + 8);
          v43 = *(_QWORD *)(v42 + 32);
          swift_retain_n();
          ecs_stack_allocator_push_snapshot(v43);
          v87 = v41;
          v88 = v40;
          *(_QWORD *)&v83 = 46;
          *((_QWORD *)&v83 + 1) = 0xE100000000000000;
          sub_1B1A06460();
          v44 = (_QWORD *)sub_1B2229214();
          v90[0] = v44;
          if (!v44[2])
          {
            swift_bridgeObjectRelease();
LABEL_4:
            v6 = *(_QWORD *)(v78 + v75);
            v87 = 0;
            v88 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            swift_bridgeObjectRelease();
            v87 = 0xD000000000000017;
            v88 = 0x80000001B2335210;
            sub_1B2228890();
            v7 = v87;
            v8 = v88;
            v9 = sub_1B2228E90();
            v87 = 0;
            (*(void (**)(uint64_t, unint64_t *, unint64_t, unint64_t))(*(_QWORD *)v6 + 88))(v9, &v87, v7, v8);
            swift_release();
            swift_bridgeObjectRelease();
            ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v42 + 32));
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
            sub_1B1A05610(v11);
            goto LABEL_5;
          }
          v74 = v42;
          v45 = v44[4];
          v46 = v44[5];
          swift_bridgeObjectRetain();
          sub_1B1C929C8(0, 1);
          LOBYTE(v87) = 1;
          v47 = sub_1B1DCD968(v45, v46, v78, 0x100000000);
          v49 = v48;
          swift_bridgeObjectRelease();
          if ((v49 & 1) != 0)
            goto LABEL_45;
          v87 = v90[0];
          sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1B19FA230();
          v50 = sub_1B2228644();
          v52 = v51;
          swift_bridgeObjectRelease();
          sub_1B1DCE0A4(v50, v52, (uint64_t)v97);
          sub_1B1A18378((uint64_t)v97, (uint64_t)&v98, (unint64_t *)&unk_1ED4B8880, (uint64_t)&type metadata for ScriptKeyPath);
          if (!*((_QWORD *)&v98 + 1))
          {
LABEL_45:
            swift_bridgeObjectRelease();
            v42 = v74;
            goto LABEL_4;
          }
          v100 = v98;
          v53 = v99;
          swift_bridgeObjectRelease();
          ecs_stack_allocator_pop_snapshot(v43);
          v54 = sub_1B2229304();
          v55 = swift_conformsToProtocol2();
          if (!v55)
            goto LABEL_68;
          v56 = v55;
          if (v47 != 0xFFFFFFFFLL && v47 << 32 >= (uint64_t)0xFFFFFFFF00000001 && (int)v47 < v77[1])
          {
            v57 = *v77 + 12 * (int)v47;
            if (HIDWORD(v47) == -1 || *(_DWORD *)(v57 + 8) == HIDWORD(v47))
            {
              v58 = *(_QWORD *)(*(_QWORD *)(v78 + 136) + 8 * *(int *)(*v77 + 12 * (int)v47) + 32);
              v59 = *(_QWORD *)(v58 + 48);
              v60 = *(_QWORD *)(v59 + 16);
              if (v60)
              {
                v61 = v59 + 56;
                while (*(_QWORD *)(v61 - 24) != v54)
                {
                  v61 += 40;
                  if (!--v60)
                    goto LABEL_40;
                }
                v69 = v61 - 8;
                v68 = *(_QWORD *)(v61 - 8);
                v67 = *(_QWORD *)(v69 + 8);
                if (v68 <= 1)
                  v68 = 1;
                v70 = sub_1B1E1B868((uint64_t)v91, *(_QWORD *)(v58 + 128) + v67 + v68 * *(__int16 *)(v57 + 4), v53, v54);
                if ((v70 & 1) == 0)
                {
                  MEMORY[0x1E0C80A78](v70, v71);
                  sub_1B1FE298C(v54, v56, v47, a4);
                }
              }
            }
          }
LABEL_40:
          v101 = v100;
          sub_1B1BA80C0((uint64_t)&v101);
          swift_release();
          sub_1B1A05610(v11);
LABEL_44:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v91);
LABEL_5:
          sub_1B1A05610(v11);
LABEL_6:
          if (++v5 == v82)
            goto LABEL_65;
          break;
        default:
          goto LABEL_69;
      }
    }
LABEL_65:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B1CDC974(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  int v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  BOOL v72;
  uint64_t v73;
  _QWORD *v74;
  BOOL v75;
  unint64_t v76;
  _QWORD *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  _QWORD v107[2];

  *(_QWORD *)&v94 = a7;
  v104 = a6;
  v90 = 0;
  v101 = (_QWORD *)a9;
  v17 = a5 & 1;
  sub_1B1B1F358();
  v100 = v18;
  MEMORY[0x1E0C80A78](v18, v19);
  v99 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B222820C();
  v97 = *(_QWORD *)(v21 - 8);
  v98 = v21;
  MEMORY[0x1E0C80A78](v21, v22);
  v96 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v10 + 16) = a1;
  v107[0] = v24;
  LOBYTE(v105) = BYTE4(a10) & 1;
  v95 = HIDWORD(a10) & 1;
  LODWORD(v103) = v17;
  v25 = v104;
  v26 = a7;
  v93 = (_QWORD *)a8;
  v27 = (uint64_t)v101;
  sub_1B1CF19BC(a2, a3, a4, v17, v104, v26, a8, (uint64_t)v101, (uint64_t)v107, a10 | ((unint64_t)(BYTE4(a10) & 1) << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3C5B8, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, &qword_1ED4B9648, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A16CC4, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3DC70, (void (*)(__int128 *, uint64_t))sub_1B2198D60, (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B19ED720,
    (uint64_t)&off_1E6370AB0,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))sub_1B1CF5564,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CF7308);
  LOBYTE(v105) = BYTE4(a10) & 1;
  v92 = a10;
  v28 = a2;
  v29 = a2;
  v30 = a3;
  v31 = a3;
  v32 = v17;
  v33 = v25;
  v34 = v25;
  v35 = v94;
  v36 = v27;
  sub_1B1CF19BC(v28, v30, a4, v32, v33, v94, a8, v27, (uint64_t)v107, a10 | ((unint64_t)(BYTE4(a10) & 1) << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E3D0, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (unint64_t *)&unk_1ED4B9660, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A16A40, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E374, (void (*)(__int128 *, uint64_t))sub_1B2198A18, (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (uint64_t)&off_1E63777B8,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))sub_1B1CF4D2C,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CF7F5C);
  LOBYTE(a8) = v95;
  LOBYTE(v105) = v95;
  v102 = v31;
  LOBYTE(v27) = v103;
  v37 = (uint64_t)v93;
  sub_1B1CF093C(v29, v31, a4, v103, v34, v35, (uint64_t)v93, v36, (uint64_t)v107, a10 | ((unint64_t)v95 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E320, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (unint64_t *)&unk_1ED4BB270, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A167BC, (void (*)(uint64_t *))sub_1B1A1B75C, (void (*)(uint64_t *))sub_1B1A1B75C, (uint64_t)&off_1E63982A0,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CF8BB0,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CF9398);
  LOBYTE(v105) = a8;
  v38 = v92;
  v39 = v27;
  v40 = v104;
  v41 = v35;
  v42 = v36;
  sub_1B1CF093C(v29, v31, a4, v39, v104, v41, v37, v36, (uint64_t)v107, v92 | ((unint64_t)a8 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E270, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (unint64_t *)&unk_1ED4B9650, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A16538, (void (*)(uint64_t *))sub_1B1A1B75C, (void (*)(uint64_t *))sub_1B1A1B75C, (uint64_t)&off_1E63774F8,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CF9F10,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CFA6F8);
  LOBYTE(v105) = a8;
  LOBYTE(v31) = a8;
  v87 = v38 | ((unint64_t)a8 << 32);
  v43 = v29;
  v91 = v29;
  LOBYTE(v36) = v103;
  v44 = v94;
  v45 = (uint64_t)v93;
  sub_1B1CF19BC(v29, v102, a4, v103, v40, v94, (uint64_t)v93, v42, (uint64_t)v107, v87, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E480, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, &qword_1ED4B9670, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A162B4, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E424, (void (*)(__int128 *, uint64_t))sub_1B21986D0, (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (uint64_t)&off_1E637A0A8,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))sub_1B1CF44F0,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CFB3E0);
  LOBYTE(v105) = v31;
  LOBYTE(v29) = v31;
  v46 = v92;
  v88 = v92 | ((unint64_t)v31 << 32);
  v47 = v43;
  v49 = (uint64_t)v101;
  v48 = v102;
  v50 = v36;
  v51 = v40;
  sub_1B1CF19BC(v47, v102, a4, v50, v40, v44, v45, (uint64_t)v101, (uint64_t)v107, v88, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E1C0, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (unint64_t *)&unk_1ED4B9630, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A16030, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3D9BC, (void (*)(__int128 *, uint64_t))sub_1B2198388, (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (uint64_t)&off_1E6394B78,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))sub_1B1CF3CAC,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CFC224);
  LOBYTE(v105) = (_BYTE)v29;
  v89 = v46 | ((unint64_t)v29 << 32);
  v52 = v91;
  LOBYTE(v40) = v103;
  sub_1B1CF19BC(v91, v48, a4, v103, v51, v44, v45, v49, (uint64_t)v107, v89, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E16C, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, &qword_1ED4B9640, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A15DAC, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3DC14, (void (*)(__int128 *, uint64_t))sub_1B2198040, (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (uint64_t)&off_1E639E488,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))sub_1B1CF3464,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CFD06C);
  LOBYTE(v105) = v95;
  sub_1B1CF19BC(v52, v48, a4, v40, v104, v44, v45, v49, (uint64_t)v107, v46 | ((unint64_t)v95 << 32), (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E118, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, &qword_1ED4BB350, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B1A15B28, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E0BC, (void (*)(__int128 *, uint64_t))sub_1B21975D4, (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (void (*)(uint64_t *))sub_1B1A1B75C,
    (uint64_t)&off_1E637DA80,
    (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))sub_1B1CF2C28,
    (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B1CFDEB8);
  if (v44 && (v53 = *(void **)(v44 + 72)) != 0)
  {
    v54 = objc_msgSend(v53, sel_functionNames);
    v55 = sub_1B2228AB8();

    swift_bridgeObjectRetain();
    v56 = v90;
    v57 = sub_1B1CF7148(v55);
    v90 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v57 = MEMORY[0x1E0DEE9D8];
  }
  v58 = *(_QWORD *)(v45 + 16) + *(_QWORD *)(v57 + 16);
  v59 = v58 & ~(v58 >> 63);
  swift_bridgeObjectRetain();
  v105 = sub_1B1C63044(0, v59, 0, MEMORY[0x1E0DEE9D8]);
  v60 = swift_bridgeObjectRetain();
  sub_1B19F58A8(v60);
  v61 = swift_bridgeObjectRetain();
  sub_1B19F48F0(v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v102 = v105[2];
  if (v102)
  {
    v62 = 0;
    v93 = v105;
    v101 = v105 + 4;
    v95 = 0x80000001B23389A0;
    v94 = xmmword_1B226D240;
    while (1)
    {
      v63 = &v101[2 * v62];
      v65 = *v63;
      v64 = v63[1];
      v66 = v107[0];
      if (!*(_QWORD *)(v107[0] + 16))
        break;
      sub_1B222A06C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228824();
      v67 = sub_1B222A0C0();
      v68 = -1 << *(_BYTE *)(v66 + 32);
      v69 = v67 & ~v68;
      if (((*(_QWORD *)(v66 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
        goto LABEL_25;
      v70 = *(_QWORD *)(v66 + 48);
      v71 = (_QWORD *)(v70 + 16 * v69);
      v72 = *v71 == v65 && v71[1] == v64;
      if (!v72 && (sub_1B2229D24() & 1) == 0)
      {
        v73 = ~v68;
        while (1)
        {
          v69 = (v69 + 1) & v73;
          if (((*(_QWORD *)(v66 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
            break;
          v74 = (_QWORD *)(v70 + 16 * v69);
          v75 = *v74 == v65 && v74[1] == v64;
          if (v75 || (sub_1B2229D24() & 1) != 0)
            goto LABEL_7;
        }
LABEL_25:
        swift_bridgeObjectRelease();
LABEL_26:
        if (qword_1ED4BF430 != -1)
          swift_once();
        v105 = 0;
        v106 = 0xE000000000000000;
        v104 = qword_1ED4D0FB0;
        swift_retain();
        sub_1B2229430();
        swift_bridgeObjectRelease();
        v105 = (_QWORD *)0xD000000000000020;
        v106 = v95;
        sub_1B2228890();
        swift_bridgeObjectRelease();
        v77 = v105;
        v76 = v106;
        v78 = sub_1B2228E90();
        if (qword_1ED4BF658 != -1)
          swift_once();
        v103 = v62;
        v79 = qword_1ED4BF688;
        swift_retain();
        if (v79 != -1)
          swift_once();
        sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = v94;
        *(_QWORD *)(v80 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v80 + 64) = sub_1B1B1F47C();
        *(_QWORD *)(v80 + 32) = v77;
        *(_QWORD *)(v80 + 40) = v76;
        swift_bridgeObjectRetain();
        sub_1B222835C();
        swift_bridgeObjectRelease();
        swift_retain();
        v81 = v96;
        sub_1B2228200();
        v82 = (uint64_t)v99;
        v83 = v100[12];
        v84 = v100[16];
        v85 = &v99[v100[20]];
        (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v99, v81, v98);
        *(_BYTE *)(v82 + v83) = v78;
        *(_QWORD *)(v82 + v84) = 0;
        *(_QWORD *)v85 = v77;
        *((_QWORD *)v85 + 1) = v76;
        swift_bridgeObjectRetain();
        sub_1B2228428();
        swift_release();
        sub_1B1A04628(v82, (uint64_t (*)(_QWORD))sub_1B1B1F358);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        v62 = v103;
        goto LABEL_8;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      if (++v62 == v102)
        goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B1CDD5E8(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  result = 0xD000000000000015;
  switch(a2)
  {
    case 0:
      result = 0xD00000000000002DLL;
      break;
    case 1:
      result = 0xD000000000000018;
      break;
    case 2:
      result = 0xD000000000000027;
      break;
    case 3:
      return result;
    default:
      sub_1B2229430();
      swift_bridgeObjectRelease();
      sub_1B2228890();
      result = 0xD000000000000018;
      break;
  }
  return result;
}

unint64_t sub_1B1CDD6DC()
{
  uint64_t *v0;

  return sub_1B1CDD5E8(*v0, v0[1]);
}

uint64_t sub_1B1CDD6E4()
{
  sub_1B222A06C();
  sub_1B222A078();
  sub_1B222A09C();
  sub_1B222A09C();
  return sub_1B222A0C0();
}

uint64_t sub_1B1CDD74C()
{
  sub_1B222A078();
  sub_1B222A09C();
  return sub_1B222A09C();
}

uint64_t sub_1B1CDD790()
{
  sub_1B222A06C();
  sub_1B222A078();
  sub_1B222A09C();
  sub_1B222A09C();
  return sub_1B222A0C0();
}

BOOL sub_1B1CDD7F4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  return *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8) && *(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12);
}

uint64_t sub_1B1CDD824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  _BYTE v17[328];
  _BYTE v18[328];
  _BYTE v19[328];
  _BYTE v20[328];
  _BYTE v21[328];
  _BYTE v22[328];
  _BYTE v23[328];
  _BYTE v24[328];

  v1 = v0;
  v2 = sub_1B22284AC();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = sub_1B2228F38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1B2228F14();
  MEMORY[0x1E0C80A78](v9, v10);
  sub_1B17914E8();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_1B2228F08();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF8D8], v4);
  sub_1B2228494();
  *(_QWORD *)(v0 + 32) = sub_1B2228F5C();
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  v11 = (_DWORD *)swift_slowAlloc();
  *v11 = 0;
  *(_QWORD *)(v0 + 48) = "CompilationResult";
  *(_QWORD *)(v0 + 56) = 17;
  *(_BYTE *)(v0 + 64) = 2;
  *(_QWORD *)(v0 + 72) = v11;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 80) = sub_1B1B96BEC(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v1 + 88) = sub_1B1B96D04(v12);
  sub_1B1CDF8D4((uint64_t)v17);
  memcpy((void *)(v1 + 96), v17, 0x148uLL);
  sub_1B1CE0014((uint64_t)v18);
  memcpy((void *)(v1 + 424), v18, 0x148uLL);
  sub_1B1CE0754((uint64_t)v19);
  memcpy((void *)(v1 + 752), v19, 0x148uLL);
  sub_1B1CE0E94((uint64_t)v20);
  memcpy((void *)(v1 + 1080), v20, 0x148uLL);
  sub_1B1CE15D4((uint64_t)v21);
  memcpy((void *)(v1 + 1408), v21, 0x148uLL);
  sub_1B1CE1D14((uint64_t)v22);
  memcpy((void *)(v1 + 1736), v22, 0x148uLL);
  sub_1B1CE2454((uint64_t)v23);
  memcpy((void *)(v1 + 2064), v23, 0x148uLL);
  sub_1B1CE2B94((uint64_t)v24);
  memcpy((void *)(v1 + 2392), v24, 0x148uLL);
  v13 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v14 = (void *)sub_1B2228728();
  LOBYTE(v8) = objc_msgSend(v13, sel_BOOLForKey_, v14);

  *(_BYTE *)(v1 + 2720) = v8 ^ 1;
  v15 = *(void **)(v1 + 40);
  objc_msgSend(v15, sel_setUnderlyingQueue_, *(_QWORD *)(v1 + 32));
  objc_msgSend(v15, sel_setMaxConcurrentOperationCount_, 10);
  return v1;
}

uint64_t sub_1B1CDDB60()
{
  uint64_t v0;
  _BYTE v2[328];
  _BYTE __dst[328];
  _BYTE v4[328];
  _BYTE v5[328];
  _BYTE v6[328];
  _BYTE v7[328];
  _BYTE v8[328];
  _BYTE v9[328];

  MEMORY[0x1B5E23F88](*(_QWORD *)(v0 + 72), -1, -1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v2, (const void *)(v0 + 96), sizeof(v2));
  sub_1B1D13AC0((uint64_t)v2);
  memcpy(__dst, (const void *)(v0 + 424), sizeof(__dst));
  sub_1B1D13AC0((uint64_t)__dst);
  memcpy(v4, (const void *)(v0 + 752), sizeof(v4));
  sub_1B1D13AC0((uint64_t)v4);
  memcpy(v5, (const void *)(v0 + 1080), sizeof(v5));
  sub_1B1D13AC0((uint64_t)v5);
  memcpy(v6, (const void *)(v0 + 1408), sizeof(v6));
  sub_1B1D13AC0((uint64_t)v6);
  memcpy(v7, (const void *)(v0 + 1736), sizeof(v7));
  sub_1B1D13AC0((uint64_t)v7);
  memcpy(v8, (const void *)(v0 + 2064), sizeof(v8));
  sub_1B1D13AC0((uint64_t)v8);
  memcpy(v9, (const void *)(v0 + 2392), sizeof(v9));
  sub_1B1D13AC0((uint64_t)v9);
  return v0;
}

uint64_t sub_1B1CDDC74()
{
  sub_1B1CDDB60();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScriptCompilerSystem()
{
  return objc_opt_self();
}

uint64_t sub_1B1CDDCB4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B1CDDCBC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B1CDDD14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v7;
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v8 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v8;
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v9 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v9;
  v10 = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v10;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v11 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v11;
  v12 = *(_DWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 260) = *(_BYTE *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v12;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v13 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v13;
  v14 = *(_DWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 300) = *(_BYTE *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v14;
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B1CDDED0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  v5 = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  v6 = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  v7 = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v7;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_retain();
  swift_release();
  v8 = *(_DWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v8;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_retain();
  swift_release();
  v9 = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v9;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_retain();
  swift_release();
  v10 = *(_DWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 260) = *(_BYTE *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v10;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_retain();
  swift_release();
  v11 = *(_DWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 300) = *(_BYTE *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v11;
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  return a1;
}

void *sub_1B1CDE104(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x148uLL);
}

uint64_t sub_1B1CDE10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_release();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v6 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v6;
  swift_release();
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v7 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v7;
  swift_release();
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v8 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v8;
  swift_release();
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v9 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v9;
  swift_release();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 260) = *(_BYTE *)(a2 + 260);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v10 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v10;
  swift_release();
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 300) = *(_BYTE *)(a2 + 300);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  return a1;
}

uint64_t sub_1B1CDE2B8(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 328))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1B1CDE300(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 328) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 328) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ScriptCompilerSystem.Builder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B19E5E34(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScriptCompilerSystem.Builder);
}

ValueMetadata *type metadata accessor for ScriptCompilerSystem.CachedBuildResults()
{
  return &type metadata for ScriptCompilerSystem.CachedBuildResults;
}

uint64_t _s18CachedBuildResultsV6ResultOwxx(uint64_t a1)
{
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
}

uint64_t _s18CachedBuildResultsV6ResultOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  BOOL v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  v4 = v3 == 1;
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t))(v5 - 8))(a1);
  *(_BYTE *)(a1 + 40) = v4;
  return a1;
}

uint64_t _s18CachedBuildResultsV6ResultOwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  if (a1 != a2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = v4 == 1;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v5;
  }
  return a1;
}

__n128 _s18CachedBuildResultsV6ResultOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s18CachedBuildResultsV6ResultOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t _s18CachedBuildResultsV6ResultOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t _s18CachedBuildResultsV6ResultOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B1CDE5A0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1B1CDE5BC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *_s18CachedBuildResultsV6ResultOMa()
{
  return &_s18CachedBuildResultsV6ResultON;
}

void destroy for CompilationStatus(uint64_t a1)
{
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 88);
  if (v2 >= 3)
    v2 = *(_DWORD *)a1 + 3;
  if (v2)
  {
    if (v2 == 2)
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);

    }
    else
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
    }
  }
}

uint64_t initializeWithCopy for CompilationStatus(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  char v10;
  uint64_t v11;
  void *v12;
  id v13;

  v4 = *(unsigned __int8 *)(a2 + 88);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v11 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
    v12 = *(void **)(a2 + 32);
    v13 = v12;
    *(_QWORD *)(a1 + 32) = v12;
    v10 = 2;
  }
  else if (v4 == 1)
  {
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v7 = a2 + 56;
    v8 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v8;
    v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9(a1 + 56, v7, v8);
    v10 = 1;
  }
  else
  {
    v10 = 0;
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  *(_BYTE *)(a1 + 88) = v10;
  return a1;
}

uint64_t assignWithCopy for CompilationStatus(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  char v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4)
    {
      if (v4 == 2)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);

      }
      else
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
      }
    }
    v5 = *(unsigned __int8 *)(a2 + 88);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v11 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      v12 = *(void **)(a2 + 32);
      v13 = v12;
      *(_QWORD *)(a1 + 32) = v12;
      v10 = 2;
    }
    else if (v5 == 1)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v7 = a2 + 56;
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 80) = v8;
      v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(a1 + 56, v7, v8);
      v10 = 1;
    }
    else
    {
      v10 = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 88) = v10;
  }
  return a1;
}

__n128 initializeWithTake for CompilationStatus(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CompilationStatus(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __int128 v9;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4)
    {
      if (v4 == 2)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);

      }
      else
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 56);
      }
    }
    v5 = *(unsigned __int8 *)(a2 + 88);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v8 = 2;
    }
    else if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v7 = *(_OWORD *)(a2 + 16);
      v8 = 1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    else
    {
      v8 = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 88) = v8;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CompilationStatus(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 89))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CompilationStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 73) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 89) = 0;
    if (a2)
      *(_BYTE *)(result + 88) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B1CDEAA8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 88);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_1B1CDEAC4(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 2)
  {
    v2 = a2 - 3;
    *(_QWORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 88) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CompilationStatus()
{
  return &type metadata for CompilationStatus;
}

ValueMetadata *type metadata accessor for ScriptCompilerSystem.CompilationHandle()
{
  return &type metadata for ScriptCompilerSystem.CompilationHandle;
}

_QWORD *sub_1B1CDEB14(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = a3[7];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_1B2228110();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B1CDEC40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_1B2228110();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1CDECB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1B2228110();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_1B1CDEDB8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = a3[7];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B2228110();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

uint64_t sub_1B1CDEF1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1B2228110();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

_BYTE *sub_1B1CDF018(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = a3[7];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B2228110();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

uint64_t sub_1B1CDF174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B1CDF180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 28), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1B1CDF224()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B1CDF230(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1B1791524(0, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 28), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
}

uint64_t type metadata accessor for ScriptingConfiguration()
{
  uint64_t result;

  result = qword_1ED4B9958;
  if (!qword_1ED4B9958)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B1CDF300()
{
  unint64_t v0;

  sub_1B1791524(319, (unint64_t *)&qword_1ED4BF720, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B1CDF3A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
    v2 = swift_unknownObjectRetain();
  else
    v2 = 0;
  *(_QWORD *)(v1 + 24) = v2;
  return swift_unknownObjectRelease();
}

void sub_1B1CDF3E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  id v13;
  id v14;
  int v15;
  id v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;

  v2 = v1;
  v4 = type metadata accessor for ScriptingConfiguration();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1792810(a1 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig, (uint64_t)v7, v8);
  if (v7[2] != 1)
    goto LABEL_29;
  if (!*(_QWORD *)(v2 + 24))
  {
    v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer)
        ? (id)swift_unknownObjectRetain()
        : MTLCreateSystemDefaultDevice();
    *(_QWORD *)(v2 + 24) = v16;
    swift_unknownObjectRelease();
    if (!*(_QWORD *)(v2 + 24))
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v17 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v23 = 0;
      swift_retain();
      sub_1B1F1AD70(v17, &v23, 0xD000000000000029, 0x80000001B2338680);
      swift_release();
      swift_release();
      goto LABEL_29;
    }
  }
  sub_1B1C1A56C(a1, 1, 0);
  v9 = *(_QWORD *)&v7[*(int *)(v4 + 32)];
  *(_QWORD *)(v2 + 16) = a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  v11 = dispatch_group_create();
  swift_retain();
  swift_retain();
  sub_1B1D11AA4(v11, v2, v9, v10, v2);
  sub_1B2228EFC();
  sub_1B1D11AA4(v11, v2, v9, v10, v2);
  v12 = *(void **)(v10 + 16);
  if (!v12)
  {

    swift_release();
    swift_release_n();
LABEL_29:
    sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptingConfiguration);
    return;
  }
  v13 = v12;
  swift_willThrow();

  swift_release();
  swift_release_n();
  v25 = v12;
  v14 = v12;
  sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:

    if (qword_1ED4BF430 != -1)
      swift_once();
    v23 = 0;
    v24 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    swift_bridgeObjectRelease();
    v23 = 0xD00000000000001FLL;
    v24 = 0x80000001B23386B0;
    swift_getErrorValue();
    sub_1B2229FE8();
    sub_1B2228890();
    swift_bridgeObjectRelease();
    v18 = v23;
    v19 = v24;
    v20 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v23 = 0;
    swift_retain();
    sub_1B1F1AD70(v20, &v23, v18, v19);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    goto LABEL_29;
  }
  if (v24 != 2)
  {
    sub_1B1D11FD0(v23, v24);
    goto LABEL_24;
  }

  if (*v7 == 1)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    swift_retain();
    v15 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v22 = 0;
    swift_retain();
    sub_1B1F1AD70(v15, &v22, 0xD000000000000032, 0x80000001B23386D0);
    swift_release();
    swift_release();
  }
  sub_1B1A04628((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScriptingConfiguration);

}

uint64_t sub_1B1CDF8D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for EmitterScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B14120(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3E424(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = &off_1E637A168;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6EA14((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = &off_1E637A168;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6EC28((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = &off_1E637A168;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3E480(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B14120(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE0014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for GraphScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B13EC8(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3DC70(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = &off_1E6370B28;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6E5EC((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = &off_1E6370B28;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6E800((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = &off_1E6370B28;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3C5B8(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B13EC8(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE0754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for SimpleScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B13C70(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3E374(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = &off_1E63777E8;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6E1C4((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = &off_1E63777E8;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6E3D8((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = &off_1E63777E8;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3E3D0(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B13C70(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE0E94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for MetalFunctionScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B13A18(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3E2C4(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = &off_1E6398318;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6DD9C((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = &off_1E6398318;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6DFB0((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = &off_1E6398318;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3E320(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B13A18(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE15D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for ShaderScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B137C0(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3E214(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = &off_1E6377528;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6D974((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = &off_1E6377528;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6DB88((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = &off_1E6377528;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3E270(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B137C0(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE1D14@<X0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  inited = type metadata accessor for ParticleInitScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9630, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B13568(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3D9BC(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = inited;
  *(_QWORD *)(v6 + 40) = &off_1E6394BF0;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6D54C((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = inited;
  *(_QWORD *)(v7 + 40) = &off_1E6394BF0;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6D760((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = inited;
  *(_QWORD *)(v8 + 40) = &off_1E6394BF0;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3E1C0(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B13568(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = inited;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE2454@<X0>(uint64_t a1@<X8>)
{
  uint64_t updated;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  updated = type metadata accessor for ParticleUpdateScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, &qword_1ED4B9640, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B13310(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3DC14(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = updated;
  *(_QWORD *)(v6 + 40) = &off_1E639E500;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6D124((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = updated;
  *(_QWORD *)(v7 + 40) = &off_1E639E500;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6D338((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = updated;
  *(_QWORD *)(v8 + 40) = &off_1E639E500;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3E16C(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B13310(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = updated;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE2B94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE v65[40];
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _BYTE v79[40];
  uint64_t v80;
  int v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _BYTE v86[40];
  uint64_t v87;
  int v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;

  v158 = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for TriggerScript(0);
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v152 = qword_1ED4D09F8;
  v153 = 0;
  v154 = 2;
  v155 = 0;
  v156 = 2;
  v157 = 0;
  sub_1B1A1B6FC(0, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v3;
  swift_retain();
  sub_1B1B130B8(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B1791524(0, (unint64_t *)&qword_1ED4BAE50, (uint64_t (*)(uint64_t))sub_1B19F66EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B226D240;
  sub_1B1A1B6FC(0, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = &off_1E637D0D8;
  sub_1B1B44110(&v59, v4);
  v56 = v59;
  v55 = v60;
  v54 = v61;
  v53 = v62;
  v52 = v63;
  v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v58);
  v146 = qword_1ED4D09F8;
  v147 = 0;
  v148 = 2;
  v149 = 0;
  v150 = 2;
  v151 = 0;
  swift_retain();
  sub_1B1E3E0BC(1, (uint64_t)v65);
  swift_release();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = &off_1E637DAB0;
  sub_1B1B44110(&v66, v6);
  v49 = v66;
  v47 = v68;
  v48 = v67;
  v46 = v69;
  v45 = v70;
  v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v65);
  v140 = qword_1ED4D09F8;
  v141 = 0;
  v142 = 2;
  v143 = 0;
  v144 = 2;
  v145 = 0;
  swift_retain();
  sub_1B1B6CCFC((uint64_t)v72);
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = &off_1E637DAB0;
  sub_1B1B44110(&v73, v7);
  v43 = v73;
  v41 = v75;
  v42 = v74;
  v40 = v76;
  v39 = v77;
  v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v72);
  v134 = qword_1ED4D09F8;
  v135 = 0;
  v136 = 2;
  v137 = 0;
  v138 = 2;
  v139 = 0;
  swift_retain();
  sub_1B1B6CF10((uint64_t)v79);
  swift_release();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = &off_1E637DAB0;
  sub_1B1B44110(&v80, v8);
  v37 = v80;
  v35 = v82;
  v36 = v81;
  v34 = v83;
  v33 = v84;
  v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v79);
  v128 = qword_1ED4D09F8;
  v129 = 0;
  v130 = 2;
  v131 = 0;
  v132 = 2;
  v133 = 0;
  swift_retain();
  sub_1B1E3E118(1, (uint64_t)v86);
  swift_release();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B226D240;
  *(_QWORD *)(v9 + 32) = v50;
  *(_QWORD *)(v9 + 40) = &off_1E639EBC8;
  sub_1B1B44110(&v87, v9);
  v57 = v87;
  LODWORD(v50) = v88;
  v31 = v89;
  v30 = v90;
  v29 = v91;
  v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B19ED720((uint64_t)v86);
  v122 = qword_1ED4D09F8;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v126 = 2;
  v127 = 0;
  swift_retain();
  sub_1B1B130B8(1, 3, (uint64_t)&v93);
  swift_release();
  v24 = v95;
  v25 = v94;
  v26 = v93;
  v27 = v97;
  v23 = v96 | 6;
  v116 = qword_1ED4D09F8;
  v117 = 0;
  v118 = 2;
  v119 = 0;
  v120 = 2;
  v121 = 0;
  swift_retain();
  sub_1B1B11F54(1, 2, (uint64_t)&v98);
  v22 = v98;
  v20 = v100;
  v21 = v99;
  v19 = v101;
  v18 = v102;
  v10 = v103;
  swift_release();
  v110 = qword_1ED4D09F8;
  v111 = 0;
  v112 = 2;
  v113 = 0;
  v114 = 2;
  v115 = 0;
  swift_retain();
  sub_1B1E3A248(3, (uint64_t)&v104);
  v11 = v104;
  v12 = v105;
  v13 = v106;
  v14 = v107;
  v15 = v108;
  v16 = v109;
  result = swift_release();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(_BYTE *)(a1 + 20) = v54;
  *(_QWORD *)(a1 + 24) = v53;
  *(_BYTE *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v51;
  *(_QWORD *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_QWORD *)(a1 + 64) = v46;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v44;
  *(_QWORD *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(_BYTE *)(a1 + 100) = v41;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v38;
  *(_QWORD *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(_BYTE *)(a1 + 140) = v35;
  *(_QWORD *)(a1 + 144) = v34;
  *(_BYTE *)(a1 + 152) = v33;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(_BYTE *)(a1 + 180) = v31;
  *(_QWORD *)(a1 + 184) = v30;
  *(_BYTE *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v28;
  *(_QWORD *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(_BYTE *)(a1 + 220) = v24;
  *(_QWORD *)(a1 + 224) = v23;
  *(_BYTE *)(a1 + 232) = 2;
  *(_QWORD *)(a1 + 240) = v27;
  *(_QWORD *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(_BYTE *)(a1 + 260) = v20;
  *(_QWORD *)(a1 + 264) = v19;
  *(_BYTE *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v10;
  *(_QWORD *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(_BYTE *)(a1 + 300) = v13;
  *(_QWORD *)(a1 + 304) = v14;
  *(_BYTE *)(a1 + 312) = v15;
  *(_QWORD *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B1CE32D4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = result;
  if (!*(_QWORD *)(v1 + 24))
  {
    if (*(_QWORD *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
      v2 = swift_unknownObjectRetain();
    else
      v2 = 0;
    *(_QWORD *)(v1 + 24) = v2;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B1CE3320(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))
{
  uint64_t v7;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  _QWORD *v42;
  size_t v43;
  char *v44;
  char *v45;
  char *v46;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  unsigned __int8 v64;
  uint64_t v65[8];
  _OWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _OWORD v76[2];
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;
  _BYTE v80[48];

  v64 = 0;
  v12 = *(_OWORD *)(v7 + 24);
  v78[0] = *(_OWORD *)(v7 + 8);
  v78[1] = v12;
  v79 = *(_QWORD *)(v7 + 40);
  v13 = swift_retain();
  sub_1B1E8FCE4(v13, (uint64_t)v78, 0x200000000, v65);
  sub_1B1A18378((uint64_t)v65, (uint64_t)v66, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v66[0])
  {
    swift_release();
    return 0;
  }
  v73 = v66[0];
  v74 = v66[1];
  v75 = v67;
  if (v72 <= 0 || (v55 = v69) == 0)
  {
    swift_release();
    sub_1B19ED748(v65);
    return 0;
  }
  v51 = v68;
  v14 = v71;
  v15 = v71[4];
  v61 = *(unsigned __int8 *)(v70 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v50 = (uint64_t)(v71 + 6);
  v58 = a3(0);
  sub_1B1A1B6FC(0, a4, a3, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v57 = v16;
  v48 = v14 + 13;
  v49 = v14 + 8;
  v17 = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  v18 = 0;
  v52 = a1;
  v53 = v14;
  v54 = v15;
  do
  {
    v19 = (unsigned int *)(v51 + 48 * v18);
    v21 = *v19;
    v20 = v19[1];
    v22 = (uint64_t *)*((_QWORD *)v19 + 2);
    v23 = *((_QWORD *)v19 + 4);
    v24 = *((_QWORD *)v19 + 5);
    v59 = *((_QWORD *)v19 + 3);
    v60 = v18;
    if (v61)
    {
      v25 = *(os_unfair_lock_s **)(v24 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v15);
    sub_1B1A18378(v50, (uint64_t)v80, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v26 = v17[4];
    v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 40) + 16) + 32) + 16) + 1;
    v28 = (uint64_t)v17;
    swift_retain();
    v17[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
    v17[7] = v27;
    v49[1] = 0;
    v49[2] = 0;
    *v49 = 0;
    swift_release();
    v29 = sub_1B1A12038(v58, a6, v22, v59, v23, (uint64_t)v17);
    v30 = sub_1B1A12038(v57, (uint64_t)&off_1E639EB98, v22, v59, v23, v28);
    v31 = v30;
    if (v22)
    {
      if (v23)
      {
        v32 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 72);
        v33 = *(_QWORD *)(*(_QWORD *)(v57 - 8) + 72);
        do
        {
          v34 = *v22++;
          a7(v24, v34, v29, v31, a2, v52, &v64);
          v31 += v33;
          v29 += v32;
          --v23;
        }
        while (v23);
      }
    }
    else if ((_DWORD)v21 != (_DWORD)v20)
    {
      v35 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 72);
      v36 = *(_QWORD *)(*(_QWORD *)(v57 - 8) + 72);
      v37 = v30 + v36 * v21;
      v38 = v29 + v35 * v21;
      do
      {
        a7(v24, v21++, v38, v37, a2, v52, &v64);
        v37 += v36;
        v38 += v35;
      }
      while (v20 != v21);
    }
    v76[0] = v73;
    v76[1] = v74;
    v77 = v75;
    v17 = v53;
    sub_1B1F05D48(v53, (unsigned __int16 **)v76, (uint64_t)v80);
    v15 = v54;
    if (*(_QWORD *)(v53[13] + 16))
    {
      v39 = (_QWORD *)swift_bridgeObjectRetain();
      sub_1B1F05034(v39, v24);
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41 = v53[13];
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        sub_1B1C92670(0, *(_QWORD *)(v41 + 16));
      }
      else
      {
        v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (*(_QWORD *)(v41 + 24) >= 2uLL)
        {
          sub_1B1791524(0, (unint64_t *)&qword_1ED4BADE0, (uint64_t (*)(uint64_t))sub_1B1B1F228, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v42 = (_QWORD *)swift_allocObject();
          v43 = j__malloc_size(v42);
          v42[2] = 0;
          v42[3] = 2 * ((uint64_t)(v43 - 32) / 72);
        }
        *v48 = v42;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v53[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        v44 = *(char **)(v24 + 232);
        v45 = *(char **)(v24 + 256);
        if (v44 == v45)
        {
          v46 = *(char **)(v24 + 240);
        }
        else
        {
          sub_1B1A1059C(v45, v44);
          v45 = *(char **)(v24 + 232);
          v46 = *(char **)(v24 + 240);
          if (v46 == v45)
          {
            v46 = 0;
            v45 = 0;
            *(_QWORD *)(v24 + 232) = 0;
            *(_QWORD *)(v24 + 240) = 0;
          }
        }
        *(_QWORD *)(v24 + 248) = v46;
        *(_QWORD *)(v24 + 256) = v45;
      }
    }
    ecs_stack_allocator_pop_snapshot(v54);
    if ((v61 & 1) != 0)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
    }
    swift_release();
    v18 = v60 + 1;
  }
  while (v60 + 1 != v55);
  swift_release();
  sub_1B19ED748(v65);
  sub_1B19ED748(v65);
  return v64;
}

uint64_t sub_1B1CE38AC(uint64_t *a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t result;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  int64_t v55;
  __int128 v56;
  _OWORD v57[5];
  uint64_t v58;
  char v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  _BYTE v63[104];

  v2 = a1[2];
  v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  v50 = a1;
  v51 = v2;
  v4 = a1[10];
  v54 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v53 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v57;
  v10 = v63;
  v45 = v8 - 1;
  swift_bridgeObjectRetain();
  v11 = 0;
  v55 = v8;
  v46 = v8 - 6;
  if (!v7)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v13 = v12 | (v11 << 6);
LABEL_5:
  v14 = *(_QWORD *)(v4 + 56);
  v15 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v13);
  v16 = v15[1];
  *(_QWORD *)&v56 = *v15;
  *((_QWORD *)&v56 + 1) = v16;
  sub_1B1C1A1D0(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B1D125FC((uint64_t)&v56, (uint64_t)&v60);
    if (v63[88] == 255)
      break;
    v20 = v60;
    v21 = v62;
    v22 = v61;
    sub_1B1B99D74((uint64_t)v10, (uint64_t)&v56);
    if (v20 == type metadata accessor for ShaderScript(0))
    {
      v23 = v10;
      v24 = v9;
      if (((_DWORD)v22 != -1 || (_DWORD)v21) && (v22 & 0x80000000) == 0 && v53[1] > v22)
      {
        v52 = *v53;
        v25 = *v53 + 12 * (int)v22;
        v28 = *(_DWORD *)(v25 + 8);
        v27 = (_DWORD *)(v25 + 8);
        v26 = v28;
        if ((_DWORD)v21 == -1 || v26 == (_DWORD)v21)
        {
          sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v51 + 80)
                                                  + 8 * *(__int16 *)(v52 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(_QWORD *)(v30 + 16))
          {
            v48 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v51 + 80) + 8 * *(__int16 *)(v52 + 12 * (int)v22 + 6) + 32)
                            + 16);
            v49 = v29;
            v31 = sub_1B1DC3AC8(v29);
            if ((v32 & 1) != 0
              && *(_QWORD *)(*(_QWORD *)(v48 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) + 32) == v49)
            {
              v33 = *(_QWORD *)(v49 - 8);
              if (*(_QWORD *)(v33 + 64))
                v34 = *(_QWORD *)(v33 + 72);
              else
                v34 = 0;
              if ((_DWORD)v21 != -1 && *v27 != (_DWORD)v21
                || (v35 = *(_QWORD *)(*(_QWORD *)(v51 + 136) + 8 * *(int *)(v52 + 12 * (int)v22) + 32),
                    v36 = *(_QWORD *)(v35 + 48),
                    (v37 = *(_QWORD *)(v36 + 16)) == 0))
              {
LABEL_55:
                sub_1B2229430();
                sub_1B2228890();
                sub_1B1BC3C70();
                sub_1B2228890();
                swift_bridgeObjectRelease();
                sub_1B2228890();
                sub_1B2228890();
                sub_1B2228890();
                result = sub_1B2229688();
                __break(1u);
                return result;
              }
              v38 = (_QWORD *)(v36 + 56);
              while (*(v38 - 3) != v49)
              {
                v38 += 5;
                if (!--v37)
                  goto LABEL_55;
              }
              sub_1B1CE4678(*(_QWORD *)(v35 + 128) + *v38 + v34 * *(__int16 *)(v52 + 12 * (int)v22 + 4), (uint64_t)&v56, v51, v20, v22 | (unint64_t)(v21 << 32), v50, v47);
            }
          }
        }
      }
      sub_1B1D12448((uint64_t)&v56);
      v9 = v24;
      v10 = v23;
      if (v7)
        goto LABEL_4;
    }
    else
    {
      sub_1B1D12448((uint64_t)&v56);
      if (v7)
        goto LABEL_4;
    }
LABEL_6:
    v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v55)
    {
      v18 = *(_QWORD *)(v54 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v55)
        goto LABEL_21;
      v18 = *(_QWORD *)(v54 + 8 * v19);
      if (v18)
        goto LABEL_11;
      v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v55)
        goto LABEL_40;
      v18 = *(_QWORD *)(v54 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v55)
      {
LABEL_21:
        v11 = v17;
        goto LABEL_22;
      }
      v18 = *(_QWORD *)(v54 + 8 * v19);
      if (v18)
      {
LABEL_11:
        v17 = v19;
LABEL_8:
        v7 = (v18 - 1) & v18;
        v13 = __clz(__rbit64(v18)) + (v17 << 6);
        v11 = v17;
        goto LABEL_5;
      }
      v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v55)
      {
LABEL_40:
        v11 = v19;
      }
      else
      {
        v18 = *(_QWORD *)(v54 + 8 * v17);
        if (v18)
          goto LABEL_8;
        while (v46 != v11)
        {
          v18 = *(_QWORD *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        v11 = v45;
      }
    }
LABEL_22:
    v7 = 0;
    v58 = 0;
    v56 = 0u;
    memset(v57, 0, sizeof(v57));
    v59 = -1;
  }
  swift_release();
  v39 = *(_QWORD *)(v50[10] + 16);
  if (v39)
  {
    v40 = swift_bridgeObjectRetain();
    v41 = sub_1B1CF6D9C(v40, type metadata accessor for ShaderScript);
    swift_bridgeObjectRelease();
    v50[10] = v41;
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(v50[10] + 16);
  }
  else
  {
    v42 = 0;
  }
  v43 = v39 != v42;
  os_unfair_lock_unlock((os_unfair_lock_t)v50[9]);
  swift_release();
  return v43;
}

uint64_t sub_1B1CE3E4C(_QWORD *a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t result;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  int64_t v55;
  __int128 v56;
  _OWORD v57[5];
  uint64_t v58;
  char v59;
  _QWORD *v60;
  int v61;
  unsigned int v62;
  _BYTE v63[104];

  v2 = a1[2];
  v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  v50 = a1;
  v51 = v2;
  v4 = a1[10];
  v54 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v53 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v57;
  v10 = v63;
  v45 = v8 - 1;
  swift_bridgeObjectRetain();
  v11 = 0;
  v55 = v8;
  v46 = v8 - 6;
  if (!v7)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v13 = v12 | (v11 << 6);
LABEL_5:
  v14 = *(_QWORD *)(v4 + 56);
  v15 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v13);
  v16 = v15[1];
  *(_QWORD *)&v56 = *v15;
  *((_QWORD *)&v56 + 1) = v16;
  sub_1B1C1A1D0(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B1D125FC((uint64_t)&v56, (uint64_t)&v60);
    if (v63[88] == 255)
      break;
    v20 = v60;
    v21 = v62;
    v22 = v61;
    sub_1B1B99D74((uint64_t)v10, (uint64_t)&v56);
    if (v20 == (_QWORD *)type metadata accessor for MetalFunctionScript(0))
    {
      v23 = v10;
      v24 = v9;
      if (((_DWORD)v22 != -1 || (_DWORD)v21) && (v22 & 0x80000000) == 0 && v53[1] > v22)
      {
        v52 = *v53;
        v25 = *v53 + 12 * (int)v22;
        v28 = *(_DWORD *)(v25 + 8);
        v27 = (_DWORD *)(v25 + 8);
        v26 = v28;
        if ((_DWORD)v21 == -1 || v26 == (_DWORD)v21)
        {
          sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v51 + 80)
                                                  + 8 * *(__int16 *)(v52 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(_QWORD *)(v30 + 16))
          {
            v48 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v51 + 80) + 8 * *(__int16 *)(v52 + 12 * (int)v22 + 6) + 32)
                            + 16);
            v49 = v29;
            v31 = sub_1B1DC3AC8(v29);
            if ((v32 & 1) != 0
              && *(_QWORD *)(*(_QWORD *)(v48 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) + 32) == v49)
            {
              v33 = *(_QWORD *)(v49 - 8);
              if (*(_QWORD *)(v33 + 64))
                v34 = *(_QWORD *)(v33 + 72);
              else
                v34 = 0;
              if ((_DWORD)v21 != -1 && *v27 != (_DWORD)v21
                || (v35 = *(_QWORD *)(*(_QWORD *)(v51 + 136) + 8 * *(int *)(v52 + 12 * (int)v22) + 32),
                    v36 = *(_QWORD *)(v35 + 48),
                    (v37 = *(_QWORD *)(v36 + 16)) == 0))
              {
LABEL_55:
                sub_1B2229430();
                sub_1B2228890();
                sub_1B1BC3C70();
                sub_1B2228890();
                swift_bridgeObjectRelease();
                sub_1B2228890();
                sub_1B2228890();
                sub_1B2228890();
                result = sub_1B2229688();
                __break(1u);
                return result;
              }
              v38 = (_QWORD *)(v36 + 56);
              while (*(v38 - 3) != v49)
              {
                v38 += 5;
                if (!--v37)
                  goto LABEL_55;
              }
              sub_1B1CE544C(*(_QWORD *)(v35 + 128) + *v38 + v34 * *(__int16 *)(v52 + 12 * (int)v22 + 4), (uint64_t)&v56, v51, v20, v22 | (unint64_t)(v21 << 32), v50, v47);
            }
          }
        }
      }
      sub_1B1D12448((uint64_t)&v56);
      v9 = v24;
      v10 = v23;
      if (v7)
        goto LABEL_4;
    }
    else
    {
      sub_1B1D12448((uint64_t)&v56);
      if (v7)
        goto LABEL_4;
    }
LABEL_6:
    v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v55)
    {
      v18 = *(_QWORD *)(v54 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v55)
        goto LABEL_21;
      v18 = *(_QWORD *)(v54 + 8 * v19);
      if (v18)
        goto LABEL_11;
      v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v55)
        goto LABEL_40;
      v18 = *(_QWORD *)(v54 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v55)
      {
LABEL_21:
        v11 = v17;
        goto LABEL_22;
      }
      v18 = *(_QWORD *)(v54 + 8 * v19);
      if (v18)
      {
LABEL_11:
        v17 = v19;
LABEL_8:
        v7 = (v18 - 1) & v18;
        v13 = __clz(__rbit64(v18)) + (v17 << 6);
        v11 = v17;
        goto LABEL_5;
      }
      v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v55)
      {
LABEL_40:
        v11 = v19;
      }
      else
      {
        v18 = *(_QWORD *)(v54 + 8 * v17);
        if (v18)
          goto LABEL_8;
        while (v46 != v11)
        {
          v18 = *(_QWORD *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        v11 = v45;
      }
    }
LABEL_22:
    v7 = 0;
    v58 = 0;
    v56 = 0u;
    memset(v57, 0, sizeof(v57));
    v59 = -1;
  }
  swift_release();
  v39 = *(_QWORD *)(v50[10] + 16);
  if (v39)
  {
    v40 = swift_bridgeObjectRetain();
    v41 = sub_1B1CF6D9C(v40, type metadata accessor for MetalFunctionScript);
    swift_bridgeObjectRelease();
    v50[10] = v41;
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(v50[10] + 16);
  }
  else
  {
    v42 = 0;
  }
  v43 = v39 != v42;
  os_unfair_lock_unlock((os_unfair_lock_t)v50[9]);
  swift_release();
  return v43;
}

uint64_t sub_1B1CE43EC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD v11[2];

  if (*(_BYTE *)(result + 48) == 1)
  {
    v2 = result;
    *(_QWORD *)(v1 + 16) = result;
    v3 = *(_QWORD **)(result + 176);
    swift_retain();
    v4 = sub_1B1F23314((uint64_t)&type metadata for DiagnosticsTrackerInstance, (uint64_t)&off_1E63B16B0, v3);
    result = swift_release();
    if (v4)
    {
      swift_unknownObjectRelease();
      v11[0] = sub_1B1B98190(MEMORY[0x1E0DEE9D8]);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6E800, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6E3D8, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6DFB0, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6DB88, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6EC28, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6D760, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, (unint64_t *)&unk_1ED4B9630, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6D338, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, &qword_1ED4B9640, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280);
      sub_1B1CF6368(v11, (void (*)(_OWORD *__return_ptr, uint64_t))sub_1B1B6CF10, (uint64_t (*)(_OWORD *))sub_1B1A1B75C, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8);
      v5 = v11[0];
      v6 = *(_QWORD **)(v2 + 176);
      swift_retain();
      v7 = sub_1B1F23314((uint64_t)&type metadata for DiagnosticsTrackerInstance, (uint64_t)&off_1E63B16B0, v6);
      v9 = v8;
      swift_release();
      if (v7)
      {
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v5, ObjectType, v9);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1B1CE4678(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t *a6, _QWORD *a7)
{
  uint64_t v7;
  int *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD *v46;
  __int128 v47;
  uint64_t v48;
  unsigned int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_unfair_lock_s *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  double v75;
  BOOL v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  char v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  double v110;
  BOOL v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t *v151;
  unint64_t v152;
  _DWORD v153[4];
  _OWORD v154[2];
  _OWORD v155[2];
  _OWORD v156[2];
  id v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  char v161;
  uint64_t v162[12];
  __int128 v163;
  __int128 v164;
  _UNKNOWN **v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  _UNKNOWN **v173;
  _OWORD v174[2];
  _UNKNOWN **v175;
  _OWORD v176[2];
  uint64_t v177;
  _BYTE v178[48];
  unint64_t v179;

  v149 = a7;
  v151 = a6;
  v152 = a5;
  v179 = a4;
  v142 = a3;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v11 = v10;
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v133 - v13;
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v16 = v15;
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)&v133 - v18;
  result = sub_1B1C1A1D0(a2, (uint64_t)v156);
  if (v161)
  {
    if (v161 != 1)
    {
      sub_1B1D121E4(a1, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B1A0DDAC(v156, v162);
      sub_1B1A02864((uint64_t)v162, (uint64_t)&v163);
      swift_dynamicCast();
      sub_1B1D12190((uint64_t)v14, a1, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      *((_QWORD *)&v164 + 1) = v11;
      v165 = &off_1E639EB98;
      v45 = sub_1B1A137F4((uint64_t *)&v163);
      sub_1B1D12220(a1, (uint64_t)v45, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      LOBYTE(v166) = 1;
      sub_1B20E19E8((uint64_t)&v163, v179, v152);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v162);
    }
    v150 = v7;
    v147 = a1;
    sub_1B1D121E4(a1, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v135 = v157;
    v148 = v158;
    v146 = v159;
    sub_1B1A0DDAC(v156, v155);
    sub_1B1A0DDAC(&v160, v154);
    v19[16] = 1;
    v21 = type metadata accessor for ShaderScript(0);
    v22 = &v19[*(int *)(v21 + 24)];
    v23 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *(_QWORD *)&v19[*(int *)(v21 + 28)] = &unk_1E639F1B8;
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0xE000000000000000;
    v24 = &v19[v11[9]];
    *(_QWORD *)v24 = 0;
    v24[8] = 1;
    v19[v11[10]] = 0;
    *(_QWORD *)&v19[v11[11]] = 0;
    v25 = &v19[v11[12]];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0xE000000000000000;
    *(_QWORD *)&v19[v11[13]] = MEMORY[0x1E0DEE9D8];
    v26 = v16[9];
    *(_QWORD *)&v19[v26] = 0;
    v27 = v16[10];
    *(_QWORD *)&v19[v27] = 0;
    v144 = v19;
    v28 = v16[11];
    *(_QWORD *)&v144[v28] = 0;
    *(_QWORD *)&v144[v16[12]] = 0;
    v144[v16[13]] = 0;
    v29 = &v144[v16[14]];
    *(_QWORD *)v29 = 0;
    v29[8] = 1;
    v30 = (uint64_t *)&v144[v16[15]];
    *v30 = 0;
    v30[1] = 0;
    sub_1B1A02864((uint64_t)v155, (uint64_t)&v163);
    v31 = MEMORY[0x1E0DEE9B8] + 8;
    swift_dynamicCast();
    v32 = v135;
    sub_1B1D12954((uint64_t)v14, (uint64_t)v144, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090);
    *(_QWORD *)&v144[v26] = v32;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v144[v28] = v146;
    v33 = (uint64_t)v144;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v33 + v27) = v148;
    sub_1B1A02864((uint64_t)v154, (uint64_t)&v163);
    v148 = v31;
    swift_dynamicCast();
    v34 = *(_OWORD *)v162;
    sub_1B1B28F18(*v30);
    *(_OWORD *)v30 = v34;
    sub_1B1D12220(v33, v147, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v35 = v152;
    v36 = v142;
    sub_1B1BF7C68(v33, v152);
    *((_QWORD *)&v164 + 1) = v16;
    v165 = &off_1E637D0A8;
    v37 = sub_1B1A137F4((uint64_t *)&v163);
    sub_1B1D12220(v33, (uint64_t)v37, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v166) = 0;
    sub_1B20E19E8((uint64_t)&v163, v179, v35);
    v38 = sub_1B1D183F4(v35);
    if (v38)
    {
      sub_1B1CDC014(v36, v38, v39, (void (*)(uint64_t))sub_1B1B21584, (void (*)(uint64_t))sub_1B1B21584);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B1A02864((uint64_t)v154, (uint64_t)&v163);
    v40 = swift_dynamicCast();
    v41 = v150;
    if (v40)
    {
      v42 = v162[0];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v163 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)&v163 + 1) = MEMORY[0x1E0DEE9D8];
      sub_1B1CE618C(v36, v42);
      swift_bridgeObjectRelease();
      v43 = v152;
      sub_1B1BF7C74(v163, *((uint64_t *)&v163 + 1), v152);
      v44 = v43;
      v33 = (uint64_t)v144;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B1A02864((uint64_t)v154, (uint64_t)&v163);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v44 = v152;
    }
    v46 = v149;
    sub_1B2094804(v44);
    v47 = *(_OWORD *)(v46 + 33);
    v176[0] = *(_OWORD *)(v46 + 31);
    v176[1] = v47;
    v177 = v46[35];
    sub_1B1E8FCE4(v36, (uint64_t)v176, 0x200000000, v162);
    sub_1B1A18378((uint64_t)v162, (uint64_t)&v163, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (!(_QWORD)v163)
      goto LABEL_102;
    v171 = v163;
    v172 = v164;
    v173 = v165;
    if (v170 <= 0 || (v141 = v167) == 0)
    {
LABEL_101:
      sub_1B19ED748(v162);
LABEL_102:
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v154);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v155);
      return sub_1B1D121E4(v33, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    }
    v179 = HIDWORD(v152);
    v140 = v166;
    v148 = v169[4];
    LODWORD(v147) = *(unsigned __int8 *)(v168 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v139 = v169 + 6;
    v145 = (_QWORD *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v149 = v169;
    v137 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    v138 = v169 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    v48 = 0;
    while (1)
    {
      v150 = v41;
      v49 = (unsigned int *)(v140 + 48 * v48);
      v51 = *v49;
      v50 = v49[1];
      v52 = *((_QWORD *)v49 + 3);
      v151 = (uint64_t *)*((_QWORD *)v49 + 2);
      v53 = *((_QWORD *)v49 + 4);
      v54 = *((_QWORD *)v49 + 5);
      v146 = v48;
      v143 = v50;
      if ((_DWORD)v147)
      {
        v55 = *(os_unfair_lock_s **)(v54 + 376);
        swift_retain();
        os_unfair_lock_lock(v55);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v54 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v148);
      sub_1B1A18378((uint64_t)v139, (uint64_t)v178, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
      v56 = v149;
      v57 = v149[4];
      v58 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v54 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v56[6] = ecs_stack_allocator_allocate(v57, 48 * v58, 8);
      v56[7] = v58;
      v59 = v138;
      v138[1] = 0;
      v59[2] = 0;
      *v59 = 0;
      swift_release();
      v60 = v151;
      v61 = sub_1B1A12038((uint64_t)&type metadata for Material, (uint64_t)&off_1E63C1AA0, v151, v52, v53, (uint64_t)v56);
      v62 = sub_1B1A12038((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1E6384348, v60, v52, v53, (uint64_t)v56);
      if (v60)
      {
        v63 = v152;
        v64 = 104;
        if (v53)
        {
          v65 = 0;
          while (1)
          {
            if (*(_BYTE *)(v61 + v65 * v64) != 2)
              goto LABEL_24;
            v66 = v61 + v65 * v64;
            v68 = *(_DWORD *)(v66 + 16);
            v67 = *(_DWORD *)(v66 + 20);
            if (v68 != v63 || v67 != (_DWORD)v179)
              goto LABEL_24;
            v70 = v151[v65];
            v71 = *(_BYTE *)(v54 + 184);
            v72 = swift_retain();
            if ((v71 & 1) != 0)
              goto LABEL_104;
            v73 = *(int *)(*(_QWORD *)(v54 + 168) + 4 * v70);
            v74 = *(_DWORD *)(*(_QWORD *)(v72 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v73 + 8);
            swift_release();
            if ((_DWORD)v73 != -1 || v74 != 0)
            {
              v64 = 104;
              if ((v73 & 0x80000000) != 0
                || v145[1] <= v73
                || (v74 != -1 ? (v77 = *(_DWORD *)(*v145 + 12 * (int)v73 + 8) == v74) : (v77 = 1), !v77))
              {
                v63 = v152;
                goto LABEL_23;
              }
              v78 = *(_QWORD *)(*(_QWORD *)(v142 + 136) + 8 * *(int *)(*v145 + 12 * (int)v73) + 32);
              v79 = (_QWORD *)thread_worker_index(v75);
              v82 = *(_QWORD *)(*(_QWORD *)(v81 + v137) + 8 * *v79 + 8);
              v83 = *(_QWORD *)(v78 + 192);
              if (v83)
              {
                v84 = *(_QWORD *)(v78 + 208);
                v85 = 8 * (v80 >> 6);
                *(_QWORD *)(v83 + v85) |= 1 << v80;
                *(_QWORD *)(v84 + v85) &= ~(1 << v80);
              }
              v63 = v152;
              if (*(_BYTE *)(*(_QWORD *)(v78 + 40) + 213) != 1)
                goto LABEL_23;
              v86 = *(_QWORD *)(v78 + 48);
              v87 = *(_QWORD *)(v86 + 16);
              v134 = v82;
              v143 = v80;
              if (v87)
              {
                v88 = (uint64_t *)(v86 + 56);
                while ((ValueMetadata *)*(v88 - 3) != &type metadata for PropagateDirtiness)
                {
                  v88 += 5;
                  if (!--v87)
                    goto LABEL_50;
                }
                v136 = *v88;
              }
              else
              {
LABEL_50:
                v136 = 0;
              }
              v89 = *(_QWORD *)(v78 + 128);
              v90 = *(_BYTE *)(v78 + 184);
              v91 = swift_retain();
              if ((v90 & 1) != 0)
                goto LABEL_104;
              v92 = v89 + v136;
              v93 = *(_DWORD *)(*(_QWORD *)(v78 + 168) + 4 * v143);
              v94 = (unsigned int *)(v92 + 8 * v143);
              v143 = *(unsigned int *)(*(_QWORD *)(v91 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                     + 12 * (int)v93
                                     + 8);
              swift_release();
              v95 = *v94;
              v96 = v94[1];
              if ((_DWORD)v95 != -1 || (_DWORD)v96 != 0)
                sub_1B1B8A6C8(v153, v93 | (unint64_t)(v143 << 32), v95 | (v96 << 32));
            }
            v63 = v152;
            v64 = 104;
LABEL_23:
            *(_QWORD *)(v62 + 248 * v65 + 232) = 0;
LABEL_24:
            if (++v65 == v53)
              goto LABEL_60;
          }
        }
        goto LABEL_60;
      }
      v98 = v143;
      v99 = v152;
      v100 = 104;
      if ((_DWORD)v51 != (_DWORD)v143)
        break;
LABEL_60:
      v174[0] = v171;
      v174[1] = v172;
      v175 = v173;
      v101 = v150;
      sub_1B1F05D48(v149, (unsigned __int16 **)v174, (uint64_t)v178);
      v41 = v101;
      sub_1B1F03804((char *)v54);
      ecs_stack_allocator_pop_snapshot(v148);
      if ((v147 & 1) != 0)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 376));
      }
      swift_release();
      v48 = v146 + 1;
      if (v146 + 1 == v141)
      {
        sub_1B19ED748(v162);
        v33 = (uint64_t)v144;
        goto LABEL_101;
      }
    }
    while (1)
    {
      if (*(_BYTE *)(v61 + v51 * v100) != 2)
        goto LABEL_64;
      v102 = v61 + v51 * v100;
      v104 = *(_DWORD *)(v102 + 16);
      v103 = *(_DWORD *)(v102 + 20);
      if (v104 != v99 || v103 != (_DWORD)v179)
        goto LABEL_64;
      v106 = *(_BYTE *)(v54 + 184);
      v107 = swift_retain();
      if ((v106 & 1) != 0)
        goto LABEL_104;
      v108 = *(int *)(*(_QWORD *)(v54 + 168) + 4 * v51);
      v109 = *(_DWORD *)(*(_QWORD *)(v107 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v108 + 8);
      swift_release();
      if ((_DWORD)v108 != -1 || v109 != 0)
      {
        v100 = 104;
        if ((v108 & 0x80000000) != 0
          || v145[1] <= v108
          || (v109 != -1 ? (v112 = *(_DWORD *)(*v145 + 12 * (int)v108 + 8) == v109) : (v112 = 1), !v112))
        {
          v99 = v152;
          goto LABEL_63;
        }
        v113 = *(_QWORD *)(*(_QWORD *)(v142 + 136) + 8 * *(int *)(*v145 + 12 * (int)v108) + 32);
        v114 = (_QWORD *)thread_worker_index(v110);
        v117 = *(_QWORD *)(*(_QWORD *)(v116 + v137) + 8 * *v114 + 8);
        v118 = *(_QWORD *)(v113 + 192);
        if (v118)
        {
          v119 = *(_QWORD *)(v113 + 208);
          v120 = 8 * ((uint64_t)v115 >> 6);
          *(_QWORD *)(v118 + v120) |= 1 << (char)v115;
          *(_QWORD *)(v119 + v120) &= ~(1 << (char)v115);
        }
        v99 = v152;
        if (*(_BYTE *)(*(_QWORD *)(v113 + 40) + 213) != 1)
          goto LABEL_63;
        v121 = *(_QWORD *)(v113 + 48);
        v122 = *(_QWORD *)(v121 + 16);
        v134 = v117;
        v151 = v115;
        if (v122)
        {
          v123 = (uint64_t *)(v121 + 56);
          while ((ValueMetadata *)*(v123 - 3) != &type metadata for PropagateDirtiness)
          {
            v123 += 5;
            if (!--v122)
              goto LABEL_90;
          }
          v136 = *v123;
        }
        else
        {
LABEL_90:
          v136 = 0;
        }
        v124 = *(_QWORD *)(v113 + 128);
        v125 = *(_BYTE *)(v113 + 184);
        v126 = swift_retain();
        if ((v125 & 1) != 0)
        {
LABEL_104:
          result = sub_1B2229688();
          __break(1u);
          return result;
        }
        v127 = v124 + v136;
        v128 = *(_DWORD *)(*(_QWORD *)(v113 + 168) + 4 * (_QWORD)v151);
        v129 = (unsigned int *)(v127 + 8 * (_QWORD)v151);
        v151 = (uint64_t *)*(unsigned int *)(*(_QWORD *)(v126 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                          + 12 * (int)v128
                                          + 8);
        swift_release();
        v130 = *v129;
        v131 = v129[1];
        if ((_DWORD)v130 != -1 || (_DWORD)v131 != 0)
          sub_1B1B8A6C8(v153, v128 | ((_QWORD)v151 << 32), v130 | (v131 << 32));
      }
      v99 = v152;
      v100 = 104;
LABEL_63:
      *(_QWORD *)(v62 + 248 * v51 + 232) = 0;
LABEL_64:
      if (++v51 == v98)
        goto LABEL_60;
    }
  }
  return result;
}

uint64_t sub_1B1CE544C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, unint64_t a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v7;
  int *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  int *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  unint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  os_unfair_lock_s *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  int v59;
  uint64_t i;
  int *v61;
  int v62;
  int v63;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  double v70;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int *v96;
  int v97;
  int v98;
  char v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  double v104;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  unsigned int v122;
  unsigned int *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v128;
  id v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  _QWORD *v145;
  _DWORD v146[4];
  _OWORD v147[2];
  _OWORD v148[2];
  _OWORD v149[2];
  id v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  char v154;
  _OWORD v155[6];
  __int128 v156;
  __int128 v157;
  _UNKNOWN **v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  _UNKNOWN **v166;
  _OWORD v167[2];
  _UNKNOWN **v168;
  _OWORD v169[2];
  uint64_t v170;
  _BYTE v171[48];
  unint64_t v172;

  v142 = a7;
  v143 = a6;
  v172 = a5;
  v145 = a4;
  v137 = a3;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v11 = v10;
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v128 - v13;
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v16 = v15;
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)&v128 - v18;
  result = sub_1B1C1A1D0(a2, (uint64_t)v149);
  if (v154)
  {
    if (v154 != 1)
    {
      sub_1B1D121E4(a1, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B1A0DDAC(v149, v155);
      sub_1B1A02864((uint64_t)v155, (uint64_t)&v156);
      swift_dynamicCast();
      sub_1B1D12190((uint64_t)v14, a1, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      *((_QWORD *)&v157 + 1) = v11;
      v158 = &off_1E639EB98;
      v42 = sub_1B1A137F4((uint64_t *)&v156);
      sub_1B1D12220(a1, (uint64_t)v42, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      LOBYTE(v159) = 1;
      sub_1B20E19E8((uint64_t)&v156, (uint64_t)v145, v172);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v155);
    }
    v144 = v7;
    v141 = a1;
    sub_1B1D121E4(a1, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v129 = v150;
    v139 = v152;
    v140 = v151;
    sub_1B1A0DDAC(v149, v148);
    sub_1B1A0DDAC(&v153, v147);
    v19[16] = 1;
    v21 = (int *)type metadata accessor for MetalFunctionScript(0);
    v22 = &v19[v21[6]];
    v23 = type metadata accessor for ScriptIndex();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    v19[v21[8]] = 0;
    *(_QWORD *)&v19[v21[7]] = &unk_1E639F128;
    *(_QWORD *)v19 = 0xD000000000000129;
    *((_QWORD *)v19 + 1) = 0x80000001B23377C0;
    v24 = &v19[v11[9]];
    *(_QWORD *)v24 = 0;
    v24[8] = 1;
    v19[v11[10]] = 0;
    *(_QWORD *)&v19[v11[11]] = 0;
    v25 = &v19[v11[12]];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0xE000000000000000;
    *(_QWORD *)&v19[v11[13]] = MEMORY[0x1E0DEE9D8];
    v26 = v16[9];
    *(_QWORD *)&v19[v26] = 0;
    v138 = v19;
    v27 = v16[10];
    *(_QWORD *)&v138[v27] = 0;
    v28 = v16[11];
    *(_QWORD *)&v138[v28] = 0;
    *(_QWORD *)&v138[v16[12]] = 0;
    v138[v16[13]] = 0;
    v29 = &v138[v16[14]];
    *(_QWORD *)v29 = 0;
    v29[8] = 1;
    v30 = v16[15];
    v138[v30] = 1;
    sub_1B1A02864((uint64_t)v148, (uint64_t)&v156);
    v31 = MEMORY[0x1E0DEE9B8] + 8;
    swift_dynamicCast();
    sub_1B1D12954((uint64_t)v14, (uint64_t)v138, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8);
    *(_QWORD *)&v138[v26] = v129;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v138[v28] = v139;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v138[v27] = v140;
    v32 = (uint64_t)v138;
    sub_1B1A02864((uint64_t)v147, (uint64_t)&v156);
    v140 = v31;
    swift_dynamicCast();
    *(_BYTE *)(v32 + v30) = 0;
    sub_1B1D12220(v32, v141, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v33 = v172;
    v34 = v137;
    sub_1B1BF7C80(v32, v172);
    *((_QWORD *)&v157 + 1) = v16;
    v158 = &off_1E637D0A8;
    v35 = sub_1B1A137F4((uint64_t *)&v156);
    sub_1B1D12220(v32, (uint64_t)v35, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v159) = 0;
    sub_1B20E19E8((uint64_t)&v156, (uint64_t)v145, v33);
    v36 = sub_1B1D18410(v33);
    if (v36)
    {
      sub_1B1CDC014(v34, v36, v37, (void (*)(uint64_t))sub_1B1B21584, (void (*)(uint64_t))sub_1B1B21584);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B1A02864((uint64_t)v147, (uint64_t)&v156);
    if (swift_dynamicCast())
    {
      v38 = *(_QWORD *)&v155[0];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v156 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)&v156 + 1) = MEMORY[0x1E0DEE9D8];
      sub_1B1CE618C(v34, v38);
      swift_bridgeObjectRelease();
      v39 = v172;
      sub_1B1BF7C8C(v156, *((uint64_t *)&v156 + 1), v172);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v39;
      v41 = v144;
    }
    else
    {
      sub_1B1A02864((uint64_t)v147, (uint64_t)&v156);
      v43 = swift_dynamicCast();
      v41 = v144;
      if ((v43 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v40 = v172;
    }
    v44 = v142;
    sub_1B2094804(v40);
    v45 = *(_OWORD *)(v44 + 304);
    v169[0] = *(_OWORD *)(v44 + 288);
    v169[1] = v45;
    v170 = *(_QWORD *)(v44 + 320);
    sub_1B1E8FCE4(v34, (uint64_t)v169, 0x200000000, v155);
    sub_1B1A18378((uint64_t)v155, (uint64_t)&v156, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if ((_QWORD)v156)
    {
      v164 = v156;
      v165 = v157;
      v166 = v158;
      if (v163 > 0)
      {
        v134 = v160;
        if (v160)
        {
          v46 = HIDWORD(v172);
          v133 = v159;
          v142 = v162[4];
          LODWORD(v141) = *(unsigned __int8 *)(v161 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v132 = v162 + 6;
          v145 = (_QWORD *)(v34 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          v135 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
          v143 = v162;
          v131 = v162 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          v47 = 0;
          while (1)
          {
            v144 = v41;
            v140 = v47;
            v48 = (unsigned int *)(v133 + 48 * v47);
            v49 = *v48;
            v136 = v48[1];
            v50 = (uint64_t *)*((_QWORD *)v48 + 2);
            v139 = *((_QWORD *)v48 + 3);
            v51 = *((_QWORD *)v48 + 4);
            v52 = *((_QWORD *)v48 + 5);
            if ((_DWORD)v141)
            {
              v53 = *(os_unfair_lock_s **)(v52 + 376);
              swift_retain();
              os_unfair_lock_lock(v53);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v52 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v142);
            sub_1B1A18378((uint64_t)v132, (uint64_t)v171, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
            v54 = v143;
            v55 = v143[4];
            v56 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v52 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v54[6] = ecs_stack_allocator_allocate(v55, 48 * v56, 8);
            v54[7] = v56;
            v57 = v131;
            v131[1] = 0;
            v57[2] = 0;
            *v57 = 0;
            swift_release();
            v58 = sub_1B1A12038((uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1E6396640, v50, v139, v51, (uint64_t)v54);
            if (v50)
            {
              v59 = v172;
              if (v51)
              {
                for (i = 0; i != v51; ++i)
                {
                  v61 = (int *)(v58 + 168 * i);
                  v63 = *v61;
                  v62 = v61[1];
                  if (v63 == v59 && v62 == (_DWORD)v46)
                  {
                    v65 = v50[i];
                    v66 = *(_BYTE *)(v52 + 184);
                    v67 = swift_retain();
                    if ((v66 & 1) != 0)
                      goto LABEL_98;
                    v68 = *(int *)(*(_QWORD *)(v52 + 168) + 4 * v65);
                    v69 = *(_DWORD *)(*(_QWORD *)(v67 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                    + 12 * (int)v68
                                    + 8);
                    swift_release();
                    if ((_DWORD)v68 != -1 || v69 != 0)
                    {
                      v59 = v172;
                      if ((v68 & 0x80000000) != 0 || v145[1] <= v68)
                        continue;
                      if (v69 != -1 && *(_DWORD *)(*v145 + 12 * (int)v68 + 8) != v69)
                        continue;
                      v73 = *(_QWORD *)(*(_QWORD *)(v137 + 136) + 8 * *(int *)(*v145 + 12 * (int)v68) + 32);
                      v74 = (_QWORD *)thread_worker_index(v70);
                      v77 = *(_QWORD *)(*(_QWORD *)(v76 + v135) + 8 * *v74 + 8);
                      v78 = *(_QWORD *)(v73 + 192);
                      if (v78)
                      {
                        v79 = *(_QWORD *)(v73 + 208);
                        v80 = 8 * (v75 >> 6);
                        *(_QWORD *)(v78 + v80) |= 1 << v75;
                        *(_QWORD *)(v79 + v80) &= ~(1 << v75);
                      }
                      if (*(_BYTE *)(*(_QWORD *)(v73 + 40) + 213) != 1)
                        continue;
                      v81 = *(_QWORD *)(v73 + 48);
                      v82 = *(_QWORD *)(v81 + 16);
                      v130 = v77;
                      v139 = v75;
                      if (v82)
                      {
                        v83 = (uint64_t *)(v81 + 56);
                        while ((ValueMetadata *)*(v83 - 3) != &type metadata for PropagateDirtiness)
                        {
                          v83 += 5;
                          if (!--v82)
                            goto LABEL_48;
                        }
                        v136 = *v83;
                      }
                      else
                      {
LABEL_48:
                        v136 = 0;
                      }
                      v84 = *(_QWORD *)(v73 + 128);
                      v85 = *(_BYTE *)(v73 + 184);
                      v86 = swift_retain();
                      if ((v85 & 1) != 0)
                        goto LABEL_98;
                      v87 = v84 + v136;
                      v88 = *(_DWORD *)(*(_QWORD *)(v73 + 168) + 4 * v139);
                      v89 = (unsigned int *)(v87 + 8 * v139);
                      v139 = *(unsigned int *)(*(_QWORD *)(v86 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                             + 12 * (int)v88
                                             + 8);
                      swift_release();
                      v90 = *v89;
                      v91 = v89[1];
                      if ((_DWORD)v90 != -1 || (_DWORD)v91 != 0)
                        sub_1B1B8A6C8(v146, v88 | (unint64_t)(v139 << 32), v90 | (v91 << 32));
                    }
                    v59 = v172;
                  }
                }
              }
            }
            else
            {
              v93 = v136;
              v94 = v172;
              if ((_DWORD)v49 != (_DWORD)v136)
              {
                do
                {
                  v96 = (int *)(v58 + 168 * v49);
                  v98 = *v96;
                  v97 = v96[1];
                  if (v98 == v94 && v97 == (_DWORD)v46)
                  {
                    v100 = *(_BYTE *)(v52 + 184);
                    v101 = swift_retain();
                    if ((v100 & 1) != 0)
                      goto LABEL_98;
                    v102 = *(int *)(*(_QWORD *)(v52 + 168) + 4 * v49);
                    v103 = *(_DWORD *)(*(_QWORD *)(v101 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                     + 12 * (int)v102
                                     + 8);
                    swift_release();
                    if ((_DWORD)v102 == -1 && v103 == 0)
                    {
                      v94 = v172;
                    }
                    else
                    {
                      v94 = v172;
                      if ((v102 & 0x80000000) == 0
                        && v145[1] > v102
                        && (v103 == -1 || *(_DWORD *)(*v145 + 12 * (int)v102 + 8) == v103))
                      {
                        v107 = (int *)(*v145 + 12 * (int)v102);
                        v108 = *((__int16 *)v107 + 2);
                        v109 = *(_QWORD *)(*(_QWORD *)(v137 + 136) + 8 * *v107 + 32);
                        v110 = (_QWORD *)thread_worker_index(v104);
                        v112 = *(_QWORD *)(*(_QWORD *)(v111 + v135) + 8 * *v110 + 8);
                        v113 = *(_QWORD *)(v109 + 192);
                        if (v113)
                        {
                          v114 = *(_QWORD *)(v109 + 208);
                          v115 = 8 * (v108 >> 6);
                          *(_QWORD *)(v113 + v115) |= 1 << v108;
                          *(_QWORD *)(v114 + v115) &= ~(1 << v108);
                        }
                        if (*(_BYTE *)(*(_QWORD *)(v109 + 40) + 213) == 1)
                        {
                          v116 = *(_QWORD *)(v109 + 48);
                          v117 = *(_QWORD *)(v116 + 16);
                          v130 = v112;
                          if (v117)
                          {
                            v118 = (uint64_t *)(v116 + 56);
                            while ((ValueMetadata *)*(v118 - 3) != &type metadata for PropagateDirtiness)
                            {
                              v118 += 5;
                              if (!--v117)
                                goto LABEL_85;
                            }
                            v139 = *v118;
                          }
                          else
                          {
LABEL_85:
                            v139 = 0;
                          }
                          v119 = *(_QWORD *)(v109 + 128);
                          v120 = *(_BYTE *)(v109 + 184);
                          v121 = swift_retain();
                          if ((v120 & 1) != 0)
                          {
LABEL_98:
                            result = sub_1B2229688();
                            __break(1u);
                            return result;
                          }
                          v122 = *(_DWORD *)(*(_QWORD *)(v109 + 168) + 4 * v108);
                          v123 = (unsigned int *)(v119 + v139 + 8 * v108);
                          v124 = *(unsigned int *)(*(_QWORD *)(v121 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                                 + 12 * (int)v122
                                                 + 8);
                          swift_release();
                          v125 = *v123;
                          v126 = v123[1];
                          if ((_DWORD)v125 != -1 || (_DWORD)v126 != 0)
                            sub_1B1B8A6C8(v146, v122 | (unint64_t)(v124 << 32), v125 | (v126 << 32));
                          v94 = v172;
                          v93 = v136;
                        }
                      }
                    }
                  }
                  ++v49;
                }
                while (v49 != v93);
              }
            }
            v167[0] = v164;
            v167[1] = v165;
            v168 = v166;
            v95 = v144;
            sub_1B1F05D48(v143, (unsigned __int16 **)v167, (uint64_t)v171);
            v41 = v95;
            sub_1B1F03804((char *)v52);
            ecs_stack_allocator_pop_snapshot(v142);
            if ((v141 & 1) != 0)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v52 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v52 + 376));
            }
            swift_release();
            v47 = v140 + 1;
            if (v140 + 1 == v134)
            {
              sub_1B19ED748((uint64_t *)v155);
              v32 = (uint64_t)v138;
              break;
            }
          }
        }
      }
      sub_1B19ED748((uint64_t *)v155);
    }
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v147);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v148);
    return sub_1B1D121E4(v32, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  }
  return result;
}

uint64_t sub_1B1CE618C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  char v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  _OWORD v105[2];
  _BYTE v106[48];
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v4 = v2;
    v5 = result;
    v88 = (_QWORD *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    v87 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    v86 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    v6 = a2 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v85 = MEMORY[0x1E0DEE9B8] + 8;
    v92 = v4;
    v93 = v5;
    v94 = v3;
    v95 = v6;
    do
    {
      v9 = v6 + 32 * v8;
      v10 = *(_BYTE *)(v9 + 8);
      if ((v10 & 2) != 0)
      {
        v11 = *(_QWORD *)v9;
        v12 = *(_QWORD *)(v9 + 16);
        v13 = *(_BYTE *)(v9 + 24);
        switch(*(_QWORD *)v9 >> 60)
        {
          case 1:
            v34 = v4;
            v35 = *(_QWORD *)(v11 + 64);
            sub_1B1A00060((v11 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v105);
            if (!MEMORY[0x1B5E240CC](v105))
            {
              sub_1B19FC350((uint64_t)v105);
              v6 = v95;
              v4 = v34;
              break;
            }
            v89 = v12;
            v97 = v13;
            v36 = *((_QWORD *)&v105[0] + 1);
            ObjectType = swift_getObjectType();
            v38 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 40);
            sub_1B1B1DD24(v11);
            sub_1B1B1DD24(v11);
            swift_bridgeObjectRetain();
            swift_retain();
            v39 = v38(ObjectType, v36);
            v40 = sub_1B2229304();
            v41 = swift_conformsToProtocol2();
            if (v41)
              v42 = v41;
            else
              v42 = 0;
            if (!v41)
              v40 = 0;
            if (!v40
              || (swift_unknownObjectRetain(),
                  v43 = sub_1B1B697E8(v35, v39, v40, v42),
                  swift_unknownObjectRelease(),
                  !v43))
            {
              sub_1B19FC350((uint64_t)v105);
              swift_unknownObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_70;
            }
            v101 = v39;
            v102 = v36;
            sub_1B1AEC268(0, (unint64_t *)&unk_1EEF5D970);
            swift_unknownObjectRetain();
            swift_getAtAnyKeyPath();
            swift_unknownObjectRelease();
            if (!v100)
            {
              sub_1B19FC350((uint64_t)v105);
              swift_unknownObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_release();
              sub_1B1A05610(v11);
              sub_1B1B1F3E4((uint64_t)&v99, (unint64_t *)&qword_1ED4BB150, v85);
              goto LABEL_71;
            }
            sub_1B1A0DDAC(&v99, &v103);
            v44 = *(_QWORD **)v92;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v44 = sub_1B1C638E4(0, v44[2] + 1, 1, v44);
            v46 = v44[2];
            v45 = v44[3];
            if (v46 >= v45 >> 1)
              v44 = sub_1B1C638E4(v45 > 1, v46 + 1, 1, v44);
            v44[2] = v46 + 1;
            v47 = &v44[4 * v46];
            v47[4] = v11;
            *((_BYTE *)v47 + 40) = v10;
            v47[6] = v89;
            *((_BYTE *)v47 + 56) = v97;
            *(_QWORD *)v92 = v44;
            sub_1B1A02864((uint64_t)&v103, (uint64_t)&v99);
            v48 = *(_QWORD **)(v92 + 8);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v48 = sub_1B1C67838(0, v48[2] + 1, 1, v48);
            v50 = v48[2];
            v49 = v48[3];
            if (v50 >= v49 >> 1)
              v48 = sub_1B1C67838(v49 > 1, v50 + 1, 1, v48);
            v48[2] = v50 + 1;
            sub_1B1A0DDAC(&v99, &v48[4 * v50 + 4]);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            v4 = v92;
            *(_QWORD *)(v92 + 8) = v48;
            sub_1B1A05610(v11);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v103);
            sub_1B19FC350((uint64_t)v105);
            goto LABEL_52;
          case 3:
          case 4:
            v14 = v4;
            v96 = *(_BYTE *)(v9 + 24);
            v15 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
            v16 = *(_DWORD *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
            v17 = *(int *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            sub_1B1B1DD24(v11);
            swift_bridgeObjectRetain();
            swift_retain();
            v18 = sub_1B2229304();
            if (!swift_conformsToProtocol2())
            {
              __break(1u);
LABEL_91:
              __break(1u);
              JUMPOUT(0x1B1CE6D28);
            }
            v19 = (_DWORD)v17 == -1 && v16 == 0;
            if (v19
              || (v17 & 0x80000000) != 0
              || v88[1] <= v17
              || ((v20 = *v88 + 12 * (int)v17, v16 != -1) ? (v21 = *(_DWORD *)(v20 + 8) == v16) : (v21 = 1),
                  !v21
               || (v22 = *(_QWORD *)(*(_QWORD *)(v93 + 136) + 8 * *(int *)(*v88 + 12 * (int)v17) + 32),
                   v23 = *(_QWORD *)(v22 + 48),
                   (v24 = *(_QWORD *)(v23 + 16)) == 0)))
            {
LABEL_23:
              v103 = 0u;
              v104 = 0u;
            }
            else
            {
              v25 = *(__int16 *)(v20 + 4);
              v26 = v23 + 56;
              while (*(_QWORD *)(v26 - 24) != v18)
              {
                v26 += 40;
                if (!--v24)
                  goto LABEL_23;
              }
              v74 = v26 - 8;
              v73 = *(_QWORD *)(v26 - 8);
              v72 = *(_QWORD *)(v74 + 8);
              if (v73 <= 1)
                v73 = 1;
              sub_1B1E1AA44(*(_QWORD *)(v22 + 128) + v72 + v73 * v25, v15, v18);
            }
            swift_release();
            swift_bridgeObjectRelease();
            if (*((_QWORD *)&v104 + 1))
            {
              sub_1B1A0DDAC(&v103, v105);
              v4 = v14;
              v27 = *(_QWORD **)v14;
              sub_1B1B1DD24(v11);
              v6 = v95;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v27 = sub_1B1C638E4(0, v27[2] + 1, 1, v27);
              v29 = v27[2];
              v28 = v27[3];
              if (v29 >= v28 >> 1)
                v27 = sub_1B1C638E4(v28 > 1, v29 + 1, 1, v27);
              v27[2] = v29 + 1;
              v30 = &v27[4 * v29];
              v30[4] = v11;
              *((_BYTE *)v30 + 40) = v10;
              v30[6] = v12;
              *((_BYTE *)v30 + 56) = v96;
              *(_QWORD *)v14 = v27;
              sub_1B1A02864((uint64_t)v105, (uint64_t)&v103);
              v31 = *(_QWORD **)(v14 + 8);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v31 = sub_1B1C67838(0, v31[2] + 1, 1, v31);
              v33 = v31[2];
              v32 = v31[3];
              if (v33 >= v32 >> 1)
                v31 = sub_1B1C67838(v32 > 1, v33 + 1, 1, v31);
              v31[2] = v33 + 1;
              sub_1B1A0DDAC(&v103, &v31[4 * v33 + 4]);
              sub_1B1A05610(v11);
              *(_QWORD *)(v14 + 8) = v31;
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v105);
              v3 = v94;
            }
            else
            {
              sub_1B1A05610(v11);
              sub_1B1B1F3E4((uint64_t)&v103, (unint64_t *)&qword_1ED4BB150, MEMORY[0x1E0DEE9B8] + 8);
              v3 = v94;
              v6 = v95;
              v4 = v14;
            }
            break;
          case 6:
            v90 = *(_QWORD *)(v9 + 16);
            v51 = *(_QWORD *)(v11 + 24);
            v52 = *(_QWORD *)(v11 + 32);
            v91 = *(_QWORD *)(*(_QWORD *)(v93 + v87) + 8 * *(_QWORD *)thread_worker_index(v7) + 8);
            v53 = *(_QWORD *)(v91 + 32);
            swift_retain_n();
            ecs_stack_allocator_push_snapshot(v53);
            *(_QWORD *)&v105[0] = v51;
            *((_QWORD *)&v105[0] + 1) = v52;
            *(_QWORD *)&v103 = 46;
            *((_QWORD *)&v103 + 1) = 0xE100000000000000;
            sub_1B1A06460();
            v54 = (_QWORD *)sub_1B2229214();
            *(_QWORD *)&v99 = v54;
            if (!v54[2])
              goto LABEL_69;
            v98 = v13;
            v55 = v54[4];
            v56 = v54[5];
            swift_bridgeObjectRetain();
            sub_1B1C929C8(0, 1);
            LOBYTE(v105[0]) = 1;
            v57 = sub_1B1DCD968(v55, v56, v93, 0x100000000);
            LOBYTE(v55) = v58;
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
              goto LABEL_69;
            *(_QWORD *)&v105[0] = v99;
            sub_1B1A02758(0, (unint64_t *)&qword_1ED4BA490, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            sub_1B19FA230();
            v59 = sub_1B2228644();
            v61 = v60;
            swift_bridgeObjectRelease();
            sub_1B1DCE0A4(v59, v61, (uint64_t)v106);
            sub_1B1A18378((uint64_t)v106, (uint64_t)&v107, (unint64_t *)&unk_1ED4B8880, (uint64_t)&type metadata for ScriptKeyPath);
            if (*((_QWORD *)&v107 + 1))
            {
              v109 = v107;
              v62 = v108;
              swift_bridgeObjectRelease();
              ecs_stack_allocator_pop_snapshot(v53);
              v63 = sub_1B2229304();
              if (!swift_conformsToProtocol2())
                goto LABEL_91;
              v4 = v92;
              v3 = v94;
              if (v57 == 0xFFFFFFFFLL
                || v57 << 32 < (uint64_t)0xFFFFFFFF00000001
                || (int)v57 >= v88[1]
                || (v64 = *v88 + 12 * (int)v57, HIDWORD(v57) != -1) && *(_DWORD *)(v64 + 8) != HIDWORD(v57)
                || (v65 = *(_QWORD *)(*(_QWORD *)(v93 + 136) + 8 * *(int *)(*v88 + 12 * (int)v57) + 32),
                    v66 = *(_QWORD *)(v65 + 48),
                    (v67 = *(_QWORD *)(v66 + 16)) == 0))
              {
LABEL_66:
                v110 = v109;
                sub_1B1BA80C0((uint64_t)&v110);
                swift_release();
                sub_1B1A05610(v11);
                sub_1B1A05610(v11);
                v6 = v95;
                break;
              }
              v68 = v66 + 56;
              while (*(_QWORD *)(v68 - 24) != v63)
              {
                v68 += 40;
                if (!--v67)
                  goto LABEL_66;
              }
              v77 = v68 - 8;
              v76 = *(_QWORD *)(v68 - 8);
              v75 = *(_QWORD *)(v77 + 8);
              if (v76 <= 1)
                v76 = 1;
              sub_1B1E1AA44(*(_QWORD *)(v65 + 128) + v75 + v76 * *(__int16 *)(v64 + 4), v62, v63);
              sub_1B1A0DDAC(&v103, v105);
              v78 = *(_QWORD **)v92;
              sub_1B1B1DD24(v11);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v78 = sub_1B1C638E4(0, v78[2] + 1, 1, v78);
              v80 = v78[2];
              v79 = v78[3];
              if (v80 >= v79 >> 1)
                v78 = sub_1B1C638E4(v79 > 1, v80 + 1, 1, v78);
              v78[2] = v80 + 1;
              v81 = &v78[4 * v80];
              v81[4] = v11;
              *((_BYTE *)v81 + 40) = v10;
              v81[6] = v90;
              *((_BYTE *)v81 + 56) = v98;
              *(_QWORD *)v92 = v78;
              sub_1B1A02864((uint64_t)v105, (uint64_t)&v103);
              v82 = *(_QWORD **)(v92 + 8);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v82 = sub_1B1C67838(0, v82[2] + 1, 1, v82);
              v84 = v82[2];
              v83 = v82[3];
              if (v84 >= v83 >> 1)
                v82 = sub_1B1C67838(v83 > 1, v84 + 1, 1, v82);
              v82[2] = v84 + 1;
              sub_1B1A0DDAC(&v103, &v82[4 * v84 + 4]);
              *(_QWORD *)(v92 + 8) = v82;
              v111 = v109;
              sub_1B1BA80C0((uint64_t)&v111);
              swift_release();
              sub_1B1A05610(v11);
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v105);
LABEL_52:
              sub_1B1A05610(v11);
            }
            else
            {
LABEL_69:
              swift_bridgeObjectRelease();
              v69 = *(_QWORD *)(v93 + v86);
              *(_QWORD *)&v105[0] = 0;
              *((_QWORD *)&v105[0] + 1) = 0xE000000000000000;
              swift_retain();
              sub_1B2229430();
              swift_bridgeObjectRelease();
              *(_QWORD *)&v105[0] = 0xD000000000000017;
              *((_QWORD *)&v105[0] + 1) = 0x80000001B2335210;
              sub_1B2228890();
              v70 = v105[0];
              v71 = sub_1B2228E90();
              *(_QWORD *)&v105[0] = 0;
              (*(void (**)(uint64_t, _OWORD *, _QWORD, _QWORD))(*(_QWORD *)v69 + 88))(v71, v105, v70, *((_QWORD *)&v70 + 1));
              swift_release();
              swift_bridgeObjectRelease();
              ecs_stack_allocator_pop_snapshot(*(_QWORD *)(v91 + 32));
LABEL_70:
              sub_1B1A05610(v11);
LABEL_71:
              sub_1B1A05610(v11);
              v4 = v92;
            }
            v3 = v94;
            v6 = v95;
            break;
          default:
            break;
        }
      }
      ++v8;
    }
    while (v8 != v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B1CE6D40(_QWORD *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  void (*v31)(_DWORD *, _QWORD, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void (*v58)(char *, uint64_t);
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t *v71;
  uint64_t v72;
  char *v73;
  unint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  char *v93;
  _QWORD *v94;
  id v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD v104[2];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  id v116;
  _QWORD *v117;
  uint64_t *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  _DWORD *v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  void *v130;
  id v131[7];

  v120 = a6;
  v121 = a5;
  v118 = a8;
  v119 = a4;
  v125 = a2;
  v117 = a1;
  v10 = HIDWORD(a7);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v124 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v123 = (_DWORD *)((char *)v104 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v104 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)v104 - v23);
  v25 = a3;
  v26 = a3 + *(int *)(type metadata accessor for TriggerScript(0) + 40);
  sub_1B1D124DC(v26, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v27 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v27 - 8);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v29 = v122(v20, 1, v27);
  v126 = a7;
  if (v29 == 1)
  {
    *v24 = a7;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v30 = v10;
  v31 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
  v31(v24, 0, 1, v27);
  v32 = v127;
  v33 = sub_1B1C9B398(0, v131);
  if (v32)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v111 = v31;
  v112 = v26;
  v36 = v131[0];
  v35 = v131[1];
  v37 = v131[2];
  v115 = v131[4];
  v116 = v131[5];
  v127 = v131[6];
  MEMORY[0x1E0C80A78](v33, v34);
  v104[-6] = 0;
  v104[-5] = 0xE000000000000000;
  v38 = v30;
  v39 = v126;
  LODWORD(v104[-4]) = v126;
  HIDWORD(v104[-4]) = v38;
  v109 = v38;
  v104[-3] = v40;
  v104[-2] = 0xE700000000000000;
  v104[-1] = v24;
  swift_bridgeObjectRetain();
  v114 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)&v104[-8], (uint64_t)v36);
  v113 = 0;
  swift_bridgeObjectRelease();
  v41 = sub_1B1B4F2A0((uint64_t)v35, (unint64_t)v37, 0, 0xE000000000000000, v39, 0x72656767697274uLL, 0xE700000000000000, (uint64_t)v24);
  v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  v110 = v25;
  v44 = *(unsigned __int8 *)(v25 + 24);
  v45 = sub_1B203ED38(*(_BYTE *)(v25 + 24));
  v46 = (_QWORD *)v45;
  if (v44 == 1)
  {
    *(_QWORD *)(v45 + 48) = *(_QWORD *)(v125 + 24);
    swift_unknownObjectRetain();
    v45 = swift_unknownObjectRelease();
    if (!v46[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v47 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v131[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v47, (uint64_t *)v131, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v45 = swift_release();
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v46 + 280))(v45) & 1) != 0)
  {
    LOWORD(v131[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v48 = sub_1B1BD4F68((unsigned __int8 *)v131);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v63 = 0;
      v63[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    v49 = v48;
    v50 = *(_QWORD **)(v48 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v49 + 32) = v50;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v50 = sub_1B1C63044(0, v50[2] + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v53 = v50[2];
    v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      v50 = sub_1B1C63044(v52 > 1, v53 + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v50[2] = v53 + 1;
    v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v121)
    {
      *(_BYTE *)(v49 + 26) = v119 & 1;
      v55 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v55);
      v56 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v56);
    }
    v46[10] = v49;
    swift_release();
  }
  v125 = v43;
  v57 = v113;
  v58 = sub_1B203B918(v41, v43, 0x747069726373, 0xE600000000000000);
  if (v57)
  {
    v131[0] = v57;
    v59 = v57;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    type metadata accessor for MTLLibraryError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v60 = v130;
      v128 = v130;
      sub_1B1D12534();
      sub_1B2227F84();
      if (v129 == 3)
      {

        sub_1B1D1257C();
        swift_allocError();
        *(_QWORD *)v61 = v60;
        *(_QWORD *)(v61 + 8) = v41;
        *(_QWORD *)(v61 + 16) = v125;
        *(_QWORD *)(v61 + 24) = 0;
        *(_BYTE *)(v61 + 32) = 2;
        swift_bridgeObjectRetain();
        v62 = v60;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v64 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v46 + 360))(v58);
  v66 = v65;
  v107 = v67;
  v113 = v68;
  v69 = swift_bridgeObjectRelease();
  v131[0] = (id)MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v46 + 376))(v69);
  v106 = v64;
  if (v44 == 1)
    v70 = &unk_1E639F0C8;
  else
    v70 = &unk_1E639F098;
  v71 = (uint64_t *)&unk_1E639F0A8;
  if (v44 == 1)
    v71 = (uint64_t *)&unk_1E639F0D8;
  v72 = *v71;
  if (!*v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v92 = (id)MEMORY[0x1E0DEE9D8];
    v93 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_58:
    swift_bridgeObjectRelease();
    v94 = v117;
    v95 = v127;
    *v117 = v116;
    v94[1] = v95;
    v96 = v118;
    *v118 = v106;
    v96[1] = v66;
    v97 = (uint64_t)v113;
    v96[2] = v107;
    v96[3] = v97;
    v98 = v125;
    v96[4] = v41;
    v96[5] = v98;
    v96[6] = (uint64_t)v46;
    v96[7] = (uint64_t)v93;
    v96[8] = (uint64_t)v92;
    return;
  }
  v104[1] = v70;
  v105 = v66;
  v73 = (char *)&unk_1E639F0B8;
  if (v44 == 1)
    v73 = (char *)&unk_1E639F0E8;
  v74 = (unint64_t *)(v73 + 8);
  v119 = (char *)MEMORY[0x1E0DEE9D8];
  v75 = v126;
  v76 = (uint64_t)v124;
  v108 = v41;
  while (1)
  {
    v77 = *(v74 - 1);
    v78 = *v74;
    v120 = v72;
    v121 = v77;
    v79 = v76;
    sub_1B1D124DC(v112, v76, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v122((char *)v79, 1, v27) == 1)
    {
      v80 = v123;
      v81 = v109;
      *v123 = v75;
      v80[1] = v81;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B1B596C0(v79);
    }
    else
    {
      v80 = v123;
      sub_1B1A025EC(v79, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v111(v80, 0, 1, v27);
    v82 = sub_1B1B4F2A0(v121, v78, 0, 0xE000000000000000, v75, 0x72656767697274uLL, 0xE700000000000000, (uint64_t)v80);
    v84 = v83;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v80);
    v41 = v108;
    if (*(_BYTE *)(v110 + 24) != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v46 + 336))(v82, v84);
    swift_bridgeObjectRelease();
    v85 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v85);
    if (*(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    v75 = v126;
LABEL_42:
    v74 += 2;
    v72 = v120 - 1;
    v76 = (uint64_t)v124;
    if (v120 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v131[0];
      v66 = v105;
      v93 = v119;
      goto LABEL_58;
    }
  }
  v86 = (void *)v46[8];
  if (!v86)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v99 = 0xD000000000000017;
    v100 = 0x80000001B2338790;
    v101 = 4;
    goto LABEL_61;
  }
  v87 = sub_1B22287D0();
  v88 = dlsym(v86, (const char *)(v87 + 32));
  swift_release();
  if (v88)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v119 = sub_1B1C67944(0, *((_QWORD *)v119 + 2) + 1, 1, v119);
    v75 = v126;
    v89 = v119;
    v91 = *((_QWORD *)v119 + 2);
    v90 = *((_QWORD *)v119 + 3);
    if (v91 >= v90 >> 1)
      v89 = sub_1B1C67944(v90 > 1, v91 + 1, 1, v119);
    *((_QWORD *)v89 + 2) = v91 + 1;
    v119 = v89;
    *(_QWORD *)&v89[8 * v91 + 32] = v88;
    goto LABEL_42;
  }
  dlerror();
  v102 = sub_1B22288A8();
  v100 = v103;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v99 = v102;
  v101 = 5;
LABEL_61:
  *(_QWORD *)(v99 + 16) = 0;
  *(_QWORD *)(v99 + 24) = 0;
  *(_QWORD *)(v99 + 8) = v100;
  *(_BYTE *)(v99 + 32) = v101;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B1CE79D8(_QWORD *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  void (*v31)(_DWORD *, _QWORD, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void (*v59)(char *, uint64_t);
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  unint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _DWORD *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  id v93;
  char *v94;
  _QWORD *v95;
  id v96;
  uint64_t *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void (*v112)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v113;
  void *v114;
  uint64_t v115;
  id v116;
  id v117;
  _QWORD *v118;
  uint64_t *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(char *, uint64_t, uint64_t);
  _DWORD *v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  void *v131;
  id v132[7];

  v121 = a6;
  v122 = a5;
  v119 = a8;
  v120 = a4;
  v126 = a2;
  v118 = a1;
  v10 = HIDWORD(a7);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v125 = (char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v124 = (_DWORD *)((char *)v105 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v105 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)v105 - v23);
  v25 = a3;
  v26 = a3 + *(int *)(type metadata accessor for ParticleUpdateScript(0) + 36);
  sub_1B1D124DC(v26, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v27 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v27 - 8);
  v123 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v29 = v123(v20, 1, v27);
  v127 = a7;
  if (v29 == 1)
  {
    *v24 = a7;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v30 = v10;
  v31 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
  v31(v24, 0, 1, v27);
  v32 = v128;
  v33 = sub_1B1C99D7C(0, v132);
  if (v32)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v112 = v31;
  v113 = v26;
  v36 = v132[0];
  v35 = v132[1];
  v37 = v132[2];
  v116 = v132[4];
  v117 = v132[5];
  v128 = v132[6];
  MEMORY[0x1E0C80A78](v33, v34);
  v105[-6] = 0;
  v105[-5] = 0xE000000000000000;
  v38 = v30;
  v39 = v127;
  LODWORD(v105[-4]) = v127;
  HIDWORD(v105[-4]) = v38;
  v110 = v38;
  v105[-3] = v41;
  v105[-2] = v40;
  v105[-1] = v24;
  swift_bridgeObjectRetain();
  v115 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)&v105[-8], (uint64_t)v36);
  v114 = 0;
  swift_bridgeObjectRelease();
  v42 = sub_1B1B4F2A0((uint64_t)v35, (unint64_t)v37, 0, 0xE000000000000000, v39, 0x656C636974726170uLL, 0xEE00657461647055, (uint64_t)v24);
  v44 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  v111 = v25;
  v45 = *(unsigned __int8 *)(v25 + 24);
  v46 = sub_1B203ED38(*(_BYTE *)(v25 + 24));
  v47 = (_QWORD *)v46;
  if (v45 == 1)
  {
    *(_QWORD *)(v46 + 48) = *(_QWORD *)(v126 + 24);
    swift_unknownObjectRetain();
    v46 = swift_unknownObjectRelease();
    if (!v47[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v48 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v132[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v48, (uint64_t *)v132, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v46 = swift_release();
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v47 + 280))(v46) & 1) != 0)
  {
    LOWORD(v132[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v49 = sub_1B1BD4F68((unsigned __int8 *)v132);
    if (!v49)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v64 = 0;
      v64[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    v50 = v49;
    v51 = *(_QWORD **)(v49 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v50 + 32) = v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v51 = sub_1B1C63044(0, v51[2] + 1, 1, v51);
      *(_QWORD *)(v50 + 32) = v51;
    }
    v54 = v51[2];
    v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      v51 = sub_1B1C63044(v53 > 1, v54 + 1, 1, v51);
      *(_QWORD *)(v50 + 32) = v51;
    }
    v51[2] = v54 + 1;
    v55 = &v51[2 * v54];
    v55[4] = 5785174;
    v55[5] = 0xE300000000000000;
    if (v122)
    {
      *(_BYTE *)(v50 + 26) = v120 & 1;
      v56 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v56);
      v57 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v57);
    }
    v47[10] = v50;
    swift_release();
  }
  v126 = v44;
  v58 = v114;
  v59 = sub_1B203B918(v42, v44, 0x747069726373, 0xE600000000000000);
  if (v58)
  {
    v132[0] = v58;
    v60 = v58;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    type metadata accessor for MTLLibraryError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v61 = v131;
      v129 = v131;
      sub_1B1D12534();
      sub_1B2227F84();
      if (v130 == 3)
      {

        sub_1B1D1257C();
        swift_allocError();
        *(_QWORD *)v62 = v61;
        *(_QWORD *)(v62 + 8) = v42;
        *(_QWORD *)(v62 + 16) = v126;
        *(_QWORD *)(v62 + 24) = 0;
        *(_BYTE *)(v62 + 32) = 2;
        swift_bridgeObjectRetain();
        v63 = v61;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v65 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v47 + 360))(v59);
  v67 = v66;
  v108 = v68;
  v114 = v69;
  v70 = swift_bridgeObjectRelease();
  v132[0] = (id)MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v47 + 376))(v70);
  v107 = v65;
  if (v45 == 1)
    v71 = &unk_1E639EF48;
  else
    v71 = &unk_1E639EF18;
  v72 = (uint64_t *)&unk_1E639EF28;
  if (v45 == 1)
    v72 = (uint64_t *)&unk_1E639EF58;
  v73 = *v72;
  if (!*v72)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v93 = (id)MEMORY[0x1E0DEE9D8];
    v94 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_58:
    swift_bridgeObjectRelease();
    v95 = v118;
    v96 = v128;
    *v118 = v117;
    v95[1] = v96;
    v97 = v119;
    *v119 = v107;
    v97[1] = v67;
    v98 = (uint64_t)v114;
    v97[2] = v108;
    v97[3] = v98;
    v99 = v126;
    v97[4] = v42;
    v97[5] = v99;
    v97[6] = (uint64_t)v47;
    v97[7] = (uint64_t)v94;
    v97[8] = (uint64_t)v93;
    return;
  }
  v105[1] = v71;
  v106 = v67;
  v74 = (char *)&unk_1E639EF38;
  if (v45 == 1)
    v74 = (char *)&unk_1E639EF68;
  v75 = (unint64_t *)(v74 + 8);
  v120 = (char *)MEMORY[0x1E0DEE9D8];
  v76 = v127;
  v77 = (uint64_t)v125;
  v109 = v42;
  while (1)
  {
    v78 = *(v75 - 1);
    v79 = *v75;
    v121 = v73;
    v122 = v78;
    v80 = v77;
    sub_1B1D124DC(v113, v77, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v123((char *)v80, 1, v27) == 1)
    {
      v81 = v124;
      v82 = v110;
      *v124 = v76;
      v81[1] = v82;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B1B596C0(v80);
    }
    else
    {
      v81 = v124;
      sub_1B1A025EC(v80, (uint64_t)v124, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v112(v81, 0, 1, v27);
    v83 = sub_1B1B4F2A0(v122, v79, 0, 0xE000000000000000, v76, 0x656C636974726170uLL, 0xEE00657461647055, (uint64_t)v81);
    v85 = v84;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v81);
    v42 = v109;
    if (*(_BYTE *)(v111 + 24) != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v47 + 336))(v83, v85);
    swift_bridgeObjectRelease();
    v86 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v86);
    if (*(_QWORD *)(((unint64_t)v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v132[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    v76 = v127;
LABEL_42:
    v75 += 2;
    v73 = v121 - 1;
    v77 = (uint64_t)v125;
    if (v121 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v93 = v132[0];
      v67 = v106;
      v94 = v120;
      goto LABEL_58;
    }
  }
  v87 = (void *)v47[8];
  if (!v87)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v100 = 0xD000000000000017;
    v101 = 0x80000001B2338790;
    v102 = 4;
    goto LABEL_61;
  }
  v88 = sub_1B22287D0();
  v89 = dlsym(v87, (const char *)(v88 + 32));
  swift_release();
  if (v89)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v120 = sub_1B1C67944(0, *((_QWORD *)v120 + 2) + 1, 1, v120);
    v76 = v127;
    v90 = v120;
    v92 = *((_QWORD *)v120 + 2);
    v91 = *((_QWORD *)v120 + 3);
    if (v92 >= v91 >> 1)
      v90 = sub_1B1C67944(v91 > 1, v92 + 1, 1, v120);
    *((_QWORD *)v90 + 2) = v92 + 1;
    v120 = v90;
    *(_QWORD *)&v90[8 * v92 + 32] = v89;
    goto LABEL_42;
  }
  dlerror();
  v103 = sub_1B22288A8();
  v101 = v104;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v100 = v103;
  v102 = 5;
LABEL_61:
  *(_QWORD *)(v100 + 16) = 0;
  *(_QWORD *)(v100 + 24) = 0;
  *(_QWORD *)(v100 + 8) = v101;
  *(_BYTE *)(v100 + 32) = v102;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B1CE8694(_QWORD *a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  void (*v31)(_DWORD *, _QWORD, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void (*v59)(char *, uint64_t);
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  unint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _DWORD *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  id v93;
  char *v94;
  _QWORD *v95;
  id v96;
  uint64_t *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  void (*v112)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v113;
  void *v114;
  uint64_t v115;
  id v116;
  id v117;
  _QWORD *v118;
  uint64_t *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(char *, uint64_t, uint64_t);
  _DWORD *v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  void *v131;
  id v132[7];

  v121 = a6;
  v122 = a5;
  v119 = a8;
  v120 = a4;
  v126 = a2;
  v118 = a1;
  v10 = HIDWORD(a7);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v125 = (char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v124 = (_DWORD *)((char *)v105 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v105 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)v105 - v23);
  v25 = a3;
  v26 = (uint64_t)&a3[*(int *)(type metadata accessor for ParticleInitScript(0) + 36)];
  sub_1B1D124DC(v26, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v27 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v27 - 8);
  v123 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v29 = v123(v20, 1, v27);
  v127 = a7;
  if (v29 == 1)
  {
    *v24 = a7;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v30 = v10;
  v31 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
  v31(v24, 0, 1, v27);
  v32 = v128;
  v33 = sub_1B1C993B8(0, v132);
  if (v32)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v112 = v31;
  v113 = v26;
  v36 = v132[0];
  v35 = v132[1];
  v37 = v132[2];
  v116 = v132[4];
  v117 = v132[5];
  v128 = v132[6];
  MEMORY[0x1E0C80A78](v33, v34);
  v105[-6] = 0;
  v105[-5] = 0xE000000000000000;
  v38 = v30;
  v39 = v127;
  LODWORD(v105[-4]) = v127;
  HIDWORD(v105[-4]) = v38;
  v110 = v38;
  v105[-3] = v41;
  v105[-2] = v40;
  v105[-1] = v24;
  swift_bridgeObjectRetain();
  v115 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)&v105[-8], (uint64_t)v36);
  v114 = 0;
  swift_bridgeObjectRelease();
  v42 = sub_1B1B4F2A0((uint64_t)v35, (unint64_t)v37, 0, 0xE000000000000000, v39, 0x656C636974726170uLL, 0xEC00000074696E49, (uint64_t)v24);
  v44 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  v111 = v25;
  v45 = *v25;
  v46 = sub_1B203ED38(*v25);
  v47 = (_QWORD *)v46;
  if (v45 == 1)
  {
    *(_QWORD *)(v46 + 48) = *(_QWORD *)(v126 + 24);
    swift_unknownObjectRetain();
    v46 = swift_unknownObjectRelease();
    if (!v47[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v48 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v132[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v48, (uint64_t *)v132, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v46 = swift_release();
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v47 + 280))(v46) & 1) != 0)
  {
    LOWORD(v132[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v49 = sub_1B1BD4F68((unsigned __int8 *)v132);
    if (!v49)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v64 = 0;
      v64[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    v50 = v49;
    v51 = *(_QWORD **)(v49 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v50 + 32) = v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v51 = sub_1B1C63044(0, v51[2] + 1, 1, v51);
      *(_QWORD *)(v50 + 32) = v51;
    }
    v54 = v51[2];
    v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      v51 = sub_1B1C63044(v53 > 1, v54 + 1, 1, v51);
      *(_QWORD *)(v50 + 32) = v51;
    }
    v51[2] = v54 + 1;
    v55 = &v51[2 * v54];
    v55[4] = 5785174;
    v55[5] = 0xE300000000000000;
    if (v122)
    {
      *(_BYTE *)(v50 + 26) = v120 & 1;
      v56 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v56);
      v57 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v57);
    }
    v47[10] = v50;
    swift_release();
  }
  v126 = v44;
  v58 = v114;
  v59 = sub_1B203B918(v42, v44, 0x747069726373, 0xE600000000000000);
  if (v58)
  {
    v132[0] = v58;
    v60 = v58;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    type metadata accessor for MTLLibraryError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v61 = v131;
      v129 = v131;
      sub_1B1D12534();
      sub_1B2227F84();
      if (v130 == 3)
      {

        sub_1B1D1257C();
        swift_allocError();
        *(_QWORD *)v62 = v61;
        *(_QWORD *)(v62 + 8) = v42;
        *(_QWORD *)(v62 + 16) = v126;
        *(_QWORD *)(v62 + 24) = 0;
        *(_BYTE *)(v62 + 32) = 2;
        swift_bridgeObjectRetain();
        v63 = v61;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v65 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v47 + 360))(v59);
  v67 = v66;
  v108 = v68;
  v114 = v69;
  v70 = swift_bridgeObjectRelease();
  v132[0] = (id)MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v47 + 376))(v70);
  v107 = v65;
  if (v45 == 1)
    v71 = &unk_1E639EEE8;
  else
    v71 = &unk_1E639EEB8;
  v72 = (uint64_t *)&unk_1E639EEC8;
  if (v45 == 1)
    v72 = (uint64_t *)&unk_1E639EEF8;
  v73 = *v72;
  if (!*v72)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v93 = (id)MEMORY[0x1E0DEE9D8];
    v94 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_58:
    swift_bridgeObjectRelease();
    v95 = v118;
    v96 = v128;
    *v118 = v117;
    v95[1] = v96;
    v97 = v119;
    *v119 = v107;
    v97[1] = v67;
    v98 = (uint64_t)v114;
    v97[2] = v108;
    v97[3] = v98;
    v99 = v126;
    v97[4] = v42;
    v97[5] = v99;
    v97[6] = (uint64_t)v47;
    v97[7] = (uint64_t)v94;
    v97[8] = (uint64_t)v93;
    return;
  }
  v105[1] = v71;
  v106 = v67;
  v74 = (char *)&unk_1E639EED8;
  if (v45 == 1)
    v74 = (char *)&unk_1E639EF08;
  v75 = (unint64_t *)(v74 + 8);
  v120 = (char *)MEMORY[0x1E0DEE9D8];
  v76 = v127;
  v77 = (uint64_t)v125;
  v109 = v42;
  while (1)
  {
    v78 = *(v75 - 1);
    v79 = *v75;
    v121 = v73;
    v122 = v78;
    v80 = v77;
    sub_1B1D124DC(v113, v77, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v123((char *)v80, 1, v27) == 1)
    {
      v81 = v124;
      v82 = v110;
      *v124 = v76;
      v81[1] = v82;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B1B596C0(v80);
    }
    else
    {
      v81 = v124;
      sub_1B1A025EC(v80, (uint64_t)v124, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v112(v81, 0, 1, v27);
    v83 = sub_1B1B4F2A0(v122, v79, 0, 0xE000000000000000, v76, 0x656C636974726170uLL, 0xEC00000074696E49, (uint64_t)v81);
    v85 = v84;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v81);
    v42 = v109;
    if (*v111 != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v47 + 336))(v83, v85);
    swift_bridgeObjectRelease();
    v86 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v86);
    if (*(_QWORD *)(((unint64_t)v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v132[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    v76 = v127;
LABEL_42:
    v75 += 2;
    v73 = v121 - 1;
    v77 = (uint64_t)v125;
    if (v121 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v93 = v132[0];
      v67 = v106;
      v94 = v120;
      goto LABEL_58;
    }
  }
  v87 = (void *)v47[8];
  if (!v87)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v100 = 0xD000000000000017;
    v101 = 0x80000001B2338790;
    v102 = 4;
    goto LABEL_61;
  }
  v88 = sub_1B22287D0();
  v89 = dlsym(v87, (const char *)(v88 + 32));
  swift_release();
  if (v89)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v120 = sub_1B1C67944(0, *((_QWORD *)v120 + 2) + 1, 1, v120);
    v76 = v127;
    v90 = v120;
    v92 = *((_QWORD *)v120 + 2);
    v91 = *((_QWORD *)v120 + 3);
    if (v92 >= v91 >> 1)
      v90 = sub_1B1C67944(v91 > 1, v92 + 1, 1, v120);
    *((_QWORD *)v90 + 2) = v92 + 1;
    v120 = v90;
    *(_QWORD *)&v90[8 * v92 + 32] = v89;
    goto LABEL_42;
  }
  dlerror();
  v103 = sub_1B22288A8();
  v101 = v104;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v100 = v103;
  v102 = 5;
LABEL_61:
  *(_QWORD *)(v100 + 16) = 0;
  *(_QWORD *)(v100 + 24) = 0;
  *(_QWORD *)(v100 + 8) = v101;
  *(_BYTE *)(v100 + 32) = v102;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B1CE9344(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _DWORD *v70;
  int v71;
  uint64_t v72;
  _DWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  _DWORD *v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123[7];

  v121 = a2;
  v116 = a6;
  v117 = a5;
  v114 = a8;
  v115 = a4;
  v113 = a1;
  v10 = HIDWORD(a7);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v120 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v119 = (_DWORD *)((char *)&v100 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v100 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)&v100 - v23);
  v25 = a3;
  v26 = a3 + *(int *)(type metadata accessor for ShaderScript(0) + 24);
  sub_1B1D124DC(v26, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v27 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v27 - 8);
  v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v118(v20, 1, v27) == 1)
  {
    *v24 = a7;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v29 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
  v29(v24, 0, 1, v27);
  v30 = v25;
  v31 = v122;
  v32 = sub_1B1C9EC44(0, v123);
  if (v31)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v106 = v29;
  v107 = v26;
  v35 = v123[0];
  v34 = v123[1];
  v36 = v123[2];
  v110 = v123[4];
  v112 = v123[5];
  v111 = v123[6];
  MEMORY[0x1E0C80A78](v32, v33);
  *(&v100 - 6) = 0;
  *(&v100 - 5) = (_QWORD *)0xE000000000000000;
  *((_DWORD *)&v100 - 8) = a7;
  *((_DWORD *)&v100 - 7) = v37;
  v105 = v37;
  *(&v100 - 3) = v38;
  *(&v100 - 2) = (_QWORD *)0xE600000000000000;
  *(&v100 - 1) = v24;
  swift_bridgeObjectRetain();
  v109 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)(&v100 - 8), v35);
  swift_bridgeObjectRelease();
  v108 = a7;
  v39 = sub_1B1B4F2A0(v34, v36, 0, 0xE000000000000000, a7, 0x726564616873uLL, 0xE600000000000000, (uint64_t)v24);
  v122 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  LODWORD(v34) = *(unsigned __int8 *)(v25 + 16);
  v41 = sub_1B203ED38(*(_BYTE *)(v25 + 16));
  v42 = (_QWORD *)v41;
  v43 = v30;
  if ((_DWORD)v34 == 1)
  {
    *(_QWORD *)(v41 + 48) = *(_QWORD *)(v121 + 24);
    swift_unknownObjectRetain();
    v41 = swift_unknownObjectRelease();
    if (!v42[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v44 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v123[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v44, v123, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v41 = swift_release();
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v42 + 280))(v41) & 1) != 0)
  {
    LOWORD(v123[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v45 = sub_1B1BD4F68((unsigned __int8 *)v123);
    if (!v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v57 = 0;
      v57[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    v46 = v45;
    v47 = *(_QWORD **)(v45 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v46 + 32) = v47;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v47 = sub_1B1C63044(0, v47[2] + 1, 1, v47);
      *(_QWORD *)(v46 + 32) = v47;
    }
    v50 = v47[2];
    v49 = v47[3];
    if (v50 >= v49 >> 1)
    {
      v47 = sub_1B1C63044(v49 > 1, v50 + 1, 1, v47);
      *(_QWORD *)(v46 + 32) = v47;
    }
    v47[2] = v50 + 1;
    v51 = &v47[2 * v50];
    v51[4] = 5785174;
    v51[5] = 0xE300000000000000;
    if (v117)
    {
      *(_BYTE *)(v46 + 26) = v115 & 1;
      v52 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v52);
      v53 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v53);
    }
    v42[10] = v46;
    swift_release();
  }
  v54 = v122;
  v55 = sub_1B203B918(v39, v122, 0x747069726373, 0xE600000000000000);
  v56 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v42 + 360))(v55);
  v59 = v58;
  v102 = v60;
  v103 = v56;
  v104 = v61;
  v62 = swift_bridgeObjectRelease();
  v123[0] = MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v42 + 376))(v62);
  v101 = v59;
  v63 = sub_1B1CAEEC4();
  v64 = v63[2];
  if (!v64)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88 = MEMORY[0x1E0DEE9D8];
    v89 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_43:
    swift_bridgeObjectRelease();
    v90 = v113;
    v91 = v111;
    *v113 = v112;
    v90[1] = v91;
    v92 = v114;
    v93 = v101;
    *v114 = v103;
    v92[1] = v93;
    v94 = v104;
    v92[2] = v102;
    v92[3] = v94;
    v92[4] = v39;
    v92[5] = v54;
    v92[6] = (uint64_t)v42;
    v92[7] = (uint64_t)v89;
    v92[8] = v88;
    return;
  }
  v115 = v43;
  v100 = v63;
  v65 = v63 + 5;
  v116 = (char *)MEMORY[0x1E0DEE9D8];
  v66 = v108;
  v67 = (uint64_t)v120;
  while (1)
  {
    v117 = v64;
    v68 = *v65;
    v121 = *(v65 - 1);
    sub_1B1D124DC(v107, v67, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v118((char *)v67, 1, v27) == 1)
    {
      v69 = v39;
      v70 = v119;
      v71 = v105;
      *v119 = v66;
      v70[1] = v71;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      v72 = v67;
      v73 = v70;
      v39 = v69;
      sub_1B1B596C0(v72);
    }
    else
    {
      v74 = v67;
      v73 = v119;
      sub_1B1A025EC(v74, (uint64_t)v119, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v106(v73, 0, 1, v27);
    v75 = sub_1B1B4F2A0(v121, v68, 0, 0xE000000000000000, v66, 0x726564616873uLL, 0xE600000000000000, (uint64_t)v73);
    v76 = (uint64_t)v73;
    v77 = v75;
    v79 = v78;
    swift_bridgeObjectRelease();
    sub_1B1B596C0(v76);
    if (*(_BYTE *)(v115 + 16) != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v42 + 336))(v77, v79);
    swift_bridgeObjectRelease();
    v80 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v80);
    if (*(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    v54 = v122;
LABEL_27:
    v65 += 2;
    v64 = v117 - 1;
    v66 = v108;
    v67 = (uint64_t)v120;
    if (v117 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v88 = v123[0];
      v89 = v116;
      goto LABEL_43;
    }
  }
  v81 = (void *)v42[8];
  if (!v81)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v95 = 0xD000000000000017;
    v96 = 0x80000001B2338790;
    v97 = 4;
    goto LABEL_46;
  }
  v82 = sub_1B22287D0();
  v83 = dlsym(v81, (const char *)(v82 + 32));
  swift_release();
  if (v83)
  {
    swift_bridgeObjectRelease();
    v84 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v84 = sub_1B1C67944(0, *((_QWORD *)v84 + 2) + 1, 1, v84);
    v54 = v122;
    v86 = *((_QWORD *)v84 + 2);
    v85 = *((_QWORD *)v84 + 3);
    v116 = v84;
    if (v86 >= v85 >> 1)
      v116 = sub_1B1C67944(v85 > 1, v86 + 1, 1, v116);
    v87 = v116;
    *((_QWORD *)v116 + 2) = v86 + 1;
    *(_QWORD *)&v87[8 * v86 + 32] = v83;
    goto LABEL_27;
  }
  dlerror();
  v98 = sub_1B22288A8();
  v96 = v99;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v95 = v98;
  v97 = 5;
LABEL_46:
  *(_QWORD *)(v95 + 16) = 0;
  *(_QWORD *)(v95 + 24) = 0;
  *(_QWORD *)(v95 + 8) = v96;
  *(_BYTE *)(v95 + 32) = v97;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1B1CEA014(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X3>, uint64_t a4@<X4>, unint64_t *a5@<X5>, unint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  _DWORD *v76;
  int v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void *v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  char *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD v99[2];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  void (*v106)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v107;
  void *v108;
  uint64_t v109;
  id v110;
  uint64_t *v111;
  char *v112;
  unint64_t *v113;
  uint64_t v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  _DWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  id v124[6];

  v113 = a5;
  v114 = a4;
  v111 = a7;
  v112 = a3;
  v119 = a1;
  v10 = HIDWORD(a6);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v118 = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v117 = (_DWORD *)((char *)v99 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v99 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)v99 - v23);
  v25 = *(int *)(type metadata accessor for MetalFunctionScript(0) + 24);
  v120 = a2;
  v116 = a2 + v25;
  sub_1B1D124DC(a2 + v25, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v26 = type metadata accessor for ScriptIndex();
  v27 = *(_QWORD *)(v26 - 8);
  v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v28 = a6;
  if (v115(v20, 1, v26) == 1)
  {
    *v24 = a6;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v29 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56);
  v29(v24, 0, 1, v26);
  v30 = v120;
  v31 = sub_1B1C9DE8C(0, (uint64_t *)v124);
  if (v7)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v106 = v29;
  v33 = v124[0];
  v34 = v124[1];
  v35 = v124[2];
  v110 = v124[4];
  MEMORY[0x1E0C80A78](v31, v32);
  v99[-6] = 0;
  v99[-5] = 0xE000000000000000;
  LODWORD(v99[-4]) = v28;
  HIDWORD(v99[-4]) = v36;
  v105 = v36;
  v99[-3] = v37;
  v99[-2] = 0xE600000000000000;
  v99[-1] = v24;
  swift_bridgeObjectRetain();
  v38 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)&v99[-8], (uint64_t)v33);
  v108 = 0;
  v109 = v38;
  swift_bridgeObjectRelease();
  v39 = (uint64_t)v34;
  v40 = v28;
  v41 = sub_1B1B4F2A0(v39, (unint64_t)v35, 0, 0xE000000000000000, v28, 0x6C656E72656BuLL, 0xE600000000000000, (uint64_t)v24);
  v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  LODWORD(v33) = *(unsigned __int8 *)(v30 + 16);
  v44 = sub_1B203ED38(*(_BYTE *)(v30 + 16));
  v45 = (_QWORD *)v44;
  if ((_DWORD)v33 == 1)
  {
    *(_QWORD *)(v44 + 48) = *(_QWORD *)(v119 + 24);
    swift_unknownObjectRetain();
    v44 = swift_unknownObjectRelease();
    if (!v45[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v46 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v124[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v46, (uint64_t *)v124, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v44 = swift_release();
      v40 = v28;
    }
  }
  v47 = (*(uint64_t (**)(uint64_t))(*v45 + 280))(v44);
  v107 = v41;
  if ((v47 & 1) != 0)
  {
    LOWORD(v124[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v48 = sub_1B1BD4F68((unsigned __int8 *)v124);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v65 = 0;
      v65[1] = 0;
      swift_willThrow();
      swift_release();
      return;
    }
    v49 = v48;
    v50 = *(_QWORD **)(v48 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v49 + 32) = v50;
    v52 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v50 = sub_1B1C63044(0, v50[2] + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v54 = v50[2];
    v53 = v50[3];
    if (v54 >= v53 >> 1)
    {
      v50 = sub_1B1C63044(v53 > 1, v54 + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v50[2] = v54 + 1;
    v55 = &v50[2 * v54];
    v55[4] = 5785174;
    v55[5] = 0xE300000000000000;
    if (v114)
    {
      *(_BYTE *)(v49 + 26) = v112 & 1;
      v56 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v56);
      v57 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v57);
    }
    v45[10] = v49;
    swift_release();
    v40 = v52;
    v41 = v107;
  }
  v58 = v108;
  v59 = sub_1B203B918(v41, v43, 0x747069726373, 0xE600000000000000);
  if (v58)
  {
    v124[0] = v58;
    v61 = v58;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    type metadata accessor for MTLLibraryError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v62 = v123;
      v121 = v123;
      sub_1B1D12534();
      sub_1B2227F84();
      if (v122 == 3)
      {

        sub_1B1D1257C();
        swift_allocError();
        v63 = v107;
        *(_QWORD *)v64 = v62;
        *(_QWORD *)(v64 + 8) = v63;
        *(_QWORD *)(v64 + 16) = v43;
        *(_QWORD *)(v64 + 24) = 0;
        *(_BYTE *)(v64 + 32) = 2;
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }

    return;
  }
  v60 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v45 + 360))(v59);
  v67 = v66;
  v101 = v68;
  v102 = v60;
  v103 = v69;
  v70 = swift_bridgeObjectRelease();
  v124[0] = (id)MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v45 + 376))(v70);
  v71 = sub_1B1CAEDF0();
  v72 = *(_QWORD *)(v71 + 16);
  if (!v72)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v90 = (id)MEMORY[0x1E0DEE9D8];
    v91 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_50:
    swift_bridgeObjectRelease();
    v92 = v111;
    *v111 = v102;
    v92[1] = v67;
    v93 = v103;
    v92[2] = v101;
    v92[3] = v93;
    v92[4] = v107;
    v92[5] = v43;
    v92[6] = (uint64_t)v45;
    v92[7] = (uint64_t)v91;
    v92[8] = (uint64_t)v90;
    return;
  }
  v104 = v45;
  v100 = v67;
  v108 = (void *)v43;
  v99[1] = v71;
  v73 = (unint64_t *)(v71 + 40);
  v112 = (char *)MEMORY[0x1E0DEE9D8];
  v74 = (uint64_t)v118;
  while (1)
  {
    v113 = v73;
    v114 = v72;
    v75 = *v73;
    v119 = *(v73 - 1);
    sub_1B1D124DC(v116, v74, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v115((char *)v74, 1, v26) == 1)
    {
      v76 = v117;
      v77 = v105;
      *v117 = v40;
      v76[1] = v77;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B1B596C0(v74);
    }
    else
    {
      v76 = v117;
      sub_1B1A025EC(v74, (uint64_t)v117, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v78 = v104;
    v106(v76, 0, 1, v26);
    v79 = sub_1B1B4F2A0(v119, v75, 0, 0xE000000000000000, v40, 0x6C656E72656BuLL, 0xE600000000000000, (uint64_t)v76);
    v81 = v80;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v76);
    if (*(_BYTE *)(v30 + 16) != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v78 + 336))(v79, v81);
    v82 = v40;
    swift_bridgeObjectRelease();
    v83 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v83);
    if (*(_QWORD *)(((unint64_t)v124[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v124[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
LABEL_34:
    v73 = v113 + 2;
    v72 = v114 - 1;
    v40 = v82;
    v30 = v120;
    v74 = (uint64_t)v118;
    if (v114 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v90 = v124[0];
      v43 = (unint64_t)v108;
      v67 = v100;
      v91 = v112;
      v45 = v104;
      goto LABEL_50;
    }
  }
  v84 = (void *)v78[8];
  if (!v84)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v94 = 0xD000000000000017;
    v95 = 0x80000001B2338790;
    v96 = 4;
    goto LABEL_53;
  }
  v82 = v40;
  v85 = sub_1B22287D0();
  v86 = dlsym(v84, (const char *)(v85 + 32));
  swift_release();
  if (v86)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v112 = sub_1B1C67944(0, *((_QWORD *)v112 + 2) + 1, 1, v112);
    v87 = v112;
    v89 = *((_QWORD *)v112 + 2);
    v88 = *((_QWORD *)v112 + 3);
    if (v89 >= v88 >> 1)
      v87 = sub_1B1C67944(v88 > 1, v89 + 1, 1, v112);
    *((_QWORD *)v87 + 2) = v89 + 1;
    v112 = v87;
    *(_QWORD *)&v87[8 * v89 + 32] = v86;
    goto LABEL_34;
  }
  dlerror();
  v97 = sub_1B22288A8();
  v95 = v98;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v94 = v97;
  v96 = 5;
LABEL_53:
  *(_QWORD *)(v94 + 16) = 0;
  *(_QWORD *)(v94 + 24) = 0;
  *(_QWORD *)(v94 + 8) = v95;
  *(_BYTE *)(v94 + 32) = v96;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1B1CEABF8(_QWORD *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  void (*v31)(_DWORD *, _QWORD, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void (*v58)(char *, uint64_t);
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t *v71;
  uint64_t v72;
  char *v73;
  unint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  char *v93;
  _QWORD *v94;
  id v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD v104[2];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  id v116;
  _QWORD *v117;
  uint64_t *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  _DWORD *v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  void *v130;
  id v131[7];

  v120 = a6;
  v121 = a5;
  v118 = a8;
  v119 = a4;
  v125 = a2;
  v117 = a1;
  v10 = HIDWORD(a7);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v124 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v123 = (_DWORD *)((char *)v104 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v104 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)v104 - v23);
  v25 = a3;
  v26 = a3 + *(int *)(type metadata accessor for SimpleScript(0) + 36);
  sub_1B1D124DC(v26, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v27 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v27 - 8);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v29 = v122(v20, 1, v27);
  v126 = a7;
  if (v29 == 1)
  {
    *v24 = a7;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v30 = v10;
  v31 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
  v31(v24, 0, 1, v27);
  v32 = v127;
  v33 = sub_1B1C9CF70(0, v131);
  if (v32)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v111 = v31;
  v112 = v26;
  v36 = v131[0];
  v35 = v131[1];
  v37 = v131[2];
  v115 = v131[4];
  v116 = v131[5];
  v127 = v131[6];
  MEMORY[0x1E0C80A78](v33, v34);
  v104[-6] = 0;
  v104[-5] = 0xE000000000000000;
  v38 = v30;
  v39 = v126;
  LODWORD(v104[-4]) = v126;
  HIDWORD(v104[-4]) = v38;
  v109 = v38;
  v104[-3] = v40;
  v104[-2] = 0xE600000000000000;
  v104[-1] = v24;
  swift_bridgeObjectRetain();
  v114 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)&v104[-8], (uint64_t)v36);
  v113 = 0;
  swift_bridgeObjectRelease();
  v41 = sub_1B1B4F2A0((uint64_t)v35, (unint64_t)v37, 0, 0xE000000000000000, v39, 0x656C706D6973uLL, 0xE600000000000000, (uint64_t)v24);
  v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  v110 = v25;
  v44 = *(unsigned __int8 *)(v25 + 32);
  v45 = sub_1B203ED38(*(_BYTE *)(v25 + 32));
  v46 = (_QWORD *)v45;
  if (v44 == 1)
  {
    *(_QWORD *)(v45 + 48) = *(_QWORD *)(v125 + 24);
    swift_unknownObjectRetain();
    v45 = swift_unknownObjectRelease();
    if (!v46[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v47 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v131[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v47, (uint64_t *)v131, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v45 = swift_release();
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v46 + 280))(v45) & 1) != 0)
  {
    LOWORD(v131[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v48 = sub_1B1BD4F68((unsigned __int8 *)v131);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v63 = 0;
      v63[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    v49 = v48;
    v50 = *(_QWORD **)(v48 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v49 + 32) = v50;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v50 = sub_1B1C63044(0, v50[2] + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v53 = v50[2];
    v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      v50 = sub_1B1C63044(v52 > 1, v53 + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v50[2] = v53 + 1;
    v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v121)
    {
      *(_BYTE *)(v49 + 26) = v119 & 1;
      v55 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v55);
      v56 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v56);
    }
    v46[10] = v49;
    swift_release();
  }
  v125 = v43;
  v57 = v113;
  v58 = sub_1B203B918(v41, v43, 0x747069726373, 0xE600000000000000);
  if (v57)
  {
    v131[0] = v57;
    v59 = v57;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    type metadata accessor for MTLLibraryError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v60 = v130;
      v128 = v130;
      sub_1B1D12534();
      sub_1B2227F84();
      if (v129 == 3)
      {

        sub_1B1D1257C();
        swift_allocError();
        *(_QWORD *)v61 = v60;
        *(_QWORD *)(v61 + 8) = v41;
        *(_QWORD *)(v61 + 16) = v125;
        *(_QWORD *)(v61 + 24) = 0;
        *(_BYTE *)(v61 + 32) = 2;
        swift_bridgeObjectRetain();
        v62 = v60;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v64 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v46 + 360))(v58);
  v66 = v65;
  v107 = v67;
  v113 = v68;
  v69 = swift_bridgeObjectRelease();
  v131[0] = (id)MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v46 + 376))(v69);
  v106 = v64;
  if (v44 == 1)
    v70 = &unk_1E639F008;
  else
    v70 = &unk_1E639EFD8;
  v71 = (uint64_t *)&unk_1E639EFE8;
  if (v44 == 1)
    v71 = (uint64_t *)&unk_1E639F018;
  v72 = *v71;
  if (!*v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v92 = (id)MEMORY[0x1E0DEE9D8];
    v93 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_58:
    swift_bridgeObjectRelease();
    v94 = v117;
    v95 = v127;
    *v117 = v116;
    v94[1] = v95;
    v96 = v118;
    *v118 = v106;
    v96[1] = v66;
    v97 = (uint64_t)v113;
    v96[2] = v107;
    v96[3] = v97;
    v98 = v125;
    v96[4] = v41;
    v96[5] = v98;
    v96[6] = (uint64_t)v46;
    v96[7] = (uint64_t)v93;
    v96[8] = (uint64_t)v92;
    return;
  }
  v104[1] = v70;
  v105 = v66;
  v73 = (char *)&unk_1E639EFF8;
  if (v44 == 1)
    v73 = (char *)&unk_1E639F028;
  v74 = (unint64_t *)(v73 + 8);
  v119 = (char *)MEMORY[0x1E0DEE9D8];
  v75 = v126;
  v76 = (uint64_t)v124;
  v108 = v41;
  while (1)
  {
    v77 = *(v74 - 1);
    v78 = *v74;
    v120 = v72;
    v121 = v77;
    v79 = v76;
    sub_1B1D124DC(v112, v76, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v122((char *)v79, 1, v27) == 1)
    {
      v80 = v123;
      v81 = v109;
      *v123 = v75;
      v80[1] = v81;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B1B596C0(v79);
    }
    else
    {
      v80 = v123;
      sub_1B1A025EC(v79, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v111(v80, 0, 1, v27);
    v82 = sub_1B1B4F2A0(v121, v78, 0, 0xE000000000000000, v75, 0x656C706D6973uLL, 0xE600000000000000, (uint64_t)v80);
    v84 = v83;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v80);
    v41 = v108;
    if (*(_BYTE *)(v110 + 32) != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v46 + 336))(v82, v84);
    swift_bridgeObjectRelease();
    v85 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v85);
    if (*(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    v75 = v126;
LABEL_42:
    v74 += 2;
    v72 = v120 - 1;
    v76 = (uint64_t)v124;
    if (v120 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v131[0];
      v66 = v105;
      v93 = v119;
      goto LABEL_58;
    }
  }
  v86 = (void *)v46[8];
  if (!v86)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v99 = 0xD000000000000017;
    v100 = 0x80000001B2338790;
    v101 = 4;
    goto LABEL_61;
  }
  v87 = sub_1B22287D0();
  v88 = dlsym(v86, (const char *)(v87 + 32));
  swift_release();
  if (v88)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v119 = sub_1B1C67944(0, *((_QWORD *)v119 + 2) + 1, 1, v119);
    v75 = v126;
    v89 = v119;
    v91 = *((_QWORD *)v119 + 2);
    v90 = *((_QWORD *)v119 + 3);
    if (v91 >= v90 >> 1)
      v89 = sub_1B1C67944(v90 > 1, v91 + 1, 1, v119);
    *((_QWORD *)v89 + 2) = v91 + 1;
    v119 = v89;
    *(_QWORD *)&v89[8 * v91 + 32] = v88;
    goto LABEL_42;
  }
  dlerror();
  v102 = sub_1B22288A8();
  v100 = v103;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v99 = v102;
  v101 = 5;
LABEL_61:
  *(_QWORD *)(v99 + 16) = 0;
  *(_QWORD *)(v99 + 24) = 0;
  *(_QWORD *)(v99 + 8) = v100;
  *(_BYTE *)(v99 + 32) = v101;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B1CEB884(_QWORD *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  void (*v31)(_DWORD *, _QWORD, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void (*v58)(char *, uint64_t);
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t *v71;
  uint64_t v72;
  char *v73;
  unint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  char *v93;
  _QWORD *v94;
  id v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD v104[2];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  id v116;
  _QWORD *v117;
  uint64_t *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  _DWORD *v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  void *v130;
  id v131[7];

  v120 = a6;
  v121 = a5;
  v118 = a8;
  v119 = a4;
  v125 = a2;
  v117 = a1;
  v10 = HIDWORD(a7);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v124 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v123 = (_DWORD *)((char *)v104 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v104 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)v104 - v23);
  v25 = a3;
  v26 = a3 + *(int *)(type metadata accessor for GraphScript(0) + 40);
  sub_1B1D124DC(v26, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v27 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v27 - 8);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v29 = v122(v20, 1, v27);
  v126 = a7;
  if (v29 == 1)
  {
    *v24 = a7;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v30 = v10;
  v31 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
  v31(v24, 0, 1, v27);
  v32 = v127;
  v33 = sub_1B1C9B398(0, v131);
  if (v32)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v111 = v31;
  v112 = v26;
  v36 = v131[0];
  v35 = v131[1];
  v37 = v131[2];
  v115 = v131[4];
  v116 = v131[5];
  v127 = v131[6];
  MEMORY[0x1E0C80A78](v33, v34);
  v104[-6] = 0;
  v104[-5] = 0xE000000000000000;
  v38 = v30;
  v39 = v126;
  LODWORD(v104[-4]) = v126;
  HIDWORD(v104[-4]) = v38;
  v109 = v38;
  v104[-3] = v40;
  v104[-2] = 0xE500000000000000;
  v104[-1] = v24;
  swift_bridgeObjectRetain();
  v114 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)&v104[-8], (uint64_t)v36);
  v113 = 0;
  swift_bridgeObjectRelease();
  v41 = sub_1B1B4F2A0((uint64_t)v35, (unint64_t)v37, 0, 0xE000000000000000, v39, 0x6870617267uLL, 0xE500000000000000, (uint64_t)v24);
  v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  v110 = v25;
  v44 = *(unsigned __int8 *)(v25 + 24);
  v45 = sub_1B203ED38(*(_BYTE *)(v25 + 24));
  v46 = (_QWORD *)v45;
  if (v44 == 1)
  {
    *(_QWORD *)(v45 + 48) = *(_QWORD *)(v125 + 24);
    swift_unknownObjectRetain();
    v45 = swift_unknownObjectRelease();
    if (!v46[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v47 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v131[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v47, (uint64_t *)v131, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v45 = swift_release();
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v46 + 280))(v45) & 1) != 0)
  {
    LOWORD(v131[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v48 = sub_1B1BD4F68((unsigned __int8 *)v131);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v63 = 0;
      v63[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    v49 = v48;
    v50 = *(_QWORD **)(v48 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v49 + 32) = v50;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v50 = sub_1B1C63044(0, v50[2] + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v53 = v50[2];
    v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      v50 = sub_1B1C63044(v52 > 1, v53 + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v50[2] = v53 + 1;
    v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v121)
    {
      *(_BYTE *)(v49 + 26) = v119 & 1;
      v55 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v55);
      v56 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v56);
    }
    v46[10] = v49;
    swift_release();
  }
  v125 = v43;
  v57 = v113;
  v58 = sub_1B203B918(v41, v43, 0x747069726373, 0xE600000000000000);
  if (v57)
  {
    v131[0] = v57;
    v59 = v57;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    type metadata accessor for MTLLibraryError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v60 = v130;
      v128 = v130;
      sub_1B1D12534();
      sub_1B2227F84();
      if (v129 == 3)
      {

        sub_1B1D1257C();
        swift_allocError();
        *(_QWORD *)v61 = v60;
        *(_QWORD *)(v61 + 8) = v41;
        *(_QWORD *)(v61 + 16) = v125;
        *(_QWORD *)(v61 + 24) = 0;
        *(_BYTE *)(v61 + 32) = 2;
        swift_bridgeObjectRetain();
        v62 = v60;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v64 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v46 + 360))(v58);
  v66 = v65;
  v107 = v67;
  v113 = v68;
  v69 = swift_bridgeObjectRelease();
  v131[0] = (id)MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v46 + 376))(v69);
  v106 = v64;
  if (v44 == 1)
    v70 = &unk_1E639EFA8;
  else
    v70 = &unk_1E639EF78;
  v71 = (uint64_t *)&unk_1E639EF88;
  if (v44 == 1)
    v71 = (uint64_t *)&unk_1E639EFB8;
  v72 = *v71;
  if (!*v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v92 = (id)MEMORY[0x1E0DEE9D8];
    v93 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_58:
    swift_bridgeObjectRelease();
    v94 = v117;
    v95 = v127;
    *v117 = v116;
    v94[1] = v95;
    v96 = v118;
    *v118 = v106;
    v96[1] = v66;
    v97 = (uint64_t)v113;
    v96[2] = v107;
    v96[3] = v97;
    v98 = v125;
    v96[4] = v41;
    v96[5] = v98;
    v96[6] = (uint64_t)v46;
    v96[7] = (uint64_t)v93;
    v96[8] = (uint64_t)v92;
    return;
  }
  v104[1] = v70;
  v105 = v66;
  v73 = (char *)&unk_1E639EF98;
  if (v44 == 1)
    v73 = (char *)&unk_1E639EFC8;
  v74 = (unint64_t *)(v73 + 8);
  v119 = (char *)MEMORY[0x1E0DEE9D8];
  v75 = v126;
  v76 = (uint64_t)v124;
  v108 = v41;
  while (1)
  {
    v77 = *(v74 - 1);
    v78 = *v74;
    v120 = v72;
    v121 = v77;
    v79 = v76;
    sub_1B1D124DC(v112, v76, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v122((char *)v79, 1, v27) == 1)
    {
      v80 = v123;
      v81 = v109;
      *v123 = v75;
      v80[1] = v81;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B1B596C0(v79);
    }
    else
    {
      v80 = v123;
      sub_1B1A025EC(v79, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v111(v80, 0, 1, v27);
    v82 = sub_1B1B4F2A0(v121, v78, 0, 0xE000000000000000, v75, 0x6870617267uLL, 0xE500000000000000, (uint64_t)v80);
    v84 = v83;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v80);
    v41 = v108;
    if (*(_BYTE *)(v110 + 24) != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v46 + 336))(v82, v84);
    swift_bridgeObjectRelease();
    v85 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v85);
    if (*(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    v75 = v126;
LABEL_42:
    v74 += 2;
    v72 = v120 - 1;
    v76 = (uint64_t)v124;
    if (v120 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v131[0];
      v66 = v105;
      v93 = v119;
      goto LABEL_58;
    }
  }
  v86 = (void *)v46[8];
  if (!v86)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v99 = 0xD000000000000017;
    v100 = 0x80000001B2338790;
    v101 = 4;
    goto LABEL_61;
  }
  v87 = sub_1B22287D0();
  v88 = dlsym(v86, (const char *)(v87 + 32));
  swift_release();
  if (v88)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v119 = sub_1B1C67944(0, *((_QWORD *)v119 + 2) + 1, 1, v119);
    v75 = v126;
    v89 = v119;
    v91 = *((_QWORD *)v119 + 2);
    v90 = *((_QWORD *)v119 + 3);
    if (v91 >= v90 >> 1)
      v89 = sub_1B1C67944(v90 > 1, v91 + 1, 1, v119);
    *((_QWORD *)v89 + 2) = v91 + 1;
    v119 = v89;
    *(_QWORD *)&v89[8 * v91 + 32] = v88;
    goto LABEL_42;
  }
  dlerror();
  v102 = sub_1B22288A8();
  v100 = v103;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v99 = v102;
  v101 = 5;
LABEL_61:
  *(_QWORD *)(v99 + 16) = 0;
  *(_QWORD *)(v99 + 24) = 0;
  *(_QWORD *)(v99 + 8) = v100;
  *(_BYTE *)(v99 + 32) = v101;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B1CEC510(_QWORD *a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  void (*v31)(_DWORD *, _QWORD, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void (*v58)(char *, uint64_t);
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t *v71;
  uint64_t v72;
  char *v73;
  unint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  char *v93;
  _QWORD *v94;
  id v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD v104[2];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  void (*v111)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  id v116;
  _QWORD *v117;
  uint64_t *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  _DWORD *v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  void *v130;
  id v131[7];

  v120 = a6;
  v121 = a5;
  v118 = a8;
  v119 = a4;
  v125 = a2;
  v117 = a1;
  v10 = HIDWORD(a7);
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11, v12);
  v124 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v123 = (_DWORD *)((char *)v104 - v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v104 - v19;
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (_DWORD *)((char *)v104 - v23);
  v25 = a3;
  v26 = (uint64_t)&a3[*(int *)(type metadata accessor for EmitterScript(0) + 32)];
  sub_1B1D124DC(v26, (uint64_t)v20, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v27 = type metadata accessor for ScriptIndex();
  v28 = *(_QWORD *)(v27 - 8);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v29 = v122(v20, 1, v27);
  v126 = a7;
  if (v29 == 1)
  {
    *v24 = a7;
    v24[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v20);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v30 = v10;
  v31 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
  v31(v24, 0, 1, v27);
  v32 = v127;
  v33 = sub_1B1C9BF0C(0, v131);
  if (v32)
  {
    sub_1B1B596C0((uint64_t)v24);
    return;
  }
  v111 = v31;
  v112 = v26;
  v36 = v131[0];
  v35 = v131[1];
  v37 = v131[2];
  v115 = v131[4];
  v116 = v131[5];
  v127 = v131[6];
  MEMORY[0x1E0C80A78](v33, v34);
  v104[-6] = 0;
  v104[-5] = 0xE000000000000000;
  v38 = v30;
  v39 = v126;
  LODWORD(v104[-4]) = v126;
  HIDWORD(v104[-4]) = v38;
  v109 = v38;
  v104[-3] = v40;
  v104[-2] = 0xE700000000000000;
  v104[-1] = v24;
  swift_bridgeObjectRetain();
  v114 = sub_1B1BA8A28((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1B1B63BA8, (uint64_t)&v104[-8], (uint64_t)v36);
  v113 = 0;
  swift_bridgeObjectRelease();
  v41 = sub_1B1B4F2A0((uint64_t)v35, (unint64_t)v37, 0, 0xE000000000000000, v39, 0x72657474696D65uLL, 0xE700000000000000, (uint64_t)v24);
  v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B1B596C0((uint64_t)v24);
  v110 = v25;
  v44 = *v25;
  v45 = sub_1B203ED38(*v25);
  v46 = (_QWORD *)v45;
  if (v44 == 1)
  {
    *(_QWORD *)(v45 + 48) = *(_QWORD *)(v125 + 24);
    swift_unknownObjectRetain();
    v45 = swift_unknownObjectRelease();
    if (!v46[6])
    {
      if (qword_1ED4BF430 != -1)
        swift_once();
      swift_retain();
      v47 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v131[0] = 0;
      swift_retain();
      sub_1B1F1AD70(v47, (uint64_t *)v131, 0xD000000000000024, 0x80000001B23387B0);
      swift_release();
      v45 = swift_release();
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*v46 + 280))(v45) & 1) != 0)
  {
    LOWORD(v131[0]) = 256;
    type metadata accessor for XcodeCommandBuilder();
    swift_allocObject();
    v48 = sub_1B1BD4F68((unsigned __int8 *)v131);
    if (!v48)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B1B63B64();
      swift_allocError();
      *v63 = 0;
      v63[1] = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    v49 = v48;
    v50 = *(_QWORD **)(v48 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v49 + 32) = v50;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v50 = sub_1B1C63044(0, v50[2] + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v53 = v50[2];
    v52 = v50[3];
    if (v53 >= v52 >> 1)
    {
      v50 = sub_1B1C63044(v52 > 1, v53 + 1, 1, v50);
      *(_QWORD *)(v49 + 32) = v50;
    }
    v50[2] = v53 + 1;
    v54 = &v50[2 * v53];
    v54[4] = 5785174;
    v54[5] = 0xE300000000000000;
    if (v121)
    {
      *(_BYTE *)(v49 + 26) = v119 & 1;
      v55 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v55);
      v56 = swift_bridgeObjectRetain();
      sub_1B19F48F0(v56);
    }
    v46[10] = v49;
    swift_release();
  }
  v125 = v43;
  v57 = v113;
  v58 = sub_1B203B918(v41, v43, 0x747069726373, 0xE600000000000000);
  if (v57)
  {
    v131[0] = v57;
    v59 = v57;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    type metadata accessor for MTLLibraryError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v60 = v130;
      v128 = v130;
      sub_1B1D12534();
      sub_1B2227F84();
      if (v129 == 3)
      {

        sub_1B1D1257C();
        swift_allocError();
        *(_QWORD *)v61 = v60;
        *(_QWORD *)(v61 + 8) = v41;
        *(_QWORD *)(v61 + 16) = v125;
        *(_QWORD *)(v61 + 24) = 0;
        *(_BYTE *)(v61 + 32) = 2;
        swift_bridgeObjectRetain();
        v62 = v60;
        swift_willThrow();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v64 = (*(uint64_t (**)(void (*)(char *, uint64_t)))(*v46 + 360))(v58);
  v66 = v65;
  v107 = v67;
  v113 = v68;
  v69 = swift_bridgeObjectRelease();
  v131[0] = (id)MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t))(*v46 + 376))(v69);
  v106 = v64;
  if (v44 == 1)
    v70 = &unk_1E639F068;
  else
    v70 = &unk_1E639F038;
  v71 = (uint64_t *)&unk_1E639F048;
  if (v44 == 1)
    v71 = (uint64_t *)&unk_1E639F078;
  v72 = *v71;
  if (!*v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v92 = (id)MEMORY[0x1E0DEE9D8];
    v93 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_58:
    swift_bridgeObjectRelease();
    v94 = v117;
    v95 = v127;
    *v117 = v116;
    v94[1] = v95;
    v96 = v118;
    *v118 = v106;
    v96[1] = v66;
    v97 = (uint64_t)v113;
    v96[2] = v107;
    v96[3] = v97;
    v98 = v125;
    v96[4] = v41;
    v96[5] = v98;
    v96[6] = (uint64_t)v46;
    v96[7] = (uint64_t)v93;
    v96[8] = (uint64_t)v92;
    return;
  }
  v104[1] = v70;
  v105 = v66;
  v73 = (char *)&unk_1E639F058;
  if (v44 == 1)
    v73 = (char *)&unk_1E639F088;
  v74 = (unint64_t *)(v73 + 8);
  v119 = (char *)MEMORY[0x1E0DEE9D8];
  v75 = v126;
  v76 = (uint64_t)v124;
  v108 = v41;
  while (1)
  {
    v77 = *(v74 - 1);
    v78 = *v74;
    v120 = v72;
    v121 = v77;
    v79 = v76;
    sub_1B1D124DC(v112, v76, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
    if (v122((char *)v79, 1, v27) == 1)
    {
      v80 = v123;
      v81 = v109;
      *v123 = v75;
      v80[1] = v81;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1B1B596C0(v79);
    }
    else
    {
      v80 = v123;
      sub_1B1A025EC(v79, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      swift_bridgeObjectRetain();
    }
    v111(v80, 0, 1, v27);
    v82 = sub_1B1B4F2A0(v121, v78, 0, 0xE000000000000000, v75, 0x72657474696D65uLL, 0xE700000000000000, (uint64_t)v80);
    v84 = v83;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v80);
    v41 = v108;
    if (*v110 != 1)
      break;
    (*(void (**)(uint64_t, uint64_t))(*v46 + 336))(v82, v84);
    swift_bridgeObjectRelease();
    v85 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v85);
    if (*(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v131[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    v75 = v126;
LABEL_42:
    v74 += 2;
    v72 = v120 - 1;
    v76 = (uint64_t)v124;
    if (v120 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v131[0];
      v66 = v105;
      v93 = v119;
      goto LABEL_58;
    }
  }
  v86 = (void *)v46[8];
  if (!v86)
  {
    sub_1B1D1257C();
    swift_allocError();
    *(_QWORD *)v99 = 0xD000000000000017;
    v100 = 0x80000001B2338790;
    v101 = 4;
    goto LABEL_61;
  }
  v87 = sub_1B22287D0();
  v88 = dlsym(v86, (const char *)(v87 + 32));
  swift_release();
  if (v88)
  {
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v119 = sub_1B1C67944(0, *((_QWORD *)v119 + 2) + 1, 1, v119);
    v75 = v126;
    v89 = v119;
    v91 = *((_QWORD *)v119 + 2);
    v90 = *((_QWORD *)v119 + 3);
    if (v91 >= v90 >> 1)
      v89 = sub_1B1C67944(v90 > 1, v91 + 1, 1, v119);
    *((_QWORD *)v89 + 2) = v91 + 1;
    v119 = v89;
    *(_QWORD *)&v89[8 * v91 + 32] = v88;
    goto LABEL_42;
  }
  dlerror();
  v102 = sub_1B22288A8();
  v100 = v103;
  sub_1B1D1257C();
  swift_allocError();
  *(_QWORD *)v99 = v102;
  v101 = 5;
LABEL_61:
  *(_QWORD *)(v99 + 16) = 0;
  *(_QWORD *)(v99 + 24) = 0;
  *(_QWORD *)(v99 + 8) = v100;
  *(_BYTE *)(v99 + 32) = v101;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
}

void sub_1B1CED1A8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  *(_BYTE *)a1 = 0;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a1 + 40) = 0;
  v3 = a1 + *(int *)(type metadata accessor for ParticleInitScript(0) + 36);
  v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)(a1 + 8) = 0xD0000000000000BFLL;
  *(_QWORD *)(a1 + 16) = 0x80000001B232DFE0;
  *(_QWORD *)(a1 + 24) = &unk_1E639EA08;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9630, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v6 = a1 + v5[9];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a1 + v5[10]) = 0;
  *(_QWORD *)(a1 + v5[11]) = 0;
  v7 = (_QWORD *)(a1 + v5[12]);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  *(_QWORD *)(a1 + v5[13]) = v2;
}

void sub_1B1CED2AC(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  *(_BYTE *)(a1 + 16) = 1;
  v2 = (int *)type metadata accessor for MetalFunctionScript(0);
  v3 = a1 + v2[6];
  v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_BYTE *)(a1 + v2[8]) = 0;
  *(_QWORD *)(a1 + v2[7]) = &unk_1E639EA38;
  *(_QWORD *)a1 = 0xD000000000000129;
  *(_QWORD *)(a1 + 8) = 0x80000001B23377C0;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v6 = a1 + v5[9];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a1 + v5[10]) = 0;
  *(_QWORD *)(a1 + v5[11]) = 0;
  v7 = (_QWORD *)(a1 + v5[12]);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  *(_QWORD *)(a1 + v5[13]) = MEMORY[0x1E0DEE9D8];
}

void sub_1B1CED3B8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  *(_QWORD *)(a1 + 24) = &unk_1E639EAD8;
  *(_WORD *)(a1 + 32) = 2;
  v3 = a1 + *(int *)(type metadata accessor for SimpleScript(0) + 36);
  v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v6 = a1 + v5[9];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a1 + v5[10]) = 0;
  *(_QWORD *)(a1 + v5[11]) = 0;
  v7 = (_QWORD *)(a1 + v5[12]);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  *(_QWORD *)(a1 + v5[13]) = v2;
}

void sub_1B1CED4A0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  *(_BYTE *)(a1 + 24) = 2;
  *(_QWORD *)(a1 + 32) = &unk_1E639EA68;
  *(_WORD *)(a1 + 40) = 0;
  v3 = a1 + *(int *)(type metadata accessor for GraphScript(0) + 40);
  v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1B1A1B6FC(0, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v6 = a1 + v5[9];
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a1 + v5[10]) = 0;
  *(_QWORD *)(a1 + v5[11]) = 0;
  v7 = (_QWORD *)(a1 + v5[12]);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  *(_QWORD *)(a1 + v5[13]) = v2;
}

void sub_1B1CED590(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 32) = 0;
  v2 = a1 + *(int *)(type metadata accessor for EmitterScript(0) + 32);
  v3 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)(a1 + 8) = 0xD0000000000000C0;
  *(_QWORD *)(a1 + 16) = 0x80000001B232DE80;
  *(_QWORD *)(a1 + 24) = &unk_1E639EB08;
  sub_1B1A1B6FC(0, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v5 = a1 + v4[9];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  *(_BYTE *)(a1 + v4[10]) = 0;
  *(_QWORD *)(a1 + v4[11]) = 0;
  v6 = (_QWORD *)(a1 + v4[12]);
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  *(_QWORD *)(a1 + v4[13]) = MEMORY[0x1E0DEE9D8];
}

void sub_1B1CED688(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  char v41;
  const char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  os_signpost_id_t v47;
  os_log_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t *v66;
  char isUniquelyReferenced_nonNull_native;
  void *v68;
  _OWORD *v69;
  id v70;
  id v71;
  os_log_t v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(void);
  unint64_t v92;
  uint64_t v93;
  _BYTE v94[136];
  _OWORD v95[5];
  unsigned __int8 v96;
  uint64_t v97[3];
  unint64_t v98;
  id v99;
  __int128 v100;
  __int128 v101;
  ValueMetadata *v102;
  char v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  unsigned __int8 v110;

  v87 = a8;
  *(_QWORD *)&v88 = a7;
  v90 = a6;
  v91 = a5;
  v89 = a4;
  sub_1B1A1B6FC(0, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v83 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v84 = (uint64_t)&v72 - v18;
  v19 = sub_1B22283BC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v21);
  v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1B2228380();
  v85 = *(_QWORD *)(v24 - 8);
  v86 = v24;
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (char *)&v72 - v30;
  v82 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v92 = a1;
  v32 = *(_QWORD *)(a1 + 80);
  v81 = (uint64_t *)(a1 + 80);
  if (!*(_QWORD *)(v32 + 16) || (v33 = a3, v34 = sub_1B1DC4138(a2, a3), (v35 & 1) == 0))
  {
    v109 = 0;
    v107 = 0u;
    v108 = 0u;
    v105 = 0u;
    v106 = 0u;
    v104 = 0u;
    v110 = -1;
    goto LABEL_7;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v32 + 56) + 96 * v34, (uint64_t)&v104);
  if (v110 == 255)
  {
LABEL_7:
    sub_1B1B1F3E4((uint64_t)&v104, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B1C1A1D0((uint64_t)&v104, (uint64_t)v97);
  sub_1B1B1F3E4((uint64_t)&v104, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v97, (uint64_t)v95);
  if (v96)
  {
    sub_1B1D12448((uint64_t)v95);
    sub_1B1D12448((uint64_t)v97);
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
LABEL_9:
    sub_1B1B63B64();
    v36 = (void *)swift_allocError();
    *v37 = xmmword_1B228CCC0;
    v91();

    return;
  }
  v38 = *(_QWORD *)&v95[0];
  sub_1B1D12448((uint64_t)v97);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
  if (v38 != v89)
    goto LABEL_9;
  v78 = a13;
  v77 = a12;
  v76 = a11;
  v75 = a10;
  v74 = a9;
  v109 = 0;
  v107 = 0u;
  v108 = 0u;
  v105 = 0u;
  v106 = 0u;
  v104 = 0u;
  v110 = -1;
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v39 = sub_1B22283B0();
  sub_1B1B40EC8(v39, (uint64_t)qword_1ED4D0E48);
  v40 = sub_1B2228398();
  sub_1B22283C8();
  v73 = sub_1B2228F98();
  v41 = sub_1B2229094();
  v80 = v33;
  if ((v41 & 1) != 0)
  {
    v72 = v40;
    swift_retain();
    sub_1B22283EC();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v23, v19) == *MEMORY[0x1E0DF2190])
    {
      v42 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      v42 = "";
    }
    *(_QWORD *)&v88 = v42;
    v44 = v86;
    v43 = v78;
    v45 = v85;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v27, v31, v86);
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    v47 = sub_1B2228374();
    v48 = v72;
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v72, (os_signpost_type_t)v73, v47, "buildScript", (const char *)v88, v46, 2u);
    MEMORY[0x1B5E23F88](v46, -1, -1);

    v49 = *(void (**)(char *, uint64_t))(v45 + 8);
    v49(v31, v44);
    v49(v27, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v85 + 8))(v31, v86);
    v43 = v78;
  }
  sub_1B1CE6D40(v95, v92, v74, v75, v76, v77, v43, v97);
  v79 = a2;
  v50 = v97[2];
  v51 = v98;
  v52 = (void *)*((_QWORD *)&v100 + 1);
  v88 = v101;
  v53 = v84;
  sub_1B1D12220(v82, v84, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v54 = v83;
  *(_BYTE *)(v53 + *(int *)(v83 + 40)) = 1;
  v55 = sub_1B1F79964();
  v57 = sub_1B1F79A5C(v50, v51, v55, v56 & 1);
  v58 = *(int *)(v54 + 52);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v53 + v58) = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v98 = v54;
  v59 = sub_1B1A137F4(v97);
  sub_1B1D12220(v53, (uint64_t)v59, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v100 = v88;
  v99 = v52;
  v101 = v95[0];
  v102 = &type metadata for ParticleScriptRuntime;
  sub_1B1D121E4(v53, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B1B1F3E4((uint64_t)&v104, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v103 = 1;
  sub_1B1A18378((uint64_t)v97, (uint64_t)&v104, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v60 = v92;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v92 + 72));
  v61 = *(_QWORD *)(v60 + 80);
  v63 = v79;
  v62 = v80;
  if (*(_QWORD *)(v61 + 16))
  {
    v64 = sub_1B1DC4138(v79, v80);
    if ((v65 & 1) != 0)
    {
      sub_1B1C1A1D0(*(_QWORD *)(v61 + 56) + 96 * v64, (uint64_t)v95);
      sub_1B1B99D74((uint64_t)v95, (uint64_t)v97);
      sub_1B1C1A1D0((uint64_t)v97, (uint64_t)v95);
      if (v96)
      {
        sub_1B1D12448((uint64_t)v95);
LABEL_26:
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
        sub_1B1B63B64();
        v68 = (void *)swift_allocError();
        *v69 = xmmword_1B228CCC0;
        v91();

        sub_1B1D12448((uint64_t)v97);
        sub_1B1B1F3E4((uint64_t)&v104, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (*(_QWORD *)&v95[0] != v89)
        goto LABEL_26;
      sub_1B1D124DC((uint64_t)&v104, (uint64_t)v95, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
      if (v96 == 255)
      {
        sub_1B1B1F3E4((uint64_t)v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
        sub_1B1B83D90(v63, v62, (uint64_t)v94);
        sub_1B1B1F3E4((uint64_t)v94, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
      }
      else
      {
        sub_1B1B99D74((uint64_t)v95, (uint64_t)v94);
        v66 = v81;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v93 = *v66;
        *v66 = 0x8000000000000000;
        sub_1B1B87FA8((uint64_t)v94, v63, v62, isUniquelyReferenced_nonNull_native);
        *v66 = v93;
        swift_bridgeObjectRelease();
      }
      sub_1B1D12448((uint64_t)v97);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v92 + 72));
  sub_1B1D124DC((uint64_t)&v104, (uint64_t)v97, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
  if (v103 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD))v91)(0);
    sub_1B1B1F3E4((uint64_t)&v104, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v101);
LABEL_33:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v97);
    return;
  }
  if (v103 == 2)
  {
    v70 = v99;
    v71 = v99;
    ((void (*)(id))v91)(v70);

    sub_1B1B1F3E4((uint64_t)&v104, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_33;
  }
  sub_1B2229688();
  __break(1u);
}

void sub_1B1CEE2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, const char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t (*a16)(uint64_t), uint64_t a17, void (*a18)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  const char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint8_t *v46;
  os_signpost_id_t v47;
  void (*v48)(_BYTE *, _QWORD *);
  uint64_t v49;
  unint64_t v50;
  unint64_t *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  unint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  id v66;
  id v67;
  void *v68;
  _OWORD *v69;
  _BYTE v70[12];
  int v71;
  void (*v72)(uint64_t *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _BYTE *v81;
  unint64_t *v82;
  uint64_t (*v83)(uint64_t);
  uint64_t v84;
  const char *v85;
  __int128 v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(void);
  uint64_t v93;
  _OWORD v94[5];
  char v95;
  uint64_t v96[3];
  unint64_t v97;
  id v98;
  __int128 v99;
  __int128 v100;
  ValueMetadata *v101;
  char v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  unsigned __int8 v109;

  v88 = a8;
  v89 = a4;
  v85 = a7;
  v91 = a6;
  v92 = a5;
  v90 = a3;
  v82 = a15;
  v83 = a16;
  v84 = a17;
  sub_1B1A1B6FC(0, a15, a16, a17, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v80 = v20;
  MEMORY[0x1E0C80A78](v20, v21);
  v81 = &v70[-v22];
  v23 = sub_1B22283BC();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23, v25);
  v27 = &v70[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = (_QWORD *)sub_1B2228380();
  *(_QWORD *)&v86 = *(v87 - 1);
  MEMORY[0x1E0C80A78](v87, v28);
  v30 = &v70[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v31, v32);
  v34 = &v70[-v33];
  v79 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v93 = a1;
  v35 = *(_QWORD *)(a1 + 80);
  v78 = a1 + 80;
  if (!*(_QWORD *)(v35 + 16) || (v36 = sub_1B1DC4138(a2, v90), (v37 & 1) == 0))
  {
    v108 = 0;
    v106 = 0u;
    v107 = 0u;
    v104 = 0u;
    v105 = 0u;
    v103 = 0u;
    v109 = -1;
    goto LABEL_7;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v35 + 56) + 96 * v36, (uint64_t)&v103);
  if (v109 == 255)
  {
LABEL_7:
    sub_1B1B1F3E4((uint64_t)&v103, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B1C1A1D0((uint64_t)&v103, (uint64_t)v96);
  sub_1B1B1F3E4((uint64_t)&v103, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v96, (uint64_t)v94);
  if (v95)
  {
    sub_1B1D12448((uint64_t)v94);
    sub_1B1D12448((uint64_t)v96);
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 72));
LABEL_9:
    sub_1B1B63B64();
    v38 = (void *)swift_allocError();
    *v39 = xmmword_1B228CCC0;
    v92();

    return;
  }
  v40 = *(_QWORD *)&v94[0];
  sub_1B1D12448((uint64_t)v96);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 72));
  if (v40 != v89)
    goto LABEL_9;
  v77 = a13;
  v76 = a12;
  v75 = a11;
  v74 = a10;
  v73 = a9;
  v108 = 0;
  v106 = 0u;
  v107 = 0u;
  v104 = 0u;
  v105 = 0u;
  v103 = 0u;
  v109 = -1;
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v72 = a18;
  v41 = sub_1B22283B0();
  sub_1B1B40EC8(v41, (uint64_t)qword_1ED4D0E48);
  v42 = sub_1B2228398();
  sub_1B22283C8();
  v71 = sub_1B2228F98();
  if ((sub_1B2229094() & 1) != 0)
  {
    swift_retain();
    sub_1B22283EC();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v24 + 88))(v27, v23) == *MEMORY[0x1E0DF2190])
    {
      v43 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v27, v23);
      v43 = "";
    }
    v85 = v43;
    v44 = v87;
    v45 = v86;
    (*(void (**)(_BYTE *, _BYTE *, _QWORD *))(v86 + 16))(v30, v34, v87);
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    v47 = sub_1B2228374();
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v42, (os_signpost_type_t)v71, v47, "buildScript", v85, v46, 2u);
    MEMORY[0x1B5E23F88](v46, -1, -1);

    v48 = *(void (**)(_BYTE *, _QWORD *))(v45 + 8);
    v48(v34, v44);
    v48(v30, v44);
  }
  else
  {

    (*(void (**)(_BYTE *, _QWORD *))(v86 + 8))(v34, v87);
  }
  v72(v96, v94, v93, v73, v74, v75, v76, v77);
  v49 = v96[2];
  v85 = (const char *)v96[1];
  v50 = v97;
  v87 = (_QWORD *)*((_QWORD *)&v99 + 1);
  v88 = a2;
  v86 = v100;
  v52 = v81;
  v51 = v82;
  v54 = v83;
  v53 = v84;
  sub_1B1D12220(v79, (uint64_t)v81, v82, v83, v84, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v55 = v80;
  v52[*(int *)(v80 + 40)] = 1;
  v56 = sub_1B1F79964();
  v58 = sub_1B1F79A5C(v49, v50, v56, v57 & 1);
  v59 = *(int *)(v55 + 52);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v52[v59] = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v97 = v55;
  v60 = sub_1B1A137F4(v96);
  sub_1B1D12220((uint64_t)v52, (uint64_t)v60, v51, v54, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v99 = v86;
  v61 = v88;
  v98 = v87;
  v100 = v94[0];
  v101 = &type metadata for ParticleScriptRuntime;
  sub_1B1D121E4((uint64_t)v52, v51, v54, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B1B1F3E4((uint64_t)&v103, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v102 = 1;
  sub_1B1A18378((uint64_t)v96, (uint64_t)&v103, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v62 = v93;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v93 + 72));
  v63 = *(_QWORD *)(v62 + 80);
  if (*(_QWORD *)(v63 + 16))
  {
    v64 = sub_1B1DC4138(v61, v90);
    if ((v65 & 1) != 0)
    {
      sub_1B1C1A1D0(*(_QWORD *)(v63 + 56) + 96 * v64, (uint64_t)v94);
      sub_1B1B99D74((uint64_t)v94, (uint64_t)v96);
      sub_1B1C1A1D0((uint64_t)v96, (uint64_t)v94);
      if (v95)
      {
        sub_1B1D12448((uint64_t)v94);
LABEL_30:
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 72));
        sub_1B1B63B64();
        v68 = (void *)swift_allocError();
        *v69 = xmmword_1B228CCC0;
        v92();

        sub_1B1D12448((uint64_t)v96);
        sub_1B1B1F3E4((uint64_t)&v103, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (*(_QWORD *)&v94[0] != v89)
        goto LABEL_30;
      sub_1B1D124DC((uint64_t)&v103, (uint64_t)v94, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
      sub_1B20E1B28((uint64_t)v94, v61, v90);
      sub_1B1D12448((uint64_t)v96);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v93 + 72));
  sub_1B1D124DC((uint64_t)&v103, (uint64_t)v96, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
  if (v102 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD))v92)(0);
    sub_1B1B1F3E4((uint64_t)&v103, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v100);
LABEL_29:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v96);
    return;
  }
  if (v102 == 2)
  {
    v66 = v98;
    v67 = v98;
    ((void (*)(id))v92)(v66);

    sub_1B1B1F3E4((uint64_t)&v103, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_29;
  }
  sub_1B2229688();
  __break(1u);
}

void sub_1B1CEEE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, const char *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, unint64_t a13)
{
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  void *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  const char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  os_signpost_id_t v44;
  os_log_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  id v61;
  id v62;
  void *v63;
  _OWORD *v64;
  os_log_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  __int128 v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void);
  uint64_t v85;
  _OWORD v86[5];
  char v87;
  uint64_t v88[3];
  unint64_t v89;
  id v90;
  __int128 v91;
  __int128 v92;
  ValueMetadata *v93;
  char v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  unsigned __int8 v101;

  v80 = a8;
  v81 = a4;
  v77 = a7;
  v83 = a6;
  v84 = a5;
  v82 = a3;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v75 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v76 = (uint64_t)&v65 - v17;
  v18 = sub_1B22283BC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1B2228380();
  v78 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)&v79 = v23;
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27, v28);
  v30 = (char *)&v65 - v29;
  v74 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v85 = a1;
  v31 = *(_QWORD *)(a1 + 80);
  v73 = a1 + 80;
  if (!*(_QWORD *)(v31 + 16) || (v32 = sub_1B1DC4138(a2, v82), (v33 & 1) == 0))
  {
    v100 = 0;
    v98 = 0u;
    v99 = 0u;
    v96 = 0u;
    v97 = 0u;
    v95 = 0u;
    v101 = -1;
    goto LABEL_7;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v31 + 56) + 96 * v32, (uint64_t)&v95);
  if (v101 == 255)
  {
LABEL_7:
    sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B1C1A1D0((uint64_t)&v95, (uint64_t)v88);
  sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v88, (uint64_t)v86);
  if (v87)
  {
    sub_1B1D12448((uint64_t)v86);
    sub_1B1D12448((uint64_t)v88);
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
LABEL_9:
    sub_1B1B63B64();
    v34 = (void *)swift_allocError();
    *v35 = xmmword_1B228CCC0;
    v84();

    return;
  }
  v36 = *(_QWORD *)&v86[0];
  sub_1B1D12448((uint64_t)v88);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
  if (v36 != v81)
    goto LABEL_9;
  v71 = a13;
  v70 = a12;
  v69 = a11;
  v68 = a10;
  v67 = a9;
  v100 = 0;
  v98 = 0u;
  v99 = 0u;
  v96 = 0u;
  v97 = 0u;
  v95 = 0u;
  v101 = -1;
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v37 = sub_1B22283B0();
  sub_1B1B40EC8(v37, (uint64_t)qword_1ED4D0E48);
  v38 = sub_1B2228398();
  sub_1B22283C8();
  v66 = sub_1B2228F98();
  if ((sub_1B2229094() & 1) != 0)
  {
    v65 = v38;
    swift_retain();
    sub_1B22283EC();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v22, v18) == *MEMORY[0x1E0DF2190])
    {
      v39 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      v39 = "";
    }
    v77 = v39;
    v40 = v71;
    v42 = v78;
    v41 = v79;
    (*(void (**)(char *, char *, _QWORD))(v78 + 16))(v26, v30, v79);
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    v44 = sub_1B2228374();
    v45 = v65;
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v65, (os_signpost_type_t)v66, v44, "buildScript", v77, v43, 2u);
    MEMORY[0x1B5E23F88](v43, -1, -1);

    v46 = *(void (**)(char *, uint64_t))(v42 + 8);
    v46(v30, v41);
    v46(v26, v41);
  }
  else
  {

    (*(void (**)(char *, _QWORD))(v78 + 8))(v30, v79);
    v40 = v71;
  }
  sub_1B1CE9344((uint64_t *)v86, v85, v67, v68, v69, v70, v40, v88);
  v72 = a2;
  v47 = v88[2];
  v48 = v89;
  v80 = (void *)*((_QWORD *)&v91 + 1);
  v79 = v92;
  v49 = v76;
  sub_1B1D12220(v74, v76, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v75;
  *(_BYTE *)(v49 + *(int *)(v75 + 40)) = 1;
  v51 = sub_1B1F79964();
  v53 = sub_1B1F79A5C(v47, v48, v51, v52 & 1);
  v54 = *(int *)(v50 + 52);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + v54) = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v89 = v50;
  v55 = sub_1B1A137F4(v88);
  sub_1B1D12220(v49, (uint64_t)v55, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v91 = v79;
  v90 = v80;
  v93 = &type metadata for ShaderScriptRuntime;
  v92 = v86[0];
  sub_1B1D121E4(v49, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v94 = 1;
  sub_1B1A18378((uint64_t)v88, (uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v56 = v85;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v85 + 72));
  v57 = *(_QWORD *)(v56 + 80);
  v58 = v72;
  if (*(_QWORD *)(v57 + 16))
  {
    v59 = sub_1B1DC4138(v72, v82);
    if ((v60 & 1) != 0)
    {
      sub_1B1C1A1D0(*(_QWORD *)(v57 + 56) + 96 * v59, (uint64_t)v86);
      sub_1B1B99D74((uint64_t)v86, (uint64_t)v88);
      sub_1B1C1A1D0((uint64_t)v88, (uint64_t)v86);
      if (v87)
      {
        sub_1B1D12448((uint64_t)v86);
LABEL_30:
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
        sub_1B1B63B64();
        v63 = (void *)swift_allocError();
        *v64 = xmmword_1B228CCC0;
        v84();

        sub_1B1D12448((uint64_t)v88);
        sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (*(_QWORD *)&v86[0] != v81)
        goto LABEL_30;
      sub_1B1D124DC((uint64_t)&v95, (uint64_t)v86, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
      sub_1B20E1B28((uint64_t)v86, v58, v82);
      sub_1B1D12448((uint64_t)v88);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
  sub_1B1D124DC((uint64_t)&v95, (uint64_t)v88, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
  if (v94 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD))v84)(0);
    sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v92);
LABEL_29:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v88);
    return;
  }
  if (v94 == 2)
  {
    v61 = v90;
    v62 = v90;
    ((void (*)(id))v84)(v61);

    sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_29;
  }
  sub_1B2229688();
  __break(1u);
}

void sub_1B1CEFA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, const char *a7, void *a8, uint64_t a9, char *a10, uint64_t a11, unint64_t *a12, unint64_t a13)
{
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  void *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  const char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  os_signpost_id_t v44;
  os_log_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  id v61;
  id v62;
  void *v63;
  _OWORD *v64;
  os_log_t v65;
  int v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  __int128 v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void);
  uint64_t v85;
  _QWORD v86[11];
  char v87;
  uint64_t v88[3];
  unint64_t v89;
  id v90;
  __int128 v91;
  __int128 v92;
  ValueMetadata *v93;
  char v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  unsigned __int8 v101;

  v80 = a8;
  v81 = a4;
  v77 = a7;
  v83 = a6;
  v84 = a5;
  v82 = a3;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v75 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v76 = (uint64_t)&v65 - v17;
  v18 = sub_1B22283BC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1B2228380();
  v78 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)&v79 = v23;
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27, v28);
  v30 = (char *)&v65 - v29;
  v74 = swift_projectBox();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v85 = a1;
  v31 = *(_QWORD *)(a1 + 80);
  v73 = a1 + 80;
  if (!*(_QWORD *)(v31 + 16) || (v32 = sub_1B1DC4138(a2, v82), (v33 & 1) == 0))
  {
    v100 = 0;
    v98 = 0u;
    v99 = 0u;
    v96 = 0u;
    v97 = 0u;
    v95 = 0u;
    v101 = -1;
    goto LABEL_7;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v31 + 56) + 96 * v32, (uint64_t)&v95);
  if (v101 == 255)
  {
LABEL_7:
    sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_8;
  }
  sub_1B1C1A1D0((uint64_t)&v95, (uint64_t)v88);
  sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v88, (uint64_t)v86);
  if (v87)
  {
    sub_1B1D12448((uint64_t)v86);
    sub_1B1D12448((uint64_t)v88);
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
LABEL_9:
    sub_1B1B63B64();
    v34 = (void *)swift_allocError();
    *v35 = xmmword_1B228CCC0;
    v84();

    return;
  }
  v36 = v86[0];
  sub_1B1D12448((uint64_t)v88);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
  if (v36 != v81)
    goto LABEL_9;
  v71 = a13;
  v70 = a12;
  v69 = a11;
  v68 = a10;
  v67 = a9;
  v100 = 0;
  v98 = 0u;
  v99 = 0u;
  v96 = 0u;
  v97 = 0u;
  v95 = 0u;
  v101 = -1;
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v37 = sub_1B22283B0();
  sub_1B1B40EC8(v37, (uint64_t)qword_1ED4D0E48);
  v38 = sub_1B2228398();
  sub_1B22283C8();
  v66 = sub_1B2228F98();
  if ((sub_1B2229094() & 1) != 0)
  {
    v65 = v38;
    swift_retain();
    sub_1B22283EC();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v22, v18) == *MEMORY[0x1E0DF2190])
    {
      v39 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      v39 = "";
    }
    v77 = v39;
    v40 = v71;
    v42 = v78;
    v41 = v79;
    (*(void (**)(char *, char *, _QWORD))(v78 + 16))(v26, v30, v79);
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    v44 = sub_1B2228374();
    v45 = v65;
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v65, (os_signpost_type_t)v66, v44, "buildScript", v77, v43, 2u);
    MEMORY[0x1B5E23F88](v43, -1, -1);

    v46 = *(void (**)(char *, uint64_t))(v42 + 8);
    v46(v30, v41);
    v46(v26, v41);
  }
  else
  {

    (*(void (**)(char *, _QWORD))(v78 + 8))(v30, v79);
    v40 = v71;
  }
  sub_1B1CEA014(v85, v67, v68, v69, v70, v40, v88);
  v72 = a2;
  v47 = v88[2];
  v48 = v89;
  v80 = (void *)*((_QWORD *)&v91 + 1);
  v79 = v92;
  v49 = v76;
  sub_1B1D12220(v74, v76, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v50 = v75;
  *(_BYTE *)(v49 + *(int *)(v75 + 40)) = 1;
  v51 = sub_1B1F79964();
  v53 = sub_1B1F79A5C(v47, v48, v51, v52 & 1);
  v54 = *(int *)(v50 + 52);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v49 + v54) = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v89 = v50;
  v55 = sub_1B1A137F4(v88);
  sub_1B1D12220(v49, (uint64_t)v55, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v91 = v79;
  v90 = v80;
  v93 = &type metadata for CodableVoid;
  sub_1B1D121E4(v49, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v94 = 1;
  sub_1B1A18378((uint64_t)v88, (uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  v56 = v85;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v85 + 72));
  v57 = *(_QWORD *)(v56 + 80);
  v58 = v72;
  if (*(_QWORD *)(v57 + 16))
  {
    v59 = sub_1B1DC4138(v72, v82);
    if ((v60 & 1) != 0)
    {
      sub_1B1C1A1D0(*(_QWORD *)(v57 + 56) + 96 * v59, (uint64_t)v86);
      sub_1B1B99D74((uint64_t)v86, (uint64_t)v88);
      sub_1B1C1A1D0((uint64_t)v88, (uint64_t)v86);
      if (v87)
      {
        sub_1B1D12448((uint64_t)v86);
LABEL_30:
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
        sub_1B1B63B64();
        v63 = (void *)swift_allocError();
        *v64 = xmmword_1B228CCC0;
        v84();

        sub_1B1D12448((uint64_t)v88);
        sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
        return;
      }
      if (v86[0] != v81)
        goto LABEL_30;
      sub_1B1D124DC((uint64_t)&v95, (uint64_t)v86, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
      sub_1B20E1B28((uint64_t)v86, v58, v82);
      sub_1B1D12448((uint64_t)v88);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 72));
  sub_1B1D124DC((uint64_t)&v95, (uint64_t)v88, (uint64_t)&qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1A02758);
  if (v94 == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD))v84)(0);
    sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v92);
LABEL_29:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v88);
    return;
  }
  if (v94 == 2)
  {
    v61 = v90;
    v62 = v90;
    ((void (*)(id))v84)(v61);

    sub_1B1B1F3E4((uint64_t)&v95, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
    goto LABEL_29;
  }
  sub_1B2229688();
  __break(1u);
}

uint64_t sub_1B1CF0608(void *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  id v20;
  unint64_t v21;
  uint64_t *v22;
  char v23;
  char v24;
  id v25;
  unint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t result;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v5 = v4;
  sub_1B1A1B6FC(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v8 = v7;
  *(_BYTE *)(v5 + *(int *)(v7 + 40)) = 1;
  v9 = *(int *)(v7 + 44);
  v10 = *(void **)(v5 + v9);
  v11 = a1;

  *(_QWORD *)(v5 + v9) = a1;
  v12 = a1;
  sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
  if (!swift_dynamicCast())
  {
LABEL_6:
    v20 = a1;
    if (swift_dynamicCast())
    {
      if (v35 == 2)
      {
        swift_getErrorValue();
        v13 = sub_1B2229FE8();
        v14 = v21;
        v22 = (uint64_t *)(v5 + *(int *)(v8 + 48));
        swift_bridgeObjectRelease();
        *v22 = v13;
        v22[1] = v14;
        if (v33)
        {
          v16 = sub_1B1F79964();
          v24 = v23;
          swift_bridgeObjectRelease();
          v19 = v24 & 1;

          goto LABEL_19;
        }

        goto LABEL_17;
      }
      sub_1B1D12474(v31, v32, v33, v34, v35);
    }
    v25 = a1;
    if (swift_dynamicCast())
    {
      v13 = (uint64_t)v31;
      v14 = v32;
      if (v35 == 3)
      {
LABEL_15:
        v27 = (uint64_t *)(v5 + *(int *)(v8 + 48));
        swift_bridgeObjectRelease();
        v16 = 0;
        *v27 = v13;
        v27[1] = v14;
LABEL_18:
        v19 = 1;
        goto LABEL_19;
      }
      sub_1B1D12474(v31, v32, v33, v34, v35);
    }
    swift_getErrorValue();
    v13 = sub_1B2229FE8();
    v14 = v26;
    goto LABEL_15;
  }
  v13 = (uint64_t)v31;
  v14 = v32;
  if (v35 != 1)
  {
    sub_1B1D12474(v31, v32, v33, v34, v35);
    goto LABEL_6;
  }
  v15 = (_QWORD *)(v5 + *(int *)(v8 + 48));
  swift_bridgeObjectRelease();
  *v15 = v31;
  v15[1] = v32;
  if (!v34)
  {
LABEL_17:
    v16 = 0;
    goto LABEL_18;
  }
  v16 = sub_1B1F79964();
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = v18 & 1;
LABEL_19:
  v28 = sub_1B1F79A5C(v13, v14, v16, v19);
  v29 = *(int *)(v8 + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + v29) = v28;
  return result;
}

void sub_1B1CF08BC(void *a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  os_unfair_lock_s *v7;
  id v8;
  void *v9;
  id v10;

  if (*(_QWORD *)(a2 + 16))
    v3 = 1;
  else
    v3 = a1 == 0;
  if (!v3)
  {
    v7 = *(os_unfair_lock_s **)(a3 + 72);
    v8 = a1;
    os_unfair_lock_lock(v7);
    v9 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = a1;
    v10 = a1;

    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3 + 72));
  }
}

uint64_t *sub_1B1CF093C(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t *__return_ptr, uint64_t), unint64_t *a12, uint64_t (*a13)(uint64_t), uint64_t a14, unint64_t *a15, void (*a16)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), void (*a17)(uint64_t *), void (*a18)(uint64_t *), uint64_t a19, void (*a20)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),void (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  os_unfair_lock_s *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  os_unfair_lock_s *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t *);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  os_unfair_lock_s *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *result;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v147;
  uint64_t v149;
  int v150;
  uint64_t v153;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v161;
  uint64_t v162;
  int v163;
  char v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168[8];
  uint64_t v169[8];
  uint64_t v170;
  int v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  uint64_t v176[8];
  uint64_t v177[8];
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  __int128 v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  uint64_t v199;
  _QWORD v200[12];
  _QWORD v201[12];
  _OWORD v202[2];
  uint64_t v203;
  _OWORD v204[2];
  uint64_t v205;
  _BYTE v206[40];
  _QWORD v207[5];
  _QWORD v208[5];
  uint64_t v209;
  int v210;
  char v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  _BYTE v215[40];
  uint64_t v216;
  int v217;
  char v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  char v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  int v229;
  char v230;
  uint64_t v231;
  char v232;
  uint64_t v233;

  v22 = v21;
  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v228 = qword_1ED4D09F8;
  v229 = 0;
  v230 = 2;
  v231 = 0;
  v232 = 2;
  v233 = 0;
  swift_retain();
  a11(&v162, 1);
  swift_release();
  v222 = v162;
  v223 = v163;
  v224 = v164;
  v225 = v165 | 1;
  v226 = v166;
  v227 = v167;
  if ((a10 & 0x100000000) != 0)
    v23 = 0x200000000;
  else
    v23 = a10;
  v24 = swift_retain();
  sub_1B1E8FCE4(v24, (uint64_t)&v222, v23, v168);
  sub_1B1A18378((uint64_t)v168, (uint64_t)v201, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (v201[0])
  {
    v25 = v23;
    v26 = v21;
    v27 = v201[5];
    v28 = v201[7];
    v29 = v201[10];
    swift_release();
    if (v29 >= 1 && v28)
    {
      sub_1B1A1B6FC(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      v31 = v30;
      swift_retain();
      swift_retain();
      swift_retain();
      v32 = 48 * v28;
      v33 = (uint64_t *)(v27 + 40);
      do
      {
        v38 = *v33;
        v39 = *(os_unfair_lock_s **)(*v33 + 376);
        swift_retain();
        os_unfair_lock_lock(v39);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v38 + 344));
        v40 = *(_DWORD *)(v38 + 24);
        swift_retain();
        memset(v200, 0, 40);
        v191 = 0;
        v189 = 0u;
        v190 = 0u;
        v41 = sub_1B1DA4ED8(v40, v31, (uint64_t)&off_1E637D0A8, 0, 0, (uint64_t)v200, (uint64_t)&v189);
        swift_release();
        sub_1B1A12E98((uint64_t)&v189);
        sub_1B1A12E98((uint64_t)v200);
        if (sub_1B1A10B20(v41))
        {
          sub_1B1A10BB0(v41);
        }
        else
        {
          v34 = *(_QWORD *)(v38 + 232);
          v35 = *(_QWORD *)(v38 + 240);
          v36 = *(unsigned __int8 *)(v38 + 120);
          v37 = *(unsigned int *)(v38 + 28);
          LOBYTE(v200[0]) = *(_BYTE *)(v38 + 32);
          sub_1B1FD8C68(v34, v35, v41, v36, v37 | ((unint64_t)LOBYTE(v200[0]) << 32), 0, 0, 0);
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 376));
        swift_release();
        v33 += 6;
        v32 -= 48;
      }
      while (v32);
      sub_1B19ED748(v168);
    }
    sub_1B19ED748(v168);
    v22 = v26;
    v23 = v25;
  }
  else
  {
    swift_release();
  }
  v42 = swift_retain();
  sub_1B1E8FCE4(v42, (uint64_t)&v222, v23, v169);
  sub_1B1A18378((uint64_t)v169, (uint64_t)v200, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (v200[0])
  {
    v43 = v23;
    v44 = v22;
    v45 = v200[5];
    v46 = v200[7];
    v47 = v200[10];
    swift_release();
    if (v47 >= 1 && v46)
    {
      sub_1B1A1B6FC(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v49 = v48;
      swift_retain();
      swift_retain();
      swift_retain();
      v50 = 48 * v46;
      v51 = (uint64_t *)(v45 + 40);
      do
      {
        v56 = *v51;
        v57 = *(os_unfair_lock_s **)(*v51 + 376);
        swift_retain();
        os_unfair_lock_lock(v57);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v56 + 344));
        v58 = *(_DWORD *)(v56 + 24);
        swift_retain();
        v191 = 0;
        v189 = 0u;
        v190 = 0u;
        v180 = 0;
        v178 = 0u;
        v179 = 0u;
        v59 = sub_1B1DA4ED8(v58, v49, (uint64_t)&off_1E639EB98, 0, 0, (uint64_t)&v189, (uint64_t)&v178);
        swift_release();
        sub_1B1A12E98((uint64_t)&v178);
        sub_1B1A12E98((uint64_t)&v189);
        if (sub_1B1A10B20(v59))
        {
          sub_1B1A10BB0(v59);
        }
        else
        {
          v52 = *(_QWORD *)(v56 + 232);
          v53 = *(_QWORD *)(v56 + 240);
          v54 = *(unsigned __int8 *)(v56 + 120);
          v55 = *(unsigned int *)(v56 + 28);
          LOBYTE(v189) = *(_BYTE *)(v56 + 32);
          sub_1B1FD8C68(v52, v53, v59, v54, v55 | ((unint64_t)v189 << 32), 0, 0, 0);
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v56 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v56 + 376));
        swift_release();
        v51 += 6;
        v50 -= 48;
      }
      while (v50);
      sub_1B19ED748(v169);
    }
    sub_1B19ED748(v169);
    v22 = v44;
    v23 = v43;
  }
  else
  {
    swift_release();
  }
  v159 = sub_1B1B59758(0, a1, a2);
  v161 = v60;
  if (v60)
  {
    v216 = qword_1ED4D09F8;
    v217 = 0;
    v218 = 2;
    v219 = 0;
    v220 = 2;
    v221 = 0;
    swift_retain();
    a16(&v170, 1, 2, 2);
    swift_release();
    v209 = v170;
    v210 = v171;
    v211 = v172;
    v212 = v173 | 1;
    v213 = v174;
    v214 = v175;
    v61 = swift_retain();
    sub_1B1E8FCE4(v61, (uint64_t)&v209, v23, v176);
    sub_1B1A18378((uint64_t)v176, (uint64_t)&v189, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if ((_QWORD)v189)
    {
      v197 = v189;
      v198 = v190;
      v199 = v191;
      v62 = v193;
      v63 = v194;
      v129 = v192;
      v130 = v195;
      v64 = v196;
      swift_release();
      if (v64 >= 1 && v62)
      {
        v126 = v23;
        v149 = v22;
        v65 = v130;
        v66 = v130[4];
        v141 = *(unsigned __int8 *)(v63 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v136 = a13(0);
        sub_1B1A1B6FC(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        v134 = v67;
        sub_1B1A1B6FC(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        v132 = v68;
        swift_retain();
        swift_retain();
        swift_retain();
        v69 = 0;
        v127 = v62;
        v128 = v66;
        do
        {
          v139 = v69;
          v70 = (unsigned int *)(v129 + 48 * v69);
          v71 = *v70;
          v131 = v70[1];
          v72 = (uint64_t *)*((_QWORD *)v70 + 2);
          v137 = *((_QWORD *)v70 + 3);
          v73 = *((_QWORD *)v70 + 4);
          v74 = *((_QWORD *)v70 + 5);
          if (v141)
          {
            v75 = *(os_unfair_lock_s **)(v74 + 376);
            swift_retain();
            os_unfair_lock_lock(v75);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v74 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v66);
          sub_1B1A18378((uint64_t)(v130 + 6), (uint64_t)v215, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v76 = v65[4];
          v77 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v74 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v65[6] = ecs_stack_allocator_allocate(v76, 48 * v77, 8);
          v65[7] = v77;
          v130[9] = 0;
          v130[10] = 0;
          v130[8] = 0;
          swift_release();
          v78 = sub_1B1A12038(v136, a19, v72, v137, v73, (uint64_t)v65);
          v79 = sub_1B1A12038(v134, (uint64_t)&off_1E637D0A8, v72, v137, v73, (uint64_t)v65);
          v80 = sub_1B1A12038(v132, (uint64_t)&off_1E639EB98, v72, v137, v73, (uint64_t)v65);
          v81 = v80;
          if (v72)
          {
            if (v73)
            {
              v82 = *(_QWORD *)(*(_QWORD *)(v136 - 8) + 72);
              v83 = *(_QWORD *)(*(_QWORD *)(v134 - 8) + 72);
              v84 = *(_QWORD *)(*(_QWORD *)(v132 - 8) + 72);
              do
              {
                v85 = *v72++;
                a21(v74, v85, v78, v79, v81, a8, a3, a4 & 1, v159, v161, a7, a5, a6, v149, a9);
                v81 += v84;
                v79 += v83;
                v78 += v82;
                --v73;
              }
              while (v73);
            }
          }
          else if ((_DWORD)v71 != (_DWORD)v131)
          {
            v86 = *(_QWORD *)(*(_QWORD *)(v136 - 8) + 72);
            v87 = *(_QWORD *)(*(_QWORD *)(v134 - 8) + 72);
            v88 = *(_QWORD *)(*(_QWORD *)(v132 - 8) + 72);
            v89 = v80 + v88 * v71;
            v90 = v79 + v87 * v71;
            v91 = v78 + v86 * v71;
            do
            {
              a21(v74, v71++, v91, v90, v89, a8, a3, a4 & 1, v159, v161, a7, a5, a6, v149, a9);
              v89 += v88;
              v90 += v87;
              v91 += v86;
            }
            while (v131 != v71);
          }
          v202[0] = v197;
          v202[1] = v198;
          v203 = v199;
          v65 = v130;
          sub_1B1F05D48(v130, (unsigned __int16 **)v202, (uint64_t)v215);
          sub_1B1F03804((char *)v74);
          v66 = v128;
          ecs_stack_allocator_pop_snapshot(v128);
          if ((v141 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 376));
          }
          swift_release();
          v69 = v139 + 1;
        }
        while (v139 + 1 != v127);
        sub_1B19ED748(v176);
        sub_1B19ED748(v176);
        v23 = v126;
      }
      else
      {
        sub_1B19ED748(v176);
      }
    }
    else
    {
      swift_release();
    }
    v92 = a17;
    swift_retain();
    v93 = swift_retain();
    sub_1B1E8FCE4(v93, (uint64_t)&v209, v23, v177);
    sub_1B1A18378((uint64_t)v177, (uint64_t)&v178, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if ((_QWORD)v178)
    {
      v186 = v178;
      v187 = v179;
      v138 = v181;
      v188 = v180;
      v94 = v182;
      v153 = v183;
      v158 = v184;
      v95 = v185;
      swift_release();
      if (v95 > 0 && v94)
      {
        v96 = v158[4];
        v150 = *(unsigned __int8 *)(v153 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v145 = a13(0);
        sub_1B1A1B6FC(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        v143 = v97;
        sub_1B1A1B6FC(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        v142 = v98;
        swift_retain();
        swift_retain();
        swift_retain();
        v99 = 0;
        v133 = v94;
        v135 = v96;
        do
        {
          v147 = v99;
          v100 = (unsigned int *)(v138 + 48 * v99);
          v101 = *v100;
          v140 = v100[1];
          v102 = v100[2];
          v103 = (uint64_t *)*((_QWORD *)v100 + 2);
          v155 = *((_QWORD *)v100 + 3);
          v105 = *((_QWORD *)v100 + 4);
          v104 = *((_QWORD *)v100 + 5);
          if (v150)
          {
            v106 = *(os_unfair_lock_s **)(v104 + 376);
            swift_retain();
            os_unfair_lock_lock(v106);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v104 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v96);
          sub_1B1A18378((uint64_t)(v158 + 6), (uint64_t)v206, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v107 = v158[4];
          v108 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v104 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v158[6] = ecs_stack_allocator_allocate(v107, 48 * v108, 8);
          v158[7] = v108;
          v158[9] = 0;
          v158[10] = 0;
          v158[8] = 0;
          swift_release();
          v109 = v155;
          v110 = v104;
          v111 = sub_1B1A12038(v145, a19, v103, v155, v105, (uint64_t)v158);
          v112 = sub_1B1A12038(v143, (uint64_t)&off_1E637D0A8, v103, v155, v105, (uint64_t)v158);
          v156 = v110;
          v113 = sub_1B1A12038(v142, (uint64_t)&off_1E639EB98, v103, v109, v105, (uint64_t)v158);
          v114 = v113;
          if (v103)
          {
            if (v105)
            {
              v115 = *(_QWORD *)(*(_QWORD *)(v145 - 8) + 72);
              v116 = *(_QWORD *)(*(_QWORD *)(v143 - 8) + 72);
              v117 = *(_QWORD *)(*(_QWORD *)(v142 - 8) + 72);
              do
              {
                v118 = *v103++;
                v207[0] = v153;
                v207[1] = v156;
                v207[2] = v158;
                v207[3] = v102;
                v207[4] = v118;
                a20(v207, v111, v112, v114, a8, v159, v161);
                ++v102;
                v114 += v117;
                v112 += v116;
                v111 += v115;
                --v105;
              }
              while (v105);
            }
          }
          else if ((_DWORD)v101 != (_DWORD)v140)
          {
            v119 = *(_QWORD *)(*(_QWORD *)(v145 - 8) + 72);
            v120 = *(_QWORD *)(*(_QWORD *)(v143 - 8) + 72);
            v121 = *(_QWORD *)(*(_QWORD *)(v142 - 8) + 72);
            v122 = v113 + v121 * v101;
            v123 = v112 + v120 * v101;
            v124 = v111 + v119 * v101;
            do
            {
              v208[0] = v153;
              v208[1] = v156;
              v208[2] = v158;
              v208[3] = v102;
              v208[4] = v101;
              a20(v208, v124, v123, v122, a8, v159, v161);
              ++v101;
              ++v102;
              v122 += v121;
              v123 += v120;
              v124 += v119;
            }
            while (v140 != v101);
          }
          v204[0] = v186;
          v204[1] = v187;
          v205 = v188;
          sub_1B1F05D48(v158, (unsigned __int16 **)v204, (uint64_t)v206);
          sub_1B1F03804((char *)v156);
          v96 = v135;
          ecs_stack_allocator_pop_snapshot(v135);
          if ((v150 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v156 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v156 + 376));
          }
          swift_release();
          v99 = v147 + 1;
          v92 = a17;
        }
        while (v147 + 1 != v133);
      }
      else
      {
        swift_retain();
        swift_retain();
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v92(&v170);
      v92(&v170);
      a18(&v162);
      sub_1B19ED748(v177);
      return sub_1B19ED748(v177);
    }
    else
    {
      swift_release();
      a17(&v170);
      a17(&v170);
      a18(&v162);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(_QWORD *)&v189 = 0;
    *((_QWORD *)&v189 + 1) = 0xE000000000000000;
    sub_1B2229430();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v189 = 0xD000000000000011;
    *((_QWORD *)&v189 + 1) = 0x80000001B23389D0;
    sub_1B2228890();
    sub_1B2228890();
    result = (uint64_t *)sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t *sub_1B1CF19BC(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t *__return_ptr, uint64_t), unint64_t *a12, uint64_t (*a13)(uint64_t), uint64_t a14, unint64_t *a15, void (*a16)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), void (*a17)(uint64_t *__return_ptr, uint64_t), void (*a18)(__int128 *, uint64_t), void (*a19)(uint64_t *), void (*a20)(uint64_t *),void (*a21)(uint64_t *),uint64_t a22,void (*a23)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t),void (*a24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  os_unfair_lock_s *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  os_unfair_lock_s *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  os_unfair_lock_s *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t *);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  os_unfair_lock_s *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *result;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  __int128 v161;
  uint64_t v162;
  __int128 v163;
  int v164;
  uint64_t v166;
  uint64_t v168;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  unsigned int v175;
  uint64_t v176;
  uint64_t v179;
  uint64_t v180;
  int v181;
  char v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186[8];
  uint64_t v187[8];
  uint64_t v188;
  int v189;
  char v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194[8];
  uint64_t v195;
  int v196;
  char v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201[12];
  uint64_t v202[8];
  _OWORD v203[2];
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  __int128 v210;
  __int128 v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  char v215;
  uint64_t v216;
  char v217;
  __int128 v218;
  uint64_t v219;
  uint64_t v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  __int128 v224;
  __int128 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  __int128 v232;
  __int128 v233;
  uint64_t v234;
  _OWORD v235[2];
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD v241[12];
  _OWORD v242[2];
  uint64_t v243;
  _OWORD v244[2];
  uint64_t v245;
  _BYTE v246[40];
  _QWORD v247[5];
  _QWORD v248[5];
  uint64_t v249;
  int v250;
  char v251;
  uint64_t v252;
  char v253;
  uint64_t v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  uint64_t v258;
  uint64_t v259;
  __int128 v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  int v264;
  char v265;
  uint64_t v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  char v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  _BYTE v275[40];
  uint64_t v276;
  int v277;
  char v278;
  uint64_t v279;
  char v280;
  uint64_t v281;
  uint64_t v282;
  int v283;
  char v284;
  uint64_t v285;
  char v286;
  uint64_t v287;
  uint64_t v288;
  int v289;
  char v290;
  uint64_t v291;
  char v292;
  uint64_t v293;

  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v288 = qword_1ED4D09F8;
  v289 = 0;
  v290 = 2;
  v291 = 0;
  v292 = 2;
  v293 = 0;
  swift_retain();
  a11(&v180, 1);
  swift_release();
  v282 = v180;
  v283 = v181;
  v284 = v182;
  v285 = v183 | 1;
  v286 = v184;
  v287 = v185;
  if ((a10 & 0x100000000) != 0)
    v27 = 0x200000000;
  else
    v27 = a10;
  v28 = swift_retain();
  sub_1B1E8FCE4(v28, (uint64_t)&v282, v27, v186);
  sub_1B1A18378((uint64_t)v186, (uint64_t)v241, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  v172 = v24;
  v141 = v27;
  if (v241[0])
  {
    v29 = v241[5];
    v30 = v241[7];
    v31 = v241[9];
    v32 = v241[10];
    swift_release();
    if (v32 >= 1 && v30)
    {
      sub_1B1A1B6FC(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      v34 = v33;
      swift_retain();
      swift_retain();
      swift_retain();
      v35 = 48 * v30;
      v36 = (uint64_t *)(v29 + 40);
      do
      {
        v41 = *v36;
        v42 = *(os_unfair_lock_s **)(*v36 + 376);
        swift_retain();
        os_unfair_lock_lock(v42);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v41 + 344));
        v43 = *(_DWORD *)(v41 + 24);
        swift_retain();
        *(_QWORD *)&v257 = 0;
        v256 = 0u;
        v255 = 0u;
        v236 = 0;
        memset(v235, 0, sizeof(v235));
        v44 = sub_1B1DA4ED8(v43, v34, (uint64_t)&off_1E637D0A8, 0, 0, (uint64_t)&v255, (uint64_t)v235);
        swift_release();
        sub_1B1A12E98((uint64_t)v235);
        sub_1B1A12E98((uint64_t)&v255);
        if (sub_1B1A10B20(v44))
        {
          sub_1B1A10BB0(v44);
        }
        else
        {
          v37 = *(_QWORD *)(v41 + 232);
          v38 = *(_QWORD *)(v41 + 240);
          v39 = *(unsigned __int8 *)(v41 + 120);
          v40 = *(unsigned int *)(v41 + 28);
          LOBYTE(v255) = *(_BYTE *)(v41 + 32);
          v140 = v31;
          sub_1B1FD8C68(v37, v38, v44, v39, v40 | ((unint64_t)v255 << 32), 0, 0, 0);
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v41 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v41 + 376));
        swift_release();
        v36 += 6;
        v35 -= 48;
      }
      while (v35);
      sub_1B19ED748(v186);
    }
    sub_1B19ED748(v186);
    v27 = v141;
  }
  else
  {
    swift_release();
  }
  v45 = swift_retain();
  sub_1B1E8FCE4(v45, (uint64_t)&v282, v27, v187);
  sub_1B1A18378((uint64_t)v187, (uint64_t)v235, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (*(_QWORD *)&v235[0])
  {
    v46 = v237;
    v47 = v238;
    v48 = v239;
    v49 = v240;
    swift_release();
    if (v49 >= 1 && v47)
    {
      sub_1B1A1B6FC(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v51 = v50;
      swift_retain();
      swift_retain();
      swift_retain();
      v52 = 48 * v47;
      v53 = (uint64_t *)(v46 + 40);
      do
      {
        v58 = *v53;
        v59 = *(os_unfair_lock_s **)(*v53 + 376);
        swift_retain();
        os_unfair_lock_lock(v59);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v58 + 344));
        v60 = *(_DWORD *)(v58 + 24);
        swift_retain();
        *(_QWORD *)&v257 = 0;
        v256 = 0u;
        v255 = 0u;
        v226 = 0;
        v225 = 0u;
        v224 = 0u;
        v61 = sub_1B1DA4ED8(v60, v51, (uint64_t)&off_1E639EB98, 0, 0, (uint64_t)&v255, (uint64_t)&v224);
        swift_release();
        sub_1B1A12E98((uint64_t)&v224);
        sub_1B1A12E98((uint64_t)&v255);
        if (sub_1B1A10B20(v61))
        {
          sub_1B1A10BB0(v61);
        }
        else
        {
          v54 = *(_QWORD *)(v58 + 232);
          v55 = *(_QWORD *)(v58 + 240);
          v56 = *(unsigned __int8 *)(v58 + 120);
          v57 = *(unsigned int *)(v58 + 28);
          LOBYTE(v255) = *(_BYTE *)(v58 + 32);
          v140 = v48;
          sub_1B1FD8C68(v54, v55, v61, v56, v57 | ((unint64_t)v255 << 32), 0, 0, 0);
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v58 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v58 + 376));
        swift_release();
        v53 += 6;
        v52 -= 48;
      }
      while (v52);
      sub_1B19ED748(v187);
    }
    sub_1B19ED748(v187);
    v27 = v141;
  }
  else
  {
    swift_release();
  }
  v176 = sub_1B1B59758(0, a1, a2);
  v179 = v62;
  if (v62)
  {
    v175 = a4 & 1;
    v276 = qword_1ED4D09F8;
    v277 = 0;
    v278 = 2;
    v279 = 0;
    v280 = 2;
    v281 = 0;
    swift_retain();
    a16(&v188, 1, 2, 2);
    swift_release();
    v249 = v188;
    v250 = v189;
    v251 = v190;
    v252 = v191 | 1;
    v253 = v192;
    v254 = v193;
    v63 = swift_retain();
    sub_1B1E8FCE4(v63, (uint64_t)&v249, v27, v194);
    sub_1B1A18378((uint64_t)v194, (uint64_t)&v224, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if ((_QWORD)v224)
    {
      v232 = v224;
      v233 = v225;
      v148 = v227;
      v234 = v226;
      v64 = v228;
      v65 = v229;
      v66 = v230;
      v67 = v231;
      swift_release();
      if (v67 >= 1 && v64)
      {
        v68 = v66[4];
        v159 = *(unsigned __int8 *)(v65 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v143 = (uint64_t)(v66 + 6);
        v155 = a13(0);
        sub_1B1A1B6FC(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        v153 = v69;
        sub_1B1A1B6FC(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        v151 = v70;
        v142 = v66 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        v71 = 0;
        v145 = v68;
        v146 = v66;
        v144 = v64;
        do
        {
          v157 = v71;
          v72 = (unsigned int *)(v148 + 48 * v71);
          v73 = *v72;
          v74 = (uint64_t *)*((_QWORD *)v72 + 2);
          v75 = *((_QWORD *)v72 + 3);
          v77 = *((_QWORD *)v72 + 4);
          v76 = *((_QWORD *)v72 + 5);
          v150 = v72[1];
          if (v159)
          {
            v78 = *(os_unfair_lock_s **)(v76 + 376);
            swift_retain();
            os_unfair_lock_lock(v78);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v76 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v68);
          sub_1B1A18378(v143, (uint64_t)v275, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v79 = v66[4];
          v80 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v76 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v66[6] = ecs_stack_allocator_allocate(v79, 48 * v80, 8);
          v66[7] = v80;
          v142[1] = 0;
          v142[2] = 0;
          *v142 = 0;
          swift_release();
          v81 = sub_1B1A12038(v155, a22, v74, v75, v77, (uint64_t)v66);
          v82 = sub_1B1A12038(v153, (uint64_t)&off_1E637D0A8, v74, v75, v77, (uint64_t)v66);
          v83 = v75;
          v84 = v82;
          v85 = sub_1B1A12038(v151, (uint64_t)&off_1E639EB98, v74, v83, v77, (uint64_t)v66);
          v86 = v85;
          if (v74)
          {
            if (v77)
            {
              v87 = *(_QWORD *)(*(_QWORD *)(v155 - 8) + 72);
              v88 = *(_QWORD *)(*(_QWORD *)(v153 - 8) + 72);
              v89 = *(_QWORD *)(*(_QWORD *)(v151 - 8) + 72);
              do
              {
                v90 = *v74++;
                a24(v76, v90, v81, v84, v86, a8, a3, v175, v176, v179, a7, a5, a6, v172, a9);
                v86 += v89;
                v84 += v88;
                v81 += v87;
                --v77;
              }
              while (v77);
            }
          }
          else if ((_DWORD)v73 != (_DWORD)v150)
          {
            v91 = *(_QWORD *)(*(_QWORD *)(v155 - 8) + 72);
            v92 = *(_QWORD *)(*(_QWORD *)(v153 - 8) + 72);
            v93 = *(_QWORD *)(*(_QWORD *)(v151 - 8) + 72);
            v94 = v85 + v93 * v73;
            v95 = v84 + v92 * v73;
            v96 = v81 + v91 * v73;
            do
            {
              a24(v76, v73++, v96, v95, v94, a8, a3, v175, v176, v179, a7, a5, a6, v172, a9);
              v94 += v93;
              v95 += v92;
              v96 += v91;
            }
            while (v150 != v73);
          }
          v242[0] = v232;
          v242[1] = v233;
          v243 = v234;
          v66 = v146;
          sub_1B1F05D48(v146, (unsigned __int16 **)v242, (uint64_t)v275);
          sub_1B1F03804((char *)v76);
          v68 = v145;
          ecs_stack_allocator_pop_snapshot(v145);
          if ((v159 & 1) != 0)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v76 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v76 + 376));
          }
          swift_release();
          v71 = v157 + 1;
        }
        while (v157 + 1 != v144);
        sub_1B19ED748(v194);
        sub_1B19ED748(v194);
        v27 = v141;
      }
      else
      {
        sub_1B19ED748(v194);
      }
    }
    else
    {
      swift_release();
    }
    v269 = qword_1ED4D09F8;
    v270 = 0;
    v271 = 2;
    v272 = 0;
    v273 = 2;
    v274 = 0;
    swift_retain();
    a17(&v195, 1);
    swift_release();
    v263 = v195;
    v264 = v196;
    v265 = v197;
    v266 = v198 | 1;
    v267 = v199;
    v268 = v200;
    v97 = swift_retain();
    sub_1B1E8FCE4(v97, (uint64_t)&v263, v27, v201);
    sub_1B1A18378((uint64_t)v201, (uint64_t)&v213, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    v98 = v213;
    if (v213)
    {
      v99 = v214;
      v100 = v215;
      v101 = v216;
      v102 = v217;
      v103 = v219;
      v104 = v220;
      v105 = v222;
      v166 = v223;
      v161 = v221;
      v163 = v218;
      swift_release();
      *(_QWORD *)&v255 = v98;
      DWORD2(v255) = v99;
      BYTE12(v255) = v100;
      *(_QWORD *)&v256 = v101;
      BYTE8(v256) = v102;
      v27 = v141;
      v257 = v163;
      v258 = v103;
      v259 = v104;
      v260 = v161;
      v261 = v105;
      v262 = v166;
      swift_retain();
      a18(&v255, v172);
      swift_release();
      a19(&v195);
      sub_1B19ED748(v201);
    }
    else
    {
      swift_release();
      a19(&v195);
    }
    v106 = a20;
    swift_retain();
    v107 = swift_retain();
    sub_1B1E8FCE4(v107, (uint64_t)&v249, v27, v202);
    sub_1B1A18378((uint64_t)v202, (uint64_t)v203, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
    if (*(_QWORD *)&v203[0])
    {
      v210 = v203[0];
      v211 = v203[1];
      v152 = v205;
      v212 = v204;
      v108 = v206;
      v168 = v207;
      v173 = v208;
      v109 = v209;
      swift_release();
      if (v109 <= 0)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        a20(&v188);
        a20(&v188);
        a21(&v180);
      }
      else
      {
        if (v108)
        {
          v147 = v108;
          v110 = v173[4];
          v164 = *(unsigned __int8 *)(v168 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v160 = a13(0);
          sub_1B1A1B6FC(0, a12, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          v158 = v111;
          sub_1B1A1B6FC(0, a15, a13, a14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v156 = v112;
          swift_retain();
          swift_retain();
          swift_retain();
          v113 = 0;
          v149 = v110;
          do
          {
            v162 = v113;
            v114 = (unsigned int *)(v152 + 48 * v113);
            v115 = *v114;
            v116 = v114[2];
            v117 = (uint64_t *)*((_QWORD *)v114 + 2);
            v170 = *((_QWORD *)v114 + 3);
            v118 = *((_QWORD *)v114 + 4);
            v119 = *((_QWORD *)v114 + 5);
            v154 = v114[1];
            if (v164)
            {
              v120 = *(os_unfair_lock_s **)(v119 + 376);
              swift_retain();
              os_unfair_lock_lock(v120);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v119 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v110);
            sub_1B1A18378((uint64_t)(v173 + 6), (uint64_t)v246, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
            v121 = v173[4];
            v122 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 + 40) + 16) + 32) + 16) + 1;
            v123 = v119;
            swift_retain();
            v173[6] = ecs_stack_allocator_allocate(v121, 48 * v122, 8);
            v173[7] = v122;
            v173[9] = 0;
            v173[10] = 0;
            v173[8] = 0;
            swift_release();
            v124 = v170;
            v125 = sub_1B1A12038(v160, a22, v117, v170, v118, (uint64_t)v173);
            v126 = sub_1B1A12038(v158, (uint64_t)&off_1E637D0A8, v117, v170, v118, (uint64_t)v173);
            v171 = v123;
            v127 = sub_1B1A12038(v156, (uint64_t)&off_1E639EB98, v117, v124, v118, (uint64_t)v173);
            v128 = v127;
            if (v117)
            {
              if (v118)
              {
                v129 = *(_QWORD *)(*(_QWORD *)(v160 - 8) + 72);
                v130 = *(_QWORD *)(*(_QWORD *)(v158 - 8) + 72);
                v131 = *(_QWORD *)(*(_QWORD *)(v156 - 8) + 72);
                do
                {
                  v132 = *v117++;
                  v247[0] = v168;
                  v247[1] = v171;
                  v247[2] = v173;
                  v247[3] = v116;
                  v247[4] = v132;
                  a23(v247, v125, v126, v128, a8, a3, v175, v176, v179);
                  ++v116;
                  v128 += v131;
                  v126 += v130;
                  v125 += v129;
                  --v118;
                }
                while (v118);
              }
            }
            else if ((_DWORD)v115 != (_DWORD)v154)
            {
              v133 = *(_QWORD *)(*(_QWORD *)(v160 - 8) + 72);
              v134 = *(_QWORD *)(*(_QWORD *)(v158 - 8) + 72);
              v135 = *(_QWORD *)(*(_QWORD *)(v156 - 8) + 72);
              v136 = v127 + v135 * v115;
              v137 = v126 + v134 * v115;
              v138 = v125 + v133 * v115;
              do
              {
                v248[0] = v168;
                v248[1] = v171;
                v248[2] = v173;
                v248[3] = v116;
                v248[4] = v115;
                ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))a23)(v248, v138, v137, v136, a8, a3, v175, v176, v179, v140);
                ++v115;
                ++v116;
                v136 += v135;
                v137 += v134;
                v138 += v133;
              }
              while (v154 != v115);
            }
            v244[0] = v210;
            v244[1] = v211;
            v245 = v212;
            sub_1B1F05D48(v173, (unsigned __int16 **)v244, (uint64_t)v246);
            sub_1B1F03804((char *)v171);
            v110 = v149;
            ecs_stack_allocator_pop_snapshot(v149);
            if ((v164 & 1) != 0)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 376));
            }
            swift_release();
            v113 = v162 + 1;
            v106 = a20;
          }
          while (v162 + 1 != v147);
        }
        else
        {
          swift_retain();
          swift_retain();
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v106(&v188);
        v106(&v188);
        a21(&v180);
      }
      sub_1B19ED748(v202);
      return sub_1B19ED748(v202);
    }
    else
    {
      swift_release();
      a20(&v188);
      a20(&v188);
      a21(&v180);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(_QWORD *)&v255 = 0;
    *((_QWORD *)&v255 + 1) = 0xE000000000000000;
    sub_1B2229430();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v255 = 0xD000000000000011;
    *((_QWORD *)&v255 + 1) = 0x80000001B23389D0;
    sub_1B2228890();
    sub_1B2228890();
    result = (uint64_t *)sub_1B2229688();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B1CF2C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  uint64_t v9;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v98 = a8;
  LODWORD(v90) = a7;
  *(_QWORD *)&v87 = a6;
  v106 = a3;
  sub_1B1B1F358();
  v97 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v96 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B222820C();
  v94 = *(_QWORD *)(v16 - 8);
  v95 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v93 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v102 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  *(_QWORD *)&v103 = (char *)&v83 - v21;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22, v23);
  v92 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v83 - v27;
  v29 = type metadata accessor for ScriptIndex();
  v99 = *(_QWORD *)(v29 - 8);
  v100 = v29;
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (uint64_t *)((char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33, v34);
  v36 = (uint64_t *)((char *)&v83 - v35);
  v86 = a1;
  v37 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v38 = sub_1B1A101F0(v37);
  swift_release();
  v39 = *(_QWORD *)(a5 + 16);
  v101 = a5;
  if (v39 && (v40 = sub_1B1DC3CA4(v38), (v41 & 1) != 0))
  {
    v42 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v40);
    v44 = *v42;
    v43 = v42[1];
  }
  else
  {
    swift_retain();
    v44 = sub_1B1A101F0(v37);
    swift_release();
    v43 = HIDWORD(v44);
  }
  v88 = v43;
  v45 = type metadata accessor for TriggerScript(0);
  v46 = a2;
  sub_1B1D124DC(a2 + *(int *)(v45 + 40), (uint64_t)v28, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v47 = v100;
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v28, 1, v100);
  v89 = v44;
  if (v48 == 1)
  {
    swift_retain();
    v49 = sub_1B1A101F0(v37);
    swift_release();
    *v36 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v28);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v28, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v50 = v47;
  v51 = v46;
  v52 = v9;
  v54 = v102;
  v53 = v103;
  sub_1B1792810((uint64_t)v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v55 = *v32;
    v56 = v101;
    v57 = *(_QWORD *)(v101 + 16);
    v103 = v55;
    if (v57)
    {
      v58 = sub_1B1DC3CA4(v55);
      if ((v60 & 1) != 0)
      {
        *(_QWORD *)&v59 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v58);
        v103 = v59;
      }
    }
    sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v36 = v103;
    swift_storeEnumTagMultiPayload();
  }
  v61 = *(_QWORD *)(v106 + *(int *)(v54 + 40));
  sub_1B1D12220(v106, v53, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B1D121E4(v53, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v62 = *(_QWORD *)(v53 + *(int *)(v54 + 44));
  swift_bridgeObjectRetain();
  sub_1B1D121E4(v53, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  if ((v90 & 1) != 0)
    goto LABEL_23;
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      v63 = &unk_1E63BCA40;
      goto LABEL_26;
    }
LABEL_23:
    if (*(_BYTE *)(v51 + 24) == 1)
      v63 = &unk_1E63BCA70;
    else
      v63 = &unk_1E63BCAA0;
    goto LABEL_26;
  }
  v63 = &unk_1E63BCAD0;
LABEL_26:
  v64 = v63[2];
  if (v64)
  {
    v85 = v52;
    v89 = v89 | (v88 << 32);
    v90 = a9;
    v84 = swift_bridgeObjectRetain();
    v65 = (unint64_t *)(v84 + 40);
    v88 = 0x80000001B2338AE0;
    v87 = xmmword_1B226D240;
    v91 = v36;
    do
    {
      v106 = v64;
      v66 = *(v65 - 1);
      v67 = *v65;
      v68 = v92;
      sub_1B1792810((uint64_t)v36, v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B1B4F2A0(v66, v67, v98, v90, v89, 0x72656767697274uLL, 0xE700000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v68);
      if (qword_1ED4BF430 != -1)
        swift_once();
      v104 = 0;
      v105 = 0xE000000000000000;
      v102 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v104 = 0xD000000000000022;
      v105 = v88;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v69 = v104;
      v70 = v105;
      v71 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v72 = qword_1ED4D0FD0;
      v73 = qword_1ED4BF688;
      swift_retain();
      if (v73 != -1)
        swift_once();
      *(_QWORD *)&v103 = v65 + 2;
      sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v74 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v74 + 32) = v69;
      *(_QWORD *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      v75 = v71;
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v76 = v93;
      sub_1B2228200();
      v77 = v97[12];
      v78 = v97[16];
      v79 = v97[20];
      v101 = v72;
      v80 = (uint64_t)v96;
      v81 = &v96[v79];
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v96, v76, v95);
      *(_BYTE *)(v80 + v77) = v75;
      v65 = (unint64_t *)v103;
      *(_QWORD *)(v80 + v78) = 0;
      *(_QWORD *)v81 = v69;
      *((_QWORD *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v80, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v64 = v106 - 1;
      v36 = v91;
      v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B20F206C(0);
  sub_1B20F2090(0);
  return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF3464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  uint64_t v9;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t updated;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v98 = a8;
  LODWORD(v90) = a7;
  *(_QWORD *)&v87 = a6;
  v106 = a3;
  sub_1B1B1F358();
  v97 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v96 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B222820C();
  v94 = *(_QWORD *)(v16 - 8);
  v95 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v93 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v102 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  *(_QWORD *)&v103 = (char *)&v83 - v21;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22, v23);
  v92 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v83 - v27;
  v29 = type metadata accessor for ScriptIndex();
  v99 = *(_QWORD *)(v29 - 8);
  v100 = v29;
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (uint64_t *)((char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33, v34);
  v36 = (uint64_t *)((char *)&v83 - v35);
  v86 = a1;
  v37 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v38 = sub_1B1A101F0(v37);
  swift_release();
  v39 = *(_QWORD *)(a5 + 16);
  v101 = a5;
  if (v39 && (v40 = sub_1B1DC3CA4(v38), (v41 & 1) != 0))
  {
    v42 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v40);
    v44 = *v42;
    v43 = v42[1];
  }
  else
  {
    swift_retain();
    v44 = sub_1B1A101F0(v37);
    swift_release();
    v43 = HIDWORD(v44);
  }
  v88 = v43;
  updated = type metadata accessor for ParticleUpdateScript(0);
  v46 = a2;
  sub_1B1D124DC(a2 + *(int *)(updated + 36), (uint64_t)v28, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v47 = v100;
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v28, 1, v100);
  v89 = v44;
  if (v48 == 1)
  {
    swift_retain();
    v49 = sub_1B1A101F0(v37);
    swift_release();
    *v36 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v28);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v28, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v50 = v47;
  v51 = v46;
  v52 = v9;
  v54 = v102;
  v53 = v103;
  sub_1B1792810((uint64_t)v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v55 = *v32;
    v56 = v101;
    v57 = *(_QWORD *)(v101 + 16);
    v103 = v55;
    if (v57)
    {
      v58 = sub_1B1DC3CA4(v55);
      if ((v60 & 1) != 0)
      {
        *(_QWORD *)&v59 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v58);
        v103 = v59;
      }
    }
    sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v36 = v103;
    swift_storeEnumTagMultiPayload();
  }
  v61 = *(_QWORD *)(v106 + *(int *)(v54 + 40));
  sub_1B1D12220(v106, v53, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B1D121E4(v53, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v62 = *(_QWORD *)(v53 + *(int *)(v54 + 44));
  swift_bridgeObjectRetain();
  sub_1B1D121E4(v53, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  if ((v90 & 1) != 0)
    goto LABEL_23;
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      v63 = &unk_1E63BC740;
      goto LABEL_26;
    }
LABEL_23:
    if (*(_BYTE *)(v51 + 24) == 1)
      v63 = &unk_1E63BC770;
    else
      v63 = &unk_1E63BC7A0;
    goto LABEL_26;
  }
  v63 = &unk_1E63BC7D0;
LABEL_26:
  v64 = v63[2];
  if (v64)
  {
    v85 = v52;
    v89 = v89 | (v88 << 32);
    v90 = a9;
    v84 = swift_bridgeObjectRetain();
    v65 = (unint64_t *)(v84 + 40);
    v88 = 0x80000001B2338AE0;
    v87 = xmmword_1B226D240;
    v91 = v36;
    do
    {
      v106 = v64;
      v66 = *(v65 - 1);
      v67 = *v65;
      v68 = v92;
      sub_1B1792810((uint64_t)v36, v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B1B4F2A0(v66, v67, v98, v90, v89, 0x656C636974726170uLL, 0xEE00657461647055, v68);
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v68);
      if (qword_1ED4BF430 != -1)
        swift_once();
      v104 = 0;
      v105 = 0xE000000000000000;
      v102 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v104 = 0xD000000000000022;
      v105 = v88;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v69 = v104;
      v70 = v105;
      v71 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v72 = qword_1ED4D0FD0;
      v73 = qword_1ED4BF688;
      swift_retain();
      if (v73 != -1)
        swift_once();
      *(_QWORD *)&v103 = v65 + 2;
      sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v74 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v74 + 32) = v69;
      *(_QWORD *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      v75 = v71;
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v76 = v93;
      sub_1B2228200();
      v77 = v97[12];
      v78 = v97[16];
      v79 = v97[20];
      v101 = v72;
      v80 = (uint64_t)v96;
      v81 = &v96[v79];
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v96, v76, v95);
      *(_BYTE *)(v80 + v77) = v75;
      v65 = (unint64_t *)v103;
      *(_QWORD *)(v80 + v78) = 0;
      *(_QWORD *)v81 = v69;
      *((_QWORD *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v80, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v64 = v106 - 1;
      v36 = v91;
      v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B20F20B4(0);
  sub_1B20F21DC(0);
  return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF3CAC(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  uint64_t v9;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t inited;
  _BYTE *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v98 = a8;
  LODWORD(v90) = a7;
  *(_QWORD *)&v87 = a6;
  v106 = a3;
  sub_1B1B1F358();
  v97 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v96 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B222820C();
  v94 = *(_QWORD *)(v16 - 8);
  v95 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v93 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v102 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  *(_QWORD *)&v103 = (char *)&v83 - v21;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22, v23);
  v92 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v83 - v27;
  v29 = type metadata accessor for ScriptIndex();
  v99 = *(_QWORD *)(v29 - 8);
  v100 = v29;
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (uint64_t *)((char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33, v34);
  v36 = (uint64_t *)((char *)&v83 - v35);
  v86 = a1;
  v37 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v38 = sub_1B1A101F0(v37);
  swift_release();
  v39 = *(_QWORD *)(a5 + 16);
  v101 = a5;
  if (v39 && (v40 = sub_1B1DC3CA4(v38), (v41 & 1) != 0))
  {
    v42 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v40);
    v44 = *v42;
    v43 = v42[1];
  }
  else
  {
    swift_retain();
    v44 = sub_1B1A101F0(v37);
    swift_release();
    v43 = HIDWORD(v44);
  }
  v88 = v43;
  inited = type metadata accessor for ParticleInitScript(0);
  v46 = a2;
  sub_1B1D124DC((uint64_t)&a2[*(int *)(inited + 36)], (uint64_t)v28, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v47 = v100;
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v28, 1, v100);
  v89 = v44;
  if (v48 == 1)
  {
    swift_retain();
    v49 = sub_1B1A101F0(v37);
    swift_release();
    *v36 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v28);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v28, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v50 = v47;
  v51 = v46;
  v52 = v9;
  v54 = v102;
  v53 = v103;
  sub_1B1792810((uint64_t)v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v55 = *v32;
    v56 = v101;
    v57 = *(_QWORD *)(v101 + 16);
    v103 = v55;
    if (v57)
    {
      v58 = sub_1B1DC3CA4(v55);
      if ((v60 & 1) != 0)
      {
        *(_QWORD *)&v59 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v58);
        v103 = v59;
      }
    }
    sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v36 = v103;
    swift_storeEnumTagMultiPayload();
  }
  v61 = *(_QWORD *)(v106 + *(int *)(v54 + 40));
  sub_1B1D12220(v106, v53, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B1D121E4(v53, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v62 = *(_QWORD *)(v53 + *(int *)(v54 + 44));
  swift_bridgeObjectRetain();
  sub_1B1D121E4(v53, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  if ((v90 & 1) != 0)
    goto LABEL_23;
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      v63 = &unk_1E63BC680;
      goto LABEL_26;
    }
LABEL_23:
    if (*v51 == 1)
      v63 = &unk_1E63BC6B0;
    else
      v63 = &unk_1E63BC6E0;
    goto LABEL_26;
  }
  v63 = &unk_1E63BC710;
LABEL_26:
  v64 = v63[2];
  if (v64)
  {
    v85 = v52;
    v89 = v89 | (v88 << 32);
    v90 = a9;
    v84 = swift_bridgeObjectRetain();
    v65 = (unint64_t *)(v84 + 40);
    v88 = 0x80000001B2338AE0;
    v87 = xmmword_1B226D240;
    v91 = v36;
    do
    {
      v106 = v64;
      v66 = *(v65 - 1);
      v67 = *v65;
      v68 = v92;
      sub_1B1792810((uint64_t)v36, v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B1B4F2A0(v66, v67, v98, v90, v89, 0x656C636974726170uLL, 0xEC00000074696E49, v68);
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v68);
      if (qword_1ED4BF430 != -1)
        swift_once();
      v104 = 0;
      v105 = 0xE000000000000000;
      v102 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v104 = 0xD000000000000022;
      v105 = v88;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v69 = v104;
      v70 = v105;
      v71 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v72 = qword_1ED4D0FD0;
      v73 = qword_1ED4BF688;
      swift_retain();
      if (v73 != -1)
        swift_once();
      *(_QWORD *)&v103 = v65 + 2;
      sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v74 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v74 + 32) = v69;
      *(_QWORD *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      v75 = v71;
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v76 = v93;
      sub_1B2228200();
      v77 = v97[12];
      v78 = v97[16];
      v79 = v97[20];
      v101 = v72;
      v80 = (uint64_t)v96;
      v81 = &v96[v79];
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v96, v76, v95);
      *(_BYTE *)(v80 + v77) = v75;
      v65 = (unint64_t *)v103;
      *(_QWORD *)(v80 + v78) = 0;
      *(_QWORD *)v81 = v69;
      *((_QWORD *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v80, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v64 = v106 - 1;
      v36 = v91;
      v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B20F2304(0);
  sub_1B20F2328(0);
  return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF44F0(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  uint64_t v9;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v98 = a8;
  LODWORD(v90) = a7;
  *(_QWORD *)&v87 = a6;
  v106 = a3;
  sub_1B1B1F358();
  v97 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v96 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B222820C();
  v94 = *(_QWORD *)(v16 - 8);
  v95 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v93 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v102 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  *(_QWORD *)&v103 = (char *)&v83 - v21;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22, v23);
  v92 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v83 - v27;
  v29 = type metadata accessor for ScriptIndex();
  v99 = *(_QWORD *)(v29 - 8);
  v100 = v29;
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (uint64_t *)((char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33, v34);
  v36 = (uint64_t *)((char *)&v83 - v35);
  v86 = a1;
  v37 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v38 = sub_1B1A101F0(v37);
  swift_release();
  v39 = *(_QWORD *)(a5 + 16);
  v101 = a5;
  if (v39 && (v40 = sub_1B1DC3CA4(v38), (v41 & 1) != 0))
  {
    v42 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v40);
    v44 = *v42;
    v43 = v42[1];
  }
  else
  {
    swift_retain();
    v44 = sub_1B1A101F0(v37);
    swift_release();
    v43 = HIDWORD(v44);
  }
  v88 = v43;
  v45 = type metadata accessor for EmitterScript(0);
  v46 = a2;
  sub_1B1D124DC((uint64_t)&a2[*(int *)(v45 + 32)], (uint64_t)v28, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v47 = v100;
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v28, 1, v100);
  v89 = v44;
  if (v48 == 1)
  {
    swift_retain();
    v49 = sub_1B1A101F0(v37);
    swift_release();
    *v36 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v28);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v28, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v50 = v47;
  v51 = v46;
  v52 = v9;
  v54 = v102;
  v53 = v103;
  sub_1B1792810((uint64_t)v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v55 = *v32;
    v56 = v101;
    v57 = *(_QWORD *)(v101 + 16);
    v103 = v55;
    if (v57)
    {
      v58 = sub_1B1DC3CA4(v55);
      if ((v60 & 1) != 0)
      {
        *(_QWORD *)&v59 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v58);
        v103 = v59;
      }
    }
    sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v36 = v103;
    swift_storeEnumTagMultiPayload();
  }
  v61 = *(_QWORD *)(v106 + *(int *)(v54 + 40));
  sub_1B1D12220(v106, v53, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B1D121E4(v53, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v62 = *(_QWORD *)(v53 + *(int *)(v54 + 44));
  swift_bridgeObjectRetain();
  sub_1B1D121E4(v53, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  if ((v90 & 1) != 0)
    goto LABEL_23;
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      v63 = &unk_1E63BC980;
      goto LABEL_26;
    }
LABEL_23:
    if (*v51 == 1)
      v63 = &unk_1E63BC9B0;
    else
      v63 = &unk_1E63BC9E0;
    goto LABEL_26;
  }
  v63 = &unk_1E63BCA10;
LABEL_26:
  v64 = v63[2];
  if (v64)
  {
    v85 = v52;
    v89 = v89 | (v88 << 32);
    v90 = a9;
    v84 = swift_bridgeObjectRetain();
    v65 = (unint64_t *)(v84 + 40);
    v88 = 0x80000001B2338AE0;
    v87 = xmmword_1B226D240;
    v91 = v36;
    do
    {
      v106 = v64;
      v66 = *(v65 - 1);
      v67 = *v65;
      v68 = v92;
      sub_1B1792810((uint64_t)v36, v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B1B4F2A0(v66, v67, v98, v90, v89, 0x72657474696D65uLL, 0xE700000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v68);
      if (qword_1ED4BF430 != -1)
        swift_once();
      v104 = 0;
      v105 = 0xE000000000000000;
      v102 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v104 = 0xD000000000000022;
      v105 = v88;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v69 = v104;
      v70 = v105;
      v71 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v72 = qword_1ED4D0FD0;
      v73 = qword_1ED4BF688;
      swift_retain();
      if (v73 != -1)
        swift_once();
      *(_QWORD *)&v103 = v65 + 2;
      sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v74 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v74 + 32) = v69;
      *(_QWORD *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      v75 = v71;
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v76 = v93;
      sub_1B2228200();
      v77 = v97[12];
      v78 = v97[16];
      v79 = v97[20];
      v101 = v72;
      v80 = (uint64_t)v96;
      v81 = &v96[v79];
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v96, v76, v95);
      *(_BYTE *)(v80 + v77) = v75;
      v65 = (unint64_t *)v103;
      *(_QWORD *)(v80 + v78) = 0;
      *(_QWORD *)v81 = v69;
      *((_QWORD *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v80, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v64 = v106 - 1;
      v36 = v91;
      v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B20F234C(0);
  sub_1B20F2370(0);
  return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF4D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  uint64_t v9;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v98 = a8;
  LODWORD(v90) = a7;
  *(_QWORD *)&v87 = a6;
  v106 = a3;
  sub_1B1B1F358();
  v97 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v96 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B222820C();
  v94 = *(_QWORD *)(v16 - 8);
  v95 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v93 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v102 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  *(_QWORD *)&v103 = (char *)&v83 - v21;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22, v23);
  v92 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v83 - v27;
  v29 = type metadata accessor for ScriptIndex();
  v99 = *(_QWORD *)(v29 - 8);
  v100 = v29;
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (uint64_t *)((char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33, v34);
  v36 = (uint64_t *)((char *)&v83 - v35);
  v86 = a1;
  v37 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v38 = sub_1B1A101F0(v37);
  swift_release();
  v39 = *(_QWORD *)(a5 + 16);
  v101 = a5;
  if (v39 && (v40 = sub_1B1DC3CA4(v38), (v41 & 1) != 0))
  {
    v42 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v40);
    v44 = *v42;
    v43 = v42[1];
  }
  else
  {
    swift_retain();
    v44 = sub_1B1A101F0(v37);
    swift_release();
    v43 = HIDWORD(v44);
  }
  v88 = v43;
  v45 = type metadata accessor for SimpleScript(0);
  v46 = a2;
  sub_1B1D124DC(a2 + *(int *)(v45 + 36), (uint64_t)v28, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v47 = v100;
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v28, 1, v100);
  v89 = v44;
  if (v48 == 1)
  {
    swift_retain();
    v49 = sub_1B1A101F0(v37);
    swift_release();
    *v36 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v28);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v28, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v50 = v47;
  v51 = v46;
  v52 = v9;
  v54 = v102;
  v53 = v103;
  sub_1B1792810((uint64_t)v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v55 = *v32;
    v56 = v101;
    v57 = *(_QWORD *)(v101 + 16);
    v103 = v55;
    if (v57)
    {
      v58 = sub_1B1DC3CA4(v55);
      if ((v60 & 1) != 0)
      {
        *(_QWORD *)&v59 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v58);
        v103 = v59;
      }
    }
    sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v36 = v103;
    swift_storeEnumTagMultiPayload();
  }
  v61 = *(_QWORD *)(v106 + *(int *)(v54 + 40));
  sub_1B1D12220(v106, v53, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B1D121E4(v53, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v62 = *(_QWORD *)(v53 + *(int *)(v54 + 44));
  swift_bridgeObjectRetain();
  sub_1B1D121E4(v53, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  if ((v90 & 1) != 0)
    goto LABEL_23;
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      v63 = &unk_1E63BC8C0;
      goto LABEL_26;
    }
LABEL_23:
    if (*(_BYTE *)(v51 + 32) == 1)
      v63 = &unk_1E63BC8F0;
    else
      v63 = &unk_1E63BC920;
    goto LABEL_26;
  }
  v63 = &unk_1E63BC950;
LABEL_26:
  v64 = v63[2];
  if (v64)
  {
    v85 = v52;
    v89 = v89 | (v88 << 32);
    v90 = a9;
    v84 = swift_bridgeObjectRetain();
    v65 = (unint64_t *)(v84 + 40);
    v88 = 0x80000001B2338AE0;
    v87 = xmmword_1B226D240;
    v91 = v36;
    do
    {
      v106 = v64;
      v66 = *(v65 - 1);
      v67 = *v65;
      v68 = v92;
      sub_1B1792810((uint64_t)v36, v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B1B4F2A0(v66, v67, v98, v90, v89, 0x656C706D6973uLL, 0xE600000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v68);
      if (qword_1ED4BF430 != -1)
        swift_once();
      v104 = 0;
      v105 = 0xE000000000000000;
      v102 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v104 = 0xD000000000000022;
      v105 = v88;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v69 = v104;
      v70 = v105;
      v71 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v72 = qword_1ED4D0FD0;
      v73 = qword_1ED4BF688;
      swift_retain();
      if (v73 != -1)
        swift_once();
      *(_QWORD *)&v103 = v65 + 2;
      sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v74 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v74 + 32) = v69;
      *(_QWORD *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      v75 = v71;
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v76 = v93;
      sub_1B2228200();
      v77 = v97[12];
      v78 = v97[16];
      v79 = v97[20];
      v101 = v72;
      v80 = (uint64_t)v96;
      v81 = &v96[v79];
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v96, v76, v95);
      *(_BYTE *)(v80 + v77) = v75;
      v65 = (unint64_t *)v103;
      *(_QWORD *)(v80 + v78) = 0;
      *(_QWORD *)v81 = v69;
      *((_QWORD *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v80, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v64 = v106 - 1;
      v36 = v91;
      v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B20F2424(0);
  sub_1B20F2448(0);
  return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF5564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unint64_t a8, unint64_t a9)
{
  uint64_t v9;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v98 = a8;
  LODWORD(v90) = a7;
  *(_QWORD *)&v87 = a6;
  v106 = a3;
  sub_1B1B1F358();
  v97 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v96 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B222820C();
  v94 = *(_QWORD *)(v16 - 8);
  v95 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v93 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v102 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  *(_QWORD *)&v103 = (char *)&v83 - v21;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22, v23);
  v92 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25, v26);
  v28 = (char *)&v83 - v27;
  v29 = type metadata accessor for ScriptIndex();
  v99 = *(_QWORD *)(v29 - 8);
  v100 = v29;
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (uint64_t *)((char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v33, v34);
  v36 = (uint64_t *)((char *)&v83 - v35);
  v86 = a1;
  v37 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v38 = sub_1B1A101F0(v37);
  swift_release();
  v39 = *(_QWORD *)(a5 + 16);
  v101 = a5;
  if (v39 && (v40 = sub_1B1DC3CA4(v38), (v41 & 1) != 0))
  {
    v42 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v40);
    v44 = *v42;
    v43 = v42[1];
  }
  else
  {
    swift_retain();
    v44 = sub_1B1A101F0(v37);
    swift_release();
    v43 = HIDWORD(v44);
  }
  v88 = v43;
  v45 = type metadata accessor for GraphScript(0);
  v46 = a2;
  sub_1B1D124DC(a2 + *(int *)(v45 + 40), (uint64_t)v28, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v47 = v100;
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v28, 1, v100);
  v89 = v44;
  if (v48 == 1)
  {
    swift_retain();
    v49 = sub_1B1A101F0(v37);
    swift_release();
    *v36 = v49;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v28);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v28, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v50 = v47;
  v51 = v46;
  v52 = v9;
  v54 = v102;
  v53 = v103;
  sub_1B1792810((uint64_t)v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v55 = *v32;
    v56 = v101;
    v57 = *(_QWORD *)(v101 + 16);
    v103 = v55;
    if (v57)
    {
      v58 = sub_1B1DC3CA4(v55);
      if ((v60 & 1) != 0)
      {
        *(_QWORD *)&v59 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v58);
        v103 = v59;
      }
    }
    sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v36 = v103;
    swift_storeEnumTagMultiPayload();
  }
  v61 = *(_QWORD *)(v106 + *(int *)(v54 + 40));
  sub_1B1D12220(v106, v53, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v61)
  {
    sub_1B1D121E4(v53, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v62 = *(_QWORD *)(v53 + *(int *)(v54 + 44));
  swift_bridgeObjectRetain();
  sub_1B1D121E4(v53, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v62)
  {
    swift_bridgeObjectRelease();
    return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  if ((v90 & 1) != 0)
    goto LABEL_23;
  if ((uint64_t)v87 >= 1029)
  {
    if ((unint64_t)v87 <= 0x408)
    {
      v63 = &unk_1E63BC800;
      goto LABEL_26;
    }
LABEL_23:
    if (*(_BYTE *)(v51 + 24) == 1)
      v63 = &unk_1E63BC830;
    else
      v63 = &unk_1E63BC860;
    goto LABEL_26;
  }
  v63 = &unk_1E63BC890;
LABEL_26:
  v64 = v63[2];
  if (v64)
  {
    v85 = v52;
    v89 = v89 | (v88 << 32);
    v90 = a9;
    v84 = swift_bridgeObjectRetain();
    v65 = (unint64_t *)(v84 + 40);
    v88 = 0x80000001B2338AE0;
    v87 = xmmword_1B226D240;
    v91 = v36;
    do
    {
      v106 = v64;
      v66 = *(v65 - 1);
      v67 = *v65;
      v68 = v92;
      sub_1B1792810((uint64_t)v36, v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v68, 0, 1, v50);
      swift_bridgeObjectRetain();
      sub_1B1B4F2A0(v66, v67, v98, v90, v89, 0x6870617267uLL, 0xE500000000000000, v68);
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v68);
      if (qword_1ED4BF430 != -1)
        swift_once();
      v104 = 0;
      v105 = 0xE000000000000000;
      v102 = qword_1ED4D0FB0;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v104 = 0xD000000000000022;
      v105 = v88;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      v69 = v104;
      v70 = v105;
      v71 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v72 = qword_1ED4D0FD0;
      v73 = qword_1ED4BF688;
      swift_retain();
      if (v73 != -1)
        swift_once();
      *(_QWORD *)&v103 = v65 + 2;
      sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = v87;
      *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v74 + 64) = sub_1B1B1F47C();
      *(_QWORD *)(v74 + 32) = v69;
      *(_QWORD *)(v74 + 40) = v70;
      swift_bridgeObjectRetain();
      v75 = v71;
      sub_1B222835C();
      swift_bridgeObjectRelease();
      swift_retain();
      v76 = v93;
      sub_1B2228200();
      v77 = v97[12];
      v78 = v97[16];
      v79 = v97[20];
      v101 = v72;
      v80 = (uint64_t)v96;
      v81 = &v96[v79];
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v96, v76, v95);
      *(_BYTE *)(v80 + v77) = v75;
      v65 = (unint64_t *)v103;
      *(_QWORD *)(v80 + v78) = 0;
      *(_QWORD *)v81 = v69;
      *((_QWORD *)v81 + 1) = v70;
      swift_bridgeObjectRetain();
      sub_1B2228428();
      swift_release();
      sub_1B1A04628(v80, (uint64_t (*)(_QWORD))sub_1B1B1F358);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v64 = v106 - 1;
      v36 = v91;
      v50 = v100;
    }
    while (v106 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1B20F246C(0);
  sub_1B20F2490(0);
  return sub_1B1A04628((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t *sub_1B1CF5D9C(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3C5B8, (uint64_t (*)(uint64_t *))sub_1B19ED720, type metadata accessor for GraphScript, (uint64_t)&off_1E6370AB0);
}

uint64_t *sub_1B1CF5DC0(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E3D0, (uint64_t (*)(uint64_t *))sub_1B1A1B75C, type metadata accessor for SimpleScript, (uint64_t)&off_1E63777B8);
}

uint64_t *sub_1B1CF5DE4(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E320, (uint64_t (*)(uint64_t *))sub_1B1A1B75C, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1E63982A0);
}

uint64_t *sub_1B1CF5E08(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E270, (uint64_t (*)(uint64_t *))sub_1B1A1B75C, type metadata accessor for ShaderScript, (uint64_t)&off_1E63774F8);
}

uint64_t *sub_1B1CF5E2C(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E480, (uint64_t (*)(uint64_t *))sub_1B1A1B75C, type metadata accessor for EmitterScript, (uint64_t)&off_1E637A0A8);
}

uint64_t *sub_1B1CF5E50(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E1C0, (uint64_t (*)(uint64_t *))sub_1B1A1B75C, type metadata accessor for ParticleInitScript, (uint64_t)&off_1E6394B78);
}

uint64_t *sub_1B1CF5E74(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E16C, (uint64_t (*)(uint64_t *))sub_1B1A1B75C, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1E639E488);
}

uint64_t *sub_1B1CF5E98(uint64_t a1, uint64_t *a2)
{
  return sub_1B1CF5EBC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B1E3E118, (uint64_t (*)(uint64_t *))sub_1B1A1B75C, type metadata accessor for TriggerScript, (uint64_t)&off_1E637DA80);
}

uint64_t *sub_1B1CF5EBC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t (*a4)(uint64_t *), uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  _QWORD *v33;
  size_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v40;
  int v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53[8];
  _OWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;
  _BYTE v66[40];
  uint64_t v67;
  int v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;

  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v73 = qword_1ED4D09F8;
  v74 = 0;
  v75 = 2;
  v76 = 0;
  v77 = 2;
  v78 = 0;
  swift_retain();
  a3(&v47, 1);
  swift_release();
  v67 = v47;
  v68 = v48;
  v69 = v49;
  v70 = v50 | 1;
  v71 = v51;
  v72 = v52;
  sub_1B1E8FCE4(a1, (uint64_t)&v67, 0x200000000, v53);
  sub_1B1A18378((uint64_t)v53, (uint64_t)v54, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v54[0])
    return (uint64_t *)a4(&v47);
  v61 = v54[0];
  v62 = v54[1];
  v10 = v56;
  v63 = v55;
  v12 = v57;
  v11 = v58;
  v13 = v59;
  v14 = v60;
  a4(&v47);
  if (v14 > 0 && v12)
  {
    v46 = v13[4];
    v15 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v16 = a5(0);
    v64[0] = v61;
    v64[1] = v62;
    v65 = v63;
    v40 = v16;
    swift_retain();
    swift_retain();
    swift_retain();
    v17 = 0;
    v18 = (uint64_t *)(v10 + 24);
    v41 = v15;
    while (1)
    {
      v44 = *((unsigned int *)v18 - 6);
      v45 = v12;
      v43 = *((unsigned int *)v18 - 5);
      v19 = (uint64_t *)*(v18 - 1);
      v20 = *v18;
      v21 = v18[1];
      v22 = v18[2];
      v23 = v17;
      if (v15)
      {
        v24 = *(os_unfair_lock_s **)(v22 + 376);
        swift_retain();
        os_unfair_lock_lock(v24);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v46);
      sub_1B1A18378((uint64_t)(v13 + 6), (uint64_t)v66, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
      v25 = v13[4];
      v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v13[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
      v13[7] = v26;
      v13[9] = 0;
      v13[10] = 0;
      v13[8] = 0;
      swift_release();
      sub_1B1A12038(v40, a6, v19, v20, v21, (uint64_t)v13);
      if (v19)
      {
        v15 = v41;
        v17 = v23;
        v27 = v45;
        if (v21)
        {
          v28 = a2;
          v29 = v21 + *a2;
LABEL_16:
          *v28 = v29;
        }
      }
      else
      {
        v15 = v41;
        v17 = v23;
        v27 = v45;
        if ((_DWORD)v44 != (_DWORD)v43)
        {
          v28 = a2;
          v29 = *a2 + v43 - v44;
          goto LABEL_16;
        }
      }
      sub_1B1F05D48(v13, (unsigned __int16 **)v64, (uint64_t)v66);
      if (*(_QWORD *)(v13[13] + 16))
      {
        v30 = (_QWORD *)swift_bridgeObjectRetain();
        sub_1B1F05034(v30, v22);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v32 = v13[13];
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          sub_1B1C92670(0, *(_QWORD *)(v32 + 16));
        }
        else
        {
          v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          if (*(_QWORD *)(v32 + 24) >= 2uLL)
          {
            sub_1B1791524(0, (unint64_t *)&qword_1ED4BADE0, (uint64_t (*)(uint64_t))sub_1B1B1F228, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
            v33 = (_QWORD *)swift_allocObject();
            v34 = j__malloc_size(v33);
            v33[2] = 0;
            v33[3] = 2 * ((uint64_t)(v34 - 32) / 72);
          }
          v13[13] = v33;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v13[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          v35 = *(char **)(v22 + 232);
          v36 = *(char **)(v22 + 256);
          if (v35 == v36)
          {
            v37 = *(char **)(v22 + 240);
          }
          else
          {
            sub_1B1A1059C(v36, v35);
            v36 = *(char **)(v22 + 232);
            v37 = *(char **)(v22 + 240);
            if (v37 == v36)
            {
              v37 = 0;
              v36 = 0;
              *(_QWORD *)(v22 + 232) = 0;
              *(_QWORD *)(v22 + 240) = 0;
            }
          }
          *(_QWORD *)(v22 + 248) = v37;
          *(_QWORD *)(v22 + 256) = v36;
        }
      }
      ecs_stack_allocator_pop_snapshot(v46);
      if (v15)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
      }
      swift_release();
      v18 += 6;
      v12 = v27 - 1;
      if (!v12)
      {
        sub_1B19ED748(v53);
        return sub_1B19ED748(v53);
      }
    }
  }
  return sub_1B19ED748(v53);
}

uint64_t *sub_1B1CF6368(_QWORD *a1, void (*a2)(_OWORD *__return_ptr, uint64_t), uint64_t (*a3)(_OWORD *), unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  size_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  char v69;
  int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t *result;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v100;
  _QWORD *v101;
  _OWORD v102[2];
  uint64_t v103;
  uint64_t v104[8];
  _OWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  _OWORD v115[2];
  uint64_t v116;
  _OWORD v117[2];
  uint64_t v118;
  _BYTE v119[40];
  uint64_t v120;
  int v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;

  if (qword_1ED4B7DB8 != -1)
    swift_once();
  v120 = qword_1ED4D09F8;
  v121 = 0;
  v122 = 2;
  v123 = 0;
  v124 = 2;
  v125 = 0;
  v9 = swift_retain();
  a2(v102, v9);
  swift_release();
  v117[0] = v102[0];
  v117[1] = v102[1];
  v118 = v103;
  v10 = swift_retain();
  sub_1B1E8FCE4(v10, (uint64_t)v117, 0x200000000, v104);
  sub_1B1A18378((uint64_t)v104, (uint64_t)v105, (unint64_t *)&qword_1ED4B7DE0, (uint64_t)&type metadata for QueryResult);
  if (!*(_QWORD *)&v105[0])
  {
    swift_release();
    return (uint64_t *)a3(v102);
  }
  v112 = v105[0];
  v113 = v105[1];
  v114 = v106;
  v12 = v108;
  v11 = v109;
  v13 = v111;
  v82 = v107;
  v83 = v110;
  swift_release();
  if (v13 <= 0 || !v12)
  {
    a3(v102);
    return sub_1B19ED748(v104);
  }
  v14 = v83;
  v87 = v83[4];
  v86 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  sub_1B1A1B6FC(0, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v16 = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  v17 = 0;
  v18 = 0;
  v81 = v12;
  v90 = v16;
  do
  {
    v84 = v18;
    v85 = v17;
    v19 = (unsigned int *)(v82 + 48 * v17);
    v20 = *v19;
    v93 = v19[1];
    v22 = (uint64_t *)*((_QWORD *)v19 + 2);
    v21 = *((_QWORD *)v19 + 3);
    v24 = *((_QWORD *)v19 + 4);
    v23 = *((_QWORD *)v19 + 5);
    if (v86)
    {
      v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v87);
    sub_1B1A18378((uint64_t)(v83 + 6), (uint64_t)v119, &qword_1ED4B7FB0, (uint64_t)&type metadata for CommandQueue.IterationContext);
    v26 = v14[4];
    v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v14[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
    v14[7] = v27;
    v83[9] = 0;
    v83[10] = 0;
    v83[8] = 0;
    swift_release();
    v28 = sub_1B1A12038((uint64_t)v16, (uint64_t)&off_1E639EB98, v22, v21, v24, (uint64_t)v14);
    v29 = v28;
    v92 = v23;
    if (v22)
    {
      if (v24)
      {
        v88 = *(_QWORD *)(*((_QWORD *)v16 - 1) + 72);
        do
        {
          v32 = *v22;
          v94 = v22 + 1;
          v95 = v24;
          v33 = swift_retain();
          if ((*(_BYTE *)(v23 + 184) & 1) != 0)
            goto LABEL_68;
          v34 = *(_DWORD *)(*(_QWORD *)(v23 + 168) + 4 * v32);
          v97 = *(unsigned int *)(*(_QWORD *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v34 + 8);
          swift_release();
          v35 = a5(0);
          if ((*(_BYTE *)(v29 + v16[10]) & 1) != 0)
          {
            v36 = *(_QWORD *)(v29 + v16[11]);
            if (v36)
            {
              v37 = *(_QWORD *)(v29 + v16[13]);
              v38 = v36 | 0x4000000000000000;
              v39 = (id)v36;
            }
            else
            {
              v38 = 0;
              v37 = *(_QWORD *)(v29 + v16[13]);
            }
            swift_bridgeObjectRetain();
          }
          else
          {
            v37 = 0;
            v38 = 0x8000000000000000;
          }
          sub_1B1B99F0C(v37, v38);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v100 = (_QWORD *)*a1;
          *a1 = 0x8000000000000000;
          v41 = v34 | (unint64_t)(v97 << 32);
          v43 = sub_1B1DC4A60(v41, v35);
          v44 = v42;
          v45 = v100[2] + ((v42 & 1) == 0);
          if (v100[3] >= v45)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v48 = v100;
              if ((v42 & 1) != 0)
                goto LABEL_29;
            }
            else
            {
              sub_1B1EAE81C();
              v48 = v100;
              if ((v44 & 1) != 0)
                goto LABEL_29;
            }
          }
          else
          {
            sub_1B1E9C71C(v45, isUniquelyReferenced_nonNull_native);
            v46 = sub_1B1DC4A60(v41, v35);
            if ((v44 & 1) != (v47 & 1))
              goto LABEL_69;
            v43 = v46;
            v48 = v100;
            if ((v44 & 1) != 0)
            {
LABEL_29:
              v49 = v48[7] + 16 * v43;
              sub_1B1D125C0(*(_QWORD *)v49, *(_QWORD *)(v49 + 8));
              *(_QWORD *)v49 = v37;
              *(_QWORD *)(v49 + 8) = v38;
              goto LABEL_15;
            }
          }
          v48[(v43 >> 6) + 8] |= 1 << v43;
          v30 = v48[6] + 16 * v43;
          *(_DWORD *)v30 = v34;
          *(_DWORD *)(v30 + 4) = v97;
          *(_QWORD *)(v30 + 8) = v35;
          v31 = (uint64_t *)(v48[7] + 16 * v43);
          *v31 = v37;
          v31[1] = v38;
          ++v48[2];
LABEL_15:
          v22 = v94;
          *a1 = v48;
          swift_bridgeObjectRelease();
          sub_1B1D125C0(v37, v38);
          v16 = v90;
          v29 += v88;
          v24 = v95 - 1;
          v23 = v92;
        }
        while (v95 != 1);
      }
    }
    else if ((_DWORD)v20 != (_DWORD)v93)
    {
      v89 = *(_QWORD *)(*((_QWORD *)v16 - 1) + 72);
      v58 = v28 + v89 * v20;
      while (1)
      {
        v61 = swift_retain();
        if ((*(_BYTE *)(v23 + 184) & 1) != 0)
          break;
        v62 = *(_DWORD *)(*(_QWORD *)(v23 + 168) + 4 * v20);
        v63 = *(unsigned int *)(*(_QWORD *)(v61 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v62 + 8);
        swift_release();
        v64 = a5(0);
        if ((*(_BYTE *)(v58 + v16[10]) & 1) != 0)
        {
          v65 = *(_QWORD *)(v58 + v16[11]);
          if (v65)
          {
            v66 = *(_QWORD *)(v58 + v16[13]);
            v67 = v65 | 0x4000000000000000;
            v68 = (id)v65;
          }
          else
          {
            v67 = 0;
            v66 = *(_QWORD *)(v58 + v16[13]);
          }
          swift_bridgeObjectRetain();
        }
        else
        {
          v66 = 0;
          v67 = 0x8000000000000000;
        }
        v96 = v62;
        v98 = v67;
        sub_1B1B99F0C(v66, v67);
        v69 = swift_isUniquelyReferenced_nonNull_native();
        v101 = (_QWORD *)*a1;
        *a1 = 0x8000000000000000;
        v70 = v63;
        v71 = v62 | (unint64_t)(v63 << 32);
        v72 = sub_1B1DC4A60(v71, v64);
        v74 = v73;
        v75 = v101[2] + ((v73 & 1) == 0);
        if (v101[3] >= v75)
        {
          if ((v69 & 1) == 0)
            sub_1B1EAE81C();
        }
        else
        {
          sub_1B1E9C71C(v75, v69);
          v76 = sub_1B1DC4A60(v71, v64);
          if ((v74 & 1) != (v77 & 1))
            goto LABEL_69;
          v72 = v76;
        }
        if ((v74 & 1) != 0)
        {
          v78 = v101[7] + 16 * v72;
          sub_1B1D125C0(*(_QWORD *)v78, *(_QWORD *)(v78 + 8));
          *(_QWORD *)v78 = v66;
          *(_QWORD *)(v78 + 8) = v98;
        }
        else
        {
          v101[(v72 >> 6) + 8] |= 1 << v72;
          v59 = v101[6] + 16 * v72;
          *(_DWORD *)v59 = v96;
          *(_DWORD *)(v59 + 4) = v70;
          *(_QWORD *)(v59 + 8) = v64;
          v60 = (uint64_t *)(v101[7] + 16 * v72);
          *v60 = v66;
          v60[1] = v98;
          ++v101[2];
        }
        ++v20;
        *a1 = v101;
        swift_bridgeObjectRelease();
        sub_1B1D125C0(v66, v98);
        v16 = v90;
        v58 += v89;
        v23 = v92;
        if (v93 == v20)
          goto LABEL_33;
      }
LABEL_68:
      sub_1B2229688();
      __break(1u);
LABEL_69:
      result = (uint64_t *)sub_1B2229FC4();
      __break(1u);
      return result;
    }
LABEL_33:
    v115[0] = v112;
    v115[1] = v113;
    v116 = v114;
    v14 = v83;
    v18 = v84;
    sub_1B1F05D48(v83, (unsigned __int16 **)v115, (uint64_t)v119);
    if (*(_QWORD *)(v83[13] + 16))
    {
      v50 = (_QWORD *)swift_bridgeObjectRetain();
      sub_1B1F05034(v50, v23);
      swift_bridgeObjectRelease();
      v51 = swift_isUniquelyReferenced_nonNull_native();
      v52 = v83[13];
      if ((v51 & 1) != 0)
      {
        sub_1B1C92670(0, *(_QWORD *)(v52 + 16));
      }
      else
      {
        v53 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (*(_QWORD *)(v52 + 24) >= 2uLL)
        {
          sub_1B1791524(0, (unint64_t *)&qword_1ED4BADE0, (uint64_t (*)(uint64_t))sub_1B1B1F228, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v53 = (_QWORD *)swift_allocObject();
          v54 = j__malloc_size(v53);
          v53[2] = 0;
          v53[3] = 2 * ((uint64_t)(v54 - 32) / 72);
        }
        v83[13] = v53;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v83[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        v55 = *(char **)(v23 + 232);
        v56 = *(char **)(v23 + 256);
        if (v55 == v56)
        {
          v57 = *(char **)(v23 + 240);
        }
        else
        {
          sub_1B1A1059C(v56, v55);
          v56 = *(char **)(v23 + 232);
          v57 = *(char **)(v23 + 240);
          if (v57 == v56)
          {
            v57 = 0;
            v56 = 0;
            *(_QWORD *)(v23 + 232) = 0;
            *(_QWORD *)(v23 + 240) = 0;
          }
        }
        *(_QWORD *)(v23 + 248) = v57;
        *(_QWORD *)(v23 + 256) = v56;
      }
    }
    ecs_stack_allocator_pop_snapshot(v87);
    if (v86)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 376));
    }
    swift_release();
    v17 = v85 + 1;
  }
  while (v85 + 1 != v81);
  a3(v102);
  sub_1B19ED748(v104);
  return sub_1B19ED748(v104);
}

uint64_t sub_1B1CF6C9C()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1B1CDD824();
  return v0;
}

const char *sub_1B1CF6CD0()
{
  return "ScriptCompilerSystem";
}

uint64_t sub_1B1CF6CE8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  *(_WORD *)a2 = 0;
  *(_BYTE *)(a2 + 2) = 1;
  v4 = a2 + a1[7];
  v5 = sub_1B2228110();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7 = a1[9];
  *(_QWORD *)(a2 + a1[8]) = 0;
  *(_QWORD *)(a2 + v7) = 0;
  return result;
}

unint64_t sub_1B1CF6D58()
{
  unint64_t result;

  result = qword_1ED4B96A0[0];
  if (!qword_1ED4B96A0[0])
  {
    result = MEMORY[0x1B5E23E74](&unk_1B228CEF0, &type metadata for ScriptCompilerSystem.CompilationHandle);
    atomic_store(result, qword_1ED4B96A0);
  }
  return result;
}

uint64_t sub_1B1CF6D9C(uint64_t isStackAllocationSafe, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_1B1CF6F00((_QWORD *)((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, v5, a2);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = sub_1B1CF6F00((unint64_t *)v10, v7, v5, a2);
    MEMORY[0x1B5E23F88](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_1B1CF6F00(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[32];
  id v24;
  uint64_t v25;
  char v26;
  _BYTE v27[96];
  _BYTE v28[104];
  uint64_t *v29;

  v22 = 0;
  i = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v29 = &v25;
  v21 = a3 + 104;
  if (v10)
    goto LABEL_7;
LABEL_8:
  v14 = i + 1;
  if (i + 1 < v11)
  {
    v15 = *(_QWORD *)(v7 + 8 * v14);
    if (v15)
      goto LABEL_19;
    v14 = i + 2;
    if (i + 2 >= v11)
      return sub_1B1C05D50(a1, a2, v22, a3);
    v15 = *(_QWORD *)(v7 + 8 * v14);
    if (v15)
      goto LABEL_19;
    v14 = i + 3;
    if (i + 3 >= v11)
      return sub_1B1C05D50(a1, a2, v22, a3);
    v15 = *(_QWORD *)(v7 + 8 * v14);
    if (v15)
    {
LABEL_19:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v14 << 6);
      for (i = v14; ; v13 = v12 | (i << 6))
      {
        v16 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v13);
        sub_1B1C1A1D0(*(_QWORD *)(a3 + 56) + 96 * v13, (uint64_t)v28);
        v17 = a4(0);
        sub_1B1C1A1D0((uint64_t)v28, (uint64_t)v27);
        if (v16 == v17)
        {
          sub_1B1C1A1D0((uint64_t)v27, (uint64_t)v23);
          if (v26 == 1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
            goto LABEL_6;
          }
          if (v26 == 2)
          {

LABEL_6:
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v23);
            sub_1B1D12448((uint64_t)v27);
            sub_1B1D12448((uint64_t)v28);
            if (!v10)
              goto LABEL_8;
            goto LABEL_7;
          }
        }
        sub_1B1D12448((uint64_t)v27);
        sub_1B1D12448((uint64_t)v28);
        *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        ++v22;
        if (!v10)
          goto LABEL_8;
LABEL_7:
        v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
      }
    }
    v14 = i + 4;
    if (i + 4 < v11)
    {
      v15 = *(_QWORD *)(v7 + 8 * v14);
      if (!v15)
      {
        do
        {
          if (v11 - 5 == i)
            return sub_1B1C05D50(a1, a2, v22, a3);
          v15 = *(_QWORD *)(v21 + 8 * i++);
        }
        while (!v15);
        v14 = i + 4;
      }
      goto LABEL_19;
    }
  }
  return sub_1B1C05D50(a1, a2, v22, a3);
}

uint64_t sub_1B1CF7148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = 0;
  v3 = a1 + 40;
  v4 = -v1;
  v5 = MEMORY[0x1E0DEE9D8];
  v14 = a1 + 40;
  do
  {
    v15 = v5;
    v6 = (uint64_t *)(v3 + 16 * v2++);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2228890();
      sub_1B1A06460();
      v9 = sub_1B2229274();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
        break;
      v6 += 2;
      swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1)
        return v15;
    }
    v5 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B2029FFC(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v5 = v15;
    }
    v11 = *(_QWORD *)(v5 + 16);
    v10 = *(_QWORD *)(v5 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_1B2029FFC(v10 > 1, v11 + 1, 1);
      v5 = v15;
    }
    *(_QWORD *)(v5 + 16) = v11 + 1;
    v12 = v5 + 16 * v11;
    *(_QWORD *)(v12 + 32) = v7;
    *(_QWORD *)(v12 + 40) = v8;
    v3 = v14;
  }
  while (v4 + v2);
  return v5;
}

uint64_t sub_1B1CF72E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B1CF7308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _DWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  int *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int *v115;
  _UNKNOWN **v116;
  char v117;
  uint64_t v118;
  uint64_t v119;

  v101 = a8;
  v97 = a7;
  v95 = a4;
  v112 = a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20, v21);
  v107 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v91 - v25;
  v27 = type metadata accessor for ScriptIndex();
  v109 = *(_QWORD *)(v27 - 8);
  v110 = v27;
  MEMORY[0x1E0C80A78](v27, v28);
  v30 = (uint64_t *)((char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v31, v32);
  v34 = (uint64_t *)((char *)&v91 - v33);
  v100 = a5;
  sub_1B1D121E4(a5, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v35 = sub_1B1A101F0(a2);
  swift_release();
  v36 = *(_QWORD *)(a6 + 16);
  v99 = a1;
  v98 = a2;
  if (v36 && (v37 = sub_1B1DC3CA4(v35), (v38 & 1) != 0))
  {
    v39 = (_DWORD *)(*(_QWORD *)(a6 + 56) + 8 * v37);
    LODWORD(v40) = *v39;
    v41 = v39[1];
  }
  else
  {
    swift_retain();
    v40 = sub_1B1A101F0(a2);
    swift_release();
    v41 = HIDWORD(v40);
  }
  v94 = type metadata accessor for GraphScript(0);
  sub_1B1D124DC(v112 + *(int *)(v94 + 40), (uint64_t)v26, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v26, 1, v110) == 1)
  {
    swift_retain();
    v42 = sub_1B1A101F0(v98);
    swift_release();
    *v34 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v26);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v26, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v43 = *v30;
    v44 = *(_QWORD *)(a6 + 16);
    v111 = v43;
    if (v44)
    {
      v45 = sub_1B1DC3CA4(v43);
      if ((v47 & 1) != 0)
      {
        *(_QWORD *)&v46 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v45);
        v111 = v46;
      }
    }
    sub_1B1A04628((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v34 = v111;
    swift_storeEnumTagMultiPayload();
  }
  v48 = (uint64_t *)v112;
  v49 = v100;
  v50 = sub_1B1792810(v112, v100, type metadata accessor for GraphScript);
  v51 = sub_1B1C9B394(v50);
  sub_1B1A1B6FC(0, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v53 = v49 + v52[9];
  *(_QWORD *)v53 = v51;
  *(_BYTE *)(v53 + 8) = 0;
  *(_BYTE *)(v49 + v52[10]) = 1;
  *(_QWORD *)(v49 + v52[11]) = 0;
  v54 = v49 + v52[12];
  strcpy((char *)v54, "<precompiled>");
  *(_WORD *)(v54 + 14) = -4864;
  v55 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v49 + v52[13]) = MEMORY[0x1E0DEE9D8];
  v56 = *v48;
  v119 = v55;
  v118 = MEMORY[0x1E0DEE9E8];
  v96 = v15;
  if ((v101 & 1) != 0)
    goto LABEL_15;
  if (v97 < 1029)
  {
    v57 = &unk_1E63BC890;
    goto LABEL_22;
  }
  if ((unint64_t)v97 > 0x408)
  {
LABEL_15:
    if (*(_BYTE *)(v112 + 24) == 1)
      v57 = &unk_1E63BC830;
    else
      v57 = &unk_1E63BC860;
  }
  else
  {
    v57 = &unk_1E63BC800;
  }
LABEL_22:
  v58 = v57[2];
  v108 = v34;
  if (v58)
  {
    *(_QWORD *)&v111 = a13;
    v59 = a11;
    v102 = a12;
    v105 = a9;
    v106 = a10;
    v104 = v40 | (v41 << 32);
    v92 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93 = v57;
    v60 = v57 + 5;
    v61 = (char *)MEMORY[0x1E0DEE9D8];
    v103 = a11;
    while (1)
    {
      v63 = *(v60 - 1);
      v64 = *v60;
      v65 = v107;
      sub_1B1792810((uint64_t)v34, v107, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v65, 0, 1, v110);
      swift_bridgeObjectRetain();
      v66 = sub_1B1B4F2A0(v63, v64, v105, v106, v104, 0x6870617267uLL, 0xE500000000000000, v65);
      v68 = v67;
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v65);
      swift_bridgeObjectRetain();
      sub_1B1B8B368(&v113, v66, v68);
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v112 + 24) == 1)
      {
        if (!(_QWORD)v111
          || (v69 = *(void **)(v111 + 72)) == 0
          || (swift_unknownObjectRetain(),
              v70 = (void *)sub_1B2228728(),
              v71 = objc_msgSend(v69, sel_newFunctionWithName_, v70),
              swift_unknownObjectRelease(),
              v70,
              v59 = v103,
              !v71))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((_QWORD)v111)
          {
            if (qword_1ED4BF430 != -1)
              swift_once();
            v113 = 0;
            v114 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            swift_bridgeObjectRelease();
            v113 = 0xD000000000000028;
            v114 = 0x80000001B2338AB0;
            sub_1B2228890();
            swift_bridgeObjectRelease();
          }
          else
          {
            if (qword_1ED4BF430 != -1)
              swift_once();
            v113 = 0;
            v114 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            sub_1B2228890();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
          }
          v88 = v113;
          v87 = v114;
          v89 = sub_1B2228E90();
          if (qword_1ED4BF658 == -1)
            goto LABEL_56;
          goto LABEL_58;
        }
        swift_bridgeObjectRelease();
        v72 = swift_unknownObjectRetain();
        MEMORY[0x1B5E2064C](v72);
        if (*(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B2228AF4();
        sub_1B2228B30();
        sub_1B2228AD0();
        swift_unknownObjectRelease();
        swift_release();
        v62 = v111;
        swift_retain();
        v34 = v108;
      }
      else
      {
        if (!*(_QWORD *)(v59 + 16))
          goto LABEL_53;
        swift_bridgeObjectRetain();
        v73 = sub_1B1DC3B00(v66, v68);
        if ((v74 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_53:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED4BF430 != -1)
            swift_once();
          v113 = 0;
          v114 = 0xE000000000000000;
          swift_retain();
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v113 = 0xD000000000000022;
          v114 = 0x80000001B2338A10;
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v88 = v113;
          v87 = v114;
          v89 = sub_1B2228E90();
          if (qword_1ED4BF658 == -1)
          {
LABEL_56:
            v113 = 0;
            swift_retain();
            sub_1B1F1AD70(v89, &v113, v88, v87);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return sub_1B1A04628((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
          }
LABEL_58:
          swift_once();
          goto LABEL_56;
        }
        v75 = *(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v73);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v61 = sub_1B1C67944(0, *((_QWORD *)v61 + 2) + 1, 1, v61);
        v34 = v108;
        v77 = *((_QWORD *)v61 + 2);
        v76 = *((_QWORD *)v61 + 3);
        if (v77 >= v76 >> 1)
          v61 = sub_1B1C67944(v76 > 1, v77 + 1, 1, v61);
        *((_QWORD *)v61 + 2) = v77 + 1;
        *(_QWORD *)&v61[8 * v77 + 32] = v75;
        swift_release();
        v62 = v102;
        swift_retain();
        v59 = v103;
      }
      v60 += 2;
      if (!--v58)
      {
        v79 = v119;
        v78 = v92;
        v110 = v62;
        goto LABEL_45;
      }
    }
  }
  v78 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v110 = 0;
  v79 = MEMORY[0x1E0DEE9D8];
  v61 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_45:
  v112 = a15;
  *(_QWORD *)&v111 = a14;
  v80 = v95;
  sub_1B1D121E4(v95, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  swift_bridgeObjectRelease();
  sub_1B1D12220(v100, v80, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v82 = v81;
  v83 = (_QWORD *)(v80 + v81[15]);
  *v83 = v78;
  v83[1] = 0;
  *(_QWORD *)(v80 + v81[9]) = v110;
  *(_QWORD *)(v80 + v81[10]) = v61;
  *(_QWORD *)(v80 + v81[11]) = v79;
  *(_QWORD *)(v80 + v81[12]) = 0;
  *(_BYTE *)(v80 + v81[13]) = 0;
  v84 = v80 + v81[14];
  *(_QWORD *)v84 = v97;
  *(_BYTE *)(v84 + 8) = v101 & 1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v85 = sub_1B1A101F0(v98);
  swift_release();
  v115 = v82;
  v116 = &off_1E637D0A8;
  v86 = sub_1B1A137F4(&v113);
  sub_1B1D12220(v80, (uint64_t)v86, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v117 = 0;
  sub_1B20E19E8((uint64_t)&v113, v94, v85);
  sub_1B1BBAE14(v118);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1B1A04628((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF7F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _DWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  int *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  int *v114;
  _UNKNOWN **v115;
  char v116;
  uint64_t v117;
  uint64_t v118;

  v100 = a8;
  v96 = a7;
  v94 = a4;
  v111 = a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20, v21);
  v106 = (uint64_t)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v90 - v25;
  v27 = type metadata accessor for ScriptIndex();
  v108 = *(_QWORD *)(v27 - 8);
  v109 = v27;
  MEMORY[0x1E0C80A78](v27, v28);
  v30 = (uint64_t *)((char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v31, v32);
  v34 = (uint64_t *)((char *)&v90 - v33);
  v99 = a5;
  sub_1B1D121E4(a5, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v35 = sub_1B1A101F0(a2);
  swift_release();
  v36 = *(_QWORD *)(a6 + 16);
  v98 = a1;
  v97 = a2;
  if (v36 && (v37 = sub_1B1DC3CA4(v35), (v38 & 1) != 0))
  {
    v39 = (_DWORD *)(*(_QWORD *)(a6 + 56) + 8 * v37);
    LODWORD(v40) = *v39;
    v41 = v39[1];
  }
  else
  {
    swift_retain();
    v40 = sub_1B1A101F0(a2);
    swift_release();
    v41 = HIDWORD(v40);
  }
  v93 = type metadata accessor for SimpleScript(0);
  sub_1B1D124DC(v111 + *(int *)(v93 + 36), (uint64_t)v26, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v26, 1, v109) == 1)
  {
    swift_retain();
    v42 = sub_1B1A101F0(v97);
    swift_release();
    *v34 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v26);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v26, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v43 = *v30;
    v44 = *(_QWORD *)(a6 + 16);
    v110 = v43;
    if (v44)
    {
      v45 = sub_1B1DC3CA4(v43);
      if ((v47 & 1) != 0)
      {
        *(_QWORD *)&v46 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v45);
        v110 = v46;
      }
    }
    sub_1B1A04628((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v34 = v110;
    swift_storeEnumTagMultiPayload();
  }
  v48 = (uint64_t *)v111;
  v49 = v99;
  sub_1B1792810(v111, v99, type metadata accessor for SimpleScript);
  v50 = sub_1B1C9CC24();
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v52 = v49 + v51[9];
  *(_QWORD *)v52 = v50;
  *(_BYTE *)(v52 + 8) = 0;
  *(_BYTE *)(v49 + v51[10]) = 1;
  *(_QWORD *)(v49 + v51[11]) = 0;
  v53 = v49 + v51[12];
  strcpy((char *)v53, "<precompiled>");
  *(_WORD *)(v53 + 14) = -4864;
  v54 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v49 + v51[13]) = MEMORY[0x1E0DEE9D8];
  v55 = *v48;
  v118 = v54;
  v117 = MEMORY[0x1E0DEE9E8];
  v95 = v15;
  if ((v100 & 1) != 0)
    goto LABEL_15;
  if (v96 < 1029)
  {
    v56 = &unk_1E63BC950;
    goto LABEL_22;
  }
  if ((unint64_t)v96 > 0x408)
  {
LABEL_15:
    if (*(_BYTE *)(v111 + 32) == 1)
      v56 = &unk_1E63BC8F0;
    else
      v56 = &unk_1E63BC920;
  }
  else
  {
    v56 = &unk_1E63BC8C0;
  }
LABEL_22:
  v57 = v56[2];
  v107 = v34;
  if (v57)
  {
    *(_QWORD *)&v110 = a13;
    v58 = a11;
    v101 = a12;
    v104 = a9;
    v105 = a10;
    v103 = v40 | (v41 << 32);
    v91 = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v92 = v56;
    v59 = v56 + 5;
    v60 = (char *)MEMORY[0x1E0DEE9D8];
    v102 = a11;
    while (1)
    {
      v62 = *(v59 - 1);
      v63 = *v59;
      v64 = v106;
      sub_1B1792810((uint64_t)v34, v106, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v108 + 56))(v64, 0, 1, v109);
      swift_bridgeObjectRetain();
      v65 = sub_1B1B4F2A0(v62, v63, v104, v105, v103, 0x656C706D6973uLL, 0xE600000000000000, v64);
      v67 = v66;
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v64);
      swift_bridgeObjectRetain();
      sub_1B1B8B368(&v112, v65, v67);
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v111 + 32) == 1)
      {
        if (!(_QWORD)v110
          || (v68 = *(void **)(v110 + 72)) == 0
          || (swift_unknownObjectRetain(),
              v69 = (void *)sub_1B2228728(),
              v70 = objc_msgSend(v68, sel_newFunctionWithName_, v69),
              swift_unknownObjectRelease(),
              v69,
              v58 = v102,
              !v70))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((_QWORD)v110)
          {
            if (qword_1ED4BF430 != -1)
              swift_once();
            v112 = 0;
            v113 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            swift_bridgeObjectRelease();
            v112 = 0xD000000000000028;
            v113 = 0x80000001B2338AB0;
            sub_1B2228890();
            swift_bridgeObjectRelease();
          }
          else
          {
            if (qword_1ED4BF430 != -1)
              swift_once();
            v112 = 0;
            v113 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            sub_1B2228890();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
          }
          v87 = v112;
          v86 = v113;
          v88 = sub_1B2228E90();
          if (qword_1ED4BF658 == -1)
            goto LABEL_56;
          goto LABEL_58;
        }
        swift_bridgeObjectRelease();
        v71 = swift_unknownObjectRetain();
        MEMORY[0x1B5E2064C](v71);
        if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B2228AF4();
        sub_1B2228B30();
        sub_1B2228AD0();
        swift_unknownObjectRelease();
        swift_release();
        v61 = v110;
        swift_retain();
        v34 = v107;
      }
      else
      {
        if (!*(_QWORD *)(v58 + 16))
          goto LABEL_53;
        swift_bridgeObjectRetain();
        v72 = sub_1B1DC3B00(v65, v67);
        if ((v73 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_53:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED4BF430 != -1)
            swift_once();
          v112 = 0;
          v113 = 0xE000000000000000;
          swift_retain();
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v112 = 0xD000000000000022;
          v113 = 0x80000001B2338A10;
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v87 = v112;
          v86 = v113;
          v88 = sub_1B2228E90();
          if (qword_1ED4BF658 == -1)
          {
LABEL_56:
            v112 = 0;
            swift_retain();
            sub_1B1F1AD70(v88, &v112, v87, v86);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return sub_1B1A04628((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
          }
LABEL_58:
          swift_once();
          goto LABEL_56;
        }
        v74 = *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v72);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v60 = sub_1B1C67944(0, *((_QWORD *)v60 + 2) + 1, 1, v60);
        v34 = v107;
        v76 = *((_QWORD *)v60 + 2);
        v75 = *((_QWORD *)v60 + 3);
        if (v76 >= v75 >> 1)
          v60 = sub_1B1C67944(v75 > 1, v76 + 1, 1, v60);
        *((_QWORD *)v60 + 2) = v76 + 1;
        *(_QWORD *)&v60[8 * v76 + 32] = v74;
        swift_release();
        v61 = v101;
        swift_retain();
        v58 = v102;
      }
      v59 += 2;
      if (!--v57)
      {
        v78 = v118;
        v77 = v91;
        v109 = v61;
        goto LABEL_45;
      }
    }
  }
  v77 = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v109 = 0;
  v78 = MEMORY[0x1E0DEE9D8];
  v60 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_45:
  v111 = a15;
  *(_QWORD *)&v110 = a14;
  v79 = v94;
  sub_1B1D121E4(v94, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  swift_bridgeObjectRelease();
  sub_1B1D12220(v99, v79, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v81 = v80;
  v82 = (_QWORD *)(v79 + v80[15]);
  *v82 = v77;
  v82[1] = 0;
  *(_QWORD *)(v79 + v80[9]) = v109;
  *(_QWORD *)(v79 + v80[10]) = v60;
  *(_QWORD *)(v79 + v80[11]) = v78;
  *(_QWORD *)(v79 + v80[12]) = 0;
  *(_BYTE *)(v79 + v80[13]) = 0;
  v83 = v79 + v80[14];
  *(_QWORD *)v83 = v96;
  *(_BYTE *)(v83 + 8) = v100 & 1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v84 = sub_1B1A101F0(v97);
  swift_release();
  v114 = v81;
  v115 = &off_1E637D0A8;
  v85 = sub_1B1A137F4(&v112);
  sub_1B1D12220(v79, (uint64_t)v85, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v116 = 0;
  sub_1B20E19E8((uint64_t)&v112, v93, v84);
  sub_1B1BBAE14(v117);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1B1A04628((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF8BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unsigned int *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  unint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  int *v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  __int128 v90;
  unint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;

  v85 = a6;
  v86 = a7;
  v92 = a3;
  v95 = a2;
  sub_1B1B1F358();
  v84 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v83 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B222820C();
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  MEMORY[0x1E0C80A78](v12, v13);
  v80 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v91 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  *(_QWORD *)&v90 = (char *)&v73 - v17;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18, v19);
  v79 = (uint64_t)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (char *)&v73 - v23;
  v89 = type metadata accessor for ScriptIndex();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89, v25);
  v27 = (uint64_t *)((char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (uint64_t *)((char *)&v73 - v30);
  v75 = a1;
  v32 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v33 = sub_1B1A101F0(v32);
  swift_release();
  if (*(_QWORD *)(a5 + 16) && (v34 = sub_1B1DC3CA4(v33), (v35 & 1) != 0))
  {
    v36 = a5;
    v37 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v34);
    v38 = *v37;
    v39 = v37[1];
  }
  else
  {
    v36 = a5;
    swift_retain();
    v38 = sub_1B1A101F0(v32);
    swift_release();
    v39 = HIDWORD(v38);
  }
  v40 = type metadata accessor for MetalFunctionScript(0);
  sub_1B1D124DC(v95 + *(int *)(v40 + 24), (uint64_t)v24, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48))(v24, 1, v89);
  v77 = v39;
  v78 = v38;
  if (v41 == 1)
  {
    swift_retain();
    v42 = sub_1B1A101F0(v32);
    swift_release();
    *v31 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v24);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v24, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v43 = v90;
  sub_1B1792810((uint64_t)v31, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v88 = v31;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B1A04628((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v45 = *v27;
    v46 = *(_QWORD *)(v36 + 16);
    v90 = v45;
    if (v46)
    {
      v47 = sub_1B1DC3CA4(v45);
      if ((v49 & 1) != 0)
      {
        *(_QWORD *)&v48 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v47);
        v90 = v48;
      }
    }
    sub_1B1A04628((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v31 = v90;
    swift_storeEnumTagMultiPayload();
  }
  v50 = v91;
  v51 = *(_QWORD *)(v92 + *((int *)v91 + 10));
  sub_1B1D12220(v92, v43, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v51)
  {
    sub_1B1D121E4(v43, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v52 = (uint64_t)v88;
  }
  else
  {
    v53 = *(_QWORD *)(v43 + *((int *)v50 + 11));
    swift_bridgeObjectRetain();
    sub_1B1D121E4(v43, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    if (v53)
    {
      swift_bridgeObjectRelease();
      v52 = (uint64_t)v88;
    }
    else
    {
      v74 = sub_1B1CAEDF0();
      v54 = *(_QWORD *)(v74 + 16);
      v52 = (uint64_t)v88;
      if (v54)
      {
        v78 = v78 | (v77 << 32);
        v55 = (unint64_t *)(v74 + 40);
        v77 = 0x80000001B2338AE0;
        v76 = xmmword_1B226D240;
        v56 = (uint64_t)v83;
        do
        {
          v95 = v54;
          v57 = *(v55 - 1);
          v58 = *v55;
          v59 = v52;
          v60 = v79;
          sub_1B1792810(v59, v79, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v60, 0, 1, v89);
          swift_bridgeObjectRetain();
          sub_1B1B4F2A0(v57, v58, v85, v86, v78, 0x6C656E72656BuLL, 0xE600000000000000, v60);
          swift_bridgeObjectRelease();
          sub_1B1B596C0(v60);
          if (qword_1ED4BF430 != -1)
            swift_once();
          v93 = 0;
          v94 = 0xE000000000000000;
          v92 = qword_1ED4D0FB0;
          swift_retain();
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v93 = 0xD000000000000022;
          v94 = v77;
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v62 = v93;
          v61 = v94;
          v63 = sub_1B2228E90();
          if (qword_1ED4BF658 != -1)
            swift_once();
          v64 = qword_1ED4D0FD0;
          v65 = qword_1ED4BF688;
          swift_retain();
          if (v65 != -1)
            swift_once();
          v91 = v55 + 2;
          sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v66 = swift_allocObject();
          *(_OWORD *)(v66 + 16) = v76;
          *(_QWORD *)(v66 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v66 + 64) = sub_1B1B1F47C();
          *(_QWORD *)(v66 + 32) = v62;
          *(_QWORD *)(v66 + 40) = v61;
          swift_bridgeObjectRetain();
          v67 = v63;
          sub_1B222835C();
          swift_bridgeObjectRelease();
          swift_retain();
          *(_QWORD *)&v90 = v64;
          v68 = v80;
          sub_1B2228200();
          v69 = v84[12];
          v70 = v84[16];
          v71 = (unint64_t *)(v56 + v84[20]);
          (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v56, v68, v82);
          *(_BYTE *)(v56 + v69) = v67;
          v55 = v91;
          *(_QWORD *)(v56 + v70) = 0;
          *v71 = v62;
          v71[1] = v61;
          swift_bridgeObjectRetain();
          sub_1B2228428();
          swift_release();
          sub_1B1A04628(v56, (uint64_t (*)(_QWORD))sub_1B1B1F358);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          v54 = v95 - 1;
          v52 = (uint64_t)v88;
        }
        while (v95 != 1);
      }
      swift_bridgeObjectRelease();
      sub_1B20F23DC(0);
      sub_1B20F2400(0);
    }
  }
  return sub_1B1A04628(v52, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF9398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _DWORD *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  int EnumCaseMultiPayload;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  int *v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  _QWORD v92[2];
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  unint64_t v113;
  int *v114;
  _UNKNOWN **v115;
  char v116;
  uint64_t v117;
  char *v118;

  v95 = a8;
  v94 = a7;
  v97 = a4;
  v110 = a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)v92 - v26;
  v28 = type metadata accessor for ScriptIndex();
  v108 = *(_QWORD *)(v28 - 8);
  v109 = v28;
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (_QWORD *)((char *)v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v32, v33);
  v107 = (_QWORD *)((char *)v92 - v34);
  v100 = a5;
  sub_1B1D121E4(a5, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v35 = sub_1B1A101F0(a2);
  swift_release();
  v36 = *(_QWORD *)(a6 + 16);
  v99 = a2;
  if (v36 && (v37 = sub_1B1DC3CA4(v35), (v38 & 1) != 0))
  {
    v39 = (_DWORD *)(*(_QWORD *)(a6 + 56) + 8 * v37);
    LODWORD(v40) = *v39;
    v41 = v39[1];
  }
  else
  {
    swift_retain();
    v40 = sub_1B1A101F0(a2);
    swift_release();
    v41 = HIDWORD(v40);
  }
  v93 = type metadata accessor for MetalFunctionScript(0);
  sub_1B1D124DC(v110 + *(int *)(v93 + 24), (uint64_t)v27, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 48))(v27, 1, v109);
  v96 = a1;
  if (v42 == 1)
  {
    swift_retain();
    v43 = sub_1B1A101F0(v99);
    swift_release();
    v44 = v107;
    *v107 = v43;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v27);
  }
  else
  {
    v44 = v107;
    sub_1B1A025EC((uint64_t)v27, (uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v44, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v98 = v15;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B1A04628((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v46 = *v31;
    v47 = *(_QWORD *)(a6 + 16);
    v111 = v46;
    if (v47)
    {
      v48 = sub_1B1DC3CA4(v46);
      if ((v50 & 1) != 0)
      {
        *(_QWORD *)&v49 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v48);
        v111 = v49;
      }
    }
    v51 = v107;
    sub_1B1A04628((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v51 = v111;
    swift_storeEnumTagMultiPayload();
  }
  v52 = v100;
  sub_1B1792810(v110, v100, type metadata accessor for MetalFunctionScript);
  v53 = sub_1B1C9DE80();
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v55 = v52 + v54[9];
  *(_QWORD *)v55 = v53;
  *(_BYTE *)(v55 + 8) = 0;
  *(_BYTE *)(v52 + v54[10]) = 1;
  *(_QWORD *)(v52 + v54[11]) = 0;
  v56 = v52 + v54[12];
  strcpy((char *)v56, "<precompiled>");
  *(_WORD *)(v56 + 14) = -4864;
  v57 = (char *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v52 + v54[13]) = MEMORY[0x1E0DEE9D8];
  v118 = v57;
  v117 = MEMORY[0x1E0DEE9E8];
  v58 = sub_1B1CAEDF0();
  v59 = *(_QWORD *)(v58 + 16);
  if (!v59)
  {
    v60 = 0;
    v62 = v57;
LABEL_37:
    v110 = a14;
    *(_QWORD *)&v111 = a15;
    v79 = v97;
    sub_1B1D121E4(v97, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B1D12220(v100, v79, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v81 = v80;
    *(_BYTE *)(v79 + v80[15]) = 0;
    *(_QWORD *)(v79 + v80[9]) = v60;
    *(_QWORD *)(v79 + v80[10]) = v62;
    *(_QWORD *)(v79 + v80[11]) = v57;
    *(_QWORD *)(v79 + v80[12]) = 0;
    *(_BYTE *)(v79 + v80[13]) = 0;
    v82 = v79 + v80[14];
    *(_QWORD *)v82 = v94;
    *(_BYTE *)(v82 + 8) = v95 & 1;
    swift_retain();
    swift_retain();
    v83 = sub_1B1A101F0(v99);
    swift_release();
    v114 = v81;
    v115 = &off_1E637D0A8;
    v84 = sub_1B1A137F4(&v112);
    sub_1B1D12220(v79, (uint64_t)v84, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v116 = 0;
    sub_1B20E19E8((uint64_t)&v112, v93, v83);
    sub_1B1BBAE14(v117);
    swift_release();
    v63 = v107;
    return sub_1B1A04628((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v60 = 0;
  *(_QWORD *)&v111 = a13;
  v101 = a12;
  v102 = a11;
  v105 = a9;
  v106 = a10;
  v104 = v40 | (v41 << 32);
  v92[1] = v58;
  v61 = (unint64_t *)(v58 + 40);
  v62 = (char *)MEMORY[0x1E0DEE9D8];
  v63 = v107;
  while (1)
  {
    v64 = *(v61 - 1);
    v65 = *v61;
    sub_1B1792810((uint64_t)v63, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v23, 0, 1, v109);
    swift_bridgeObjectRetain();
    v66 = sub_1B1B4F2A0(v64, v65, v105, v106, v104, 0x6C656E72656BuLL, 0xE600000000000000, (uint64_t)v23);
    v68 = v67;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v23);
    swift_bridgeObjectRetain();
    sub_1B1B8B368(&v112, v66, v68);
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v110 + 16) != 1)
      break;
    v103 = v60;
    if (!(_QWORD)v111
      || (v69 = *(void **)(v111 + 72)) == 0
      || (swift_unknownObjectRetain(),
          v70 = (void *)sub_1B2228728(),
          v71 = objc_msgSend(v69, sel_newFunctionWithName_, v70),
          swift_unknownObjectRelease(),
          v70,
          !v71))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((_QWORD)v111)
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v112 = 0;
        v113 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        swift_bridgeObjectRelease();
        v112 = 0xD000000000000028;
        v113 = 0x80000001B2338AB0;
        sub_1B2228890();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v112 = 0;
        v113 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        sub_1B2228890();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
      }
      v86 = v112;
      v85 = v113;
      v87 = sub_1B2228E90();
      if (qword_1ED4BF658 != -1)
        swift_once();
      v112 = 0;
      swift_retain();
      sub_1B1F1AD70(v87, &v112, v86, v85);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v63 = v107;
      return sub_1B1A04628((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    }
    swift_bridgeObjectRelease();
    v72 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v72);
    if (*(_QWORD *)(((unint64_t)v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v118 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    swift_release();
    v60 = v111;
    swift_retain();
    v63 = v107;
LABEL_17:
    v61 += 2;
    if (!--v59)
    {
      v57 = v118;
      goto LABEL_37;
    }
  }
  v73 = v102;
  if (!*(_QWORD *)(v102 + 16))
    goto LABEL_46;
  swift_bridgeObjectRetain();
  v74 = sub_1B1DC3B00(v66, v68);
  if ((v75 & 1) != 0)
  {
    v76 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v74);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v62 = sub_1B1C67944(0, *((_QWORD *)v62 + 2) + 1, 1, v62);
    v78 = *((_QWORD *)v62 + 2);
    v77 = *((_QWORD *)v62 + 3);
    if (v78 >= v77 >> 1)
      v62 = sub_1B1C67944(v77 > 1, v78 + 1, 1, v62);
    *((_QWORD *)v62 + 2) = v78 + 1;
    *(_QWORD *)&v62[8 * v78 + 32] = v76;
    swift_release();
    v60 = v101;
    swift_retain();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
LABEL_46:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED4BF430 != -1)
    swift_once();
  v112 = 0;
  v113 = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v112 = 0xD000000000000022;
  v113 = 0x80000001B2338A10;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v89 = v112;
  v88 = v113;
  v90 = sub_1B2228E90();
  if (qword_1ED4BF658 != -1)
    swift_once();
  v112 = 0;
  swift_retain();
  sub_1B1F1AD70(v90, &v112, v89, v88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1B1A04628((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CF9F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unsigned int *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  unint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  __int128 v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  int *v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  __int128 v90;
  unint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;

  v85 = a6;
  v86 = a7;
  v92 = a3;
  v95 = a2;
  sub_1B1B1F358();
  v84 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v83 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B222820C();
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  MEMORY[0x1E0C80A78](v12, v13);
  v80 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v91 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  *(_QWORD *)&v90 = (char *)&v73 - v17;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18, v19);
  v79 = (uint64_t)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (char *)&v73 - v23;
  v89 = type metadata accessor for ScriptIndex();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89, v25);
  v27 = (uint64_t *)((char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (uint64_t *)((char *)&v73 - v30);
  v75 = a1;
  v32 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v33 = sub_1B1A101F0(v32);
  swift_release();
  if (*(_QWORD *)(a5 + 16) && (v34 = sub_1B1DC3CA4(v33), (v35 & 1) != 0))
  {
    v36 = a5;
    v37 = (unsigned int *)(*(_QWORD *)(a5 + 56) + 8 * v34);
    v38 = *v37;
    v39 = v37[1];
  }
  else
  {
    v36 = a5;
    swift_retain();
    v38 = sub_1B1A101F0(v32);
    swift_release();
    v39 = HIDWORD(v38);
  }
  v40 = type metadata accessor for ShaderScript(0);
  sub_1B1D124DC(v95 + *(int *)(v40 + 24), (uint64_t)v24, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48))(v24, 1, v89);
  v77 = v39;
  v78 = v38;
  if (v41 == 1)
  {
    swift_retain();
    v42 = sub_1B1A101F0(v32);
    swift_release();
    *v31 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v24);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v24, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v43 = v90;
  sub_1B1792810((uint64_t)v31, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v88 = v31;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B1A04628((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v45 = *v27;
    v46 = *(_QWORD *)(v36 + 16);
    v90 = v45;
    if (v46)
    {
      v47 = sub_1B1DC3CA4(v45);
      if ((v49 & 1) != 0)
      {
        *(_QWORD *)&v48 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v47);
        v90 = v48;
      }
    }
    sub_1B1A04628((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v31 = v90;
    swift_storeEnumTagMultiPayload();
  }
  v50 = v91;
  v51 = *(_QWORD *)(v92 + *((int *)v91 + 10));
  sub_1B1D12220(v92, v43, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  if (v51)
  {
    sub_1B1D121E4(v43, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v52 = (uint64_t)v88;
  }
  else
  {
    v53 = *(_QWORD *)(v43 + *((int *)v50 + 11));
    swift_bridgeObjectRetain();
    sub_1B1D121E4(v43, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    if (v53)
    {
      swift_bridgeObjectRelease();
      v52 = (uint64_t)v88;
    }
    else
    {
      v74 = sub_1B1CAEEC4();
      v54 = v74[2];
      v52 = (uint64_t)v88;
      if (v54)
      {
        v78 = v78 | (v77 << 32);
        v55 = v74 + 5;
        v77 = 0x80000001B2338AE0;
        v76 = xmmword_1B226D240;
        v56 = (uint64_t)v83;
        do
        {
          v95 = v54;
          v57 = *(v55 - 1);
          v58 = *v55;
          v59 = v52;
          v60 = v79;
          sub_1B1792810(v59, v79, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v60, 0, 1, v89);
          swift_bridgeObjectRetain();
          sub_1B1B4F2A0(v57, v58, v85, v86, v78, 0x726564616873uLL, 0xE600000000000000, v60);
          swift_bridgeObjectRelease();
          sub_1B1B596C0(v60);
          if (qword_1ED4BF430 != -1)
            swift_once();
          v93 = 0;
          v94 = 0xE000000000000000;
          v92 = qword_1ED4D0FB0;
          swift_retain();
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v93 = 0xD000000000000022;
          v94 = v77;
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v62 = v93;
          v61 = v94;
          v63 = sub_1B2228E90();
          if (qword_1ED4BF658 != -1)
            swift_once();
          v64 = qword_1ED4D0FD0;
          v65 = qword_1ED4BF688;
          swift_retain();
          if (v65 != -1)
            swift_once();
          v91 = v55 + 2;
          sub_1B1D11FE4(0, (unint64_t *)&qword_1ED4BF700, (unint64_t *)&qword_1ED4BF440, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v66 = swift_allocObject();
          *(_OWORD *)(v66 + 16) = v76;
          *(_QWORD *)(v66 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v66 + 64) = sub_1B1B1F47C();
          *(_QWORD *)(v66 + 32) = v62;
          *(_QWORD *)(v66 + 40) = v61;
          swift_bridgeObjectRetain();
          v67 = v63;
          sub_1B222835C();
          swift_bridgeObjectRelease();
          swift_retain();
          *(_QWORD *)&v90 = v64;
          v68 = v80;
          sub_1B2228200();
          v69 = v84[12];
          v70 = v84[16];
          v71 = (unint64_t *)(v56 + v84[20]);
          (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v56, v68, v82);
          *(_BYTE *)(v56 + v69) = v67;
          v55 = v91;
          *(_QWORD *)(v56 + v70) = 0;
          *v71 = v62;
          v71[1] = v61;
          swift_bridgeObjectRetain();
          sub_1B2228428();
          swift_release();
          sub_1B1A04628(v56, (uint64_t (*)(_QWORD))sub_1B1B1F358);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          v54 = v95 - 1;
          v52 = (uint64_t)v88;
        }
        while (v95 != 1);
      }
      swift_bridgeObjectRelease();
      sub_1B20F2394(0);
      sub_1B20F23B8(0);
    }
  }
  return sub_1B1A04628(v52, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CFA6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _DWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  __int128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  unint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  const char *v83;
  uint64_t v84;
  int *v85;
  int *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  _QWORD v96[2];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t *v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  int *v121;
  _UNKNOWN **v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;

  v102 = a8;
  v101 = a7;
  v104 = a4;
  v116 = a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)v96 - v25;
  v117 = type metadata accessor for ScriptIndex();
  v114 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117, v27);
  v29 = (_QWORD *)((char *)v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v30, v31);
  v33 = (_QWORD *)((char *)v96 - v32);
  v108 = a5;
  sub_1B1D121E4(a5, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v34 = sub_1B1A101F0(a2);
  swift_release();
  v35 = *(_QWORD *)(a6 + 16);
  v107 = a2;
  if (v35 && (v36 = sub_1B1DC3CA4(v34), (v37 & 1) != 0))
  {
    v38 = (_DWORD *)(*(_QWORD *)(a6 + 56) + 8 * v36);
    LODWORD(v39) = *v38;
    v40 = v38[1];
  }
  else
  {
    swift_retain();
    v39 = sub_1B1A101F0(a2);
    swift_release();
    v40 = HIDWORD(v39);
  }
  v100 = type metadata accessor for ShaderScript(0);
  sub_1B1D124DC(v116 + *(int *)(v100 + 24), (uint64_t)v26, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v26, 1, v117) == 1)
  {
    swift_retain();
    v41 = sub_1B1A101F0(v107);
    swift_release();
    *v33 = v41;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v26);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v33, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v112 = v33;
  v103 = a1;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B1A04628((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    v45 = v115;
    v44 = v116;
  }
  else
  {
    *(_QWORD *)&v43 = *v29;
    v46 = *(_QWORD *)(a6 + 16);
    v113 = v43;
    if (v46)
    {
      v47 = sub_1B1DC3CA4(v43);
      v45 = v115;
      v44 = v116;
      if ((v49 & 1) != 0)
      {
        *(_QWORD *)&v48 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v47);
        v113 = v48;
      }
    }
    else
    {
      v45 = v115;
      v44 = v116;
    }
    sub_1B1A04628((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v33 = v113;
    swift_storeEnumTagMultiPayload();
  }
  v50 = v108;
  sub_1B1792810(v44, v108, type metadata accessor for ShaderScript);
  v51 = sub_1B1C9EAE8();
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v53 = v50 + v52[9];
  *(_QWORD *)v53 = v51;
  *(_BYTE *)(v53 + 8) = 0;
  *(_BYTE *)(v50 + v52[10]) = 1;
  *(_QWORD *)(v50 + v52[11]) = 0;
  v54 = v50 + v52[12];
  strcpy((char *)v54, "<precompiled>");
  *(_WORD *)(v54 + 14) = -4864;
  v55 = (char *)MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v50 + v52[13]) = MEMORY[0x1E0DEE9D8];
  sub_1B1C9EC44(2, &v119);
  if (v45)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v119 = 0;
    v120 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    v125 = v45;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    sub_1B22295EC();
    v56 = v119;
    v57 = v120;
    v58 = sub_1B2228E90();
    v59 = (uint64_t)v112;
    if (qword_1ED4BF658 != -1)
      swift_once();
    v119 = 0;
    swift_retain();
    sub_1B1F1AD70(v58, (uint64_t *)&v119, v56, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B1A04628(v59, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v99 = 0;
  v98 = v123;
  v97 = v124;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v125 = v55;
  v118 = MEMORY[0x1E0DEE9E8];
  v61 = sub_1B1CAEEC4();
  v62 = v61[2];
  v96[1] = v61;
  v63 = 0;
  if (!v62)
  {
    v65 = v55;
LABEL_44:
    v116 = a14;
    v117 = a15;
    v84 = v104;
    sub_1B1D121E4(v104, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B1D12220(v50, v84, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v86 = v85;
    v87 = (_QWORD *)(v84 + v85[15]);
    v88 = v97;
    *v87 = v98;
    v87[1] = v88;
    *(_QWORD *)(v84 + v85[9]) = v63;
    *(_QWORD *)(v84 + v85[10]) = v65;
    *(_QWORD *)(v84 + v85[11]) = v55;
    *(_QWORD *)(v84 + v85[12]) = 0;
    *(_BYTE *)(v84 + v85[13]) = 0;
    v89 = v84 + v85[14];
    *(_QWORD *)v89 = v101;
    *(_BYTE *)(v89 + 8) = v102 & 1;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v90 = sub_1B1A101F0(v107);
    swift_release();
    v121 = v86;
    v122 = &off_1E637D0A8;
    v91 = sub_1B1A137F4((uint64_t *)&v119);
    sub_1B1D12220(v84, (uint64_t)v91, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v123) = 0;
    sub_1B20E19E8((uint64_t)&v119, v100, v90);
    sub_1B1BBAE14(v118);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v92 = (uint64_t)v112;
    return sub_1B1A04628(v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  *(_QWORD *)&v113 = a13;
  v105 = a12;
  v106 = a11;
  v110 = a9;
  v111 = a10;
  v109 = v39 | (v40 << 32);
  v64 = v61 + 5;
  v65 = (char *)MEMORY[0x1E0DEE9D8];
  v66 = (uint64_t)v112;
  while (1)
  {
    v115 = v63;
    v67 = *(v64 - 1);
    v68 = *v64;
    sub_1B1792810(v66, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v22, 0, 1, v117);
    swift_bridgeObjectRetain();
    v69 = sub_1B1B4F2A0(v67, v68, v110, v111, v109, 0x726564616873uLL, 0xE600000000000000, (uint64_t)v22);
    v71 = v70;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v22);
    swift_bridgeObjectRetain();
    sub_1B1B8B368((uint64_t *)&v119, v69, v71);
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v116 + 16) == 1)
      break;
    v76 = v106;
    if (!*(_QWORD *)(v106 + 16))
      goto LABEL_50;
    swift_bridgeObjectRetain();
    v77 = sub_1B1DC3B00(v69, v71);
    if ((v78 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED4BF430 != -1)
        swift_once();
      v119 = 0;
      v120 = 0xE000000000000000;
      swift_retain();
      sub_1B2229430();
      swift_bridgeObjectRelease();
      v82 = 0xD000000000000022;
      v83 = "couldn't find function for script ";
LABEL_53:
      v119 = v82;
      v120 = (unint64_t)(v83 - 32) | 0x8000000000000000;
      sub_1B2228890();
      swift_bridgeObjectRelease();
      goto LABEL_54;
    }
    v79 = *(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v77);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v65 = sub_1B1C67944(0, *((_QWORD *)v65 + 2) + 1, 1, v65);
    v81 = *((_QWORD *)v65 + 2);
    v80 = *((_QWORD *)v65 + 3);
    if (v81 >= v80 >> 1)
      v65 = sub_1B1C67944(v80 > 1, v81 + 1, 1, v65);
    *((_QWORD *)v65 + 2) = v81 + 1;
    *(_QWORD *)&v65[8 * v81 + 32] = v79;
    swift_release();
    v63 = v105;
LABEL_24:
    swift_retain();
    v64 += 2;
    if (!--v62)
    {
      v55 = v125;
      v50 = v108;
      goto LABEL_44;
    }
  }
  if ((_QWORD)v113)
  {
    v72 = *(void **)(v113 + 72);
    if (v72)
    {
      swift_unknownObjectRetain();
      v73 = (void *)sub_1B2228728();
      v74 = objc_msgSend(v72, sel_newFunctionWithName_, v73);
      swift_unknownObjectRelease();

      v66 = (uint64_t)v112;
      if (v74)
      {
        swift_bridgeObjectRelease();
        v75 = swift_unknownObjectRetain();
        MEMORY[0x1B5E2064C](v75);
        if (*(_QWORD *)(((unint64_t)v125 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v125 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          sub_1B2228AF4();
        sub_1B2228B30();
        sub_1B2228AD0();
        swift_unknownObjectRelease();
        swift_release();
        v63 = (char *)v113;
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((_QWORD)v113)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v119 = 0;
    v120 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    swift_bridgeObjectRelease();
    v82 = 0xD000000000000028;
    v83 = "couldn't find metal function for script ";
    goto LABEL_53;
  }
  if (qword_1ED4BF430 != -1)
    swift_once();
  v119 = 0;
  v120 = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  sub_1B2228890();
  sub_1B2228890();
  swift_bridgeObjectRelease();
  sub_1B2228890();
LABEL_54:
  v94 = v119;
  v93 = v120;
  v95 = sub_1B2228E90();
  if (qword_1ED4BF658 != -1)
    swift_once();
  v119 = 0;
  swift_retain();
  sub_1B1F1AD70(v95, (uint64_t *)&v119, v94, v93);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v92 = v66;
  return sub_1B1A04628(v92, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CFB3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned int *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  char v54;
  _BYTE *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  _BYTE *v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  int *v90;
  int *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  _QWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t *v121;
  __int128 v122;
  char *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int *v130;
  _UNKNOWN **v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;

  v115 = a8;
  v114 = a7;
  v111 = a4;
  v124 = (_BYTE *)a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)v105 - v26;
  v28 = type metadata accessor for ScriptIndex();
  v125 = *(_QWORD *)(v28 - 8);
  v126 = v28;
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (_QWORD *)((char *)v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v32, v33);
  v121 = (_QWORD *)((char *)v105 - v34);
  v117 = a5;
  sub_1B1D121E4(a5, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v35 = sub_1B1A101F0(a2);
  swift_release();
  v36 = *(_QWORD *)(a6 + 16);
  v116 = a2;
  if (v36 && (v37 = sub_1B1DC3CA4(v35), (v38 & 1) != 0))
  {
    v39 = (unsigned int *)(*(_QWORD *)(a6 + 56) + 8 * v37);
    v40 = v39[1];
    v123 = (char *)*v39;
  }
  else
  {
    swift_retain();
    v41 = sub_1B1A101F0(a2);
    swift_release();
    v123 = (char *)v41;
    v40 = HIDWORD(v41);
  }
  v109 = type metadata accessor for EmitterScript(0);
  sub_1B1D124DC((uint64_t)&v124[*(int *)(v109 + 32)], (uint64_t)v27, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48))(v27, 1, v126);
  v110 = a1;
  if (v42 == 1)
  {
    swift_retain();
    v43 = sub_1B1A101F0(v116);
    swift_release();
    v44 = v121;
    *v121 = v43;
    swift_storeEnumTagMultiPayload();
    v45 = (uint64_t)v27;
    v46 = v44;
    sub_1B1B596C0(v45);
  }
  else
  {
    v47 = (uint64_t)v27;
    v46 = v121;
    sub_1B1A025EC(v47, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v46, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v50 = v117;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B1A04628((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v49 = *v31;
    v51 = *(_QWORD *)(a6 + 16);
    v122 = v49;
    if (v51)
    {
      v52 = sub_1B1DC3CA4(v49);
      if ((v54 & 1) != 0)
      {
        *(_QWORD *)&v53 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v52);
        v122 = v53;
      }
    }
    sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v46 = v122;
    swift_storeEnumTagMultiPayload();
  }
  v55 = v124;
  sub_1B1792810((uint64_t)v124, v50, type metadata accessor for EmitterScript);
  v56 = sub_1B1C9BDCC();
  sub_1B1A1B6FC(0, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v58 = v50 + v57[9];
  *(_QWORD *)v58 = v56;
  *(_BYTE *)(v58 + 8) = 0;
  *(_BYTE *)(v50 + v57[10]) = 1;
  *(_QWORD *)(v50 + v57[11]) = 0;
  v59 = v50 + v57[12];
  strcpy((char *)v59, "<precompiled>");
  *(_WORD *)(v59 + 14) = -4864;
  v60 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v50 + v57[13]) = MEMORY[0x1E0DEE9D8];
  sub_1B1C9BF0C(2, &v128);
  if (v15)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v128 = 0;
    v129 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    v134 = (unint64_t)v15;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    sub_1B22295EC();
    v61 = v128;
    v62 = v129;
    v63 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v128 = 0;
    swift_retain();
    sub_1B1F1AD70(v63, &v128, v61, v62);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v106 = v132;
  v107 = v133;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v134 = v60;
  v127 = MEMORY[0x1E0DEE9E8];
  v65 = v55;
  if ((v115 & 1) != 0)
    goto LABEL_21;
  if (v114 >= 1029)
  {
    if ((unint64_t)v114 > 0x408)
    {
LABEL_21:
      if (*v55 == 1)
        v66 = &unk_1E63BC9B0;
      else
        v66 = &unk_1E63BC9E0;
      goto LABEL_28;
    }
    v66 = &unk_1E63BC980;
  }
  else
  {
    v66 = &unk_1E63BCA10;
  }
LABEL_28:
  v108 = 0;
  v67 = v66[2];
  if (!v67)
  {
    swift_bridgeObjectRetain();
    v86 = 0;
    v87 = MEMORY[0x1E0DEE9D8];
    v88 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_52:
    v125 = a14;
    v126 = a15;
    v89 = v111;
    sub_1B1D121E4(v111, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B1D12220(v117, v89, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v91 = v90;
    v92 = (_QWORD *)(v89 + v90[15]);
    v93 = v107;
    *v92 = v106;
    v92[1] = v93;
    *(_QWORD *)(v89 + v90[9]) = v86;
    *(_QWORD *)(v89 + v90[10]) = v88;
    *(_QWORD *)(v89 + v90[11]) = v87;
    *(_QWORD *)(v89 + v90[12]) = 0;
    *(_BYTE *)(v89 + v90[13]) = 0;
    v94 = v89 + v90[14];
    *(_QWORD *)v94 = v114;
    *(_BYTE *)(v94 + 8) = v115 & 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v95 = sub_1B1A101F0(v116);
    swift_release();
    v130 = v91;
    v131 = &off_1E637D0A8;
    v96 = sub_1B1A137F4(&v128);
    sub_1B1D12220(v89, (uint64_t)v96, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v132) = 0;
    sub_1B20E19E8((uint64_t)&v128, v109, v95);
    sub_1B1BBAE14(v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v97 = v121;
    return sub_1B1A04628((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  *(_QWORD *)&v122 = a13;
  v112 = a12;
  v113 = a11;
  v119 = a9;
  v120 = a10;
  v118 = v123 | (v40 << 32);
  swift_bridgeObjectRetain();
  v105[1] = v66;
  v68 = v66 + 5;
  v123 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v70 = *(v68 - 1);
    v71 = *v68;
    sub_1B1792810((uint64_t)v46, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v23, 0, 1, v126);
    swift_bridgeObjectRetain();
    v72 = sub_1B1B4F2A0(v70, v71, v119, v120, v118, 0x72657474696D65uLL, 0xE700000000000000, (uint64_t)v23);
    v74 = v73;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v23);
    swift_bridgeObjectRetain();
    sub_1B1B8B368(&v128, v72, v74);
    swift_bridgeObjectRelease();
    if (*v65 != 1)
      break;
    if (!(_QWORD)v122
      || (v75 = *(void **)(v122 + 72)) == 0
      || (swift_unknownObjectRetain(),
          v76 = (void *)sub_1B2228728(),
          v77 = objc_msgSend(v75, sel_newFunctionWithName_, v76),
          swift_unknownObjectRelease(),
          v76,
          v65 = v124,
          !v77))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((_QWORD)v122)
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v128 = 0;
        v129 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        swift_bridgeObjectRelease();
        v128 = 0xD000000000000028;
        v129 = 0x80000001B2338AB0;
        sub_1B2228890();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v128 = 0;
        v129 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        sub_1B2228890();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
      }
      v99 = v128;
      v98 = v129;
      v100 = sub_1B2228E90();
      v101 = v121;
      if (qword_1ED4BF658 != -1)
        swift_once();
      v128 = 0;
      swift_retain();
      sub_1B1F1AD70(v100, &v128, v99, v98);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97 = v101;
      return sub_1B1A04628((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    }
    swift_bridgeObjectRelease();
    v78 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v78);
    if (*(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    swift_release();
    v69 = v122;
    swift_retain();
    v46 = v121;
LABEL_31:
    v68 += 2;
    if (!--v67)
    {
      v87 = v134;
      v86 = v69;
      v88 = v123;
      goto LABEL_52;
    }
  }
  v79 = v113;
  if (!*(_QWORD *)(v113 + 16))
    goto LABEL_62;
  swift_bridgeObjectRetain();
  v80 = sub_1B1DC3B00(v72, v74);
  if ((v81 & 1) != 0)
  {
    v82 = *(_QWORD *)(*(_QWORD *)(v79 + 56) + 8 * v80);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v83 = v123;
    else
      v83 = sub_1B1C67944(0, *((_QWORD *)v123 + 2) + 1, 1, v123);
    v85 = *((_QWORD *)v83 + 2);
    v84 = *((_QWORD *)v83 + 3);
    if (v85 >= v84 >> 1)
      v83 = sub_1B1C67944(v84 > 1, v85 + 1, 1, v83);
    *((_QWORD *)v83 + 2) = v85 + 1;
    v123 = v83;
    *(_QWORD *)&v83[8 * v85 + 32] = v82;
    swift_release();
    v69 = v112;
    swift_retain();
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_62:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED4BF430 != -1)
    swift_once();
  v128 = 0;
  v129 = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v128 = 0xD000000000000022;
  v129 = 0x80000001B2338A10;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v103 = v128;
  v102 = v129;
  v104 = sub_1B2228E90();
  if (qword_1ED4BF658 != -1)
    swift_once();
  v128 = 0;
  swift_retain();
  sub_1B1F1AD70(v104, &v128, v103, v102);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CFC224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned int *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  char v54;
  _BYTE *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  _BYTE *v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  int *v90;
  int *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  _QWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t inited;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t *v121;
  __int128 v122;
  char *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int *v130;
  _UNKNOWN **v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;

  v115 = a8;
  v114 = a7;
  v111 = a4;
  v124 = (_BYTE *)a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)v105 - v26;
  v28 = type metadata accessor for ScriptIndex();
  v125 = *(_QWORD *)(v28 - 8);
  v126 = v28;
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (_QWORD *)((char *)v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v32, v33);
  v121 = (_QWORD *)((char *)v105 - v34);
  v117 = a5;
  sub_1B1D121E4(a5, (unint64_t *)&unk_1ED4B9630, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v35 = sub_1B1A101F0(a2);
  swift_release();
  v36 = *(_QWORD *)(a6 + 16);
  v116 = a2;
  if (v36 && (v37 = sub_1B1DC3CA4(v35), (v38 & 1) != 0))
  {
    v39 = (unsigned int *)(*(_QWORD *)(a6 + 56) + 8 * v37);
    v40 = v39[1];
    v123 = (char *)*v39;
  }
  else
  {
    swift_retain();
    v41 = sub_1B1A101F0(a2);
    swift_release();
    v123 = (char *)v41;
    v40 = HIDWORD(v41);
  }
  inited = type metadata accessor for ParticleInitScript(0);
  sub_1B1D124DC((uint64_t)&v124[*(int *)(inited + 36)], (uint64_t)v27, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48))(v27, 1, v126);
  v110 = a1;
  if (v42 == 1)
  {
    swift_retain();
    v43 = sub_1B1A101F0(v116);
    swift_release();
    v44 = v121;
    *v121 = v43;
    swift_storeEnumTagMultiPayload();
    v45 = (uint64_t)v27;
    v46 = v44;
    sub_1B1B596C0(v45);
  }
  else
  {
    v47 = (uint64_t)v27;
    v46 = v121;
    sub_1B1A025EC(v47, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v46, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v50 = v117;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B1A04628((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v49 = *v31;
    v51 = *(_QWORD *)(a6 + 16);
    v122 = v49;
    if (v51)
    {
      v52 = sub_1B1DC3CA4(v49);
      if ((v54 & 1) != 0)
      {
        *(_QWORD *)&v53 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v52);
        v122 = v53;
      }
    }
    sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v46 = v122;
    swift_storeEnumTagMultiPayload();
  }
  v55 = v124;
  sub_1B1792810((uint64_t)v124, v50, type metadata accessor for ParticleInitScript);
  v56 = sub_1B1C98FC0();
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9630, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v58 = v50 + v57[9];
  *(_QWORD *)v58 = v56;
  *(_BYTE *)(v58 + 8) = 0;
  *(_BYTE *)(v50 + v57[10]) = 1;
  *(_QWORD *)(v50 + v57[11]) = 0;
  v59 = v50 + v57[12];
  strcpy((char *)v59, "<precompiled>");
  *(_WORD *)(v59 + 14) = -4864;
  v60 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v50 + v57[13]) = MEMORY[0x1E0DEE9D8];
  sub_1B1C993B8(2u, &v128);
  if (v15)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v128 = 0;
    v129 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    v134 = (unint64_t)v15;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    sub_1B22295EC();
    v61 = v128;
    v62 = v129;
    v63 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v128 = 0;
    swift_retain();
    sub_1B1F1AD70(v63, &v128, v61, v62);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v106 = v132;
  v107 = v133;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v134 = v60;
  v127 = MEMORY[0x1E0DEE9E8];
  v65 = v55;
  if ((v115 & 1) != 0)
    goto LABEL_21;
  if (v114 >= 1029)
  {
    if ((unint64_t)v114 > 0x408)
    {
LABEL_21:
      if (*v55 == 1)
        v66 = &unk_1E63BC6B0;
      else
        v66 = &unk_1E63BC6E0;
      goto LABEL_28;
    }
    v66 = &unk_1E63BC680;
  }
  else
  {
    v66 = &unk_1E63BC710;
  }
LABEL_28:
  v108 = 0;
  v67 = v66[2];
  if (!v67)
  {
    swift_bridgeObjectRetain();
    v86 = 0;
    v87 = MEMORY[0x1E0DEE9D8];
    v88 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_52:
    v125 = a14;
    v126 = a15;
    v89 = v111;
    sub_1B1D121E4(v111, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B1D12220(v117, v89, (unint64_t *)&unk_1ED4B9630, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B1A1B6FC(0, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v91 = v90;
    v92 = (_QWORD *)(v89 + v90[15]);
    v93 = v107;
    *v92 = v106;
    v92[1] = v93;
    *(_QWORD *)(v89 + v90[9]) = v86;
    *(_QWORD *)(v89 + v90[10]) = v88;
    *(_QWORD *)(v89 + v90[11]) = v87;
    *(_QWORD *)(v89 + v90[12]) = 0;
    *(_BYTE *)(v89 + v90[13]) = 0;
    v94 = v89 + v90[14];
    *(_QWORD *)v94 = v114;
    *(_BYTE *)(v94 + 8) = v115 & 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v95 = sub_1B1A101F0(v116);
    swift_release();
    v130 = v91;
    v131 = &off_1E637D0A8;
    v96 = sub_1B1A137F4(&v128);
    sub_1B1D12220(v89, (uint64_t)v96, &qword_1ED4B8890, type metadata accessor for ParticleInitScript, (uint64_t)&off_1ED4BCD90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v132) = 0;
    sub_1B20E19E8((uint64_t)&v128, inited, v95);
    sub_1B1BBAE14(v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v97 = v121;
    return sub_1B1A04628((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  *(_QWORD *)&v122 = a13;
  v112 = a12;
  v113 = a11;
  v119 = a9;
  v120 = a10;
  v118 = v123 | (v40 << 32);
  swift_bridgeObjectRetain();
  v105[1] = v66;
  v68 = v66 + 5;
  v123 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v70 = *(v68 - 1);
    v71 = *v68;
    sub_1B1792810((uint64_t)v46, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v23, 0, 1, v126);
    swift_bridgeObjectRetain();
    v72 = sub_1B1B4F2A0(v70, v71, v119, v120, v118, 0x656C636974726170uLL, 0xEC00000074696E49, (uint64_t)v23);
    v74 = v73;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v23);
    swift_bridgeObjectRetain();
    sub_1B1B8B368(&v128, v72, v74);
    swift_bridgeObjectRelease();
    if (*v65 != 1)
      break;
    if (!(_QWORD)v122
      || (v75 = *(void **)(v122 + 72)) == 0
      || (swift_unknownObjectRetain(),
          v76 = (void *)sub_1B2228728(),
          v77 = objc_msgSend(v75, sel_newFunctionWithName_, v76),
          swift_unknownObjectRelease(),
          v76,
          v65 = v124,
          !v77))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((_QWORD)v122)
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v128 = 0;
        v129 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        swift_bridgeObjectRelease();
        v128 = 0xD000000000000028;
        v129 = 0x80000001B2338AB0;
        sub_1B2228890();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v128 = 0;
        v129 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        sub_1B2228890();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
      }
      v99 = v128;
      v98 = v129;
      v100 = sub_1B2228E90();
      v101 = v121;
      if (qword_1ED4BF658 != -1)
        swift_once();
      v128 = 0;
      swift_retain();
      sub_1B1F1AD70(v100, &v128, v99, v98);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97 = v101;
      return sub_1B1A04628((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    }
    swift_bridgeObjectRelease();
    v78 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v78);
    if (*(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    swift_release();
    v69 = v122;
    swift_retain();
    v46 = v121;
LABEL_31:
    v68 += 2;
    if (!--v67)
    {
      v87 = v134;
      v86 = v69;
      v88 = v123;
      goto LABEL_52;
    }
  }
  v79 = v113;
  if (!*(_QWORD *)(v113 + 16))
    goto LABEL_62;
  swift_bridgeObjectRetain();
  v80 = sub_1B1DC3B00(v72, v74);
  if ((v81 & 1) != 0)
  {
    v82 = *(_QWORD *)(*(_QWORD *)(v79 + 56) + 8 * v80);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v83 = v123;
    else
      v83 = sub_1B1C67944(0, *((_QWORD *)v123 + 2) + 1, 1, v123);
    v85 = *((_QWORD *)v83 + 2);
    v84 = *((_QWORD *)v83 + 3);
    if (v85 >= v84 >> 1)
      v83 = sub_1B1C67944(v84 > 1, v85 + 1, 1, v83);
    *((_QWORD *)v83 + 2) = v85 + 1;
    v123 = v83;
    *(_QWORD *)&v83[8 * v85 + 32] = v82;
    swift_release();
    v69 = v112;
    swift_retain();
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_62:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED4BF430 != -1)
    swift_once();
  v128 = 0;
  v129 = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v128 = 0xD000000000000022;
  v129 = 0x80000001B2338A10;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v103 = v128;
  v102 = v129;
  v104 = sub_1B2228E90();
  if (qword_1ED4BF658 != -1)
    swift_once();
  v128 = 0;
  swift_retain();
  sub_1B1F1AD70(v104, &v128, v103, v102);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CFD06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned int *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  int *v90;
  int *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  _QWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t updated;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t *v121;
  __int128 v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int *v130;
  _UNKNOWN **v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;

  v115 = a8;
  v114 = a7;
  v111 = a4;
  v124 = a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)v105 - v26;
  v28 = type metadata accessor for ScriptIndex();
  v125 = *(_QWORD *)(v28 - 8);
  v126 = v28;
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (_QWORD *)((char *)v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v32, v33);
  v121 = (_QWORD *)((char *)v105 - v34);
  v117 = a5;
  sub_1B1D121E4(a5, &qword_1ED4B9640, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v35 = sub_1B1A101F0(a2);
  swift_release();
  v36 = *(_QWORD *)(a6 + 16);
  v116 = a2;
  if (v36 && (v37 = sub_1B1DC3CA4(v35), (v38 & 1) != 0))
  {
    v39 = (unsigned int *)(*(_QWORD *)(a6 + 56) + 8 * v37);
    v40 = v39[1];
    v123 = (char *)*v39;
  }
  else
  {
    swift_retain();
    v41 = sub_1B1A101F0(a2);
    swift_release();
    v123 = (char *)v41;
    v40 = HIDWORD(v41);
  }
  updated = type metadata accessor for ParticleUpdateScript(0);
  sub_1B1D124DC(v124 + *(int *)(updated + 36), (uint64_t)v27, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48))(v27, 1, v126);
  v110 = a1;
  if (v42 == 1)
  {
    swift_retain();
    v43 = sub_1B1A101F0(v116);
    swift_release();
    v44 = v121;
    *v121 = v43;
    swift_storeEnumTagMultiPayload();
    v45 = (uint64_t)v27;
    v46 = v44;
    sub_1B1B596C0(v45);
  }
  else
  {
    v47 = (uint64_t)v27;
    v46 = v121;
    sub_1B1A025EC(v47, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v46, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v50 = v117;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1B1A04628((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v49 = *v31;
    v51 = *(_QWORD *)(a6 + 16);
    v122 = v49;
    if (v51)
    {
      v52 = sub_1B1DC3CA4(v49);
      if ((v54 & 1) != 0)
      {
        *(_QWORD *)&v53 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v52);
        v122 = v53;
      }
    }
    sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v46 = v122;
    swift_storeEnumTagMultiPayload();
  }
  v55 = v124;
  sub_1B1792810(v124, v50, type metadata accessor for ParticleUpdateScript);
  v56 = sub_1B1C999A0();
  sub_1B1A1B6FC(0, &qword_1ED4B9640, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v58 = v50 + v57[9];
  *(_QWORD *)v58 = v56;
  *(_BYTE *)(v58 + 8) = 0;
  *(_BYTE *)(v50 + v57[10]) = 1;
  *(_QWORD *)(v50 + v57[11]) = 0;
  v59 = v50 + v57[12];
  strcpy((char *)v59, "<precompiled>");
  *(_WORD *)(v59 + 14) = -4864;
  v60 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v50 + v57[13]) = MEMORY[0x1E0DEE9D8];
  sub_1B1C99D7C(2u, &v128);
  if (v15)
  {
    if (qword_1ED4BF430 != -1)
      swift_once();
    v128 = 0;
    v129 = 0xE000000000000000;
    swift_retain();
    sub_1B2229430();
    sub_1B2228890();
    sub_1B2228890();
    sub_1B2228890();
    v134 = (unint64_t)v15;
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4BB030);
    sub_1B22295EC();
    v61 = v128;
    v62 = v129;
    v63 = sub_1B2228E90();
    if (qword_1ED4BF658 != -1)
      swift_once();
    v128 = 0;
    swift_retain();
    sub_1B1F1AD70(v63, &v128, v61, v62);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  v106 = v132;
  v107 = v133;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v134 = v60;
  v127 = MEMORY[0x1E0DEE9E8];
  v65 = v55;
  if ((v115 & 1) != 0)
    goto LABEL_21;
  if (v114 >= 1029)
  {
    if ((unint64_t)v114 > 0x408)
    {
LABEL_21:
      if (*(_BYTE *)(v55 + 24) == 1)
        v66 = &unk_1E63BC770;
      else
        v66 = &unk_1E63BC7A0;
      goto LABEL_28;
    }
    v66 = &unk_1E63BC740;
  }
  else
  {
    v66 = &unk_1E63BC7D0;
  }
LABEL_28:
  v108 = 0;
  v67 = v66[2];
  if (!v67)
  {
    swift_bridgeObjectRetain();
    v86 = 0;
    v87 = MEMORY[0x1E0DEE9D8];
    v88 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_52:
    v125 = a14;
    v126 = a15;
    v89 = v111;
    sub_1B1D121E4(v111, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    swift_bridgeObjectRelease();
    sub_1B1D12220(v117, v89, &qword_1ED4B9640, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    sub_1B1A1B6FC(0, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v91 = v90;
    v92 = (_QWORD *)(v89 + v90[15]);
    v93 = v107;
    *v92 = v106;
    v92[1] = v93;
    *(_QWORD *)(v89 + v90[9]) = v86;
    *(_QWORD *)(v89 + v90[10]) = v88;
    *(_QWORD *)(v89 + v90[11]) = v87;
    *(_QWORD *)(v89 + v90[12]) = 0;
    *(_BYTE *)(v89 + v90[13]) = 0;
    v94 = v89 + v90[14];
    *(_QWORD *)v94 = v114;
    *(_BYTE *)(v94 + 8) = v115 & 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v95 = sub_1B1A101F0(v116);
    swift_release();
    v130 = v91;
    v131 = &off_1E637D0A8;
    v96 = sub_1B1A137F4(&v128);
    sub_1B1D12220(v89, (uint64_t)v96, &qword_1ED4B88A0, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1ED4BD280, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    LOBYTE(v132) = 0;
    sub_1B20E19E8((uint64_t)&v128, updated, v95);
    sub_1B1BBAE14(v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v97 = v121;
    return sub_1B1A04628((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  *(_QWORD *)&v122 = a13;
  v112 = a12;
  v113 = a11;
  v119 = a9;
  v120 = a10;
  v118 = v123 | (v40 << 32);
  swift_bridgeObjectRetain();
  v105[1] = v66;
  v68 = v66 + 5;
  v123 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v70 = *(v68 - 1);
    v71 = *v68;
    sub_1B1792810((uint64_t)v46, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v23, 0, 1, v126);
    swift_bridgeObjectRetain();
    v72 = sub_1B1B4F2A0(v70, v71, v119, v120, v118, 0x656C636974726170uLL, 0xEE00657461647055, (uint64_t)v23);
    v74 = v73;
    swift_bridgeObjectRelease();
    sub_1B1B596C0((uint64_t)v23);
    swift_bridgeObjectRetain();
    sub_1B1B8B368(&v128, v72, v74);
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v65 + 24) != 1)
      break;
    if (!(_QWORD)v122
      || (v75 = *(void **)(v122 + 72)) == 0
      || (swift_unknownObjectRetain(),
          v76 = (void *)sub_1B2228728(),
          v77 = objc_msgSend(v75, sel_newFunctionWithName_, v76),
          swift_unknownObjectRelease(),
          v76,
          v65 = v124,
          !v77))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((_QWORD)v122)
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v128 = 0;
        v129 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        swift_bridgeObjectRelease();
        v128 = 0xD000000000000028;
        v129 = 0x80000001B2338AB0;
        sub_1B2228890();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED4BF430 != -1)
          swift_once();
        v128 = 0;
        v129 = 0xE000000000000000;
        swift_retain();
        sub_1B2229430();
        sub_1B2228890();
        sub_1B2228890();
        swift_bridgeObjectRelease();
        sub_1B2228890();
      }
      v99 = v128;
      v98 = v129;
      v100 = sub_1B2228E90();
      v101 = v121;
      if (qword_1ED4BF658 != -1)
        swift_once();
      v128 = 0;
      swift_retain();
      sub_1B1F1AD70(v100, &v128, v99, v98);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97 = v101;
      return sub_1B1A04628((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    }
    swift_bridgeObjectRelease();
    v78 = swift_unknownObjectRetain();
    MEMORY[0x1B5E2064C](v78);
    if (*(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B2228AF4();
    sub_1B2228B30();
    sub_1B2228AD0();
    swift_unknownObjectRelease();
    swift_release();
    v69 = v122;
    swift_retain();
    v46 = v121;
LABEL_31:
    v68 += 2;
    if (!--v67)
    {
      v87 = v134;
      v86 = v69;
      v88 = v123;
      goto LABEL_52;
    }
  }
  v79 = v113;
  if (!*(_QWORD *)(v113 + 16))
    goto LABEL_62;
  swift_bridgeObjectRetain();
  v80 = sub_1B1DC3B00(v72, v74);
  if ((v81 & 1) != 0)
  {
    v82 = *(_QWORD *)(*(_QWORD *)(v79 + 56) + 8 * v80);
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v83 = v123;
    else
      v83 = sub_1B1C67944(0, *((_QWORD *)v123 + 2) + 1, 1, v123);
    v85 = *((_QWORD *)v83 + 2);
    v84 = *((_QWORD *)v83 + 3);
    if (v85 >= v84 >> 1)
      v83 = sub_1B1C67944(v84 > 1, v85 + 1, 1, v83);
    *((_QWORD *)v83 + 2) = v85 + 1;
    v123 = v83;
    *(_QWORD *)&v83[8 * v85 + 32] = v82;
    swift_release();
    v69 = v112;
    swift_retain();
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_62:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED4BF430 != -1)
    swift_once();
  v128 = 0;
  v129 = 0xE000000000000000;
  swift_retain();
  sub_1B2229430();
  swift_bridgeObjectRelease();
  v128 = 0xD000000000000022;
  v129 = 0x80000001B2338A10;
  sub_1B2228890();
  swift_bridgeObjectRelease();
  v103 = v128;
  v102 = v129;
  v104 = sub_1B2228E90();
  if (qword_1ED4BF658 != -1)
    swift_once();
  v128 = 0;
  swift_retain();
  sub_1B1F1AD70(v104, &v128, v103, v102);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B1A04628((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

uint64_t sub_1B1CFDEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _DWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  int *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int *v115;
  _UNKNOWN **v116;
  char v117;
  uint64_t v118;
  uint64_t v119;

  v101 = a8;
  v97 = a7;
  v95 = a4;
  v112 = a3;
  sub_1B1791524(0, qword_1ED4B7E00, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20, v21);
  v107 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char *)&v91 - v25;
  v27 = type metadata accessor for ScriptIndex();
  v109 = *(_QWORD *)(v27 - 8);
  v110 = v27;
  MEMORY[0x1E0C80A78](v27, v28);
  v30 = (uint64_t *)((char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v31, v32);
  v34 = (uint64_t *)((char *)&v91 - v33);
  v100 = a5;
  sub_1B1D121E4(a5, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  swift_retain();
  v35 = sub_1B1A101F0(a2);
  swift_release();
  v36 = *(_QWORD *)(a6 + 16);
  v99 = a1;
  v98 = a2;
  if (v36 && (v37 = sub_1B1DC3CA4(v35), (v38 & 1) != 0))
  {
    v39 = (_DWORD *)(*(_QWORD *)(a6 + 56) + 8 * v37);
    LODWORD(v40) = *v39;
    v41 = v39[1];
  }
  else
  {
    swift_retain();
    v40 = sub_1B1A101F0(a2);
    swift_release();
    v41 = HIDWORD(v40);
  }
  v94 = type metadata accessor for TriggerScript(0);
  sub_1B1D124DC(v112 + *(int *)(v94 + 40), (uint64_t)v26, (uint64_t)qword_1ED4B7E00, (uint64_t)type metadata accessor for ScriptIndex, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1B1791524);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v26, 1, v110) == 1)
  {
    swift_retain();
    v42 = sub_1B1A101F0(v98);
    swift_release();
    *v34 = v42;
    swift_storeEnumTagMultiPayload();
    sub_1B1B596C0((uint64_t)v26);
  }
  else
  {
    sub_1B1A025EC((uint64_t)v26, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  sub_1B1792810((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B1A04628((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
  }
  else
  {
    *(_QWORD *)&v43 = *v30;
    v44 = *(_QWORD *)(a6 + 16);
    v111 = v43;
    if (v44)
    {
      v45 = sub_1B1DC3CA4(v43);
      if ((v47 & 1) != 0)
      {
        *(_QWORD *)&v46 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v45);
        v111 = v46;
      }
    }
    sub_1B1A04628((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
    *v34 = v111;
    swift_storeEnumTagMultiPayload();
  }
  v48 = (uint64_t *)v112;
  v49 = v100;
  v50 = sub_1B1792810(v112, v100, type metadata accessor for TriggerScript);
  v51 = sub_1B1C9B394(v50);
  sub_1B1A1B6FC(0, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v53 = v49 + v52[9];
  *(_QWORD *)v53 = v51;
  *(_BYTE *)(v53 + 8) = 0;
  *(_BYTE *)(v49 + v52[10]) = 1;
  *(_QWORD *)(v49 + v52[11]) = 0;
  v54 = v49 + v52[12];
  strcpy((char *)v54, "<precompiled>");
  *(_WORD *)(v54 + 14) = -4864;
  v55 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v49 + v52[13]) = MEMORY[0x1E0DEE9D8];
  v56 = *v48;
  v119 = v55;
  v118 = MEMORY[0x1E0DEE9E8];
  v96 = v15;
  if ((v101 & 1) != 0)
    goto LABEL_15;
  if (v97 < 1029)
  {
    v57 = &unk_1E63BCAD0;
    goto LABEL_22;
  }
  if ((unint64_t)v97 > 0x408)
  {
LABEL_15:
    if (*(_BYTE *)(v112 + 24) == 1)
      v57 = &unk_1E63BCA70;
    else
      v57 = &unk_1E63BCAA0;
  }
  else
  {
    v57 = &unk_1E63BCA40;
  }
LABEL_22:
  v58 = v57[2];
  v108 = v34;
  if (v58)
  {
    *(_QWORD *)&v111 = a13;
    v59 = a11;
    v102 = a12;
    v105 = a9;
    v106 = a10;
    v104 = v40 | (v41 << 32);
    v92 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93 = v57;
    v60 = v57 + 5;
    v61 = (char *)MEMORY[0x1E0DEE9D8];
    v103 = a11;
    while (1)
    {
      v63 = *(v60 - 1);
      v64 = *v60;
      v65 = v107;
      sub_1B1792810((uint64_t)v34, v107, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v65, 0, 1, v110);
      swift_bridgeObjectRetain();
      v66 = sub_1B1B4F2A0(v63, v64, v105, v106, v104, 0x72656767697274uLL, 0xE700000000000000, v65);
      v68 = v67;
      swift_bridgeObjectRelease();
      sub_1B1B596C0(v65);
      swift_bridgeObjectRetain();
      sub_1B1B8B368(&v113, v66, v68);
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v112 + 24) == 1)
      {
        if (!(_QWORD)v111
          || (v69 = *(void **)(v111 + 72)) == 0
          || (swift_unknownObjectRetain(),
              v70 = (void *)sub_1B2228728(),
              v71 = objc_msgSend(v69, sel_newFunctionWithName_, v70),
              swift_unknownObjectRelease(),
              v70,
              v59 = v103,
              !v71))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((_QWORD)v111)
          {
            if (qword_1ED4BF430 != -1)
              swift_once();
            v113 = 0;
            v114 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            swift_bridgeObjectRelease();
            v113 = 0xD000000000000028;
            v114 = 0x80000001B2338AB0;
            sub_1B2228890();
            swift_bridgeObjectRelease();
          }
          else
          {
            if (qword_1ED4BF430 != -1)
              swift_once();
            v113 = 0;
            v114 = 0xE000000000000000;
            swift_retain();
            sub_1B2229430();
            sub_1B2228890();
            sub_1B2228890();
            swift_bridgeObjectRelease();
            sub_1B2228890();
          }
          v88 = v113;
          v87 = v114;
          v89 = sub_1B2228E90();
          if (qword_1ED4BF658 == -1)
            goto LABEL_56;
          goto LABEL_58;
        }
        swift_bridgeObjectRelease();
        v72 = swift_unknownObjectRetain();
        MEMORY[0x1B5E2064C](v72);
        if (*(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B2228AF4();
        sub_1B2228B30();
        sub_1B2228AD0();
        swift_unknownObjectRelease();
        swift_release();
        v62 = v111;
        swift_retain();
        v34 = v108;
      }
      else
      {
        if (!*(_QWORD *)(v59 + 16))
          goto LABEL_53;
        swift_bridgeObjectRetain();
        v73 = sub_1B1DC3B00(v66, v68);
        if ((v74 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_53:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED4BF430 != -1)
            swift_once();
          v113 = 0;
          v114 = 0xE000000000000000;
          swift_retain();
          sub_1B2229430();
          swift_bridgeObjectRelease();
          v113 = 0xD000000000000022;
          v114 = 0x80000001B2338A10;
          sub_1B2228890();
          swift_bridgeObjectRelease();
          v88 = v113;
          v87 = v114;
          v89 = sub_1B2228E90();
          if (qword_1ED4BF658 == -1)
          {
LABEL_56:
            v113 = 0;
            swift_retain();
            sub_1B1F1AD70(v89, &v113, v88, v87);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return sub_1B1A04628((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
          }
LABEL_58:
          swift_once();
          goto LABEL_56;
        }
        v75 = *(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v73);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v61 = sub_1B1C67944(0, *((_QWORD *)v61 + 2) + 1, 1, v61);
        v34 = v108;
        v77 = *((_QWORD *)v61 + 2);
        v76 = *((_QWORD *)v61 + 3);
        if (v77 >= v76 >> 1)
          v61 = sub_1B1C67944(v76 > 1, v77 + 1, 1, v61);
        *((_QWORD *)v61 + 2) = v77 + 1;
        *(_QWORD *)&v61[8 * v77 + 32] = v75;
        swift_release();
        v62 = v102;
        swift_retain();
        v59 = v103;
      }
      v60 += 2;
      if (!--v58)
      {
        v79 = v119;
        v78 = v92;
        v110 = v62;
        goto LABEL_45;
      }
    }
  }
  v78 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v110 = 0;
  v79 = MEMORY[0x1E0DEE9D8];
  v61 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_45:
  v112 = a15;
  *(_QWORD *)&v111 = a14;
  v80 = v95;
  sub_1B1D121E4(v95, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  swift_bridgeObjectRelease();
  sub_1B1D12220(v100, v80, &qword_1ED4BB350, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  sub_1B1A1B6FC(0, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v82 = v81;
  v83 = (_QWORD *)(v80 + v81[15]);
  *v83 = v78;
  v83[1] = 0;
  *(_QWORD *)(v80 + v81[9]) = v110;
  *(_QWORD *)(v80 + v81[10]) = v61;
  *(_QWORD *)(v80 + v81[11]) = v79;
  *(_QWORD *)(v80 + v81[12]) = 0;
  *(_BYTE *)(v80 + v81[13]) = 0;
  v84 = v80 + v81[14];
  *(_QWORD *)v84 = v97;
  *(_BYTE *)(v84 + 8) = v101 & 1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v85 = sub_1B1A101F0(v98);
  swift_release();
  v115 = v82;
  v116 = &off_1E637D0A8;
  v86 = sub_1B1A137F4(&v113);
  sub_1B1D12220(v80, (uint64_t)v86, &qword_1ED4BB250, type metadata accessor for TriggerScript, (uint64_t)&off_1ED4BEFD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v117 = 0;
  sub_1B20E19E8((uint64_t)&v113, v94, v85);
  sub_1B1BBAE14(v118);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1B1A04628((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for ScriptIndex);
}

void sub_1B1CFEB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)();
  char v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t, int *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _BYTE *v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  _BYTE v92[40];
  __int128 v93[2];
  char v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;

  v79 = a7;
  v67 = a2;
  v68 = a4;
  v66 = a1;
  sub_1B1D135EC();
  MEMORY[0x1E0C80A78](v10, v11);
  v78 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v105 = v13;
  v77 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v73 = (uint64_t)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v81 = (uint64_t)v64 - v18;
  sub_1B1D13660();
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v24 = v23;
  v76 = *((_QWORD *)v23 - 1);
  MEMORY[0x1E0C80A78](v23, v25);
  v82 = (uint64_t)v64 - v26;
  v84 = *(_QWORD *)(a5 + 16);
  if (v84)
  {
    v74 = a6;
    v64[1] = a5;
    v64[2] = a6 + 80;
    v83 = a5 + 32;
    swift_bridgeObjectRetain();
    v27 = 0;
    v28 = (uint64_t)v78;
    v80 = v24;
    v65 = v22;
    while (1)
    {
      sub_1B1D12130(v83 + 48 * v27, (uint64_t)v93);
      if ((v94 & 1) != 0)
      {
        sub_1B1A02518(v93, (uint64_t)v92);
        sub_1B19FA198((uint64_t)v92, (uint64_t)&v85);
        sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
        v31 = swift_dynamicCast();
        v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
        if ((v31 & 1) != 0)
        {
          v32(v28, 0, 1, v105);
          sub_1B1D12190(v28, v81, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          sub_1B222A0CC();
          swift_bridgeObjectRetain();
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v33 = *(_QWORD *)(a3 + 24);
          sub_1B222A078();
          v34 = *(_QWORD *)(v33 + 16);
          if (v34)
          {
            swift_bridgeObjectRetain();
            v35 = v33 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B2228824();
              swift_bridgeObjectRelease();
              v35 += 16;
              --v34;
            }
            while (v34);
            swift_bridgeObjectRelease();
            v28 = (uint64_t)v78;
          }
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v102 = v87;
          v103 = v88;
          v104 = v89;
          v100 = v85;
          v101 = v86;
          v41 = sub_1B222A0B4();
          v42 = (uint64_t *)(v81 + *(int *)(v105 + 36));
          if ((v42[1] & 1) != 0)
          {
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
            goto LABEL_24;
          }
          v43 = v41;
          v44 = *v42;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
          if (v43 == v44)
          {
            v45 = v68;
            sub_1B1D121E4(v68, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            sub_1B1D12190(v81, v45, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          else
          {
LABEL_24:
            sub_1B1D121E4(v81, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          v24 = v80;
LABEL_35:
          *v79 = 1;
          goto LABEL_5;
        }
        v32(v28, 1, 1, v105);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
        v29 = v28;
        v30 = sub_1B1D135EC;
      }
      else
      {
        sub_1B1A02518(v93, (uint64_t)v92);
        sub_1B19FA198((uint64_t)v92, (uint64_t)&v85);
        sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
        v36 = swift_dynamicCast();
        v37 = *(void (**)(char *, uint64_t, uint64_t, int *))(v76 + 56);
        if ((v36 & 1) != 0)
        {
          v37(v22, 0, 1, v24);
          sub_1B1D12190((uint64_t)v22, v82, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          sub_1B222A0CC();
          swift_bridgeObjectRetain();
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v38 = *(_QWORD *)(a3 + 24);
          sub_1B222A078();
          v39 = *(_QWORD *)(v38 + 16);
          if (v39)
          {
            swift_bridgeObjectRetain();
            v40 = v38 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B2228824();
              swift_bridgeObjectRelease();
              v40 += 16;
              --v39;
            }
            while (v39);
            swift_bridgeObjectRelease();
          }
          v28 = (uint64_t)v78;
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v97 = v87;
          v98 = v88;
          v99 = v89;
          v95 = v85;
          v96 = v86;
          v46 = sub_1B222A0B4();
          v47 = v82 + *(int *)(v105 + 36);
          if ((*(_BYTE *)(v47 + 8) & 1) != 0 || v46 != *(_QWORD *)v47)
          {
            v24 = v80;
          }
          else
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v74 + 72));
            v48 = v82;
            v49 = v73;
            sub_1B1D12220(v82, v73, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            sub_1B1D136D4(a3, v49, type metadata accessor for EmitterScript);
            v50 = *(_QWORD *)(v48 + v80[15]);
            sub_1B1CAF1D8(v50);
            v51 = v75;
            sub_1B1C9BF0C(2, &v85);
            if (v51)
            {

              sub_1B1B28F18(v50);
              v71 = 0;
              v72 = 0;
              v75 = 0;
            }
            else
            {
              v75 = 0;
              v71 = v88;
              v72 = *((_QWORD *)&v87 + 1);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B1B28F18(v50);
            }
            v52 = v66;
            v53 = *(_QWORD *)(v66 + 16);
            v54 = *(_BYTE *)(v66 + 184);
            swift_retain();
            if ((v54 & 1) != 0)
            {
              sub_1B2229688();
              __break(1u);
              return;
            }
            v55 = *(_QWORD *)(v52 + 168);
            v56 = type metadata accessor for EmitterScript(0);
            v57 = *(unsigned int *)(v55 + 4 * v67);
            v69 = *(unsigned int *)(*(_QWORD *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v57 + 8);
            v70 = v56;
            swift_release();
            *((_QWORD *)&v86 + 1) = v105;
            v58 = sub_1B1A137F4((uint64_t *)&v85);
            v59 = v73;
            sub_1B1D12220(v73, (uint64_t)v58, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            v60 = v80;
            v61 = *(_QWORD *)(v82 + v80[10]);
            *(_QWORD *)&v87 = *(_QWORD *)(v82 + v80[9]);
            *((_QWORD *)&v87 + 1) = v61;
            *(_QWORD *)&v88 = *(_QWORD *)(v82 + v80[11]);
            sub_1B1A02758(0, &qword_1EEF5D958, (uint64_t)&type metadata for ParticleScriptRuntime, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
            v90 = v62;
            *((_QWORD *)&v88 + 1) = v72;
            v89 = v71;
            v91 = 1;
            v63 = v57 | (v69 << 32);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B20E1B28((uint64_t)&v85, v70, v63);
            v24 = v60;
            sub_1B1D121E4(v59, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 72));
            v28 = (uint64_t)v78;
            v22 = v65;
          }
          sub_1B1D121E4(v82, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
          goto LABEL_35;
        }
        v37(v22, 1, 1, v24);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
        v29 = (uint64_t)v22;
        v30 = sub_1B1D13660;
      }
      sub_1B1A04628(v29, (uint64_t (*)(_QWORD))v30);
LABEL_5:
      if (++v27 == v84)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1B1CFF490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  int *v56;
  _UNKNOWN **v57;
  char v58;
  _OWORD v59[2];
  _OWORD v60[2];
  id v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  char v65;
  uint64_t v66;

  v66 = a6;
  v50 = a3;
  sub_1B1A1B6FC(0, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v42 - v14;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v17 = v16;
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v42 - v19;
  result = sub_1B1C1A1D0(a2, (uint64_t)v60);
  if (v65)
  {
    v49 = a4;
    if (v65 != 1)
    {
      sub_1B1D121E4(a1, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B1A0DDAC(v60, v59);
      sub_1B1A02864((uint64_t)v59, (uint64_t)&v54);
      swift_dynamicCast();
      sub_1B1D12190((uint64_t)v15, a1, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v56 = v12;
      v57 = &off_1E639EB98;
      v41 = sub_1B1A137F4(&v54);
      sub_1B1D12220(a1, (uint64_t)v41, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v58 = 1;
      sub_1B20E19E8((uint64_t)&v54, v49, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v59);
    }
    v47 = v6;
    sub_1B1D121E4(a1, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v48 = v61;
    v45 = v62;
    v44 = v63;
    sub_1B1A0DDAC(v60, v59);
    sub_1B1A0DDAC(&v64, v53);
    *v20 = 0;
    v20[32] = 0;
    v22 = &v20[*(int *)(type metadata accessor for EmitterScript(0) + 32)];
    v23 = type metadata accessor for ScriptIndex();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v46 = a5;
    v24(v22, 1, 1, v23);
    *((_QWORD *)v20 + 1) = 0xD0000000000000C0;
    *((_QWORD *)v20 + 2) = 0x80000001B232DE80;
    *((_QWORD *)v20 + 3) = &unk_1E639F228;
    v25 = &v20[v12[9]];
    *(_QWORD *)v25 = 0;
    v25[8] = 1;
    v20[v12[10]] = 0;
    *(_QWORD *)&v20[v12[11]] = 0;
    v26 = &v20[v12[12]];
    *(_QWORD *)v26 = 0;
    *((_QWORD *)v26 + 1) = 0xE000000000000000;
    *(_QWORD *)&v20[v12[13]] = MEMORY[0x1E0DEE9D8];
    v27 = v17[9];
    *(_QWORD *)&v20[v27] = 0;
    v28 = v17[10];
    *(_QWORD *)&v20[v28] = 0;
    v43 = a1;
    v29 = v17[11];
    *(_QWORD *)&v20[v29] = 0;
    *(_QWORD *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    v30 = &v20[v17[14]];
    *(_QWORD *)v30 = 0;
    v30[8] = 1;
    v31 = (uint64_t *)&v20[v17[15]];
    *v31 = 0;
    v31[1] = 0;
    sub_1B1A02864((uint64_t)v59, (uint64_t)&v54);
    swift_dynamicCast();
    v32 = v48;
    sub_1B1D12954((uint64_t)v15, (uint64_t)v20, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418);
    *(_QWORD *)&v20[v27] = v32;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v20[v29] = v44;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v20[v28] = v45;
    sub_1B1A02864((uint64_t)v53, (uint64_t)&v54);
    swift_dynamicCast();
    v33 = v51;
    v34 = v52;
    sub_1B1B28F18(*v31);
    *v31 = v33;
    v31[1] = v34;
    v35 = v46;
    sub_1B1D12220((uint64_t)v20, v43, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v36 = v50;
    sub_1B1BF7CC8((uint64_t)v20, v35);
    v56 = v17;
    v57 = &off_1E637D0A8;
    v37 = sub_1B1A137F4(&v54);
    sub_1B1D12220((uint64_t)v20, (uint64_t)v37, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v58 = 0;
    sub_1B20E19E8((uint64_t)&v54, v49, v35);
    v38 = sub_1B1D18448(v35);
    if (v38)
    {
      sub_1B1CDC014(v36, v38, v39, (void (*)(uint64_t))sub_1B1B21584, (void (*)(uint64_t))sub_1B1B21584);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B1A02864((uint64_t)v53, (uint64_t)&v54);
    if (swift_dynamicCast())
    {
      v40 = v51;
      swift_bridgeObjectRelease();
      v54 = MEMORY[0x1E0DEE9D8];
      v55 = MEMORY[0x1E0DEE9D8];
      sub_1B1CE618C(v36, v40);
      swift_bridgeObjectRelease();
      sub_1B1BF7DC4(v54, v55, v35);
    }
    else
    {
      sub_1B1A02864((uint64_t)v53, (uint64_t)&v54);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B2094804(v35);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v53);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v59);
        return sub_1B1D121E4((uint64_t)v20, (unint64_t *)&unk_1ED4B88E0, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B1CFFB34(_QWORD *a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t result;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  int64_t v54;
  __int128 v55;
  _OWORD v56[5];
  uint64_t v57;
  char v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  _BYTE v62[104];

  v2 = a1[2];
  v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  v49 = (uint64_t)a1;
  v50 = v2;
  v4 = a1[10];
  v53 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v52 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v56;
  v10 = v62;
  v45 = v8 - 1;
  swift_bridgeObjectRetain();
  v11 = 0;
  v54 = v8;
  v46 = v8 - 6;
  if (!v7)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v13 = v12 | (v11 << 6);
LABEL_5:
  v14 = *(_QWORD *)(v4 + 56);
  v15 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v13);
  v16 = v15[1];
  *(_QWORD *)&v55 = *v15;
  *((_QWORD *)&v55 + 1) = v16;
  sub_1B1C1A1D0(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B1D125FC((uint64_t)&v55, (uint64_t)&v59);
    if (v62[88] == 255)
      break;
    v20 = v59;
    v21 = v61;
    v22 = v60;
    sub_1B1B99D74((uint64_t)v10, (uint64_t)&v55);
    if (v20 == type metadata accessor for EmitterScript(0))
    {
      v23 = v10;
      v24 = v9;
      if (((_DWORD)v22 != -1 || (_DWORD)v21) && (v22 & 0x80000000) == 0 && v52[1] > v22)
      {
        v51 = *v52;
        v25 = *v52 + 12 * (int)v22;
        v28 = *(_DWORD *)(v25 + 8);
        v27 = (_DWORD *)(v25 + 8);
        v26 = v28;
        if ((_DWORD)v21 == -1 || v26 == (_DWORD)v21)
        {
          sub_1B1A1B6FC(0, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 80)
                                                  + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(_QWORD *)(v30 + 16))
          {
            v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 80) + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6) + 32)
                            + 16);
            v48 = v29;
            v31 = sub_1B1DC3AC8(v29);
            if ((v32 & 1) != 0
              && *(_QWORD *)(*(_QWORD *)(v47 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) + 32) == v48)
            {
              v33 = *(_QWORD *)(v48 - 8);
              if (*(_QWORD *)(v33 + 64))
                v34 = *(_QWORD *)(v33 + 72);
              else
                v34 = 0;
              if ((_DWORD)v21 != -1 && *v27 != (_DWORD)v21
                || (v35 = *(_QWORD *)(*(_QWORD *)(v50 + 136) + 8 * *(int *)(v51 + 12 * (int)v22) + 32),
                    v36 = *(_QWORD *)(v35 + 48),
                    (v37 = *(_QWORD *)(v36 + 16)) == 0))
              {
LABEL_55:
                sub_1B2229430();
                sub_1B2228890();
                sub_1B1BC3C70();
                sub_1B2228890();
                swift_bridgeObjectRelease();
                sub_1B2228890();
                sub_1B2228890();
                sub_1B2228890();
                result = sub_1B2229688();
                __break(1u);
                return result;
              }
              v38 = (_QWORD *)(v36 + 56);
              while (*(v38 - 3) != v48)
              {
                v38 += 5;
                if (!--v37)
                  goto LABEL_55;
              }
              sub_1B1CFF490(*(_QWORD *)(v35 + 128) + *v38 + v34 * *(__int16 *)(v51 + 12 * (int)v22 + 4), (uint64_t)&v55, v50, v20, v22 | (unint64_t)(v21 << 32), v49);
            }
          }
        }
      }
      sub_1B1D12448((uint64_t)&v55);
      v9 = v24;
      v10 = v23;
      if (v7)
        goto LABEL_4;
    }
    else
    {
      sub_1B1D12448((uint64_t)&v55);
      if (v7)
        goto LABEL_4;
    }
LABEL_6:
    v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v54)
    {
      v18 = *(_QWORD *)(v53 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v54)
        goto LABEL_21;
      v18 = *(_QWORD *)(v53 + 8 * v19);
      if (v18)
        goto LABEL_11;
      v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v54)
        goto LABEL_40;
      v18 = *(_QWORD *)(v53 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v54)
      {
LABEL_21:
        v11 = v17;
        goto LABEL_22;
      }
      v18 = *(_QWORD *)(v53 + 8 * v19);
      if (v18)
      {
LABEL_11:
        v17 = v19;
LABEL_8:
        v7 = (v18 - 1) & v18;
        v13 = __clz(__rbit64(v18)) + (v17 << 6);
        v11 = v17;
        goto LABEL_5;
      }
      v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v54)
      {
LABEL_40:
        v11 = v19;
      }
      else
      {
        v18 = *(_QWORD *)(v53 + 8 * v17);
        if (v18)
          goto LABEL_8;
        while (v46 != v11)
        {
          v18 = *(_QWORD *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        v11 = v45;
      }
    }
LABEL_22:
    v7 = 0;
    v57 = 0;
    v55 = 0u;
    memset(v56, 0, sizeof(v56));
    v58 = -1;
  }
  swift_release();
  v39 = *(_QWORD *)(*(_QWORD *)(v49 + 80) + 16);
  if (v39)
  {
    v40 = swift_bridgeObjectRetain();
    v41 = sub_1B1CF6D9C(v40, type metadata accessor for EmitterScript);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v49 + 80) = v41;
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(*(_QWORD *)(v49 + 80) + 16);
  }
  else
  {
    v42 = 0;
  }
  v43 = v39 != v42;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 72));
  swift_release();
  return v43;
}

uint64_t sub_1B1D000CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int *v32;
  uint64_t v33;
  char v34;
  BOOL v35;
  void *v36;
  _OWORD *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  _OWORD *v42;
  os_unfair_lock_s *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_signpost_type_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint8_t *v64;
  os_signpost_id_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  dispatch_group_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _QWORD v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  dispatch_group_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[11];
  char v113;
  _BYTE v114[96];
  __int128 aBlock;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  unsigned __int8 v121;

  LODWORD(v100) = a8;
  v110 = a2;
  v111 = (uint64_t)a6;
  v102 = a4;
  v103 = a5;
  v101 = a3;
  v109 = type metadata accessor for EmitterScript(0);
  v97 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109, v14);
  v98 = v15;
  v99 = (uint64_t)v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B2228380();
  v17 = *(_QWORD *)(v16 - 8);
  v106 = v16;
  v107 = v17;
  MEMORY[0x1E0C80A78](v16, v18);
  v96 = (char *)v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v92 - v22;
  MEMORY[0x1E0C80A78](v24, v25);
  v105 = (char *)v92 - v26;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a11;
  *(_QWORD *)(v27 + 24) = a12;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = sub_1B1D13E58;
  v28[3] = v27;
  v28[4] = a10;
  v29 = *(_QWORD *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  v108 = a10;
  if (v29
    && ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(_BYTE *)(a1 + 2720) & 1) == 0))
  {
    sub_1B1B63B64();
    v36 = (void *)swift_allocError();
    *v37 = xmmword_1B228CCD0;
    if (!*(_QWORD *)(a11 + 16))
    {
LABEL_24:
      v43 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      v44 = v36;
      os_unfair_lock_lock(v43);
      v45 = *(void **)(a11 + 16);
      *(_QWORD *)(a11 + 16) = v36;
      v46 = v36;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v108);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    v47 = 0;
    goto LABEL_50;
  }
  v94 = v27;
  v30 = sub_1B1C9BDCC();
  sub_1B1A1B6FC(0, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v32 = v31;
  v33 = a7 + v31[9];
  v34 = *(_BYTE *)(v33 + 8);
  v104 = v28;
  v95 = v30;
  v35 = (v34 & 1) == 0 && v30 == *(_QWORD *)v33;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v38 = *(_QWORD *)(a1 + 80);
  if (!*(_QWORD *)(v38 + 16) || (v39 = sub_1B1DC4138(v109, v111), (v40 & 1) == 0))
  {
    v120 = 0;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    aBlock = 0u;
    v121 = -1;
    goto LABEL_15;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v38 + 56) + 96 * v39, (uint64_t)&aBlock);
  if (v121 == 255)
  {
LABEL_15:
    sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v35)
      goto LABEL_17;
    goto LABEL_32;
  }
  sub_1B1C1A1D0((uint64_t)&aBlock, (uint64_t)v114);
  sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v114, (uint64_t)v112);
  if (v113)
  {
    sub_1B1D12448((uint64_t)v112);
    sub_1B1D12448((uint64_t)v114);
    goto LABEL_16;
  }
  v48 = v112[0];
  sub_1B1D12448((uint64_t)v114);
  if (v48 != v95)
    v35 = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v35)
  {
LABEL_17:
    if ((*(_BYTE *)(a7 + v32[10]) & 1) != 0)
    {
      v36 = *(void **)(a7 + v32[11]);
      v41 = v36;
    }
    else
    {
      sub_1B1B63B64();
      v36 = (void *)swift_allocError();
      *v42 = xmmword_1B2244C80;
    }
    if (!*(_QWORD *)(a11 + 16) && v36)
      goto LABEL_24;
    goto LABEL_7;
  }
  if (v48 == v95)
  {
    dispatch_group_leave(v108);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  v92[1] = a11;
  v92[2] = a12;
  sub_1B1D121E4(a7, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v93 = swift_allocBox();
  v50 = v49;
  sub_1B1CED590(v49);
  v51 = v50 + v32[9];
  v52 = v95;
  *(_QWORD *)v51 = v95;
  *(_BYTE *)(v51 + 8) = 0;
  sub_1B1D136D4(v110, v50, type metadata accessor for EmitterScript);
  sub_1B1D12220(v50, a7, &qword_1ED4B9670, type metadata accessor for EmitterScript, (uint64_t)&off_1ED4BC418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(_QWORD *)&aBlock = v52;
  v121 = 0;
  sub_1B20E1B28((uint64_t)&aBlock, v109, v111);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  v53 = *(_QWORD *)(a1 + 16);
  swift_retain();
  if (v53)
  {
    v54 = v106;
    v55 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v23, v53 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v106);
    swift_release();
    v56 = v105;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v105, v23, v54);
  }
  else
  {
    v56 = v105;
    v54 = v106;
    if (qword_1ED4BA0E0 != -1)
      swift_once();
    v57 = sub_1B22283B0();
    sub_1B1B40EC8(v57, (uint64_t)qword_1ED4D0E48);
    sub_1B2228398();
    sub_1B2228368();
  }
  v92[0] = HIDWORD(v111);
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v108 = a9;
  v58 = sub_1B22283B0();
  sub_1B1B40EC8(v58, (uint64_t)qword_1ED4D0E48);
  v59 = sub_1B2228398();
  v60 = sub_1B2228FA4();
  if ((sub_1B2229094() & 1) != 0)
  {
    v61 = v107;
    v62 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v63 = v96;
    v62(v96, v56, v54);
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    v65 = sub_1B2228374();
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v59, v60, v65, "buildScript", "", v64, 2u);
    MEMORY[0x1B5E23F88](v64, -1, -1);

    v66 = v63;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v54);
  }
  else
  {

    v62 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v66 = v96;
  }
  v62(v66, v56, v54);
  sub_1B22283E0();
  swift_allocObject();
  v67 = sub_1B22283D4();
  v68 = v99;
  sub_1B1792810(v110, v99, type metadata accessor for EmitterScript);
  v69 = (*(unsigned __int8 *)(v97 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  v70 = (v98 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v70 + 27) & 0xFFFFFFFFFFFFFFF8;
  v72 = swift_allocObject();
  v73 = v108;
  v74 = v109;
  *(_QWORD *)(v72 + 16) = a1;
  *(_QWORD *)(v72 + 24) = v74;
  v75 = v111;
  v109 = a1;
  v110 = v67;
  v76 = v92[0];
  *(_DWORD *)(v72 + 32) = v111;
  *(_DWORD *)(v72 + 36) = v76;
  *(_QWORD *)(v72 + 40) = v95;
  *(_QWORD *)(v72 + 48) = sub_1B1D12284;
  *(_QWORD *)(v72 + 56) = v104;
  *(_QWORD *)(v72 + 64) = v67;
  memcpy((void *)(v72 + 72), v73, 0x148uLL);
  sub_1B1A025EC(v68, v72 + v69, type metadata accessor for EmitterScript);
  v77 = (uint64_t *)(v72 + v70);
  v79 = v101;
  v78 = v102;
  *v77 = v101;
  v77[1] = v78;
  v77[2] = v103;
  v80 = (_DWORD *)(v72 + v71);
  *v80 = v75;
  v80[1] = v76;
  *(_QWORD *)(v72 + ((v71 + 15) & 0xFFFFFFFFFFFFFFF8)) = v93;
  if ((v100 & 1) != 0)
  {
    v111 = *(_QWORD *)(v109 + 40);
    v81 = swift_allocObject();
    *(_QWORD *)(v81 + 16) = sub_1B1D13908;
    *(_QWORD *)(v81 + 24) = v72;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v108);
    sub_1B1C18F0C(v79, v78);
    v82 = qword_1ED4BF430;
    swift_retain();
    swift_retain();
    if (v82 != -1)
      swift_once();
    v83 = qword_1ED4BF658;
    swift_retain();
    v84 = v105;
    if (v83 != -1)
      swift_once();
    v85 = qword_1ED4D0FD0;
    swift_retain();
    swift_release();
    v86 = (_QWORD *)swift_allocObject();
    v86[2] = v85;
    v86[3] = sub_1B1D13D9C;
    v86[4] = v81;
    *(_QWORD *)&v117 = sub_1B1D13E54;
    *((_QWORD *)&v117 + 1) = v86;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v116 = sub_1B17915D0;
    *((_QWORD *)&v116 + 1) = &unk_1E63EE4D0;
    v87 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend((id)v111, sel_addOperationWithBlock_, v87);
    _Block_release(v87);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v84, v106);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    v111 = *(_QWORD *)(v109 + 32);
    v88 = swift_allocObject();
    *(_QWORD *)(v88 + 16) = sub_1B1D13908;
    *(_QWORD *)(v88 + 24) = v72;
    v89 = swift_allocObject();
    *(_QWORD *)(v89 + 16) = sub_1B1D13D9C;
    *(_QWORD *)(v89 + 24) = v88;
    *(_QWORD *)&v117 = sub_1B1D13D9C;
    *((_QWORD *)&v117 + 1) = v89;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v116 = sub_1B1CDBFCC;
    *((_QWORD *)&v116 + 1) = &unk_1E63EE458;
    v90 = _Block_copy(&aBlock);
    v100 = *((_QWORD *)&v117 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v108);
    sub_1B1C18F0C(v79, v78);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v111, v90);
    _Block_release(v90);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v105, v106);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  v47 = 1;
LABEL_50:
  swift_release();
  return v47;
}

void sub_1B1D00CDC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t, uint64_t, int *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[4];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  int *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  char *v76;
  uint64_t v77[11];
  char v78;
  char v79[8];
  __int128 v80;
  char v81;
  char *v82;

  v75 = a7;
  v68 = a6;
  v61 = a4;
  v69 = a3;
  v60 = a2;
  v59 = a1;
  sub_1B1D13358();
  MEMORY[0x1E0C80A78](v8, v9);
  v82 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v12 = v11;
  v74 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v67 = (uint64_t)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v73 = (uint64_t)v58 - v17;
  sub_1B1D133CC();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v23 = v22;
  v72 = *((_QWORD *)v22 - 1);
  MEMORY[0x1E0C80A78](v22, v24);
  v71 = (char *)v58 - v25;
  v26 = *(_QWORD *)(a5 + 16);
  if (v26)
  {
    v58[2] = v68 + 80;
    v27 = a5 + 32;
    v58[1] = a5;
    swift_bridgeObjectRetain();
    v28 = v69;
    v70 = v23;
    v29 = (uint64_t)v71;
    v76 = v21;
    v66 = v12;
    while (1)
    {
      sub_1B1D12130(v27, (uint64_t)&v80);
      if ((v81 & 1) != 0)
        break;
      sub_1B1A02518(&v80, (uint64_t)v79);
      sub_1B19FA198((uint64_t)v79, (uint64_t)v77);
      sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
      v38 = swift_dynamicCast();
      v39 = *(void (**)(char *, uint64_t, uint64_t, int *))(v72 + 56);
      if ((v38 & 1) != 0)
      {
        v39(v21, 0, 1, v23);
        v40 = sub_1B1D12190((uint64_t)v21, v29, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        v41 = sub_1B1C9B394(v40);
        v42 = v29 + *(int *)(v12 + 36);
        if ((*(_BYTE *)(v42 + 8) & 1) == 0 && v41 == *(_QWORD *)v42)
        {
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v68 + 72));
          v43 = v67;
          sub_1B1D12220(v29, v67, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          sub_1B1D136D4((uint64_t)v28, v43, type metadata accessor for GraphScript);
          v44 = *v28;
          v45 = v59;
          v46 = *(_QWORD *)(v59 + 16);
          v47 = *(_BYTE *)(v59 + 184);
          swift_retain();
          if ((v47 & 1) != 0)
          {
            sub_1B2229688();
            __break(1u);
            return;
          }
          v48 = *(_QWORD *)(v45 + 168);
          v65 = type metadata accessor for GraphScript(0);
          v64 = *(unsigned int *)(v48 + 4 * v60);
          v63 = *(unsigned int *)(*(_QWORD *)(v46 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v64 + 8);
          swift_bridgeObjectRetain();
          swift_release();
          v77[3] = v66;
          v49 = sub_1B1A137F4(v77);
          sub_1B1D12220(v43, (uint64_t)v49, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v23 = v70;
          v50 = v70[10];
          v29 = (uint64_t)v71;
          v51 = *(_QWORD *)&v71[v70[9]];
          v62 = v44;
          v52 = *(_QWORD *)&v71[v50];
          v77[4] = v51;
          v77[5] = v52;
          v77[6] = *(_QWORD *)&v71[v70[11]];
          sub_1B1A02758(0, &qword_1EEF5D958, (uint64_t)&type metadata for ParticleScriptRuntime, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
          v77[10] = v53;
          v77[7] = v62;
          v77[8] = 0;
          v78 = 1;
          v54 = v64 | (v63 << 32);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B20E1B28((uint64_t)v77, v65, v54);
          sub_1B1D121E4(v67, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v68 + 72));
          v28 = v69;
          v12 = v66;
          v21 = v76;
        }
        sub_1B1D121E4(v29, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v79);
        *v75 = 1;
      }
      else
      {
        v39(v21, 1, 1, v23);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v79);
        sub_1B1A04628((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1B1D133CC);
      }
LABEL_5:
      v27 += 48;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    sub_1B1A02518(&v80, (uint64_t)v77);
    sub_1B19FA198((uint64_t)v77, (uint64_t)v79);
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
    v31 = swift_dynamicCast();
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56);
    if ((v31 & 1) == 0)
    {
      v30 = (uint64_t)v82;
      v32(v82, 1, 1, v12);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
      sub_1B1A04628(v30, (uint64_t (*)(_QWORD))sub_1B1D13358);
LABEL_4:
      v21 = v76;
      goto LABEL_5;
    }
    v33 = (uint64_t)v82;
    v32(v82, 0, 1, v12);
    v34 = v73;
    v35 = sub_1B1D12190(v33, v73, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v36 = sub_1B1C9B394(v35);
    v37 = v34 + *(int *)(v12 + 36);
    if ((*(_BYTE *)(v37 + 8) & 1) != 0)
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
    }
    else
    {
      v55 = v36;
      v56 = *(_QWORD *)v37;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
      v28 = v69;
      if (v55 == v56)
      {
        v57 = v61;
        sub_1B1D121E4(v61, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        sub_1B1D12190(v73, v57, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
LABEL_20:
        v23 = v70;
        *v75 = 1;
        v29 = (uint64_t)v71;
        goto LABEL_4;
      }
    }
    sub_1B1D121E4(v73, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    goto LABEL_20;
  }
}

uint64_t sub_1B1D0147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  int *v57;
  _UNKNOWN **v58;
  char v59;
  _OWORD v60[2];
  _OWORD v61[2];
  id v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  char v66;
  uint64_t v67;

  v67 = a6;
  v51 = a3;
  sub_1B1A1B6FC(0, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v43 - v14;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v17 = v16;
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v43 - v19;
  result = sub_1B1C1A1D0(a2, (uint64_t)v61);
  if (v66)
  {
    v50 = a4;
    if (v66 != 1)
    {
      sub_1B1D121E4(a1, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B1A0DDAC(v61, v60);
      sub_1B1A02864((uint64_t)v60, (uint64_t)&v55);
      swift_dynamicCast();
      sub_1B1D12190((uint64_t)v15, a1, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v57 = v12;
      v58 = &off_1E639EB98;
      v42 = sub_1B1A137F4(&v55);
      sub_1B1D12220(a1, (uint64_t)v42, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v59 = 1;
      sub_1B20E19E8((uint64_t)&v55, v50, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v60);
    }
    v48 = v6;
    sub_1B1D121E4(a1, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v49 = v62;
    v46 = v63;
    v45 = v64;
    sub_1B1A0DDAC(v61, v60);
    sub_1B1A0DDAC(&v65, v54);
    v22 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)v20 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v20 + 1) = 0;
    *((_QWORD *)v20 + 2) = 0xE000000000000000;
    v20[24] = 2;
    *((_QWORD *)v20 + 4) = &unk_1E639F188;
    *((_WORD *)v20 + 20) = 0;
    v23 = &v20[*(int *)(type metadata accessor for GraphScript(0) + 40)];
    v24 = type metadata accessor for ScriptIndex();
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
    v47 = a5;
    v25(v23, 1, 1, v24);
    v26 = &v20[v12[9]];
    *(_QWORD *)v26 = 0;
    v26[8] = 1;
    v20[v12[10]] = 0;
    *(_QWORD *)&v20[v12[11]] = 0;
    v27 = &v20[v12[12]];
    *(_QWORD *)v27 = 0;
    *((_QWORD *)v27 + 1) = 0xE000000000000000;
    *(_QWORD *)&v20[v12[13]] = v22;
    v28 = v17[9];
    *(_QWORD *)&v20[v28] = 0;
    v29 = v17[10];
    *(_QWORD *)&v20[v29] = 0;
    v44 = a1;
    v30 = v17[11];
    *(_QWORD *)&v20[v30] = 0;
    *(_QWORD *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    v31 = &v20[v17[14]];
    *(_QWORD *)v31 = 0;
    v31[8] = 1;
    v32 = (uint64_t *)&v20[v17[15]];
    *v32 = 0;
    v32[1] = 0;
    sub_1B1A02864((uint64_t)v60, (uint64_t)&v55);
    swift_dynamicCast();
    v33 = v49;
    sub_1B1D12954((uint64_t)v15, (uint64_t)v20, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80);
    *(_QWORD *)&v20[v28] = v33;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v20[v30] = v45;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v20[v29] = v46;
    sub_1B1A02864((uint64_t)v54, (uint64_t)&v55);
    swift_dynamicCast();
    v34 = v52;
    v35 = v53;
    sub_1B1B28F18(*v32);
    *v32 = v34;
    v32[1] = v35;
    v36 = v47;
    sub_1B1D12220((uint64_t)v20, v44, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v37 = v51;
    sub_1B1BF7CB0((uint64_t)v20, v36);
    v57 = v17;
    v58 = &off_1E637D0A8;
    v38 = sub_1B1A137F4(&v55);
    sub_1B1D12220((uint64_t)v20, (uint64_t)v38, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v59 = 0;
    sub_1B20E19E8((uint64_t)&v55, v50, v36);
    v39 = sub_1B1D1559C(v36);
    if (v39)
    {
      sub_1B1CDC014(v37, v39, v40, (void (*)(uint64_t))sub_1B1B21584, (void (*)(uint64_t))sub_1B1B21584);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B1A02864((uint64_t)v54, (uint64_t)&v55);
    if (swift_dynamicCast())
    {
      v41 = v52;
      swift_bridgeObjectRelease();
      v55 = MEMORY[0x1E0DEE9D8];
      v56 = MEMORY[0x1E0DEE9D8];
      sub_1B1CE618C(v37, v41);
      swift_bridgeObjectRelease();
      sub_1B1BF7CBC(v55, v56, v36);
    }
    else
    {
      sub_1B1A02864((uint64_t)v54, (uint64_t)&v55);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B2094804(v36);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v54);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v60);
        return sub_1B1D121E4((uint64_t)v20, (unint64_t *)&unk_1ED4B88B0, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B1D01B14(_QWORD *a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t result;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  int64_t v54;
  __int128 v55;
  _OWORD v56[5];
  uint64_t v57;
  char v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  _BYTE v62[104];

  v2 = a1[2];
  v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  v49 = (uint64_t)a1;
  v50 = v2;
  v4 = a1[10];
  v53 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v52 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v56;
  v10 = v62;
  v45 = v8 - 1;
  swift_bridgeObjectRetain();
  v11 = 0;
  v54 = v8;
  v46 = v8 - 6;
  if (!v7)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v13 = v12 | (v11 << 6);
LABEL_5:
  v14 = *(_QWORD *)(v4 + 56);
  v15 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v13);
  v16 = v15[1];
  *(_QWORD *)&v55 = *v15;
  *((_QWORD *)&v55 + 1) = v16;
  sub_1B1C1A1D0(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B1D125FC((uint64_t)&v55, (uint64_t)&v59);
    if (v62[88] == 255)
      break;
    v20 = v59;
    v21 = v61;
    v22 = v60;
    sub_1B1B99D74((uint64_t)v10, (uint64_t)&v55);
    if (v20 == type metadata accessor for GraphScript(0))
    {
      v23 = v10;
      v24 = v9;
      if (((_DWORD)v22 != -1 || (_DWORD)v21) && (v22 & 0x80000000) == 0 && v52[1] > v22)
      {
        v51 = *v52;
        v25 = *v52 + 12 * (int)v22;
        v28 = *(_DWORD *)(v25 + 8);
        v27 = (_DWORD *)(v25 + 8);
        v26 = v28;
        if ((_DWORD)v21 == -1 || v26 == (_DWORD)v21)
        {
          sub_1B1A1B6FC(0, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 80)
                                                  + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(_QWORD *)(v30 + 16))
          {
            v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 80) + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6) + 32)
                            + 16);
            v48 = v29;
            v31 = sub_1B1DC3AC8(v29);
            if ((v32 & 1) != 0
              && *(_QWORD *)(*(_QWORD *)(v47 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) + 32) == v48)
            {
              v33 = *(_QWORD *)(v48 - 8);
              if (*(_QWORD *)(v33 + 64))
                v34 = *(_QWORD *)(v33 + 72);
              else
                v34 = 0;
              if ((_DWORD)v21 != -1 && *v27 != (_DWORD)v21
                || (v35 = *(_QWORD *)(*(_QWORD *)(v50 + 136) + 8 * *(int *)(v51 + 12 * (int)v22) + 32),
                    v36 = *(_QWORD *)(v35 + 48),
                    (v37 = *(_QWORD *)(v36 + 16)) == 0))
              {
LABEL_55:
                sub_1B2229430();
                sub_1B2228890();
                sub_1B1BC3C70();
                sub_1B2228890();
                swift_bridgeObjectRelease();
                sub_1B2228890();
                sub_1B2228890();
                sub_1B2228890();
                result = sub_1B2229688();
                __break(1u);
                return result;
              }
              v38 = (_QWORD *)(v36 + 56);
              while (*(v38 - 3) != v48)
              {
                v38 += 5;
                if (!--v37)
                  goto LABEL_55;
              }
              sub_1B1D0147C(*(_QWORD *)(v35 + 128) + *v38 + v34 * *(__int16 *)(v51 + 12 * (int)v22 + 4), (uint64_t)&v55, v50, v20, v22 | (unint64_t)(v21 << 32), v49);
            }
          }
        }
      }
      sub_1B1D12448((uint64_t)&v55);
      v9 = v24;
      v10 = v23;
      if (v7)
        goto LABEL_4;
    }
    else
    {
      sub_1B1D12448((uint64_t)&v55);
      if (v7)
        goto LABEL_4;
    }
LABEL_6:
    v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v54)
    {
      v18 = *(_QWORD *)(v53 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v54)
        goto LABEL_21;
      v18 = *(_QWORD *)(v53 + 8 * v19);
      if (v18)
        goto LABEL_11;
      v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v54)
        goto LABEL_40;
      v18 = *(_QWORD *)(v53 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v54)
      {
LABEL_21:
        v11 = v17;
        goto LABEL_22;
      }
      v18 = *(_QWORD *)(v53 + 8 * v19);
      if (v18)
      {
LABEL_11:
        v17 = v19;
LABEL_8:
        v7 = (v18 - 1) & v18;
        v13 = __clz(__rbit64(v18)) + (v17 << 6);
        v11 = v17;
        goto LABEL_5;
      }
      v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v54)
      {
LABEL_40:
        v11 = v19;
      }
      else
      {
        v18 = *(_QWORD *)(v53 + 8 * v17);
        if (v18)
          goto LABEL_8;
        while (v46 != v11)
        {
          v18 = *(_QWORD *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        v11 = v45;
      }
    }
LABEL_22:
    v7 = 0;
    v57 = 0;
    v55 = 0u;
    memset(v56, 0, sizeof(v56));
    v58 = -1;
  }
  swift_release();
  v39 = *(_QWORD *)(*(_QWORD *)(v49 + 80) + 16);
  if (v39)
  {
    v40 = swift_bridgeObjectRetain();
    v41 = sub_1B1CF6D9C(v40, type metadata accessor for GraphScript);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v49 + 80) = v41;
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(*(_QWORD *)(v49 + 80) + 16);
  }
  else
  {
    v42 = 0;
  }
  v43 = v39 != v42;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 72));
  swift_release();
  return v43;
}

uint64_t sub_1B1D020AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  int *v32;
  int *v33;
  uint64_t v34;
  char v35;
  BOOL v36;
  void *v37;
  _OWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  _OWORD *v43;
  os_unfair_lock_s *v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_signpost_type_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  uint8_t *v65;
  os_signpost_id_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  dispatch_group_t v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  _DWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  _QWORD v93[3];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  dispatch_group_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[11];
  char v114;
  _BYTE v115[96];
  __int128 aBlock;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  unsigned __int8 v122;

  LODWORD(v101) = a8;
  v111 = a2;
  v112 = (uint64_t)a6;
  v103 = a4;
  v104 = a5;
  v102 = a3;
  v110 = type metadata accessor for GraphScript(0);
  v98 = *(_QWORD *)(v110 - 8);
  MEMORY[0x1E0C80A78](v110, v14);
  v99 = v15;
  v100 = (uint64_t)v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B2228380();
  v17 = *(_QWORD *)(v16 - 8);
  v107 = v16;
  v108 = v17;
  MEMORY[0x1E0C80A78](v16, v18);
  v97 = (char *)v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v93 - v22;
  MEMORY[0x1E0C80A78](v24, v25);
  v106 = (char *)v93 - v26;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a11;
  *(_QWORD *)(v27 + 24) = a12;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = sub_1B1D13E58;
  v28[3] = v27;
  v28[4] = a10;
  v29 = *(_QWORD *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  v30 = a10;
  v109 = v30;
  if (v29
    && ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(_BYTE *)(a1 + 2720) & 1) == 0))
  {
    sub_1B1B63B64();
    v37 = (void *)swift_allocError();
    *v38 = xmmword_1B228CCD0;
    if (!*(_QWORD *)(a11 + 16))
    {
LABEL_24:
      v44 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      v45 = v37;
      os_unfair_lock_lock(v44);
      v46 = *(void **)(a11 + 16);
      *(_QWORD *)(a11 + 16) = v37;
      v47 = v37;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v109);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    v48 = 0;
    goto LABEL_50;
  }
  v95 = v27;
  v31 = sub_1B1C9B394(v30);
  sub_1B1A1B6FC(0, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v33 = v32;
  v34 = a7 + v32[9];
  v35 = *(_BYTE *)(v34 + 8);
  v105 = v28;
  v96 = v31;
  v36 = (v35 & 1) == 0 && v31 == *(_QWORD *)v34;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v39 = *(_QWORD *)(a1 + 80);
  if (!*(_QWORD *)(v39 + 16) || (v40 = sub_1B1DC4138(v110, v112), (v41 & 1) == 0))
  {
    v121 = 0;
    v119 = 0u;
    v120 = 0u;
    v117 = 0u;
    v118 = 0u;
    aBlock = 0u;
    v122 = -1;
    goto LABEL_15;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v39 + 56) + 96 * v40, (uint64_t)&aBlock);
  if (v122 == 255)
  {
LABEL_15:
    sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v36)
      goto LABEL_17;
    goto LABEL_32;
  }
  sub_1B1C1A1D0((uint64_t)&aBlock, (uint64_t)v115);
  sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v115, (uint64_t)v113);
  if (v114)
  {
    sub_1B1D12448((uint64_t)v113);
    sub_1B1D12448((uint64_t)v115);
    goto LABEL_16;
  }
  v49 = v113[0];
  sub_1B1D12448((uint64_t)v115);
  if (v49 != v96)
    v36 = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v36)
  {
LABEL_17:
    if ((*(_BYTE *)(a7 + v33[10]) & 1) != 0)
    {
      v37 = *(void **)(a7 + v33[11]);
      v42 = v37;
    }
    else
    {
      sub_1B1B63B64();
      v37 = (void *)swift_allocError();
      *v43 = xmmword_1B2244C80;
    }
    if (!*(_QWORD *)(a11 + 16) && v37)
      goto LABEL_24;
    goto LABEL_7;
  }
  if (v49 == v96)
  {
    dispatch_group_leave(v109);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  v93[1] = a11;
  v93[2] = a12;
  sub_1B1D121E4(a7, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v94 = swift_allocBox();
  v51 = v50;
  sub_1B1CED4A0(v50);
  v52 = v51 + v33[9];
  v53 = v96;
  *(_QWORD *)v52 = v96;
  *(_BYTE *)(v52 + 8) = 0;
  sub_1B1D136D4(v111, v51, type metadata accessor for GraphScript);
  sub_1B1D12220(v51, a7, &qword_1ED4B9648, type metadata accessor for GraphScript, (uint64_t)&off_1ED4BBD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(_QWORD *)&aBlock = v53;
  v122 = 0;
  sub_1B20E1B28((uint64_t)&aBlock, v110, v112);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  v54 = *(_QWORD *)(a1 + 16);
  swift_retain();
  if (v54)
  {
    v55 = v107;
    v56 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v23, v54 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v107);
    swift_release();
    v57 = v106;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v106, v23, v55);
  }
  else
  {
    v57 = v106;
    v55 = v107;
    if (qword_1ED4BA0E0 != -1)
      swift_once();
    v58 = sub_1B22283B0();
    sub_1B1B40EC8(v58, (uint64_t)qword_1ED4D0E48);
    sub_1B2228398();
    sub_1B2228368();
  }
  v93[0] = HIDWORD(v112);
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v109 = a9;
  v59 = sub_1B22283B0();
  sub_1B1B40EC8(v59, (uint64_t)qword_1ED4D0E48);
  v60 = sub_1B2228398();
  v61 = sub_1B2228FA4();
  if ((sub_1B2229094() & 1) != 0)
  {
    v62 = v108;
    v63 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
    v64 = v97;
    v63(v97, v57, v55);
    v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v65 = 0;
    v66 = sub_1B2228374();
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v60, v61, v66, "buildScript", "", v65, 2u);
    MEMORY[0x1B5E23F88](v65, -1, -1);

    v67 = v64;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v55);
  }
  else
  {

    v63 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
    v67 = v97;
  }
  v63(v67, v57, v55);
  sub_1B22283E0();
  swift_allocObject();
  v68 = sub_1B22283D4();
  v69 = v100;
  sub_1B1792810(v111, v100, type metadata accessor for GraphScript);
  v70 = (*(unsigned __int8 *)(v98 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
  v71 = (v99 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v71 + 27) & 0xFFFFFFFFFFFFFFF8;
  v73 = swift_allocObject();
  v74 = v109;
  v75 = v110;
  *(_QWORD *)(v73 + 16) = a1;
  *(_QWORD *)(v73 + 24) = v75;
  v76 = v112;
  v110 = a1;
  v111 = v68;
  v77 = v93[0];
  *(_DWORD *)(v73 + 32) = v112;
  *(_DWORD *)(v73 + 36) = v77;
  *(_QWORD *)(v73 + 40) = v96;
  *(_QWORD *)(v73 + 48) = sub_1B1D12284;
  *(_QWORD *)(v73 + 56) = v105;
  *(_QWORD *)(v73 + 64) = v68;
  memcpy((void *)(v73 + 72), v74, 0x148uLL);
  sub_1B1A025EC(v69, v73 + v70, type metadata accessor for GraphScript);
  v78 = (uint64_t *)(v73 + v71);
  v80 = v102;
  v79 = v103;
  *v78 = v102;
  v78[1] = v79;
  v78[2] = v104;
  v81 = (_DWORD *)(v73 + v72);
  *v81 = v76;
  v81[1] = v77;
  *(_QWORD *)(v73 + ((v72 + 15) & 0xFFFFFFFFFFFFFFF8)) = v94;
  if ((v101 & 1) != 0)
  {
    v112 = *(_QWORD *)(v110 + 40);
    v82 = swift_allocObject();
    *(_QWORD *)(v82 + 16) = sub_1B1D135B4;
    *(_QWORD *)(v82 + 24) = v73;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v109);
    sub_1B1C18F0C(v80, v79);
    v83 = qword_1ED4BF430;
    swift_retain();
    swift_retain();
    if (v83 != -1)
      swift_once();
    v84 = qword_1ED4BF658;
    swift_retain();
    v85 = v106;
    if (v84 != -1)
      swift_once();
    v86 = qword_1ED4D0FD0;
    swift_retain();
    swift_release();
    v87 = (_QWORD *)swift_allocObject();
    v87[2] = v86;
    v87[3] = sub_1B1D13D9C;
    v87[4] = v82;
    *(_QWORD *)&v118 = sub_1B1D13E54;
    *((_QWORD *)&v118 + 1) = v87;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v117 = sub_1B17915D0;
    *((_QWORD *)&v117 + 1) = &unk_1E63EE368;
    v88 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend((id)v112, sel_addOperationWithBlock_, v88);
    _Block_release(v88);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v85, v107);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    v112 = *(_QWORD *)(v110 + 32);
    v89 = swift_allocObject();
    *(_QWORD *)(v89 + 16) = sub_1B1D135B4;
    *(_QWORD *)(v89 + 24) = v73;
    v90 = swift_allocObject();
    *(_QWORD *)(v90 + 16) = sub_1B1D13D9C;
    *(_QWORD *)(v90 + 24) = v89;
    *(_QWORD *)&v118 = sub_1B1D13D9C;
    *((_QWORD *)&v118 + 1) = v90;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v117 = sub_1B1CDBFCC;
    *((_QWORD *)&v117 + 1) = &unk_1E63EE2F0;
    v91 = _Block_copy(&aBlock);
    v101 = *((_QWORD *)&v118 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v109);
    sub_1B1C18F0C(v80, v79);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v112, v91);
    _Block_release(v91);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v106, v107);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  v48 = 1;
LABEL_50:
  swift_release();
  return v48;
}

void sub_1B1D02CBC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[4];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  int *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  char *v74;
  uint64_t v75[11];
  char v76;
  char v77[8];
  __int128 v78;
  char v79;
  char *v80;

  v73 = a7;
  v66 = a6;
  v59 = a4;
  v67 = a3;
  v58 = a2;
  v57 = a1;
  sub_1B1D130C4();
  MEMORY[0x1E0C80A78](v8, v9);
  v80 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v12 = v11;
  v72 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v65 = (uint64_t)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v71 = (uint64_t)v56 - v17;
  sub_1B1D13138();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v23 = v22;
  v70 = *((_QWORD *)v22 - 1);
  MEMORY[0x1E0C80A78](v22, v24);
  v69 = (char *)v56 - v25;
  v26 = *(_QWORD *)(a5 + 16);
  if (v26)
  {
    v56[2] = v66 + 80;
    v27 = a5 + 32;
    v56[1] = a5;
    swift_bridgeObjectRetain();
    v28 = v67;
    v68 = v23;
    v29 = (uint64_t)v69;
    v74 = v21;
    v64 = v12;
    while (1)
    {
      sub_1B1D12130(v27, (uint64_t)&v78);
      if ((v79 & 1) != 0)
        break;
      sub_1B1A02518(&v78, (uint64_t)v77);
      sub_1B19FA198((uint64_t)v77, (uint64_t)v75);
      sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
      v37 = swift_dynamicCast();
      v38 = *(void (**)(char *, uint64_t, uint64_t, int *))(v70 + 56);
      if ((v37 & 1) != 0)
      {
        v38(v21, 0, 1, v23);
        sub_1B1D12190((uint64_t)v21, v29, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        v39 = sub_1B1C9CC24();
        v40 = v29 + *(int *)(v12 + 36);
        if ((*(_BYTE *)(v40 + 8) & 1) == 0 && v39 == *(_QWORD *)v40)
        {
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v66 + 72));
          v41 = v65;
          sub_1B1D12220(v29, v65, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          sub_1B1D136D4((uint64_t)v28, v41, type metadata accessor for SimpleScript);
          v42 = *v28;
          v43 = v57;
          v44 = *(_QWORD *)(v57 + 16);
          v45 = *(_BYTE *)(v57 + 184);
          swift_retain();
          if ((v45 & 1) != 0)
          {
            sub_1B2229688();
            __break(1u);
            return;
          }
          v46 = *(_QWORD *)(v43 + 168);
          v63 = type metadata accessor for SimpleScript(0);
          v62 = *(unsigned int *)(v46 + 4 * v58);
          v61 = *(unsigned int *)(*(_QWORD *)(v44 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v62 + 8);
          swift_bridgeObjectRetain();
          swift_release();
          v75[3] = v64;
          v47 = sub_1B1A137F4(v75);
          sub_1B1D12220(v41, (uint64_t)v47, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v23 = v68;
          v48 = v68[10];
          v29 = (uint64_t)v69;
          v49 = *(_QWORD *)&v69[v68[9]];
          v60 = v42;
          v50 = *(_QWORD *)&v69[v48];
          v75[4] = v49;
          v75[5] = v50;
          v75[6] = *(_QWORD *)&v69[v68[11]];
          sub_1B1A02758(0, &qword_1EEF5D958, (uint64_t)&type metadata for ParticleScriptRuntime, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
          v75[10] = v51;
          v75[7] = v60;
          v75[8] = 0;
          v76 = 1;
          v52 = v62 | (v61 << 32);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B20E1B28((uint64_t)v75, v63, v52);
          sub_1B1D121E4(v65, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v66 + 72));
          v28 = v67;
          v12 = v64;
          v21 = v74;
        }
        sub_1B1D121E4(v29, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
        *v73 = 1;
      }
      else
      {
        v38(v21, 1, 1, v23);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
        sub_1B1A04628((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1B1D13138);
      }
LABEL_5:
      v27 += 48;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    sub_1B1A02518(&v78, (uint64_t)v75);
    sub_1B19FA198((uint64_t)v75, (uint64_t)v77);
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
    v31 = swift_dynamicCast();
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
    if ((v31 & 1) == 0)
    {
      v30 = (uint64_t)v80;
      v32(v80, 1, 1, v12);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v75);
      sub_1B1A04628(v30, (uint64_t (*)(_QWORD))sub_1B1D130C4);
LABEL_4:
      v21 = v74;
      goto LABEL_5;
    }
    v33 = (uint64_t)v80;
    v32(v80, 0, 1, v12);
    v34 = v71;
    sub_1B1D12190(v33, v71, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v35 = sub_1B1C9CC24();
    v36 = v34 + *(int *)(v12 + 36);
    if ((*(_BYTE *)(v36 + 8) & 1) != 0)
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v75);
    }
    else
    {
      v53 = v35;
      v54 = *(_QWORD *)v36;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v75);
      v28 = v67;
      if (v53 == v54)
      {
        v55 = v59;
        sub_1B1D121E4(v59, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        sub_1B1D12190(v71, v55, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
LABEL_20:
        v23 = v68;
        *v73 = 1;
        v29 = (uint64_t)v69;
        goto LABEL_4;
      }
    }
    sub_1B1D121E4(v71, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    goto LABEL_20;
  }
}

uint64_t sub_1B1D0345C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  int *v57;
  _UNKNOWN **v58;
  char v59;
  _OWORD v60[2];
  _OWORD v61[2];
  id v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  char v66;
  uint64_t v67;

  v67 = a6;
  v51 = a3;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v43 - v14;
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v17 = v16;
  MEMORY[0x1E0C80A78](v16, v18);
  v20 = (char *)&v43 - v19;
  result = sub_1B1C1A1D0(a2, (uint64_t)v61);
  if (v66)
  {
    v50 = a4;
    if (v66 != 1)
    {
      sub_1B1D121E4(a1, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);

      sub_1B1A0DDAC(v61, v60);
      sub_1B1A02864((uint64_t)v60, (uint64_t)&v55);
      swift_dynamicCast();
      sub_1B1D12190((uint64_t)v15, a1, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v57 = v12;
      v58 = &off_1E639EB98;
      v42 = sub_1B1A137F4(&v55);
      sub_1B1D12220(a1, (uint64_t)v42, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      v59 = 1;
      sub_1B20E19E8((uint64_t)&v55, v50, a5);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v60);
    }
    v48 = v6;
    sub_1B1D121E4(a1, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v49 = v62;
    v46 = v63;
    v45 = v64;
    sub_1B1A0DDAC(v61, v60);
    sub_1B1A0DDAC(&v65, v54);
    v22 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)v20 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v20 + 1) = 0;
    *((_QWORD *)v20 + 2) = 0xE000000000000000;
    *((_QWORD *)v20 + 3) = &unk_1E639F1F8;
    *((_WORD *)v20 + 16) = 2;
    v23 = &v20[*(int *)(type metadata accessor for SimpleScript(0) + 36)];
    v24 = type metadata accessor for ScriptIndex();
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
    v47 = a5;
    v25(v23, 1, 1, v24);
    v26 = &v20[v12[9]];
    *(_QWORD *)v26 = 0;
    v26[8] = 1;
    v20[v12[10]] = 0;
    *(_QWORD *)&v20[v12[11]] = 0;
    v27 = &v20[v12[12]];
    *(_QWORD *)v27 = 0;
    *((_QWORD *)v27 + 1) = 0xE000000000000000;
    *(_QWORD *)&v20[v12[13]] = v22;
    v28 = v17[9];
    *(_QWORD *)&v20[v28] = 0;
    v29 = v17[10];
    *(_QWORD *)&v20[v29] = 0;
    v44 = a1;
    v30 = v17[11];
    *(_QWORD *)&v20[v30] = 0;
    *(_QWORD *)&v20[v17[12]] = 0;
    v20[v17[13]] = 0;
    v31 = &v20[v17[14]];
    *(_QWORD *)v31 = 0;
    v31[8] = 1;
    v32 = (uint64_t *)&v20[v17[15]];
    *v32 = 0;
    v32[1] = 0;
    sub_1B1A02864((uint64_t)v60, (uint64_t)&v55);
    swift_dynamicCast();
    v33 = v49;
    sub_1B1D12954((uint64_t)v15, (uint64_t)v20, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8);
    *(_QWORD *)&v20[v28] = v33;
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v20[v30] = v45;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v20[v29] = v46;
    sub_1B1A02864((uint64_t)v54, (uint64_t)&v55);
    swift_dynamicCast();
    v34 = v52;
    v35 = v53;
    sub_1B1B28F18(*v32);
    *v32 = v34;
    v32[1] = v35;
    v36 = v47;
    sub_1B1D12220((uint64_t)v20, v44, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
    v37 = v51;
    sub_1B1BF7C98((uint64_t)v20, v36);
    v57 = v17;
    v58 = &off_1E637D0A8;
    v38 = sub_1B1A137F4(&v55);
    sub_1B1D12220((uint64_t)v20, (uint64_t)v38, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
    v59 = 0;
    sub_1B20E19E8((uint64_t)&v55, v50, v36);
    v39 = sub_1B1D1842C(v36);
    if (v39)
    {
      sub_1B1CDC014(v37, v39, v40, (void (*)(uint64_t))sub_1B1B21584, (void (*)(uint64_t))sub_1B1B21584);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B1A02864((uint64_t)v54, (uint64_t)&v55);
    if (swift_dynamicCast())
    {
      v41 = v52;
      swift_bridgeObjectRelease();
      v55 = MEMORY[0x1E0DEE9D8];
      v56 = MEMORY[0x1E0DEE9D8];
      sub_1B1CE618C(v37, v41);
      swift_bridgeObjectRelease();
      sub_1B1BF7CA4(v55, v56, v36);
    }
    else
    {
      sub_1B1A02864((uint64_t)v54, (uint64_t)&v55);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:
        sub_1B2094804(v36);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v54);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v60);
        return sub_1B1D121E4((uint64_t)v20, (unint64_t *)&unk_1ED4B88D0, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1B1D03AEC(_QWORD *a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t result;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  int64_t v54;
  __int128 v55;
  _OWORD v56[5];
  uint64_t v57;
  char v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  _BYTE v62[104];

  v2 = a1[2];
  v3 = (os_unfair_lock_s *)a1[9];
  swift_retain();
  os_unfair_lock_lock(v3);
  v49 = (uint64_t)a1;
  v50 = v2;
  v4 = a1[10];
  v53 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v52 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v56;
  v10 = v62;
  v45 = v8 - 1;
  swift_bridgeObjectRetain();
  v11 = 0;
  v54 = v8;
  v46 = v8 - 6;
  if (!v7)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v13 = v12 | (v11 << 6);
LABEL_5:
  v14 = *(_QWORD *)(v4 + 56);
  v15 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v13);
  v16 = v15[1];
  *(_QWORD *)&v55 = *v15;
  *((_QWORD *)&v55 + 1) = v16;
  sub_1B1C1A1D0(v14 + 96 * v13, (uint64_t)v9);
  while (1)
  {
    sub_1B1D125FC((uint64_t)&v55, (uint64_t)&v59);
    if (v62[88] == 255)
      break;
    v20 = v59;
    v21 = v61;
    v22 = v60;
    sub_1B1B99D74((uint64_t)v10, (uint64_t)&v55);
    if (v20 == type metadata accessor for SimpleScript(0))
    {
      v23 = v10;
      v24 = v9;
      if (((_DWORD)v22 != -1 || (_DWORD)v21) && (v22 & 0x80000000) == 0 && v52[1] > v22)
      {
        v51 = *v52;
        v25 = *v52 + 12 * (int)v22;
        v28 = *(_DWORD *)(v25 + 8);
        v27 = (_DWORD *)(v25 + 8);
        v26 = v28;
        if ((_DWORD)v21 == -1 || v26 == (_DWORD)v21)
        {
          sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 80)
                                                  + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6)
                                                  + 32)
                                      + 16)
                          + 128);
          if (*(_QWORD *)(v30 + 16))
          {
            v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 80) + 8 * *(__int16 *)(v51 + 12 * (int)v22 + 6) + 32)
                            + 16);
            v48 = v29;
            v31 = sub_1B1DC3AC8(v29);
            if ((v32 & 1) != 0
              && *(_QWORD *)(*(_QWORD *)(v47 + 24) + 16 * *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v31) + 32) == v48)
            {
              v33 = *(_QWORD *)(v48 - 8);
              if (*(_QWORD *)(v33 + 64))
                v34 = *(_QWORD *)(v33 + 72);
              else
                v34 = 0;
              if ((_DWORD)v21 != -1 && *v27 != (_DWORD)v21
                || (v35 = *(_QWORD *)(*(_QWORD *)(v50 + 136) + 8 * *(int *)(v51 + 12 * (int)v22) + 32),
                    v36 = *(_QWORD *)(v35 + 48),
                    (v37 = *(_QWORD *)(v36 + 16)) == 0))
              {
LABEL_55:
                sub_1B2229430();
                sub_1B2228890();
                sub_1B1BC3C70();
                sub_1B2228890();
                swift_bridgeObjectRelease();
                sub_1B2228890();
                sub_1B2228890();
                sub_1B2228890();
                result = sub_1B2229688();
                __break(1u);
                return result;
              }
              v38 = (_QWORD *)(v36 + 56);
              while (*(v38 - 3) != v48)
              {
                v38 += 5;
                if (!--v37)
                  goto LABEL_55;
              }
              sub_1B1D0345C(*(_QWORD *)(v35 + 128) + *v38 + v34 * *(__int16 *)(v51 + 12 * (int)v22 + 4), (uint64_t)&v55, v50, v20, v22 | (unint64_t)(v21 << 32), v49);
            }
          }
        }
      }
      sub_1B1D12448((uint64_t)&v55);
      v9 = v24;
      v10 = v23;
      if (v7)
        goto LABEL_4;
    }
    else
    {
      sub_1B1D12448((uint64_t)&v55);
      if (v7)
        goto LABEL_4;
    }
LABEL_6:
    v17 = v11 + 1;
    if ((uint64_t)(v11 + 1) < v54)
    {
      v18 = *(_QWORD *)(v53 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 2;
      if ((uint64_t)(v11 + 2) >= v54)
        goto LABEL_21;
      v18 = *(_QWORD *)(v53 + 8 * v19);
      if (v18)
        goto LABEL_11;
      v17 = v11 + 3;
      if ((uint64_t)(v11 + 3) >= v54)
        goto LABEL_40;
      v18 = *(_QWORD *)(v53 + 8 * v17);
      if (v18)
        goto LABEL_8;
      v19 = v11 + 4;
      if ((uint64_t)(v11 + 4) >= v54)
      {
LABEL_21:
        v11 = v17;
        goto LABEL_22;
      }
      v18 = *(_QWORD *)(v53 + 8 * v19);
      if (v18)
      {
LABEL_11:
        v17 = v19;
LABEL_8:
        v7 = (v18 - 1) & v18;
        v13 = __clz(__rbit64(v18)) + (v17 << 6);
        v11 = v17;
        goto LABEL_5;
      }
      v17 = v11 + 5;
      if ((uint64_t)(v11 + 5) >= v54)
      {
LABEL_40:
        v11 = v19;
      }
      else
      {
        v18 = *(_QWORD *)(v53 + 8 * v17);
        if (v18)
          goto LABEL_8;
        while (v46 != v11)
        {
          v18 = *(_QWORD *)(v4 + 112 + 8 * v11++);
          if (v18)
          {
            v17 = v11 + 5;
            goto LABEL_8;
          }
        }
        v11 = v45;
      }
    }
LABEL_22:
    v7 = 0;
    v57 = 0;
    v55 = 0u;
    memset(v56, 0, sizeof(v56));
    v58 = -1;
  }
  swift_release();
  v39 = *(_QWORD *)(*(_QWORD *)(v49 + 80) + 16);
  if (v39)
  {
    v40 = swift_bridgeObjectRetain();
    v41 = sub_1B1CF6D9C(v40, type metadata accessor for SimpleScript);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v49 + 80) = v41;
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(*(_QWORD *)(v49 + 80) + 16);
  }
  else
  {
    v42 = 0;
  }
  v43 = v39 != v42;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 72));
  swift_release();
  return v43;
}

uint64_t sub_1B1D04084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int *v32;
  uint64_t v33;
  char v34;
  BOOL v35;
  void *v36;
  _OWORD *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  _OWORD *v42;
  os_unfair_lock_s *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_signpost_type_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint8_t *v64;
  os_signpost_id_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  dispatch_group_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _QWORD v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  dispatch_group_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[11];
  char v113;
  _BYTE v114[96];
  __int128 aBlock;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  unsigned __int8 v121;

  LODWORD(v100) = a8;
  v110 = a2;
  v111 = (uint64_t)a6;
  v102 = a4;
  v103 = a5;
  v101 = a3;
  v109 = type metadata accessor for SimpleScript(0);
  v97 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109, v14);
  v98 = v15;
  v99 = (uint64_t)v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B2228380();
  v17 = *(_QWORD *)(v16 - 8);
  v106 = v16;
  v107 = v17;
  MEMORY[0x1E0C80A78](v16, v18);
  v96 = (char *)v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v92 - v22;
  MEMORY[0x1E0C80A78](v24, v25);
  v105 = (char *)v92 - v26;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a11;
  *(_QWORD *)(v27 + 24) = a12;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = sub_1B1D13E58;
  v28[3] = v27;
  v28[4] = a10;
  v29 = *(_QWORD *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  v108 = a10;
  if (v29
    && ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(_BYTE *)(a1 + 2720) & 1) == 0))
  {
    sub_1B1B63B64();
    v36 = (void *)swift_allocError();
    *v37 = xmmword_1B228CCD0;
    if (!*(_QWORD *)(a11 + 16))
    {
LABEL_24:
      v43 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      v44 = v36;
      os_unfair_lock_lock(v43);
      v45 = *(void **)(a11 + 16);
      *(_QWORD *)(a11 + 16) = v36;
      v46 = v36;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v108);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    v47 = 0;
    goto LABEL_50;
  }
  v94 = v27;
  v30 = sub_1B1C9CC24();
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v32 = v31;
  v33 = a7 + v31[9];
  v34 = *(_BYTE *)(v33 + 8);
  v104 = v28;
  v95 = v30;
  v35 = (v34 & 1) == 0 && v30 == *(_QWORD *)v33;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v38 = *(_QWORD *)(a1 + 80);
  if (!*(_QWORD *)(v38 + 16) || (v39 = sub_1B1DC4138(v109, v111), (v40 & 1) == 0))
  {
    v120 = 0;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    aBlock = 0u;
    v121 = -1;
    goto LABEL_15;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v38 + 56) + 96 * v39, (uint64_t)&aBlock);
  if (v121 == 255)
  {
LABEL_15:
    sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v35)
      goto LABEL_17;
    goto LABEL_32;
  }
  sub_1B1C1A1D0((uint64_t)&aBlock, (uint64_t)v114);
  sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v114, (uint64_t)v112);
  if (v113)
  {
    sub_1B1D12448((uint64_t)v112);
    sub_1B1D12448((uint64_t)v114);
    goto LABEL_16;
  }
  v48 = v112[0];
  sub_1B1D12448((uint64_t)v114);
  if (v48 != v95)
    v35 = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v35)
  {
LABEL_17:
    if ((*(_BYTE *)(a7 + v32[10]) & 1) != 0)
    {
      v36 = *(void **)(a7 + v32[11]);
      v41 = v36;
    }
    else
    {
      sub_1B1B63B64();
      v36 = (void *)swift_allocError();
      *v42 = xmmword_1B2244C80;
    }
    if (!*(_QWORD *)(a11 + 16) && v36)
      goto LABEL_24;
    goto LABEL_7;
  }
  if (v48 == v95)
  {
    dispatch_group_leave(v108);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  v92[1] = a11;
  v92[2] = a12;
  sub_1B1D121E4(a7, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v93 = swift_allocBox();
  v50 = v49;
  sub_1B1CED3B8(v49);
  v51 = v50 + v32[9];
  v52 = v95;
  *(_QWORD *)v51 = v95;
  *(_BYTE *)(v51 + 8) = 0;
  sub_1B1D136D4(v110, v50, type metadata accessor for SimpleScript);
  sub_1B1D12220(v50, a7, (unint64_t *)&unk_1ED4B9660, type metadata accessor for SimpleScript, (uint64_t)&off_1ED4BC1D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(_QWORD *)&aBlock = v52;
  v121 = 0;
  sub_1B20E1B28((uint64_t)&aBlock, v109, v111);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  v53 = *(_QWORD *)(a1 + 16);
  swift_retain();
  if (v53)
  {
    v54 = v106;
    v55 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v23, v53 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v106);
    swift_release();
    v56 = v105;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v105, v23, v54);
  }
  else
  {
    v56 = v105;
    v54 = v106;
    if (qword_1ED4BA0E0 != -1)
      swift_once();
    v57 = sub_1B22283B0();
    sub_1B1B40EC8(v57, (uint64_t)qword_1ED4D0E48);
    sub_1B2228398();
    sub_1B2228368();
  }
  v92[0] = HIDWORD(v111);
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v108 = a9;
  v58 = sub_1B22283B0();
  sub_1B1B40EC8(v58, (uint64_t)qword_1ED4D0E48);
  v59 = sub_1B2228398();
  v60 = sub_1B2228FA4();
  if ((sub_1B2229094() & 1) != 0)
  {
    v61 = v107;
    v62 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v63 = v96;
    v62(v96, v56, v54);
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    v65 = sub_1B2228374();
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v59, v60, v65, "buildScript", "", v64, 2u);
    MEMORY[0x1B5E23F88](v64, -1, -1);

    v66 = v63;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v54);
  }
  else
  {

    v62 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v66 = v96;
  }
  v62(v66, v56, v54);
  sub_1B22283E0();
  swift_allocObject();
  v67 = sub_1B22283D4();
  v68 = v99;
  sub_1B1792810(v110, v99, type metadata accessor for SimpleScript);
  v69 = (*(unsigned __int8 *)(v97 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  v70 = (v98 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v70 + 27) & 0xFFFFFFFFFFFFFFF8;
  v72 = swift_allocObject();
  v73 = v108;
  v74 = v109;
  *(_QWORD *)(v72 + 16) = a1;
  *(_QWORD *)(v72 + 24) = v74;
  v75 = v111;
  v109 = a1;
  v110 = v67;
  v76 = v92[0];
  *(_DWORD *)(v72 + 32) = v111;
  *(_DWORD *)(v72 + 36) = v76;
  *(_QWORD *)(v72 + 40) = v95;
  *(_QWORD *)(v72 + 48) = sub_1B1D12284;
  *(_QWORD *)(v72 + 56) = v104;
  *(_QWORD *)(v72 + 64) = v67;
  memcpy((void *)(v72 + 72), v73, 0x148uLL);
  sub_1B1A025EC(v68, v72 + v69, type metadata accessor for SimpleScript);
  v77 = (uint64_t *)(v72 + v70);
  v79 = v101;
  v78 = v102;
  *v77 = v101;
  v77[1] = v78;
  v77[2] = v103;
  v80 = (_DWORD *)(v72 + v71);
  *v80 = v75;
  v80[1] = v76;
  *(_QWORD *)(v72 + ((v71 + 15) & 0xFFFFFFFFFFFFFFF8)) = v93;
  if ((v100 & 1) != 0)
  {
    v111 = *(_QWORD *)(v109 + 40);
    v81 = swift_allocObject();
    *(_QWORD *)(v81 + 16) = sub_1B1D13320;
    *(_QWORD *)(v81 + 24) = v72;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v108);
    sub_1B1C18F0C(v79, v78);
    v82 = qword_1ED4BF430;
    swift_retain();
    swift_retain();
    if (v82 != -1)
      swift_once();
    v83 = qword_1ED4BF658;
    swift_retain();
    v84 = v105;
    if (v83 != -1)
      swift_once();
    v85 = qword_1ED4D0FD0;
    swift_retain();
    swift_release();
    v86 = (_QWORD *)swift_allocObject();
    v86[2] = v85;
    v86[3] = sub_1B1D13D9C;
    v86[4] = v81;
    *(_QWORD *)&v117 = sub_1B1D13E54;
    *((_QWORD *)&v117 + 1) = v86;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v116 = sub_1B17915D0;
    *((_QWORD *)&v116 + 1) = &unk_1E63EE200;
    v87 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend((id)v111, sel_addOperationWithBlock_, v87);
    _Block_release(v87);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v84, v106);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    v111 = *(_QWORD *)(v109 + 32);
    v88 = swift_allocObject();
    *(_QWORD *)(v88 + 16) = sub_1B1D13320;
    *(_QWORD *)(v88 + 24) = v72;
    v89 = swift_allocObject();
    *(_QWORD *)(v89 + 16) = sub_1B1D13D9C;
    *(_QWORD *)(v89 + 24) = v88;
    *(_QWORD *)&v117 = sub_1B1D13D9C;
    *((_QWORD *)&v117 + 1) = v89;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v116 = sub_1B1CDBFCC;
    *((_QWORD *)&v116 + 1) = &unk_1E63EE188;
    v90 = _Block_copy(&aBlock);
    v100 = *((_QWORD *)&v117 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v108);
    sub_1B1C18F0C(v79, v78);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v111, v90);
    _Block_release(v90);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v105, v106);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  v47 = 1;
LABEL_50:
  swift_release();
  return v47;
}

void sub_1B1D04C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)();
  char v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[4];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  _BYTE v92[40];
  __int128 v93[2];
  char v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;

  v68 = a4;
  v105 = a3;
  v66 = a1;
  v67 = a2;
  sub_1B1D12D8C();
  MEMORY[0x1E0C80A78](v11, v12);
  v84 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v80 = v14;
  v78 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v73 = (uint64_t)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v18);
  v81 = (uint64_t)v65 - v19;
  sub_1B1D12E00();
  MEMORY[0x1E0C80A78](v20, v21);
  v74 = (char *)v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v24 = v23;
  v77 = *((_QWORD *)v23 - 1);
  MEMORY[0x1E0C80A78](v23, v25);
  v27 = (char *)v65 - v26;
  v83 = *(_QWORD *)(a5 + 16);
  if (v83)
  {
    v71 = a6;
    v65[2] = v7;
    v65[3] = a6 + 80;
    v82 = a5 + 32;
    v65[1] = a5;
    swift_bridgeObjectRetain();
    v28 = 0;
    v76 = a7;
    v29 = v80;
    v30 = (uint64_t)v74;
    v79 = v24;
    v75 = v27;
    while (1)
    {
      sub_1B1D12130(v82 + 48 * v28, (uint64_t)v93);
      if ((v94 & 1) != 0)
        break;
      sub_1B1A02518(v93, (uint64_t)v92);
      sub_1B19FA198((uint64_t)v92, (uint64_t)&v85);
      sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
      v40 = swift_dynamicCast();
      v41 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v77 + 56);
      if ((v40 & 1) == 0)
      {
        v41(v30, 1, 1, v24);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
        v31 = v30;
        v32 = sub_1B1D12E00;
LABEL_4:
        sub_1B1A04628(v31, (uint64_t (*)(_QWORD))v32);
        goto LABEL_5;
      }
      v41(v30, 0, 1, v24);
      sub_1B1D12190(v30, (uint64_t)v27, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      sub_1B222A0CC();
      v42 = v105;
      swift_bridgeObjectRetain();
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v72 = type metadata accessor for MetalFunctionScript(0);
      v43 = *(_QWORD *)(v42 + *(int *)(v72 + 28));
      sub_1B222A078();
      v44 = *(_QWORD *)(v43 + 16);
      if (v44)
      {
        swift_bridgeObjectRetain();
        v45 = v43 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v45 += 16;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease();
      }
      v29 = v80;
      v46 = v73;
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v97 = v87;
      v98 = v88;
      v99 = v89;
      v95 = v85;
      v96 = v86;
      v54 = sub_1B222A0B4();
      v27 = v75;
      v55 = &v75[*(int *)(v29 + 36)];
      if ((v55[8] & 1) == 0 && v54 == *(_QWORD *)v55)
      {
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v71 + 72));
        sub_1B1D12220((uint64_t)v27, v46, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        sub_1B1D136D4(v105, v46, type metadata accessor for MetalFunctionScript);
        v56 = v27;
        v57 = v66;
        v58 = *(_BYTE *)(v66 + 184);
        v59 = swift_retain();
        if ((v58 & 1) != 0)
        {
          sub_1B2229688();
          __break(1u);
          return;
        }
        v60 = *(unsigned int *)(*(_QWORD *)(v57 + 168) + 4 * v67);
        v69 = *(unsigned int *)(*(_QWORD *)(v59 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v60 + 8);
        v70 = v60;
        swift_release();
        *((_QWORD *)&v86 + 1) = v29;
        v61 = sub_1B1A137F4((uint64_t *)&v85);
        sub_1B1D12220(v46, (uint64_t)v61, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        v62 = *(_QWORD *)&v56[v79[10]];
        *(_QWORD *)&v87 = *(_QWORD *)&v56[v79[9]];
        *((_QWORD *)&v87 + 1) = v62;
        *(_QWORD *)&v88 = *(_QWORD *)&v56[v79[11]];
        sub_1B1A02758(0, &qword_1EEF5D9C8, (uint64_t)&type metadata for CodableVoid, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
        v90 = v63;
        BYTE8(v88) = 0;
        v91 = 1;
        v64 = v70 | (v69 << 32);
        swift_retain();
        v29 = v80;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B20E1B28((uint64_t)&v85, v72, v64);
        sub_1B1D121E4(v73, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 72));
        v27 = v56;
      }
      sub_1B1D121E4((uint64_t)v27, (unint64_t *)&qword_1ED4BB240, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
      *v76 = 1;
      v30 = (uint64_t)v74;
      v24 = v79;
LABEL_5:
      if (++v28 == v83)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    sub_1B1A02518(v93, (uint64_t)v92);
    sub_1B19FA198((uint64_t)v92, (uint64_t)&v85);
    sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
    v33 = swift_dynamicCast();
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
    if ((v33 & 1) != 0)
    {
      v35 = (uint64_t)v84;
      v34(v84, 0, 1, v29);
      sub_1B1D12190(v35, v81, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      sub_1B222A0CC();
      v36 = v105;
      swift_bridgeObjectRetain();
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(v36 + *(int *)(type metadata accessor for MetalFunctionScript(0) + 28));
      sub_1B222A078();
      v38 = *(_QWORD *)(v37 + 16);
      if (v38)
      {
        swift_bridgeObjectRetain();
        v39 = v37 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v39 += 16;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
        v30 = (uint64_t)v74;
      }
      v29 = v80;
      sub_1B2228824();
      swift_bridgeObjectRelease();
      v102 = v87;
      v103 = v88;
      v104 = v89;
      v100 = v85;
      v101 = v86;
      v48 = sub_1B222A0B4();
      v49 = (uint64_t *)(v81 + *(int *)(v29 + 36));
      if ((v49[1] & 1) != 0)
      {
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
        v24 = v79;
        goto LABEL_25;
      }
      v50 = v48;
      v51 = *v49;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
      v52 = v50 == v51;
      v24 = v79;
      if (v52)
      {
        v53 = v68;
        sub_1B1D121E4(v68, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
        sub_1B1D12190(v81, v53, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      else
      {
LABEL_25:
        sub_1B1D121E4(v81, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
      }
      v27 = v75;
      *v76 = 1;
      goto LABEL_5;
    }
    v47 = v84;
    v34(v84, 1, 1, v29);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
    v31 = (uint64_t)v47;
    v32 = sub_1B1D12D8C;
    goto LABEL_4;
  }
}

uint64_t sub_1B1D055A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8, NSObject *a9, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int *v32;
  uint64_t v33;
  char v34;
  BOOL v35;
  void *v36;
  _OWORD *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  _OWORD *v42;
  os_unfair_lock_s *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_signpost_type_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint8_t *v64;
  os_signpost_id_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  dispatch_group_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _QWORD v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  dispatch_group_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[11];
  char v113;
  _BYTE v114[96];
  __int128 aBlock;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  unsigned __int8 v121;

  LODWORD(v100) = a8;
  v110 = a2;
  v111 = (uint64_t)a6;
  v102 = a4;
  v103 = a5;
  v101 = a3;
  v109 = type metadata accessor for MetalFunctionScript(0);
  v97 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109, v14);
  v98 = v15;
  v99 = (uint64_t)v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B2228380();
  v17 = *(_QWORD *)(v16 - 8);
  v106 = v16;
  v107 = v17;
  MEMORY[0x1E0C80A78](v16, v18);
  v96 = (char *)v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v92 - v22;
  MEMORY[0x1E0C80A78](v24, v25);
  v105 = (char *)v92 - v26;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a11;
  *(_QWORD *)(v27 + 24) = a12;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = sub_1B1D13E58;
  v28[3] = v27;
  v28[4] = a10;
  v29 = *(_QWORD *)(a1 + 16);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  v108 = a10;
  if (v29
    && ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig) & 1) == 0
     || (*(_BYTE *)(a1 + 2720) & 1) == 0))
  {
    sub_1B1B63B64();
    v36 = (void *)swift_allocError();
    *v37 = xmmword_1B228CCD0;
    if (!*(_QWORD *)(a11 + 16))
    {
LABEL_24:
      v43 = *(os_unfair_lock_s **)(a12 + 72);
      swift_retain();
      swift_retain();
      v44 = v36;
      os_unfair_lock_lock(v43);
      v45 = *(void **)(a11 + 16);
      *(_QWORD *)(a11 + 16) = v36;
      v46 = v36;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a12 + 72));
      goto LABEL_25;
    }
LABEL_7:
    swift_retain();
    swift_retain();
LABEL_25:
    dispatch_group_leave(v108);
    swift_release();
    swift_release();

    swift_release();
    swift_release_n();
    swift_release();
LABEL_26:
    swift_release();
    v47 = 0;
    goto LABEL_50;
  }
  v94 = v27;
  v30 = sub_1B1C9DE80();
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v32 = v31;
  v33 = a7 + v31[9];
  v34 = *(_BYTE *)(v33 + 8);
  v104 = v28;
  v95 = v30;
  v35 = (v34 & 1) == 0 && v30 == *(_QWORD *)v33;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  v38 = *(_QWORD *)(a1 + 80);
  if (!*(_QWORD *)(v38 + 16) || (v39 = sub_1B1DC4138(v109, v111), (v40 & 1) == 0))
  {
    v120 = 0;
    v118 = 0u;
    v119 = 0u;
    v116 = 0u;
    v117 = 0u;
    aBlock = 0u;
    v121 = -1;
    goto LABEL_15;
  }
  sub_1B1C1A1D0(*(_QWORD *)(v38 + 56) + 96 * v39, (uint64_t)&aBlock);
  if (v121 == 255)
  {
LABEL_15:
    sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
    if (v35)
      goto LABEL_17;
    goto LABEL_32;
  }
  sub_1B1C1A1D0((uint64_t)&aBlock, (uint64_t)v114);
  sub_1B1B1F3E4((uint64_t)&aBlock, &qword_1EEF63440, (uint64_t)&type metadata for CompilationStatus);
  sub_1B1C1A1D0((uint64_t)v114, (uint64_t)v112);
  if (v113)
  {
    sub_1B1D12448((uint64_t)v112);
    sub_1B1D12448((uint64_t)v114);
    goto LABEL_16;
  }
  v48 = v112[0];
  sub_1B1D12448((uint64_t)v114);
  if (v48 != v95)
    v35 = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  if (v35)
  {
LABEL_17:
    if ((*(_BYTE *)(a7 + v32[10]) & 1) != 0)
    {
      v36 = *(void **)(a7 + v32[11]);
      v41 = v36;
    }
    else
    {
      sub_1B1B63B64();
      v36 = (void *)swift_allocError();
      *v42 = xmmword_1B2244C80;
    }
    if (!*(_QWORD *)(a11 + 16) && v36)
      goto LABEL_24;
    goto LABEL_7;
  }
  if (v48 == v95)
  {
    dispatch_group_leave(v108);
    swift_release();
    swift_release_n();
    swift_release();
    goto LABEL_26;
  }
LABEL_32:
  v92[1] = a11;
  v92[2] = a12;
  sub_1B1D121E4(a7, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v93 = swift_allocBox();
  v50 = v49;
  sub_1B1CED2AC(v49);
  v51 = v50 + v32[9];
  v52 = v95;
  *(_QWORD *)v51 = v95;
  *(_BYTE *)(v51 + 8) = 0;
  sub_1B1D136D4(v110, v50, type metadata accessor for MetalFunctionScript);
  sub_1B1D12220(v50, a7, (unint64_t *)&unk_1ED4BB270, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1ED4BF0F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 72));
  *(_QWORD *)&aBlock = v52;
  v121 = 0;
  sub_1B20E1B28((uint64_t)&aBlock, v109, v111);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 72));
  v53 = *(_QWORD *)(a1 + 16);
  swift_retain();
  if (v53)
  {
    v54 = v106;
    v55 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v23, v53 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v106);
    swift_release();
    v56 = v105;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v105, v23, v54);
  }
  else
  {
    v56 = v105;
    v54 = v106;
    if (qword_1ED4BA0E0 != -1)
      swift_once();
    v57 = sub_1B22283B0();
    sub_1B1B40EC8(v57, (uint64_t)qword_1ED4D0E48);
    sub_1B2228398();
    sub_1B2228368();
  }
  v92[0] = HIDWORD(v111);
  if (qword_1ED4BA0E0 != -1)
    swift_once();
  v108 = a9;
  v58 = sub_1B22283B0();
  sub_1B1B40EC8(v58, (uint64_t)qword_1ED4D0E48);
  v59 = sub_1B2228398();
  v60 = sub_1B2228FA4();
  if ((sub_1B2229094() & 1) != 0)
  {
    v61 = v107;
    v62 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v63 = v96;
    v62(v96, v56, v54);
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    v65 = sub_1B2228374();
    _os_signpost_emit_with_name_impl(&dword_1B178D000, v59, v60, v65, "buildScript", "", v64, 2u);
    MEMORY[0x1B5E23F88](v64, -1, -1);

    v66 = v63;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v54);
  }
  else
  {

    v62 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v66 = v96;
  }
  v62(v66, v56, v54);
  sub_1B22283E0();
  swift_allocObject();
  v67 = sub_1B22283D4();
  v68 = v99;
  sub_1B1792810(v110, v99, type metadata accessor for MetalFunctionScript);
  v69 = (*(unsigned __int8 *)(v97 + 80) + 400) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  v70 = (v98 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v70 + 27) & 0xFFFFFFFFFFFFFFF8;
  v72 = swift_allocObject();
  v73 = v108;
  v74 = v109;
  *(_QWORD *)(v72 + 16) = a1;
  *(_QWORD *)(v72 + 24) = v74;
  v75 = v111;
  v109 = a1;
  v110 = v67;
  v76 = v92[0];
  *(_DWORD *)(v72 + 32) = v111;
  *(_DWORD *)(v72 + 36) = v76;
  *(_QWORD *)(v72 + 40) = v95;
  *(_QWORD *)(v72 + 48) = sub_1B1D12284;
  *(_QWORD *)(v72 + 56) = v104;
  *(_QWORD *)(v72 + 64) = v67;
  memcpy((void *)(v72 + 72), v73, 0x148uLL);
  sub_1B1A025EC(v68, v72 + v69, type metadata accessor for MetalFunctionScript);
  v77 = (uint64_t *)(v72 + v70);
  v79 = v101;
  v78 = v102;
  *v77 = v101;
  v77[1] = v78;
  v77[2] = v103;
  v80 = (_DWORD *)(v72 + v71);
  *v80 = v75;
  v80[1] = v76;
  *(_QWORD *)(v72 + ((v71 + 15) & 0xFFFFFFFFFFFFFFF8)) = v93;
  if ((v100 & 1) != 0)
  {
    v111 = *(_QWORD *)(v109 + 40);
    v81 = swift_allocObject();
    *(_QWORD *)(v81 + 16) = sub_1B1D12FFC;
    *(_QWORD *)(v81 + 24) = v72;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v108);
    sub_1B1C18F0C(v79, v78);
    v82 = qword_1ED4BF430;
    swift_retain();
    swift_retain();
    if (v82 != -1)
      swift_once();
    v83 = qword_1ED4BF658;
    swift_retain();
    v84 = v105;
    if (v83 != -1)
      swift_once();
    v85 = qword_1ED4D0FD0;
    swift_retain();
    swift_release();
    v86 = (_QWORD *)swift_allocObject();
    v86[2] = v85;
    v86[3] = sub_1B1D13D9C;
    v86[4] = v81;
    *(_QWORD *)&v117 = sub_1B1D13E54;
    *((_QWORD *)&v117 + 1) = v86;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v116 = sub_1B17915D0;
    *((_QWORD *)&v116 + 1) = &unk_1E63EE098;
    v87 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend((id)v111, sel_addOperationWithBlock_, v87);
    _Block_release(v87);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v84, v106);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    v111 = *(_QWORD *)(v109 + 32);
    v88 = swift_allocObject();
    *(_QWORD *)(v88 + 16) = sub_1B1D12FFC;
    *(_QWORD *)(v88 + 24) = v72;
    v89 = swift_allocObject();
    *(_QWORD *)(v89 + 16) = sub_1B1D13D9C;
    *(_QWORD *)(v89 + 24) = v88;
    *(_QWORD *)&v117 = sub_1B1D13D9C;
    *((_QWORD *)&v117 + 1) = v89;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v116 = sub_1B1CDBFCC;
    *((_QWORD *)&v116 + 1) = &unk_1E63EE020;
    v90 = _Block_copy(&aBlock);
    v100 = *((_QWORD *)&v117 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B1D139FC((uint64_t)v108);
    sub_1B1C18F0C(v79, v78);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v111, v90);
    _Block_release(v90);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v105, v106);
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  v47 = 1;
LABEL_50:
  swift_release();
  return v47;
}

void sub_1B1D061B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)();
  char v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t, int *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _BYTE *v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  _BYTE v90[40];
  __int128 v91[2];
  char v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;

  v77 = a7;
  v65 = a2;
  v66 = a4;
  v64 = a1;
  sub_1B1D12C44();
  MEMORY[0x1E0C80A78](v10, v11);
  v76 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  v103 = v13;
  v75 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v71 = (uint64_t)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v17);
  v79 = (uint64_t)v62 - v18;
  sub_1B1D12CB8();
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B1A1B6FC(0, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  v24 = v23;
  v74 = *((_QWORD *)v23 - 1);
  MEMORY[0x1E0C80A78](v23, v25);
  v80 = (uint64_t)v62 - v26;
  v82 = *(_QWORD *)(a5 + 16);
  if (v82)
  {
    v70 = a6;
    v62[1] = a5;
    v62[2] = a6 + 80;
    v81 = a5 + 32;
    swift_bridgeObjectRetain();
    v27 = 0;
    v28 = (uint64_t)v76;
    v78 = v24;
    v63 = v22;
    while (1)
    {
      sub_1B1D12130(v81 + 48 * v27, (uint64_t)v91);
      if ((v92 & 1) != 0)
      {
        sub_1B1A02518(v91, (uint64_t)v90);
        sub_1B19FA198((uint64_t)v90, (uint64_t)&v83);
        sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
        v31 = swift_dynamicCast();
        v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
        if ((v31 & 1) != 0)
        {
          v32(v28, 0, 1, v103);
          sub_1B1D12190(v28, v79, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          sub_1B222A0CC();
          swift_bridgeObjectRetain();
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v33 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for ShaderScript(0) + 28));
          sub_1B222A078();
          v34 = *(_QWORD *)(v33 + 16);
          if (v34)
          {
            swift_bridgeObjectRetain();
            v35 = v33 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B2228824();
              swift_bridgeObjectRelease();
              v35 += 16;
              --v34;
            }
            while (v34);
            swift_bridgeObjectRelease();
            v28 = (uint64_t)v76;
          }
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v100 = v85;
          v101 = v86;
          v102 = v87;
          v98 = v83;
          v99 = v84;
          v41 = sub_1B222A0B4();
          v42 = (uint64_t *)(v79 + *(int *)(v103 + 36));
          if ((v42[1] & 1) != 0)
          {
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
            goto LABEL_24;
          }
          v43 = v41;
          v44 = *v42;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
          if (v43 == v44)
          {
            v45 = v66;
            sub_1B1D121E4(v66, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            sub_1B1D12190(v79, v45, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          else
          {
LABEL_24:
            sub_1B1D121E4(v79, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
          }
          v24 = v78;
LABEL_35:
          *v77 = 1;
          goto LABEL_5;
        }
        v32(v28, 1, 1, v103);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
        v29 = v28;
        v30 = sub_1B1D12C44;
      }
      else
      {
        sub_1B1A02518(v91, (uint64_t)v90);
        sub_1B19FA198((uint64_t)v90, (uint64_t)&v83);
        sub_1B1AEC268(0, (unint64_t *)&qword_1ED4B8C70);
        v36 = swift_dynamicCast();
        v37 = *(void (**)(char *, uint64_t, uint64_t, int *))(v74 + 56);
        if ((v36 & 1) != 0)
        {
          v37(v22, 0, 1, v24);
          sub_1B1D12190((uint64_t)v22, v80, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          sub_1B222A0CC();
          swift_bridgeObjectRetain();
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v73 = type metadata accessor for ShaderScript(0);
          v38 = *(_QWORD *)(a3 + *(int *)(v73 + 28));
          sub_1B222A078();
          v39 = *(_QWORD *)(v38 + 16);
          if (v39)
          {
            swift_bridgeObjectRetain();
            v40 = v38 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1B2228824();
              swift_bridgeObjectRelease();
              v40 += 16;
              --v39;
            }
            while (v39);
            swift_bridgeObjectRelease();
          }
          v28 = (uint64_t)v76;
          sub_1B2228824();
          swift_bridgeObjectRelease();
          v95 = v85;
          v96 = v86;
          v97 = v87;
          v93 = v83;
          v94 = v84;
          v46 = sub_1B222A0B4();
          v47 = v80 + *(int *)(v103 + 36);
          if ((*(_BYTE *)(v47 + 8) & 1) != 0 || v46 != *(_QWORD *)v47)
          {
            v24 = v78;
          }
          else
          {
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v70 + 72));
            v48 = v80;
            v49 = v71;
            sub_1B1D12220(v80, v71, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            sub_1B1D136D4(a3, v49, type metadata accessor for ShaderScript);
            v50 = *(_QWORD *)(v48 + v78[15]);
            sub_1B1BCCD2C(v50);
            v51 = v72;
            sub_1B1C9EC44(2, &v83);
            if (v51)
            {

              sub_1B1B28F18(v50);
              v68 = 0;
              v69 = 0;
              v72 = 0;
            }
            else
            {
              v72 = 0;
              v68 = v86;
              v69 = *((_QWORD *)&v85 + 1);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B1B28F18(v50);
            }
            v52 = v64;
            v53 = *(_BYTE *)(v64 + 184);
            v54 = swift_retain();
            if ((v53 & 1) != 0)
            {
              sub_1B2229688();
              __break(1u);
              return;
            }
            v55 = *(unsigned int *)(*(_QWORD *)(v52 + 168) + 4 * v65);
            v67 = *(unsigned int *)(*(_QWORD *)(v54 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v55 + 8);
            swift_release();
            *((_QWORD *)&v84 + 1) = v103;
            v56 = sub_1B1A137F4((uint64_t *)&v83);
            v57 = v71;
            sub_1B1D12220(v71, (uint64_t)v56, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            v58 = v78;
            v59 = *(_QWORD *)(v80 + v78[10]);
            *(_QWORD *)&v85 = *(_QWORD *)(v80 + v78[9]);
            *((_QWORD *)&v85 + 1) = v59;
            *(_QWORD *)&v86 = *(_QWORD *)(v80 + v78[11]);
            sub_1B1A02758(0, (unint64_t *)&unk_1EEF5D9B0, (uint64_t)&type metadata for ShaderScriptRuntime, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
            v88 = v60;
            *((_QWORD *)&v86 + 1) = v69;
            v87 = v68;
            v89 = 1;
            v61 = v55 | (v67 << 32);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B20E1B28((uint64_t)&v83, v73, v61);
            v24 = v58;
            sub_1B1D121E4(v57, (unint64_t *)&unk_1ED4B9650, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v70 + 72));
            v28 = (uint64_t)v76;
            v22 = v63;
          }
          sub_1B1D121E4(v80, (unint64_t *)&qword_1ED4B88C0, type metadata accessor for ShaderScript, (uint64_t)&off_1ED4BC090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
          goto LABEL_35;
        }
        v37(v22, 1, 1, v24);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v90);
        v29 = (uint64_t)v22;
        v30 = sub_1B1D12CB8;
      }
      sub_1B1A04628(v29, (uint64_t (*)(_QWORD))v30);
LABEL_5:
      if (++v27 == v82)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

