uint64_t destroy for ToolKitProtoTypeInstance.Deferred(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (char *)a1 + *(int *)(a2 + 20);
  v8 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for ToolKitProtoTypeInstance.Deferred(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v8;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoTypeInstance.Deferred(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_8;
    }
    v20 = *a2;
    v21 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v21 != 0xF000000000000007)
      {
        *a1 = v20;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_248E42024((uint64_t)a1);
      v20 = *a2;
    }
    else if (v21 != 0xF000000000000007)
    {
      *a1 = v20;
      swift_retain();
LABEL_17:
      v22 = *(int *)(v6 + 20);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_9;
    }
    *a1 = v20;
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_8:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  v9 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v9;
  v10 = *(int *)(v6 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_9:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoTypeInstance.Deferred(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoTypeInstance.Deferred(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoTypeInstance);
    goto LABEL_6;
  }
  v19 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v19 & 0xF000000000000007) != 0)
    {
      *a1 = v19;
      swift_release();
    }
    else
    {
      sub_248E42024((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v19;
  }
  v20 = *(int *)(v6 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoTypeInstance.Deferred()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EA5A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475218);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoTypeInstance.Deferred()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EA5A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475218);
}

void sub_248EA5A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475220, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
}

void type metadata accessor for ToolKitProtoTypeInstanceKind()
{
  OUTLINED_FUNCTION_164();
}

void _s7ToolKit22ToolKitProtoTypedValueVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_147_1();
  if ((v4 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*a2);
  }
  else
  {
    v5 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *v2 = v5;
    v6 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_25_7(v6);
  }
  OUTLINED_FUNCTION_93();
}

uint64_t _s7ToolKit22ToolKitProtoTypedValueVwxx_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  OUTLINED_FUNCTION_63();
  v1 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v1, v2, v3);
}

void _s7ToolKit22ToolKitProtoTypedValueVwcp_0()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_197_0();
  v2 = *v1;
  if ((~*v1 & 0xF000000000000007) != 0)
    swift_retain();
  *v0 = v2;
  v3 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_25_7(v3);
  OUTLINED_FUNCTION_93();
}

void assignWithCopy for ToolKitProtoRestrictionContext()
{
  sub_248EA5B6C();
}

void sub_248EA5B6C()
{
  _QWORD *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_197_0();
  v6 = *v3;
  v7 = *v3 & 0xF000000000000007;
  if ((~*v2 & 0xF000000000000007) != 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *v0 = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_551((uint64_t)v2, (uint64_t)v3, v4, v5);
    v6 = *v1;
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
LABEL_6:
    *v0 = v6;
    goto LABEL_8;
  }
  *v0 = v6;
  swift_retain();
LABEL_8:
  v8 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24));
  OUTLINED_FUNCTION_93();
}

uint64_t sub_248EA5C0C(uint64_t a1)
{
  destroy for TypedValue();
  return a1;
}

void assignWithTake for ToolKitProtoRestrictionContext()
{
  sub_248EA5C44();
}

void sub_248EA5C44()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_197_0();
  v5 = *v2;
  if ((~*v1 & 0xF000000000000007) != 0)
  {
    if ((~v5 & 0xF000000000000007) != 0)
    {
      *v0 = v5;
      swift_release();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_551((uint64_t)v1, (uint64_t)v2, v3, v4);
  }
  *v0 = v5;
LABEL_6:
  v6 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EA5CC4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 122)
  {
    OUTLINED_FUNCTION_428_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(a3 + 20));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EA5D20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_616();
  if (v0 == 122)
  {
    OUTLINED_FUNCTION_302_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    v1 = OUTLINED_FUNCTION_278_1();
    OUTLINED_FUNCTION_264(v1, v2, v3, v4);
  }
}

void sub_248EA5D5C()
{
  sub_248EFFD68();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.PersonReachableAs(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_248EA5DB4 + 4 * byte_2490F30EF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_248EA5DE8 + 4 * byte_2490F30EA[v4]))();
}

uint64_t sub_248EA5DE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248EA5DF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248EA5DF8);
  return result;
}

uint64_t sub_248EA5E04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248EA5E0CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_248EA5E10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248EA5E18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ToolKitProtoRestrictionContext.PersonReachableAs()
{
  OUTLINED_FUNCTION_164();
}

void type metadata accessor for ToolKitProtoRestrictionContext.DateExpressibleAs()
{
  OUTLINED_FUNCTION_164();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoRestrictionContext.InSet(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t valid;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544755F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v10))
      {
        v12 = (char *)&loc_248EA5F4C + 4 * byte_2490F30F4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v13 = *(int *)(v7 + 20);
      v14 = (uint64_t *)((char *)a1 + v13);
      v15 = (uint64_t *)((char *)a2 + v13);
      v16 = v15[1];
      *v14 = *v15;
      v14[1] = v16;
      v17 = *(int *)(v7 + 24);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2490E7ABC();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v22 = *(int *)(v6 + 20);
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, (uint64_t)v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475348);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v85 = v6;
      v27 = v24[1];
      *v23 = *v24;
      v23[1] = v27;
      v28 = v25[6];
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AC0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v33 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v29, v30, v33);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      v34 = v25[7];
      v35 = (char *)v23 + v34;
      v36 = (char *)v24 + v34;
      v37 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544754E0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v39 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v35, v36, v39);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
      }
      v40 = v25[8];
      v41 = (char *)v23 + v40;
      v42 = (char *)v24 + v40;
      v43 = type metadata accessor for ToolKitProtoAllPredicate(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475180);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v45 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v41, v42, v45);
        __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
      }
      v46 = v25[9];
      v47 = (char *)v23 + v46;
      v48 = (char *)v24 + v46;
      v49 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254470150);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v51 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v47, v48, v51);
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
      }
      v52 = v25[10];
      v53 = (char *)v23 + v52;
      v54 = (char *)v24 + v52;
      v55 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B90);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        v57 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v53, v54, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
      }
      v58 = v25[11];
      v59 = (char *)v23 + v58;
      v60 = (char *)v24 + v58;
      valid = type metadata accessor for ToolKitProtoValidPredicate(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, valid))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A8);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v63 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v59, v60, v63);
        __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, valid);
      }
      v64 = v25[12];
      v65 = (_QWORD *)((char *)v23 + v64);
      v66 = (_QWORD *)((char *)v24 + v64);
      v67 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
      {
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A0);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v69 = v66[1];
        *v65 = *v66;
        v65[1] = v69;
        v70 = v66[3];
        v65[2] = v66[2];
        v65[3] = v70;
        v71 = *(int *)(v67 + 24);
        v83 = (char *)v66 + v71;
        v84 = (char *)v65 + v71;
        v72 = sub_2490E7ABC();
        v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v82(v84, v83, v72);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
      }
      v73 = v25[13];
      v74 = (char *)v23 + v73;
      v75 = (char *)v24 + v73;
      v76 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, (uint64_t)v25);
      v6 = v85;
    }
    v77 = *(int *)(v6 + 24);
    v78 = (char *)a1 + v77;
    v79 = (char *)a2 + v77;
    v80 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoRestrictionContext.InSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t valid;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
    if (!__swift_getEnumTagSinglePayload(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                      + 24);
          goto LABEL_18;
        case 1u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
          v8 = a1 + *(int *)(v7 + 20);
          v9 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
          if (__swift_getEnumTagSinglePayload(v8, 1, v9))
            goto LABEL_17;
          v10 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
          if (__swift_getEnumTagSinglePayload(v8, 1, v10))
            goto LABEL_16;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              if (!EnumCaseMultiPayload)
                swift_bridgeObjectRelease();
LABEL_16:
              v15 = v8 + *(int *)(v9 + 20);
              v16 = sub_2490E7ABC();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
LABEL_17:
              v6 = *(int *)(v7 + 24);
LABEL_18:
              v17 = a1 + v6;
              v18 = sub_2490E7ABC();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
              break;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
          }
          v13 = v8 + *(int *)(v12 + 24);
          v14 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
          goto LABEL_16;
        case 2u:
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
          goto LABEL_18;
        case 3u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
    }
    swift_bridgeObjectRelease();
    v19 = a1 + *(int *)(v4 + 24);
    v20 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  v21 = a1 + *(int *)(a2 + 20);
  v22 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  if (!__swift_getEnumTagSinglePayload(v21, 1, (uint64_t)v22))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v21 + v22[6];
    v24 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
    if (!__swift_getEnumTagSinglePayload(v23, 1, v24))
    {
      v25 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
    }
    v26 = v21 + v22[7];
    v27 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
    if (!__swift_getEnumTagSinglePayload(v26, 1, v27))
    {
      v28 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);
    }
    v29 = v21 + v22[8];
    v30 = type metadata accessor for ToolKitProtoAllPredicate(0);
    if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
    {
      v31 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v29, v31);
    }
    v32 = v21 + v22[9];
    v33 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
    if (!__swift_getEnumTagSinglePayload(v32, 1, v33))
    {
      v34 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v32, v34);
    }
    v35 = v21 + v22[10];
    v36 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
    if (!__swift_getEnumTagSinglePayload(v35, 1, v36))
    {
      v37 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v35, v37);
    }
    v38 = v21 + v22[11];
    valid = type metadata accessor for ToolKitProtoValidPredicate(0);
    if (!__swift_getEnumTagSinglePayload(v38, 1, valid))
    {
      v40 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v38, v40);
    }
    v41 = v21 + v22[12];
    v42 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
    if (!__swift_getEnumTagSinglePayload(v41, 1, v42))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v41 + *(int *)(v42 + 24);
      v44 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
    }
    v45 = v21 + v22[13];
    v46 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
  }
  v47 = a1 + *(int *)(a2 + 24);
  v48 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
}

char *initializeWithCopy for ToolKitProtoRestrictionContext.InSet(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t valid;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544755F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_248EA6D2C + 4 * byte_2490F30FE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = *(int *)(v6 + 24);
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = sub_2490E7ABC();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 20);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, (uint64_t)v23))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475348);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v84 = a3;
    v85 = a1;
    v25 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v25;
    v26 = v23[6];
    v27 = &v21[v26];
    v28 = &v22[v26];
    v29 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AC0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v27, v28, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
    }
    v32 = v23[7];
    v33 = &v21[v32];
    v34 = &v22[v32];
    v35 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544754E0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v33, v34, v37);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
    }
    v38 = v23[8];
    v39 = &v21[v38];
    v40 = &v22[v38];
    v41 = type metadata accessor for ToolKitProtoAllPredicate(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475180);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v43 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v39, v40, v43);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
    }
    v44 = v23[9];
    v45 = &v21[v44];
    v46 = &v22[v44];
    v47 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254470150);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v49 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v45, v46, v49);
      __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
    }
    v50 = v23[10];
    v51 = &v21[v50];
    v52 = &v22[v50];
    v53 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B90);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v55 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v51, v52, v55);
      __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
    }
    v56 = v23[11];
    v57 = &v21[v56];
    v58 = &v22[v56];
    valid = type metadata accessor for ToolKitProtoValidPredicate(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, valid))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A8);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      v61 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v57, v58, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, valid);
    }
    v83 = a2;
    v62 = v23[12];
    v63 = &v21[v62];
    v64 = &v22[v62];
    v65 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v67 = *((_QWORD *)v64 + 1);
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v67;
      v68 = *((_QWORD *)v64 + 3);
      *((_QWORD *)v63 + 2) = *((_QWORD *)v64 + 2);
      *((_QWORD *)v63 + 3) = v68;
      v69 = *(int *)(v65 + 24);
      v82 = &v63[v69];
      v70 = &v64[v69];
      v71 = sub_2490E7ABC();
      v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72(v82, v70, v71);
      __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
    }
    v73 = v23[13];
    v74 = &v21[v73];
    v75 = &v22[v73];
    v76 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, (uint64_t)v23);
    a3 = v84;
    a1 = v85;
    a2 = v83;
  }
  v77 = *(int *)(a3 + 24);
  v78 = &a1[v77];
  v79 = &a2[v77];
  v80 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
  return a1;
}

char *assignWithCopy for ToolKitProtoRestrictionContext.InSet(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  int v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  int v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t valid;
  int v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  int v142;
  int v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(char *, char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
      goto LABEL_7;
    }
    v12 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
    v13 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v12);
    v14 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_248EA76E0 + 4 * word_2490F3108[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
          v18 = (char *)&loc_248EA7894 + 4 * word_2490F3112[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    }
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v27 = *(int *)(v6 + 20);
    v28 = &a1[v27];
    v29 = &a2[v27];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = *(int *)(v6 + 24);
    v31 = &a1[v30];
    v32 = &a2[v30];
    v33 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544755F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_248EA7794 + 4 * byte_2490F3103[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v19 = *(int *)(v6 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  v22 = *(int *)(v6 + 24);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_2490E7ABC();
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  v26(v23, v24, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v34 = *(int *)(a3 + 20);
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  v38 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, (uint64_t)v37);
  v39 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v37);
  if (!v38)
  {
    if (v39)
    {
      sub_248E25C30((uint64_t)v35, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
      goto LABEL_24;
    }
    v174 = a3;
    *(_QWORD *)v35 = *(_QWORD *)v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = v37[6];
    v47 = &v35[v46];
    v48 = &v36[v46];
    v49 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
    v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v49);
    v51 = __swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49);
    if (v50)
    {
      if (!v51)
      {
        v52 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v47, v48, v52);
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
        goto LABEL_51;
      }
    }
    else
    {
      if (!v51)
      {
        v158 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 24))(v47, v48, v158);
LABEL_51:
        v98 = v37[7];
        v99 = &v35[v98];
        v100 = &v36[v98];
        v101 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
        v102 = __swift_getEnumTagSinglePayload((uint64_t)v99, 1, v101);
        v103 = __swift_getEnumTagSinglePayload((uint64_t)v100, 1, v101);
        if (v102)
        {
          if (!v103)
          {
            v104 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v99, v100, v104);
            __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v101);
            goto LABEL_57;
          }
        }
        else
        {
          if (!v103)
          {
            v159 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 24))(v99, v100, v159);
LABEL_57:
            v106 = v37[8];
            v107 = &v35[v106];
            v108 = &v36[v106];
            v109 = type metadata accessor for ToolKitProtoAllPredicate(0);
            v110 = __swift_getEnumTagSinglePayload((uint64_t)v107, 1, v109);
            v111 = __swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109);
            if (v110)
            {
              if (!v111)
              {
                v112 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v107, v108, v112);
                __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v109);
                goto LABEL_63;
              }
            }
            else
            {
              if (!v111)
              {
                v160 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 24))(v107, v108, v160);
LABEL_63:
                v114 = v37[9];
                v115 = &v35[v114];
                v116 = &v36[v114];
                v117 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
                v118 = __swift_getEnumTagSinglePayload((uint64_t)v115, 1, v117);
                v119 = __swift_getEnumTagSinglePayload((uint64_t)v116, 1, v117);
                if (v118)
                {
                  if (!v119)
                  {
                    v120 = sub_2490E7ABC();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v115, v116, v120);
                    __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v117);
                    goto LABEL_69;
                  }
                }
                else
                {
                  if (!v119)
                  {
                    v161 = sub_2490E7ABC();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 24))(v115, v116, v161);
LABEL_69:
                    v122 = v37[10];
                    v123 = &v35[v122];
                    v124 = &v36[v122];
                    v125 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
                    v126 = __swift_getEnumTagSinglePayload((uint64_t)v123, 1, v125);
                    v127 = __swift_getEnumTagSinglePayload((uint64_t)v124, 1, v125);
                    if (v126)
                    {
                      if (!v127)
                      {
                        v128 = sub_2490E7ABC();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v123, v124, v128);
                        __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v125);
                        goto LABEL_75;
                      }
                    }
                    else
                    {
                      if (!v127)
                      {
                        v162 = sub_2490E7ABC();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 24))(v123, v124, v162);
LABEL_75:
                        v130 = v37[11];
                        v131 = &v35[v130];
                        v132 = &v36[v130];
                        valid = type metadata accessor for ToolKitProtoValidPredicate(0);
                        v134 = __swift_getEnumTagSinglePayload((uint64_t)v131, 1, valid);
                        v135 = __swift_getEnumTagSinglePayload((uint64_t)v132, 1, valid);
                        if (v134)
                        {
                          if (!v135)
                          {
                            v136 = sub_2490E7ABC();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(v131, v132, v136);
                            __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, valid);
                            goto LABEL_81;
                          }
                        }
                        else
                        {
                          if (!v135)
                          {
                            v163 = sub_2490E7ABC();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 24))(v131, v132, v163);
LABEL_81:
                            v172 = a2;
                            v138 = v37[12];
                            v139 = &v35[v138];
                            v140 = &v36[v138];
                            v141 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
                            v142 = __swift_getEnumTagSinglePayload((uint64_t)v139, 1, v141);
                            v143 = __swift_getEnumTagSinglePayload((uint64_t)v140, 1, v141);
                            v144 = a1;
                            if (v142)
                            {
                              if (!v143)
                              {
                                *(_QWORD *)v139 = *(_QWORD *)v140;
                                *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
                                *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
                                *((_QWORD *)v139 + 3) = *((_QWORD *)v140 + 3);
                                v145 = *(int *)(v141 + 24);
                                v169 = &v140[v145];
                                v170 = &v139[v145];
                                v146 = sub_2490E7ABC();
                                v147 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                v147(v170, v169, v146);
                                __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, v141);
LABEL_87:
                                a3 = v174;
                                v149 = v37[13];
                                v150 = &v35[v149];
                                v151 = &v36[v149];
                                v152 = sub_2490E7ABC();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 24))(v150, v151, v152);
                                a1 = v144;
                                a2 = v172;
                                goto LABEL_88;
                              }
                            }
                            else
                            {
                              if (!v143)
                              {
                                *(_QWORD *)v139 = *(_QWORD *)v140;
                                *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
                                *((_QWORD *)v139 + 3) = *((_QWORD *)v140 + 3);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v164 = *(int *)(v141 + 24);
                                v165 = &v139[v164];
                                v166 = &v140[v164];
                                v167 = sub_2490E7ABC();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 24))(v165, v166, v167);
                                goto LABEL_87;
                              }
                              sub_248E25C30((uint64_t)v139, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata);
                            }
                            v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A0);
                            memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
                            goto LABEL_87;
                          }
                          sub_248E25C30((uint64_t)v131, type metadata accessor for ToolKitProtoValidPredicate);
                        }
                        v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A8);
                        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
                        goto LABEL_81;
                      }
                      sub_248E25C30((uint64_t)v123, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
                    }
                    v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B90);
                    memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
                    goto LABEL_75;
                  }
                  sub_248E25C30((uint64_t)v115, type metadata accessor for ToolKitProtoSuggestedPredicate);
                }
                v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254470150);
                memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
                goto LABEL_69;
              }
              sub_248E25C30((uint64_t)v107, type metadata accessor for ToolKitProtoAllPredicate);
            }
            v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475180);
            memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
            goto LABEL_63;
          }
          sub_248E25C30((uint64_t)v99, type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
        }
        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544754E0);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
        goto LABEL_57;
      }
      sub_248E25C30((uint64_t)v47, type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
    }
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AC0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    goto LABEL_51;
  }
  if (v39)
  {
LABEL_24:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475348);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_88;
  }
  v173 = a3;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  v40 = v37[6];
  v41 = &v35[v40];
  v42 = &v36[v40];
  v43 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AC0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v53 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v41, v42, v53);
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
  }
  v54 = v37[7];
  v55 = &v35[v54];
  v56 = &v36[v54];
  v57 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544754E0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v59 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v55, v56, v59);
    __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v57);
  }
  v60 = v37[8];
  v61 = &v35[v60];
  v62 = &v36[v60];
  v63 = type metadata accessor for ToolKitProtoAllPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475180);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v65 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v61, v62, v65);
    __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
  }
  v66 = v37[9];
  v67 = &v35[v66];
  v68 = &v36[v66];
  v69 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254470150);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    v71 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v67, v68, v71);
    __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
  }
  v72 = v37[10];
  v73 = &v35[v72];
  v74 = &v36[v72];
  v75 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B90);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    v77 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v73, v74, v77);
    __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v75);
  }
  v78 = v37[11];
  v79 = &v35[v78];
  v80 = &v36[v78];
  v81 = type metadata accessor for ToolKitProtoValidPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A8);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    v83 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v79, v80, v83);
    __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
  }
  v171 = a2;
  v84 = v37[12];
  v85 = &v35[v84];
  v86 = &v36[v84];
  v87 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
  {
    v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A0);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v85 = *(_QWORD *)v86;
    *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
    *((_QWORD *)v85 + 2) = *((_QWORD *)v86 + 2);
    *((_QWORD *)v85 + 3) = *((_QWORD *)v86 + 3);
    v89 = *(int *)(v87 + 24);
    v168 = &v85[v89];
    v90 = &v86[v89];
    v91 = sub_2490E7ABC();
    v92 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v92(v168, v90, v91);
    __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
  }
  v93 = v37[13];
  v94 = &v35[v93];
  v95 = &v36[v93];
  v96 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v94, v95, v96);
  __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, (uint64_t)v37);
  a2 = v171;
  a3 = v173;
LABEL_88:
  v153 = *(int *)(a3 + 24);
  v154 = &a1[v153];
  v155 = &a2[v153];
  v156 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 24))(v154, v155, v156);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoRestrictionContext.InSet(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t valid;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v107;
  char *v108;
  char *v109;
  char *v110;

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544755F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    goto LABEL_25;
  }
  v8 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                     + 24);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        goto LABEL_22;
      case 1u:
        *a1 = *a2;
        v15 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
        v16 = *(int *)(v15 + 20);
        v17 = (_OWORD *)((char *)a1 + v16);
        v18 = (_OWORD *)((char *)a2 + v16);
        v19 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          goto LABEL_21;
        }
        v26 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v26))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          goto LABEL_20;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v32 = v18[1];
          *v17 = *v18;
          v17[1] = v32;
          v33 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                       + 24);
          v108 = (char *)v18 + v33;
          v110 = (char *)v17 + v33;
          v34 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v110, v108, v34);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_19:
            __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v26);
LABEL_20:
            v35 = *(int *)(v19 + 20);
            v36 = (char *)v17 + v35;
            v37 = (char *)v18 + v35;
            v38 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
            __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
LABEL_21:
            v39 = *(int *)(v15 + 24);
            v40 = (char *)a1 + v39;
            v41 = (char *)a2 + v39;
            v42 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
LABEL_22:
            swift_storeEnumTagMultiPayload();
LABEL_23:
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v8);
            goto LABEL_24;
          }
          v29 = v18[1];
          *v17 = *v18;
          v17[1] = v29;
          v30 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                       + 24);
          v107 = (char *)v18 + v30;
          v109 = (char *)v17 + v30;
          v31 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v109, v107, v31);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_19;
      case 2u:
      case 4u:
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        a1[2] = a2[2];
        v22 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        goto LABEL_22;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        goto LABEL_23;
    }
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_24:
  *(_OWORD *)((char *)a1 + *(int *)(v6 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 20));
  v43 = *(int *)(v6 + 24);
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_25:
  v47 = *(int *)(a3 + 20);
  v48 = (_OWORD *)((char *)a1 + v47);
  v49 = (_OWORD *)((char *)a2 + v47);
  v50 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, (uint64_t)v50))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475348);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    *v48 = *v49;
    v52 = v50[6];
    v53 = (char *)v48 + v52;
    v54 = (char *)v49 + v52;
    v55 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AC0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v53, v54, v57);
      __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
    }
    v58 = v50[7];
    v59 = (char *)v48 + v58;
    v60 = (char *)v49 + v58;
    v61 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544754E0);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v59, v60, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
    }
    v64 = v50[8];
    v65 = (char *)v48 + v64;
    v66 = (char *)v49 + v64;
    v67 = type metadata accessor for ToolKitProtoAllPredicate(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
    {
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475180);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      v69 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v65, v66, v69);
      __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
    }
    v70 = v50[9];
    v71 = (char *)v48 + v70;
    v72 = (char *)v49 + v70;
    v73 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254470150);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      v75 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v71, v72, v75);
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
    }
    v76 = v50[10];
    v77 = (char *)v48 + v76;
    v78 = (char *)v49 + v76;
    v79 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
    {
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B90);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      v81 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v77, v78, v81);
      __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
    }
    v82 = v50[11];
    v83 = (char *)v48 + v82;
    v84 = (char *)v49 + v82;
    valid = type metadata accessor for ToolKitProtoValidPredicate(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, valid))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A8);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      v87 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v83, v84, v87);
      __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, valid);
    }
    v88 = v50[12];
    v89 = (_OWORD *)((char *)v48 + v88);
    v90 = (_OWORD *)((char *)v49 + v88);
    v91 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
    {
      v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A0);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    else
    {
      v93 = v90[1];
      *v89 = *v90;
      v89[1] = v93;
      v94 = *(int *)(v91 + 24);
      v95 = (char *)v89 + v94;
      v96 = (char *)v90 + v94;
      v97 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
      __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v91);
    }
    v98 = v50[13];
    v99 = (char *)v48 + v98;
    v100 = (char *)v49 + v98;
    v101 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, (uint64_t)v50);
  }
  v102 = *(int *)(a3 + 24);
  v103 = (char *)a1 + v102;
  v104 = (char *)a2 + v102;
  v105 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoRestrictionContext.InSet(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int EnumCaseMultiPayload;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  int v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  int *v131;
  int v132;
  int v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _OWORD *v179;
  _OWORD *v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  int v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  int v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  int v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  int v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t valid;
  int v229;
  int v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  int v237;
  int v238;
  __int128 v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_53:
        *(_OWORD *)((char *)a1 + *(int *)(v6 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 20));
        v89 = *(int *)(v6 + 24);
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        v92 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
        goto LABEL_73;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v20 = a2[1];
          *a1 = *a2;
          a1[1] = v20;
          v21 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                       + 24);
          v22 = (char *)a1 + v21;
          v23 = (char *)a2 + v21;
          v24 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
          goto LABEL_51;
        case 1u:
          *a1 = *a2;
          v31 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
          v32 = *(int *)(v31 + 20);
          v33 = (_OWORD *)((char *)a1 + v32);
          v34 = (_OWORD *)((char *)a2 + v32);
          v35 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
            goto LABEL_50;
          }
          v53 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v53))
          {
            v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            goto LABEL_49;
          }
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v78 = v34[1];
            *v33 = *v34;
            v33[1] = v78;
            v79 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                         + 24);
            v268 = (char *)v34 + v79;
            v274 = (char *)v33 + v79;
            v80 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v274, v268, v80);
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
LABEL_48:
              __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v53);
LABEL_49:
              v81 = *(int *)(v35 + 20);
              v82 = (char *)v33 + v81;
              v83 = (char *)v34 + v81;
              v84 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
              __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
LABEL_50:
              v85 = *(int *)(v31 + 24);
              v86 = (char *)a1 + v85;
              v87 = (char *)a2 + v85;
              v88 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
LABEL_51:
              swift_storeEnumTagMultiPayload();
LABEL_52:
              __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
              goto LABEL_53;
            }
            v69 = v34[1];
            *v33 = *v34;
            v33[1] = v69;
            v70 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                         + 24);
            v266 = (char *)v34 + v70;
            v272 = (char *)v33 + v70;
            v71 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v272, v266, v71);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_48;
        case 2u:
        case 4u:
          v37 = a2[1];
          *a1 = *a2;
          a1[1] = v37;
          a1[2] = a2[2];
          v38 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
          v39 = (char *)a1 + v38;
          v40 = (char *)a2 + v38;
          v41 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
          goto LABEL_51;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_52;
      }
    }
LABEL_7:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544755F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_73;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
    goto LABEL_7;
  }
  v12 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v15 = a2[1];
          *a1 = *a2;
          a1[1] = v15;
          v16 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                       + 24);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          goto LABEL_63;
        case 1u:
          *a1 = *a2;
          v42 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
          v43 = *(int *)(v42 + 20);
          v44 = (_OWORD *)((char *)a1 + v43);
          v45 = (_OWORD *)((char *)a2 + v43);
          v46 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46))
          {
            v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
            goto LABEL_62;
          }
          v66 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v66))
          {
            v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
            goto LABEL_61;
          }
          v74 = swift_getEnumCaseMultiPayload();
          if (v74 == 2)
          {
            v97 = v45[1];
            *v44 = *v45;
            v44[1] = v97;
            v98 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                         + 24);
            v270 = (char *)v45 + v98;
            v276 = (char *)v44 + v98;
            v99 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v276, v270, v99);
            goto LABEL_58;
          }
          if (v74 == 1)
          {
            v75 = v45[1];
            *v44 = *v45;
            v44[1] = v75;
            v76 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                         + 24);
            v267 = (char *)v45 + v76;
            v273 = (char *)v44 + v76;
            v77 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v273, v267, v77);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            goto LABEL_60;
          }
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
LABEL_60:
          __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v66);
LABEL_61:
          v100 = *(int *)(v46 + 20);
          v101 = (char *)v44 + v100;
          v102 = (char *)v45 + v100;
          v103 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
          __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
LABEL_62:
          v104 = *(int *)(v42 + 24);
          v105 = (char *)a1 + v104;
          v106 = (char *)a2 + v104;
          v107 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
LABEL_63:
          swift_storeEnumTagMultiPayload();
LABEL_64:
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v12);
          break;
        case 2u:
        case 4u:
          v48 = a2[1];
          *a1 = *a2;
          a1[1] = v48;
          a1[2] = a2[2];
          v49 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
          v50 = (char *)a1 + v49;
          v51 = (char *)a2 + v49;
          v52 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
          goto LABEL_63;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          goto LABEL_64;
      }
      goto LABEL_72;
    }
LABEL_16:
    v25 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475610) - 8);
LABEL_17:
    memcpy(a1, a2, *(_QWORD *)(v25 + 64));
    goto LABEL_72;
  }
  if (v14)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    goto LABEL_16;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        v27 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                     + 24);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        goto LABEL_71;
      case 1u:
        *a1 = *a2;
        v55 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
        v56 = *(int *)(v55 + 20);
        v57 = (_OWORD *)((char *)a1 + v56);
        v58 = (_OWORD *)((char *)a2 + v56);
        v59 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          goto LABEL_70;
        }
        v72 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v72))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          goto LABEL_69;
        }
        v93 = swift_getEnumCaseMultiPayload();
        if (v93 == 2)
        {
          v108 = v58[1];
          *v57 = *v58;
          v57[1] = v108;
          v109 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                        + 24);
          v271 = (char *)v58 + v109;
          v277 = (char *)v57 + v109;
          v110 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v277, v271, v110);
        }
        else
        {
          if (v93 != 1)
          {
            memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
LABEL_68:
            __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v72);
LABEL_69:
            v111 = *(int *)(v59 + 20);
            v112 = (char *)v57 + v111;
            v113 = (char *)v58 + v111;
            v114 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v112, v113, v114);
            __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
LABEL_70:
            v115 = *(int *)(v55 + 24);
            v116 = (char *)a1 + v115;
            v117 = (char *)a2 + v115;
            v118 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          }
          v94 = v58[1];
          *v57 = *v58;
          v57[1] = v94;
          v95 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                       + 24);
          v269 = (char *)v58 + v95;
          v275 = (char *)v57 + v95;
          v96 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v275, v269, v96);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_68;
      case 2u:
      case 4u:
        v61 = a2[1];
        *a1 = *a2;
        a1[1] = v61;
        a1[2] = a2[2];
        v62 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
        goto LABEL_71;
      default:
        v25 = *(_QWORD *)(v12 - 8);
        goto LABEL_17;
    }
  }
LABEL_72:
  v119 = *(int *)(v6 + 20);
  v120 = (_QWORD *)((char *)a1 + v119);
  v121 = (uint64_t *)((char *)a2 + v119);
  v123 = *v121;
  v122 = v121[1];
  *v120 = v123;
  v120[1] = v122;
  swift_bridgeObjectRelease();
  v124 = *(int *)(v6 + 24);
  v125 = (char *)a1 + v124;
  v126 = (char *)a2 + v124;
  v127 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 40))(v125, v126, v127);
LABEL_73:
  v128 = *(int *)(a3 + 20);
  v129 = (_QWORD *)((char *)a1 + v128);
  v130 = (_QWORD *)((char *)a2 + v128);
  v131 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  v132 = __swift_getEnumTagSinglePayload((uint64_t)v129, 1, (uint64_t)v131);
  v133 = __swift_getEnumTagSinglePayload((uint64_t)v130, 1, (uint64_t)v131);
  if (!v132)
  {
    if (v133)
    {
      sub_248E25C30((uint64_t)v129, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
      goto LABEL_79;
    }
    *v129 = *v130;
    swift_bridgeObjectRelease();
    v129[1] = v130[1];
    swift_bridgeObjectRelease();
    v140 = v131[6];
    v141 = (char *)v129 + v140;
    v142 = (char *)v130 + v140;
    v143 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
    v144 = __swift_getEnumTagSinglePayload((uint64_t)v141, 1, v143);
    v145 = __swift_getEnumTagSinglePayload((uint64_t)v142, 1, v143);
    if (v144)
    {
      if (!v145)
      {
        v146 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v141, v142, v146);
        __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v143);
        goto LABEL_106;
      }
    }
    else
    {
      if (!v145)
      {
        v254 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 40))(v141, v142, v254);
LABEL_106:
        v193 = v131[7];
        v194 = (char *)v129 + v193;
        v195 = (char *)v130 + v193;
        v196 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
        v197 = __swift_getEnumTagSinglePayload((uint64_t)v194, 1, v196);
        v198 = __swift_getEnumTagSinglePayload((uint64_t)v195, 1, v196);
        if (v197)
        {
          if (!v198)
          {
            v199 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v194, v195, v199);
            __swift_storeEnumTagSinglePayload((uint64_t)v194, 0, 1, v196);
            goto LABEL_112;
          }
        }
        else
        {
          if (!v198)
          {
            v255 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 40))(v194, v195, v255);
LABEL_112:
            v201 = v131[8];
            v202 = (char *)v129 + v201;
            v203 = (char *)v130 + v201;
            v204 = type metadata accessor for ToolKitProtoAllPredicate(0);
            v205 = __swift_getEnumTagSinglePayload((uint64_t)v202, 1, v204);
            v206 = __swift_getEnumTagSinglePayload((uint64_t)v203, 1, v204);
            if (v205)
            {
              if (!v206)
              {
                v207 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v202, v203, v207);
                __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v204);
                goto LABEL_118;
              }
            }
            else
            {
              if (!v206)
              {
                v256 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 40))(v202, v203, v256);
LABEL_118:
                v209 = v131[9];
                v210 = (char *)v129 + v209;
                v211 = (char *)v130 + v209;
                v212 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
                v213 = __swift_getEnumTagSinglePayload((uint64_t)v210, 1, v212);
                v214 = __swift_getEnumTagSinglePayload((uint64_t)v211, 1, v212);
                if (v213)
                {
                  if (!v214)
                  {
                    v215 = sub_2490E7ABC();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v210, v211, v215);
                    __swift_storeEnumTagSinglePayload((uint64_t)v210, 0, 1, v212);
                    goto LABEL_124;
                  }
                }
                else
                {
                  if (!v214)
                  {
                    v257 = sub_2490E7ABC();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 40))(v210, v211, v257);
LABEL_124:
                    v217 = v131[10];
                    v218 = (char *)v129 + v217;
                    v219 = (char *)v130 + v217;
                    v220 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
                    v221 = __swift_getEnumTagSinglePayload((uint64_t)v218, 1, v220);
                    v222 = __swift_getEnumTagSinglePayload((uint64_t)v219, 1, v220);
                    if (v221)
                    {
                      if (!v222)
                      {
                        v223 = sub_2490E7ABC();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v218, v219, v223);
                        __swift_storeEnumTagSinglePayload((uint64_t)v218, 0, 1, v220);
                        goto LABEL_130;
                      }
                    }
                    else
                    {
                      if (!v222)
                      {
                        v258 = sub_2490E7ABC();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 40))(v218, v219, v258);
LABEL_130:
                        v225 = v131[11];
                        v226 = (char *)v129 + v225;
                        v227 = (char *)v130 + v225;
                        valid = type metadata accessor for ToolKitProtoValidPredicate(0);
                        v229 = __swift_getEnumTagSinglePayload((uint64_t)v226, 1, valid);
                        v230 = __swift_getEnumTagSinglePayload((uint64_t)v227, 1, valid);
                        if (v229)
                        {
                          if (!v230)
                          {
                            v231 = sub_2490E7ABC();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v226, v227, v231);
                            __swift_storeEnumTagSinglePayload((uint64_t)v226, 0, 1, valid);
                            goto LABEL_136;
                          }
                        }
                        else
                        {
                          if (!v230)
                          {
                            v259 = sub_2490E7ABC();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 40))(v226, v227, v259);
LABEL_136:
                            v233 = v131[12];
                            v234 = (char *)v129 + v233;
                            v235 = (char *)v130 + v233;
                            v236 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
                            v237 = __swift_getEnumTagSinglePayload((uint64_t)v234, 1, v236);
                            v238 = __swift_getEnumTagSinglePayload((uint64_t)v235, 1, v236);
                            if (v237)
                            {
                              if (!v238)
                              {
                                v239 = *((_OWORD *)v235 + 1);
                                *(_OWORD *)v234 = *(_OWORD *)v235;
                                *((_OWORD *)v234 + 1) = v239;
                                v240 = *(int *)(v236 + 24);
                                v241 = &v234[v240];
                                v242 = &v235[v240];
                                v243 = sub_2490E7ABC();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v241, v242, v243);
                                __swift_storeEnumTagSinglePayload((uint64_t)v234, 0, 1, v236);
LABEL_142:
                                v245 = v131[13];
                                v246 = (char *)v129 + v245;
                                v247 = (char *)v130 + v245;
                                v248 = sub_2490E7ABC();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 40))(v246, v247, v248);
                                goto LABEL_143;
                              }
                            }
                            else
                            {
                              if (!v238)
                              {
                                v260 = *((_QWORD *)v235 + 1);
                                *(_QWORD *)v234 = *(_QWORD *)v235;
                                *((_QWORD *)v234 + 1) = v260;
                                swift_bridgeObjectRelease();
                                v261 = *((_QWORD *)v235 + 3);
                                *((_QWORD *)v234 + 2) = *((_QWORD *)v235 + 2);
                                *((_QWORD *)v234 + 3) = v261;
                                swift_bridgeObjectRelease();
                                v262 = *(int *)(v236 + 24);
                                v263 = &v234[v262];
                                v264 = &v235[v262];
                                v265 = sub_2490E7ABC();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v265 - 8) + 40))(v263, v264, v265);
                                goto LABEL_142;
                              }
                              sub_248E25C30((uint64_t)v234, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata);
                            }
                            v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A0);
                            memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
                            goto LABEL_142;
                          }
                          sub_248E25C30((uint64_t)v226, type metadata accessor for ToolKitProtoValidPredicate);
                        }
                        v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A8);
                        memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
                        goto LABEL_136;
                      }
                      sub_248E25C30((uint64_t)v218, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
                    }
                    v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B90);
                    memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
                    goto LABEL_130;
                  }
                  sub_248E25C30((uint64_t)v210, type metadata accessor for ToolKitProtoSuggestedPredicate);
                }
                v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_254470150);
                memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
                goto LABEL_124;
              }
              sub_248E25C30((uint64_t)v202, type metadata accessor for ToolKitProtoAllPredicate);
            }
            v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475180);
            memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
            goto LABEL_118;
          }
          sub_248E25C30((uint64_t)v194, type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
        }
        v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544754E0);
        memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
        goto LABEL_112;
      }
      sub_248E25C30((uint64_t)v141, type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
    }
    v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AC0);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
    goto LABEL_106;
  }
  if (v133)
  {
LABEL_79:
    v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475348);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    goto LABEL_143;
  }
  *(_OWORD *)v129 = *(_OWORD *)v130;
  v134 = v131[6];
  v135 = (char *)v129 + v134;
  v136 = (char *)v130 + v134;
  v137 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v136, 1, v137))
  {
    v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AC0);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
  }
  else
  {
    v147 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v135, v136, v147);
    __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v137);
  }
  v148 = v131[7];
  v149 = (char *)v129 + v148;
  v150 = (char *)v130 + v148;
  v151 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v151))
  {
    v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544754E0);
    memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
  }
  else
  {
    v153 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v149, v150, v153);
    __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v151);
  }
  v154 = v131[8];
  v155 = (char *)v129 + v154;
  v156 = (char *)v130 + v154;
  v157 = type metadata accessor for ToolKitProtoAllPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v157))
  {
    v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475180);
    memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
  }
  else
  {
    v159 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v155, v156, v159);
    __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v157);
  }
  v160 = v131[9];
  v161 = (char *)v129 + v160;
  v162 = (char *)v130 + v160;
  v163 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v162, 1, v163))
  {
    v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_254470150);
    memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
  }
  else
  {
    v165 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v161, v162, v165);
    __swift_storeEnumTagSinglePayload((uint64_t)v161, 0, 1, v163);
  }
  v166 = v131[10];
  v167 = (char *)v129 + v166;
  v168 = (char *)v130 + v166;
  v169 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v168, 1, v169))
  {
    v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B90);
    memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
  }
  else
  {
    v171 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v167, v168, v171);
    __swift_storeEnumTagSinglePayload((uint64_t)v167, 0, 1, v169);
  }
  v172 = v131[11];
  v173 = (char *)v129 + v172;
  v174 = (char *)v130 + v172;
  v175 = type metadata accessor for ToolKitProtoValidPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v174, 1, v175))
  {
    v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A8);
    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
  }
  else
  {
    v177 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v173, v174, v177);
    __swift_storeEnumTagSinglePayload((uint64_t)v173, 0, 1, v175);
  }
  v178 = v131[12];
  v179 = (_OWORD *)((char *)v129 + v178);
  v180 = (_OWORD *)((char *)v130 + v178);
  v181 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v180, 1, v181))
  {
    v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E55A0);
    memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
  }
  else
  {
    v183 = v180[1];
    *v179 = *v180;
    v179[1] = v183;
    v184 = *(int *)(v181 + 24);
    v185 = (char *)v179 + v184;
    v186 = (char *)v180 + v184;
    v187 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v185, v186, v187);
    __swift_storeEnumTagSinglePayload((uint64_t)v179, 0, 1, v181);
  }
  v188 = v131[13];
  v189 = (char *)v129 + v188;
  v190 = (char *)v130 + v188;
  v191 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
  __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, (uint64_t)v131);
LABEL_143:
  v249 = *(int *)(a3 + 24);
  v250 = (char *)a1 + v249;
  v251 = (char *)a2 + v249;
  v252 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 40))(v250, v251, v252);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EAAF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_25Tm(a1, a2, a3, &qword_2544755F0, &qword_254475348);
}

uint64_t __swift_get_extra_inhabitant_index_25Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_472_0(a1, a2, a3, a4);
  OUTLINED_FUNCTION_24_6();
  if (v10)
  {
    v8 = OUTLINED_FUNCTION_474_0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    OUTLINED_FUNCTION_24_6();
    if (v10)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_217_0();
    }
    v8 = v6 + v11;
  }
  return OUTLINED_FUNCTION_265(v8, v5, v9);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EAAFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_26Tm(a1, a2, a3, a4, &qword_2544755F0, &qword_254475348);
}

uint64_t __swift_store_extra_inhabitant_index_26Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_437_0(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_32_0();
  if (v7)
  {
    OUTLINED_FUNCTION_502_0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    OUTLINED_FUNCTION_32_0();
    if (v7)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_225_0();
    }
  }
  OUTLINED_FUNCTION_82_1();
  return OUTLINED_FUNCTION_376_0(v8, v9, v10, v11);
}

void sub_248EAB028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EAB04C(a1, a2, a3, &qword_2544755F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

void sub_248EAB04C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_299_0(a1, a4, a5);
  if (v5 <= 0x3F)
  {
    OUTLINED_FUNCTION_425_0();
    OUTLINED_FUNCTION_530();
    if (v6 <= 0x3F)
    {
      OUTLINED_FUNCTION_183_0();
      if (v7 <= 0x3F)
      {
        OUTLINED_FUNCTION_181_1();
        OUTLINED_FUNCTION_258_1();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoRestrictionContext.InSet.ValueSet(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_248EAB188 + 4 * byte_2490F3130[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (char *)a1 + v12;
    v17 = (char *)a2 + v12;
    v18 = sub_2490E7ABC();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoRestrictionContext.InSet.ValueSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if (__swift_getEnumTagSinglePayload(a1, 1, v4))
    goto LABEL_18;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0) + 24);
      goto LABEL_17;
    case 1u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
      v7 = a1 + *(int *)(v6 + 20);
      v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
      if (__swift_getEnumTagSinglePayload(v7, 1, v8))
        goto LABEL_16;
      v9 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
      if (__swift_getEnumTagSinglePayload(v7, 1, v9))
        goto LABEL_15;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
LABEL_14:
          v12 = v7 + *(int *)(v11 + 24);
          v13 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
          goto LABEL_14;
        case 0:
          swift_bridgeObjectRelease();
          break;
      }
LABEL_15:
      v14 = v7 + *(int *)(v8 + 20);
      v15 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
LABEL_16:
      v5 = *(int *)(v6 + 24);
LABEL_17:
      v16 = a1 + v5;
      v17 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
LABEL_18:
      swift_bridgeObjectRelease();
      v18 = a1 + *(int *)(a2 + 24);
      v19 = sub_2490E7ABC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    case 2u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
      goto LABEL_17;
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_18;
    default:
      goto LABEL_18;
  }
}

char *initializeWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_248EAB854 + 4 * byte_2490F313A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = sub_2490E7ABC();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  return a1;
}

char *assignWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = (char *)&loc_248EABCE8 + 4 * byte_2490F313F[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    v11 = (char *)&loc_248EABDD8 + 4 * byte_2490F3144[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoRestrictionContext.InSet.ValueSet(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  __int128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v48;
  char *v49;

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    goto LABEL_22;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0) + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      goto LABEL_20;
    case 1u:
      *a1 = *a2;
      v13 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
      v14 = *(int *)(v13 + 20);
      v15 = (_OWORD *)((char *)a1 + v14);
      v16 = (_OWORD *)((char *)a2 + v14);
      v17 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        goto LABEL_19;
      }
      v24 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        goto LABEL_18;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v31 = v16[1];
        *v15 = *v16;
        v15[1] = v31;
        v32 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                     + 24);
        v33 = (char *)v15 + v32;
        v49 = (char *)v16 + v32;
        v34 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v33, v49, v34);
        goto LABEL_15;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v27 = v16[1];
        *v15 = *v16;
        v15[1] = v27;
        v28 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                     + 24);
        v29 = (char *)v15 + v28;
        v48 = (char *)v16 + v28;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, v48, v30);
LABEL_15:
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_17:
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v24);
LABEL_18:
      v35 = *(int *)(v17 + 20);
      v36 = (char *)v15 + v35;
      v37 = (char *)v16 + v35;
      v38 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
LABEL_19:
      v39 = *(int *)(v13 + 24);
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      v42 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
LABEL_20:
      swift_storeEnumTagMultiPayload();
LABEL_21:
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_22:
      v43 = *(int *)(a3 + 24);
      *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
      return a1;
    case 2u:
    case 4u:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      a1[2] = a2[2];
      v20 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      goto LABEL_20;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_21;
  }
}

_OWORD *assignWithTake for ToolKitProtoRestrictionContext.InSet.ValueSet(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  __int128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v90;
  char *v91;
  char *v92;
  char *v93;

  v6 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_45;
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v15 = a2[1];
          *a1 = *a2;
          a1[1] = v15;
          v16 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                       + 24);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          goto LABEL_44;
        case 1u:
          *a1 = *a2;
          v31 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
          v32 = *(int *)(v31 + 20);
          v33 = (_OWORD *)((char *)a1 + v32);
          v34 = (_OWORD *)((char *)a2 + v32);
          v35 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
            goto LABEL_43;
          }
          v44 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v44))
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
            goto LABEL_42;
          }
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v68 = v34[1];
            *v33 = *v34;
            v33[1] = v68;
            v69 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                         + 24);
            v70 = (char *)v33 + v69;
            v93 = (char *)v34 + v69;
            v71 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v70, v93, v71);
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_41:
              __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v44);
LABEL_42:
              v72 = *(int *)(v35 + 20);
              v73 = (char *)v33 + v72;
              v74 = (char *)v34 + v72;
              v75 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
              __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
LABEL_43:
              v76 = *(int *)(v31 + 24);
              v77 = (char *)a1 + v76;
              v78 = (char *)a2 + v76;
              v79 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
LABEL_44:
              swift_storeEnumTagMultiPayload();
              goto LABEL_45;
            }
            v52 = v34[1];
            *v33 = *v34;
            v33[1] = v52;
            v53 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                         + 24);
            v54 = (char *)v33 + v53;
            v91 = (char *)v34 + v53;
            v55 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v54, v91, v55);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_41;
        case 2u:
        case 4u:
          v37 = a2[1];
          *a1 = *a2;
          a1[1] = v37;
          a1[2] = a2[2];
          v38 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
          v39 = (char *)a1 + v38;
          v40 = (char *)a2 + v38;
          v41 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
          goto LABEL_44;
        default:
          v14 = *(_QWORD *)(v6 - 8);
          goto LABEL_8;
      }
    }
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
LABEL_7:
    v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475610) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    goto LABEL_45;
  }
  if (v8)
    goto LABEL_7;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                   + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_36;
    case 1u:
      *a1 = *a2;
      v20 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
      v21 = *(int *)(v20 + 20);
      v22 = (_OWORD *)((char *)a1 + v21);
      v23 = (_OWORD *)((char *)a2 + v21);
      v24 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        goto LABEL_35;
      }
      v42 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v42))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        goto LABEL_34;
      }
      v46 = swift_getEnumCaseMultiPayload();
      if (v46 == 2)
      {
        v56 = v23[1];
        *v22 = *v23;
        v22[1] = v56;
        v57 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                     + 24);
        v58 = (char *)v22 + v57;
        v92 = (char *)v23 + v57;
        v59 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v58, v92, v59);
        goto LABEL_31;
      }
      if (v46 == 1)
      {
        v47 = v23[1];
        *v22 = *v23;
        v22[1] = v47;
        v48 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                     + 24);
        v49 = (char *)v22 + v48;
        v90 = (char *)v23 + v48;
        v50 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v49, v90, v50);
LABEL_31:
        swift_storeEnumTagMultiPayload();
        goto LABEL_33;
      }
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_33:
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v42);
LABEL_34:
      v60 = *(int *)(v24 + 20);
      v61 = (char *)v22 + v60;
      v62 = (char *)v23 + v60;
      v63 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
LABEL_35:
      v64 = *(int *)(v20 + 24);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      v67 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
LABEL_36:
      swift_storeEnumTagMultiPayload();
LABEL_37:
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      break;
    case 2u:
    case 4u:
      v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      a1[2] = a2[2];
      v27 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_36;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_37;
  }
LABEL_45:
  v80 = *(int *)(a3 + 20);
  v81 = (_QWORD *)((char *)a1 + v80);
  v82 = (uint64_t *)((char *)a2 + v80);
  v84 = *v82;
  v83 = v82[1];
  *v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  v85 = *(int *)(a3 + 24);
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EAD1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_262_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
  OUTLINED_FUNCTION_24_6();
  if (v6)
  {
    v7 = OUTLINED_FUNCTION_474_0();
  }
  else
  {
    if ((_DWORD)v3 == 2147483646)
    {
      OUTLINED_FUNCTION_267_1(*(_QWORD *)(v4 + *(int *)(a3 + 20) + 8));
      OUTLINED_FUNCTION_93();
      return;
    }
    OUTLINED_FUNCTION_63();
    v7 = OUTLINED_FUNCTION_632();
  }
  OUTLINED_FUNCTION_265(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EAD240(uint64_t a1, uint64_t a2, int a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_262_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475610);
  OUTLINED_FUNCTION_32_0();
  if (v4)
  {
    OUTLINED_FUNCTION_502_0();
  }
  else
  {
    if (a3 == 2147483646)
    {
      OUTLINED_FUNCTION_604();
      OUTLINED_FUNCTION_93();
      return;
    }
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_632();
  }
  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_264(v5, v6, v7, v8);
}

void sub_248EAD2A8()
{
  unint64_t v0;
  unint64_t v1;

  sub_248E0EBD8(319, &qword_254475618, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
  if (v0 <= 0x3F)
  {
    sub_2490E7ABC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_15:
      v29 = *(int *)(a3 + 24);
      v30 = (char *)v4 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      return v4;
    }
    v14 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_14:
      v25 = *(int *)(v11 + 20);
      v26 = (char *)v9 + v25;
      v27 = (char *)v10 + v25;
      v28 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_15;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v20 = v10[1];
      *v9 = *v10;
      v9[1] = v20;
      v21 = v10[3];
      v9[2] = v10[2];
      v9[3] = v21;
      v19 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v24 = v10[1];
        *v9 = *v10;
        v9[1] = v24;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      }
      v17 = v10[1];
      *v9 = *v10;
      v9[1] = v17;
      v18 = v10[3];
      v9[2] = v10[2];
      v9[3] = v18;
      v19 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v22 = *(int *)(v19 + 24);
    v35 = (char *)v10 + v22;
    v36 = (char *)v9 + v22;
    v23 = sub_2490E7ABC();
    v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(v36, v35, v23);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
    goto LABEL_14;
  }
  v13 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t destroy for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (!__swift_getEnumTagSinglePayload(v4, 1, v6))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (!EnumCaseMultiPayload)
            swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
      }
      v9 = v4 + *(int *)(v8 + 24);
      v10 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
LABEL_10:
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + *(int *)(a2 + 24);
  v14 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *initializeWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v12 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_12:
      v23 = *(int *)(v10 + 20);
      v24 = (char *)v8 + v23;
      v25 = (char *)v9 + v23;
      v26 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_13;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = v9[1];
      *v8 = *v9;
      v8[1] = v18;
      v19 = v9[3];
      v8[2] = v9[2];
      v8[3] = v19;
      v17 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v22 = v9[1];
        *v8 = *v9;
        v8[1] = v22;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      }
      v15 = v9[1];
      *v8 = *v9;
      v8[1] = v15;
      v16 = v9[3];
      v8[2] = v9[2];
      v8[3] = v16;
      v17 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v20 = *(int *)(v17 + 24);
    v33 = (char *)v9 + v20;
    v34 = (char *)v8 + v20;
    v21 = sub_2490E7ABC();
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v34, v33, v21);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
    goto LABEL_12;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_13:
  v27 = *(int *)(a3 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v45)(char *, char *, uint64_t);
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    v16 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v15);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          v7[3] = v8[3];
          v19 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_31;
          }
          *v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          v7[3] = v8[3];
          v19 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
        }
        v32 = *(int *)(v19 + 24);
        v49 = (char *)v8 + v32;
        v53 = (char *)v7 + v32;
        v33 = sub_2490E7ABC();
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(v53, v49, v33);
LABEL_31:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v15);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
          v29 = swift_getEnumCaseMultiPayload();
          if (v29 == 2)
          {
            *v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v7[3] = v8[3];
            v34 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                         + 24);
            v54 = (char *)v8 + v34;
            v56 = (char *)v7 + v34;
            v35 = sub_2490E7ABC();
            v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v50(v56, v54, v35);
          }
          else
          {
            *v7 = *v8;
            v7[1] = v8[1];
            if (v29 == 1)
            {
              v7[2] = v8[2];
              v7[3] = v8[3];
              v30 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                           + 24);
              v52 = (char *)v8 + v30;
              v55 = (char *)v7 + v30;
              v31 = sub_2490E7ABC();
              v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v48(v55, v52, v31);
            }
            else
            {
              swift_bridgeObjectRetain();
            }
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_35;
      }
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    }
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_35:
    v36 = *(int *)(v9 + 20);
    v37 = (char *)v7 + v36;
    v38 = (char *)v8 + v36;
    v39 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
    goto LABEL_36;
  }
  if (!v11)
  {
    v12 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_23:
      v25 = *(int *)(v9 + 20);
      v26 = (char *)v7 + v25;
      v27 = (char *)v8 + v25;
      v28 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_36;
    }
    v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 2)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v21 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (v20 != 1)
      {
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_22;
      }
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v21 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v23 = *(int *)(v21 + 24);
    v47 = (char *)v8 + v23;
    v51 = (char *)v7 + v23;
    v24 = sub_2490E7ABC();
    v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(v51, v47, v24);
LABEL_22:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v12);
    goto LABEL_23;
  }
LABEL_7:
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_36:
  v40 = *(int *)(a3 + 24);
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v11 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_12:
      v24 = *(int *)(v9 + 20);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_13;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v19 = v8[1];
      *v7 = *v8;
      v7[1] = v19;
      v20 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v21 = (char *)v7 + v20;
      v22 = (char *)v8 + v20;
      v23 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_11;
      }
      v14 = v8[1];
      *v7 = *v8;
      v7[1] = v14;
      v15 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                   + 24);
      v16 = (char *)v7 + v15;
      v17 = (char *)v8 + v15;
      v18 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
    goto LABEL_12;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_13:
  v28 = *(int *)(a3 + 24);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int EnumCaseMultiPayload;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
      goto LABEL_7;
    }
    v16 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16);
    v18 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v47 = v9[1];
          *v8 = *v9;
          v8[1] = v47;
          v48 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                       + 24);
          v49 = (char *)v8 + v48;
          v50 = (char *)v9 + v48;
          v51 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            goto LABEL_32;
          }
          v20 = v9[1];
          *v8 = *v9;
          v8[1] = v20;
          v21 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                       + 24);
          v22 = (char *)v8 + v21;
          v23 = (char *)v9 + v21;
          v24 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        }
        swift_storeEnumTagMultiPayload();
LABEL_32:
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v16);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v18)
      {
        if (a1 == a2)
          goto LABEL_35;
        sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
        v41 = swift_getEnumCaseMultiPayload();
        if (v41 == 2)
        {
          v52 = v9[1];
          *v8 = *v9;
          v8[1] = v52;
          v53 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                       + 24);
          v54 = (char *)v8 + v53;
          v55 = (char *)v9 + v53;
          v56 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
        }
        else
        {
          if (v41 != 1)
          {
            v31 = *(_QWORD *)(v16 - 8);
            goto LABEL_19;
          }
          v42 = v9[1];
          *v8 = *v9;
          v8[1] = v42;
          v43 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                       + 24);
          v44 = (char *)v8 + v43;
          v45 = (char *)v9 + v43;
          v46 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    }
    v31 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475C80) - 8);
LABEL_19:
    memcpy(v8, v9, *(_QWORD *)(v31 + 64));
LABEL_35:
    v57 = *(int *)(v10 + 20);
    v58 = (char *)v8 + v57;
    v59 = (char *)v9 + v57;
    v60 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v58, v59, v60);
    goto LABEL_36;
  }
  if (!v12)
  {
    v13 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_24:
      v37 = *(int *)(v10 + 20);
      v38 = (char *)v8 + v37;
      v39 = (char *)v9 + v37;
      v40 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_36;
    }
    v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 2)
    {
      v32 = v9[1];
      *v8 = *v9;
      v8[1] = v32;
      v33 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v34 = (char *)v8 + v33;
      v35 = (char *)v9 + v33;
      v36 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    }
    else
    {
      if (v25 != 1)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_23;
      }
      v26 = v9[1];
      *v8 = *v9;
      v8[1] = v26;
      v27 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                   + 24);
      v28 = (char *)v8 + v27;
      v29 = (char *)v9 + v27;
      v30 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v13);
    goto LABEL_24;
  }
LABEL_7:
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_36:
  v61 = *(int *)(a3 + 24);
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EAE5D8()
{
  __swift_get_extra_inhabitant_index_23Tm();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EAE5F0()
{
  __swift_store_extra_inhabitant_index_24Tm();
}

void sub_248EAE5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F0ABC8(a1, a2, a3, (uint64_t)&unk_2490F6130, &qword_254475C58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_2490E7ABC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_2490E7ABC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EAE938()
{
  sub_248F0273C();
}

uint64_t initializeBufferWithCopyOfBuffer for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_248EAE9AC + 4 * byte_2490F3158[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0) + 24);
      goto LABEL_16;
    case 1:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
      if (__swift_getEnumTagSinglePayload(v5, 1, v6))
        goto LABEL_15;
      v7 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
      if (__swift_getEnumTagSinglePayload(v5, 1, v7))
        goto LABEL_14;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
LABEL_13:
          v10 = v5 + *(int *)(v9 + 24);
          v11 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
          goto LABEL_13;
        case 0:
          swift_bridgeObjectRelease();
          break;
      }
LABEL_14:
      v12 = v5 + *(int *)(v6 + 20);
      v13 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
LABEL_15:
      v3 = *(int *)(v4 + 24);
LABEL_16:
      v14 = a1 + v3;
      v15 = sub_2490E7ABC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    case 2:
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
      goto LABEL_16;
    case 3:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

void initializeWithCopy for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind()
{
  char *v0;

  v0 = (char *)sub_248EAEFB4 + 4 * byte_2490F3162[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_248EAEFB4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[3];
  v0[2] = v1[2];
  v0[3] = v3;
  v4 = v1[5];
  v0[4] = v1[4];
  v0[5] = v4;
  v5 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
  v6 = (char *)v0 + v5;
  v7 = (char *)v1 + v5;
  v8 = sub_2490E7ABC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_248E25C30(result, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    v2 = (char *)&loc_248EAF324 + 4 * byte_2490F3167[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0) + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      goto LABEL_18;
    case 1u:
      *a1 = *a2;
      v11 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
      v12 = *(int *)(v11 + 20);
      v13 = (_OWORD *)((char *)a1 + v12);
      v14 = (_OWORD *)((char *)a2 + v12);
      v15 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        goto LABEL_17;
      }
      v22 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        goto LABEL_16;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v30 = v14[1];
        *v13 = *v14;
        v13[1] = v30;
        v31 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                     + 24);
        v32 = (char *)v13 + v31;
        v33 = (char *)v14 + v31;
        v34 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        goto LABEL_13;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v25 = v14[1];
        *v13 = *v14;
        v13[1] = v25;
        v26 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                     + 24);
        v27 = (char *)v13 + v26;
        v28 = (char *)v14 + v26;
        v29 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_15:
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v22);
LABEL_16:
      v35 = *(int *)(v15 + 20);
      v36 = (char *)v13 + v35;
      v37 = (char *)v14 + v35;
      v38 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
LABEL_17:
      v39 = *(int *)(v11 + 24);
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      v42 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2u:
    case 4u:
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      a1[2] = a2[2];
      v18 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_18;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_OWORD *assignWithTake for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        v7 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0)
                    + 24);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        goto LABEL_19;
      case 1u:
        *a1 = *a2;
        v11 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
        v12 = *(int *)(v11 + 20);
        v13 = (_OWORD *)((char *)a1 + v12);
        v14 = (_OWORD *)((char *)a2 + v12);
        v15 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          goto LABEL_18;
        }
        v22 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          goto LABEL_17;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v30 = v14[1];
          *v13 = *v14;
          v13[1] = v30;
          v31 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                       + 24);
          v32 = (char *)v13 + v31;
          v33 = (char *)v14 + v31;
          v34 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
          goto LABEL_14;
        }
        if (EnumCaseMultiPayload == 1)
        {
          v25 = v14[1];
          *v13 = *v14;
          v13[1] = v25;
          v26 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                       + 24);
          v27 = (char *)v13 + v26;
          v28 = (char *)v14 + v26;
          v29 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
LABEL_14:
          swift_storeEnumTagMultiPayload();
          goto LABEL_16;
        }
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_16:
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v22);
LABEL_17:
        v35 = *(int *)(v15 + 20);
        v36 = (char *)v13 + v35;
        v37 = (char *)v14 + v35;
        v38 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
LABEL_18:
        v39 = *(int *)(v11 + 24);
        v40 = (char *)a1 + v39;
        v41 = (char *)a2 + v39;
        v42 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        a1[2] = a2[2];
        v18 = *(int *)(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0) + 28);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_19;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_248EAFDAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.RepresentableAs()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.RepresentableAs()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoRestrictionContext.TextTypedWith(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
    v5 = *(int *)(a3 + 40);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoRestrictionContext.TextTypedWith(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 40);
  v3 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ToolKitProtoRestrictionContext.TextTypedWith(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  v4 = *(int *)(a3 + 40);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for ToolKitProtoRestrictionContext.TextTypedWith(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v4 = *(int *)(a3 + 40);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoRestrictionContext.TextTypedWith(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  v4 = *(int *)(a3 + 40);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoRestrictionContext.TextTypedWith(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  v4 = *(int *)(a3 + 40);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.TextTypedWith()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EB0110()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_617();
  if (v0)
  {
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_426_0();
    v2 = OUTLINED_FUNCTION_94_1(v1);
    OUTLINED_FUNCTION_265(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.TextTypedWith()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EB0170()
{
  char v0;
  _BYTE *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_453_0();
  if (v2)
  {
    *v1 = v0 + 1;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_443_0();
    v4 = OUTLINED_FUNCTION_44_5(v3);
    OUTLINED_FUNCTION_264(v4, v5, v6, v7);
  }
}

uint64_t sub_248EB01B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2490E7ABC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType()
{
  OUTLINED_FUNCTION_164();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_248EB029C + 4 * byte_2490F317B[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_248EB02D0 + 4 * byte_2490F3176[v4]))();
}

uint64_t sub_248EB02D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248EB02D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248EB02E0);
  return result;
}

uint64_t sub_248EB02EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248EB02F4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_248EB02F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248EB0300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType()
{
  OUTLINED_FUNCTION_164();
}

void type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType()
{
  OUTLINED_FUNCTION_164();
}

void _s7ToolKit26ToolKitProtoTypedValueKindOwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_1();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContextKind(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 123;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7B)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRestrictionContextKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

void type metadata accessor for ToolKitProtoRestrictionContextKind()
{
  OUTLINED_FUNCTION_164();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoContentItemClassDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_12:
      v21 = *(int *)(a3 + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v13 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      }
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v16 = *(int *)(v13 + 24);
    v26 = (char *)a1 + v16;
    v17 = (char *)a2 + v16;
    v18 = sub_2490E7ABC();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v26, v17, v18);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    goto LABEL_12;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for ToolKitProtoContentItemClassDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  if (__swift_getEnumTagSinglePayload(a1, 1, v4))
    goto LABEL_9;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
LABEL_8:
      v7 = a1 + *(int *)(v6 + 24);
      v8 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
      goto LABEL_8;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
LABEL_9:
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for ToolKitProtoContentItemClassDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;

  v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      v11 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      }
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      v11 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v14 = *(int *)(v11 + 24);
    v24 = (char *)a1 + v14;
    v15 = (char *)a2 + v14;
    v16 = sub_2490E7ABC();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v24, v15, v16);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    goto LABEL_10;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_10:
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoContentItemClassDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v32;

  v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v10 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_16;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v10 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
      }
      v18 = *(int *)(v10 + 24);
      v32 = (char *)a1 + v18;
      v19 = (char *)a2 + v18;
      v20 = sub_2490E7ABC();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v32, v19, v20);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_20;
    }
    goto LABEL_8;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
LABEL_8:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_20;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v22 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_2490E7ABC();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v23, v24, v25);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      if (v12 == 1)
      {
        a1[2] = a2[2];
        a1[3] = a2[3];
        v13 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                     + 24);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_2490E7ABC();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_20:
  v27 = *(int *)(a3 + 20);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoContentItemClassDescriptor(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_9;
      }
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                   + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    goto LABEL_10;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_10:
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoContentItemClassDescriptor(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v23 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                     + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_17;
        }
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                     + 24);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
      v16 = swift_getEnumCaseMultiPayload();
      if (v16 == 2)
      {
        v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        v28 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                     + 24);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (v16 != 1)
        {
          v15 = *(_QWORD *)(v6 - 8);
          goto LABEL_9;
        }
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        v18 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                     + 24);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
  }
  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475C80) - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v15 + 64));
LABEL_20:
  v32 = *(int *)(a3 + 20);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoContentItemClassDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EB0F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475C80);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoContentItemClassDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EB0FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475C80);
}

void sub_248EB0FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475C88, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
}

uint64_t getEnumTagSinglePayload for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoContentItemClassDescriptorKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      v17 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_2490E7ABC();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                  + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E7ABC();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    else
    {
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolKitProtoContentItemClassDescriptorKind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
LABEL_7:
      v4 = a1 + *(int *)(v3 + 24);
      v5 = sub_2490E7ABC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
      goto LABEL_7;
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ToolKitProtoContentItemClassDescriptorKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v7 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
  }
  v10 = *(int *)(v7 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2490E7ABC();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoContentItemClassDescriptorKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v6 = *(int *)(v5 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2490E7ABC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoContentItemClassDescriptorKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    v13 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0) + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoContentItemClassDescriptorKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      v13 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                  + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_248EB1664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EF8D20(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoComparisonPredicate(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int *v99;
  int *v100;
  int *v101;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v99 = v6;
      v14 = v10[1];
      *v9 = *v10;
      v9[1] = v14;
      v15 = v10[3];
      v9[2] = v10[2];
      v9[3] = v15;
      v16 = *(int *)(v11 + 24);
      v17 = (_QWORD *)((char *)v9 + v16);
      v18 = (_QWORD *)((char *)v10 + v16);
      v19 = type metadata accessor for ToolKitProtoTypeInstance(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = *v18;
        if ((~*v18 & 0xF000000000000007) != 0)
          swift_retain();
        *v17 = v21;
        v22 = *(int *)(v19 + 20);
        v23 = (char *)v17 + v22;
        v24 = (char *)v18 + v22;
        v25 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      v26 = *(int *)(v11 + 28);
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      v29 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      v6 = v99;
    }
    v30 = v6[6];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B80);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v35))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 1u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 2u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 3u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 4u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 5u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 6u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 7u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 8u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 9u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 0xAu:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_52;
          case 0xBu:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
LABEL_52:
            *v31 = v37;
            v38 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
            v39 = (char *)v31 + v38;
            v40 = (char *)v32 + v38;
            v41 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
            swift_storeEnumTagMultiPayload();
            break;
          case 0xCu:
            v71 = type metadata accessor for ToolKitProtoTypedValue(0);
            v101 = v6;
            if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v71))
            {
              v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
              memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
            }
            else
            {
              v73 = v71;
              v74 = *v32;
              if ((~*v32 & 0xF000000000000007) != 0)
                swift_retain();
              *v31 = v74;
              v75 = v73;
              v76 = *(int *)(v73 + 20);
              v77 = (char *)v31 + v76;
              v78 = (char *)v32 + v76;
              v79 = sub_2490E7ABC();
              v80 = v77;
              v71 = v75;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v80, v78, v79);
              __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v75);
            }
            v81 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
            v82 = *(int *)(v81 + 20);
            v83 = (_QWORD *)((char *)v31 + v82);
            v84 = (uint64_t *)((char *)v32 + v82);
            if (__swift_getEnumTagSinglePayload((uint64_t)v32 + v82, 1, v71))
            {
              v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
              memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
            }
            else
            {
              v98 = v71;
              v86 = *v84;
              if ((~*v84 & 0xF000000000000007) != 0)
                swift_retain();
              *v83 = v86;
              v87 = *(int *)(v98 + 20);
              v96 = (char *)v83 + v87;
              v88 = (char *)v84 + v87;
              v89 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v96, v88, v89);
              __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v98);
            }
            v90 = *(int *)(v81 + 24);
            v91 = (char *)v31 + v90;
            v92 = (char *)v32 + v90;
            v93 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
            swift_storeEnumTagMultiPayload();
            v6 = v101;
            break;
          default:
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v35);
      }
      v42 = *(int *)(v33 + 20);
      v43 = (char *)v31 + v42;
      v44 = (char *)v32 + v42;
      v45 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    }
    v46 = v6[7];
    v47 = (_QWORD *)((char *)v4 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    v49 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
LABEL_67:
      v66 = v6[8];
      v67 = (char *)v4 + v66;
      v68 = (char *)a2 + v66;
      v69 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
      return v4;
    }
    v51 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v51))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_66:
      v62 = *(int *)(v49 + 20);
      v63 = (char *)v47 + v62;
      v64 = (char *)v48 + v62;
      v65 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
      goto LABEL_67;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v57 = v48[1];
      *v47 = *v48;
      v47[1] = v57;
      v100 = v6;
      v58 = v48[3];
      v47[2] = v48[2];
      v47[3] = v58;
      v56 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v61 = v48[1];
        *v47 = *v48;
        v47[1] = v61;
        swift_bridgeObjectRetain();
        goto LABEL_65;
      }
      v54 = v48[1];
      *v47 = *v48;
      v47[1] = v54;
      v100 = v6;
      v55 = v48[3];
      v47[2] = v48[2];
      v47[3] = v55;
      v56 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v59 = *(int *)(v56 + 24);
    v95 = (char *)v48 + v59;
    v97 = (char *)v47 + v59;
    v60 = sub_2490E7ABC();
    v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
    swift_bridgeObjectRetain();
    v6 = v100;
    swift_bridgeObjectRetain();
    v94(v97, v95, v60);
LABEL_65:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v51);
    goto LABEL_66;
  }
  v13 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t destroy for ToolKitProtoComparisonPredicate(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)(v4 + *(int *)(v5 + 24));
    v7 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
    {
      if ((~*v6 & 0xF000000000000007) != 0)
        swift_release();
      v8 = (char *)v6 + *(int *)(v7 + 20);
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + *(int *)(v5 + 28);
    v11 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = (_QWORD *)(a1 + a2[6]);
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
          if ((~*v12 & 0xF000000000000007) != 0)
            swift_release();
          v15 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          goto LABEL_13;
        case 0xCu:
          v32 = type metadata accessor for ToolKitProtoTypedValue(0);
          if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v32))
          {
            if ((~*v12 & 0xF000000000000007) != 0)
              swift_release();
            v33 = (char *)v12 + *(int *)(v32 + 20);
            v34 = sub_2490E7ABC();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
          }
          v35 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v36 = (_QWORD *)((char *)v12 + *(int *)(v35 + 20));
          if (!__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v32))
          {
            if ((~*v36 & 0xF000000000000007) != 0)
              swift_release();
            v37 = (char *)v36 + *(int *)(v32 + 20);
            v38 = sub_2490E7ABC();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
          }
          v15 = *(int *)(v35 + 24);
LABEL_13:
          v16 = (char *)v12 + v15;
          v17 = sub_2490E7ABC();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          break;
        default:
          break;
      }
    }
    v18 = (char *)v12 + *(int *)(v13 + 20);
    v19 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = a1 + a2[7];
  v21 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
  {
    v22 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (!__swift_getEnumTagSinglePayload(v20, 1, v22))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (!EnumCaseMultiPayload)
            swift_bridgeObjectRelease();
          goto LABEL_24;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
      }
      v25 = v20 + *(int *)(v24 + 24);
      v26 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
    }
LABEL_24:
    v27 = v20 + *(int *)(v21 + 20);
    v28 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  v29 = a1 + a2[8];
  v30 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

_QWORD *initializeWithCopy for ToolKitProtoComparisonPredicate(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int EnumCaseMultiPayload;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  int *v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  char *v98;
  char *v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;

  v3 = a3;
  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v100 = v4;
    v12 = v3;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    v15 = *(int *)(v10 + 24);
    v16 = (_QWORD *)((char *)v8 + v15);
    v17 = (_QWORD *)((char *)v9 + v15);
    v18 = type metadata accessor for ToolKitProtoTypeInstance(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = *v17;
      if ((~*v17 & 0xF000000000000007) != 0)
        swift_retain();
      *v16 = v20;
      v21 = *(int *)(v18 + 20);
      v22 = (char *)v16 + v21;
      v23 = (char *)v17 + v21;
      v24 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    v3 = v12;
    v25 = *(int *)(v10 + 28);
    v26 = (char *)v8 + v25;
    v27 = (char *)v9 + v25;
    v28 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    v4 = v100;
  }
  v29 = v3[6];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)v4 + v29);
  v32 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B80);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v34))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 1u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 2u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 3u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 4u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 5u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 6u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 7u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 8u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 9u:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 0xAu:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 0xBu:
          v36 = *v31;
          if ((~*v31 & 0xF000000000000007) != 0)
            swift_retain();
LABEL_50:
          *v30 = v36;
          v37 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v38 = (char *)v30 + v37;
          v39 = (char *)v31 + v37;
          v40 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
          goto LABEL_62;
        case 0xCu:
          v41 = type metadata accessor for ToolKitProtoTypedValue(0);
          v95 = v3;
          if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v41))
          {
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          }
          else
          {
            v43 = v41;
            v44 = *v31;
            if ((~*v31 & 0xF000000000000007) != 0)
              swift_retain();
            *v30 = v44;
            v45 = v43;
            v46 = *(int *)(v43 + 20);
            v47 = (char *)v30 + v46;
            v48 = (char *)v31 + v46;
            v49 = sub_2490E7ABC();
            v50 = v47;
            v41 = v45;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v50, v48, v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v45);
          }
          v51 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v52 = *(int *)(v51 + 20);
          v53 = (_QWORD *)((char *)v30 + v52);
          v54 = (uint64_t *)((char *)v31 + v52);
          if (__swift_getEnumTagSinglePayload((uint64_t)v31 + v52, 1, v41))
          {
            v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          }
          else
          {
            v101 = v41;
            v56 = *v54;
            if ((~*v54 & 0xF000000000000007) != 0)
              swift_retain();
            *v53 = v56;
            v57 = *(int *)(v101 + 20);
            v98 = (char *)v53 + v57;
            v58 = (char *)v54 + v57;
            v59 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v98, v58, v59);
            __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v101);
          }
          v3 = v95;
          v60 = *(int *)(v51 + 24);
          v61 = (char *)v30 + v60;
          v62 = (char *)v31 + v60;
          v63 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
LABEL_62:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v34);
    }
    v64 = *(int *)(v32 + 20);
    v65 = (char *)v30 + v64;
    v66 = (char *)v31 + v64;
    v67 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  v68 = v3[7];
  v69 = (_QWORD *)((char *)a1 + v68);
  v70 = (_QWORD *)((char *)v4 + v68);
  v71 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
  {
    v73 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v73))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
LABEL_76:
      v86 = *(int *)(v71 + 20);
      v87 = (char *)v69 + v86;
      v88 = (char *)v70 + v86;
      v89 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
      goto LABEL_77;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v79 = v70[1];
      *v69 = *v70;
      v69[1] = v79;
      v80 = v70[3];
      v69[2] = v70[2];
      v69[3] = v80;
      v78 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v85 = v70[1];
        *v69 = *v70;
        v69[1] = v85;
        swift_bridgeObjectRetain();
        goto LABEL_75;
      }
      v76 = v70[1];
      *v69 = *v70;
      v69[1] = v76;
      v77 = v70[3];
      v69[2] = v70[2];
      v69[3] = v77;
      v78 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v81 = *(int *)(v78 + 24);
    v97 = (char *)v70 + v81;
    v99 = (char *)v69 + v81;
    v102 = v4;
    v82 = v3;
    v83 = sub_2490E7ABC();
    v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v84 = v83;
    v3 = v82;
    v4 = v102;
    v96(v99, v97, v84);
LABEL_75:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v73);
    goto LABEL_76;
  }
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
LABEL_77:
  v90 = v3[8];
  v91 = (char *)a1 + v90;
  v92 = (char *)v4 + v90;
  v93 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoComparisonPredicate(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  int v123;
  int EnumCaseMultiPayload;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  void (*v197)(char *, char *, uint64_t);
  void (*v198)(char *, char *, uint64_t);
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  int *v208;
  int *v209;
  int *v210;
  int *v211;
  int *v212;
  _QWORD *v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)v5 + v6);
  v8 = (_QWORD *)((char *)v4 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
      goto LABEL_7;
    }
    v208 = a3;
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = *(int *)(v9 + 24);
    v21 = (_QWORD *)((char *)v7 + v20);
    v22 = (_QWORD *)((char *)v8 + v20);
    v23 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
    if (v24)
    {
      if (!v25)
      {
        v26 = *v22;
        if ((~*v22 & 0xF000000000000007) != 0)
          swift_retain();
        *v21 = v26;
        v27 = *(int *)(v23 + 20);
        v28 = (char *)v21 + v27;
        v29 = (char *)v22 + v27;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    if (v25)
    {
      sub_248E25C30((uint64_t)v21, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_19:
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
LABEL_20:
      v41 = *(int *)(v9 + 28);
      v42 = (char *)v7 + v41;
      v43 = (char *)v8 + v41;
      v44 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
      a3 = v208;
      goto LABEL_21;
    }
    v60 = *v22;
    v61 = *v22 & 0xF000000000000007;
    if ((~*v21 & 0xF000000000000007) != 0)
    {
      if (v61 != 0xF000000000000007)
      {
        *v21 = v60;
        swift_retain();
        swift_release();
        goto LABEL_92;
      }
      sub_248E42024((uint64_t)v21);
      v60 = *v22;
    }
    else if (v61 != 0xF000000000000007)
    {
      *v21 = v60;
      swift_retain();
LABEL_92:
      v73 = *(int *)(v23 + 20);
      v74 = (char *)v21 + v73;
      v75 = (char *)v22 + v73;
      v76 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 24))(v74, v75, v76);
      goto LABEL_20;
    }
    *v21 = v60;
    goto LABEL_92;
  }
  if (v11)
  {
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_21;
  }
  v213 = v5;
  v12 = v4;
  v13 = a3;
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v14 = *(int *)(v9 + 24);
  v15 = (_QWORD *)((char *)v7 + v14);
  v16 = (_QWORD *)((char *)v8 + v14);
  v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v31 = *v16;
    if ((~*v16 & 0xF000000000000007) != 0)
      swift_retain();
    *v15 = v31;
    v32 = *(int *)(v17 + 20);
    v33 = (char *)v15 + v32;
    v34 = (char *)v16 + v32;
    v35 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  v36 = *(int *)(v9 + 28);
  v37 = (char *)v7 + v36;
  v38 = (char *)v8 + v36;
  v39 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  a3 = v13;
  v4 = v12;
  v5 = v213;
LABEL_21:
  v45 = a3[6];
  v46 = (_QWORD *)((char *)v5 + v45);
  v47 = (_QWORD *)((char *)v4 + v45);
  v48 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
  if (!v49)
  {
    if (v50)
    {
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
      goto LABEL_27;
    }
    v54 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    v55 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v54);
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v54);
    if (v55)
    {
      if (!v56)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 1u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 2u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 3u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 4u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 5u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 6u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 7u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 8u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 9u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 0xAu:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_126;
          case 0xBu:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
LABEL_126:
            *v46 = v57;
            v77 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
            v78 = (char *)v46 + v77;
            v79 = (char *)v47 + v77;
            v80 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
            swift_storeEnumTagMultiPayload();
            break;
          case 0xCu:
            v81 = type metadata accessor for ToolKitProtoTypedValue(0);
            v210 = a3;
            if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v81))
            {
              v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
              memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
            }
            else
            {
              v155 = v81;
              v156 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              *v46 = v156;
              v157 = v155;
              v158 = *(int *)(v155 + 20);
              v159 = (char *)v46 + v158;
              v160 = (char *)v47 + v158;
              v161 = sub_2490E7ABC();
              v162 = v159;
              v81 = v157;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v162, v160, v161);
              __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v157);
            }
            v163 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
            v164 = *(int *)(v163 + 20);
            v165 = (_QWORD *)((char *)v46 + v164);
            v166 = (uint64_t *)((char *)v47 + v164);
            if (__swift_getEnumTagSinglePayload((uint64_t)v47 + v164, 1, v81))
            {
              v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
              memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
            }
            else
            {
              v217 = v81;
              v168 = *v166;
              if ((~*v166 & 0xF000000000000007) != 0)
                swift_retain();
              *v165 = v168;
              v169 = *(int *)(v217 + 20);
              v206 = (char *)v165 + v169;
              v170 = (char *)v166 + v169;
              v171 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v206, v170, v171);
              __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, v217);
            }
            v172 = *(int *)(v163 + 24);
            v173 = (char *)v46 + v172;
            v174 = (char *)v47 + v172;
            v175 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v173, v174, v175);
            swift_storeEnumTagMultiPayload();
            a3 = v210;
            break;
          default:
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v54);
LABEL_173:
        v108 = *(int *)(v48 + 20);
        v109 = (char *)v46 + v108;
        v110 = (char *)v47 + v108;
        v111 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 24))(v109, v110, v111);
        goto LABEL_174;
      }
    }
    else
    {
      if (!v56)
      {
        if (v5 != v4)
        {
          sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 1u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 2u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 3u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 4u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 5u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 6u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 7u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 8u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 9u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 0xAu:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              goto LABEL_172;
            case 0xBu:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
LABEL_172:
              *v46 = v62;
              v104 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
              v105 = (char *)v46 + v104;
              v106 = (char *)v47 + v104;
              v107 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
              swift_storeEnumTagMultiPayload();
              break;
            case 0xCu:
              v153 = type metadata accessor for ToolKitProtoTypedValue(0);
              v212 = a3;
              if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v153))
              {
                v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
                memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
              }
              else
              {
                v176 = v153;
                v177 = *v47;
                if ((~*v47 & 0xF000000000000007) != 0)
                  swift_retain();
                *v46 = v177;
                v178 = v176;
                v179 = *(int *)(v176 + 20);
                v180 = (char *)v46 + v179;
                v181 = (char *)v47 + v179;
                v182 = sub_2490E7ABC();
                v183 = v180;
                v153 = v178;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v183, v181, v182);
                __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v178);
              }
              v184 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
              v185 = *(int *)(v184 + 20);
              v186 = (_QWORD *)((char *)v46 + v185);
              v187 = (uint64_t *)((char *)v47 + v185);
              if (__swift_getEnumTagSinglePayload((uint64_t)v47 + v185, 1, v153))
              {
                v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
                memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
              }
              else
              {
                v218 = v153;
                v189 = *v187;
                if ((~*v187 & 0xF000000000000007) != 0)
                  swift_retain();
                *v186 = v189;
                v190 = *(int *)(v218 + 20);
                v207 = (char *)v186 + v190;
                v191 = (char *)v187 + v190;
                v192 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v207, v191, v192);
                __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, v218);
              }
              v193 = *(int *)(v184 + 24);
              v194 = (char *)v46 + v193;
              v195 = (char *)v47 + v193;
              v196 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v194, v195, v196);
              swift_storeEnumTagMultiPayload();
              a3 = v212;
              break;
            default:
              v59 = *(_QWORD *)(v54 - 8);
              goto LABEL_41;
          }
        }
        goto LABEL_173;
      }
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    }
    v59 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88) - 8);
LABEL_41:
    memcpy(v46, v47, *(_QWORD *)(v59 + 64));
    goto LABEL_173;
  }
  if (v50)
  {
LABEL_27:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B80);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_174;
  }
  v51 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v51))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 1u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 2u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 3u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 4u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 5u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 6u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 7u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 8u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 9u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 0xAu:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_86;
      case 0xBu:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_86:
        *v46 = v58;
        v63 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v64 = (char *)v46 + v63;
        v65 = (char *)v47 + v63;
        v66 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v71 = type metadata accessor for ToolKitProtoTypedValue(0);
        v209 = a3;
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v71))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          v83 = v71;
          v84 = *v47;
          if ((~*v47 & 0xF000000000000007) != 0)
            swift_retain();
          *v46 = v84;
          v85 = v83;
          v86 = *(int *)(v83 + 20);
          v87 = (char *)v46 + v86;
          v88 = (char *)v47 + v86;
          v89 = sub_2490E7ABC();
          v90 = v87;
          v71 = v85;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v90, v88, v89);
          __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v85);
        }
        v91 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v92 = *(int *)(v91 + 20);
        v93 = (_QWORD *)((char *)v46 + v92);
        v94 = (uint64_t *)((char *)v47 + v92);
        if (__swift_getEnumTagSinglePayload((uint64_t)v47 + v92, 1, v71))
        {
          v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          v214 = v71;
          v96 = *v94;
          if ((~*v94 & 0xF000000000000007) != 0)
            swift_retain();
          *v93 = v96;
          v97 = *(int *)(v214 + 20);
          v201 = (char *)v93 + v97;
          v98 = (char *)v94 + v97;
          v99 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v201, v98, v99);
          __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v214);
        }
        v100 = *(int *)(v91 + 24);
        v101 = (char *)v46 + v100;
        v102 = (char *)v47 + v100;
        v103 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
        swift_storeEnumTagMultiPayload();
        a3 = v209;
        break;
      default:
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v51);
  }
  v67 = *(int *)(v48 + 20);
  v68 = (char *)v46 + v67;
  v69 = (char *)v47 + v67;
  v70 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
LABEL_174:
  v112 = a3[7];
  v113 = (_QWORD *)((char *)v5 + v112);
  v114 = (_QWORD *)((char *)v4 + v112);
  v115 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v116 = __swift_getEnumTagSinglePayload((uint64_t)v113, 1, v115);
  v117 = __swift_getEnumTagSinglePayload((uint64_t)v114, 1, v115);
  if (!v116)
  {
    if (v117)
    {
      sub_248E25C30((uint64_t)v113, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
      goto LABEL_180;
    }
    v121 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    v122 = __swift_getEnumTagSinglePayload((uint64_t)v113, 1, v121);
    v123 = __swift_getEnumTagSinglePayload((uint64_t)v114, 1, v121);
    if (v122)
    {
      if (!v123)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *v113 = *v114;
          v113[1] = v114[1];
          v113[2] = v114[2];
          v113[3] = v114[3];
          v125 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            *v113 = *v114;
            v113[1] = v114[1];
            swift_bridgeObjectRetain();
            goto LABEL_204;
          }
          *v113 = *v114;
          v113[1] = v114[1];
          v113[2] = v114[2];
          v113[3] = v114[3];
          v125 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
        }
        v139 = *(int *)(v125 + 24);
        v200 = (char *)v114 + v139;
        v204 = (char *)v113 + v139;
        v140 = sub_2490E7ABC();
        v198 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v198(v204, v200, v140);
LABEL_204:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v121);
        goto LABEL_208;
      }
    }
    else
    {
      if (!v123)
      {
        if (v5 != v4)
        {
          v211 = a3;
          sub_248E25C30((uint64_t)v113, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
          v135 = swift_getEnumCaseMultiPayload();
          if (v135 == 2)
          {
            *v113 = *v114;
            v113[1] = v114[1];
            v113[2] = v114[2];
            v113[3] = v114[3];
            v141 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                          + 24);
            v216 = (char *)v113 + v141;
            v205 = (char *)v114 + v141;
            v142 = sub_2490E7ABC();
            v143 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v143(v216, v205, v142);
          }
          else
          {
            *v113 = *v114;
            v113[1] = v114[1];
            if (v135 == 1)
            {
              v113[2] = v114[2];
              v113[3] = v114[3];
              v136 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                            + 24);
              v215 = (char *)v113 + v136;
              v203 = (char *)v114 + v136;
              v137 = sub_2490E7ABC();
              v138 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v138(v215, v203, v137);
            }
            else
            {
              swift_bridgeObjectRetain();
            }
          }
          swift_storeEnumTagMultiPayload();
          a3 = v211;
        }
        goto LABEL_208;
      }
      sub_248E25C30((uint64_t)v113, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    }
    v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
LABEL_208:
    v144 = *(int *)(v115 + 20);
    v145 = (char *)v113 + v144;
    v146 = (char *)v114 + v144;
    v147 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 24))(v145, v146, v147);
    goto LABEL_209;
  }
  if (!v117)
  {
    v118 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v118))
    {
      v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
LABEL_196:
      v131 = *(int *)(v115 + 20);
      v132 = (char *)v113 + v131;
      v133 = (char *)v114 + v131;
      v134 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
      __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v115);
      goto LABEL_209;
    }
    v126 = swift_getEnumCaseMultiPayload();
    if (v126 == 2)
    {
      *v113 = *v114;
      v113[1] = v114[1];
      v113[2] = v114[2];
      v113[3] = v114[3];
      v127 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (v126 != 1)
      {
        *v113 = *v114;
        v113[1] = v114[1];
        swift_bridgeObjectRetain();
        goto LABEL_195;
      }
      *v113 = *v114;
      v113[1] = v114[1];
      v113[2] = v114[2];
      v113[3] = v114[3];
      v127 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v129 = *(int *)(v127 + 24);
    v199 = (char *)v114 + v129;
    v202 = (char *)v113 + v129;
    v130 = sub_2490E7ABC();
    v197 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v197(v202, v199, v130);
LABEL_195:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v118);
    goto LABEL_196;
  }
LABEL_180:
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
LABEL_209:
  v148 = a3[8];
  v149 = (char *)v5 + v148;
  v150 = (char *)v4 + v148;
  v151 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 24))(v149, v150, v151);
  return v5;
}

_OWORD *initializeWithTake for ToolKitProtoComparisonPredicate(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int EnumCaseMultiPayload;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v85;
  uint64_t v86;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = *(int *)(v9 + 24);
    v13 = (_QWORD *)((char *)v7 + v12);
    v14 = (_QWORD *)((char *)v8 + v12);
    v15 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v17 = *(int *)(v15 + 20);
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    v21 = *(int *)(v9 + 28);
    v22 = (char *)v7 + v21;
    v23 = (char *)v8 + v21;
    v24 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v25 = a3[6];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B80);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v30))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
          *v26 = *v27;
          v32 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v33 = (char *)v26 + v32;
          v34 = (char *)v27 + v32;
          v35 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
          goto LABEL_21;
        case 0xCu:
          v36 = type metadata accessor for ToolKitProtoTypedValue(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v36))
          {
            v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            *v26 = *v27;
            v38 = *(int *)(v36 + 20);
            v39 = (char *)v26 + v38;
            v40 = (char *)v27 + v38;
            v41 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
            __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v36);
          }
          v42 = v36;
          v86 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v43 = *(int *)(v86 + 20);
          v44 = (_QWORD *)((char *)v26 + v43);
          v45 = (_QWORD *)((char *)v27 + v43);
          if (__swift_getEnumTagSinglePayload((uint64_t)v27 + v43, 1, v42))
          {
            v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          }
          else
          {
            *v44 = *v45;
            v47 = *(int *)(v42 + 20);
            v85 = (char *)v44 + v47;
            v48 = (char *)v45 + v47;
            v49 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v85, v48, v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v42);
          }
          v50 = *(int *)(v86 + 24);
          v51 = (char *)v26 + v50;
          v52 = (char *)v27 + v50;
          v53 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
LABEL_21:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v30);
    }
    v54 = *(int *)(v28 + 20);
    v55 = (char *)v26 + v54;
    v56 = (char *)v27 + v54;
    v57 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
  }
  v58 = a3[7];
  v59 = (_OWORD *)((char *)a1 + v58);
  v60 = (_OWORD *)((char *)a2 + v58);
  v61 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
  {
    v63 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v63))
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
LABEL_35:
      v76 = *(int *)(v61 + 20);
      v77 = (char *)v59 + v76;
      v78 = (char *)v60 + v76;
      v79 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
      goto LABEL_36;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v71 = v60[1];
      *v59 = *v60;
      v59[1] = v71;
      v72 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v73 = (char *)v59 + v72;
      v74 = (char *)v60 + v72;
      v75 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        goto LABEL_34;
      }
      v66 = v60[1];
      *v59 = *v60;
      v59[1] = v66;
      v67 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                   + 24);
      v68 = (char *)v59 + v67;
      v69 = (char *)v60 + v67;
      v70 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
    }
    swift_storeEnumTagMultiPayload();
LABEL_34:
    __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v63);
    goto LABEL_35;
  }
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
LABEL_36:
  v80 = a3[8];
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoComparisonPredicate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD *v135;
  _OWORD *v136;
  uint64_t v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  int v145;
  int EnumCaseMultiPayload;
  __int128 v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  int v152;
  __int128 v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  int v168;
  __int128 v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  __int128 v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
      goto LABEL_7;
    }
    v20 = v9[1];
    *v8 = *v9;
    v8[1] = v20;
    swift_bridgeObjectRelease();
    v21 = v9[3];
    v8[2] = v9[2];
    v8[3] = v21;
    swift_bridgeObjectRelease();
    v22 = *(int *)(v10 + 24);
    v23 = (_QWORD *)((char *)v8 + v22);
    v24 = (_QWORD *)((char *)v9 + v22);
    v25 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
    v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
    if (v26)
    {
      if (!v27)
      {
        *v23 = *v24;
        v28 = *(int *)(v25 + 20);
        v29 = (char *)v23 + v28;
        v30 = (char *)v24 + v28;
        v31 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
LABEL_16:
        v41 = *(int *)(v10 + 28);
        v42 = (char *)v8 + v41;
        v43 = (char *)v9 + v41;
        v44 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v27)
      {
        v66 = *v24;
        if ((~*v23 & 0xF000000000000007) != 0)
        {
          if ((~v66 & 0xF000000000000007) != 0)
          {
            *v23 = v66;
            swift_release();
          }
          else
          {
            sub_248E42024((uint64_t)v23);
            *v23 = *v24;
          }
        }
        else
        {
          *v23 = v66;
        }
        v73 = *(int *)(v25 + 20);
        v74 = (char *)v23 + v73;
        v75 = (char *)v24 + v73;
        v76 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 40))(v74, v75, v76);
        goto LABEL_16;
      }
      sub_248E25C30((uint64_t)v23, type metadata accessor for ToolKitProtoTypeInstance);
    }
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_16;
  }
  if (v12)
  {
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  v13 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v13;
  v14 = *(int *)(v10 + 24);
  v15 = (_QWORD *)((char *)v8 + v14);
  v16 = (_QWORD *)((char *)v9 + v14);
  v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v32 = *(int *)(v17 + 20);
    v33 = (char *)v15 + v32;
    v34 = (char *)v16 + v32;
    v35 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  v36 = *(int *)(v10 + 28);
  v37 = (char *)v8 + v36;
  v38 = (char *)v9 + v36;
  v39 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_17:
  v45 = a3[6];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
  if (!v49)
  {
    if (v50)
    {
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
      goto LABEL_23;
    }
    v54 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    v55 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v54);
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v54);
    if (v55)
    {
      if (!v56)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
          case 8u:
          case 9u:
          case 0xAu:
          case 0xBu:
            *v46 = *v47;
            v57 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
            v58 = (char *)v46 + v57;
            v59 = (char *)v47 + v57;
            v60 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
            goto LABEL_65;
          case 0xCu:
            v77 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v77))
            {
              v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
              memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
            }
            else
            {
              *v46 = *v47;
              v100 = *(int *)(v77 + 20);
              v101 = (char *)v46 + v100;
              v102 = (char *)v47 + v100;
              v103 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
              __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v77);
            }
            v197 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
            v104 = *(int *)(v197 + 20);
            v105 = (_QWORD *)((char *)v46 + v104);
            v106 = (_QWORD *)((char *)v47 + v104);
            if (__swift_getEnumTagSinglePayload((uint64_t)v47 + v104, 1, v77))
            {
              v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
              memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
            }
            else
            {
              *v105 = *v106;
              v108 = *(int *)(v77 + 20);
              v194 = (char *)v105 + v108;
              v109 = (char *)v106 + v108;
              v110 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v194, v109, v110);
              __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v77);
            }
            v111 = *(int *)(v197 + 24);
            v112 = (char *)v46 + v111;
            v113 = (char *)v47 + v111;
            v114 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v112, v113, v114);
LABEL_65:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v54);
LABEL_73:
        v130 = *(int *)(v48 + 20);
        v131 = (char *)v46 + v130;
        v132 = (char *)v47 + v130;
        v133 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 40))(v131, v132, v133);
        goto LABEL_74;
      }
    }
    else
    {
      if (!v56)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
              *v46 = *v47;
              v67 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
              v68 = (char *)v46 + v67;
              v69 = (char *)v47 + v67;
              v70 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
              break;
            case 0xCu:
              v98 = type metadata accessor for ToolKitProtoTypedValue(0);
              if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v98))
              {
                v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
                memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
              }
              else
              {
                *v46 = *v47;
                v115 = *(int *)(v98 + 20);
                v116 = (char *)v46 + v115;
                v117 = (char *)v47 + v115;
                v118 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
                __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v98);
              }
              v198 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
              v119 = *(int *)(v198 + 20);
              v120 = (_QWORD *)((char *)v46 + v119);
              v121 = (_QWORD *)((char *)v47 + v119);
              if (__swift_getEnumTagSinglePayload((uint64_t)v47 + v119, 1, v98))
              {
                v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
                memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
              }
              else
              {
                *v120 = *v121;
                v123 = *(int *)(v98 + 20);
                v195 = (char *)v120 + v123;
                v124 = (char *)v121 + v123;
                v125 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v195, v124, v125);
                __swift_storeEnumTagSinglePayload((uint64_t)v120, 0, 1, v98);
              }
              v126 = *(int *)(v198 + 24);
              v127 = (char *)v46 + v126;
              v128 = (char *)v47 + v126;
              v129 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
              break;
            default:
              v65 = *(_QWORD *)(v54 - 8);
              goto LABEL_33;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_73;
      }
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    }
    v65 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88) - 8);
LABEL_33:
    memcpy(v46, v47, *(_QWORD *)(v65 + 64));
    goto LABEL_73;
  }
  if (v50)
  {
LABEL_23:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B80);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_74;
  }
  v51 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v51))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
        *v46 = *v47;
        v61 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v62 = (char *)v46 + v61;
        v63 = (char *)v47 + v61;
        v64 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
        goto LABEL_54;
      case 0xCu:
        v71 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v71))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          *v46 = *v47;
          v79 = *(int *)(v71 + 20);
          v80 = (char *)v46 + v79;
          v81 = (char *)v47 + v79;
          v82 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
          __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v71);
        }
        v196 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v83 = *(int *)(v196 + 20);
        v84 = (_QWORD *)((char *)v46 + v83);
        v85 = (_QWORD *)((char *)v47 + v83);
        if (__swift_getEnumTagSinglePayload((uint64_t)v47 + v83, 1, v71))
        {
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          *v84 = *v85;
          v87 = *(int *)(v71 + 20);
          v193 = (char *)v84 + v87;
          v88 = (char *)v85 + v87;
          v89 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v193, v88, v89);
          __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v71);
        }
        v90 = *(int *)(v196 + 24);
        v91 = (char *)v46 + v90;
        v92 = (char *)v47 + v90;
        v93 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
LABEL_54:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v51);
  }
  v94 = *(int *)(v48 + 20);
  v95 = (char *)v46 + v94;
  v96 = (char *)v47 + v94;
  v97 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
LABEL_74:
  v134 = a3[7];
  v135 = (_OWORD *)((char *)a1 + v134);
  v136 = (_OWORD *)((char *)a2 + v134);
  v137 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v138 = __swift_getEnumTagSinglePayload((uint64_t)v135, 1, v137);
  v139 = __swift_getEnumTagSinglePayload((uint64_t)v136, 1, v137);
  if (!v138)
  {
    if (v139)
    {
      sub_248E25C30((uint64_t)v135, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
      goto LABEL_80;
    }
    v143 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    v144 = __swift_getEnumTagSinglePayload((uint64_t)v135, 1, v143);
    v145 = __swift_getEnumTagSinglePayload((uint64_t)v136, 1, v143);
    if (v144)
    {
      if (!v145)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v174 = v136[1];
          *v135 = *v136;
          v135[1] = v174;
          v175 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                        + 24);
          v176 = (char *)v135 + v175;
          v177 = (char *)v136 + v175;
          v178 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
            goto LABEL_105;
          }
          v147 = v136[1];
          *v135 = *v136;
          v135[1] = v147;
          v148 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                        + 24);
          v149 = (char *)v135 + v148;
          v150 = (char *)v136 + v148;
          v151 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
        }
        swift_storeEnumTagMultiPayload();
LABEL_105:
        __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v143);
        goto LABEL_106;
      }
    }
    else
    {
      if (!v145)
      {
        if (a1 == a2)
          goto LABEL_106;
        sub_248E25C30((uint64_t)v135, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
        v168 = swift_getEnumCaseMultiPayload();
        if (v168 == 2)
        {
          v188 = v136[1];
          *v135 = *v136;
          v135[1] = v188;
          v189 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                        + 24);
          v190 = (char *)v135 + v189;
          v191 = (char *)v136 + v189;
          v192 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v190, v191, v192);
        }
        else
        {
          if (v168 != 1)
          {
            v158 = *(_QWORD *)(v143 - 8);
            goto LABEL_92;
          }
          v169 = v136[1];
          *v135 = *v136;
          v135[1] = v169;
          v170 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                        + 24);
          v171 = (char *)v135 + v170;
          v172 = (char *)v136 + v170;
          v173 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v171, v172, v173);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_106;
      }
      sub_248E25C30((uint64_t)v135, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    }
    v158 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475C80) - 8);
LABEL_92:
    memcpy(v135, v136, *(_QWORD *)(v158 + 64));
LABEL_106:
    v179 = *(int *)(v137 + 20);
    v180 = (char *)v135 + v179;
    v181 = (char *)v136 + v179;
    v182 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 40))(v180, v181, v182);
    goto LABEL_107;
  }
  if (!v139)
  {
    v140 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v136, 1, v140))
    {
      v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
LABEL_97:
      v164 = *(int *)(v137 + 20);
      v165 = (char *)v135 + v164;
      v166 = (char *)v136 + v164;
      v167 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(v165, v166, v167);
      __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v137);
      goto LABEL_107;
    }
    v152 = swift_getEnumCaseMultiPayload();
    if (v152 == 2)
    {
      v159 = v136[1];
      *v135 = *v136;
      v135[1] = v159;
      v160 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                    + 24);
      v161 = (char *)v135 + v160;
      v162 = (char *)v136 + v160;
      v163 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v161, v162, v163);
    }
    else
    {
      if (v152 != 1)
      {
        memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        goto LABEL_96;
      }
      v153 = v136[1];
      *v135 = *v136;
      v135[1] = v153;
      v154 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                    + 24);
      v155 = (char *)v135 + v154;
      v156 = (char *)v136 + v154;
      v157 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
    }
    swift_storeEnumTagMultiPayload();
LABEL_96:
    __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v140);
    goto LABEL_97;
  }
LABEL_80:
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
LABEL_107:
  v183 = a3[8];
  v184 = (char *)a1 + v183;
  v185 = (char *)a2 + v183;
  v186 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 40))(v184, v185, v186);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoComparisonPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EB71BC()
{
  __swift_get_extra_inhabitant_index_109Tm();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoComparisonPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EB71D4()
{
  __swift_store_extra_inhabitant_index_110Tm();
}

void sub_248EB71E0(uint64_t a1)
{
  sub_248EC60D4(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoComparisonPredicate.Comparison(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 1u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 2u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 3u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 4u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 5u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 6u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 7u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 8u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 9u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 0xAu:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_42;
        case 0xBu:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
LABEL_42:
          *a1 = v10;
          v11 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
          goto LABEL_54;
        case 0xCu:
          v15 = type metadata accessor for ToolKitProtoTypedValue(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v15))
          {
            v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          }
          else
          {
            v17 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0)
              swift_retain();
            *a1 = v17;
            v18 = *(int *)(v15 + 20);
            v19 = (char *)a1 + v18;
            v20 = (char *)a2 + v18;
            v21 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v15);
          }
          v22 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v23 = *(int *)(v22 + 20);
          v24 = (uint64_t *)((char *)a1 + v23);
          v25 = (uint64_t *)((char *)a2 + v23);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v23, 1, v15))
          {
            v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
          }
          else
          {
            v27 = *v25;
            if ((~*v25 & 0xF000000000000007) != 0)
              swift_retain();
            *v24 = v27;
            v28 = *(int *)(v15 + 20);
            v29 = (char *)v24 + v28;
            v30 = (char *)v25 + v28;
            v31 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
            __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v15);
          }
          v32 = *(int *)(v22 + 24);
          v33 = (char *)a1 + v32;
          v34 = (char *)a2 + v32;
          v35 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
LABEL_54:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v36 = *(int *)(a3 + 20);
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoComparisonPredicate.Comparison(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v4 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
        if ((~*a1 & 0xF000000000000007) != 0)
          swift_release();
        v5 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        goto LABEL_6;
      case 0xCu:
        v11 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v11))
        {
          if ((~*a1 & 0xF000000000000007) != 0)
            swift_release();
          v12 = (char *)a1 + *(int *)(v11 + 20);
          v13 = sub_2490E7ABC();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v14 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v15 = (_QWORD *)((char *)a1 + *(int *)(v14 + 20));
        if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v11))
        {
          if ((~*v15 & 0xF000000000000007) != 0)
            swift_release();
          v16 = (char *)v15 + *(int *)(v11 + 20);
          v17 = sub_2490E7ABC();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        }
        v5 = *(int *)(v14 + 24);
LABEL_6:
        v6 = (char *)a1 + v5;
        v7 = sub_2490E7ABC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      default:
        break;
    }
  }
  v8 = (char *)a1 + *(int *)(a2 + 20);
  v9 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for ToolKitProtoComparisonPredicate.Comparison(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 1u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 2u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 3u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 4u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 5u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 6u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 7u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 8u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 9u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 0xAu:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 0xBu:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_40:
        *a1 = v8;
        v9 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        goto LABEL_52;
      case 0xCu:
        v13 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v13))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v15 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          *a1 = v15;
          v16 = *(int *)(v13 + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v13);
        }
        v20 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v21 = *(int *)(v20 + 20);
        v22 = (_QWORD *)((char *)a1 + v21);
        v23 = (uint64_t *)((char *)a2 + v21);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v21, 1, v13))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v25 = *v23;
          if ((~*v23 & 0xF000000000000007) != 0)
            swift_retain();
          *v22 = v25;
          v26 = *(int *)(v13 + 20);
          v27 = (char *)v22 + v26;
          v28 = (char *)v23 + v26;
          v29 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v13);
        }
        v30 = *(int *)(v20 + 24);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
LABEL_52:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v34 = *(int *)(a3 + 20);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

uint64_t *assignWithCopy for ToolKitProtoComparisonPredicate.Comparison(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 1u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 2u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 3u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 4u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 5u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 6u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 7u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 8u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 9u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 0xAu:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_49;
        case 0xBu:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
LABEL_49:
          *a1 = v9;
          v12 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v15 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
          goto LABEL_97;
        case 0xCu:
          v16 = type metadata accessor for ToolKitProtoTypedValue(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v16))
          {
            v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          }
          else
          {
            v24 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0)
              swift_retain();
            *a1 = v24;
            v25 = *(int *)(v16 + 20);
            v26 = (char *)a1 + v25;
            v27 = (char *)a2 + v25;
            v28 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v16);
          }
          v29 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v30 = *(int *)(v29 + 20);
          v31 = (uint64_t *)((char *)a1 + v30);
          v32 = (uint64_t *)((char *)a2 + v30);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v30, 1, v16))
          {
            v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            v34 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            *v31 = v34;
            v35 = *(int *)(v16 + 20);
            v36 = (char *)v31 + v35;
            v37 = (char *)v32 + v35;
            v38 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
            __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v16);
          }
          v39 = *(int *)(v29 + 24);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
LABEL_97:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_109;
    }
    goto LABEL_9;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
LABEL_9:
    v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88) - 8);
LABEL_10:
    memcpy(a1, a2, *(_QWORD *)(v10 + 64));
    goto LABEL_109;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 1u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 2u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 3u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 4u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 5u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 6u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 7u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 8u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 9u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 0xAu:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_85;
      case 0xBu:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_85:
        *a1 = v11;
        v18 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      case 0xCu:
        v22 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v43 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          *a1 = v43;
          v44 = *(int *)(v22 + 20);
          v45 = (char *)a1 + v44;
          v46 = (char *)a2 + v44;
          v47 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v22);
        }
        v48 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v49 = *(int *)(v48 + 20);
        v50 = (uint64_t *)((char *)a1 + v49);
        v51 = (uint64_t *)((char *)a2 + v49);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v49, 1, v22))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          v53 = *v51;
          if ((~*v51 & 0xF000000000000007) != 0)
            swift_retain();
          *v50 = v53;
          v54 = *(int *)(v22 + 20);
          v55 = (char *)v50 + v54;
          v56 = (char *)v51 + v54;
          v57 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v22);
        }
        v58 = *(int *)(v48 + 24);
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        v61 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
        break;
      default:
        v10 = *(_QWORD *)(v6 - 8);
        goto LABEL_10;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_109:
  v62 = *(int *)(a3 + 20);
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoComparisonPredicate.Comparison(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        goto LABEL_13;
      case 0xCu:
        v12 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v12))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v14 = *(int *)(v12 + 20);
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          v17 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v12);
        }
        v18 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v19 = *(int *)(v18 + 20);
        v20 = (_QWORD *)((char *)a1 + v19);
        v21 = (_QWORD *)((char *)a2 + v19);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v19, 1, v12))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          *v20 = *v21;
          v23 = *(int *)(v12 + 20);
          v24 = (char *)v20 + v23;
          v25 = (char *)v21 + v23;
          v26 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v12);
        }
        v27 = *(int *)(v18 + 24);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v31 = *(int *)(a3 + 20);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoComparisonPredicate.Comparison(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
          *a1 = *a2;
          v9 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v10 = (char *)a1 + v9;
          v11 = (char *)a2 + v9;
          v12 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
          goto LABEL_23;
        case 0xCu:
          v18 = type metadata accessor for ToolKitProtoTypedValue(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v18))
          {
            v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v22 = *(int *)(v18 + 20);
            v23 = (char *)a1 + v22;
            v24 = (char *)a2 + v22;
            v25 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v18);
          }
          v26 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v27 = *(int *)(v26 + 20);
          v28 = (_QWORD *)((char *)a1 + v27);
          v29 = (_QWORD *)((char *)a2 + v27);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v27, 1, v18))
          {
            v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            *v28 = *v29;
            v31 = *(int *)(v18 + 20);
            v32 = (char *)v28 + v31;
            v33 = (char *)v29 + v31;
            v34 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
            __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v18);
          }
          v35 = *(int *)(v26 + 24);
          v36 = (char *)a1 + v35;
          v37 = (char *)a2 + v35;
          v38 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
LABEL_7:
    v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v13 + 64));
    goto LABEL_31;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      case 0xCu:
        v20 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v20))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v39 = *(int *)(v20 + 20);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v20);
        }
        v43 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v44 = *(int *)(v43 + 20);
        v45 = (_QWORD *)((char *)a1 + v44);
        v46 = (_QWORD *)((char *)a2 + v44);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v44, 1, v20))
        {
          v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          *v45 = *v46;
          v48 = *(int *)(v20 + 20);
          v49 = (char *)v45 + v48;
          v50 = (char *)v46 + v48;
          v51 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
          __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v20);
        }
        v52 = *(int *)(v43 + 24);
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        break;
      default:
        v13 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_31:
  v56 = *(int *)(a3 + 20);
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Comparison()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EBA12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_2577E5B88);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Comparison()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EBA144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_2577E5B88);
}

void sub_248EBA150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475828, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoComparisonPredicate.Comparison.Pair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoTypedValue(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v10;
      v11 = *(int *)(v7 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v15 = *(int *)(a3 + 20);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v15, 1, v7))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = *v17;
      if ((~*v17 & 0xF000000000000007) != 0)
        swift_retain();
      *v16 = v19;
      v20 = *(int *)(v7 + 20);
      v21 = (char *)v16 + v20;
      v22 = (char *)v17 + v20;
      v23 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v7);
    }
    v24 = *(int *)(a3 + 24);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoComparisonPredicate.Comparison.Pair(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  if (!__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4))
  {
    if ((~*v7 & 0xF000000000000007) != 0)
      swift_release();
    v8 = (char *)v7 + *(int *)(v4 + 20);
    v9 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = (char *)a1 + *(int *)(a2 + 24);
  v11 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_QWORD *initializeWithCopy for ToolKitProtoComparisonPredicate.Comparison.Pair(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v8;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v13, 1, v6))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = *v15;
    if ((~*v15 & 0xF000000000000007) != 0)
      swift_retain();
    *v14 = v17;
    v18 = *(int *)(v6 + 20);
    v19 = (char *)v14 + v18;
    v20 = (char *)v15 + v18;
    v21 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoComparisonPredicate.Comparison.Pair(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_8;
    }
    v31 = *a2;
    v32 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v32 != 0xF000000000000007)
      {
        *a1 = v31;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_248E4DD3C((uint64_t)a1);
      v31 = *a2;
    }
    else if (v32 != 0xF000000000000007)
    {
      *a1 = v31;
      swift_retain();
LABEL_31:
      v35 = *(int *)(v6 + 20);
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      v38 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
      goto LABEL_9;
    }
    *a1 = v31;
    goto LABEL_31;
  }
  if (v8)
  {
LABEL_8:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  v9 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v9;
  v10 = *(int *)(v6 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_9:
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v15, 1, v6);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (v19)
    {
      sub_248E25C30((uint64_t)v16, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_16;
    }
    v33 = *v17;
    v34 = *v17 & 0xF000000000000007;
    if ((~*v16 & 0xF000000000000007) != 0)
    {
      if (v34 != 0xF000000000000007)
      {
        *v16 = v33;
        swift_retain();
        swift_release();
        goto LABEL_33;
      }
      sub_248E4DD3C((uint64_t)v16);
      v33 = *v17;
    }
    else if (v34 != 0xF000000000000007)
    {
      *v16 = v33;
      swift_retain();
LABEL_33:
      v39 = *(int *)(v6 + 20);
      v40 = (char *)v16 + v39;
      v41 = (char *)v17 + v39;
      v42 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
      goto LABEL_17;
    }
    *v16 = v33;
    goto LABEL_33;
  }
  if (v19)
  {
LABEL_16:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_17;
  }
  v20 = *v17;
  if ((~*v17 & 0xF000000000000007) != 0)
    swift_retain();
  *v16 = v20;
  v21 = *(int *)(v6 + 20);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v6);
LABEL_17:
  v26 = *(int *)(a3 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoComparisonPredicate.Comparison.Pair(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v12, 1, v6))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v16 = *(int *)(v6 + 20);
    v17 = (char *)v13 + v16;
    v18 = (char *)v14 + v16;
    v19 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoComparisonPredicate.Comparison.Pair(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  v29 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v29 & 0xF000000000000007) != 0)
    {
      *a1 = v29;
      swift_release();
    }
    else
    {
      sub_248E4DD3C((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v29;
  }
  v31 = *(int *)(v6 + 20);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v14, 1, v6);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      *v15 = *v16;
      v19 = *(int *)(v6 + 20);
      v20 = (char *)v15 + v19;
      v21 = (char *)v16 + v19;
      v22 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
      goto LABEL_13;
    }
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  if (v18)
  {
    sub_248E25C30((uint64_t)v15, type metadata accessor for ToolKitProtoTypedValue);
    goto LABEL_12;
  }
  v30 = *v16;
  if ((~*v15 & 0xF000000000000007) != 0)
  {
    if ((~v30 & 0xF000000000000007) != 0)
    {
      *v15 = v30;
      swift_release();
    }
    else
    {
      sub_248E4DD3C((uint64_t)v15);
      *v15 = *v16;
    }
  }
  else
  {
    *v15 = v30;
  }
  v35 = *(int *)(v6 + 20);
  v36 = (char *)v15 + v35;
  v37 = (char *)v16 + v35;
  v38 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
LABEL_13:
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Comparison.Pair()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EBAD64()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_262_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
  OUTLINED_FUNCTION_24_6();
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_474_0();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    v2 = OUTLINED_FUNCTION_632();
  }
  return OUTLINED_FUNCTION_265(v2, v0, v3);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Comparison.Pair()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EBADBC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_262_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
  OUTLINED_FUNCTION_32_0();
  if (v0)
  {
    OUTLINED_FUNCTION_502_0();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_632();
  }
  OUTLINED_FUNCTION_82_1();
  return OUTLINED_FUNCTION_264(v1, v2, v3, v4);
}

void sub_248EBAE0C()
{
  unint64_t v0;
  unint64_t v1;

  sub_248E0EBD8(319, &qword_254475158, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
  if (v0 <= 0x3F)
  {
    sub_2490E7ABC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoComparisonPredicate.Comparison.Template(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 1u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 2u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 3u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 4u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 5u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 6u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 7u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 8u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 9u:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 0xAu:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 0xBu:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_45;
        case 0xCu:
          v10 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
LABEL_45:
          *a1 = v10;
          v11 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v15 = *(int *)(a3 + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoComparisonPredicate.Comparison.Template(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        if ((~*a1 & 0xF000000000000007) != 0)
          swift_release();
        v5 = (char *)a1 + *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v6 = sub_2490E7ABC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
        break;
      default:
        break;
    }
  }
  v7 = (char *)a1 + *(int *)(a2 + 20);
  v8 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for ToolKitProtoComparisonPredicate.Comparison.Template(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 1u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 2u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 3u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 4u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 5u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 6u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 7u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 8u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 9u:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 0xAu:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 0xBu:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 0xCu:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_43:
        *a1 = v8;
        v9 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t *assignWithCopy for ToolKitProtoComparisonPredicate.Comparison.Template(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 1u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 2u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 3u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 4u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 5u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 6u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 7u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 8u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 9u:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 0xAu:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 0xBu:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_52;
        case 0xCu:
          v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
LABEL_52:
          *a1 = v9;
          v12 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v15 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_91;
    }
    goto LABEL_9;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
LABEL_9:
    v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0) - 8);
LABEL_10:
    memcpy(a1, a2, *(_QWORD *)(v10 + 64));
    goto LABEL_91;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 1u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 2u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 3u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 4u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 5u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 6u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 7u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 8u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 9u:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 0xAu:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 0xBu:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      case 0xCu:
        v11 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        break;
      default:
        v10 = *(_QWORD *)(v6 - 8);
        goto LABEL_10;
    }
    *a1 = v11;
    v16 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
LABEL_91:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoComparisonPredicate.Comparison.Template(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoComparisonPredicate.Comparison.Template(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          *a1 = *a2;
          v10 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
          v11 = (char *)a1 + v10;
          v12 = (char *)a2 + v10;
          v13 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
LABEL_6:
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0) - 8);
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(v9 + 64));
    goto LABEL_15;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v9 = *(_QWORD *)(v6 - 8);
        goto LABEL_7;
    }
  }
LABEL_15:
  v18 = *(int *)(a3 + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Comparison.Template()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EBD4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_2544757B0);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Comparison.Template()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EBD4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_2544757B0);
}

void sub_248EBD500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_2544757B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 1u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 2u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 3u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 4u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 5u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 6u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 7u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 8u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 9u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 0xAu:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 0xBu:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_43;
      case 0xCu:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_43:
        *a1 = v7;
        v9 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(_QWORD *a1)
{
  uint64_t result;
  char *v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      if ((~*a1 & 0xF000000000000007) != 0)
        swift_release();
      v3 = (char *)a1 + *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
      v4 = sub_2490E7ABC();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 1u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 2u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 3u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 4u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 5u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 6u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 7u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 8u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 9u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 0xAu:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 0xBu:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_41;
    case 0xCu:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
LABEL_41:
      *a1 = v6;
      v7 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 1u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 2u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 3u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 4u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 5u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 6u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 7u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 8u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 9u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 0xAu:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 0xBu:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_42;
      case 0xCu:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_42:
        *a1 = v6;
        v7 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_248EBEEAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ToolKitProtoTypeInstance(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 1u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 2u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 3u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 4u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 5u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 6u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 7u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 8u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 9u:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 0xAu:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_40;
      case 0xBu:
        v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_40:
        *a1 = v7;
        v9 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        goto LABEL_52;
      case 0xCu:
        v13 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v13))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v15 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          *a1 = v15;
          v16 = *(int *)(v13 + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v13);
        }
        v20 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v21 = *(int *)(v20 + 20);
        v22 = (uint64_t *)((char *)a1 + v21);
        v23 = (uint64_t *)((char *)a2 + v21);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v21, 1, v13))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v25 = *v23;
          if ((~*v23 & 0xF000000000000007) != 0)
            swift_retain();
          *v22 = v25;
          v26 = *(int *)(v13 + 20);
          v27 = (char *)v22 + v26;
          v28 = (char *)v23 + v26;
          v29 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v13);
        }
        v30 = *(int *)(v20 + 24);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
LABEL_52:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      if ((~*a1 & 0xF000000000000007) != 0)
        swift_release();
      v3 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      goto LABEL_5;
    case 12:
      v6 = type metadata accessor for ToolKitProtoTypedValue(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6))
      {
        if ((~*a1 & 0xF000000000000007) != 0)
          swift_release();
        v7 = (char *)a1 + *(int *)(v6 + 20);
        v8 = sub_2490E7ABC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      }
      v9 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
      v10 = (_QWORD *)((char *)a1 + *(int *)(v9 + 20));
      if (!__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
      {
        if ((~*v10 & 0xF000000000000007) != 0)
          swift_release();
        v11 = (char *)v10 + *(int *)(v6 + 20);
        v12 = sub_2490E7ABC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      }
      v3 = *(int *)(v9 + 24);
LABEL_5:
      v4 = (char *)a1 + v3;
      v5 = sub_2490E7ABC();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 1u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 2u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 3u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 4u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 5u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 6u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 7u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 8u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 9u:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 0xAu:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      goto LABEL_38;
    case 0xBu:
      v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
LABEL_38:
      *a1 = v6;
      v7 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      goto LABEL_50;
    case 0xCu:
      v11 = type metadata accessor for ToolKitProtoTypedValue(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v13 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        *a1 = v13;
        v14 = *(int *)(v11 + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v11);
      }
      v18 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
      v19 = *(int *)(v18 + 20);
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v19, 1, v11))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v23 = *v21;
        if ((~*v21 & 0xF000000000000007) != 0)
          swift_retain();
        *v20 = v23;
        v24 = *(int *)(v11 + 20);
        v25 = (char *)v20 + v24;
        v26 = (char *)v21 + v24;
        v27 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v11);
      }
      v28 = *(int *)(v18 + 24);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
LABEL_50:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 1u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 2u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 3u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 4u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 5u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 6u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 7u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 8u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 9u:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 0xAu:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_39;
      case 0xBu:
        v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_39:
        *a1 = v6;
        v7 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        goto LABEL_51;
      case 0xCu:
        v11 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v11))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          v13 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          *a1 = v13;
          v14 = *(int *)(v11 + 20);
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          v17 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v11);
        }
        v18 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v19 = *(int *)(v18 + 20);
        v20 = (uint64_t *)((char *)a1 + v19);
        v21 = (uint64_t *)((char *)a2 + v19);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v19, 1, v11))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          v23 = *v21;
          if ((~*v21 & 0xF000000000000007) != 0)
            swift_retain();
          *v20 = v23;
          v24 = *(int *)(v11 + 20);
          v25 = (char *)v20 + v24;
          v26 = (char *)v21 + v24;
          v27 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v11);
        }
        v28 = *(int *)(v18 + 24);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
LABEL_51:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      goto LABEL_11;
    case 0xCu:
      v10 = type metadata accessor for ToolKitProtoTypedValue(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v12 = *(int *)(v10 + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v10);
      }
      v16 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
      v17 = *(int *)(v16 + 20);
      v18 = (_QWORD *)((char *)a1 + v17);
      v19 = (_QWORD *)((char *)a2 + v17);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v17, 1, v10))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        *v18 = *v19;
        v21 = *(int *)(v10 + 20);
        v22 = (char *)v18 + v21;
        v23 = (char *)v19 + v21;
        v24 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v10);
      }
      v25 = *(int *)(v16 + 24);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_12;
      case 0xCu:
        v10 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v10))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v12 = *(int *)(v10 + 20);
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v15 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v10);
        }
        v16 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
        v17 = *(int *)(v16 + 20);
        v18 = (_QWORD *)((char *)a1 + v17);
        v19 = (_QWORD *)((char *)a2 + v17);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v17, 1, v10))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          *v18 = *v19;
          v21 = *(int *)(v10 + 20);
          v22 = (char *)v18 + v21;
          v23 = (char *)v19 + v21;
          v24 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
          __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v10);
        }
        v25 = *(int *)(v16 + 24);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_248EC0F84()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ToolKitProtoTypedValue(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoComparisonPredicate.Template(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  char *v73;
  int *v74;
  int *v75;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v74 = v6;
      v14 = v10[1];
      *v9 = *v10;
      v9[1] = v14;
      v15 = v10[3];
      v9[2] = v10[2];
      v9[3] = v15;
      v16 = *(int *)(v11 + 24);
      v17 = (_QWORD *)((char *)v9 + v16);
      v18 = (_QWORD *)((char *)v10 + v16);
      v19 = type metadata accessor for ToolKitProtoTypeInstance(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = *v18;
        if ((~*v18 & 0xF000000000000007) != 0)
          swift_retain();
        *v17 = v21;
        v22 = *(int *)(v19 + 20);
        v23 = (char *)v17 + v22;
        v24 = (char *)v18 + v22;
        v25 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      v26 = *(int *)(v11 + 28);
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      v29 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      v6 = v74;
    }
    v30 = v6[6];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757F0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v35))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 1u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 2u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 3u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 4u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 5u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 6u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 7u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 8u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 9u:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 0xAu:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 0xBu:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_55;
          case 0xCu:
            v37 = *v32;
            if ((~*v32 & 0xF000000000000007) != 0)
              swift_retain();
LABEL_55:
            *v31 = v37;
            v38 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
            v39 = (char *)v31 + v38;
            v40 = (char *)v32 + v38;
            v41 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v35);
      }
      v42 = *(int *)(v33 + 20);
      v43 = (char *)v31 + v42;
      v44 = (char *)v32 + v42;
      v45 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    }
    v46 = v6[7];
    v47 = (_QWORD *)((char *)v4 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    v49 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
LABEL_70:
      v66 = v6[8];
      v67 = (char *)v4 + v66;
      v68 = (char *)a2 + v66;
      v69 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
      return v4;
    }
    v51 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v51))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_69:
      v62 = *(int *)(v49 + 20);
      v63 = (char *)v47 + v62;
      v64 = (char *)v48 + v62;
      v65 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
      goto LABEL_70;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v57 = v48[1];
      *v47 = *v48;
      v47[1] = v57;
      v75 = v6;
      v58 = v48[3];
      v47[2] = v48[2];
      v47[3] = v58;
      v56 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v61 = v48[1];
        *v47 = *v48;
        v47[1] = v61;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      }
      v54 = v48[1];
      *v47 = *v48;
      v47[1] = v54;
      v75 = v6;
      v55 = v48[3];
      v47[2] = v48[2];
      v47[3] = v55;
      v56 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v59 = *(int *)(v56 + 24);
    v72 = (char *)v48 + v59;
    v73 = (char *)v47 + v59;
    v60 = sub_2490E7ABC();
    v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
    swift_bridgeObjectRetain();
    v6 = v75;
    swift_bridgeObjectRetain();
    v71(v73, v72, v60);
LABEL_68:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v51);
    goto LABEL_69;
  }
  v13 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t destroy for ToolKitProtoComparisonPredicate.Template(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)(v4 + *(int *)(v5 + 24));
    v7 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
    {
      if ((~*v6 & 0xF000000000000007) != 0)
        swift_release();
      v8 = (char *)v6 + *(int *)(v7 + 20);
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + *(int *)(v5 + 28);
    v11 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = (_QWORD *)(a1 + a2[6]);
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          if ((~*v12 & 0xF000000000000007) != 0)
            swift_release();
          v15 = (char *)v12 + *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
          v16 = sub_2490E7ABC();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          break;
        default:
          break;
      }
    }
    v17 = (char *)v12 + *(int *)(v13 + 20);
    v18 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  v19 = a1 + a2[7];
  v20 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
  {
    v21 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (!__swift_getEnumTagSinglePayload(v19, 1, v21))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (!EnumCaseMultiPayload)
            swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
      }
      v24 = v19 + *(int *)(v23 + 24);
      v25 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    }
LABEL_23:
    v26 = v19 + *(int *)(v20 + 20);
    v27 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  v28 = a1 + a2[8];
  v29 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
}

_QWORD *initializeWithCopy for ToolKitProtoComparisonPredicate.Template(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  int *v72;
  int *v73;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v72 = v3;
    v12 = v9[1];
    *v8 = *v9;
    v8[1] = v12;
    v13 = v9[3];
    v8[2] = v9[2];
    v8[3] = v13;
    v14 = *(int *)(v10 + 24);
    v15 = (_QWORD *)((char *)v8 + v14);
    v16 = (_QWORD *)((char *)v9 + v14);
    v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = *v16;
      if ((~*v16 & 0xF000000000000007) != 0)
        swift_retain();
      *v15 = v19;
      v20 = *(int *)(v17 + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    v24 = *(int *)(v10 + 28);
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    v27 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    v3 = v72;
  }
  v28 = v3[6];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757F0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 1u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 2u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 3u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 4u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 5u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 6u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 7u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 8u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 9u:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 0xAu:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 0xBu:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_53;
        case 0xCu:
          v35 = *v30;
          if ((~*v30 & 0xF000000000000007) != 0)
            swift_retain();
LABEL_53:
          *v29 = v35;
          v36 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
          v37 = (char *)v29 + v36;
          v38 = (char *)v30 + v36;
          v39 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v33);
    }
    v40 = *(int *)(v31 + 20);
    v41 = (char *)v29 + v40;
    v42 = (char *)v30 + v40;
    v43 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  v44 = v3[7];
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (_QWORD *)((char *)a2 + v44);
  v47 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
  {
    v49 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v49))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
LABEL_67:
      v60 = *(int *)(v47 + 20);
      v61 = (char *)v45 + v60;
      v62 = (char *)v46 + v60;
      v63 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
      goto LABEL_68;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v55 = v46[1];
      *v45 = *v46;
      v45[1] = v55;
      v73 = v3;
      v56 = v46[3];
      v45[2] = v46[2];
      v45[3] = v56;
      v54 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v59 = v46[1];
        *v45 = *v46;
        v45[1] = v59;
        swift_bridgeObjectRetain();
        goto LABEL_66;
      }
      v52 = v46[1];
      *v45 = *v46;
      v45[1] = v52;
      v73 = v3;
      v53 = v46[3];
      v45[2] = v46[2];
      v45[3] = v53;
      v54 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v57 = *(int *)(v54 + 24);
    v70 = (char *)v46 + v57;
    v71 = (char *)v45 + v57;
    v58 = sub_2490E7ABC();
    v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
    swift_bridgeObjectRetain();
    v3 = v73;
    swift_bridgeObjectRetain();
    v69(v71, v70, v58);
LABEL_66:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v49);
    goto LABEL_67;
  }
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
LABEL_68:
  v64 = v3[8];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoComparisonPredicate.Template(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  int EnumCaseMultiPayload;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  void (*v128)(char *, char *, uint64_t);
  void (*v129)(char *, char *, uint64_t);
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  _QWORD *v138;
  int *v139;
  int *v140;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)v5 + v6);
  v8 = (_QWORD *)((char *)v4 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
      goto LABEL_7;
    }
    v139 = a3;
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = *(int *)(v9 + 24);
    v21 = (_QWORD *)((char *)v7 + v20);
    v22 = (_QWORD *)((char *)v8 + v20);
    v23 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
    if (v24)
    {
      if (!v25)
      {
        v26 = *v22;
        if ((~*v22 & 0xF000000000000007) != 0)
          swift_retain();
        *v21 = v26;
        v27 = *(int *)(v23 + 20);
        v28 = (char *)v21 + v27;
        v29 = (char *)v22 + v27;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    if (v25)
    {
      sub_248E25C30((uint64_t)v21, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_19:
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
LABEL_20:
      v41 = *(int *)(v9 + 28);
      v42 = (char *)v7 + v41;
      v43 = (char *)v8 + v41;
      v44 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
      a3 = v139;
      goto LABEL_21;
    }
    v60 = *v22;
    v61 = *v22 & 0xF000000000000007;
    if ((~*v21 & 0xF000000000000007) != 0)
    {
      if (v61 != 0xF000000000000007)
      {
        *v21 = v60;
        swift_retain();
        swift_release();
        goto LABEL_93;
      }
      sub_248E42024((uint64_t)v21);
      v60 = *v22;
    }
    else if (v61 != 0xF000000000000007)
    {
      *v21 = v60;
      swift_retain();
LABEL_93:
      v71 = *(int *)(v23 + 20);
      v72 = (char *)v21 + v71;
      v73 = (char *)v22 + v71;
      v74 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
      goto LABEL_20;
    }
    *v21 = v60;
    goto LABEL_93;
  }
  if (v11)
  {
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_21;
  }
  v138 = v5;
  v12 = v4;
  v13 = a3;
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v14 = *(int *)(v9 + 24);
  v15 = (_QWORD *)((char *)v7 + v14);
  v16 = (_QWORD *)((char *)v8 + v14);
  v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v31 = *v16;
    if ((~*v16 & 0xF000000000000007) != 0)
      swift_retain();
    *v15 = v31;
    v32 = *(int *)(v17 + 20);
    v33 = (char *)v15 + v32;
    v34 = (char *)v16 + v32;
    v35 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  v36 = *(int *)(v9 + 28);
  v37 = (char *)v7 + v36;
  v38 = (char *)v8 + v36;
  v39 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  a3 = v13;
  v4 = v12;
  v5 = v138;
LABEL_21:
  v45 = a3[6];
  v46 = (_QWORD *)((char *)v5 + v45);
  v47 = (_QWORD *)((char *)v4 + v45);
  v48 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
  if (!v49)
  {
    if (v50)
    {
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
      goto LABEL_27;
    }
    v54 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
    v55 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v54);
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v54);
    if (v55)
    {
      if (!v56)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 1u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 2u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 3u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 4u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 5u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 6u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 7u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 8u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 9u:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 0xAu:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 0xBu:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
            goto LABEL_130;
          case 0xCu:
            v57 = *v47;
            if ((~*v47 & 0xF000000000000007) != 0)
              swift_retain();
LABEL_130:
            *v46 = v57;
            v75 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
            v76 = (char *)v46 + v75;
            v77 = (char *)v47 + v75;
            v78 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v54);
LABEL_169:
        v83 = *(int *)(v48 + 20);
        v84 = (char *)v46 + v83;
        v85 = (char *)v47 + v83;
        v86 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
        goto LABEL_170;
      }
    }
    else
    {
      if (!v56)
      {
        if (v5 != v4)
        {
          sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 1u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 2u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 3u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 4u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 5u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 6u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 7u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 8u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 9u:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 0xAu:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 0xBu:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            case 0xCu:
              v62 = *v47;
              if ((~*v47 & 0xF000000000000007) != 0)
                swift_retain();
              break;
            default:
              v59 = *(_QWORD *)(v54 - 8);
              goto LABEL_41;
          }
          *v46 = v62;
          v79 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
          v80 = (char *)v46 + v79;
          v81 = (char *)v47 + v79;
          v82 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_169;
      }
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    }
    v59 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0) - 8);
LABEL_41:
    memcpy(v46, v47, *(_QWORD *)(v59 + 64));
    goto LABEL_169;
  }
  if (v50)
  {
LABEL_27:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757F0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_170;
  }
  v51 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v51))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 1u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 2u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 3u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 4u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 5u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 6u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 7u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 8u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 9u:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 0xAu:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 0xBu:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
        goto LABEL_89;
      case 0xCu:
        v58 = *v47;
        if ((~*v47 & 0xF000000000000007) != 0)
          swift_retain();
LABEL_89:
        *v46 = v58;
        v63 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v64 = (char *)v46 + v63;
        v65 = (char *)v47 + v63;
        v66 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v51);
  }
  v67 = *(int *)(v48 + 20);
  v68 = (char *)v46 + v67;
  v69 = (char *)v47 + v67;
  v70 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
LABEL_170:
  v87 = a3[7];
  v88 = (_QWORD *)((char *)v5 + v87);
  v89 = (_QWORD *)((char *)v4 + v87);
  v90 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v91 = __swift_getEnumTagSinglePayload((uint64_t)v88, 1, v90);
  v92 = __swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90);
  if (!v91)
  {
    if (v92)
    {
      sub_248E25C30((uint64_t)v88, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
      goto LABEL_176;
    }
    v96 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    v97 = __swift_getEnumTagSinglePayload((uint64_t)v88, 1, v96);
    v98 = __swift_getEnumTagSinglePayload((uint64_t)v89, 1, v96);
    if (v97)
    {
      if (!v98)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *v88 = *v89;
          v88[1] = v89[1];
          v88[2] = v89[2];
          v88[3] = v89[3];
          v100 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            *v88 = *v89;
            v88[1] = v89[1];
            swift_bridgeObjectRetain();
            goto LABEL_200;
          }
          *v88 = *v89;
          v88[1] = v89[1];
          v88[2] = v89[2];
          v88[3] = v89[3];
          v100 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
        }
        v114 = *(int *)(v100 + 24);
        v132 = (char *)v89 + v114;
        v136 = (char *)v88 + v114;
        v115 = sub_2490E7ABC();
        v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v129(v136, v132, v115);
LABEL_200:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v96);
        goto LABEL_204;
      }
    }
    else
    {
      if (!v98)
      {
        if (v5 != v4)
        {
          v140 = a3;
          sub_248E25C30((uint64_t)v88, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
          v110 = swift_getEnumCaseMultiPayload();
          if (v110 == 2)
          {
            *v88 = *v89;
            v88[1] = v89[1];
            v88[2] = v89[2];
            v88[3] = v89[3];
            v116 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                          + 24);
            v133 = (char *)v89 + v116;
            v137 = (char *)v88 + v116;
            v117 = sub_2490E7ABC();
            v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v118(v137, v133, v117);
          }
          else
          {
            *v88 = *v89;
            v88[1] = v89[1];
            if (v110 == 1)
            {
              v88[2] = v89[2];
              v88[3] = v89[3];
              v111 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                            + 24);
              v131 = (char *)v89 + v111;
              v135 = (char *)v88 + v111;
              v112 = sub_2490E7ABC();
              v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v113(v135, v131, v112);
            }
            else
            {
              swift_bridgeObjectRetain();
            }
          }
          swift_storeEnumTagMultiPayload();
          a3 = v140;
        }
        goto LABEL_204;
      }
      sub_248E25C30((uint64_t)v88, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    }
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
LABEL_204:
    v119 = *(int *)(v90 + 20);
    v120 = (char *)v88 + v119;
    v121 = (char *)v89 + v119;
    v122 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 24))(v120, v121, v122);
    goto LABEL_205;
  }
  if (!v92)
  {
    v93 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v93))
    {
      v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
LABEL_192:
      v106 = *(int *)(v90 + 20);
      v107 = (char *)v88 + v106;
      v108 = (char *)v89 + v106;
      v109 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v107, v108, v109);
      __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v90);
      goto LABEL_205;
    }
    v101 = swift_getEnumCaseMultiPayload();
    if (v101 == 2)
    {
      *v88 = *v89;
      v88[1] = v89[1];
      v88[2] = v89[2];
      v88[3] = v89[3];
      v102 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (v101 != 1)
      {
        *v88 = *v89;
        v88[1] = v89[1];
        swift_bridgeObjectRetain();
        goto LABEL_191;
      }
      *v88 = *v89;
      v88[1] = v89[1];
      v88[2] = v89[2];
      v88[3] = v89[3];
      v102 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v104 = *(int *)(v102 + 24);
    v130 = (char *)v89 + v104;
    v134 = (char *)v88 + v104;
    v105 = sub_2490E7ABC();
    v128 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v128(v134, v130, v105);
LABEL_191:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v93);
    goto LABEL_192;
  }
LABEL_176:
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
LABEL_205:
  v123 = a3[8];
  v124 = (char *)v5 + v123;
  v125 = (char *)v4 + v123;
  v126 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 24))(v124, v125, v126);
  return v5;
}

_OWORD *initializeWithTake for ToolKitProtoComparisonPredicate.Template(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = *(int *)(v9 + 24);
    v13 = (_QWORD *)((char *)v7 + v12);
    v14 = (_QWORD *)((char *)v8 + v12);
    v15 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v17 = *(int *)(v15 + 20);
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    v21 = *(int *)(v9 + 28);
    v22 = (char *)v7 + v21;
    v23 = (char *)v8 + v21;
    v24 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v25 = a3[6];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757F0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v30))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          *v26 = *v27;
          v32 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
          v33 = (char *)v26 + v32;
          v34 = (char *)v27 + v32;
          v35 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v30);
    }
    v36 = *(int *)(v28 + 20);
    v37 = (char *)v26 + v36;
    v38 = (char *)v27 + v36;
    v39 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
  }
  v40 = a3[7];
  v41 = (_OWORD *)((char *)a1 + v40);
  v42 = (_OWORD *)((char *)a2 + v40);
  v43 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
  {
    v45 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v45))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
LABEL_27:
      v58 = *(int *)(v43 + 20);
      v59 = (char *)v41 + v58;
      v60 = (char *)v42 + v58;
      v61 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
      goto LABEL_28;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v53 = v42[1];
      *v41 = *v42;
      v41[1] = v53;
      v54 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v55 = (char *)v41 + v54;
      v56 = (char *)v42 + v54;
      v57 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        goto LABEL_26;
      }
      v48 = v42[1];
      *v41 = *v42;
      v41[1] = v48;
      v49 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                   + 24);
      v50 = (char *)v41 + v49;
      v51 = (char *)v42 + v49;
      v52 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
    }
    swift_storeEnumTagMultiPayload();
LABEL_26:
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v45);
    goto LABEL_27;
  }
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_28:
  v62 = a3[8];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoComparisonPredicate.Template(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  int EnumCaseMultiPayload;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  int v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  int v117;
  __int128 v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
      goto LABEL_7;
    }
    v20 = v9[1];
    *v8 = *v9;
    v8[1] = v20;
    swift_bridgeObjectRelease();
    v21 = v9[3];
    v8[2] = v9[2];
    v8[3] = v21;
    swift_bridgeObjectRelease();
    v22 = *(int *)(v10 + 24);
    v23 = (_QWORD *)((char *)v8 + v22);
    v24 = (_QWORD *)((char *)v9 + v22);
    v25 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
    v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
    if (v26)
    {
      if (!v27)
      {
        *v23 = *v24;
        v28 = *(int *)(v25 + 20);
        v29 = (char *)v23 + v28;
        v30 = (char *)v24 + v28;
        v31 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
LABEL_16:
        v41 = *(int *)(v10 + 28);
        v42 = (char *)v8 + v41;
        v43 = (char *)v9 + v41;
        v44 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v27)
      {
        v58 = *v24;
        if ((~*v23 & 0xF000000000000007) != 0)
        {
          if ((~v58 & 0xF000000000000007) != 0)
          {
            *v23 = v58;
            swift_release();
          }
          else
          {
            sub_248E42024((uint64_t)v23);
            *v23 = *v24;
          }
        }
        else
        {
          *v23 = v58;
        }
        v67 = *(int *)(v25 + 20);
        v68 = (char *)v23 + v67;
        v69 = (char *)v24 + v67;
        v70 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
        goto LABEL_16;
      }
      sub_248E25C30((uint64_t)v23, type metadata accessor for ToolKitProtoTypeInstance);
    }
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_16;
  }
  if (v12)
  {
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  v13 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v13;
  v14 = *(int *)(v10 + 24);
  v15 = (_QWORD *)((char *)v8 + v14);
  v16 = (_QWORD *)((char *)v9 + v14);
  v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v32 = *(int *)(v17 + 20);
    v33 = (char *)v15 + v32;
    v34 = (char *)v16 + v32;
    v35 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  }
  v36 = *(int *)(v10 + 28);
  v37 = (char *)v8 + v36;
  v38 = (char *)v9 + v36;
  v39 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_17:
  v45 = a3[6];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
  if (!v49)
  {
    if (v50)
    {
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
      goto LABEL_23;
    }
    v54 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
    v55 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v54);
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v54);
    if (v55)
    {
      if (!v56)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
          case 8u:
          case 9u:
          case 0xAu:
          case 0xBu:
          case 0xCu:
            *v46 = *v47;
            v71 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
            v72 = (char *)v46 + v71;
            v73 = (char *)v47 + v71;
            v74 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v54);
LABEL_49:
        v79 = *(int *)(v48 + 20);
        v80 = (char *)v46 + v79;
        v81 = (char *)v47 + v79;
        v82 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
        goto LABEL_50;
      }
    }
    else
    {
      if (!v56)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
            case 0xCu:
              *v46 = *v47;
              v75 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
              v76 = (char *)v46 + v75;
              v77 = (char *)v47 + v75;
              v78 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v57 = *(_QWORD *)(v54 - 8);
              goto LABEL_31;
          }
        }
        goto LABEL_49;
      }
      sub_248E25C30((uint64_t)v46, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    }
    v57 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0) - 8);
LABEL_31:
    memcpy(v46, v47, *(_QWORD *)(v57 + 64));
    goto LABEL_49;
  }
  if (v50)
  {
LABEL_23:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757F0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_50;
  }
  v51 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v51))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544757B0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *v46 = *v47;
        v59 = *(int *)(type metadata accessor for ToolKitProtoTypeInstance(0) + 20);
        v60 = (char *)v46 + v59;
        v61 = (char *)v47 + v59;
        v62 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v51);
  }
  v63 = *(int *)(v48 + 20);
  v64 = (char *)v46 + v63;
  v65 = (char *)v47 + v63;
  v66 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
LABEL_50:
  v83 = a3[7];
  v84 = (_OWORD *)((char *)a1 + v83);
  v85 = (_OWORD *)((char *)a2 + v83);
  v86 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v87 = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, v86);
  v88 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86);
  if (!v87)
  {
    if (v88)
    {
      sub_248E25C30((uint64_t)v84, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
      goto LABEL_56;
    }
    v92 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    v93 = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, v92);
    v94 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v92);
    if (v93)
    {
      if (!v94)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v123 = v85[1];
          *v84 = *v85;
          v84[1] = v123;
          v124 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                        + 24);
          v125 = (char *)v84 + v124;
          v126 = (char *)v85 + v124;
          v127 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
            goto LABEL_81;
          }
          v96 = v85[1];
          *v84 = *v85;
          v84[1] = v96;
          v97 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                       + 24);
          v98 = (char *)v84 + v97;
          v99 = (char *)v85 + v97;
          v100 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
        }
        swift_storeEnumTagMultiPayload();
LABEL_81:
        __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v92);
        goto LABEL_84;
      }
    }
    else
    {
      if (!v94)
      {
        if (a1 == a2)
          goto LABEL_84;
        sub_248E25C30((uint64_t)v84, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
        v117 = swift_getEnumCaseMultiPayload();
        if (v117 == 2)
        {
          v128 = v85[1];
          *v84 = *v85;
          v84[1] = v128;
          v129 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                        + 24);
          v130 = (char *)v84 + v129;
          v131 = (char *)v85 + v129;
          v132 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v130, v131, v132);
        }
        else
        {
          if (v117 != 1)
          {
            v107 = *(_QWORD *)(v92 - 8);
            goto LABEL_68;
          }
          v118 = v85[1];
          *v84 = *v85;
          v84[1] = v118;
          v119 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                        + 24);
          v120 = (char *)v84 + v119;
          v121 = (char *)v85 + v119;
          v122 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v120, v121, v122);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_84;
      }
      sub_248E25C30((uint64_t)v84, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    }
    v107 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475C80) - 8);
LABEL_68:
    memcpy(v84, v85, *(_QWORD *)(v107 + 64));
LABEL_84:
    v133 = *(int *)(v86 + 20);
    v134 = (char *)v84 + v133;
    v135 = (char *)v85 + v133;
    v136 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 40))(v134, v135, v136);
    goto LABEL_85;
  }
  if (!v88)
  {
    v89 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v89))
    {
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
LABEL_73:
      v113 = *(int *)(v86 + 20);
      v114 = (char *)v84 + v113;
      v115 = (char *)v85 + v113;
      v116 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
      __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v86);
      goto LABEL_85;
    }
    v101 = swift_getEnumCaseMultiPayload();
    if (v101 == 2)
    {
      v108 = v85[1];
      *v84 = *v85;
      v84[1] = v108;
      v109 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0)
                    + 24);
      v110 = (char *)v84 + v109;
      v111 = (char *)v85 + v109;
      v112 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
    }
    else
    {
      if (v101 != 1)
      {
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        goto LABEL_72;
      }
      v102 = v85[1];
      *v84 = *v85;
      v84[1] = v102;
      v103 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                    + 24);
      v104 = (char *)v84 + v103;
      v105 = (char *)v85 + v103;
      v106 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
    }
    swift_storeEnumTagMultiPayload();
LABEL_72:
    __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v89);
    goto LABEL_73;
  }
LABEL_56:
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
LABEL_85:
  v137 = a3[8];
  v138 = (char *)a1 + v137;
  v139 = (char *)a2 + v137;
  v140 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 40))(v138, v139, v140);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Template()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EC5F74()
{
  __swift_get_extra_inhabitant_index_109Tm();
}

void __swift_get_extra_inhabitant_index_109Tm()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_80_2();
  if (v3)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v1;
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    OUTLINED_FUNCTION_24_6();
    if (v3)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(v2);
      OUTLINED_FUNCTION_24_6();
      if (v5)
      {
        OUTLINED_FUNCTION_217_0();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
        OUTLINED_FUNCTION_24_6();
        if (v6)
        {
          OUTLINED_FUNCTION_266_1();
        }
        else
        {
          OUTLINED_FUNCTION_63();
          OUTLINED_FUNCTION_536();
        }
      }
    }
    v7 = OUTLINED_FUNCTION_94_1(v4);
    OUTLINED_FUNCTION_265(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoComparisonPredicate.Template()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EC6020()
{
  __swift_store_extra_inhabitant_index_110Tm();
}

void __swift_store_extra_inhabitant_index_110Tm()
{
  uint64_t *v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_43_5();
  if (v2)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_41();
  }
  else
  {
    v1 = v0;
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    OUTLINED_FUNCTION_32_0();
    if (v2)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(v1);
      OUTLINED_FUNCTION_32_0();
      if (v4)
      {
        OUTLINED_FUNCTION_225_0();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
        OUTLINED_FUNCTION_32_0();
        if (v5)
        {
          OUTLINED_FUNCTION_277_1();
        }
        else
        {
          OUTLINED_FUNCTION_63();
          OUTLINED_FUNCTION_567();
        }
      }
    }
    v6 = OUTLINED_FUNCTION_44_5(v3);
    OUTLINED_FUNCTION_376_0(v6, v7, v8, v9);
  }
}

void sub_248EC60C0(uint64_t a1)
{
  sub_248EC60D4(a1);
}

void sub_248EC60D4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  OUTLINED_FUNCTION_299_0(a1, &qword_2544753B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_530();
    if (v3 <= 0x3F)
    {
      OUTLINED_FUNCTION_299_0(v2, &qword_254475C58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor);
      if (v4 <= 0x3F)
      {
        OUTLINED_FUNCTION_265_1();
        if (v5 <= 0x3F)
        {
          OUTLINED_FUNCTION_322_0();
          OUTLINED_FUNCTION_258_1();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoCompoundPredicate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2490E7ABC();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for ToolKitProtoCompoundPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoCompoundPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoCompoundPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoCompoundPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoCompoundPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoCompoundPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EC6428()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 24));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

void sub_248EC6468()
{
  sub_248EFB16C();
}

void type metadata accessor for ToolKitProtoCompoundPredicate.Operator()
{
  OUTLINED_FUNCTION_164();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoStringSearchPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoStringSearchPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoStringSearchPredicate.Template()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EC64B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_537_0();
  return OUTLINED_FUNCTION_330_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoStringSearchPredicate.Template()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EC64E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_82_1();
  return OUTLINED_FUNCTION_329_0(v0, v1, v2, v3);
}

uint64_t getEnumTagSinglePayload for ToolKitProtoIdSearchPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoIdSearchPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EC654C()
{
  sub_248EFB16C();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoIdSearchPredicate.Template()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoIdSearchPredicate.Template()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSearchableItemPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSearchableItemPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EC65B0()
{
  sub_248EFFD68();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSearchableItemPredicate.Template()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSearchableItemPredicate.Template()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAllPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAllPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoValidPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoValidPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSuggestedPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSuggestedPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoQuery(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254474FF8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
      {
        v15 = (char *)&loc_248EC673C + 4 * aT[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      v16 = *(int *)(v10 + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v20 = a3[6];
    v21 = a3[7];
    v22 = (char *)v4 + v20;
    v23 = (char *)a2 + v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = (char *)v4 + v21;
    v25 = (char *)a2 + v21;
    v26 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
    if (!__swift_getEnumTagSinglePayload(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v8 = (int *)type metadata accessor for ToolKitProtoComparisonPredicate(0);
          v9 = v4 + v8[5];
          v10 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
          if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v11 = (_QWORD *)(v9 + *(int *)(v10 + 24));
            v12 = type metadata accessor for ToolKitProtoTypeInstance(0);
            if (!__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
            {
              if ((~*v11 & 0xF000000000000007) != 0)
                swift_release();
              v13 = (char *)v11 + *(int *)(v12 + 20);
              v14 = sub_2490E7ABC();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
            }
            v15 = v9 + *(int *)(v10 + 28);
            v16 = sub_2490E7ABC();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          }
          v17 = (_QWORD *)(v4 + v8[6]);
          v18 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
          if (!__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
          {
            v19 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
            if (!__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                case 1u:
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                case 7u:
                case 8u:
                case 9u:
                case 0xAu:
                case 0xBu:
                  if ((~*v17 & 0xF000000000000007) != 0)
                    swift_release();
                  v20 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                  goto LABEL_17;
                case 0xCu:
                  v44 = type metadata accessor for ToolKitProtoTypedValue(0);
                  if (!__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v44))
                  {
                    if ((~*v17 & 0xF000000000000007) != 0)
                      swift_release();
                    v45 = (char *)v17 + *(int *)(v44 + 20);
                    v46 = sub_2490E7ABC();
                    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
                  }
                  v47 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
                  v48 = (_QWORD *)((char *)v17 + *(int *)(v47 + 20));
                  if (!__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v44))
                  {
                    if ((~*v48 & 0xF000000000000007) != 0)
                      swift_release();
                    v49 = (char *)v48 + *(int *)(v44 + 20);
                    v50 = sub_2490E7ABC();
                    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
                  }
                  v20 = *(int *)(v47 + 24);
LABEL_17:
                  v21 = (char *)v17 + v20;
                  v22 = sub_2490E7ABC();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
                  break;
                default:
                  break;
              }
            }
            v23 = (char *)v17 + *(int *)(v18 + 20);
            v24 = sub_2490E7ABC();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
          }
          v25 = v4 + v8[7];
          v26 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
          if (__swift_getEnumTagSinglePayload(v25, 1, v26))
            goto LABEL_35;
          v27 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
          if (__swift_getEnumTagSinglePayload(v25, 1, v27))
            goto LABEL_34;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v32 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              if (!EnumCaseMultiPayload)
                swift_bridgeObjectRelease();
              goto LABEL_34;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v32 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
          }
          v33 = v25 + *(int *)(v32 + 24);
          v34 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
LABEL_34:
          v35 = v25 + *(int *)(v26 + 20);
          v36 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
LABEL_35:
          v31 = v8[8];
          goto LABEL_36;
        case 1u:
          swift_bridgeObjectRelease();
          v29 = type metadata accessor for ToolKitProtoCompoundPredicate(0);
          goto LABEL_28;
        case 2u:
          swift_bridgeObjectRelease();
          v30 = type metadata accessor for ToolKitProtoStringSearchPredicate(0);
          goto LABEL_30;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29 = type metadata accessor for ToolKitProtoIdSearchPredicate(0);
LABEL_28:
          v31 = *(int *)(v29 + 24);
          goto LABEL_36;
        case 4u:
        case 5u:
        case 7u:
          v7 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
          break;
        case 6u:
          sub_248D9E628(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
          v30 = type metadata accessor for ToolKitProtoSearchableItemPredicate(0);
LABEL_30:
          v31 = *(int *)(v30 + 20);
LABEL_36:
          v37 = v4 + v31;
          v38 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
          break;
        default:
          break;
      }
    }
    v39 = v4 + *(int *)(v5 + 20);
    v40 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
  }
  v41 = a1 + *(int *)(a2 + 28);
  v42 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
}

_BYTE *initializeWithCopy for ToolKitProtoQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254474FF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_248EC7B78 + 4 * aT_0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v18 = a3[6];
  v19 = a3[7];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v24 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

_BYTE *assignWithCopy for ToolKitProtoQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
    v16 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v15);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_248EC8B70 + 4 * word_2490F3630[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
          v21 = (char *)&loc_248EC8C54 + 4 * word_2490F365A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254474FF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_248EC8BBC + 4 * byte_2490F360E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v22 = *(int *)(v9 + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = a3[6];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  v34 = a3[7];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254474FF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_248ECB8AC + 4 * asc_2490F3684[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v18 = a3[6];
  v19 = a3[7];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v24 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoQuery(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
    v16 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v15);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_248ECC668 + 4 * byte_2490F36C8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
          v21 = (char *)&loc_248ECC74C + 4 * word_2490F36EA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254474FF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_248ECC6B4 + 4 * aYE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v22 = *(int *)(v9 + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = a3[6];
  v31 = a3[7];
  v32 = &a1[v30];
  v33 = &a2[v30];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  v34 = &a1[v31];
  v35 = &a2[v31];
  v36 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248ECEADC(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 253)
  {
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254474FF8);
    OUTLINED_FUNCTION_24_6();
    if (v2)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_266_1();
    }
    v4 = OUTLINED_FUNCTION_94_1(v3);
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248ECEB44()
{
  char v0;
  _BYTE *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_581();
  if (v2)
  {
    *v1 = v0 + 2;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254474FF8);
    OUTLINED_FUNCTION_32_0();
    if (v2)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_277_1();
    }
    v4 = OUTLINED_FUNCTION_44_5(v3);
    OUTLINED_FUNCTION_264(v4, v5, v6, v7);
  }
}

void sub_248ECEBA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_248E0EBD8(319, &qword_254475000, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery.AnyPredicate);
  if (v0 <= 0x3F)
  {
    sub_2490E7ABC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for ToolKitProtoQuery.SortOrder()
{
  OUTLINED_FUNCTION_164();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoQuery.AnyPredicate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_248ECED18 + 4 * byte_2490F3714[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoQuery.AnyPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;

  v4 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        v6 = (int *)type metadata accessor for ToolKitProtoComparisonPredicate(0);
        v7 = a1 + v6[5];
        v8 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
        if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = (_QWORD *)(v7 + *(int *)(v8 + 24));
          v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
          if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
          {
            if ((~*v9 & 0xF000000000000007) != 0)
              swift_release();
            v11 = (char *)v9 + *(int *)(v10 + 20);
            v12 = sub_2490E7ABC();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
          }
          v13 = v7 + *(int *)(v8 + 28);
          v14 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        }
        v15 = (_QWORD *)(a1 + v6[6]);
        v16 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
        {
          v17 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
          if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
              case 7u:
              case 8u:
              case 9u:
              case 0xAu:
              case 0xBu:
                if ((~*v15 & 0xF000000000000007) != 0)
                  swift_release();
                v18 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                goto LABEL_16;
              case 0xCu:
                v40 = type metadata accessor for ToolKitProtoTypedValue(0);
                if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v40))
                {
                  if ((~*v15 & 0xF000000000000007) != 0)
                    swift_release();
                  v41 = (char *)v15 + *(int *)(v40 + 20);
                  v42 = sub_2490E7ABC();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
                }
                v43 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
                v44 = (_QWORD *)((char *)v15 + *(int *)(v43 + 20));
                if (!__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v40))
                {
                  if ((~*v44 & 0xF000000000000007) != 0)
                    swift_release();
                  v45 = (char *)v44 + *(int *)(v40 + 20);
                  v46 = sub_2490E7ABC();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
                }
                v18 = *(int *)(v43 + 24);
LABEL_16:
                v19 = (char *)v15 + v18;
                v20 = sub_2490E7ABC();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
                break;
              default:
                break;
            }
          }
          v21 = (char *)v15 + *(int *)(v16 + 20);
          v22 = sub_2490E7ABC();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        }
        v23 = a1 + v6[7];
        v24 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
        if (__swift_getEnumTagSinglePayload(v23, 1, v24))
          goto LABEL_34;
        v25 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
        if (__swift_getEnumTagSinglePayload(v23, 1, v25))
          goto LABEL_33;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            if (!EnumCaseMultiPayload)
              swift_bridgeObjectRelease();
            goto LABEL_33;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
        }
        v31 = v23 + *(int *)(v30 + 24);
        v32 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
LABEL_33:
        v33 = v23 + *(int *)(v24 + 20);
        v34 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
LABEL_34:
        v29 = v6[8];
        goto LABEL_35;
      case 1u:
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for ToolKitProtoCompoundPredicate(0);
        goto LABEL_27;
      case 2u:
        swift_bridgeObjectRelease();
        v28 = type metadata accessor for ToolKitProtoStringSearchPredicate(0);
        goto LABEL_29;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for ToolKitProtoIdSearchPredicate(0);
LABEL_27:
        v29 = *(int *)(v27 + 24);
        goto LABEL_35;
      case 4u:
      case 5u:
      case 7u:
        v5 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      case 6u:
        sub_248D9E628(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        v28 = type metadata accessor for ToolKitProtoSearchableItemPredicate(0);
LABEL_29:
        v29 = *(int *)(v28 + 20);
LABEL_35:
        v35 = a1 + v29;
        v36 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
        break;
      default:
        break;
    }
  }
  v37 = a1 + *(int *)(a2 + 20);
  v38 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
}

char *initializeWithCopy for ToolKitProtoQuery.AnyPredicate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_248ECFFB8 + 4 * byte_2490F374B[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for ToolKitProtoQuery.AnyPredicate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = (char *)&loc_248ED0DA0 + 4 * byte_2490F376E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v11 = (char *)&loc_248ED0E8C + 4 * word_2490F3790[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for ToolKitProtoQuery.AnyPredicate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_248ED299C + 4 * byte_2490F37BA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for ToolKitProtoQuery.AnyPredicate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = (char *)&loc_248ED3624 + 4 * byte_2490F37DC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v11 = (char *)&loc_248ED3700 + 4 * word_2490F37FE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoQuery.AnyPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248ED4E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_2577E5BA0);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoQuery.AnyPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248ED4E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_2577E5BA0);
}

void sub_248ED4E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254474FE0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
}

uint64_t initializeBufferWithCopyOfBuffer for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_248ED4ED4 + 4 * byte_2490F3828[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = (int *)type metadata accessor for ToolKitProtoComparisonPredicate(0);
      v4 = a1 + v3[5];
      v5 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
      if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = (_QWORD *)(v4 + *(int *)(v5 + 24));
        v7 = type metadata accessor for ToolKitProtoTypeInstance(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
        {
          if ((~*v6 & 0xF000000000000007) != 0)
            swift_release();
          v8 = (char *)v6 + *(int *)(v7 + 20);
          v9 = sub_2490E7ABC();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        }
        v10 = v4 + *(int *)(v5 + 28);
        v11 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      }
      v12 = (_QWORD *)(a1 + v3[6]);
      v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
              if ((~*v12 & 0xF000000000000007) != 0)
                swift_release();
              v15 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
              goto LABEL_14;
            case 0xCu:
              v33 = type metadata accessor for ToolKitProtoTypedValue(0);
              if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v33))
              {
                if ((~*v12 & 0xF000000000000007) != 0)
                  swift_release();
                v34 = (char *)v12 + *(int *)(v33 + 20);
                v35 = sub_2490E7ABC();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
              }
              v36 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
              v37 = (_QWORD *)((char *)v12 + *(int *)(v36 + 20));
              if (!__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v33))
              {
                if ((~*v37 & 0xF000000000000007) != 0)
                  swift_release();
                v38 = (char *)v37 + *(int *)(v33 + 20);
                v39 = sub_2490E7ABC();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
              }
              v15 = *(int *)(v36 + 24);
LABEL_14:
              v16 = (char *)v12 + v15;
              v17 = sub_2490E7ABC();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
              break;
            default:
              break;
          }
        }
        v18 = (char *)v12 + *(int *)(v13 + 20);
        v19 = sub_2490E7ABC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v20 = a1 + v3[7];
      v21 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
      if (__swift_getEnumTagSinglePayload(v20, 1, v21))
        goto LABEL_32;
      v22 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
      if (__swift_getEnumTagSinglePayload(v20, 1, v22))
        goto LABEL_31;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (!EnumCaseMultiPayload)
            swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
      }
      v28 = v20 + *(int *)(v27 + 24);
      v29 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
LABEL_31:
      v30 = v20 + *(int *)(v21 + 20);
      v31 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
LABEL_32:
      v26 = v3[8];
      goto LABEL_33;
    case 1:
      swift_bridgeObjectRelease();
      v24 = type metadata accessor for ToolKitProtoCompoundPredicate(0);
      goto LABEL_25;
    case 2:
      swift_bridgeObjectRelease();
      v25 = type metadata accessor for ToolKitProtoStringSearchPredicate(0);
      goto LABEL_27;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = type metadata accessor for ToolKitProtoIdSearchPredicate(0);
LABEL_25:
      v26 = *(int *)(v24 + 24);
      goto LABEL_33;
    case 4:
    case 5:
    case 7:
      goto LABEL_34;
    case 6:
      sub_248D9E628(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      v25 = type metadata accessor for ToolKitProtoSearchableItemPredicate(0);
LABEL_27:
      v26 = *(int *)(v25 + 20);
LABEL_33:
      a1 += v26;
LABEL_34:
      v32 = sub_2490E7ABC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(a1, v32);
    default:
      return result;
  }
}

void initializeWithCopy for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind()
{
  char *v0;

  v0 = (char *)sub_248ED60A4 + 4 * byte_2490F385F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_248ED60A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__dst, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int EnumCaseMultiPayload;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  int *v120;
  int *v121;
  int *v122;

  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (int *)type metadata accessor for ToolKitProtoComparisonPredicate(0);
  v30 = v29[5];
  v31 = (_QWORD *)((char *)v26 + v30);
  v32 = (_QWORD *)((char *)v27 + v30);
  v33 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = v32[1];
    *v31 = *v32;
    v31[1] = v35;
    v36 = v32[3];
    v31[2] = v32[2];
    v31[3] = v36;
    v37 = *(int *)(v33 + 24);
    v118 = (_QWORD *)((char *)v31 + v37);
    v120 = v29;
    v38 = (_QWORD *)((char *)v32 + v37);
    v39 = type metadata accessor for ToolKitProtoTypeInstance(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v118, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = *v38;
      if ((~*v38 & 0xF000000000000007) != 0)
        swift_retain();
      *v118 = v41;
      v42 = *(int *)(v39 + 20);
      v43 = (char *)v118 + v42;
      v44 = (char *)v38 + v42;
      v45 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v39);
    }
    v46 = *(int *)(v33 + 28);
    v47 = (char *)v31 + v46;
    v48 = (char *)v32 + v46;
    v49 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    v29 = v120;
  }
  v50 = v29[6];
  v51 = (_QWORD *)((char *)v26 + v50);
  v52 = (_QWORD *)((char *)v27 + v50);
  v53 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B80);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    v55 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v55))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 1u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 2u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 3u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 4u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 5u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 6u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 7u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 8u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 9u:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 0xAu:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
          goto LABEL_50;
        case 0xBu:
          v57 = *v52;
          if ((~*v52 & 0xF000000000000007) != 0)
            swift_retain();
LABEL_50:
          *v51 = v57;
          v58 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v59 = (char *)v51 + v58;
          v60 = (char *)v52 + v58;
          v61 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xCu:
          v91 = type metadata accessor for ToolKitProtoTypedValue(0);
          v122 = v29;
          if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v91))
          {
            v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            v93 = v91;
            v94 = *v52;
            if ((~*v52 & 0xF000000000000007) != 0)
              swift_retain();
            *v51 = v94;
            v95 = v93;
            v96 = *(int *)(v93 + 20);
            v97 = (char *)v51 + v96;
            v98 = (char *)v52 + v96;
            v99 = sub_2490E7ABC();
            v100 = v97;
            v91 = v95;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v100, v98, v99);
            __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v95);
          }
          v119 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v101 = *(int *)(v119 + 20);
          v102 = (_QWORD *)((char *)v51 + v101);
          v103 = (uint64_t *)((char *)v52 + v101);
          if (__swift_getEnumTagSinglePayload((uint64_t)v52 + v101, 1, v91))
          {
            v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
          }
          else
          {
            v117 = v91;
            v105 = *v103;
            if ((~*v103 & 0xF000000000000007) != 0)
              swift_retain();
            *v102 = v105;
            v106 = *(int *)(v117 + 20);
            v115 = (char *)v102 + v106;
            v107 = (char *)v103 + v106;
            v108 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v115, v107, v108);
            __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v117);
          }
          v109 = *(int *)(v119 + 24);
          v110 = (char *)v51 + v109;
          v111 = (char *)v52 + v109;
          v112 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
          swift_storeEnumTagMultiPayload();
          v29 = v122;
          break;
        default:
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v55);
    }
    v62 = *(int *)(v53 + 20);
    v63 = (char *)v51 + v62;
    v64 = (char *)v52 + v62;
    v65 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
    __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
  }
  v66 = v29[7];
  v67 = (_QWORD *)((char *)v26 + v66);
  v68 = (_QWORD *)((char *)v27 + v66);
  v69 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
  {
    v71 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v71))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
LABEL_64:
      v82 = *(int *)(v69 + 20);
      v83 = (char *)v67 + v82;
      v84 = (char *)v68 + v82;
      v85 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
      goto LABEL_65;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v77 = v68[1];
      v121 = v29;
      *v67 = *v68;
      v67[1] = v77;
      v78 = v68[3];
      v67[2] = v68[2];
      v67[3] = v78;
      v76 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v81 = v68[1];
        *v67 = *v68;
        v67[1] = v81;
        swift_bridgeObjectRetain();
        goto LABEL_63;
      }
      v74 = v68[1];
      v121 = v29;
      *v67 = *v68;
      v67[1] = v74;
      v75 = v68[3];
      v67[2] = v68[2];
      v67[3] = v75;
      v76 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
    }
    v79 = *(int *)(v76 + 24);
    v114 = (char *)v68 + v79;
    v116 = (char *)v67 + v79;
    v80 = sub_2490E7ABC();
    v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
    swift_bridgeObjectRetain();
    v29 = v121;
    swift_bridgeObjectRetain();
    v113(v116, v114, v80);
LABEL_63:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v71);
    goto LABEL_64;
  }
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
LABEL_65:
  v86 = v29[8];
  v87 = (char *)v26 + v86;
  v88 = (char *)v27 + v86;
  v89 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t assignWithCopy for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_248E25C30(result, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v2 = (char *)&loc_248ED6E0C + 4 * byte_2490F3882[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind()
{
  char *v0;

  v0 = (char *)sub_248ED7BAC + 4 * byte_2490F38A4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_248ED7BAC()
{
  _OWORD *v0;
  _OWORD *v1;
  int *v2;
  uint64_t v3;
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  int *v87;

  *v0 = *v1;
  v2 = (int *)type metadata accessor for ToolKitProtoComparisonPredicate(0);
  v3 = v2[5];
  v4 = (_OWORD *)((char *)v0 + v3);
  v5 = (_OWORD *)((char *)v1 + v3);
  v6 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544753A8);
    memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v86 = v2;
    v8 = v5[1];
    *v4 = *v5;
    v4[1] = v8;
    v9 = *(int *)(v6 + 24);
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)v5 + v9);
    v12 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *v10 = *v11;
      v14 = *(int *)(v12 + 20);
      v15 = (char *)v10 + v14;
      v16 = (char *)v11 + v14;
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v18 = *(int *)(v6 + 28);
    v19 = (char *)v4 + v18;
    v20 = (char *)v5 + v18;
    v21 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
    v2 = v86;
  }
  v22 = v2[6];
  v23 = (_QWORD *)((char *)v0 + v22);
  v24 = (_QWORD *)((char *)v1 + v22);
  v25 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B80);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v27))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5B88);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
          *v23 = *v24;
          v29 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v30 = (char *)v23 + v29;
          v31 = (char *)v24 + v29;
          v32 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xCu:
          v64 = type metadata accessor for ToolKitProtoTypedValue(0);
          v87 = v2;
          if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v64))
          {
            v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            *v23 = *v24;
            v66 = *(int *)(v64 + 20);
            v67 = v64;
            v68 = (char *)v23 + v66;
            v69 = (char *)v24 + v66;
            v70 = sub_2490E7ABC();
            v71 = v68;
            v64 = v67;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v71, v69, v70);
            __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v67);
          }
          v85 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
          v72 = *(int *)(v85 + 20);
          v73 = (_QWORD *)((char *)v23 + v72);
          v74 = (_QWORD *)((char *)v24 + v72);
          if (__swift_getEnumTagSinglePayload((uint64_t)v24 + v72, 1, v64))
          {
            v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475150);
            memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            *v73 = *v74;
            v76 = *(int *)(v64 + 20);
            v84 = v64;
            v77 = (char *)v73 + v76;
            v78 = (char *)v74 + v76;
            v79 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
            __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v84);
          }
          v80 = *(int *)(v85 + 24);
          v81 = (char *)v23 + v80;
          v82 = (char *)v24 + v80;
          v83 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
          swift_storeEnumTagMultiPayload();
          v2 = v87;
          break;
        default:
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v27);
    }
    v33 = *(int *)(v25 + 20);
    v34 = (char *)v23 + v33;
    v35 = (char *)v24 + v33;
    v36 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
  }
  v37 = v2[7];
  v38 = (_OWORD *)((char *)v0 + v37);
  v39 = (_OWORD *)((char *)v1 + v37);
  v40 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
  {
    v42 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v42))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C80);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_27:
      v55 = *(int *)(v40 + 20);
      v56 = (char *)v38 + v55;
      v57 = (char *)v39 + v55;
      v58 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
      goto LABEL_28;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v50 = v39[1];
      *v38 = *v39;
      v38[1] = v50;
      v51 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0) + 24);
      v52 = (char *)v38 + v51;
      v53 = (char *)v39 + v51;
      v54 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        goto LABEL_26;
      }
      v45 = v39[1];
      *v38 = *v39;
      v38[1] = v45;
      v46 = *(int *)(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0)
                   + 24);
      v47 = (char *)v38 + v46;
      v48 = (char *)v39 + v46;
      v49 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    }
    swift_storeEnumTagMultiPayload();
LABEL_26:
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v42);
    goto LABEL_27;
  }
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475C50);
  memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_28:
  v59 = v2[8];
  v60 = (char *)v0 + v59;
  v61 = (char *)v1 + v59;
  v62 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_248E25C30(result, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v2 = (char *)&loc_248ED8784 + 4 * byte_2490F38C6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_248ED92F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for ToolKitProtoComparisonPredicate(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolKitProtoCompoundPredicate(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ToolKitProtoStringSearchPredicate(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for ToolKitProtoIdSearchPredicate(319);
        if (v4 <= 0x3F)
        {
          result = sub_2490E7ABC();
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for ToolKitProtoSearchableItemPredicate(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimePlatformVersion(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v5 = *(int *)(a3 + 32);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoRuntimePlatformVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ToolKitProtoRuntimePlatformVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoRuntimePlatformVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoRuntimePlatformVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoRuntimePlatformVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimePlatformVersion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248ED9674()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_617();
  if (v1)
  {
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_94_1(*(int *)(v2 + 32));
    OUTLINED_FUNCTION_265(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRuntimePlatformVersion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248ED96D8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_453_0();
  if (v3)
  {
    *(_BYTE *)(v1 + 12) = v0 + 1;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_63();
    v5 = OUTLINED_FUNCTION_44_5(*(int *)(v4 + 32));
    OUTLINED_FUNCTION_264(v5, v6, v7, v8);
  }
}

uint64_t sub_248ED971C()
{
  return sub_248EF8530();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimeRequirement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B40);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_29:
      v60 = *(int *)(a3 + 20);
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      v63 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v19 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_2490E7ABC();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v24 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v50 = a2[1];
          *a1 = *a2;
          a1[1] = v50;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          v51 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                       + 24);
          v52 = (char *)a1 + v51;
          v53 = (char *)a2 + v51;
          v54 = sub_2490E7ABC();
          v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
          swift_bridgeObjectRetain();
          v55(v52, v53, v54);
          swift_storeEnumTagMultiPayload();
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v24);
      }
      v56 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_28:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
        goto LABEL_29;
      }
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v11 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
      v12 = v11[5];
      v13 = (_QWORD *)((char *)a1 + v12);
      v14 = (_QWORD *)((char *)a2 + v12);
      v15 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *v13 = *v14;
        *((_DWORD *)v13 + 2) = *((_DWORD *)v14 + 2);
        *((_BYTE *)v13 + 12) = *((_BYTE *)v14 + 12);
        v26 = *(int *)(v15 + 32);
        v27 = (char *)v13 + v26;
        v28 = (char *)v14 + v26;
        v29 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      }
      v30 = v11[6];
      v31 = (_QWORD *)((char *)a1 + v30);
      v32 = (_QWORD *)((char *)a2 + v30);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v30, 1, v15))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        *v31 = *v32;
        *((_DWORD *)v31 + 2) = *((_DWORD *)v32 + 2);
        *((_BYTE *)v31 + 12) = *((_BYTE *)v32 + 12);
        v34 = *(int *)(v15 + 32);
        v35 = (char *)v31 + v34;
        v36 = (char *)v32 + v34;
        v37 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v15);
      }
      v38 = v11[7];
      v39 = (_QWORD *)((char *)a1 + v38);
      v40 = (_QWORD *)((char *)a2 + v38);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v38, 1, v15))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        *v39 = *v40;
        *((_DWORD *)v39 + 2) = *((_DWORD *)v40 + 2);
        *((_BYTE *)v39 + 12) = *((_BYTE *)v40 + 12);
        v42 = *(int *)(v15 + 32);
        v43 = (char *)v39 + v42;
        v44 = (char *)v40 + v42;
        v45 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v15);
      }
      v46 = v11[8];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      v49 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_28;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for ToolKitProtoRuntimeRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
LABEL_17:
        v21 = a1 + v17;
        v22 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        break;
      case 1:
        v18 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (!__swift_getEnumTagSinglePayload(a1, 1, v18)
          && !swift_getEnumCaseMultiPayload())
        {
          swift_bridgeObjectRelease();
          v19 = a1
              + *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                       + 24);
          v20 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
        }
        v17 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        goto LABEL_17;
      case 0:
        v6 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v7 = a1 + v6[5];
        v8 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
        {
          v9 = v7 + *(int *)(v8 + 32);
          v10 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        }
        v11 = a1 + v6[6];
        if (!__swift_getEnumTagSinglePayload(v11, 1, v8))
        {
          v12 = v11 + *(int *)(v8 + 32);
          v13 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v14 = a1 + v6[7];
        if (!__swift_getEnumTagSinglePayload(v14, 1, v8))
        {
          v15 = v14 + *(int *)(v8 + 32);
          v16 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        }
        v17 = v6[8];
        goto LABEL_17;
    }
  }
  v23 = a1 + *(int *)(a2 + 20);
  v24 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

uint64_t initializeWithCopy for ToolKitProtoRuntimeRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if (!__swift_getEnumTagSinglePayload(a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v15;
      v16 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v16;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v17 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
      v18 = a1 + v17;
      v19 = a2 + v17;
      v20 = sub_2490E7ABC();
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v22 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
      if (__swift_getEnumTagSinglePayload(a2, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          v48 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v48;
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          v49 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                       + 24);
          v50 = a1 + v49;
          v51 = a2 + v49;
          v52 = sub_2490E7ABC();
          v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v50, v51, v52);
          swift_storeEnumTagMultiPayload();
        }
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v22);
      }
      v54 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
      v55 = a1 + v54;
      v56 = a2 + v54;
      v57 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_26:
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
        goto LABEL_27;
      }
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
      v10 = v9[5];
      v11 = (_QWORD *)(a1 + v10);
      v12 = (_QWORD *)(a2 + v10);
      v13 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *v11 = *v12;
        *((_DWORD *)v11 + 2) = *((_DWORD *)v12 + 2);
        *((_BYTE *)v11 + 12) = *((_BYTE *)v12 + 12);
        v24 = *(int *)(v13 + 32);
        v25 = (char *)v11 + v24;
        v26 = (char *)v12 + v24;
        v27 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      v28 = v9[6];
      v29 = (_QWORD *)(a1 + v28);
      v30 = (_QWORD *)(a2 + v28);
      if (__swift_getEnumTagSinglePayload(a2 + v28, 1, v13))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        *v29 = *v30;
        *((_DWORD *)v29 + 2) = *((_DWORD *)v30 + 2);
        *((_BYTE *)v29 + 12) = *((_BYTE *)v30 + 12);
        v32 = *(int *)(v13 + 32);
        v33 = (char *)v29 + v32;
        v34 = (char *)v30 + v32;
        v35 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v13);
      }
      v36 = v9[7];
      v37 = (_QWORD *)(a1 + v36);
      v38 = (_QWORD *)(a2 + v36);
      if (__swift_getEnumTagSinglePayload(a2 + v36, 1, v13))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        *v37 = *v38;
        *((_DWORD *)v37 + 2) = *((_DWORD *)v38 + 2);
        *((_BYTE *)v37 + 12) = *((_BYTE *)v38 + 12);
        v40 = *(int *)(v13 + 32);
        v41 = (char *)v37 + v40;
        v42 = (char *)v38 + v40;
        v43 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v13);
      }
      v44 = v9[8];
      v45 = a1 + v44;
      v46 = a2 + v44;
      v47 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B40);
  memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_27:
  v58 = *(int *)(a3 + 20);
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoRuntimeRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int *v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _DWORD *v67;
  _DWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _DWORD *v84;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload(a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        v24 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
        v25 = a1 + v24;
        v26 = a2 + v24;
        v27 = sub_2490E7ABC();
        v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v29 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (__swift_getEnumTagSinglePayload(a2, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
            v70 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                         + 24);
            v71 = a1 + v70;
            v72 = a2 + v70;
            v73 = sub_2490E7ABC();
            v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
            swift_bridgeObjectRetain();
            v74(v71, v72, v73);
            swift_storeEnumTagMultiPayload();
          }
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v29);
        }
        v75 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        v76 = a1 + v75;
        v77 = a2 + v75;
        v78 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_45:
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
          goto LABEL_55;
        }
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v10 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v11 = v10[5];
        v12 = (_DWORD *)(a1 + v11);
        v13 = (_DWORD *)(a2 + v11);
        v14 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          *v12 = *v13;
          v12[1] = v13[1];
          v12[2] = v13[2];
          *((_BYTE *)v12 + 12) = *((_BYTE *)v13 + 12);
          v31 = *(int *)(v14 + 32);
          v32 = (char *)v12 + v31;
          v33 = (char *)v13 + v31;
          v34 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
        }
        v35 = v10[6];
        v36 = (_DWORD *)(a1 + v35);
        v37 = (_DWORD *)(a2 + v35);
        if (__swift_getEnumTagSinglePayload(a2 + v35, 1, v14))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          *v36 = *v37;
          v36[1] = v37[1];
          v36[2] = v37[2];
          *((_BYTE *)v36 + 12) = *((_BYTE *)v37 + 12);
          v46 = *(int *)(v14 + 32);
          v47 = (char *)v36 + v46;
          v48 = (char *)v37 + v46;
          v49 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v14);
        }
        v50 = v10[7];
        v51 = (_DWORD *)(a1 + v50);
        v52 = (_DWORD *)(a2 + v50);
        if (__swift_getEnumTagSinglePayload(a2 + v50, 1, v14))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          *v51 = *v52;
          v51[1] = v52[1];
          v51[2] = v52[2];
          *((_BYTE *)v51 + 12) = *((_BYTE *)v52 + 12);
          v54 = *(int *)(v14 + 32);
          v55 = (char *)v51 + v54;
          v56 = (char *)v52 + v54;
          v57 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v14);
        }
        v58 = v10[8];
        v59 = a1 + v58;
        v60 = a2 + v58;
        v61 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_45;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_55;
      sub_248E25C30(a1, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 2)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        v39 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
        v40 = a1 + v39;
        v41 = a2 + v39;
        v42 = sub_2490E7ABC();
        v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v40, v41, v42);
      }
      else if (v17 == 1)
      {
        v44 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (__swift_getEnumTagSinglePayload(a2, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
            v95 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                         + 24);
            v96 = a1 + v95;
            v97 = a2 + v95;
            v98 = sub_2490E7ABC();
            v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
            swift_bridgeObjectRetain();
            v99(v96, v97, v98);
            swift_storeEnumTagMultiPayload();
          }
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v44);
        }
        v100 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        v101 = a1 + v100;
        v102 = a2 + v100;
        v103 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
      }
      else
      {
        if (v17)
        {
          v16 = *(_QWORD *)(v6 - 8);
          goto LABEL_11;
        }
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v18 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v19 = v18[5];
        v20 = (_DWORD *)(a1 + v19);
        v21 = (_DWORD *)(a2 + v19);
        v22 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *v20 = *v21;
          v20[1] = v21[1];
          v20[2] = v21[2];
          *((_BYTE *)v20 + 12) = *((_BYTE *)v21 + 12);
          v62 = *(int *)(v22 + 32);
          v63 = (char *)v20 + v62;
          v64 = (char *)v21 + v62;
          v65 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        v66 = v18[6];
        v67 = (_DWORD *)(a1 + v66);
        v68 = (_DWORD *)(a2 + v66);
        if (__swift_getEnumTagSinglePayload(a2 + v66, 1, v22))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          *v67 = *v68;
          v67[1] = v68[1];
          v67[2] = v68[2];
          *((_BYTE *)v67 + 12) = *((_BYTE *)v68 + 12);
          v79 = *(int *)(v22 + 32);
          v80 = (char *)v67 + v79;
          v81 = (char *)v68 + v79;
          v82 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v22);
        }
        v83 = v18[7];
        v84 = (_DWORD *)(a1 + v83);
        v85 = (_DWORD *)(a2 + v83);
        if (__swift_getEnumTagSinglePayload(a2 + v83, 1, v22))
        {
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          *v84 = *v85;
          v84[1] = v85[1];
          v84[2] = v85[2];
          *((_BYTE *)v84 + 12) = *((_BYTE *)v85 + 12);
          v87 = *(int *)(v22 + 32);
          v88 = (char *)v84 + v87;
          v89 = (char *)v85 + v87;
          v90 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
          __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v22);
        }
        v91 = v18[8];
        v92 = a1 + v91;
        v93 = a2 + v91;
        v94 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_55;
    }
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
  }
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475B40) - 8);
LABEL_11:
  memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v16 + 64));
LABEL_55:
  v104 = *(int *)(a3 + 20);
  v105 = a1 + v104;
  v106 = a2 + v104;
  v107 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 24))(v105, v106, v107);
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoRuntimeRequirement(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v15;
      a1[32] = a2[32];
      v16 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v20 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[16] = a2[16];
          v46 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                       + 24);
          v47 = &a1[v46];
          v48 = &a2[v46];
          v49 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
          swift_storeEnumTagMultiPayload();
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v20);
      }
      v50 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
      v51 = &a1[v50];
      v52 = &a2[v50];
      v53 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_26:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
        goto LABEL_27;
      }
      *a1 = *a2;
      v9 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *v11 = *v12;
        *((_DWORD *)v11 + 2) = *((_DWORD *)v12 + 2);
        *((_BYTE *)v11 + 12) = *((_BYTE *)v12 + 12);
        v22 = *(int *)(v13 + 32);
        v23 = (char *)v11 + v22;
        v24 = (char *)v12 + v22;
        v25 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      v26 = v9[6];
      v27 = &a1[v26];
      v28 = &a2[v26];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v26], 1, v13))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *v27 = *v28;
        *((_DWORD *)v27 + 2) = *((_DWORD *)v28 + 2);
        *((_BYTE *)v27 + 12) = *((_BYTE *)v28 + 12);
        v30 = *(int *)(v13 + 32);
        v31 = (char *)v27 + v30;
        v32 = (char *)v28 + v30;
        v33 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v13);
      }
      v34 = v9[7];
      v35 = &a1[v34];
      v36 = &a2[v34];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v34], 1, v13))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *v35 = *v36;
        *((_DWORD *)v35 + 2) = *((_DWORD *)v36 + 2);
        *((_BYTE *)v35 + 12) = *((_BYTE *)v36 + 12);
        v38 = *(int *)(v13 + 32);
        v39 = (char *)v35 + v38;
        v40 = (char *)v36 + v38;
        v41 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v13);
      }
      v42 = v9[8];
      v43 = &a1[v42];
      v44 = &a2[v42];
      v45 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B40);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_27:
  v54 = *(int *)(a3 + 20);
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoRuntimeRequirement(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v24 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v24;
        a1[32] = a2[32];
        v25 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v29 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[16] = a2[16];
            v70 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                         + 24);
            v71 = &a1[v70];
            v72 = &a2[v70];
            v73 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
            swift_storeEnumTagMultiPayload();
          }
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v29);
        }
        v74 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        v75 = &a1[v74];
        v76 = &a2[v74];
        v77 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v75, v76, v77);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_45:
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
          goto LABEL_55;
        }
        *a1 = *a2;
        v10 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v11 = v10[5];
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          *v12 = *v13;
          *((_DWORD *)v12 + 2) = *((_DWORD *)v13 + 2);
          *((_BYTE *)v12 + 12) = *((_BYTE *)v13 + 12);
          v31 = *(int *)(v14 + 32);
          v32 = (char *)v12 + v31;
          v33 = (char *)v13 + v31;
          v34 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
        }
        v35 = v10[6];
        v36 = &a1[v35];
        v37 = &a2[v35];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v35], 1, v14))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          *v36 = *v37;
          *((_DWORD *)v36 + 2) = *((_DWORD *)v37 + 2);
          *((_BYTE *)v36 + 12) = *((_BYTE *)v37 + 12);
          v46 = *(int *)(v14 + 32);
          v47 = (char *)v36 + v46;
          v48 = (char *)v37 + v46;
          v49 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v14);
        }
        v50 = v10[7];
        v51 = &a1[v50];
        v52 = &a2[v50];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v50], 1, v14))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          *v51 = *v52;
          *((_DWORD *)v51 + 2) = *((_DWORD *)v52 + 2);
          *((_BYTE *)v51 + 12) = *((_BYTE *)v52 + 12);
          v54 = *(int *)(v14 + 32);
          v55 = (char *)v51 + v54;
          v56 = (char *)v52 + v54;
          v57 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v14);
        }
        v58 = v10[8];
        v59 = &a1[v58];
        v60 = &a2[v58];
        v61 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_45;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_55;
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 2)
      {
        v39 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v39;
        a1[32] = a2[32];
        v40 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
        v41 = &a1[v40];
        v42 = &a2[v40];
        v43 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      }
      else if (v17 == 1)
      {
        v44 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[16] = a2[16];
            v94 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                         + 24);
            v95 = &a1[v94];
            v96 = &a2[v94];
            v97 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
            swift_storeEnumTagMultiPayload();
          }
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v44);
        }
        v98 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        v99 = &a1[v98];
        v100 = &a2[v98];
        v101 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
      }
      else
      {
        if (v17)
        {
          v16 = *(_QWORD *)(v6 - 8);
          goto LABEL_11;
        }
        *a1 = *a2;
        v18 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v19 = v18[5];
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *v20 = *v21;
          *((_DWORD *)v20 + 2) = *((_DWORD *)v21 + 2);
          *((_BYTE *)v20 + 12) = *((_BYTE *)v21 + 12);
          v62 = *(int *)(v22 + 32);
          v63 = (char *)v20 + v62;
          v64 = (char *)v21 + v62;
          v65 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        v66 = v18[6];
        v67 = &a1[v66];
        v68 = &a2[v66];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v66], 1, v22))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          *v67 = *v68;
          *((_DWORD *)v67 + 2) = *((_DWORD *)v68 + 2);
          *((_BYTE *)v67 + 12) = *((_BYTE *)v68 + 12);
          v78 = *(int *)(v22 + 32);
          v79 = (char *)v67 + v78;
          v80 = (char *)v68 + v78;
          v81 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v22);
        }
        v82 = v18[7];
        v83 = &a1[v82];
        v84 = &a2[v82];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v82], 1, v22))
        {
          v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          *v83 = *v84;
          *((_DWORD *)v83 + 2) = *((_DWORD *)v84 + 2);
          *((_BYTE *)v83 + 12) = *((_BYTE *)v84 + 12);
          v86 = *(int *)(v22 + 32);
          v87 = (char *)v83 + v86;
          v88 = (char *)v84 + v86;
          v89 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v87, v88, v89);
          __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v22);
        }
        v90 = v18[8];
        v91 = &a1[v90];
        v92 = &a2[v90];
        v93 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_55;
    }
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
  }
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475B40) - 8);
LABEL_11:
  memcpy(a1, a2, *(_QWORD *)(v16 + 64));
LABEL_55:
  v102 = *(int *)(a3 + 20);
  v103 = &a1[v102];
  v104 = &a2[v102];
  v105 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v105 - 8) + 40))(v103, v104, v105);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimeRequirement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EDB9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475B40);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRuntimeRequirement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EDB9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475B40);
}

void sub_248EDB9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475B48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirementKind);
}

void type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceState()
{
  OUTLINED_FUNCTION_164();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
      *((_BYTE *)v8 + 12) = *((_BYTE *)v9 + 12);
      v13 = *(int *)(v10 + 32);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v17 = a3[6];
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v17, 1, v10))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      *((_DWORD *)v18 + 2) = *((_DWORD *)v19 + 2);
      *((_BYTE *)v18 + 12) = *((_BYTE *)v19 + 12);
      v21 = *(int *)(v10 + 32);
      v22 = (char *)v18 + v21;
      v23 = (char *)v19 + v21;
      v24 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v10);
    }
    v25 = a3[7];
    v26 = (uint64_t *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v25, 1, v10))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      *((_DWORD *)v26 + 2) = *((_DWORD *)v27 + 2);
      *((_BYTE *)v26 + 12) = *((_BYTE *)v27 + 12);
      v29 = *(int *)(v10 + 32);
      v30 = (char *)v26 + v29;
      v31 = (char *)v27 + v29;
      v32 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v10);
    }
    v33 = a3[8];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 32);
    v7 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  if (!__swift_getEnumTagSinglePayload(v8, 1, v5))
  {
    v9 = v8 + *(int *)(v5 + 32);
    v10 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + a2[7];
  if (!__swift_getEnumTagSinglePayload(v11, 1, v5))
  {
    v12 = v11 + *(int *)(v5 + 32);
    v13 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = a1 + a2[8];
  v15 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

_BYTE *initializeWithCopy for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v11 = *(int *)(v9 + 32);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v15], 1, v9))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *((_DWORD *)v16 + 2) = *((_DWORD *)v17 + 2);
    *((_BYTE *)v16 + 12) = *((_BYTE *)v17 + 12);
    v19 = *(int *)(v9 + 32);
    v20 = (char *)v16 + v19;
    v21 = (char *)v17 + v19;
    v22 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v9);
  }
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v23], 1, v9))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    *((_DWORD *)v24 + 2) = *((_DWORD *)v25 + 2);
    *((_BYTE *)v24 + 12) = *((_BYTE *)v25 + 12);
    v27 = *(int *)(v9 + 32);
    v28 = (char *)v24 + v27;
    v29 = (char *)v25 + v27;
    v30 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v9);
  }
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

_BYTE *assignWithCopy for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (uint64_t)&a1[v6];
  v8 = (uint64_t)&a2[v6];
  v9 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload(v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
      *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
      v12 = *(int *)(v9 + 32);
      v13 = v7 + v12;
      v14 = v8 + v12;
      v15 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_248E25C30(v7, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
  v42 = *(int *)(v9 + 32);
  v43 = v7 + v42;
  v44 = v8 + v42;
  v45 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
LABEL_7:
  v17 = a3[6];
  v18 = (uint64_t)&a1[v17];
  v19 = (uint64_t)&a2[v17];
  v20 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v17], 1, v9);
  v21 = __swift_getEnumTagSinglePayload(v19, 1, v9);
  if (v20)
  {
    if (!v21)
    {
      *(_DWORD *)v18 = *(_DWORD *)v19;
      *(_DWORD *)(v18 + 4) = *(_DWORD *)(v19 + 4);
      *(_DWORD *)(v18 + 8) = *(_DWORD *)(v19 + 8);
      *(_BYTE *)(v18 + 12) = *(_BYTE *)(v19 + 12);
      v22 = *(int *)(v9 + 32);
      v23 = v18 + v22;
      v24 = v19 + v22;
      v25 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload(v18, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    sub_248E25C30(v18, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy((void *)v18, (const void *)v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_DWORD *)(v18 + 4) = *(_DWORD *)(v19 + 4);
  *(_DWORD *)(v18 + 8) = *(_DWORD *)(v19 + 8);
  *(_BYTE *)(v18 + 12) = *(_BYTE *)(v19 + 12);
  v46 = *(int *)(v9 + 32);
  v47 = v18 + v46;
  v48 = v19 + v46;
  v49 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
LABEL_13:
  v27 = a3[7];
  v28 = (uint64_t)&a1[v27];
  v29 = (uint64_t)&a2[v27];
  v30 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v27], 1, v9);
  v31 = __swift_getEnumTagSinglePayload(v29, 1, v9);
  if (!v30)
  {
    if (!v31)
    {
      *(_DWORD *)v28 = *(_DWORD *)v29;
      *(_DWORD *)(v28 + 4) = *(_DWORD *)(v29 + 4);
      *(_DWORD *)(v28 + 8) = *(_DWORD *)(v29 + 8);
      *(_BYTE *)(v28 + 12) = *(_BYTE *)(v29 + 12);
      v50 = *(int *)(v9 + 32);
      v51 = v28 + v50;
      v52 = v29 + v50;
      v53 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
      goto LABEL_19;
    }
    sub_248E25C30(v28, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy((void *)v28, (const void *)v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_DWORD *)(v28 + 4) = *(_DWORD *)(v29 + 4);
  *(_DWORD *)(v28 + 8) = *(_DWORD *)(v29 + 8);
  *(_BYTE *)(v28 + 12) = *(_BYTE *)(v29 + 12);
  v32 = *(int *)(v9 + 32);
  v33 = v28 + v32;
  v34 = v29 + v32;
  v35 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  __swift_storeEnumTagSinglePayload(v28, 0, 1, v9);
LABEL_19:
  v37 = a3[8];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v11 = *(int *)(v9 + 32);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v15], 1, v9))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *((_DWORD *)v16 + 2) = *((_DWORD *)v17 + 2);
    *((_BYTE *)v16 + 12) = *((_BYTE *)v17 + 12);
    v19 = *(int *)(v9 + 32);
    v20 = (char *)v16 + v19;
    v21 = (char *)v17 + v19;
    v22 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v9);
  }
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v23], 1, v9))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    *((_DWORD *)v24 + 2) = *((_DWORD *)v25 + 2);
    *((_BYTE *)v24 + 12) = *((_BYTE *)v25 + 12);
    v27 = *(int *)(v9 + 32);
    v28 = (char *)v24 + v27;
    v29 = (char *)v25 + v27;
    v30 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v9);
  }
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (uint64_t)&a1[v6];
  v8 = (uint64_t)&a2[v6];
  v9 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload(v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
      v12 = *(int *)(v9 + 32);
      v13 = v7 + v12;
      v14 = v8 + v12;
      v15 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_248E25C30(v7, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
  v42 = *(int *)(v9 + 32);
  v43 = v7 + v42;
  v44 = v8 + v42;
  v45 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
LABEL_7:
  v17 = a3[6];
  v18 = (uint64_t)&a1[v17];
  v19 = (uint64_t)&a2[v17];
  v20 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v17], 1, v9);
  v21 = __swift_getEnumTagSinglePayload(v19, 1, v9);
  if (v20)
  {
    if (!v21)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_DWORD *)(v18 + 8) = *(_DWORD *)(v19 + 8);
      *(_BYTE *)(v18 + 12) = *(_BYTE *)(v19 + 12);
      v22 = *(int *)(v9 + 32);
      v23 = v18 + v22;
      v24 = v19 + v22;
      v25 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload(v18, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    sub_248E25C30(v18, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy((void *)v18, (const void *)v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_DWORD *)(v18 + 8) = *(_DWORD *)(v19 + 8);
  *(_BYTE *)(v18 + 12) = *(_BYTE *)(v19 + 12);
  v46 = *(int *)(v9 + 32);
  v47 = v18 + v46;
  v48 = v19 + v46;
  v49 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
LABEL_13:
  v27 = a3[7];
  v28 = (uint64_t)&a1[v27];
  v29 = (uint64_t)&a2[v27];
  v30 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v27], 1, v9);
  v31 = __swift_getEnumTagSinglePayload(v29, 1, v9);
  if (!v30)
  {
    if (!v31)
    {
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *(_DWORD *)(v28 + 8) = *(_DWORD *)(v29 + 8);
      *(_BYTE *)(v28 + 12) = *(_BYTE *)(v29 + 12);
      v50 = *(int *)(v9 + 32);
      v51 = v28 + v50;
      v52 = v29 + v50;
      v53 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
      goto LABEL_19;
    }
    sub_248E25C30(v28, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    memcpy((void *)v28, (const void *)v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_DWORD *)(v28 + 8) = *(_DWORD *)(v29 + 8);
  *(_BYTE *)(v28 + 12) = *(_BYTE *)(v29 + 12);
  v32 = *(int *)(v9 + 32);
  v33 = v28 + v32;
  v34 = v29 + v32;
  v35 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
  __swift_storeEnumTagSinglePayload(v28, 0, 1, v9);
LABEL_19:
  v37 = a3[8];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EDC9E4(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 249)
  {
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    OUTLINED_FUNCTION_24_6();
    if (v2)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_536();
    }
    v4 = OUTLINED_FUNCTION_94_1(v3);
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EDCA58()
{
  char v0;
  _BYTE *v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_262_1();
  if (v2 == 249)
  {
    *v1 = v0 + 6;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
    OUTLINED_FUNCTION_32_0();
    if (v3)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_567();
    }
    v5 = OUTLINED_FUNCTION_44_5(v4);
    OUTLINED_FUNCTION_264(v5, v6, v7, v8);
  }
}

void sub_248EDCAB8()
{
  unint64_t v0;
  unint64_t v1;

  sub_248E0EBD8(319, &qword_254475B28, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimePlatformVersion);
  if (v0 <= 0x3F)
  {
    sub_2490E7ABC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimeRequirement.DeviceCapability(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v11 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_2490E7ABC();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoRuntimeRequirement.DeviceCapability(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4) && !swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    v5 = a1
       + *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
    v6 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for ToolKitProtoRuntimeRequirement.DeviceCapability(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v9 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E7ABC();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoRuntimeRequirement.DeviceCapability(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload(a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_248E25C30(a1, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
      if (!swift_getEnumCaseMultiPayload())
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v20 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
        v21 = a1 + v20;
        v22 = a2 + v20;
        v23 = sub_2490E7ABC();
        v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v9 = *(_QWORD *)(v6 - 8);
      goto LABEL_8;
    }
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
LABEL_7:
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475670) - 8);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v9 + 64));
    goto LABEL_14;
  }
  if (v8)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v10 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
    v11 = a1 + v10;
    v12 = a2 + v10;
    v13 = sub_2490E7ABC();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
LABEL_14:
  v15 = *(int *)(a3 + 20);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoRuntimeRequirement.DeviceCapability(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      v8 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoRuntimeRequirement.DeviceCapability(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  v6 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
      if (!swift_getEnumCaseMultiPayload())
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        v19 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v9 = *(_QWORD *)(v6 - 8);
      goto LABEL_8;
    }
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
LABEL_7:
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475670) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v9 + 64));
    goto LABEL_14;
  }
  if (v8)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    v10 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_2490E7ABC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_14:
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.DeviceCapability()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EDD430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475670);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.DeviceCapability()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EDD448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475670);
}

void sub_248EDD454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475678, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.DeviceCapability.DeviceCapabilityType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.DeviceCapability.DeviceCapabilityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_248EDD53C + 4 * byte_2490F38ED[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_248EDD570 + 4 * byte_2490F38E8[v4]))();
}

uint64_t sub_248EDD570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248EDD578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248EDD580);
  return result;
}

uint64_t sub_248EDD58C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248EDD594);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_248EDD598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248EDD5A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.DeviceCapabilityType()
{
  OUTLINED_FUNCTION_164();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_2490E7ABC();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s7ToolKit29ToolKitProtoCompoundPredicateVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

uint64_t initializeWithCopy for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2490E7ABC();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EDD878()
{
  sub_248EFB16C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    v9 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2490E7ABC();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v3 = a1
       + *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
    v4 = sub_2490E7ABC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2490E7ABC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v6 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2490E7ABC();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    v6 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = sub_2490E7ABC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      v6 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_248EDDCFC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimeRequirement.FeatureFlag(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v10 = sub_2490E7ABC();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoRuntimeRequirement.FeatureFlag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ToolKitProtoRuntimeRequirement.FeatureFlag(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2490E7ABC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoRuntimeRequirement.FeatureFlag(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoRuntimeRequirement.FeatureFlag(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoRuntimeRequirement.FeatureFlag(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.FeatureFlag()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoRuntimeRequirement.FeatureFlag()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EDE0B0()
{
  sub_248F0273C();
}

uint64_t initializeBufferWithCopyOfBuffer for ToolKitProtoRuntimeRequirementKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v14 + ((v6 + 16) & ~(unint64_t)v6);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v15 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v15;
        v16 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v16;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        v17 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
        v18 = a1 + v17;
        v19 = a2 + v17;
        v20 = sub_2490E7ABC();
        v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v22 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (__swift_getEnumTagSinglePayload(a2, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
          else
          {
            v48 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v48;
            *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
            v49 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                         + 24);
            v50 = a1 + v49;
            v51 = a2 + v49;
            v52 = sub_2490E7ABC();
            v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v50, v51, v52);
            swift_storeEnumTagMultiPayload();
          }
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v22);
        }
        v54 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        v55 = a1 + v54;
        v56 = a2 + v54;
        v57 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        goto LABEL_25;
      case 0:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v8 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v9 = v8[5];
        v10 = (_QWORD *)(a1 + v9);
        v11 = (_QWORD *)(a2 + v9);
        v12 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          *v10 = *v11;
          *((_DWORD *)v10 + 2) = *((_DWORD *)v11 + 2);
          *((_BYTE *)v10 + 12) = *((_BYTE *)v11 + 12);
          v24 = *(int *)(v12 + 32);
          v25 = (char *)v10 + v24;
          v26 = (char *)v11 + v24;
          v27 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
        }
        v28 = v8[6];
        v29 = (_QWORD *)(a1 + v28);
        v30 = (_QWORD *)(a2 + v28);
        if (__swift_getEnumTagSinglePayload(a2 + v28, 1, v12))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          *v29 = *v30;
          *((_DWORD *)v29 + 2) = *((_DWORD *)v30 + 2);
          *((_BYTE *)v29 + 12) = *((_BYTE *)v30 + 12);
          v32 = *(int *)(v12 + 32);
          v33 = (char *)v29 + v32;
          v34 = (char *)v30 + v32;
          v35 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v12);
        }
        v36 = v8[7];
        v37 = (_QWORD *)(a1 + v36);
        v38 = (_QWORD *)(a2 + v36);
        if (__swift_getEnumTagSinglePayload(a2 + v36, 1, v12))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          *v37 = *v38;
          *((_DWORD *)v37 + 2) = *((_DWORD *)v38 + 2);
          *((_BYTE *)v37 + 12) = *((_BYTE *)v38 + 12);
          v40 = *(int *)(v12 + 32);
          v41 = (char *)v37 + v40;
          v42 = (char *)v38 + v40;
          v43 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v12);
        }
        v44 = v8[8];
        v45 = a1 + v44;
        v46 = a2 + v44;
        v47 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
        goto LABEL_25;
    }
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for ToolKitProtoRuntimeRequirementKind(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
  }
  else if ((_DWORD)result == 1)
  {
    v15 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
    if (!__swift_getEnumTagSinglePayload(a1, 1, v15) && !swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      v16 = a1
          + *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0) + 24);
      v17 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    }
    v14 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
    v4 = a1 + v3[5];
    v5 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    {
      v6 = v4 + *(int *)(v5 + 32);
      v7 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    }
    v8 = a1 + v3[6];
    if (!__swift_getEnumTagSinglePayload(v8, 1, v5))
    {
      v9 = v8 + *(int *)(v5 + 32);
      v10 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
    v11 = a1 + v3[7];
    if (!__swift_getEnumTagSinglePayload(v11, 1, v5))
    {
      v12 = v11 + *(int *)(v5 + 32);
      v13 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
    v14 = v3[8];
  }
  v18 = a1 + v14;
  v19 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
}

uint64_t initializeWithCopy for ToolKitProtoRuntimeRequirementKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v13 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v13;
      v14 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v14;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v15 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
      v16 = a1 + v15;
      v17 = a2 + v15;
      v18 = sub_2490E7ABC();
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v20 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
      if (__swift_getEnumTagSinglePayload(a2, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v46 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v46;
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          v47 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                       + 24);
          v48 = a1 + v47;
          v49 = a2 + v47;
          v50 = sub_2490E7ABC();
          v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v48, v49, v50);
          swift_storeEnumTagMultiPayload();
        }
        __swift_storeEnumTagSinglePayload(a1, 0, 1, v20);
      }
      v52 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
      v53 = a1 + v52;
      v54 = a2 + v52;
      v55 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
      goto LABEL_23;
    case 0:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v7 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
      v8 = v7[5];
      v9 = (_QWORD *)(a1 + v8);
      v10 = (_QWORD *)(a2 + v8);
      v11 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        *v9 = *v10;
        *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
        *((_BYTE *)v9 + 12) = *((_BYTE *)v10 + 12);
        v22 = *(int *)(v11 + 32);
        v23 = (char *)v9 + v22;
        v24 = (char *)v10 + v22;
        v25 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
      v26 = v7[6];
      v27 = (_QWORD *)(a1 + v26);
      v28 = (_QWORD *)(a2 + v26);
      if (__swift_getEnumTagSinglePayload(a2 + v26, 1, v11))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *v27 = *v28;
        *((_DWORD *)v27 + 2) = *((_DWORD *)v28 + 2);
        *((_BYTE *)v27 + 12) = *((_BYTE *)v28 + 12);
        v30 = *(int *)(v11 + 32);
        v31 = (char *)v27 + v30;
        v32 = (char *)v28 + v30;
        v33 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v11);
      }
      v34 = v7[7];
      v35 = (_QWORD *)(a1 + v34);
      v36 = (_QWORD *)(a2 + v34);
      if (__swift_getEnumTagSinglePayload(a2 + v34, 1, v11))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *v35 = *v36;
        *((_DWORD *)v35 + 2) = *((_DWORD *)v36 + 2);
        *((_BYTE *)v35 + 12) = *((_BYTE *)v36 + 12);
        v38 = *(int *)(v11 + 32);
        v39 = (char *)v35 + v38;
        v40 = (char *)v36 + v38;
        v41 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v11);
      }
      v42 = v7[8];
      v43 = a1 + v42;
      v44 = a2 + v42;
      v45 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      goto LABEL_23;
  }
  memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoRuntimeRequirementKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (a1 != a2)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        v13 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
        v14 = a1 + v13;
        v15 = a2 + v13;
        v16 = sub_2490E7ABC();
        v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v18 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (__swift_getEnumTagSinglePayload(a2, 1, v18))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          }
          else
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
            v44 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                         + 24);
            v45 = a1 + v44;
            v46 = a2 + v44;
            v47 = sub_2490E7ABC();
            v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
            swift_bridgeObjectRetain();
            v48(v45, v46, v47);
            swift_storeEnumTagMultiPayload();
          }
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v18);
        }
        v49 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        v50 = a1 + v49;
        v51 = a2 + v49;
        v52 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
        goto LABEL_24;
      case 0:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v7 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v8 = v7[5];
        v9 = (_DWORD *)(a1 + v8);
        v10 = (_DWORD *)(a2 + v8);
        v11 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          *v9 = *v10;
          v9[1] = v10[1];
          v9[2] = v10[2];
          *((_BYTE *)v9 + 12) = *((_BYTE *)v10 + 12);
          v20 = *(int *)(v11 + 32);
          v21 = (char *)v9 + v20;
          v22 = (char *)v10 + v20;
          v23 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
        }
        v24 = v7[6];
        v25 = (_DWORD *)(a1 + v24);
        v26 = (_DWORD *)(a2 + v24);
        if (__swift_getEnumTagSinglePayload(a2 + v24, 1, v11))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          *v25 = *v26;
          v25[1] = v26[1];
          v25[2] = v26[2];
          *((_BYTE *)v25 + 12) = *((_BYTE *)v26 + 12);
          v28 = *(int *)(v11 + 32);
          v29 = (char *)v25 + v28;
          v30 = (char *)v26 + v28;
          v31 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v11);
        }
        v32 = v7[7];
        v33 = (_DWORD *)(a1 + v32);
        v34 = (_DWORD *)(a2 + v32);
        if (__swift_getEnumTagSinglePayload(a2 + v32, 1, v11))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          *v33 = *v34;
          v33[1] = v34[1];
          v33[2] = v34[2];
          *((_BYTE *)v33 + 12) = *((_BYTE *)v34 + 12);
          v36 = *(int *)(v11 + 32);
          v37 = (char *)v33 + v36;
          v38 = (char *)v34 + v36;
          v39 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v11);
        }
        v40 = v7[8];
        v41 = a1 + v40;
        v42 = a2 + v40;
        v43 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        goto LABEL_24;
    }
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoRuntimeRequirementKind(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v13 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v13;
      a1[32] = a2[32];
      v14 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v18 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[16] = a2[16];
          v44 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                       + 24);
          v45 = &a1[v44];
          v46 = &a2[v44];
          v47 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
          swift_storeEnumTagMultiPayload();
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v18);
      }
      v48 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      goto LABEL_23;
    case 0:
      *a1 = *a2;
      v7 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        *v9 = *v10;
        *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
        *((_BYTE *)v9 + 12) = *((_BYTE *)v10 + 12);
        v20 = *(int *)(v11 + 32);
        v21 = (char *)v9 + v20;
        v22 = (char *)v10 + v20;
        v23 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
      v24 = v7[6];
      v25 = &a1[v24];
      v26 = &a2[v24];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v24], 1, v11))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        *v25 = *v26;
        *((_DWORD *)v25 + 2) = *((_DWORD *)v26 + 2);
        *((_BYTE *)v25 + 12) = *((_BYTE *)v26 + 12);
        v28 = *(int *)(v11 + 32);
        v29 = (char *)v25 + v28;
        v30 = (char *)v26 + v28;
        v31 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v11);
      }
      v32 = v7[7];
      v33 = &a1[v32];
      v34 = &a2[v32];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v32], 1, v11))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        *v33 = *v34;
        *((_DWORD *)v33 + 2) = *((_DWORD *)v34 + 2);
        *((_BYTE *)v33 + 12) = *((_BYTE *)v34 + 12);
        v36 = *(int *)(v11 + 32);
        v37 = (char *)v33 + v36;
        v38 = (char *)v34 + v36;
        v39 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v11);
      }
      v40 = v7[8];
      v41 = &a1[v40];
      v42 = &a2[v40];
      v43 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      goto LABEL_23;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoRuntimeRequirementKind(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v13 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v13;
        a1[32] = a2[32];
        v14 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0) + 28);
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        v18 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v18))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475670);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[16] = a2[16];
            v44 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0)
                         + 24);
            v45 = &a1[v44];
            v46 = &a2[v44];
            v47 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
            swift_storeEnumTagMultiPayload();
          }
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v18);
        }
        v48 = *(int *)(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0) + 20);
        v49 = &a1[v48];
        v50 = &a2[v48];
        v51 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        goto LABEL_24;
      case 0:
        *a1 = *a2;
        v7 = (int *)type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
        v8 = v7[5];
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          *v9 = *v10;
          *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
          *((_BYTE *)v9 + 12) = *((_BYTE *)v10 + 12);
          v20 = *(int *)(v11 + 32);
          v21 = (char *)v9 + v20;
          v22 = (char *)v10 + v20;
          v23 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
        }
        v24 = v7[6];
        v25 = &a1[v24];
        v26 = &a2[v24];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v24], 1, v11))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          *v25 = *v26;
          *((_DWORD *)v25 + 2) = *((_DWORD *)v26 + 2);
          *((_BYTE *)v25 + 12) = *((_BYTE *)v26 + 12);
          v28 = *(int *)(v11 + 32);
          v29 = (char *)v25 + v28;
          v30 = (char *)v26 + v28;
          v31 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v11);
        }
        v32 = v7[7];
        v33 = &a1[v32];
        v34 = &a2[v32];
        if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v32], 1, v11))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475B20);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          *v33 = *v34;
          *((_DWORD *)v33 + 2) = *((_DWORD *)v34 + 2);
          *((_BYTE *)v33 + 12) = *((_BYTE *)v34 + 12);
          v36 = *(int *)(v11 + 32);
          v37 = (char *)v33 + v36;
          v38 = (char *)v34 + v36;
          v39 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v11);
        }
        v40 = v7[8];
        v41 = &a1[v40];
        v42 = &a2[v40];
        v43 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        goto LABEL_24;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_248EDF81C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolSummaryString()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolSummaryString()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeBufferWithCopyOfBuffer for ToolKitProtoToolSummaryString.Component(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *((unsigned __int8 *)a2 + 16);
    if (v7 == 255)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    }
    else
    {
      v9 = v7 & 1;
      v10 = *a2;
      v11 = a2[1];
      OUTLINED_FUNCTION_31();
      *(_QWORD *)v4 = v10;
      *(_QWORD *)(v4 + 8) = v11;
      *(_BYTE *)(v4 + 16) = v9;
    }
    v12 = *(int *)(a3 + 20);
    v13 = v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoToolSummaryString.Component(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*(unsigned __int8 *)(a1 + 16) != 255)
    sub_248DB8CEC();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ToolKitProtoToolSummaryString.Component(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *((unsigned __int8 *)a2 + 16);
  if (v6 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  }
  else
  {
    v7 = v6 & 1;
    v8 = *a2;
    v9 = a2[1];
    OUTLINED_FUNCTION_31();
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 16) = v7;
  }
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  v13 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoToolSummaryString.Component(uint64_t a1, __int128 *a2, uint64_t a3)
{
  int v6;
  char v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v6 == 255)
    {
      v8 = *a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)a1 = v8;
    }
    else
    {
      v12 = v6 & 1;
      v13 = *(_QWORD *)a2;
      v14 = *((_QWORD *)a2 + 1);
      OUTLINED_FUNCTION_31();
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v14;
      *(_BYTE *)(a1 + 16) = v12;
    }
  }
  else if (v6 == 255)
  {
    sub_248EDFBB0(a1);
    v7 = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 16) = v7;
  }
  else
  {
    v9 = v6 & 1;
    v10 = *(_QWORD *)a2;
    v11 = *((_QWORD *)a2 + 1);
    OUTLINED_FUNCTION_31();
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v11;
    *(_BYTE *)(a1 + 16) = v9;
    sub_248DB8CEC();
  }
  v15 = *(int *)(a3 + 20);
  v16 = a1 + v15;
  v17 = (uint64_t)a2 + v15;
  v18 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_248EDFBB0(uint64_t a1)
{
  destroy for ToolKitProtoIndexingEventContents();
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoToolSummaryString.Component(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoToolSummaryString.Component(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(unsigned __int8 *)(a1 + 16) != 255)
  {
    v6 = *(unsigned __int8 *)(a2 + 16);
    if (v6 != 255)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = v6 & 1;
      sub_248DB8CEC();
      goto LABEL_6;
    }
    sub_248EDFBB0(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
LABEL_6:
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolSummaryString.Component()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EDFCF8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 253)
  {
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(a3 + 20));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolSummaryString.Component()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EDFD58()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_581();
  if (v3)
  {
    *(_BYTE *)(v1 + 16) = ~v0;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_63();
    v5 = OUTLINED_FUNCTION_44_5(*(int *)(v4 + 20));
    OUTLINED_FUNCTION_264(v5, v6, v7, v8);
  }
}

void sub_248EDFD9C()
{
  sub_248EFFD68();
}

uint64_t destroy for ToolKitProtoIndexingEventContents()
{
  return sub_248DB8CEC();
}

void _s7ToolKit33ToolKitProtoIndexingEventContentsOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_407();
  OUTLINED_FUNCTION_31();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_93();
}

uint64_t assignWithCopy for ToolKitProtoIndexingEventContents(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_31();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_248DB8CEC();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ToolKitProtoIndexingEventContents(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_248DB8CEC();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoIndexingEventContents(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoIndexingEventContents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_248EDFF28(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_248EDFF30(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for ToolKitProtoToolSummaryString.ToolKitProtoComponentKind()
{
  OUTLINED_FUNCTION_164();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoChangeset.Partial(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2490E7ABC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for ToolKitProtoChangeset.Partial(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ToolKitProtoChangeset.Partial(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2490E7ABC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoChangeset.Partial(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoChangeset.Partial(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolInvocationSignature()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolInvocationSignature()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EE023C()
{
  sub_248F0273C();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolInvocationSignature.ListOfRelations()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolInvocationSignature.ListOfRelations()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoSampleInvocationDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2490E7ABC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for ToolKitProtoSampleInvocationDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ToolKitProtoSampleInvocationDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2490E7ABC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoSampleInvocationDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoSampleInvocationDefinition(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoSampleInvocationDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSampleInvocationDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_160Tm()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*v0);
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 28));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSampleInvocationDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_161Tm()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_380_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 28));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

void sub_248EE0658()
{
  sub_248F0273C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoAssistantSchemaVersion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v5 = *(int *)(a3 + 28);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoAssistantSchemaVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ToolKitProtoAssistantSchemaVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoAssistantSchemaVersion(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void _s7ToolKit34ToolKitProtoAssistantSchemaVersionVwtk_0(__n128 *a1, __n128 *a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_568(a1, a2);
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

uint64_t assignWithTake for ToolKitProtoAssistantSchemaVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAssistantSchemaVersion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE08BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_537_0();
  return OUTLINED_FUNCTION_330_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAssistantSchemaVersion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE08F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_82_1();
  return OUTLINED_FUNCTION_329_0(v0, v1, v2, v3);
}

void sub_248EE0920()
{
  sub_248F0273C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoAssistantSchemaIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v9[2] = v10[2];
      v14 = *(int *)(v11 + 28);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoAssistantSchemaIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 28);
    v7 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for ToolKitProtoAssistantSchemaIdentifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
    v12 = *(int *)(v10 + 28);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoAssistantSchemaIdentifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v22 = *(int *)(v9 + 28);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 28);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoAssistantSchemaIdentifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
    v7[2] = v8[2];
    v11 = *(int *)(v9 + 28);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoAssistantSchemaIdentifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v8[2] = v9[2];
      v23 = *(int *)(v10 + 28);
      v24 = (char *)v8 + v23;
      v25 = (char *)v9 + v23;
      v26 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v8[2] = v9[2];
  v13 = *(int *)(v10 + 28);
  v14 = (char *)v8 + v13;
  v15 = (char *)v9 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAssistantSchemaIdentifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EE1088()
{
  __swift_get_extra_inhabitant_index_23Tm();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAssistantSchemaIdentifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EE10A0()
{
  __swift_store_extra_inhabitant_index_24Tm();
}

void sub_248EE10AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F0ABC8(a1, a2, a3, (uint64_t)&unk_2490F6130, &qword_254475AF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoAssistantToolSchemaDefinition(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[7];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v16 = *(int *)(v12 + 20);
      v17 = (_QWORD *)((char *)v10 + v16);
      v18 = (_QWORD *)((char *)v11 + v16);
      v19 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v17 = *(_OWORD *)v18;
        v17[2] = v18[2];
        v21 = *(int *)(v19 + 28);
        v22 = (char *)v17 + v21;
        v23 = (char *)v18 + v21;
        v24 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      v25 = *(int *)(v12 + 24);
      v26 = (char *)v10 + v25;
      v27 = (char *)v11 + v25;
      v28 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v29 = a3[8];
    v30 = a3[9];
    v31 = (uint64_t *)((char *)v4 + v29);
    v32 = (uint64_t *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = (char *)v4 + v30;
    v35 = (char *)a2 + v30;
    v36 = sub_2490E7ABC();
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    v37(v34, v35, v36);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoAssistantToolSchemaDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    {
      v8 = v6 + *(int *)(v7 + 28);
      v9 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + *(int *)(v5 + 24);
    v11 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  v12 = a1 + *(int *)(a2 + 36);
  v13 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for ToolKitProtoAssistantToolSchemaDefinition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[7];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = *(int *)(v11 + 20);
    v15 = (_QWORD *)((char *)v9 + v14);
    v16 = (_QWORD *)((char *)v10 + v14);
    v17 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[2] = v16[2];
      v19 = *(int *)(v17 + 28);
      v20 = (char *)v15 + v19;
      v21 = (char *)v16 + v19;
      v22 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    v23 = *(int *)(v11 + 24);
    v24 = (char *)v9 + v23;
    v25 = (char *)v10 + v23;
    v26 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v27 = a3[8];
  v28 = a3[9];
  v29 = (_QWORD *)((char *)a1 + v27);
  v30 = (_QWORD *)((char *)a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (char *)a1 + v28;
  v33 = (char *)a2 + v28;
  v34 = sub_2490E7ABC();
  v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
  swift_bridgeObjectRetain();
  v35(v32, v33, v34);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoAssistantToolSchemaDefinition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      goto LABEL_7;
    }
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = *(int *)(v9 + 20);
    v19 = (_QWORD *)((char *)v7 + v18);
    v20 = (_QWORD *)((char *)v8 + v18);
    v21 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
    v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
    if (v22)
    {
      if (!v23)
      {
        *v19 = *v20;
        v19[1] = v20[1];
        v19[2] = v20[2];
        v24 = *(int *)(v21 + 28);
        v25 = (char *)v19 + v24;
        v26 = (char *)v20 + v24;
        v27 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
LABEL_16:
        v37 = *(int *)(v9 + 24);
        v38 = (char *)v7 + v37;
        v39 = (char *)v8 + v37;
        v40 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v23)
      {
        *v19 = *v20;
        v19[1] = v20[1];
        v19[2] = v20[2];
        v49 = *(int *)(v21 + 28);
        v50 = (char *)v19 + v49;
        v51 = (char *)v20 + v49;
        v52 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
        goto LABEL_16;
      }
      sub_248E25C30((uint64_t)v19, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v12 = *(int *)(v9 + 20);
  v13 = (_QWORD *)((char *)v7 + v12);
  v14 = (_QWORD *)((char *)v8 + v12);
  v15 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v13[1] = v14[1];
    v13[2] = v14[2];
    v28 = *(int *)(v15 + 28);
    v29 = (char *)v13 + v28;
    v30 = (char *)v14 + v28;
    v31 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v32 = *(int *)(v9 + 24);
  v33 = (char *)v7 + v32;
  v34 = (char *)v8 + v32;
  v35 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_17:
  v41 = a3[8];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[9];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoAssistantToolSchemaDefinition(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[7];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = (_QWORD *)((char *)v9 + v12);
    v15 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[2] = v14[2];
      v17 = *(int *)(v15 + 28);
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    v21 = *(int *)(v10 + 24);
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v24 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v25 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoAssistantToolSchemaDefinition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      goto LABEL_7;
    }
    v19 = v9[1];
    *v8 = *v9;
    v8[1] = v19;
    swift_bridgeObjectRelease();
    v20 = *(int *)(v10 + 20);
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    v23 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
    if (v24)
    {
      if (!v25)
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        v26 = *(int *)(v23 + 28);
        v27 = &v21[v26];
        v28 = &v22[v26];
        v29 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
LABEL_16:
        v39 = *(int *)(v10 + 24);
        v40 = (char *)v8 + v39;
        v41 = (char *)v9 + v39;
        v42 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v25)
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        v53 = *(int *)(v23 + 28);
        v54 = &v21[v53];
        v55 = &v22[v53];
        v56 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v54, v55, v56);
        goto LABEL_16;
      }
      sub_248E25C30((uint64_t)v21, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_16;
  }
  if (v12)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_17;
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v13 = *(int *)(v10 + 20);
  v14 = (_QWORD *)((char *)v8 + v13);
  v15 = (_QWORD *)((char *)v9 + v13);
  v16 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v14[2] = v15[2];
    v30 = *(int *)(v16 + 28);
    v31 = (char *)v14 + v30;
    v32 = (char *)v15 + v30;
    v33 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v34 = *(int *)(v10 + 24);
  v35 = (char *)v8 + v34;
  v36 = (char *)v9 + v34;
  v37 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_17:
  v43 = a3[8];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v48 = a3[9];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAssistantToolSchemaDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EE1F0C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_80_2();
  if (v1)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_24_6();
    if (v1)
    {
      OUTLINED_FUNCTION_266_1();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_473_0();
    }
    v3 = OUTLINED_FUNCTION_94_1(v2);
    OUTLINED_FUNCTION_265(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAssistantToolSchemaDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EE1F74()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_43_5();
  if (v0)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_32_0();
    if (v0)
    {
      OUTLINED_FUNCTION_277_1();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_501_0();
    }
    v2 = OUTLINED_FUNCTION_44_5(v1);
    OUTLINED_FUNCTION_264(v2, v3, v4, v5);
  }
}

void sub_248EE1FCC()
{
  unint64_t v0;
  unint64_t v1;

  sub_248E0EBD8(319, &qword_254475BC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  if (v0 <= 0x3F)
  {
    sub_2490E7ABC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoAssistantTypeSchemaDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  int *v71;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BC0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_24:
      v59 = *(int *)(a3 + 20);
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      v62 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v71 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v11 = v71[5];
      v12 = (_QWORD *)((char *)a1 + v11);
      v13 = (_QWORD *)((char *)a2 + v11);
      v14 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v21 = v13[1];
        *v12 = *v13;
        v12[1] = v21;
        v22 = *(int *)(v14 + 20);
        __dst = (_QWORD *)((char *)v12 + v22);
        v23 = (_QWORD *)((char *)v13 + v22);
        v24 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v23;
          __dst[2] = v23[2];
          v31 = *(int *)(v24 + 28);
          v64 = (char *)__dst + v31;
          v32 = (char *)v23 + v31;
          v33 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v64, v32, v33);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v24);
        }
        v34 = *(int *)(v14 + 24);
        v35 = (char *)v12 + v34;
        v36 = (char *)v13 + v34;
        v37 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
      v38 = v71[6];
      v39 = (_QWORD *)((char *)a1 + v38);
      v40 = (_QWORD *)((char *)a2 + v38);
      v41 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
      {
LABEL_22:
        v51 = v40[1];
        *v39 = *v40;
        v39[1] = v51;
        v52 = v40[3];
        v39[2] = v40[2];
        v39[3] = v52;
        v39[4] = v40[4];
        v53 = *(int *)(v41 + 28);
        v67 = (char *)v40 + v53;
        __dstb = (char *)v39 + v53;
        v54 = sub_2490E7ABC();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v66(__dstb, v67, v54);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
        goto LABEL_23;
      }
    }
    else
    {
      v71 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v16 = v71[5];
      v17 = (_QWORD *)((char *)a1 + v16);
      v18 = (_QWORD *)((char *)a2 + v16);
      v19 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v26 = v18[1];
        *v17 = *v18;
        v17[1] = v26;
        v27 = *(int *)(v19 + 20);
        __dsta = (_QWORD *)((char *)v17 + v27);
        v28 = (_QWORD *)((char *)v18 + v27);
        v29 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dsta, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dsta = *(_OWORD *)v28;
          __dsta[2] = v28[2];
          v42 = *(int *)(v29 + 28);
          v65 = (char *)__dsta + v42;
          v43 = (char *)v28 + v42;
          v44 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v65, v43, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v29);
        }
        v45 = *(int *)(v19 + 24);
        v46 = (char *)v17 + v45;
        v47 = (char *)v18 + v45;
        v48 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      v49 = v71[6];
      v39 = (_QWORD *)((char *)a1 + v49);
      v40 = (_QWORD *)((char *)a2 + v49);
      v41 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
        goto LABEL_22;
    }
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
LABEL_23:
    v55 = v71[7];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    v58 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    goto LABEL_24;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for ToolKitProtoAssistantTypeSchemaDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
    else
      v6 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
    v7 = v6;
    v8 = a1 + *(int *)(v6 + 20);
    v9 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 20);
      v11 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
      {
        v12 = v10 + *(int *)(v11 + 28);
        v13 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      }
      v14 = v8 + *(int *)(v9 + 24);
      v15 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
    v16 = a1 + *(int *)(v7 + 24);
    v17 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
    if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v16 + *(int *)(v17 + 28);
      v19 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    }
    v20 = a1 + *(int *)(v7 + 28);
    v21 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  v22 = a1 + *(int *)(a2 + 20);
  v23 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
}

_QWORD *initializeWithCopy for ToolKitProtoAssistantTypeSchemaDefinition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  _QWORD *__dst;
  _QWORD *__dsta;
  int *__dstb;
  int *v70;

  v6 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v70 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v9 = v70[5];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v19 = v11[1];
        *v10 = *v11;
        v10[1] = v19;
        v20 = *(int *)(v12 + 20);
        __dst = (_QWORD *)((char *)v10 + v20);
        v21 = (_QWORD *)((char *)v11 + v20);
        v22 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v21;
          __dst[2] = v21[2];
          v29 = *(int *)(v22 + 28);
          v64 = (char *)__dst + v29;
          v30 = (char *)v21 + v29;
          v31 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v64, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v22);
        }
        v32 = *(int *)(v12 + 24);
        v33 = (char *)v10 + v32;
        v34 = (char *)v11 + v32;
        v35 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
      v36 = v70[6];
      v37 = (_QWORD *)((char *)a1 + v36);
      v38 = (_QWORD *)((char *)a2 + v36);
      v39 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
      {
LABEL_20:
        v49 = v38[1];
        *v37 = *v38;
        v37[1] = v49;
        v50 = v38[3];
        v37[2] = v38[2];
        v37[3] = v50;
        v37[4] = v38[4];
        v51 = *(int *)(v39 + 28);
        v63 = (char *)v38 + v51;
        v66 = (char *)v37 + v51;
        v52 = sub_2490E7ABC();
        __dstb = a3;
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53(v66, v63, v52);
        a3 = __dstb;
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
        goto LABEL_21;
      }
    }
    else
    {
      v70 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v14 = v70[5];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      v17 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v24 = v16[1];
        *v15 = *v16;
        v15[1] = v24;
        v25 = *(int *)(v17 + 20);
        __dsta = (_QWORD *)((char *)v15 + v25);
        v26 = (_QWORD *)((char *)v16 + v25);
        v27 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dsta, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dsta = *(_OWORD *)v26;
          __dsta[2] = v26[2];
          v40 = *(int *)(v27 + 28);
          v65 = (char *)__dsta + v40;
          v41 = (char *)v26 + v40;
          v42 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v65, v41, v42);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v27);
        }
        v43 = *(int *)(v17 + 24);
        v44 = (char *)v15 + v43;
        v45 = (char *)v16 + v43;
        v46 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      }
      v47 = v70[6];
      v37 = (_QWORD *)((char *)a1 + v47);
      v38 = (_QWORD *)((char *)a2 + v47);
      v39 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
        goto LABEL_20;
    }
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
LABEL_21:
    v54 = v70[7];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    goto LABEL_22;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BC0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_22:
  v58 = a3[5];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoAssistantTypeSchemaDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  int *v122;
  int *v123;
  int *v124;
  int *v125;
  int *v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v6 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        v10 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
        v11 = v10[5];
        v12 = (_QWORD *)((char *)a1 + v11);
        v13 = (_QWORD *)((char *)a2 + v11);
        v14 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          v122 = v10;
          v128 = a3;
          *v12 = *v13;
          v12[1] = v13[1];
          v29 = *(int *)(v14 + 20);
          v30 = (_QWORD *)((char *)v12 + v29);
          v31 = (_QWORD *)((char *)v13 + v29);
          v32 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
          {
            v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            *v30 = *v31;
            v30[1] = v31[1];
            v30[2] = v31[2];
            v49 = *(int *)(v32 + 28);
            v50 = (char *)v30 + v49;
            v51 = (char *)v31 + v49;
            v52 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
            __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
          }
          v53 = *(int *)(v14 + 24);
          v54 = (char *)v12 + v53;
          v55 = (char *)v13 + v53;
          v56 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
          v10 = v122;
          a3 = v128;
        }
        v57 = v10[6];
        v58 = (_QWORD *)((char *)a1 + v57);
        v59 = (_QWORD *)((char *)a2 + v57);
        v60 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
LABEL_33:
          *v58 = *v59;
          v58[1] = v59[1];
          v58[2] = v59[2];
          v58[3] = v59[3];
          v58[4] = v59[4];
          v76 = *(int *)(v60 + 28);
          v118 = (char *)v59 + v76;
          v120 = (char *)v58 + v76;
          v77 = sub_2490E7ABC();
          v126 = v10;
          v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v78(v120, v118, v77);
          v10 = v126;
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
          goto LABEL_34;
        }
      }
      else
      {
        v10 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
        v24 = v10[5];
        v25 = (_QWORD *)((char *)a1 + v24);
        v26 = (_QWORD *)((char *)a2 + v24);
        v27 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v123 = v10;
          v129 = a3;
          *v25 = *v26;
          v25[1] = v26[1];
          v39 = *(int *)(v27 + 20);
          v40 = (_QWORD *)((char *)v25 + v39);
          v41 = (_QWORD *)((char *)v26 + v39);
          v42 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
          {
            v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            *v40 = *v41;
            v40[1] = v41[1];
            v40[2] = v41[2];
            v66 = *(int *)(v42 + 28);
            v67 = (char *)v40 + v66;
            v68 = (char *)v41 + v66;
            v69 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v42);
          }
          v70 = *(int *)(v27 + 24);
          v71 = (char *)v25 + v70;
          v72 = (char *)v26 + v70;
          v73 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
          v10 = v123;
          a3 = v129;
        }
        v74 = v10[6];
        v58 = (_QWORD *)((char *)a1 + v74);
        v59 = (_QWORD *)((char *)a2 + v74);
        v60 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
          goto LABEL_33;
      }
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
LABEL_34:
      v79 = v10[7];
      v80 = (char *)a1 + v79;
      v81 = (char *)a2 + v79;
      v82 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_45;
    }
    goto LABEL_8;
  }
  if (!v8)
  {
    if (a1 == a2)
      goto LABEL_45;
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    v17 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v17 == 1)
    {
      v18 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v19 = v18[5];
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      v22 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v124 = v18;
        v130 = a3;
        *v20 = *v21;
        v20[1] = v21[1];
        v44 = *(int *)(v22 + 20);
        v45 = (_QWORD *)((char *)v20 + v44);
        v46 = (_QWORD *)((char *)v21 + v44);
        v47 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          *v45 = *v46;
          v45[1] = v46[1];
          v45[2] = v46[2];
          v83 = *(int *)(v47 + 28);
          v84 = (char *)v45 + v83;
          v85 = (char *)v46 + v83;
          v86 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
          __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
        }
        v18 = v124;
        a3 = v130;
        v87 = *(int *)(v22 + 24);
        v88 = (char *)v20 + v87;
        v89 = (char *)v21 + v87;
        v90 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      }
      v91 = v18[6];
      v92 = (_QWORD *)((char *)a1 + v91);
      v93 = (_QWORD *)((char *)a2 + v91);
      v94 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v94))
      {
LABEL_43:
        *v92 = *v93;
        v92[1] = v93[1];
        v92[2] = v93[2];
        v92[3] = v93[3];
        v92[4] = v93[4];
        v105 = *(int *)(v94 + 28);
        v119 = (char *)v93 + v105;
        v121 = (char *)v92 + v105;
        v127 = v18;
        v106 = sub_2490E7ABC();
        v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v108 = v106;
        v18 = v127;
        v107(v121, v119, v108);
        __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v94);
        goto LABEL_44;
      }
    }
    else
    {
      v18 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v34 = v18[5];
      v35 = (_QWORD *)((char *)a1 + v34);
      v36 = (_QWORD *)((char *)a2 + v34);
      v37 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v125 = v18;
        v131 = a3;
        *v35 = *v36;
        v35[1] = v36[1];
        v61 = *(int *)(v37 + 20);
        v62 = (_QWORD *)((char *)v35 + v61);
        v63 = (_QWORD *)((char *)v36 + v61);
        v64 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          *v62 = *v63;
          v62[1] = v63[1];
          v62[2] = v63[2];
          v95 = *(int *)(v64 + 28);
          v96 = (char *)v62 + v95;
          v97 = (char *)v63 + v95;
          v98 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
          __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
        }
        v18 = v125;
        a3 = v131;
        v99 = *(int *)(v37 + 24);
        v100 = (char *)v35 + v99;
        v101 = (char *)v36 + v99;
        v102 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v100, v101, v102);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
      }
      v103 = v18[6];
      v92 = (_QWORD *)((char *)a1 + v103);
      v93 = (_QWORD *)((char *)a2 + v103);
      v94 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v94))
        goto LABEL_43;
    }
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
LABEL_44:
    v109 = v18[7];
    v110 = (char *)a1 + v109;
    v111 = (char *)a2 + v109;
    v112 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
    swift_storeEnumTagMultiPayload();
    goto LABEL_45;
  }
  sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
LABEL_8:
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BC0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_45:
  v113 = *(int *)(a3 + 20);
  v114 = (char *)a1 + v113;
  v115 = (char *)a2 + v113;
  v116 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 24))(v114, v115, v116);
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoAssistantTypeSchemaDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v61;
  char *v62;
  _QWORD *__dst;
  _QWORD *__dsta;

  v6 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v9 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v10 = v9[5];
      v11 = (_OWORD *)((char *)a1 + v10);
      v12 = (_OWORD *)((char *)a2 + v10);
      v13 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *v11 = *v12;
        v20 = *(int *)(v13 + 20);
        __dst = (_QWORD *)((char *)v11 + v20);
        v21 = (_QWORD *)((char *)v12 + v20);
        v22 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v21;
          __dst[2] = v21[2];
          v28 = *(int *)(v22 + 28);
          v61 = (char *)__dst + v28;
          v29 = (char *)v21 + v28;
          v30 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v61, v29, v30);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v22);
        }
        v31 = *(int *)(v13 + 24);
        v32 = (char *)v11 + v31;
        v33 = (char *)v12 + v31;
        v34 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      v35 = v9[6];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      v38 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
LABEL_20:
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
        *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
        v48 = *(int *)(v38 + 28);
        v49 = &v36[v48];
        v50 = &v37[v48];
        v51 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
        goto LABEL_21;
      }
    }
    else
    {
      v9 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v15 = v9[5];
      v16 = (_OWORD *)((char *)a1 + v15);
      v17 = (_OWORD *)((char *)a2 + v15);
      v18 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        *v16 = *v17;
        v24 = *(int *)(v18 + 20);
        __dsta = (_QWORD *)((char *)v16 + v24);
        v25 = (_QWORD *)((char *)v17 + v24);
        v26 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dsta, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dsta = *(_OWORD *)v25;
          __dsta[2] = v25[2];
          v39 = *(int *)(v26 + 28);
          v62 = (char *)__dsta + v39;
          v40 = (char *)v25 + v39;
          v41 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v62, v40, v41);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v26);
        }
        v42 = *(int *)(v18 + 24);
        v43 = (char *)v16 + v42;
        v44 = (char *)v17 + v42;
        v45 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      }
      v46 = v9[6];
      v36 = (char *)a1 + v46;
      v37 = (char *)a2 + v46;
      v38 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
        goto LABEL_20;
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
LABEL_21:
    v52 = v9[7];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    v55 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    goto LABEL_22;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BC0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_22:
  v56 = *(int *)(a3 + 20);
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoAssistantTypeSchemaDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  _QWORD *__dst;
  _QWORD *__dsta;
  _QWORD *__dstb;
  _QWORD *__dstc;

  v6 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        v10 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
        v11 = v10[5];
        v12 = (_OWORD *)((char *)a1 + v11);
        v13 = (_OWORD *)((char *)a2 + v11);
        v14 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          *v12 = *v13;
          v29 = *(int *)(v14 + 20);
          __dst = (_QWORD *)((char *)v12 + v29);
          v30 = (_QWORD *)((char *)v13 + v29);
          v31 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
          {
            v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__dst = *(_OWORD *)v30;
            __dst[2] = v30[2];
            v46 = *(int *)(v31 + 28);
            v111 = (char *)__dst + v46;
            v47 = (char *)v30 + v46;
            v48 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v111, v47, v48);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v31);
          }
          v49 = *(int *)(v14 + 24);
          v50 = (char *)v12 + v49;
          v51 = (char *)v13 + v49;
          v52 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
        }
        v53 = v10[6];
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
        {
LABEL_33:
          *(_OWORD *)v54 = *(_OWORD *)v55;
          *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
          *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 24);
          v70 = *(int *)(v56 + 28);
          v71 = &v54[v70];
          v72 = &v55[v70];
          v73 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
          __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v56);
          goto LABEL_34;
        }
      }
      else
      {
        v10 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
        v24 = v10[5];
        v25 = (_OWORD *)((char *)a1 + v24);
        v26 = (_OWORD *)((char *)a2 + v24);
        v27 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          *v25 = *v26;
          v38 = *(int *)(v27 + 20);
          __dsta = (_QWORD *)((char *)v25 + v38);
          v39 = (_QWORD *)((char *)v26 + v38);
          v40 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
          {
            v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(__dsta, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__dsta = *(_OWORD *)v39;
            __dsta[2] = v39[2];
            v61 = *(int *)(v40 + 28);
            v112 = (char *)__dsta + v61;
            v62 = (char *)v39 + v61;
            v63 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v112, v62, v63);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v40);
          }
          v64 = *(int *)(v27 + 24);
          v65 = (char *)v25 + v64;
          v66 = (char *)v26 + v64;
          v67 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
        }
        v68 = v10[6];
        v54 = (char *)a1 + v68;
        v55 = (char *)a2 + v68;
        v56 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
          goto LABEL_33;
      }
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
LABEL_34:
      v74 = v10[7];
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      v77 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v75, v76, v77);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_45;
    }
    goto LABEL_8;
  }
  if (!v8)
  {
    if (a1 == a2)
      goto LABEL_45;
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    v17 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v17 == 1)
    {
      v18 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v19 = v18[5];
      v20 = (_OWORD *)((char *)a1 + v19);
      v21 = (_OWORD *)((char *)a2 + v19);
      v22 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        *v20 = *v21;
        v42 = *(int *)(v22 + 20);
        __dstb = (_QWORD *)((char *)v20 + v42);
        v43 = (_QWORD *)((char *)v21 + v42);
        v44 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dstb, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dstb = *(_OWORD *)v43;
          __dstb[2] = v43[2];
          v78 = *(int *)(v44 + 28);
          v113 = (char *)__dstb + v78;
          v79 = (char *)v43 + v78;
          v80 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v113, v79, v80);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v44);
        }
        v81 = *(int *)(v22 + 24);
        v82 = (char *)v20 + v81;
        v83 = (char *)v21 + v81;
        v84 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      }
      v85 = v18[6];
      v86 = (char *)a1 + v85;
      v87 = (char *)a2 + v85;
      v88 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
      {
LABEL_43:
        *(_OWORD *)v86 = *(_OWORD *)v87;
        *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
        *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
        v98 = *(int *)(v88 + 28);
        v99 = &v86[v98];
        v100 = &v87[v98];
        v101 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
        __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v88);
        goto LABEL_44;
      }
    }
    else
    {
      v18 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v33 = v18[5];
      v34 = (_OWORD *)((char *)a1 + v33);
      v35 = (_OWORD *)((char *)a2 + v33);
      v36 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *v34 = *v35;
        v57 = *(int *)(v36 + 20);
        __dstc = (_QWORD *)((char *)v34 + v57);
        v58 = (_QWORD *)((char *)v35 + v57);
        v59 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dstc, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dstc = *(_OWORD *)v58;
          __dstc[2] = v58[2];
          v89 = *(int *)(v59 + 28);
          v114 = (char *)__dstc + v89;
          v90 = (char *)v58 + v89;
          v91 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v114, v90, v91);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v59);
        }
        v92 = *(int *)(v36 + 24);
        v93 = (char *)v34 + v92;
        v94 = (char *)v35 + v92;
        v95 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
      }
      v96 = v18[6];
      v86 = (char *)a1 + v96;
      v87 = (char *)a2 + v96;
      v88 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
        goto LABEL_43;
    }
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
LABEL_44:
    v102 = v18[7];
    v103 = (char *)a1 + v102;
    v104 = (char *)a2 + v102;
    v105 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
    swift_storeEnumTagMultiPayload();
    goto LABEL_45;
  }
  sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
LABEL_8:
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BC0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_45:
  v106 = *(int *)(a3 + 20);
  v107 = (char *)a1 + v106;
  v108 = (char *)a2 + v106;
  v109 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 40))(v107, v108, v109);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAssistantTypeSchemaDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE493C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_2577E5BC0);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAssistantTypeSchemaDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE4954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_2577E5BC0);
}

void sub_248EE4960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, qword_2577E6B70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAssistantTypeSchemaDefinition.Entity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAssistantTypeSchemaDefinition.Entity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EE49B0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_299_0(a1, &qword_254475BC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_425_0();
    OUTLINED_FUNCTION_299_0(v2, &qword_254475BF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
    if (v3 <= 0x3F)
    {
      OUTLINED_FUNCTION_183_0();
      if (v4 <= 0x3F)
      {
        OUTLINED_FUNCTION_151_0();
        OUTLINED_FUNCTION_258_1();
      }
    }
  }
  OUTLINED_FUNCTION_293();
}

void _s7ToolKit41ToolKitProtoAssistantTypeSchemaDefinitionV6EntityVwCP_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;

  OUTLINED_FUNCTION_427();
  v3 = OUTLINED_FUNCTION_593(v1, v2);
  if ((v6 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_477();
  }
  else
  {
    v7 = v5;
    v8 = v4;
    v9 = v3;
    v10 = *(int *)(v5 + 20);
    v11 = (_QWORD *)((char *)v3 + v10);
    v12 = (_QWORD *)(v4 + v10);
    v13 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    OUTLINED_FUNCTION_189();
    if (OUTLINED_FUNCTION_49_5((uint64_t)v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
      OUTLINED_FUNCTION_34_6(v14);
    }
    else
    {
      v15 = v12[1];
      *v11 = *v12;
      v11[1] = v15;
      v16 = *(int *)(v13 + 20);
      v17 = (char *)v11 + v16;
      v18 = (char *)v12 + v16;
      type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      OUTLINED_FUNCTION_260_1();
      if (OUTLINED_FUNCTION_14_8())
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
        OUTLINED_FUNCTION_1_11(v19);
      }
      else
      {
        *(_OWORD *)v17 = *(_OWORD *)v18;
        *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
        v20 = (uint64_t)&v17[*(int *)(v0 + 28)];
        v21 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_46_3(v20, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16));
        OUTLINED_FUNCTION_11_6();
      }
      v22 = (uint64_t)v11 + *(int *)(v13 + 24);
      v23 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_148(v22, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16));
      OUTLINED_FUNCTION_54_3((uint64_t)v11);
    }
    v24 = *(int *)(v7 + 24);
    v25 = (_QWORD *)((char *)v9 + v24);
    v26 = (_QWORD *)(v8 + v24);
    v27 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
    if (OUTLINED_FUNCTION_49_5((uint64_t)v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
      OUTLINED_FUNCTION_34_6(v28);
    }
    else
    {
      v29 = v26[1];
      *v25 = *v26;
      v25[1] = v29;
      v30 = v26[3];
      v25[2] = v26[2];
      v25[3] = v30;
      v25[4] = v26[4];
      v31 = *(int *)(v27 + 28);
      v35 = (char *)v26 + v31;
      v36 = (char *)v25 + v31;
      v32 = OUTLINED_FUNCTION_63();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      OUTLINED_FUNCTION_189();
      OUTLINED_FUNCTION_236();
      OUTLINED_FUNCTION_70_2();
      v33(v36, v35, v32);
      OUTLINED_FUNCTION_54_3((uint64_t)v25);
    }
    v34 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_25_7(v34);
  }
  OUTLINED_FUNCTION_208();
}

uint64_t _s7ToolKit41ToolKitProtoAssistantTypeSchemaDefinitionV6EntityVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_539_0();
  v2 = v0 + *(int *)(v1 + 20);
  type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  if (!OUTLINED_FUNCTION_93_1(v2))
  {
    OUTLINED_FUNCTION_341_0();
    type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    if (!OUTLINED_FUNCTION_36_5())
    {
      v3 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_66_4(v3);
    }
    v4 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_116_1(v4);
  }
  v5 = v0 + *(int *)(v1 + 24);
  type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  if (!OUTLINED_FUNCTION_93_1(v5))
  {
    OUTLINED_FUNCTION_341_0();
    OUTLINED_FUNCTION_516_0();
    swift_bridgeObjectRelease();
    v6 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_116_1(v6);
  }
  OUTLINED_FUNCTION_63();
  v7 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_243_1(v7, v8, v9);
}

void _s7ToolKit41ToolKitProtoAssistantTypeSchemaDefinitionV6EntityVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;

  OUTLINED_FUNCTION_427();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  *v5 = *v3;
  v7 = *(int *)(v1 + 20);
  v8 = (_QWORD *)((char *)v5 + v7);
  v9 = (_QWORD *)((char *)v3 + v7);
  v10 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  OUTLINED_FUNCTION_189();
  if (OUTLINED_FUNCTION_49_5((uint64_t)v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_34_6(v11);
  }
  else
  {
    v12 = v9[1];
    *v8 = *v9;
    v8[1] = v12;
    v13 = *(int *)(v10 + 20);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    OUTLINED_FUNCTION_260_1();
    if (OUTLINED_FUNCTION_14_8())
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
      OUTLINED_FUNCTION_1_11(v16);
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
      v17 = (uint64_t)&v14[*(int *)(v0 + 28)];
      v18 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_46_3(v17, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16));
      OUTLINED_FUNCTION_11_6();
    }
    v19 = (uint64_t)v8 + *(int *)(v10 + 24);
    v20 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_148(v19, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16));
    OUTLINED_FUNCTION_54_3((uint64_t)v8);
  }
  v21 = *(int *)(v2 + 24);
  v22 = (_QWORD *)((char *)v6 + v21);
  v23 = (_QWORD *)((char *)v4 + v21);
  v24 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  if (OUTLINED_FUNCTION_49_5((uint64_t)v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    OUTLINED_FUNCTION_34_6(v25);
  }
  else
  {
    v26 = v23[1];
    *v22 = *v23;
    v22[1] = v26;
    v27 = v23[3];
    v22[2] = v23[2];
    v22[3] = v27;
    v22[4] = v23[4];
    v28 = *(int *)(v24 + 28);
    v32 = (char *)v23 + v28;
    v33 = (char *)v22 + v28;
    v29 = OUTLINED_FUNCTION_63();
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_236();
    OUTLINED_FUNCTION_70_2();
    v30(v33, v32, v29);
    OUTLINED_FUNCTION_54_3((uint64_t)v22);
  }
  v31 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_25_7(v31);
  OUTLINED_FUNCTION_208();
}

void _s7ToolKit41ToolKitProtoAssistantTypeSchemaDefinitionV6EntityVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;

  OUTLINED_FUNCTION_427();
  OUTLINED_FUNCTION_374_0(v7, v8);
  OUTLINED_FUNCTION_37();
  v9 = *(int *)(v2 + 20);
  v10 = (_QWORD *)(v0 + v9);
  v11 = (_QWORD *)(v1 + v9);
  v12 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v13 = OUTLINED_FUNCTION_35_4(v12);
  if (!(_DWORD)v4)
  {
    if ((_DWORD)v13)
    {
      OUTLINED_FUNCTION_146_2(v13, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_429_0();
    OUTLINED_FUNCTION_2();
    v19 = v3[5];
    v4 = (uint64_t)v10 + v19;
    v20 = (char *)v11 + v19;
    v21 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    v22 = OUTLINED_FUNCTION_19_7(v21);
    if (v6)
    {
      if (!(_DWORD)v22)
      {
        OUTLINED_FUNCTION_439_0();
        v24 = v4 + v23;
        v25 = &v20[v23];
        v26 = OUTLINED_FUNCTION_63();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        OUTLINED_FUNCTION_26_4();
LABEL_16:
        v31 = (uint64_t)v10 + v3[6];
        v32 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_70(v31, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 24));
        goto LABEL_17;
      }
    }
    else
    {
      if (!(_DWORD)v22)
      {
        OUTLINED_FUNCTION_439_0();
        v4 += v45;
        v46 = &v20[v45];
        v47 = OUTLINED_FUNCTION_63();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v4, v46, v47);
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_55_5(v22, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_3_9(v30);
    goto LABEL_16;
  }
  if ((_DWORD)v13)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_30_3(v18);
    goto LABEL_17;
  }
  *v10 = *v11;
  v10[1] = v11[1];
  v14 = v3[5];
  v15 = (_QWORD *)((char *)v10 + v14);
  v16 = (_QWORD *)((char *)v11 + v14);
  type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  OUTLINED_FUNCTION_260_1();
  if (OUTLINED_FUNCTION_14_8())
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_1_11(v17);
  }
  else
  {
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    v27 = (uint64_t)v15 + *(int *)(v5 + 28);
    v28 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_46_3(v27, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16));
    OUTLINED_FUNCTION_11_6();
  }
  v4 = (uint64_t)v10 + v3[6];
  v29 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_70(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16));
  OUTLINED_FUNCTION_69_3((uint64_t)v10);
LABEL_17:
  v33 = *(int *)(v2 + 24);
  v34 = (_QWORD *)(v0 + v33);
  v35 = (_QWORD *)(v1 + v33);
  v36 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v37 = OUTLINED_FUNCTION_35_4(v36);
  if (!(_DWORD)v4)
  {
    if (!(_DWORD)v37)
    {
      OUTLINED_FUNCTION_429_0();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_580(v35[2]);
      OUTLINED_FUNCTION_2();
      v34[3] = v35[3];
      v34[4] = v35[4];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_2();
      v43 = (uint64_t)v34 + v3[7];
      v44 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_70(v43, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 24));
      goto LABEL_23;
    }
    OUTLINED_FUNCTION_146_2(v37, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
    goto LABEL_22;
  }
  if ((_DWORD)v37)
  {
LABEL_22:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    OUTLINED_FUNCTION_30_3(v41);
    goto LABEL_23;
  }
  *v34 = *v35;
  v34[1] = v35[1];
  v34[2] = v35[2];
  v34[3] = v35[3];
  v34[4] = v35[4];
  v38 = v3[7];
  v48 = (char *)v35 + v38;
  v49 = (char *)v34 + v38;
  v39 = OUTLINED_FUNCTION_63();
  v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_70_2();
  v40(v49, v48, v39);
  OUTLINED_FUNCTION_69_3((uint64_t)v34);
LABEL_23:
  v42 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24));
  OUTLINED_FUNCTION_208();
}

void _s7ToolKit41ToolKitProtoAssistantTypeSchemaDefinitionV6EntityVwtk_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_7_0();
  v7 = OUTLINED_FUNCTION_349_0(v5, v6);
  v8 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(v7);
  if (OUTLINED_FUNCTION_49_5((uint64_t)v4))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_34_6(v9);
  }
  else
  {
    *v3 = *v4;
    v10 = *(int *)(v8 + 20);
    v11 = (char *)v3 + v10;
    v12 = (char *)v4 + v10;
    v13 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    if (OUTLINED_FUNCTION_12_10(v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
      OUTLINED_FUNCTION_1_11(v14);
    }
    else
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
      v15 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_15_2(v15);
      OUTLINED_FUNCTION_11_6();
    }
    v16 = (uint64_t)v3 + *(int *)(v8 + 24);
    v17 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_148(v16, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32));
    OUTLINED_FUNCTION_54_3((uint64_t)v3);
  }
  v18 = *(int *)(v2 + 24);
  v19 = v0 + v18;
  v20 = v1 + v18;
  v21 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  if (OUTLINED_FUNCTION_49_5(v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    OUTLINED_FUNCTION_34_6(v22);
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
    *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
    v23 = v19 + *(int *)(v21 + 28);
    v24 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_148(v23, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32));
    OUTLINED_FUNCTION_54_3(v19);
  }
  v25 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32));
  OUTLINED_FUNCTION_3_1();
}

void _s7ToolKit41ToolKitProtoAssistantTypeSchemaDefinitionV6EntityVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_372_0(v6, v7);
  v8 = *(int *)(v2 + 20);
  v9 = (_OWORD *)(v0 + v8);
  v10 = (_OWORD *)(v1 + v8);
  v11 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v12 = OUTLINED_FUNCTION_35_4(v11);
  if (!(_DWORD)v4)
  {
    if ((_DWORD)v12)
    {
      OUTLINED_FUNCTION_146_2(v12, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_251_1();
    LODWORD(v4) = (_DWORD)v9 + v3[5];
    v19 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    v20 = OUTLINED_FUNCTION_19_7(v19);
    if (v5)
    {
      if (!(_DWORD)v20)
      {
        OUTLINED_FUNCTION_558();
        v21 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_58_6(v21);
        OUTLINED_FUNCTION_26_4();
LABEL_16:
        v25 = (uint64_t)v9 + (int)v3[6];
        v26 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_70(v25, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40));
        goto LABEL_17;
      }
    }
    else
    {
      if (!(_DWORD)v20)
      {
        OUTLINED_FUNCTION_558();
        LODWORD(v4) = v4 + v39;
        v40 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_59_6(v40);
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_55_5(v20, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_3_9(v24);
    goto LABEL_16;
  }
  if ((_DWORD)v12)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_30_3(v18);
    goto LABEL_17;
  }
  *v9 = *v10;
  v13 = (int)v3[5];
  v14 = (char *)v9 + v13;
  v15 = (char *)v10 + v13;
  v16 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  if (OUTLINED_FUNCTION_12_10(v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_1_11(v17);
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    v22 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_15_2(v22);
    OUTLINED_FUNCTION_11_6();
  }
  v4 = (uint64_t)v9 + (int)v3[6];
  v23 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_70(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32));
  OUTLINED_FUNCTION_69_3((uint64_t)v9);
LABEL_17:
  v27 = *(int *)(v2 + 24);
  v28 = v0 + v27;
  v29 = v1 + v27;
  v30 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v31 = OUTLINED_FUNCTION_35_4(v30);
  if (!(_DWORD)v4)
  {
    if (!(_DWORD)v31)
    {
      OUTLINED_FUNCTION_251_1();
      OUTLINED_FUNCTION_309_0();
      v36 = *(_QWORD *)(v29 + 32);
      *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
      *(_QWORD *)(v28 + 32) = v36;
      swift_bridgeObjectRelease();
      v37 = v28 + (int)v3[7];
      v38 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_70(v37, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40));
      goto LABEL_23;
    }
    OUTLINED_FUNCTION_146_2(v31, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
    goto LABEL_22;
  }
  if ((_DWORD)v31)
  {
LABEL_22:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    OUTLINED_FUNCTION_30_3(v34);
    goto LABEL_23;
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
  v32 = v28 + (int)v3[7];
  v33 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_70(v32, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32));
  OUTLINED_FUNCTION_69_3(v28);
LABEL_23:
  v35 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 40));
  OUTLINED_FUNCTION_3_1();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_174Tm()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v1)
  {
    OUTLINED_FUNCTION_45_6(*v0);
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_24_6();
    if (v1)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
      OUTLINED_FUNCTION_24_6();
      if (v3)
      {
        OUTLINED_FUNCTION_217_0();
      }
      else
      {
        OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_266_1();
      }
    }
    v4 = OUTLINED_FUNCTION_94_1(v2);
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_175Tm()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v0)
  {
    OUTLINED_FUNCTION_380_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_32_0();
    if (v0)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
      OUTLINED_FUNCTION_32_0();
      if (v2)
      {
        OUTLINED_FUNCTION_225_0();
      }
      else
      {
        OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_277_1();
      }
    }
    v3 = OUTLINED_FUNCTION_44_5(v1);
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoAssistantTypeSchemaDefinitionKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  _QWORD *__dst;
  _QWORD *__dsta;
  int *__dstb;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v8 = v7[5];
      v9 = (_QWORD *)((char *)a1 + v8);
      v10 = (_QWORD *)((char *)a2 + v8);
      v11 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v19 = v10[1];
        *v9 = *v10;
        v9[1] = v19;
        v20 = *(int *)(v11 + 20);
        __dst = (_QWORD *)((char *)v9 + v20);
        v21 = (_QWORD *)((char *)v10 + v20);
        v22 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v21;
          __dst[2] = v21[2];
          v29 = *(int *)(v22 + 28);
          v61 = (char *)__dst + v29;
          v30 = (char *)v21 + v29;
          v31 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v61, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v22);
        }
        v32 = *(int *)(v11 + 24);
        v33 = (char *)v9 + v32;
        v34 = (char *)v10 + v32;
        v35 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
      v36 = v7[6];
      v37 = (_QWORD *)((char *)a1 + v36);
      v38 = (_QWORD *)((char *)a2 + v36);
      v39 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
      {
LABEL_20:
        v49 = v38[1];
        *v37 = *v38;
        v37[1] = v49;
        v50 = v38[3];
        v37[2] = v38[2];
        v37[3] = v50;
        v37[4] = v38[4];
        v51 = *(int *)(v39 + 28);
        v60 = (char *)v38 + v51;
        v63 = (char *)v37 + v51;
        __dstb = v7;
        v52 = sub_2490E7ABC();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54 = v52;
        v7 = __dstb;
        v53(v63, v60, v54);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
        goto LABEL_21;
      }
    }
    else
    {
      v7 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v14 = v7[5];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      v17 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v24 = v16[1];
        *v15 = *v16;
        v15[1] = v24;
        v25 = *(int *)(v17 + 20);
        __dsta = (_QWORD *)((char *)v15 + v25);
        v26 = (_QWORD *)((char *)v16 + v25);
        v27 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(__dsta, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dsta = *(_OWORD *)v26;
          __dsta[2] = v26[2];
          v40 = *(int *)(v27 + 28);
          v62 = (char *)__dsta + v40;
          v41 = (char *)v26 + v40;
          v42 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v62, v41, v42);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v27);
        }
        v43 = *(int *)(v17 + 24);
        v44 = (char *)v15 + v43;
        v45 = (char *)v16 + v43;
        v46 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      }
      v47 = v7[6];
      v37 = (_QWORD *)((char *)a1 + v47);
      v38 = (_QWORD *)((char *)a2 + v47);
      v39 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
        goto LABEL_20;
    }
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
LABEL_21:
    v55 = v7[7];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    v58 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  v13 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for ToolKitProtoAssistantTypeSchemaDefinitionKind(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
    v3 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
  else
    v3 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
  v4 = v3;
  v5 = a1 + *(int *)(v3 + 20);
  v6 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    {
      v9 = v7 + *(int *)(v8 + 28);
      v10 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
    v11 = v5 + *(int *)(v6 + 24);
    v12 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + *(int *)(v4 + 24);
  v14 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v13 + *(int *)(v14 + 28);
    v16 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  v17 = a1 + *(int *)(v4 + 28);
  v18 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

_QWORD *initializeWithCopy for ToolKitProtoAssistantTypeSchemaDefinitionKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v60;
  char *v61;
  int *v62;
  int *v63;
  int *v64;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
    v6 = v5[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v62 = v5;
      v16 = v8[1];
      *v7 = *v8;
      v7[1] = v16;
      v17 = *(int *)(v9 + 20);
      v18 = (_QWORD *)((char *)v7 + v17);
      v19 = (_QWORD *)((char *)v8 + v17);
      v20 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v18 = *(_OWORD *)v19;
        v18[2] = v19[2];
        v28 = *(int *)(v20 + 28);
        v29 = (char *)v18 + v28;
        v30 = (char *)v19 + v28;
        v31 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
      v32 = *(int *)(v9 + 24);
      v33 = (char *)v7 + v32;
      v34 = (char *)v8 + v32;
      v35 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      v5 = v62;
    }
    v36 = v5[6];
    v37 = (_QWORD *)((char *)a1 + v36);
    v38 = (_QWORD *)((char *)a2 + v36);
    v39 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
    {
LABEL_18:
      v64 = v5;
      v50 = v38[1];
      *v37 = *v38;
      v37[1] = v50;
      v51 = v38[3];
      v37[2] = v38[2];
      v37[3] = v51;
      v37[4] = v38[4];
      v52 = *(int *)(v39 + 28);
      v60 = (char *)v38 + v52;
      v61 = (char *)v37 + v52;
      v53 = sub_2490E7ABC();
      v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
      v5 = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v61, v60, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
      goto LABEL_19;
    }
  }
  else
  {
    v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
    v11 = v5[5];
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v63 = v5;
      v22 = v13[1];
      *v12 = *v13;
      v12[1] = v22;
      v23 = *(int *)(v14 + 20);
      v24 = (_QWORD *)((char *)v12 + v23);
      v25 = (_QWORD *)((char *)v13 + v23);
      v26 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v24 = *(_OWORD *)v25;
        v24[2] = v25[2];
        v40 = *(int *)(v26 + 28);
        v41 = (char *)v24 + v40;
        v42 = (char *)v25 + v40;
        v43 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      v44 = *(int *)(v14 + 24);
      v45 = (char *)v12 + v44;
      v46 = (char *)v13 + v44;
      v47 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      v5 = v63;
    }
    v48 = v5[6];
    v37 = (_QWORD *)((char *)a1 + v48);
    v38 = (_QWORD *)((char *)a2 + v48);
    v39 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
      goto LABEL_18;
  }
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
  memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
LABEL_19:
  v55 = v5[7];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoAssistantTypeSchemaDefinitionKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v56;
  char *v57;
  int *v58;
  int *v59;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v6 = v5[5];
      v7 = (_QWORD *)((char *)a1 + v6);
      v8 = (_QWORD *)((char *)a2 + v6);
      v9 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v58 = v5;
        *v7 = *v8;
        v7[1] = v8[1];
        v16 = *(int *)(v9 + 20);
        v17 = (_QWORD *)((char *)v7 + v16);
        v18 = (_QWORD *)((char *)v8 + v16);
        v19 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          *v17 = *v18;
          v17[1] = v18[1];
          v17[2] = v18[2];
          v26 = *(int *)(v19 + 28);
          v27 = (char *)v17 + v26;
          v28 = (char *)v18 + v26;
          v29 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
        }
        v30 = *(int *)(v9 + 24);
        v31 = (char *)v7 + v30;
        v32 = (char *)v8 + v30;
        v33 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
        v5 = v58;
      }
      v34 = v5[6];
      v35 = (_QWORD *)((char *)a1 + v34);
      v36 = (_QWORD *)((char *)a2 + v34);
      v37 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
      {
LABEL_19:
        *v35 = *v36;
        v35[1] = v36[1];
        v35[2] = v36[2];
        v35[3] = v36[3];
        v35[4] = v36[4];
        v48 = *(int *)(v37 + 28);
        v56 = (char *)v36 + v48;
        v57 = (char *)v35 + v48;
        v49 = sub_2490E7ABC();
        v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50(v57, v56, v49);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
        goto LABEL_20;
      }
    }
    else
    {
      v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v11 = v5[5];
      v12 = (_QWORD *)((char *)a1 + v11);
      v13 = (_QWORD *)((char *)a2 + v11);
      v14 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v59 = v5;
        *v12 = *v13;
        v12[1] = v13[1];
        v21 = *(int *)(v14 + 20);
        v22 = (_QWORD *)((char *)v12 + v21);
        v23 = (_QWORD *)((char *)v13 + v21);
        v24 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          *v22 = *v23;
          v22[1] = v23[1];
          v22[2] = v23[2];
          v38 = *(int *)(v24 + 28);
          v39 = (char *)v22 + v38;
          v40 = (char *)v23 + v38;
          v41 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
        }
        v42 = *(int *)(v14 + 24);
        v43 = (char *)v12 + v42;
        v44 = (char *)v13 + v42;
        v45 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
        v5 = v59;
      }
      v46 = v5[6];
      v35 = (_QWORD *)((char *)a1 + v46);
      v36 = (_QWORD *)((char *)a2 + v46);
      v37 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
        goto LABEL_19;
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
LABEL_20:
    v51 = v5[7];
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    v54 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for ToolKitProtoAssistantTypeSchemaDefinitionKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v55;
  char *v56;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
    v6 = v5[5];
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (_OWORD *)((char *)a2 + v6);
    v9 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      *v7 = *v8;
      v16 = *(int *)(v9 + 20);
      v17 = (_QWORD *)((char *)v7 + v16);
      v18 = (_QWORD *)((char *)v8 + v16);
      v19 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v17 = *(_OWORD *)v18;
        v17[2] = v18[2];
        v26 = *(int *)(v19 + 28);
        v55 = (char *)v17 + v26;
        v27 = (char *)v18 + v26;
        v28 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v55, v27, v28);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      v29 = *(int *)(v9 + 24);
      v30 = (char *)v7 + v29;
      v31 = (char *)v8 + v29;
      v32 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
    v33 = v5[6];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
    {
LABEL_18:
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
      *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
      v46 = *(int *)(v36 + 28);
      v47 = &v34[v46];
      v48 = &v35[v46];
      v49 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
      goto LABEL_19;
    }
  }
  else
  {
    v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
    v11 = v5[5];
    v12 = (_OWORD *)((char *)a1 + v11);
    v13 = (_OWORD *)((char *)a2 + v11);
    v14 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v12 = *v13;
      v21 = *(int *)(v14 + 20);
      v22 = (_QWORD *)((char *)v12 + v21);
      v23 = (_QWORD *)((char *)v13 + v21);
      v24 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v22 = *(_OWORD *)v23;
        v22[2] = v23[2];
        v37 = *(int *)(v24 + 28);
        v56 = (char *)v22 + v37;
        v38 = (char *)v23 + v37;
        v39 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v56, v38, v39);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      v40 = *(int *)(v14 + 24);
      v41 = (char *)v12 + v40;
      v42 = (char *)v13 + v40;
      v43 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    v44 = v5[6];
    v34 = (char *)a1 + v44;
    v35 = (char *)a2 + v44;
    v36 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
      goto LABEL_18;
  }
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
  memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_19:
  v50 = v5[7];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoAssistantTypeSchemaDefinitionKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v55;
  char *v56;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
      v6 = v5[5];
      v7 = (_OWORD *)((char *)a1 + v6);
      v8 = (_OWORD *)((char *)a2 + v6);
      v9 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        *v7 = *v8;
        v16 = *(int *)(v9 + 20);
        v17 = (_QWORD *)((char *)v7 + v16);
        v18 = (_QWORD *)((char *)v8 + v16);
        v19 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v17 = *(_OWORD *)v18;
          v17[2] = v18[2];
          v26 = *(int *)(v19 + 28);
          v55 = (char *)v17 + v26;
          v27 = (char *)v18 + v26;
          v28 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v55, v27, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
        }
        v29 = *(int *)(v9 + 24);
        v30 = (char *)v7 + v29;
        v31 = (char *)v8 + v29;
        v32 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      }
      v33 = v5[6];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
      {
LABEL_19:
        *(_OWORD *)v34 = *(_OWORD *)v35;
        *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
        *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
        v46 = *(int *)(v36 + 28);
        v47 = &v34[v46];
        v48 = &v35[v46];
        v49 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
        goto LABEL_20;
      }
    }
    else
    {
      v5 = (int *)type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
      v11 = v5[5];
      v12 = (_OWORD *)((char *)a1 + v11);
      v13 = (_OWORD *)((char *)a2 + v11);
      v14 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        *v12 = *v13;
        v21 = *(int *)(v14 + 20);
        v22 = (_QWORD *)((char *)v12 + v21);
        v23 = (_QWORD *)((char *)v13 + v21);
        v24 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v22 = *(_OWORD *)v23;
          v22[2] = v23[2];
          v37 = *(int *)(v24 + 28);
          v56 = (char *)v22 + v37;
          v38 = (char *)v23 + v37;
          v39 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v56, v38, v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
        }
        v40 = *(int *)(v14 + 24);
        v41 = (char *)v12 + v40;
        v42 = (char *)v13 + v40;
        v43 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
      v44 = v5[6];
      v34 = (char *)a1 + v44;
      v35 = (char *)a2 + v44;
      v36 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
        goto LABEL_19;
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BF0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_20:
    v50 = v5[7];
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    v53 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_248EE71F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EE7204(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

void sub_248EE7204(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  a4(319);
  if (v6 <= 0x3F)
  {
    a5(319);
    if (v7 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      OUTLINED_FUNCTION_258_1();
    }
  }
  OUTLINED_FUNCTION_390_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoSystemToolProtocol(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475CA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v10 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
          v11 = (char *)a1 + v10;
          v12 = (char *)a2 + v10;
          v13 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
          goto LABEL_23;
        case 1u:
          *a1 = *a2;
          v14 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          v17 = sub_2490E7ABC();
          v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(v15, v16, v17);
          goto LABEL_23;
        case 2u:
          *a1 = *a2;
          v19 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
          v20 = (char *)a1 + v19;
          v21 = (char *)a2 + v19;
          v22 = sub_2490E7ABC();
          v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v20, v21, v22);
          goto LABEL_23;
        case 3u:
          v24 = a2[1];
          *a1 = *a2;
          a1[1] = v24;
          v25 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
          v26 = (char *)a1 + v25;
          v27 = (char *)a2 + v25;
          v28 = sub_2490E7ABC();
          v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v29(v26, v27, v28);
          goto LABEL_23;
        case 4u:
          v30 = a2[1];
          *a1 = *a2;
          a1[1] = v30;
          v31 = a2[3];
          a1[2] = a2[2];
          a1[3] = v31;
          v32 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
          v33 = (char *)a1 + v32;
          v34 = (char *)a2 + v32;
          v35 = sub_2490E7ABC();
          v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v36(v33, v34, v35);
          goto LABEL_23;
        case 5u:
          v37 = a2[1];
          *a1 = *a2;
          a1[1] = v37;
          v38 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
          v39 = (char *)a1 + v38;
          v40 = (char *)a2 + v38;
          v41 = sub_2490E7ABC();
          v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v39, v40, v41);
          goto LABEL_23;
        case 6u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
          v43 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
          v44 = (char *)a1 + v43;
          v45 = (char *)a2 + v43;
          v46 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
          goto LABEL_23;
        case 7u:
          v47 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v47))
          {
            v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            v60 = a2[1];
            *a1 = *a2;
            a1[1] = v60;
            v61 = *(int *)(v47 + 20);
            v62 = (uint64_t *)((char *)a1 + v61);
            v63 = (uint64_t *)((char *)a2 + v61);
            v64 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
            {
              v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
              memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v62 = *(_OWORD *)v63;
              v62[2] = v63[2];
              v66 = *(int *)(v64 + 28);
              v67 = (char *)v62 + v66;
              v68 = (char *)v63 + v66;
              v69 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
              __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
            }
            v70 = *(int *)(v47 + 24);
            v71 = (char *)a1 + v70;
            v72 = (char *)a2 + v70;
            v73 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v47);
          }
          v74 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
          v75 = (char *)a1 + v74;
          v76 = (char *)a2 + v74;
          v77 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v75, v76, v77);
          goto LABEL_23;
        case 8u:
          v49 = a2[1];
          *a1 = *a2;
          a1[1] = v49;
          v50 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
          v51 = (char *)a1 + v50;
          v52 = (char *)a2 + v50;
          v53 = sub_2490E7ABC();
          v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
          swift_bridgeObjectRetain();
          v54(v51, v52, v53);
          goto LABEL_23;
        case 9u:
          *a1 = *a2;
          v55 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
          v56 = (char *)a1 + v55;
          v57 = (char *)a2 + v55;
          v58 = sub_2490E7ABC();
          v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v59(v56, v57, v58);
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v78 = *(int *)(a3 + 20);
    v79 = (char *)a1 + v78;
    v80 = (char *)a2 + v78;
    v81 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoSystemToolProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0);
        goto LABEL_17;
      case 1u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0);
        goto LABEL_17;
      case 2u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0);
        goto LABEL_17;
      case 3u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0);
        goto LABEL_17;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        goto LABEL_18;
      case 5u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0);
        goto LABEL_17;
      case 6u:
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0);
        goto LABEL_17;
      case 7u:
        v7 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (!__swift_getEnumTagSinglePayload(a1, 1, v7))
        {
          swift_bridgeObjectRelease();
          v8 = a1 + *(int *)(v7 + 20);
          v9 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
          {
            v10 = v8 + *(int *)(v9 + 28);
            v11 = sub_2490E7ABC();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          }
          v12 = a1 + *(int *)(v7 + 24);
          v13 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0);
        goto LABEL_17;
      case 8u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0);
        goto LABEL_17;
      case 9u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0);
LABEL_17:
        v6 = *(int *)(v5 + 20);
LABEL_18:
        v14 = a1 + v6;
        v15 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        break;
      default:
        break;
    }
  }
  v16 = a1 + *(int *)(a2 + 20);
  v17 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
}

_BYTE *initializeWithCopy for ToolKitProtoSystemToolProtocol(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  void (*v40)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  void (*v52)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  void (*v57)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;

  v6 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475CA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        goto LABEL_21;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v12 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = sub_2490E7ABC();
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        goto LABEL_21;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v17 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = sub_2490E7ABC();
        v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        goto LABEL_21;
      case 3u:
        v22 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v22;
        v23 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = sub_2490E7ABC();
        v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        goto LABEL_21;
      case 4u:
        v28 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v28;
        v29 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v29;
        v30 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        v31 = &a1[v30];
        v32 = &a2[v30];
        v33 = sub_2490E7ABC();
        v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        goto LABEL_21;
      case 5u:
        v35 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v35;
        v36 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = sub_2490E7ABC();
        v40 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
        goto LABEL_21;
      case 6u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
        v41 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
        goto LABEL_21;
      case 7u:
        v45 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v58 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v58;
          v59 = *(int *)(v45 + 20);
          v60 = &a1[v59];
          v61 = &a2[v59];
          v62 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
          {
            v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v60 = *(_OWORD *)v61;
            v60[2] = v61[2];
            v64 = *(int *)(v62 + 28);
            v65 = (char *)v60 + v64;
            v66 = (char *)v61 + v64;
            v67 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
            __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
          }
          v68 = *(int *)(v45 + 24);
          v69 = &a1[v68];
          v70 = &a2[v68];
          v71 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
        }
        v72 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
        v73 = &a1[v72];
        v74 = &a2[v72];
        v75 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
        goto LABEL_21;
      case 8u:
        v47 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v47;
        v48 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
        v49 = &a1[v48];
        v50 = &a2[v48];
        v51 = sub_2490E7ABC();
        v52 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        goto LABEL_21;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v53 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
        v54 = &a1[v53];
        v55 = &a2[v53];
        v56 = sub_2490E7ABC();
        v57 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v54, v55, v56);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v76 = *(int *)(a3 + 20);
  v77 = &a1[v76];
  v78 = &a2[v76];
  v79 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoSystemToolProtocol(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v6 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload(a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v9 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
          v10 = a1 + v9;
          v11 = a2 + v9;
          v12 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
          goto LABEL_41;
        case 1u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v18 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
          v19 = a1 + v18;
          v20 = a2 + v18;
          v21 = sub_2490E7ABC();
          v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v22(v19, v20, v21);
          goto LABEL_41;
        case 2u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v23 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
          v24 = a1 + v23;
          v25 = a2 + v23;
          v26 = sub_2490E7ABC();
          v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v24, v25, v26);
          goto LABEL_41;
        case 3u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v28 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
          v29 = a1 + v28;
          v30 = a2 + v28;
          v31 = sub_2490E7ABC();
          v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v29, v30, v31);
          goto LABEL_41;
        case 4u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          v33 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
          v34 = a1 + v33;
          v35 = a2 + v33;
          v36 = sub_2490E7ABC();
          v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v37(v34, v35, v36);
          goto LABEL_41;
        case 5u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v38 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
          v39 = a1 + v38;
          v40 = a2 + v38;
          v41 = sub_2490E7ABC();
          v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v39, v40, v41);
          goto LABEL_41;
        case 6u:
          v43 = *(_DWORD *)a2;
          *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
          *(_DWORD *)a1 = v43;
          v44 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
          v45 = a1 + v44;
          v46 = a2 + v44;
          v47 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
          goto LABEL_41;
        case 7u:
          v48 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
          if (__swift_getEnumTagSinglePayload(a2, 1, v48))
          {
            v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            v102 = *(int *)(v48 + 20);
            v103 = (_QWORD *)(a1 + v102);
            v104 = (_QWORD *)(a2 + v102);
            v105 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105))
            {
              v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
              memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
            }
            else
            {
              *v103 = *v104;
              v103[1] = v104[1];
              v103[2] = v104[2];
              v112 = *(int *)(v105 + 28);
              v113 = (char *)v103 + v112;
              v114 = (char *)v104 + v112;
              v115 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
              __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v105);
            }
            v116 = *(int *)(v48 + 24);
            v117 = a1 + v116;
            v118 = a2 + v116;
            v119 = sub_2490E7ABC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v117, v118, v119);
            __swift_storeEnumTagSinglePayload(a1, 0, 1, v48);
          }
          v120 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
          v121 = a1 + v120;
          v122 = a2 + v120;
          v123 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
          goto LABEL_41;
        case 8u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v50 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
          v51 = a1 + v50;
          v52 = a2 + v50;
          v53 = sub_2490E7ABC();
          v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
          swift_bridgeObjectRetain();
          v54(v51, v52, v53);
          goto LABEL_41;
        case 9u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v55 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
          v56 = a1 + v55;
          v57 = a2 + v55;
          v58 = sub_2490E7ABC();
          v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v59(v56, v57, v58);
LABEL_41:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
      goto LABEL_47;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
LABEL_7:
    v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475CA0) - 8);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v13 + 64));
    goto LABEL_47;
  }
  if (a1 != a2)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v14 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
        v15 = a1 + v14;
        v16 = a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
        break;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v60 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
        v61 = a1 + v60;
        v62 = a2 + v60;
        v63 = sub_2490E7ABC();
        v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v64(v61, v62, v63);
        break;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v65 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
        v66 = a1 + v65;
        v67 = a2 + v65;
        v68 = sub_2490E7ABC();
        v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
        swift_bridgeObjectRetain();
        v69(v66, v67, v68);
        break;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v70 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
        v71 = a1 + v70;
        v72 = a2 + v70;
        v73 = sub_2490E7ABC();
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v71, v72, v73);
        break;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        v75 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        v76 = a1 + v75;
        v77 = a2 + v75;
        v78 = sub_2490E7ABC();
        v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v79(v76, v77, v78);
        break;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v80 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
        v81 = a1 + v80;
        v82 = a2 + v80;
        v83 = sub_2490E7ABC();
        v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        v84(v81, v82, v83);
        break;
      case 6u:
        v85 = *(_DWORD *)a2;
        *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
        *(_DWORD *)a1 = v85;
        v86 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
        v87 = a1 + v86;
        v88 = a2 + v86;
        v89 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
        break;
      case 7u:
        v90 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload(a2, 1, v90))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v107 = *(int *)(v90 + 20);
          v108 = (_QWORD *)(a1 + v107);
          v109 = (_QWORD *)(a2 + v107);
          v110 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
          {
            v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          }
          else
          {
            *v108 = *v109;
            v108[1] = v109[1];
            v108[2] = v109[2];
            v124 = *(int *)(v110 + 28);
            v125 = (char *)v108 + v124;
            v126 = (char *)v109 + v124;
            v127 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
            __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v110);
          }
          v128 = *(int *)(v90 + 24);
          v129 = a1 + v128;
          v130 = a2 + v128;
          v131 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v90);
        }
        v132 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
        v133 = a1 + v132;
        v134 = a2 + v132;
        v135 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
        break;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v92 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
        v93 = a1 + v92;
        v94 = a2 + v92;
        v95 = sub_2490E7ABC();
        v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
        swift_bridgeObjectRetain();
        v96(v93, v94, v95);
        break;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v97 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
        v98 = a1 + v97;
        v99 = a2 + v97;
        v100 = sub_2490E7ABC();
        v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
        swift_bridgeObjectRetain();
        v101(v98, v99, v100);
        break;
      default:
        v13 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_47:
  v136 = *(int *)(a3 + 20);
  v137 = a1 + v136;
  v138 = a2 + v136;
  v139 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 24))(v137, v138, v139);
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoSystemToolProtocol(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;

  v6 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475CA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        goto LABEL_21;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v12 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        goto LABEL_21;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v16 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        goto LABEL_21;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v20 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
        v21 = &a1[v20];
        v22 = &a2[v20];
        v23 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        goto LABEL_21;
      case 4u:
        v24 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v24;
        v25 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        goto LABEL_21;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v29 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
        v30 = &a1[v29];
        v31 = &a2[v29];
        v32 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        goto LABEL_21;
      case 6u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
        v33 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        goto LABEL_21;
      case 7u:
        v37 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v37))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v47 = *(int *)(v37 + 20);
          v48 = &a1[v47];
          v49 = &a2[v47];
          v50 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
          {
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v48 = *(_OWORD *)v49;
            v48[2] = v49[2];
            v52 = *(int *)(v50 + 28);
            v53 = (char *)v48 + v52;
            v54 = (char *)v49 + v52;
            v55 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
            __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
          }
          v56 = *(int *)(v37 + 24);
          v57 = &a1[v56];
          v58 = &a2[v56];
          v59 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v37);
        }
        v60 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
        v61 = &a1[v60];
        v62 = &a2[v60];
        v63 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        goto LABEL_21;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v39 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
        goto LABEL_21;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v43 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
        v44 = &a1[v43];
        v45 = &a2[v43];
        v46 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v64 = *(int *)(a3 + 20);
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoSystemToolProtocol(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v6 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload(a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v9 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
          v10 = a1 + v9;
          v11 = a2 + v9;
          v12 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
          goto LABEL_41;
        case 1u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v18 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
          v19 = a1 + v18;
          v20 = a2 + v18;
          v21 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          goto LABEL_41;
        case 2u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v22 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
          v23 = a1 + v22;
          v24 = a2 + v22;
          v25 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
          goto LABEL_41;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v26 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
          v27 = a1 + v26;
          v28 = a2 + v26;
          v29 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
          goto LABEL_41;
        case 4u:
          v30 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v30;
          v31 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
          v32 = a1 + v31;
          v33 = a2 + v31;
          v34 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
          goto LABEL_41;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v35 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
          v36 = a1 + v35;
          v37 = a2 + v35;
          v38 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
          goto LABEL_41;
        case 6u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
          v39 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
          v40 = a1 + v39;
          v41 = a2 + v39;
          v42 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
          goto LABEL_41;
        case 7u:
          v43 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
          if (__swift_getEnumTagSinglePayload(a2, 1, v43))
          {
            v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v88 = *(int *)(v43 + 20);
            v89 = (_QWORD *)(a1 + v88);
            v90 = (_QWORD *)(a2 + v88);
            v91 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
            {
              v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
              memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v89 = *(_OWORD *)v90;
              v89[2] = v90[2];
              v98 = *(int *)(v91 + 28);
              v99 = (char *)v89 + v98;
              v100 = (char *)v90 + v98;
              v101 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
              __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v91);
            }
            v102 = *(int *)(v43 + 24);
            v103 = a1 + v102;
            v104 = a2 + v102;
            v105 = sub_2490E7ABC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
            __swift_storeEnumTagSinglePayload(a1, 0, 1, v43);
          }
          v106 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
          v107 = a1 + v106;
          v108 = a2 + v106;
          v109 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
          goto LABEL_41;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v45 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
          v46 = a1 + v45;
          v47 = a2 + v45;
          v48 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
          goto LABEL_41;
        case 9u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v49 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
          v50 = a1 + v49;
          v51 = a2 + v49;
          v52 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
LABEL_41:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
      goto LABEL_47;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
LABEL_7:
    v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475CA0) - 8);
LABEL_8:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v13 + 64));
    goto LABEL_47;
  }
  if (a1 != a2)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v14 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
        v15 = a1 + v14;
        v16 = a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v53 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
        v54 = a1 + v53;
        v55 = a2 + v53;
        v56 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
        break;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v57 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
        v58 = a1 + v57;
        v59 = a2 + v57;
        v60 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v61 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
        v62 = a1 + v61;
        v63 = a2 + v61;
        v64 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
        break;
      case 4u:
        v65 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v65;
        v66 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        v67 = a1 + v66;
        v68 = a2 + v66;
        v69 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v70 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
        v71 = a1 + v70;
        v72 = a2 + v70;
        v73 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
        break;
      case 6u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
        v74 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
        v75 = a1 + v74;
        v76 = a2 + v74;
        v77 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v75, v76, v77);
        break;
      case 7u:
        v78 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload(a2, 1, v78))
        {
          v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v93 = *(int *)(v78 + 20);
          v94 = (_QWORD *)(a1 + v93);
          v95 = (_QWORD *)(a2 + v93);
          v96 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
          {
            v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v94 = *(_OWORD *)v95;
            v94[2] = v95[2];
            v110 = *(int *)(v96 + 28);
            v111 = (char *)v94 + v110;
            v112 = (char *)v95 + v110;
            v113 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v96);
          }
          v114 = *(int *)(v78 + 24);
          v115 = a1 + v114;
          v116 = a2 + v114;
          v117 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
          __swift_storeEnumTagSinglePayload(a1, 0, 1, v78);
        }
        v118 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
        v119 = a1 + v118;
        v120 = a2 + v118;
        v121 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
        break;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v80 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
        v81 = a1 + v80;
        v82 = a2 + v80;
        v83 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        break;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v84 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
        v85 = a1 + v84;
        v86 = a2 + v84;
        v87 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
        break;
      default:
        v13 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_47:
  v122 = *(int *)(a3 + 20);
  v123 = a1 + v122;
  v124 = a2 + v122;
  v125 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 40))(v123, v124, v125);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE9A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475CA0);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE9A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475CA0);
}

void sub_248EE9A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475CA8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocolKind);
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV9PrimitiveVwCP_0()
{
  _BYTE *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;

  OUTLINED_FUNCTION_147_1();
  if ((v2 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*v1);
  }
  else
  {
    *v0 = *(_BYTE *)v1;
    v3 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_7_10(v3);
  }
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV9PrimitiveVwcp_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_7_10(v2);
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV9PrimitiveVwtk_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.ConditionallyEnabled()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EE9B5C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_617();
  if (v1)
  {
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_94_1(*(int *)(v2 + 20));
    OUTLINED_FUNCTION_265(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.ConditionallyEnabled()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EE9BC0()
{
  char v0;
  _BYTE *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_453_0();
  if (v3)
  {
    *v1 = v0 + 1;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_63();
    v5 = OUTLINED_FUNCTION_44_5(*(int *)(v4 + 20));
    OUTLINED_FUNCTION_264(v5, v6, v7, v8);
  }
}

void sub_248EE9C04()
{
  sub_248EFFD68();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.PlayVideo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.PlayVideo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.EntityUpdating()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.EntityUpdating()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.PropertyUpdater()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.PropertyUpdater()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.SiriKitIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.SiriKitIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoSystemToolProtocol.IntentSideEffect(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
    v5 = *(int *)(a3 + 20);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s7ToolKit26ToolKitProtoTypeIdentifierV9PrimitiveVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

uint64_t initializeWithCopy for ToolKitProtoSystemToolProtocol.IntentSideEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoSystemToolProtocol.IntentSideEffect(uint64_t a1, int *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)a1 = v4;
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoSystemToolProtocol.IntentSideEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoSystemToolProtocol.IntentSideEffect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.IntentSideEffect()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE9F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_537_0();
  return OUTLINED_FUNCTION_330_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.IntentSideEffect()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EE9F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_82_1();
  return OUTLINED_FUNCTION_329_0(v0, v1, v2, v3);
}

void sub_248EE9F64()
{
  sub_248EFFD68();
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.ToolKitProtoIntentSideEffectKind(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.ToolKitProtoIntentSideEffectKind(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_248EE9FD0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_248EE9FEC(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 4) = v2;
  return result;
}

void type metadata accessor for ToolKitProtoSystemToolProtocol.ToolKitProtoIntentSideEffectKind()
{
  OUTLINED_FUNCTION_164();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV15AssistantSchemaVwCP_0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_2();
  v2 = v1;
  OUTLINED_FUNCTION_147_1();
  if ((v3 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*v2);
  }
  else
  {
    v4 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    if (OUTLINED_FUNCTION_93_1((uint64_t)v2))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
      OUTLINED_FUNCTION_98_1(v5);
    }
    else
    {
      v6 = v2[1];
      *v0 = *v2;
      v0[1] = v6;
      v7 = *(int *)(v4 + 20);
      v8 = (uint64_t)v0 + v7;
      v9 = (uint64_t)v2 + v7;
      v10 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      OUTLINED_FUNCTION_236();
      if (OUTLINED_FUNCTION_50_6(v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
        OUTLINED_FUNCTION_184_1(v11);
      }
      else
      {
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
        v12 = v8 + *(int *)(v10 + 28);
        v13 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_423(v12, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16));
        OUTLINED_FUNCTION_69_3(v8);
      }
      v14 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16));
      OUTLINED_FUNCTION_101_2();
    }
    v15 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_25_7(v15);
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t _s7ToolKit30ToolKitProtoSystemTypeProtocolV15AssistantSchemaVwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v2 = OUTLINED_FUNCTION_630();
  if (!OUTLINED_FUNCTION_142_1(a1))
  {
    OUTLINED_FUNCTION_560();
    v3 = a1 + *(int *)(v2 + 20);
    v4 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    if (!OUTLINED_FUNCTION_49_5(v3))
    {
      v5 = v3 + *(int *)(v4 + 28);
      v6 = OUTLINED_FUNCTION_63();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    }
    v7 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_116_1(v7);
  }
  OUTLINED_FUNCTION_63();
  v8 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_243_1(v8, v9, v10);
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV15AssistantSchemaVwcp_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_2();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  if (OUTLINED_FUNCTION_93_1((uint64_t)v1))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_98_1(v5);
  }
  else
  {
    v6 = v1[1];
    *v3 = *v1;
    v3[1] = v6;
    v7 = *(int *)(v4 + 20);
    v8 = (uint64_t)v3 + v7;
    v9 = (uint64_t)v1 + v7;
    v10 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    OUTLINED_FUNCTION_236();
    if (OUTLINED_FUNCTION_50_6(v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
      OUTLINED_FUNCTION_184_1(v11);
    }
    else
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      v12 = v8 + *(int *)(v10 + 28);
      v13 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_423(v12, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16));
      OUTLINED_FUNCTION_69_3(v8);
    }
    v14 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16));
    OUTLINED_FUNCTION_101_2();
  }
  v15 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_25_7(v15);
  OUTLINED_FUNCTION_3_0();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV15AssistantSchemaVwca_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int EnumTagSinglePayload;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_136_2();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4);
  v6 = OUTLINED_FUNCTION_93_1((uint64_t)v1);
  if (!EnumTagSinglePayload)
  {
    if ((_DWORD)v6)
    {
      OUTLINED_FUNCTION_134_2(v6, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      goto LABEL_7;
    }
    *v3 = *v1;
    OUTLINED_FUNCTION_435_0(v1[1]);
    swift_bridgeObjectRelease();
    v13 = *(int *)(v4 + 20);
    v14 = (uint64_t)v3 + v13;
    v15 = (uint64_t)v1 + v13;
    v16 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    v17 = __swift_getEnumTagSinglePayload(v14, 1, v16);
    v18 = OUTLINED_FUNCTION_67_4(v15);
    if (v17)
    {
      if (!(_DWORD)v18)
      {
        OUTLINED_FUNCTION_436_0();
        v20 = v14 + v19;
        v21 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_148(v20, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16));
        OUTLINED_FUNCTION_54_5(v14);
LABEL_16:
        v26 = (uint64_t)v3 + *(int *)(v4 + 24);
        v27 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_70(v26, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24));
        goto LABEL_17;
      }
    }
    else
    {
      if (!(_DWORD)v18)
      {
        OUTLINED_FUNCTION_436_0();
        v29 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 24));
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_491_0(v18, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_470_0(v25);
    goto LABEL_16;
  }
  if ((_DWORD)v6)
  {
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_98_1(v12);
    goto LABEL_17;
  }
  *v3 = *v1;
  v3[1] = v1[1];
  v7 = *(int *)(v4 + 20);
  v8 = (_QWORD *)((char *)v3 + v7);
  v9 = (_QWORD *)((char *)v1 + v7);
  v10 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  OUTLINED_FUNCTION_236();
  if (OUTLINED_FUNCTION_50_6((uint64_t)v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_184_1(v11);
  }
  else
  {
    *v8 = *v9;
    v8[1] = v9[1];
    v8[2] = v9[2];
    v22 = (uint64_t)v8 + *(int *)(v10 + 28);
    v23 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_423(v22, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16));
    OUTLINED_FUNCTION_69_3((uint64_t)v8);
  }
  v24 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16));
  OUTLINED_FUNCTION_101_2();
LABEL_17:
  v28 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24));
  OUTLINED_FUNCTION_3_0();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV15AssistantSchemaVwtk_0()
{
  _OWORD *v0;
  _OWORD *v1;
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_136_2();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  if (OUTLINED_FUNCTION_93_1((uint64_t)v1))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_98_1(v5);
  }
  else
  {
    *v3 = *v1;
    v6 = *(int *)(v4 + 20);
    v7 = (uint64_t)v3 + v6;
    v8 = (uint64_t)v1 + v6;
    v9 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    if (OUTLINED_FUNCTION_50_6(v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
      OUTLINED_FUNCTION_184_1(v10);
    }
    else
    {
      *(_OWORD *)v7 = *(_OWORD *)v8;
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
      v11 = v7 + *(int *)(v9 + 28);
      v12 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_423(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32));
      OUTLINED_FUNCTION_69_3(v7);
    }
    v13 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_105_2(v13);
    OUTLINED_FUNCTION_101_2();
  }
  v14 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32));
  OUTLINED_FUNCTION_3_0();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV15AssistantSchemaVwta_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int EnumTagSinglePayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_136_2();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4);
  v6 = OUTLINED_FUNCTION_93_1((uint64_t)v1);
  if (!EnumTagSinglePayload)
  {
    if ((_DWORD)v6)
    {
      OUTLINED_FUNCTION_134_2(v6, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      goto LABEL_7;
    }
    v13 = v1[1];
    *v3 = *v1;
    v3[1] = v13;
    swift_bridgeObjectRelease();
    v14 = *(int *)(v4 + 20);
    v15 = (uint64_t)v3 + v14;
    v16 = (uint64_t)v1 + v14;
    v17 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    v18 = __swift_getEnumTagSinglePayload(v15, 1, v17);
    v19 = OUTLINED_FUNCTION_67_4(v16);
    if (v18)
    {
      if (!(_DWORD)v19)
      {
        OUTLINED_FUNCTION_529_0();
        v21 = v15 + v20;
        v22 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_148(v21, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32));
        OUTLINED_FUNCTION_54_5(v15);
LABEL_16:
        v27 = (uint64_t)v3 + *(int *)(v4 + 24);
        v28 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_70(v27, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40));
        goto LABEL_17;
      }
    }
    else
    {
      if (!(_DWORD)v19)
      {
        OUTLINED_FUNCTION_529_0();
        v30 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40));
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_491_0(v19, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_470_0(v26);
    goto LABEL_16;
  }
  if ((_DWORD)v6)
  {
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
    OUTLINED_FUNCTION_98_1(v12);
    goto LABEL_17;
  }
  *(_OWORD *)v3 = *(_OWORD *)v1;
  v7 = *(int *)(v4 + 20);
  v8 = (uint64_t)v3 + v7;
  v9 = (uint64_t)v1 + v7;
  v10 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  if (OUTLINED_FUNCTION_50_6(v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
    OUTLINED_FUNCTION_184_1(v11);
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    v23 = v8 + *(int *)(v10 + 28);
    v24 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_423(v23, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32));
    OUTLINED_FUNCTION_69_3(v8);
  }
  v25 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_105_2(v25);
  OUTLINED_FUNCTION_101_2();
LABEL_17:
  v29 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40));
  OUTLINED_FUNCTION_3_0();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.AssistantSchema()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EEA860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475BC0);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.AssistantSchema()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EEA878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475BC0);
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.AppIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.AppIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoSystemToolProtocolKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v7 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        goto LABEL_21;
      case 1u:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_2490E7ABC();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        goto LABEL_21;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_2490E7ABC();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        goto LABEL_21;
      case 3u:
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v23 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_2490E7ABC();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        goto LABEL_21;
      case 4u:
        v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        v29 = a2[3];
        a1[2] = a2[2];
        a1[3] = v29;
        v30 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_2490E7ABC();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        goto LABEL_21;
      case 5u:
        v35 = a2[1];
        *a1 = *a2;
        a1[1] = v35;
        v36 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_2490E7ABC();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
        goto LABEL_21;
      case 6u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
        v41 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
        goto LABEL_21;
      case 7u:
        v45 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v45))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v58 = a2[1];
          *a1 = *a2;
          a1[1] = v58;
          v59 = *(int *)(v45 + 20);
          v60 = (_QWORD *)((char *)a1 + v59);
          v61 = (_QWORD *)((char *)a2 + v59);
          v62 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
          {
            v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v60 = *(_OWORD *)v61;
            v60[2] = v61[2];
            v64 = *(int *)(v62 + 28);
            v65 = (char *)v60 + v64;
            v66 = (char *)v61 + v64;
            v67 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
            __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
          }
          v68 = *(int *)(v45 + 24);
          v69 = (char *)a1 + v68;
          v70 = (char *)a2 + v68;
          v71 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v45);
        }
        v72 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
        goto LABEL_21;
      case 8u:
        v47 = a2[1];
        *a1 = *a2;
        a1[1] = v47;
        v48 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = sub_2490E7ABC();
        v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        goto LABEL_21;
      case 9u:
        *a1 = *a2;
        v53 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = sub_2490E7ABC();
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v54, v55, v56);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ToolKitProtoSystemToolProtocolKind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0);
      goto LABEL_16;
    case 1:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0);
      goto LABEL_16;
    case 2:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0);
      goto LABEL_16;
    case 3:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0);
      goto LABEL_16;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
      goto LABEL_17;
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0);
      goto LABEL_16;
    case 6:
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0);
      goto LABEL_16;
    case 7:
      v5 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v5))
      {
        swift_bridgeObjectRelease();
        v6 = a1 + *(int *)(v5 + 20);
        v7 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
        {
          v8 = v6 + *(int *)(v7 + 28);
          v9 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        }
        v10 = a1 + *(int *)(v5 + 24);
        v11 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      }
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0);
      goto LABEL_16;
    case 8:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0);
      goto LABEL_16;
    case 9:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0);
LABEL_16:
      v4 = *(int *)(v3 + 20);
LABEL_17:
      v12 = a1 + v4;
      v13 = sub_2490E7ABC();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for ToolKitProtoSystemToolProtocolKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      goto LABEL_19;
    case 1u:
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E7ABC();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      goto LABEL_19;
    case 2u:
      *a1 = *a2;
      v15 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2490E7ABC();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      goto LABEL_19;
    case 3u:
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_2490E7ABC();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      goto LABEL_19;
    case 4u:
      v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      v27 = a2[3];
      a1[2] = a2[2];
      a1[3] = v27;
      v28 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_2490E7ABC();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v29, v30, v31);
      goto LABEL_19;
    case 5u:
      v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      v34 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = sub_2490E7ABC();
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      v38(v35, v36, v37);
      goto LABEL_19;
    case 6u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
      v39 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      v42 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      goto LABEL_19;
    case 7u:
      v43 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v43))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v56 = a2[1];
        *a1 = *a2;
        a1[1] = v56;
        v57 = *(int *)(v43 + 20);
        v58 = (_QWORD *)((char *)a1 + v57);
        v59 = (_QWORD *)((char *)a2 + v57);
        v60 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v58 = *(_OWORD *)v59;
          v58[2] = v59[2];
          v62 = *(int *)(v60 + 28);
          v63 = (char *)v58 + v62;
          v64 = (char *)v59 + v62;
          v65 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        v66 = *(int *)(v43 + 24);
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v43);
      }
      v70 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      v73 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
      goto LABEL_19;
    case 8u:
      v45 = a2[1];
      *a1 = *a2;
      a1[1] = v45;
      v46 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      v49 = sub_2490E7ABC();
      v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v47, v48, v49);
      goto LABEL_19;
    case 9u:
      *a1 = *a2;
      v51 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      v54 = sub_2490E7ABC();
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v55(v52, v53, v54);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoSystemToolProtocolKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v6 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
        goto LABEL_20;
      case 1u:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2490E7ABC();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_20;
      case 2u:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_2490E7ABC();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        goto LABEL_20;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        v20 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_2490E7ABC();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
        goto LABEL_20;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v25 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = sub_2490E7ABC();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29(v26, v27, v28);
        goto LABEL_20;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        v30 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_2490E7ABC();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        goto LABEL_20;
      case 6u:
        v35 = *(_DWORD *)a2;
        *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
        *(_DWORD *)a1 = v35;
        v36 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_20;
      case 7u:
        v40 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v40))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          v52 = *(int *)(v40 + 20);
          v53 = (_QWORD *)((char *)a1 + v52);
          v54 = (_QWORD *)((char *)a2 + v52);
          v55 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
          {
            v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            *v53 = *v54;
            v53[1] = v54[1];
            v53[2] = v54[2];
            v57 = *(int *)(v55 + 28);
            v58 = (char *)v53 + v57;
            v59 = (char *)v54 + v57;
            v60 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
            __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
          }
          v61 = *(int *)(v40 + 24);
          v62 = (char *)a1 + v61;
          v63 = (char *)a2 + v61;
          v64 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v40);
        }
        v65 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
        goto LABEL_20;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        v42 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = sub_2490E7ABC();
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        v46(v43, v44, v45);
        goto LABEL_20;
      case 9u:
        *a1 = *a2;
        v47 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
        v48 = (char *)a1 + v47;
        v49 = (char *)a2 + v47;
        v50 = sub_2490E7ABC();
        v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoSystemToolProtocolKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      goto LABEL_19;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v10 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_19;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v14 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_19;
    case 3u:
      *a1 = *a2;
      v18 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_19;
    case 4u:
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v23 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_19;
    case 5u:
      *a1 = *a2;
      v27 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_19;
    case 6u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
      v31 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      goto LABEL_19;
    case 7u:
      v35 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v35))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v45 = *(int *)(v35 + 20);
        v46 = (_QWORD *)((char *)a1 + v45);
        v47 = (_QWORD *)((char *)a2 + v45);
        v48 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v46 = *(_OWORD *)v47;
          v46[2] = v47[2];
          v50 = *(int *)(v48 + 28);
          v51 = (char *)v46 + v50;
          v52 = (char *)v47 + v50;
          v53 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
        }
        v54 = *(int *)(v35 + 24);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v35);
      }
      v58 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      v61 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      goto LABEL_19;
    case 8u:
      *a1 = *a2;
      v37 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      goto LABEL_19;
    case 9u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v41 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoSystemToolProtocolKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v6 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_20;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_20;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v14 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_20;
      case 3u:
        *a1 = *a2;
        v18 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_20;
      case 4u:
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v23 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0) + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_20;
      case 5u:
        *a1 = *a2;
        v27 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0) + 20);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        goto LABEL_20;
      case 6u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_WORD *)a1 + 2) = *((_WORD *)a2 + 2);
        v31 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        goto LABEL_20;
      case 7u:
        v35 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v35))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v45 = *(int *)(v35 + 20);
          v46 = (_QWORD *)((char *)a1 + v45);
          v47 = (_QWORD *)((char *)a2 + v45);
          v48 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
          {
            v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v46 = *(_OWORD *)v47;
            v46[2] = v47[2];
            v50 = *(int *)(v48 + 28);
            v51 = (char *)v46 + v50;
            v52 = (char *)v47 + v50;
            v53 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
            __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
          }
          v54 = *(int *)(v35 + 24);
          v55 = (char *)a1 + v54;
          v56 = (char *)a2 + v54;
          v57 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v35);
        }
        v58 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0) + 20);
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        v61 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        goto LABEL_20;
      case 8u:
        *a1 = *a2;
        v37 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0) + 20);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        goto LABEL_20;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v41 = *(int *)(type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_248EEC3C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  result = type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol(319);
                    if (v10 <= 0x3F)
                    {
                      swift_initEnumMetadataMultiPayload();
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ToolKitProtoToolDefinition(uint64_t a1)
{
  return sub_248DB43B0(a1, qword_2577E6E60);
}

uint64_t initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int EnumCaseMultiPayload;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t *v162;
  uint64_t v163;
  char *v164;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    v15 = v14 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v9 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v9;
    v10 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v10;
    v163 = a2[16];
    v11 = a3[19];
    __dst = (_QWORD *)(a1 + v11);
    v162 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v163;
    v12 = type metadata accessor for ToolKitProtoTypeInstance(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v162, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(__dst, v162, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v16 = *v162;
      if ((~*v162 & 0xF000000000000007) != 0)
        swift_retain();
      *__dst = v16;
      v17 = *(int *)(v12 + 20);
      v18 = (char *)__dst + v17;
      v19 = (char *)v162 + v17;
      v20 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v12);
    }
    v15 = a1;
    v21 = a2;
    v22 = a3;
    v23 = a3[20];
    v24 = a3[21];
    v25 = (_QWORD *)(a1 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (_QWORD *)(a1 + v24);
    v29 = (uint64_t *)((char *)a2 + v24);
    v30 = type metadata accessor for ToolKitProtoAppDefinition(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = v29[1];
      *v28 = *v29;
      v28[1] = v32;
      v33 = v29[3];
      v28[2] = v29[2];
      v28[3] = v33;
      v34 = v29[5];
      v28[4] = v29[4];
      v28[5] = v34;
      v35 = v29[7];
      v28[6] = v29[6];
      v28[7] = v35;
      v36 = v29[9];
      v28[8] = v29[8];
      v28[9] = v36;
      *((_BYTE *)v28 + 80) = *((_BYTE *)v29 + 80);
      v37 = *(int *)(v30 + 40);
      __dsta = (_QWORD *)((char *)v28 + v37);
      v38 = (_QWORD *)((char *)v29 + v37);
      v39 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
        memcpy(__dsta, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        v15 = a1;
      }
      else
      {
        v41 = v38[1];
        if (v41 == 1)
        {
          *(_OWORD *)__dsta = *(_OWORD *)v38;
        }
        else
        {
          *__dsta = *v38;
          __dsta[1] = v41;
          swift_bridgeObjectRetain();
        }
        v15 = a1;
        v42 = *(int *)(v39 + 20);
        v43 = (char *)__dsta + v42;
        v44 = (char *)v38 + v42;
        v45 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v39);
      }
      v46 = *(int *)(v30 + 44);
      v47 = (char *)v28 + v46;
      v48 = (char *)v29 + v46;
      v49 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      v21 = a2;
      v22 = a3;
    }
    v50 = v22[22];
    v51 = v22[23];
    v52 = (_QWORD *)(v15 + v50);
    v53 = (uint64_t *)((char *)v21 + v50);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = (_QWORD *)(v15 + v51);
    v56 = (uint64_t *)((char *)v21 + v51);
    v57 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      v59 = v56[1];
      *v55 = *v56;
      v55[1] = v59;
      v60 = v56[3];
      v55[2] = v56[2];
      v55[3] = v60;
      v61 = *(int *)(v57 + 24);
      v62 = (char *)v55 + v61;
      v63 = (char *)v56 + v61;
      v64 = sub_2490E7ABC();
      v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v65(v62, v63, v64);
      v22 = a3;
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v57);
    }
    v66 = v22[24];
    v67 = (_QWORD *)(v15 + v66);
    v68 = (uint64_t *)((char *)v21 + v66);
    v69 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      v71 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v71))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v81 = v68[1];
          *v67 = *v68;
          v67[1] = v81;
          v82 = v68[3];
          v67[2] = v68[2];
          v67[3] = v82;
          v83 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                       + 24);
          __dstc = (char *)v67 + v83;
          v84 = (char *)v68 + v83;
          v85 = sub_2490E7ABC();
          v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v87 = v84;
          v21 = a2;
          v88 = v85;
          v15 = a1;
          v86(__dstc, v87, v88);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v74 = v68[1];
          *v67 = *v68;
          v67[1] = v74;
          *((_BYTE *)v67 + 16) = *((_BYTE *)v68 + 16);
          v75 = v68[4];
          v67[3] = v68[3];
          v67[4] = v75;
          v76 = v68[6];
          v67[5] = v68[5];
          v67[6] = v76;
          v77 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v164 = (char *)v68 + v77;
          __dstb = (char *)v67 + v77;
          v78 = sub_2490E7ABC();
          v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v80 = v78;
          v21 = a2;
          v79(__dstb, v164, v80);
          v15 = a1;
        }
        else
        {
          v89 = v68[1];
          *v67 = *v68;
          v67[1] = v89;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v71);
        v22 = a3;
      }
      v90 = *(int *)(v69 + 20);
      v91 = (char *)v67 + v90;
      v92 = (char *)v68 + v90;
      v93 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
    }
    v94 = v22[25];
    v95 = (_QWORD *)(v15 + v94);
    v96 = (uint64_t *)((char *)v21 + v94);
    v97 = type metadata accessor for ToolKitProtoContainerDefinition(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      v99 = v96[1];
      *v95 = *v96;
      v95[1] = v99;
      v100 = v96[3];
      v95[2] = v96[2];
      v95[3] = v100;
      *((_WORD *)v95 + 16) = *((_WORD *)v96 + 16);
      v101 = v96[6];
      v95[5] = v96[5];
      v95[6] = v101;
      v102 = v96[8];
      v95[7] = v96[7];
      v95[8] = v102;
      v103 = *(int *)(v97 + 40);
      v104 = (_QWORD *)((char *)v95 + v103);
      v105 = (_QWORD *)((char *)v96 + v103);
      v106 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v106))
      {
        v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
        memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        v15 = a1;
      }
      else
      {
        v108 = v105[1];
        if (v108 == 1)
        {
          *(_OWORD *)v104 = *(_OWORD *)v105;
        }
        else
        {
          *v104 = *v105;
          v104[1] = v108;
          swift_bridgeObjectRetain();
        }
        v15 = a1;
        v109 = *(int *)(v106 + 20);
        v110 = (char *)v104 + v109;
        v111 = (char *)v105 + v109;
        v112 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
        __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v106);
      }
      v113 = *(int *)(v97 + 44);
      v114 = (char *)v95 + v113;
      v115 = (char *)v96 + v113;
      v116 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v114, v115, v116);
      __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v97);
      v21 = a2;
      v22 = a3;
    }
    v117 = v22[26];
    v118 = (_QWORD *)(v15 + v117);
    v119 = (uint64_t *)((char *)v21 + v117);
    if (__swift_getEnumTagSinglePayload((uint64_t)v21 + v117, 1, v97))
    {
      v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
      memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    }
    else
    {
      v121 = v119[1];
      *v118 = *v119;
      v118[1] = v121;
      v122 = v119[3];
      v118[2] = v119[2];
      v118[3] = v122;
      *((_WORD *)v118 + 16) = *((_WORD *)v119 + 16);
      v123 = v119[6];
      v118[5] = v119[5];
      v118[6] = v123;
      v124 = v119[8];
      v118[7] = v119[7];
      v118[8] = v124;
      v125 = *(int *)(v97 + 40);
      v126 = (_QWORD *)((char *)v118 + v125);
      v127 = (_QWORD *)((char *)v119 + v125);
      v128 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
      {
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        v15 = a1;
      }
      else
      {
        v130 = v127[1];
        if (v130 == 1)
        {
          *(_OWORD *)v126 = *(_OWORD *)v127;
        }
        else
        {
          *v126 = *v127;
          v126[1] = v130;
          swift_bridgeObjectRetain();
        }
        v15 = a1;
        v131 = *(int *)(v128 + 20);
        v132 = (char *)v126 + v131;
        v133 = (char *)v127 + v131;
        v134 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
        __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
      }
      v135 = *(int *)(v97 + 44);
      v136 = (char *)v118 + v135;
      v137 = (char *)v119 + v135;
      v138 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v136, v137, v138);
      __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v97);
      v21 = a2;
      v22 = a3;
    }
    v139 = v22[27];
    v140 = v22[28];
    v141 = (_QWORD *)(v15 + v139);
    v142 = (uint64_t *)((char *)v21 + v139);
    v143 = v142[1];
    *v141 = *v142;
    v141[1] = v143;
    v144 = (_QWORD *)(v15 + v140);
    v145 = (uint64_t *)((char *)v21 + v140);
    v146 = v145[1];
    *v144 = *v145;
    v144[1] = v146;
    v147 = v22[29];
    v148 = v22[30];
    v149 = (_QWORD *)(v15 + v147);
    v150 = (uint64_t *)((char *)v21 + v147);
    v151 = v150[1];
    *v149 = *v150;
    v149[1] = v151;
    v152 = (_QWORD *)(v15 + v148);
    v153 = (uint64_t *)((char *)v21 + v148);
    v154 = *v153;
    v155 = v153[1];
    v156 = v22[31];
    v157 = (uint64_t)v21 + v156;
    v158 = v15 + v156;
    *v152 = v154;
    v152[1] = v155;
    v159 = sub_2490E7ABC();
    v160 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v160(v158, v157, v159);
  }
  return v15;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + a2[19]);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  v8 = a1 + a2[21];
  v9 = type metadata accessor for ToolKitProtoAppDefinition(0);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 40);
    v11 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    {
      if (*(_QWORD *)(v10 + 8) != 1)
        swift_bridgeObjectRelease();
      v12 = v10 + *(int *)(v11 + 20);
      v13 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
    v14 = v8 + *(int *)(v9 + 44);
    v15 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  swift_bridgeObjectRelease();
  v16 = a1 + a2[23];
  v17 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v16 + *(int *)(v17 + 24);
    v19 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = a1 + a2[24];
  v21 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
  {
    v22 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    if (!__swift_getEnumTagSinglePayload(v20, 1, v22))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                     + 24);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (!EnumCaseMultiPayload)
            swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      }
      v25 = v20 + v24;
      v26 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
    }
LABEL_22:
    v27 = v20 + *(int *)(v21 + 20);
    v28 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  v29 = a1 + a2[25];
  v30 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v29 + *(int *)(v30 + 40);
    v32 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (!__swift_getEnumTagSinglePayload(v31, 1, v32))
    {
      if (*(_QWORD *)(v31 + 8) != 1)
        swift_bridgeObjectRelease();
      v33 = v31 + *(int *)(v32 + 20);
      v34 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
    }
    v35 = v29 + *(int *)(v30 + 44);
    v36 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  }
  v37 = a1 + a2[26];
  if (!__swift_getEnumTagSinglePayload(v37, 1, v30))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v37 + *(int *)(v30 + 40);
    v39 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (!__swift_getEnumTagSinglePayload(v38, 1, v39))
    {
      if (*(_QWORD *)(v38 + 8) != 1)
        swift_bridgeObjectRelease();
      v40 = v38 + *(int *)(v39 + 20);
      v41 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
    }
    v42 = v37 + *(int *)(v30 + 44);
    v43 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = a1 + a2[31];
  v45 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
}

uint64_t initializeWithCopy for ToolKitProtoToolDefinition.Version1(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int EnumCaseMultiPayload;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t *v159;
  uint64_t v160;
  char *v161;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  v160 = *(_QWORD *)(a2 + 128);
  v9 = a3[19];
  __dst = (_QWORD *)(a1 + v9);
  v159 = (uint64_t *)(a2 + v9);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v160;
  v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v159, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(__dst, v159, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v159;
    if ((~*v159 & 0xF000000000000007) != 0)
      swift_retain();
    *__dst = v12;
    v13 = *(int *)(v10 + 20);
    v14 = (char *)__dst + v13;
    v15 = (char *)v159 + v13;
    v16 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v10);
  }
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a3[20];
  v21 = a3[21];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)(a1 + v21);
  v26 = (_QWORD *)(a2 + v21);
  v27 = type metadata accessor for ToolKitProtoAppDefinition(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = v26[1];
    *v25 = *v26;
    v25[1] = v29;
    v30 = v26[3];
    v25[2] = v26[2];
    v25[3] = v30;
    v31 = v26[5];
    v25[4] = v26[4];
    v25[5] = v31;
    v32 = v26[7];
    v25[6] = v26[6];
    v25[7] = v32;
    v33 = v26[9];
    v25[8] = v26[8];
    v25[9] = v33;
    *((_BYTE *)v25 + 80) = *((_BYTE *)v26 + 80);
    v34 = *(int *)(v27 + 40);
    __dsta = (_QWORD *)((char *)v25 + v34);
    v35 = (_QWORD *)((char *)v26 + v34);
    v36 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
      memcpy(__dsta, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      v18 = a2;
    }
    else
    {
      v38 = v35[1];
      if (v38 == 1)
      {
        *(_OWORD *)__dsta = *(_OWORD *)v35;
      }
      else
      {
        *__dsta = *v35;
        __dsta[1] = v38;
        swift_bridgeObjectRetain();
      }
      v18 = a2;
      v39 = *(int *)(v36 + 20);
      v40 = (char *)__dsta + v39;
      v41 = (char *)v35 + v39;
      v42 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v36);
    }
    v43 = *(int *)(v27 + 44);
    v44 = (char *)v25 + v43;
    v45 = (char *)v26 + v43;
    v46 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    v17 = a1;
    v19 = a3;
  }
  v47 = v19[22];
  v48 = v19[23];
  v49 = (_QWORD *)(v17 + v47);
  v50 = (_QWORD *)(v18 + v47);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  v52 = (_QWORD *)(v17 + v48);
  v53 = (_QWORD *)(v18 + v48);
  v54 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v56 = v53[1];
    *v52 = *v53;
    v52[1] = v56;
    v57 = v53[3];
    v52[2] = v53[2];
    v52[3] = v57;
    v58 = *(int *)(v54 + 24);
    v59 = (char *)v52 + v58;
    v60 = (char *)v53 + v58;
    v61 = sub_2490E7ABC();
    v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62(v59, v60, v61);
    v19 = a3;
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
  }
  v63 = v19[24];
  v64 = (_QWORD *)(v17 + v63);
  v65 = (_QWORD *)(v18 + v63);
  v66 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v68 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v68))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v78 = v65[1];
        *v64 = *v65;
        v64[1] = v78;
        v79 = v65[3];
        v64[2] = v65[2];
        v64[3] = v79;
        v80 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                     + 24);
        __dstc = (char *)v64 + v80;
        v81 = (char *)v65 + v80;
        v82 = sub_2490E7ABC();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v84 = v81;
        v17 = a1;
        v85 = v82;
        v18 = a2;
        v83(__dstc, v84, v85);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v71 = v65[1];
        *v64 = *v65;
        v64[1] = v71;
        *((_BYTE *)v64 + 16) = *((_BYTE *)v65 + 16);
        v72 = v65[4];
        v64[3] = v65[3];
        v64[4] = v72;
        v73 = v65[6];
        v64[5] = v65[5];
        v64[6] = v73;
        v74 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v161 = (char *)v65 + v74;
        __dstb = (char *)v64 + v74;
        v75 = sub_2490E7ABC();
        v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v77 = v75;
        v17 = a1;
        v76(__dstb, v161, v77);
        v18 = a2;
      }
      else
      {
        v86 = v65[1];
        *v64 = *v65;
        v64[1] = v86;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v68);
      v19 = a3;
    }
    v87 = *(int *)(v66 + 20);
    v88 = (char *)v64 + v87;
    v89 = (char *)v65 + v87;
    v90 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
    __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
  }
  v91 = v19[25];
  v92 = (_QWORD *)(v17 + v91);
  v93 = (_QWORD *)(v18 + v91);
  v94 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v94))
  {
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    v96 = v93[1];
    *v92 = *v93;
    v92[1] = v96;
    v97 = v93[3];
    v92[2] = v93[2];
    v92[3] = v97;
    *((_WORD *)v92 + 16) = *((_WORD *)v93 + 16);
    v98 = v93[6];
    v92[5] = v93[5];
    v92[6] = v98;
    v99 = v93[8];
    v92[7] = v93[7];
    v92[8] = v99;
    v100 = *(int *)(v94 + 40);
    v101 = (_QWORD *)((char *)v92 + v100);
    v102 = (_QWORD *)((char *)v93 + v100);
    v103 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      v18 = a2;
    }
    else
    {
      v105 = v102[1];
      if (v105 == 1)
      {
        *(_OWORD *)v101 = *(_OWORD *)v102;
      }
      else
      {
        *v101 = *v102;
        v101[1] = v105;
        swift_bridgeObjectRetain();
      }
      v18 = a2;
      v106 = *(int *)(v103 + 20);
      v107 = (char *)v101 + v106;
      v108 = (char *)v102 + v106;
      v109 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v107, v108, v109);
      __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v103);
    }
    v110 = *(int *)(v94 + 44);
    v111 = (char *)v92 + v110;
    v112 = (char *)v93 + v110;
    v113 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v111, v112, v113);
    __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v94);
    v17 = a1;
    v19 = a3;
  }
  v114 = v19[26];
  v115 = (_QWORD *)(v17 + v114);
  v116 = (_QWORD *)(v18 + v114);
  if (__swift_getEnumTagSinglePayload(v18 + v114, 1, v94))
  {
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  }
  else
  {
    v118 = v116[1];
    *v115 = *v116;
    v115[1] = v118;
    v119 = v116[3];
    v115[2] = v116[2];
    v115[3] = v119;
    *((_WORD *)v115 + 16) = *((_WORD *)v116 + 16);
    v120 = v116[6];
    v115[5] = v116[5];
    v115[6] = v120;
    v121 = v116[8];
    v115[7] = v116[7];
    v115[8] = v121;
    v122 = *(int *)(v94 + 40);
    v123 = (_QWORD *)((char *)v115 + v122);
    v124 = (_QWORD *)((char *)v116 + v122);
    v125 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1, v125))
    {
      v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      v18 = a2;
    }
    else
    {
      v127 = v124[1];
      if (v127 == 1)
      {
        *(_OWORD *)v123 = *(_OWORD *)v124;
      }
      else
      {
        *v123 = *v124;
        v123[1] = v127;
        swift_bridgeObjectRetain();
      }
      v18 = a2;
      v128 = *(int *)(v125 + 20);
      v129 = (char *)v123 + v128;
      v130 = (char *)v124 + v128;
      v131 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
      __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v125);
    }
    v132 = *(int *)(v94 + 44);
    v133 = (char *)v115 + v132;
    v134 = (char *)v116 + v132;
    v135 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
    __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v94);
    v17 = a1;
    v19 = a3;
  }
  v136 = v19[27];
  v137 = v19[28];
  v138 = (_QWORD *)(v17 + v136);
  v139 = (_QWORD *)(v18 + v136);
  v140 = v139[1];
  *v138 = *v139;
  v138[1] = v140;
  v141 = (_QWORD *)(v17 + v137);
  v142 = (_QWORD *)(v18 + v137);
  v143 = v142[1];
  *v141 = *v142;
  v141[1] = v143;
  v144 = v19[29];
  v145 = v19[30];
  v146 = (_QWORD *)(v17 + v144);
  v147 = (_QWORD *)(v18 + v144);
  v148 = v147[1];
  *v146 = *v147;
  v146[1] = v148;
  v149 = (_QWORD *)(v17 + v145);
  v150 = (uint64_t *)(v18 + v145);
  v151 = *v150;
  v152 = v150[1];
  v153 = v19[31];
  v154 = v18 + v153;
  v155 = v17 + v153;
  *v149 = v151;
  v149[1] = v152;
  v156 = sub_2490E7ABC();
  v157 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v157(v155, v154, v156);
  return v17;
}

uint64_t assignWithCopy for ToolKitProtoToolDefinition.Version1(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int *v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  int EnumCaseMultiPayload;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  int v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  int v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  _QWORD *v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v219)(char *, char *, uint64_t);
  void (*v220)(char *, char *, uint64_t);
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;
  void (*__dstc)(char *, char *, uint64_t);
  void (*__dstd)(char *, char *, uint64_t);
  void (*__dste)(char *, char *, uint64_t);
  uint64_t v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  _QWORD *v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  _QWORD *v239;
  _QWORD *v240;
  char *v241;
  int *v242;
  int *v243;
  int *v244;
  uint64_t v245;
  uint64_t v246;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[19];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_8;
    }
    v31 = *v8;
    v32 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v32 != 0xF000000000000007)
      {
        *v7 = v31;
        swift_retain();
        swift_release();
        goto LABEL_35;
      }
      sub_248E42024((uint64_t)v7);
      v31 = *v8;
    }
    else if (v32 != 0xF000000000000007)
    {
      *v7 = v31;
      swift_retain();
LABEL_35:
      v50 = *(int *)(v9 + 20);
      v51 = (char *)v7 + v50;
      v52 = (char *)v8 + v50;
      v53 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
      goto LABEL_9;
    }
    *v7 = v31;
    goto LABEL_35;
  }
  if (v11)
  {
LABEL_8:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  v12 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v12;
  v13 = *(int *)(v9 + 20);
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_9:
  v18 = a3[20];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[21];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v25 = __swift_getEnumTagSinglePayload(v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload(v23, 1, v24);
  if (!v25)
  {
    if (v26)
    {
      sub_248E25C30(v22, type metadata accessor for ToolKitProtoAppDefinition);
      goto LABEL_15;
    }
    v33 = a3;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
    *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 64) = *(_QWORD *)(v23 + 64);
    *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
    v34 = v24;
    v35 = *(int *)(v24 + 40);
    v36 = (_QWORD *)(v22 + v35);
    v37 = (_QWORD *)(v23 + v35);
    v38 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    v39 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v38);
    v40 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38);
    if (v39)
    {
      if (!v40)
      {
        if (v37[1] == 1)
        {
          *(_OWORD *)v36 = *(_OWORD *)v37;
        }
        else
        {
          *v36 = *v37;
          v36[1] = v37[1];
          swift_bridgeObjectRetain();
        }
        v55 = *(int *)(v38 + 20);
        v56 = (char *)v36 + v55;
        v57 = (char *)v37 + v55;
        v58 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
        goto LABEL_41;
      }
LABEL_30:
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_41:
      a3 = v33;
LABEL_42:
      v59 = *(int *)(v34 + 44);
      v60 = v22 + v59;
      v61 = v23 + v59;
      v62 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
      goto LABEL_43;
    }
    if (v40)
    {
      sub_248E25C30((uint64_t)v36, type metadata accessor for ToolKitProtoAppDefinition.Device);
      goto LABEL_30;
    }
    v54 = v37[1];
    if (v36[1] == 1)
    {
      if (v54 != 1)
      {
        *v36 = *v37;
        v36[1] = v37[1];
        swift_bridgeObjectRetain();
LABEL_83:
        a3 = v33;
        v114 = *(int *)(v38 + 20);
        v115 = (char *)v36 + v114;
        v116 = (char *)v37 + v114;
        v117 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 24))(v115, v116, v117);
        goto LABEL_42;
      }
    }
    else
    {
      if (v54 != 1)
      {
        *v36 = *v37;
        v36[1] = v37[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_83;
      }
      sub_248E00F4C((uint64_t)v36);
    }
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_83;
  }
  if (v26)
  {
LABEL_15:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
    memcpy((void *)v22, (const void *)v23, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_43;
  }
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
  *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
  *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
  *(_QWORD *)(v22 + 64) = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
  *(_BYTE *)(v22 + 80) = *(_BYTE *)(v23 + 80);
  v27 = *(int *)(v24 + 40);
  __dst = (_QWORD *)(v22 + v27);
  v227 = v24;
  v234 = (_QWORD *)(v23 + v27);
  v28 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
    memcpy(__dst, v234, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    if (v234[1] == 1)
    {
      *(_OWORD *)__dst = *(_OWORD *)v234;
    }
    else
    {
      *__dst = *v234;
      __dst[1] = v234[1];
      swift_bridgeObjectRetain();
    }
    v42 = *(int *)(v28 + 20);
    v43 = (char *)__dst + v42;
    v44 = (char *)v234 + v42;
    v45 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
  }
  v46 = *(int *)(v227 + 44);
  v47 = v22 + v46;
  v48 = v23 + v46;
  v49 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  __swift_storeEnumTagSinglePayload(v22, 0, 1, v227);
LABEL_43:
  v63 = a3[22];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = a3[23];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  v69 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v70 = __swift_getEnumTagSinglePayload((uint64_t)v67, 1, v69);
  v71 = __swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69);
  if (v70)
  {
    if (!v71)
    {
      *v67 = *v68;
      v67[1] = v68[1];
      v67[2] = v68[2];
      v67[3] = v68[3];
      v72 = *(int *)(v69 + 24);
      v73 = (char *)v67 + v72;
      v241 = (char *)v68 + v72;
      v74 = sub_2490E7ABC();
      v75 = a3;
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76(v73, v241, v74);
      a3 = v75;
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v71)
  {
    sub_248E25C30((uint64_t)v67, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
LABEL_48:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_49;
  }
  *v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67[2] = v68[2];
  v67[3] = v68[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87 = *(int *)(v69 + 24);
  v88 = (char *)v67 + v87;
  v89 = (char *)v68 + v87;
  v90 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
LABEL_49:
  v78 = a3[24];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (_QWORD *)(a2 + v78);
  v81 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v82 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v81);
  v83 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81);
  if (!v82)
  {
    if (v83)
    {
      sub_248E25C30((uint64_t)v79, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
      goto LABEL_55;
    }
    v91 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    v92 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v91);
    v93 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v91);
    if (v92)
    {
      if (!v93)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *v79 = *v80;
          v79[1] = v80[1];
          v79[2] = v80[2];
          v79[3] = v80[3];
          v111 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                        + 24);
          v232 = (char *)v80 + v111;
          v237 = (char *)v79 + v111;
          v244 = a3;
          v112 = sub_2490E7ABC();
          __dste = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v113 = v112;
          a3 = v244;
          __dste(v237, v232, v113);
        }
        else
        {
          *v79 = *v80;
          v79[1] = v80[1];
          if (EnumCaseMultiPayload == 1)
          {
            *((_BYTE *)v79 + 16) = *((_BYTE *)v80 + 16);
            v79[3] = v80[3];
            v79[4] = v80[4];
            v79[5] = v80[5];
            v79[6] = v80[6];
            v95 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                         + 32);
            __dsta = (char *)v80 + v95;
            v228 = (char *)v79 + v95;
            v96 = sub_2490E7ABC();
            v219 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v219(v228, __dsta, v96);
          }
          else
          {
            swift_bridgeObjectRetain();
          }
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v91);
        goto LABEL_87;
      }
    }
    else
    {
      if (!v93)
      {
        if (a1 != a2)
        {
          v243 = a3;
          sub_248E25C30((uint64_t)v79, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
          v108 = swift_getEnumCaseMultiPayload();
          if (v108 == 2)
          {
            *v79 = *v80;
            v79[1] = v80[1];
            v79[2] = v80[2];
            v79[3] = v80[3];
            v118 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                          + 24);
            v233 = (char *)v80 + v118;
            v238 = (char *)v79 + v118;
            v119 = sub_2490E7ABC();
            v120 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v120(v238, v233, v119);
          }
          else
          {
            *v79 = *v80;
            v79[1] = v80[1];
            if (v108 == 1)
            {
              *((_BYTE *)v79 + 16) = *((_BYTE *)v80 + 16);
              v79[3] = v80[3];
              v79[4] = v80[4];
              v79[5] = v80[5];
              v79[6] = v80[6];
              v109 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                            + 32);
              v231 = (char *)v80 + v109;
              v236 = (char *)v79 + v109;
              v110 = sub_2490E7ABC();
              __dstd = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __dstd(v236, v231, v110);
            }
            else
            {
              swift_bridgeObjectRetain();
            }
          }
          swift_storeEnumTagMultiPayload();
          a3 = v243;
        }
        goto LABEL_87;
      }
      sub_248E25C30((uint64_t)v79, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    }
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
LABEL_87:
    v121 = *(int *)(v81 + 20);
    v122 = (char *)v79 + v121;
    v123 = (char *)v80 + v121;
    v124 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 24))(v122, v123, v124);
    goto LABEL_88;
  }
  if (v83)
  {
LABEL_55:
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_88;
  }
  v84 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v84))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    v97 = swift_getEnumCaseMultiPayload();
    if (v97 == 2)
    {
      *v79 = *v80;
      v79[1] = v80[1];
      v79[2] = v80[2];
      v79[3] = v80[3];
      v101 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v230 = (char *)v80 + v101;
      v235 = (char *)v79 + v101;
      v242 = a3;
      v102 = sub_2490E7ABC();
      __dstc = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v103 = v102;
      a3 = v242;
      __dstc(v235, v230, v103);
    }
    else
    {
      *v79 = *v80;
      v79[1] = v80[1];
      if (v97 == 1)
      {
        *((_BYTE *)v79 + 16) = *((_BYTE *)v80 + 16);
        v79[3] = v80[3];
        v79[4] = v80[4];
        v79[5] = v80[5];
        v79[6] = v80[6];
        v98 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        __dstb = (char *)v80 + v98;
        v229 = (char *)v79 + v98;
        v99 = sub_2490E7ABC();
        v220 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v220(v229, __dstb, v99);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v84);
  }
  v104 = *(int *)(v81 + 20);
  v105 = (char *)v79 + v104;
  v106 = (char *)v80 + v104;
  v107 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
  __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
LABEL_88:
  v125 = a3[25];
  v126 = a1 + v125;
  v127 = a2 + v125;
  v128 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v129 = __swift_getEnumTagSinglePayload(v126, 1, v128);
  v130 = __swift_getEnumTagSinglePayload(v127, 1, v128);
  if (!v129)
  {
    if (v130)
    {
      sub_248E25C30(v126, type metadata accessor for ToolKitProtoContainerDefinition);
      goto LABEL_94;
    }
    *(_QWORD *)v126 = *(_QWORD *)v127;
    *(_QWORD *)(v126 + 8) = *(_QWORD *)(v127 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v126 + 16) = *(_QWORD *)(v127 + 16);
    *(_QWORD *)(v126 + 24) = *(_QWORD *)(v127 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v126 + 32) = *(_BYTE *)(v127 + 32);
    *(_BYTE *)(v126 + 33) = *(_BYTE *)(v127 + 33);
    *(_QWORD *)(v126 + 40) = *(_QWORD *)(v127 + 40);
    *(_QWORD *)(v126 + 48) = *(_QWORD *)(v127 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v126 + 56) = *(_QWORD *)(v127 + 56);
    *(_QWORD *)(v126 + 64) = *(_QWORD *)(v127 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v136 = *(int *)(v128 + 40);
    v137 = (_QWORD *)(v126 + v136);
    v138 = (_QWORD *)(v127 + v136);
    v139 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v140 = __swift_getEnumTagSinglePayload((uint64_t)v137, 1, v139);
    v141 = __swift_getEnumTagSinglePayload((uint64_t)v138, 1, v139);
    if (v140)
    {
      if (!v141)
      {
        if (v138[1] == 1)
        {
          *(_OWORD *)v137 = *(_OWORD *)v138;
        }
        else
        {
          *v137 = *v138;
          v137[1] = v138[1];
          swift_bridgeObjectRetain();
        }
        v152 = *(int *)(v139 + 20);
        v153 = (char *)v137 + v152;
        v154 = (char *)v138 + v152;
        v155 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v153, v154, v155);
        __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v139);
        goto LABEL_117;
      }
      goto LABEL_103;
    }
    if (v141)
    {
      sub_248E25C30((uint64_t)v137, type metadata accessor for ToolKitProtoContainerDefinition.Device);
LABEL_103:
      v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
LABEL_117:
      v160 = *(int *)(v128 + 44);
      v161 = v126 + v160;
      v162 = v127 + v160;
      v163 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 24))(v161, v162, v163);
      goto LABEL_118;
    }
    v151 = v138[1];
    if (v137[1] == 1)
    {
      if (v151 != 1)
      {
        *v137 = *v138;
        v137[1] = v138[1];
        swift_bridgeObjectRetain();
LABEL_116:
        v156 = *(int *)(v139 + 20);
        v157 = (char *)v137 + v156;
        v158 = (char *)v138 + v156;
        v159 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 24))(v157, v158, v159);
        goto LABEL_117;
      }
    }
    else
    {
      if (v151 != 1)
      {
        *v137 = *v138;
        v137[1] = v138[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      sub_248E00F4C((uint64_t)v137);
    }
    *(_OWORD *)v137 = *(_OWORD *)v138;
    goto LABEL_116;
  }
  if (v130)
  {
LABEL_94:
    v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy((void *)v126, (const void *)v127, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
    goto LABEL_118;
  }
  *(_QWORD *)v126 = *(_QWORD *)v127;
  *(_QWORD *)(v126 + 8) = *(_QWORD *)(v127 + 8);
  *(_QWORD *)(v126 + 16) = *(_QWORD *)(v127 + 16);
  *(_QWORD *)(v126 + 24) = *(_QWORD *)(v127 + 24);
  *(_BYTE *)(v126 + 32) = *(_BYTE *)(v127 + 32);
  *(_BYTE *)(v126 + 33) = *(_BYTE *)(v127 + 33);
  *(_QWORD *)(v126 + 40) = *(_QWORD *)(v127 + 40);
  *(_QWORD *)(v126 + 48) = *(_QWORD *)(v127 + 48);
  *(_QWORD *)(v126 + 56) = *(_QWORD *)(v127 + 56);
  *(_QWORD *)(v126 + 64) = *(_QWORD *)(v127 + 64);
  v131 = *(int *)(v128 + 40);
  v239 = (_QWORD *)(v126 + v131);
  v132 = (_QWORD *)(v127 + v131);
  v133 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v133))
  {
    v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v239, v132, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
  }
  else
  {
    if (v132[1] == 1)
    {
      *(_OWORD *)v239 = *(_OWORD *)v132;
    }
    else
    {
      *v239 = *v132;
      v239[1] = v132[1];
      swift_bridgeObjectRetain();
    }
    v143 = *(int *)(v133 + 20);
    v245 = v133;
    v144 = (char *)v239 + v143;
    v145 = (char *)v132 + v143;
    v146 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
    __swift_storeEnumTagSinglePayload((uint64_t)v239, 0, 1, v245);
  }
  v147 = *(int *)(v128 + 44);
  v148 = v126 + v147;
  v149 = v127 + v147;
  v150 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
  __swift_storeEnumTagSinglePayload(v126, 0, 1, v128);
LABEL_118:
  v164 = a3[26];
  v165 = a1 + v164;
  v166 = a2 + v164;
  v167 = __swift_getEnumTagSinglePayload(a1 + v164, 1, v128);
  v168 = __swift_getEnumTagSinglePayload(v166, 1, v128);
  if (!v167)
  {
    if (v168)
    {
      sub_248E25C30(v165, type metadata accessor for ToolKitProtoContainerDefinition);
      goto LABEL_124;
    }
    *(_QWORD *)v165 = *(_QWORD *)v166;
    *(_QWORD *)(v165 + 8) = *(_QWORD *)(v166 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 16) = *(_QWORD *)(v166 + 16);
    *(_QWORD *)(v165 + 24) = *(_QWORD *)(v166 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v165 + 32) = *(_BYTE *)(v166 + 32);
    *(_BYTE *)(v165 + 33) = *(_BYTE *)(v166 + 33);
    *(_QWORD *)(v165 + 40) = *(_QWORD *)(v166 + 40);
    *(_QWORD *)(v165 + 48) = *(_QWORD *)(v166 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 56) = *(_QWORD *)(v166 + 56);
    *(_QWORD *)(v165 + 64) = *(_QWORD *)(v166 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v174 = *(int *)(v128 + 40);
    v175 = (_QWORD *)(v165 + v174);
    v176 = (_QWORD *)(v166 + v174);
    v177 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v178 = __swift_getEnumTagSinglePayload((uint64_t)v175, 1, v177);
    v179 = __swift_getEnumTagSinglePayload((uint64_t)v176, 1, v177);
    if (v178)
    {
      if (!v179)
      {
        if (v176[1] == 1)
        {
          *(_OWORD *)v175 = *(_OWORD *)v176;
        }
        else
        {
          *v175 = *v176;
          v175[1] = v176[1];
          swift_bridgeObjectRetain();
        }
        v190 = *(int *)(v177 + 20);
        v191 = (char *)v175 + v190;
        v192 = (char *)v176 + v190;
        v193 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v191, v192, v193);
        __swift_storeEnumTagSinglePayload((uint64_t)v175, 0, 1, v177);
        goto LABEL_147;
      }
      goto LABEL_133;
    }
    if (v179)
    {
      sub_248E25C30((uint64_t)v175, type metadata accessor for ToolKitProtoContainerDefinition.Device);
LABEL_133:
      v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
LABEL_147:
      v198 = *(int *)(v128 + 44);
      v199 = v165 + v198;
      v200 = v166 + v198;
      v201 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 24))(v199, v200, v201);
      goto LABEL_148;
    }
    v189 = v176[1];
    if (v175[1] == 1)
    {
      if (v189 != 1)
      {
        *v175 = *v176;
        v175[1] = v176[1];
        swift_bridgeObjectRetain();
LABEL_146:
        v194 = *(int *)(v177 + 20);
        v195 = (char *)v175 + v194;
        v196 = (char *)v176 + v194;
        v197 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 24))(v195, v196, v197);
        goto LABEL_147;
      }
    }
    else
    {
      if (v189 != 1)
      {
        *v175 = *v176;
        v175[1] = v176[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_146;
      }
      sub_248E00F4C((uint64_t)v175);
    }
    *(_OWORD *)v175 = *(_OWORD *)v176;
    goto LABEL_146;
  }
  if (v168)
  {
LABEL_124:
    v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy((void *)v165, (const void *)v166, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
    goto LABEL_148;
  }
  *(_QWORD *)v165 = *(_QWORD *)v166;
  *(_QWORD *)(v165 + 8) = *(_QWORD *)(v166 + 8);
  *(_QWORD *)(v165 + 16) = *(_QWORD *)(v166 + 16);
  *(_QWORD *)(v165 + 24) = *(_QWORD *)(v166 + 24);
  *(_BYTE *)(v165 + 32) = *(_BYTE *)(v166 + 32);
  *(_BYTE *)(v165 + 33) = *(_BYTE *)(v166 + 33);
  *(_QWORD *)(v165 + 40) = *(_QWORD *)(v166 + 40);
  *(_QWORD *)(v165 + 48) = *(_QWORD *)(v166 + 48);
  *(_QWORD *)(v165 + 56) = *(_QWORD *)(v166 + 56);
  *(_QWORD *)(v165 + 64) = *(_QWORD *)(v166 + 64);
  v169 = *(int *)(v128 + 40);
  v240 = (_QWORD *)(v165 + v169);
  v170 = (_QWORD *)(v166 + v169);
  v171 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v170, 1, v171))
  {
    v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v240, v170, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
  }
  else
  {
    if (v170[1] == 1)
    {
      *(_OWORD *)v240 = *(_OWORD *)v170;
    }
    else
    {
      *v240 = *v170;
      v240[1] = v170[1];
      swift_bridgeObjectRetain();
    }
    v181 = *(int *)(v171 + 20);
    v246 = v171;
    v182 = (char *)v240 + v181;
    v183 = (char *)v170 + v181;
    v184 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v182, v183, v184);
    __swift_storeEnumTagSinglePayload((uint64_t)v240, 0, 1, v246);
  }
  v185 = *(int *)(v128 + 44);
  v186 = v165 + v185;
  v187 = v166 + v185;
  v188 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v186, v187, v188);
  __swift_storeEnumTagSinglePayload(v165, 0, 1, v128);
LABEL_148:
  v202 = a3[27];
  v203 = (_QWORD *)(a1 + v202);
  v204 = (_QWORD *)(a2 + v202);
  *v203 = *v204;
  v203[1] = v204[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v205 = a3[28];
  v206 = (_QWORD *)(a1 + v205);
  v207 = (_QWORD *)(a2 + v205);
  *v206 = *v207;
  v206[1] = v207[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v208 = a3[29];
  v209 = (_QWORD *)(a1 + v208);
  v210 = (_QWORD *)(a2 + v208);
  *v209 = *v210;
  v209[1] = v210[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v211 = a3[30];
  v212 = (_QWORD *)(a1 + v211);
  v213 = (_QWORD *)(a2 + v211);
  *v212 = *v213;
  v212[1] = v213[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v214 = a3[31];
  v215 = a1 + v214;
  v216 = a2 + v214;
  v217 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v217 - 8) + 24))(v215, v216, v217);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoToolDefinition.Version1(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  _OWORD *v74;
  _OWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  _OWORD *v92;
  _OWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v7 = a3[19];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v16 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  v17 = (_OWORD *)(a1 + v16);
  v18 = (_OWORD *)(a2 + v16);
  v19 = type metadata accessor for ToolKitProtoAppDefinition(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = v18[1];
    *v17 = *v18;
    v17[1] = v21;
    v22 = v18[3];
    v17[2] = v18[2];
    v17[3] = v22;
    v17[4] = v18[4];
    *((_BYTE *)v17 + 80) = *((_BYTE *)v18 + 80);
    v23 = *(int *)(v19 + 40);
    v24 = (_OWORD *)((char *)v17 + v23);
    v25 = (_OWORD *)((char *)v18 + v23);
    v26 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v24 = *v25;
      v28 = *(int *)(v26 + 20);
      v29 = (char *)v24 + v28;
      v30 = (char *)v25 + v28;
      v31 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
    }
    v32 = *(int *)(v19 + 44);
    v33 = (char *)v17 + v32;
    v34 = (char *)v18 + v32;
    v35 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  v36 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  v37 = (_OWORD *)(a1 + v36);
  v38 = (_OWORD *)(a2 + v36);
  v39 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v41 = v38[1];
    *v37 = *v38;
    v37[1] = v41;
    v42 = *(int *)(v39 + 24);
    v43 = (char *)v37 + v42;
    v44 = (char *)v38 + v42;
    v45 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
    __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
  }
  v46 = a3[24];
  v47 = (_OWORD *)(a1 + v46);
  v48 = (_OWORD *)(a2 + v46);
  v49 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  v51 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v51))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v58 = v48[1];
      *v47 = *v48;
      v47[1] = v58;
      v59 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v60 = (char *)v47 + v59;
      v61 = (char *)v48 + v59;
      v62 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        goto LABEL_23;
      }
      *v47 = *v48;
      *((_BYTE *)v47 + 16) = *((_BYTE *)v48 + 16);
      *(_OWORD *)((char *)v47 + 24) = *(_OWORD *)((char *)v48 + 24);
      *(_OWORD *)((char *)v47 + 40) = *(_OWORD *)((char *)v48 + 40);
      v54 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      v55 = (char *)v47 + v54;
      v56 = (char *)v48 + v54;
      v57 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v51);
    goto LABEL_24;
  }
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
  memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_24:
  v63 = *(int *)(v49 + 20);
  v64 = (char *)v47 + v63;
  v65 = (char *)v48 + v63;
  v66 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
LABEL_25:
  v67 = a3[25];
  v68 = (_OWORD *)(a1 + v67);
  v69 = (_OWORD *)(a2 + v67);
  v70 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v72 = v69[1];
    *v68 = *v69;
    v68[1] = v72;
    *((_WORD *)v68 + 16) = *((_WORD *)v69 + 16);
    *(_OWORD *)((char *)v68 + 40) = *(_OWORD *)((char *)v69 + 40);
    *(_OWORD *)((char *)v68 + 56) = *(_OWORD *)((char *)v69 + 56);
    v73 = *(int *)(v70 + 40);
    v74 = (_OWORD *)((char *)v68 + v73);
    v75 = (_OWORD *)((char *)v69 + v73);
    v76 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      *v74 = *v75;
      v78 = *(int *)(v76 + 20);
      v79 = (char *)v74 + v78;
      v80 = (char *)v75 + v78;
      v81 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
      __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
    }
    v82 = *(int *)(v70 + 44);
    v83 = (char *)v68 + v82;
    v84 = (char *)v69 + v82;
    v85 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v83, v84, v85);
    __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
  }
  v86 = a3[26];
  v87 = (_OWORD *)(a1 + v86);
  v88 = (_OWORD *)(a2 + v86);
  if (__swift_getEnumTagSinglePayload(a2 + v86, 1, v70))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    v90 = v88[1];
    *v87 = *v88;
    v87[1] = v90;
    *((_WORD *)v87 + 16) = *((_WORD *)v88 + 16);
    *(_OWORD *)((char *)v87 + 40) = *(_OWORD *)((char *)v88 + 40);
    *(_OWORD *)((char *)v87 + 56) = *(_OWORD *)((char *)v88 + 56);
    v91 = *(int *)(v70 + 40);
    v92 = (_OWORD *)((char *)v87 + v91);
    v93 = (_OWORD *)((char *)v88 + v91);
    v94 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v94))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      *v92 = *v93;
      v96 = *(int *)(v94 + 20);
      v97 = (char *)v92 + v96;
      v98 = (char *)v93 + v96;
      v99 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
      __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v94);
    }
    v100 = *(int *)(v70 + 44);
    v101 = (char *)v87 + v100;
    v102 = (char *)v88 + v100;
    v103 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
    __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v70);
  }
  v104 = a3[28];
  *(_OWORD *)(a1 + a3[27]) = *(_OWORD *)(a2 + a3[27]);
  *(_OWORD *)(a1 + v104) = *(_OWORD *)(a2 + v104);
  v105 = a3[30];
  *(_OWORD *)(a1 + a3[29]) = *(_OWORD *)(a2 + a3[29]);
  *(_OWORD *)(a1 + v105) = *(_OWORD *)(a2 + v105);
  v106 = a3[31];
  v107 = a1 + v106;
  v108 = a2 + v106;
  v109 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoToolDefinition.Version1(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  int v77;
  __int128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  _OWORD *v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  int EnumCaseMultiPayload;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  int v155;
  __int128 v156;
  uint64_t v157;
  _OWORD *v158;
  _OWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  int v171;
  int v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  int v194;
  __int128 v195;
  uint64_t v196;
  _OWORD *v197;
  _OWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  _QWORD *v208;
  uint64_t v209;
  int v210;
  int v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  v8 = a3[19];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      *v9 = *v10;
      v14 = *(int *)(v11 + 20);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_248E25C30((uint64_t)v9, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v38 = *v10;
  if ((~*v9 & 0xF000000000000007) != 0)
  {
    if ((~v38 & 0xF000000000000007) != 0)
    {
      *v9 = v38;
      swift_release();
    }
    else
    {
      sub_248E42024((uint64_t)v9);
      *v9 = *v10;
    }
  }
  else
  {
    *v9 = v38;
  }
  v113 = *(int *)(v11 + 20);
  v114 = (char *)v9 + v113;
  v115 = (char *)v10 + v113;
  v116 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 40))(v114, v115, v116);
LABEL_7:
  v19 = a3[20];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[21];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v28 = __swift_getEnumTagSinglePayload(v25, 1, v27);
  v29 = __swift_getEnumTagSinglePayload(v26, 1, v27);
  if (!v28)
  {
    if (v29)
    {
      sub_248E25C30(v25, type metadata accessor for ToolKitProtoAppDefinition);
      goto LABEL_13;
    }
    v39 = *(_QWORD *)(v26 + 8);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_QWORD *)(v25 + 8) = v39;
    swift_bridgeObjectRelease();
    v40 = *(_QWORD *)(v26 + 24);
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
    *(_QWORD *)(v25 + 24) = v40;
    swift_bridgeObjectRelease();
    v41 = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    *(_QWORD *)(v25 + 40) = v41;
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(v26 + 56);
    *(_QWORD *)(v25 + 48) = *(_QWORD *)(v26 + 48);
    *(_QWORD *)(v25 + 56) = v42;
    swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v26 + 72);
    *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
    *(_QWORD *)(v25 + 72) = v43;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v25 + 80) = *(_BYTE *)(v26 + 80);
    v44 = *(int *)(v27 + 40);
    v45 = (_QWORD *)(v25 + v44);
    v46 = (_QWORD *)(v26 + v44);
    v47 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    v48 = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v47);
    v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47);
    if (v48)
    {
      if (!v49)
      {
        *(_OWORD *)v45 = *(_OWORD *)v46;
        v50 = *(int *)(v47 + 20);
        v51 = (char *)v45 + v50;
        v52 = (char *)v46 + v50;
        v53 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
LABEL_26:
        v63 = *(int *)(v27 + 44);
        v64 = v25 + v63;
        v65 = v26 + v63;
        v66 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
        goto LABEL_27;
      }
LABEL_25:
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      goto LABEL_26;
    }
    if (v49)
    {
      sub_248E25C30((uint64_t)v45, type metadata accessor for ToolKitProtoAppDefinition.Device);
      goto LABEL_25;
    }
    if (v45[1] != 1)
    {
      v126 = v46[1];
      if (v126 != 1)
      {
        *v45 = *v46;
        v45[1] = v126;
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      sub_248E00F4C((uint64_t)v45);
    }
    *(_OWORD *)v45 = *(_OWORD *)v46;
LABEL_73:
    v137 = *(int *)(v47 + 20);
    v138 = (char *)v45 + v137;
    v139 = (char *)v46 + v137;
    v140 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 40))(v138, v139, v140);
    goto LABEL_26;
  }
  if (v29)
  {
LABEL_13:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
    memcpy((void *)v25, (const void *)v26, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_27;
  }
  v30 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v30;
  v31 = *(_OWORD *)(v26 + 48);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(_OWORD *)(v25 + 48) = v31;
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
  *(_BYTE *)(v25 + 80) = *(_BYTE *)(v26 + 80);
  v32 = *(int *)(v27 + 40);
  v33 = (_OWORD *)(v25 + v32);
  v34 = (_OWORD *)(v26 + v32);
  v35 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    *v33 = *v34;
    v54 = *(int *)(v35 + 20);
    v55 = (char *)v33 + v54;
    v56 = (char *)v34 + v54;
    v57 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  }
  v58 = *(int *)(v27 + 44);
  v59 = v25 + v58;
  v60 = v26 + v58;
  v61 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
  __swift_storeEnumTagSinglePayload(v25, 0, 1, v27);
LABEL_27:
  v67 = a3[22];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  v72 = a3[23];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  v75 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v76 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v75);
  v77 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      v78 = *((_OWORD *)v74 + 1);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *((_OWORD *)v73 + 1) = v78;
      v79 = *(int *)(v75 + 24);
      v80 = (char *)v73 + v79;
      v81 = (char *)v74 + v79;
      v82 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
      __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v75);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v77)
  {
    sub_248E25C30((uint64_t)v73, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
LABEL_32:
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_33;
  }
  v93 = v74[1];
  *v73 = *v74;
  v73[1] = v93;
  swift_bridgeObjectRelease();
  v94 = v74[3];
  v73[2] = v74[2];
  v73[3] = v94;
  swift_bridgeObjectRelease();
  v95 = *(int *)(v75 + 24);
  v96 = (char *)v73 + v95;
  v97 = (char *)v74 + v95;
  v98 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 40))(v96, v97, v98);
LABEL_33:
  v84 = a3[24];
  v85 = (_OWORD *)(a1 + v84);
  v86 = (_OWORD *)(a2 + v84);
  v87 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v88 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v87);
  v89 = __swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87);
  if (v88)
  {
    if (!v89)
    {
      v90 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v90))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
LABEL_59:
        v122 = *(int *)(v87 + 20);
        v123 = (char *)v85 + v122;
        v124 = (char *)v86 + v122;
        v125 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
        __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
        goto LABEL_77;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v117 = v86[1];
        *v85 = *v86;
        v85[1] = v117;
        v118 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                      + 24);
        v119 = (char *)v85 + v118;
        v120 = (char *)v86 + v118;
        v121 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          goto LABEL_58;
        }
        *v85 = *v86;
        *((_BYTE *)v85 + 16) = *((_BYTE *)v86 + 16);
        *(_OWORD *)((char *)v85 + 24) = *(_OWORD *)((char *)v86 + 24);
        *(_OWORD *)((char *)v85 + 40) = *(_OWORD *)((char *)v86 + 40);
        v108 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v109 = (char *)v85 + v108;
        v110 = (char *)v86 + v108;
        v111 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
      }
      swift_storeEnumTagMultiPayload();
LABEL_58:
      __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v90);
      goto LABEL_59;
    }
LABEL_39:
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_77;
  }
  if (v89)
  {
    sub_248E25C30((uint64_t)v85, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
    goto LABEL_39;
  }
  v99 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  v100 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v99);
  v101 = __swift_getEnumTagSinglePayload((uint64_t)v86, 1, v99);
  if (v100)
  {
    if (!v101)
    {
      v102 = swift_getEnumCaseMultiPayload();
      if (v102 == 2)
      {
        v132 = v86[1];
        *v85 = *v86;
        v85[1] = v132;
        v133 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                      + 24);
        v134 = (char *)v85 + v133;
        v135 = (char *)v86 + v133;
        v136 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
      }
      else
      {
        if (v102 != 1)
        {
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
          goto LABEL_71;
        }
        *v85 = *v86;
        *((_BYTE *)v85 + 16) = *((_BYTE *)v86 + 16);
        *(_OWORD *)((char *)v85 + 24) = *(_OWORD *)((char *)v86 + 24);
        *(_OWORD *)((char *)v85 + 40) = *(_OWORD *)((char *)v86 + 40);
        v103 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v104 = (char *)v85 + v103;
        v105 = (char *)v86 + v103;
        v106 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
      }
      swift_storeEnumTagMultiPayload();
LABEL_71:
      __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v99);
      goto LABEL_76;
    }
  }
  else
  {
    if (!v101)
    {
      if (a1 == a2)
        goto LABEL_76;
      sub_248E25C30((uint64_t)v85, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      v127 = swift_getEnumCaseMultiPayload();
      if (v127 == 2)
      {
        v141 = v86[1];
        *v85 = *v86;
        v85[1] = v141;
        v142 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                      + 24);
        v143 = (char *)v85 + v142;
        v144 = (char *)v86 + v142;
        v145 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
      }
      else
      {
        if (v127 != 1)
        {
          v112 = *(_QWORD *)(v99 - 8);
          goto LABEL_52;
        }
        *v85 = *v86;
        *((_BYTE *)v85 + 16) = *((_BYTE *)v86 + 16);
        *(_OWORD *)((char *)v85 + 24) = *(_OWORD *)((char *)v86 + 24);
        *(_OWORD *)((char *)v85 + 40) = *(_OWORD *)((char *)v86 + 40);
        v128 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v129 = (char *)v85 + v128;
        v130 = (char *)v86 + v128;
        v131 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v129, v130, v131);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_76;
    }
    sub_248E25C30((uint64_t)v85, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
  }
  v112 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475E40) - 8);
LABEL_52:
  memcpy(v85, v86, *(_QWORD *)(v112 + 64));
LABEL_76:
  v146 = *(int *)(v87 + 20);
  v147 = (char *)v85 + v146;
  v148 = (char *)v86 + v146;
  v149 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 40))(v147, v148, v149);
LABEL_77:
  v150 = a3[25];
  v151 = a1 + v150;
  v152 = a2 + v150;
  v153 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v154 = __swift_getEnumTagSinglePayload(v151, 1, v153);
  v155 = __swift_getEnumTagSinglePayload(v152, 1, v153);
  if (!v154)
  {
    if (v155)
    {
      sub_248E25C30(v151, type metadata accessor for ToolKitProtoContainerDefinition);
      goto LABEL_83;
    }
    v163 = *(_QWORD *)(v152 + 8);
    *(_QWORD *)v151 = *(_QWORD *)v152;
    *(_QWORD *)(v151 + 8) = v163;
    swift_bridgeObjectRelease();
    v164 = *(_QWORD *)(v152 + 24);
    *(_QWORD *)(v151 + 16) = *(_QWORD *)(v152 + 16);
    *(_QWORD *)(v151 + 24) = v164;
    swift_bridgeObjectRelease();
    *(_WORD *)(v151 + 32) = *(_WORD *)(v152 + 32);
    v165 = *(_QWORD *)(v152 + 48);
    *(_QWORD *)(v151 + 40) = *(_QWORD *)(v152 + 40);
    *(_QWORD *)(v151 + 48) = v165;
    swift_bridgeObjectRelease();
    v166 = *(_QWORD *)(v152 + 64);
    *(_QWORD *)(v151 + 56) = *(_QWORD *)(v152 + 56);
    *(_QWORD *)(v151 + 64) = v166;
    swift_bridgeObjectRelease();
    v167 = *(int *)(v153 + 40);
    v168 = (_QWORD *)(v151 + v167);
    v169 = (_QWORD *)(v152 + v167);
    v170 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v171 = __swift_getEnumTagSinglePayload((uint64_t)v168, 1, v170);
    v172 = __swift_getEnumTagSinglePayload((uint64_t)v169, 1, v170);
    if (v171)
    {
      if (!v172)
      {
        *(_OWORD *)v168 = *(_OWORD *)v169;
        v173 = *(int *)(v170 + 20);
        v174 = (char *)v168 + v173;
        v175 = (char *)v169 + v173;
        v176 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
        __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v170);
LABEL_92:
        v186 = *(int *)(v153 + 44);
        v187 = v151 + v186;
        v188 = v152 + v186;
        v189 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v189 - 8) + 40))(v187, v188, v189);
        goto LABEL_93;
      }
LABEL_91:
      v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
      goto LABEL_92;
    }
    if (v172)
    {
      sub_248E25C30((uint64_t)v168, type metadata accessor for ToolKitProtoContainerDefinition.Device);
      goto LABEL_91;
    }
    if (v168[1] != 1)
    {
      v254 = v169[1];
      if (v254 != 1)
      {
        *v168 = *v169;
        v168[1] = v254;
        swift_bridgeObjectRelease();
        goto LABEL_119;
      }
      sub_248E00F4C((uint64_t)v168);
    }
    *(_OWORD *)v168 = *(_OWORD *)v169;
LABEL_119:
    v256 = *(int *)(v170 + 20);
    v257 = (char *)v168 + v256;
    v258 = (char *)v169 + v256;
    v259 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 40))(v257, v258, v259);
    goto LABEL_92;
  }
  if (v155)
  {
LABEL_83:
    v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy((void *)v151, (const void *)v152, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
    goto LABEL_93;
  }
  v156 = *(_OWORD *)(v152 + 16);
  *(_OWORD *)v151 = *(_OWORD *)v152;
  *(_OWORD *)(v151 + 16) = v156;
  *(_WORD *)(v151 + 32) = *(_WORD *)(v152 + 32);
  *(_OWORD *)(v151 + 40) = *(_OWORD *)(v152 + 40);
  *(_OWORD *)(v151 + 56) = *(_OWORD *)(v152 + 56);
  v157 = *(int *)(v153 + 40);
  v158 = (_OWORD *)(v151 + v157);
  v159 = (_OWORD *)(v152 + v157);
  v160 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v159, 1, v160))
  {
    v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
  }
  else
  {
    *v158 = *v159;
    v177 = *(int *)(v160 + 20);
    v178 = (char *)v158 + v177;
    v179 = (char *)v159 + v177;
    v180 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v178, v179, v180);
    __swift_storeEnumTagSinglePayload((uint64_t)v158, 0, 1, v160);
  }
  v181 = *(int *)(v153 + 44);
  v182 = v151 + v181;
  v183 = v152 + v181;
  v184 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
  __swift_storeEnumTagSinglePayload(v151, 0, 1, v153);
LABEL_93:
  v190 = a3[26];
  v191 = a1 + v190;
  v192 = a2 + v190;
  v193 = __swift_getEnumTagSinglePayload(a1 + v190, 1, v153);
  v194 = __swift_getEnumTagSinglePayload(v192, 1, v153);
  if (!v193)
  {
    if (v194)
    {
      sub_248E25C30(v191, type metadata accessor for ToolKitProtoContainerDefinition);
      goto LABEL_99;
    }
    v202 = *(_QWORD *)(v192 + 8);
    *(_QWORD *)v191 = *(_QWORD *)v192;
    *(_QWORD *)(v191 + 8) = v202;
    swift_bridgeObjectRelease();
    v203 = *(_QWORD *)(v192 + 24);
    *(_QWORD *)(v191 + 16) = *(_QWORD *)(v192 + 16);
    *(_QWORD *)(v191 + 24) = v203;
    swift_bridgeObjectRelease();
    *(_WORD *)(v191 + 32) = *(_WORD *)(v192 + 32);
    v204 = *(_QWORD *)(v192 + 48);
    *(_QWORD *)(v191 + 40) = *(_QWORD *)(v192 + 40);
    *(_QWORD *)(v191 + 48) = v204;
    swift_bridgeObjectRelease();
    v205 = *(_QWORD *)(v192 + 64);
    *(_QWORD *)(v191 + 56) = *(_QWORD *)(v192 + 56);
    *(_QWORD *)(v191 + 64) = v205;
    swift_bridgeObjectRelease();
    v206 = *(int *)(v153 + 40);
    v207 = (_QWORD *)(v191 + v206);
    v208 = (_QWORD *)(v192 + v206);
    v209 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v210 = __swift_getEnumTagSinglePayload((uint64_t)v207, 1, v209);
    v211 = __swift_getEnumTagSinglePayload((uint64_t)v208, 1, v209);
    if (v210)
    {
      if (!v211)
      {
        *(_OWORD *)v207 = *(_OWORD *)v208;
        v212 = *(int *)(v209 + 20);
        v213 = (char *)v207 + v212;
        v214 = (char *)v208 + v212;
        v215 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
        __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v209);
LABEL_108:
        v225 = *(int *)(v153 + 44);
        v226 = v191 + v225;
        v227 = v192 + v225;
        v228 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 40))(v226, v227, v228);
        goto LABEL_109;
      }
LABEL_107:
      v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
      goto LABEL_108;
    }
    if (v211)
    {
      sub_248E25C30((uint64_t)v207, type metadata accessor for ToolKitProtoContainerDefinition.Device);
      goto LABEL_107;
    }
    if (v207[1] != 1)
    {
      v255 = v208[1];
      if (v255 != 1)
      {
        *v207 = *v208;
        v207[1] = v255;
        swift_bridgeObjectRelease();
        goto LABEL_121;
      }
      sub_248E00F4C((uint64_t)v207);
    }
    *(_OWORD *)v207 = *(_OWORD *)v208;
LABEL_121:
    v260 = *(int *)(v209 + 20);
    v261 = (char *)v207 + v260;
    v262 = (char *)v208 + v260;
    v263 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 40))(v261, v262, v263);
    goto LABEL_108;
  }
  if (v194)
  {
LABEL_99:
    v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy((void *)v191, (const void *)v192, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
    goto LABEL_109;
  }
  v195 = *(_OWORD *)(v192 + 16);
  *(_OWORD *)v191 = *(_OWORD *)v192;
  *(_OWORD *)(v191 + 16) = v195;
  *(_WORD *)(v191 + 32) = *(_WORD *)(v192 + 32);
  *(_OWORD *)(v191 + 40) = *(_OWORD *)(v192 + 40);
  *(_OWORD *)(v191 + 56) = *(_OWORD *)(v192 + 56);
  v196 = *(int *)(v153 + 40);
  v197 = (_OWORD *)(v191 + v196);
  v198 = (_OWORD *)(v192 + v196);
  v199 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v198, 1, v199))
  {
    v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
  }
  else
  {
    *v197 = *v198;
    v216 = *(int *)(v199 + 20);
    v217 = (char *)v197 + v216;
    v218 = (char *)v198 + v216;
    v219 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v217, v218, v219);
    __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, v199);
  }
  v220 = *(int *)(v153 + 44);
  v221 = v191 + v220;
  v222 = v192 + v220;
  v223 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v221, v222, v223);
  __swift_storeEnumTagSinglePayload(v191, 0, 1, v153);
LABEL_109:
  v229 = a3[27];
  v230 = (_QWORD *)(a1 + v229);
  v231 = (uint64_t *)(a2 + v229);
  v233 = *v231;
  v232 = v231[1];
  *v230 = v233;
  v230[1] = v232;
  swift_bridgeObjectRelease();
  v234 = a3[28];
  v235 = (_QWORD *)(a1 + v234);
  v236 = (uint64_t *)(a2 + v234);
  v238 = *v236;
  v237 = v236[1];
  *v235 = v238;
  v235[1] = v237;
  swift_bridgeObjectRelease();
  v239 = a3[29];
  v240 = (_QWORD *)(a1 + v239);
  v241 = (uint64_t *)(a2 + v239);
  v243 = *v241;
  v242 = v241[1];
  *v240 = v243;
  v240[1] = v242;
  swift_bridgeObjectRelease();
  v244 = a3[30];
  v245 = (_QWORD *)(a1 + v244);
  v246 = (uint64_t *)(a2 + v244);
  v248 = *v246;
  v247 = v246[1];
  *v245 = v248;
  v245[1] = v247;
  swift_bridgeObjectRelease();
  v249 = a3[31];
  v250 = a1 + v249;
  v251 = a2 + v249;
  v252 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v252 - 8) + 40))(v250, v251, v252);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EF1190()
{
  uint64_t v0;
  int *v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    OUTLINED_FUNCTION_24_6();
    if (v2)
    {
      v3 = v1[19];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
      OUTLINED_FUNCTION_24_6();
      if (v4)
      {
        v3 = v1[21];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
        OUTLINED_FUNCTION_24_6();
        if (v5)
        {
          v3 = v1[23];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
          OUTLINED_FUNCTION_24_6();
          if (v6)
          {
            v3 = v1[24];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
            OUTLINED_FUNCTION_24_6();
            if (v7)
            {
              v3 = v1[25];
            }
            else
            {
              OUTLINED_FUNCTION_63();
              v3 = v1[31];
            }
          }
        }
      }
    }
    v8 = OUTLINED_FUNCTION_94_1(v3);
    OUTLINED_FUNCTION_265(v8, v9, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EF1280()
{
  int *v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    OUTLINED_FUNCTION_32_0();
    if (v1)
    {
      v2 = v0[19];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
      OUTLINED_FUNCTION_32_0();
      if (v3)
      {
        v2 = v0[21];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
        OUTLINED_FUNCTION_32_0();
        if (v4)
        {
          v2 = v0[23];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
          OUTLINED_FUNCTION_32_0();
          if (v5)
          {
            v2 = v0[24];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
            OUTLINED_FUNCTION_32_0();
            if (v6)
            {
              v2 = v0[25];
            }
            else
            {
              OUTLINED_FUNCTION_63();
              v2 = v0[31];
            }
          }
        }
      }
    }
    v7 = OUTLINED_FUNCTION_44_5(v2);
    OUTLINED_FUNCTION_264(v7, v8, v9, v10);
  }
}

void sub_248EF1360()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_248E0EBD8(319, &qword_254475220, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
  if (v0 <= 0x3F)
  {
    sub_248E0EBD8(319, &qword_2544752A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition);
    if (v1 <= 0x3F)
    {
      sub_248E0EBD8(319, &qword_254475E78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
      if (v2 <= 0x3F)
      {
        sub_248E0EBD8(319, &qword_254475E08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
        if (v3 <= 0x3F)
        {
          sub_248E0EBD8(319, &qword_2544758F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition);
          if (v4 <= 0x3F)
          {
            sub_2490E7ABC();
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolType()
{
  OUTLINED_FUNCTION_164();
}

uint64_t _s7ToolKit10TypedValueO14PrimitiveValueO18PaymentMethodValueV4TypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_140_0(-1);
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_140_0((*a1 | (v4 << 8)) - 9);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_140_0((*a1 | (v4 << 8)) - 9);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_140_0((*a1 | (v4 << 8)) - 9);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_140_0(v8);
}

uint64_t _s7ToolKit22ToolKitProtoTypedValueV14PrimitiveValueV13PaymentMethodV8TypeEnumOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_248EF15D4 + 4 * byte_2490F39A1[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_177_0_3 + 4 * byte_2490F399C[v4]))();
}

uint64_t sub_248EF160C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248EF1614);
  return result;
}

_BYTE *sub_248EF161C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x248EF1624);
  return OUTLINED_FUNCTION_176_0((_BYTE *)a1, a2 + 8);
}

void type metadata accessor for ToolKitProtoToolDefinition.Version1.Flag()
{
  OUTLINED_FUNCTION_164();
}

void type metadata accessor for ToolKitProtoToolDefinition.Version1.VisibilityFlag()
{
  OUTLINED_FUNCTION_164();
}

void type metadata accessor for ToolKitProtoToolDefinition.Version1.AuthenticationPolicy()
{
  OUTLINED_FUNCTION_164();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1.Parameter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *__dst;
  char *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    v10 = *(int *)(a3 + 40);
    __dst = (uint64_t *)((char *)a1 + v10);
    v11 = (uint64_t *)((char *)a2 + v10);
    a1[8] = a2[8];
    v12 = type metadata accessor for ToolKitProtoTypeInstance(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = *v11;
      if ((~*v11 & 0xF000000000000007) != 0)
        swift_retain();
      *__dst = v15;
      v16 = *(int *)(v12 + 20);
      v17 = (char *)__dst + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v12);
    }
    v20 = a3;
    v21 = *(int *)(a3 + 44);
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BD8);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = v23[1];
      *v22 = *v23;
      v22[1] = v26;
      v22[2] = v23[2];
      v27 = *(int *)(v24 + 24);
      v28 = (char *)v22 + v27;
      __dsta = (char *)v23 + v27;
      v29 = sub_2490E7ABC();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v20 = a3;
      swift_bridgeObjectRetain();
      v30(v28, __dsta, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    v31 = *(int *)(v20 + 48);
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1.Parameter(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + a2[10]);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[11];
  v9 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata(0);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[12];
  v13 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for ToolKitProtoToolDefinition.Version1.Parameter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = *(int *)(a3 + 40);
  __dst = (_QWORD *)((char *)a1 + v9);
  v10 = (_QWORD *)((char *)a2 + v9);
  a1[8] = a2[8];
  v11 = type metadata accessor for ToolKitProtoTypeInstance(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = *v10;
    if ((~*v10 & 0xF000000000000007) != 0)
      swift_retain();
    *__dst = v13;
    v14 = *(int *)(v11 + 20);
    v15 = (char *)__dst + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v11);
  }
  v18 = a3;
  v19 = *(int *)(a3 + 44);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BD8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v21[1];
    *v20 = *v21;
    v20[1] = v24;
    v20[2] = v21[2];
    v25 = *(int *)(v22 + 24);
    v26 = (char *)v20 + v25;
    v27 = (char *)v21 + v25;
    v28 = sub_2490E7ABC();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v18 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v26, v27, v28);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
  }
  v30 = *(int *)(v18 + 48);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoToolDefinition.Version1.Parameter(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[10];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_8;
    }
    v35 = *v8;
    v36 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v36 != 0xF000000000000007)
      {
        *v7 = v35;
        swift_retain();
        swift_release();
        goto LABEL_24;
      }
      sub_248E42024((uint64_t)v7);
      v35 = *v8;
    }
    else if (v36 != 0xF000000000000007)
    {
      *v7 = v35;
      swift_retain();
LABEL_24:
      v41 = *(int *)(v9 + 20);
      v42 = (char *)v7 + v41;
      v43 = (char *)v8 + v41;
      v44 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
      goto LABEL_9;
    }
    *v7 = v35;
    goto LABEL_24;
  }
  if (v11)
  {
LABEL_8:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  v12 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v12;
  v13 = *(int *)(v9 + 20);
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_9:
  v18 = a3[11];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata(0);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      *v19 = *v20;
      v19[1] = v20[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19[2] = v20[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37 = *(int *)(v21 + 24);
      v38 = (char *)v19 + v37;
      v39 = (char *)v20 + v37;
      v40 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
      goto LABEL_15;
    }
    sub_248E25C30((uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BD8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_15;
  }
  *v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v24 = *(int *)(v21 + 24);
  v25 = (char *)v19 + v24;
  v45 = (char *)v20 + v24;
  v26 = sub_2490E7ABC();
  v27 = a3;
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28(v25, v45, v26);
  a3 = v27;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
LABEL_15:
  v30 = a3[12];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoToolDefinition.Version1.Parameter(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[10];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v16 = a3[11];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BD8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v17[2] = v18[2];
    v21 = *(int *)(v19 + 24);
    v22 = (char *)v17 + v21;
    v23 = (char *)v18 + v21;
    v24 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  v25 = a3[12];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoToolDefinition.Version1.Parameter(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[10];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      *v10 = *v11;
      v15 = *(int *)(v12 + 20);
      v16 = (char *)v10 + v15;
      v17 = (char *)v11 + v15;
      v18 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_248E25C30((uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v36 = *v11;
  if ((~*v10 & 0xF000000000000007) != 0)
  {
    if ((~v36 & 0xF000000000000007) != 0)
    {
      *v10 = v36;
      swift_release();
    }
    else
    {
      sub_248E42024((uint64_t)v10);
      *v10 = *v11;
    }
  }
  else
  {
    *v10 = v36;
  }
  v42 = *(int *)(v12 + 20);
  v43 = (char *)v10 + v42;
  v44 = (char *)v11 + v42;
  v45 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
LABEL_7:
  v20 = a3[11];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata(0);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (!v24)
  {
    if (!v25)
    {
      v37 = v22[1];
      *v21 = *v22;
      v21[1] = v37;
      swift_bridgeObjectRelease();
      v21[2] = v22[2];
      swift_bridgeObjectRelease();
      v38 = *(int *)(v23 + 24);
      v39 = (char *)v21 + v38;
      v40 = (char *)v22 + v38;
      v41 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
      goto LABEL_13;
    }
    sub_248E25C30((uint64_t)v21, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BD8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v21[2] = v22[2];
  v26 = *(int *)(v23 + 24);
  v27 = (char *)v21 + v26;
  v28 = (char *)v22 + v26;
  v29 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
LABEL_13:
  v31 = a3[12];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EF251C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    OUTLINED_FUNCTION_24_6();
    if (v2)
    {
      OUTLINED_FUNCTION_426_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BD8);
      OUTLINED_FUNCTION_24_6();
      if (v4)
      {
        OUTLINED_FUNCTION_600();
      }
      else
      {
        OUTLINED_FUNCTION_63();
        v3 = *(int *)(v1 + 48);
      }
    }
    v5 = OUTLINED_FUNCTION_94_1(v3);
    OUTLINED_FUNCTION_265(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EF25A4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    OUTLINED_FUNCTION_32_0();
    if (v1)
    {
      OUTLINED_FUNCTION_443_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5BD8);
      OUTLINED_FUNCTION_32_0();
      if (v3)
      {
        OUTLINED_FUNCTION_624();
      }
      else
      {
        OUTLINED_FUNCTION_63();
        v2 = *(int *)(v0 + 48);
      }
    }
    v4 = OUTLINED_FUNCTION_44_5(v2);
    OUTLINED_FUNCTION_264(v4, v5, v6, v7);
  }
}

void sub_248EF261C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_248E0EBD8(319, &qword_254475220, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
  if (v0 <= 0x3F)
  {
    sub_248E0EBD8(319, &qword_2577E6E98, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
    if (v1 <= 0x3F)
    {
      sub_2490E7ABC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags()
{
  OUTLINED_FUNCTION_164();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475FC8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v16 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                         + 20);
            v43 = &v10[v16];
            v49 = &v9[v16];
            v17 = sub_2490E7ABC();
            v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v18(v49, v43, v17);
            goto LABEL_15;
          case 1u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v19 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                         + 20);
            v44 = &v10[v19];
            v50 = &v9[v19];
            v20 = sub_2490E7ABC();
            v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
            swift_bridgeObjectRetain();
            v21(v50, v44, v20);
            goto LABEL_15;
          case 2u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v9[8] = v10[8];
            v22 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                         + 24);
            v45 = &v10[v22];
            v51 = &v9[v22];
            v23 = sub_2490E7ABC();
            v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
            swift_bridgeObjectRetain();
            v24(v51, v45, v23);
            goto LABEL_15;
          case 3u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v9[8] = v10[8];
            v25 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                         + 24);
            v46 = &v10[v25];
            v52 = &v9[v25];
            v26 = sub_2490E7ABC();
            v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
            swift_bridgeObjectRetain();
            v27(v52, v46, v26);
            goto LABEL_15;
          case 4u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v28 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                         + 20);
            v47 = &v10[v28];
            v53 = &v9[v28];
            v29 = sub_2490E7ABC();
            v30 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
            swift_bridgeObjectRetain();
            v30(v53, v47, v29);
            goto LABEL_15;
          case 5u:
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v31 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                         + 20);
            v48 = &v10[v31];
            v54 = &v9[v31];
            v32 = sub_2490E7ABC();
            v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v33(v54, v48, v32);
LABEL_15:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
      }
      v34 = *(int *)(v11 + 20);
      v35 = &v9[v34];
      v36 = &v10[v34];
      v37 = sub_2490E7ABC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v38 = *(int *)(a3 + 24);
    v39 = (char *)v4 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t DoesNotContain;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
    if (!__swift_getEnumTagSinglePayload(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0);
          goto LABEL_11;
        case 1u:
          swift_bridgeObjectRelease();
          DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0);
          goto LABEL_11;
        case 2u:
          swift_bridgeObjectRelease();
          v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0);
          goto LABEL_8;
        case 3u:
          swift_bridgeObjectRelease();
          v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0);
LABEL_8:
          v9 = *(int *)(v8 + 24);
          goto LABEL_12;
        case 4u:
          swift_bridgeObjectRelease();
          DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0);
          goto LABEL_11;
        case 5u:
          swift_bridgeObjectRelease();
          DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0);
LABEL_11:
          v9 = *(int *)(DoesNotContain + 20);
LABEL_12:
          v10 = v4 + v9;
          v11 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          break;
        default:
          break;
      }
    }
    v12 = v4 + *(int *)(v5 + 20);
    v13 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = a1 + *(int *)(a2 + 24);
  v15 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

_QWORD *initializeWithCopy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475FC8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          v14 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                       + 20);
          v41 = &v9[v14];
          v47 = &v8[v14];
          v15 = sub_2490E7ABC();
          v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v47, v41, v15);
          goto LABEL_13;
        case 1u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          v17 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                       + 20);
          v42 = &v9[v17];
          v48 = &v8[v17];
          v18 = sub_2490E7ABC();
          v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v48, v42, v18);
          goto LABEL_13;
        case 2u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          v8[8] = v9[8];
          v20 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                       + 24);
          v43 = &v9[v20];
          v49 = &v8[v20];
          v21 = sub_2490E7ABC();
          v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v22(v49, v43, v21);
          goto LABEL_13;
        case 3u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          v8[8] = v9[8];
          v23 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                       + 24);
          v44 = &v9[v23];
          v50 = &v8[v23];
          v24 = sub_2490E7ABC();
          v25 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
          swift_bridgeObjectRetain();
          v25(v50, v44, v24);
          goto LABEL_13;
        case 4u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                       + 20);
          v45 = &v9[v26];
          v51 = &v8[v26];
          v27 = sub_2490E7ABC();
          v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
          swift_bridgeObjectRetain();
          v28(v51, v45, v27);
          goto LABEL_13;
        case 5u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          v29 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                       + 20);
          v46 = &v9[v29];
          v52 = &v8[v29];
          v30 = sub_2490E7ABC();
          v31 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v52, v46, v30);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
    }
    v32 = *(int *)(v10 + 20);
    v33 = &v8[v32];
    v34 = &v9[v32];
    v35 = sub_2490E7ABC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v36 = *(int *)(a3 + 24);
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  _BYTE *v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE *v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
    v16 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v15);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v18 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                         + 20);
            v86 = &v8[v18];
            v104 = &v7[v18];
            v19 = sub_2490E7ABC();
            v20 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v20(v104, v86, v19);
            goto LABEL_36;
          case 1u:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v47 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                         + 20);
            v94 = &v8[v47];
            v112 = &v7[v47];
            v48 = sub_2490E7ABC();
            v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            v49(v112, v94, v48);
            goto LABEL_36;
          case 2u:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v7[8] = v8[8];
            v50 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                         + 24);
            v95 = &v8[v50];
            v113 = &v7[v50];
            v51 = sub_2490E7ABC();
            v52 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
            swift_bridgeObjectRetain();
            v52(v113, v95, v51);
            goto LABEL_36;
          case 3u:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v7[8] = v8[8];
            v53 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                         + 24);
            v96 = &v8[v53];
            v114 = &v7[v53];
            v54 = sub_2490E7ABC();
            v55 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v114, v96, v54);
            goto LABEL_36;
          case 4u:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v56 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                         + 20);
            v97 = &v8[v56];
            v115 = &v7[v56];
            v57 = sub_2490E7ABC();
            v58 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
            swift_bridgeObjectRetain();
            v58(v115, v97, v57);
            goto LABEL_36;
          case 5u:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v59 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                         + 20);
            v98 = &v8[v59];
            v116 = &v7[v59];
            v60 = sub_2490E7ABC();
            v61 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
            swift_bridgeObjectRetain();
            v61(v116, v98, v60);
LABEL_36:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v15);
LABEL_44:
        v77 = *(int *)(v9 + 20);
        v78 = &v7[v77];
        v79 = &v8[v77];
        v80 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v80 - 8) + 24))(v78, v79, v80);
        goto LABEL_45;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v25 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                           + 20);
              v88 = &v8[v25];
              v106 = &v7[v25];
              v26 = sub_2490E7ABC();
              v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
              swift_bridgeObjectRetain();
              v27(v106, v88, v26);
              break;
            case 1u:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v62 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                           + 20);
              v99 = &v8[v62];
              v117 = &v7[v62];
              v63 = sub_2490E7ABC();
              v64 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
              swift_bridgeObjectRetain();
              v64(v117, v99, v63);
              break;
            case 2u:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v7[8] = v8[8];
              v65 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                           + 24);
              v100 = &v8[v65];
              v118 = &v7[v65];
              v66 = sub_2490E7ABC();
              v67 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
              swift_bridgeObjectRetain();
              v67(v118, v100, v66);
              break;
            case 3u:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v7[8] = v8[8];
              v68 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                           + 24);
              v101 = &v8[v68];
              v119 = &v7[v68];
              v69 = sub_2490E7ABC();
              v70 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
              swift_bridgeObjectRetain();
              v70(v119, v101, v69);
              break;
            case 4u:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v71 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                           + 20);
              v102 = &v8[v71];
              v120 = &v7[v71];
              v72 = sub_2490E7ABC();
              v73 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
              swift_bridgeObjectRetain();
              v73(v120, v102, v72);
              break;
            case 5u:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v74 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                           + 20);
              v103 = &v8[v74];
              v121 = &v7[v74];
              v75 = sub_2490E7ABC();
              v76 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
              swift_bridgeObjectRetain();
              v76(v121, v103, v75);
              break;
            default:
              v24 = *(_QWORD *)(v15 - 8);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_44;
      }
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    }
    v24 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475F10) - 8);
LABEL_17:
    memcpy(v7, v8, *(_QWORD *)(v24 + 64));
    goto LABEL_44;
  }
  if (v11)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475FC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_45;
  }
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v21 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                     + 20);
        v87 = &v8[v21];
        v105 = &v7[v21];
        v22 = sub_2490E7ABC();
        v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v105, v87, v22);
        goto LABEL_27;
      case 1u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v28 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v89 = &v8[v28];
        v107 = &v7[v28];
        v29 = sub_2490E7ABC();
        v30 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v107, v89, v29);
        goto LABEL_27;
      case 2u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v7[8] = v8[8];
        v31 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v90 = &v8[v31];
        v108 = &v7[v31];
        v32 = sub_2490E7ABC();
        v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        v33(v108, v90, v32);
        goto LABEL_27;
      case 3u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v7[8] = v8[8];
        v34 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v91 = &v8[v34];
        v109 = &v7[v34];
        v35 = sub_2490E7ABC();
        v36 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v109, v91, v35);
        goto LABEL_27;
      case 4u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v37 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v92 = &v8[v37];
        v110 = &v7[v37];
        v38 = sub_2490E7ABC();
        v39 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v110, v92, v38);
        goto LABEL_27;
      case 5u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v40 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v93 = &v8[v40];
        v111 = &v7[v40];
        v41 = sub_2490E7ABC();
        v42 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v111, v93, v41);
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v12);
  }
  v43 = *(int *)(v9 + 20);
  v44 = &v7[v43];
  v45 = &v8[v43];
  v46 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_45:
  v81 = *(int *)(a3 + 24);
  v82 = (char *)a1 + v81;
  v83 = (char *)a2 + v81;
  v84 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 24))(v82, v83, v84);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475FC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v13 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                       + 20);
          v14 = &v7[v13];
          v15 = &v8[v13];
          v16 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
          goto LABEL_13;
        case 1u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v17 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                       + 20);
          v18 = &v7[v17];
          v19 = &v8[v17];
          v20 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
          goto LABEL_13;
        case 2u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v7[8] = v8[8];
          v21 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                       + 24);
          v22 = &v7[v21];
          v23 = &v8[v21];
          v24 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
          goto LABEL_13;
        case 3u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v7[8] = v8[8];
          v25 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                       + 24);
          v26 = &v7[v25];
          v27 = &v8[v25];
          v28 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
          goto LABEL_13;
        case 4u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v29 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                       + 20);
          v30 = &v7[v29];
          v31 = &v8[v29];
          v32 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
          goto LABEL_13;
        case 5u:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v33 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                       + 20);
          v34 = &v7[v33];
          v35 = &v8[v33];
          v36 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
    }
    v37 = *(int *)(v9 + 20);
    v38 = &v7[v37];
    v39 = &v8[v37];
    v40 = sub_2490E7ABC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v41 = *(int *)(a3 + 24);
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
      goto LABEL_7;
    }
    v16 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16);
    v18 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v19 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                         + 20);
            v20 = &v8[v19];
            v21 = &v9[v19];
            v22 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
            goto LABEL_36;
          case 1u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v56 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                         + 20);
            v57 = &v8[v56];
            v58 = &v9[v56];
            v59 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
            goto LABEL_36;
          case 2u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v8[8] = v9[8];
            v60 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                         + 24);
            v61 = &v8[v60];
            v62 = &v9[v60];
            v63 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
            goto LABEL_36;
          case 3u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v8[8] = v9[8];
            v64 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                         + 24);
            v65 = &v8[v64];
            v66 = &v9[v64];
            v67 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
            goto LABEL_36;
          case 4u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v68 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                         + 20);
            v69 = &v8[v68];
            v70 = &v9[v68];
            v71 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
            goto LABEL_36;
          case 5u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v72 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                         + 20);
            v73 = &v8[v72];
            v74 = &v9[v72];
            v75 = sub_2490E7ABC();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
LABEL_36:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            break;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v16);
LABEL_44:
        v96 = *(int *)(v10 + 20);
        v97 = &v8[v96];
        v98 = &v9[v96];
        v99 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v97, v98, v99);
        goto LABEL_45;
      }
    }
    else
    {
      if (!v18)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v28 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                           + 20);
              v29 = &v8[v28];
              v30 = &v9[v28];
              v31 = sub_2490E7ABC();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
              break;
            case 1u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v76 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                           + 20);
              v77 = &v8[v76];
              v78 = &v9[v76];
              v79 = sub_2490E7ABC();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
              break;
            case 2u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v8[8] = v9[8];
              v80 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                           + 24);
              v81 = &v8[v80];
              v82 = &v9[v80];
              v83 = sub_2490E7ABC();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
              break;
            case 3u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v8[8] = v9[8];
              v84 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                           + 24);
              v85 = &v8[v84];
              v86 = &v9[v84];
              v87 = sub_2490E7ABC();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
              break;
            case 4u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v88 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                           + 20);
              v89 = &v8[v88];
              v90 = &v9[v88];
              v91 = sub_2490E7ABC();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
              break;
            case 5u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v92 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                           + 20);
              v93 = &v8[v92];
              v94 = &v9[v92];
              v95 = sub_2490E7ABC();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
              break;
            default:
              v27 = *(_QWORD *)(v16 - 8);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_44;
      }
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    }
    v27 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475F10) - 8);
LABEL_17:
    memcpy(v8, v9, *(_QWORD *)(v27 + 64));
    goto LABEL_44;
  }
  if (v12)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475FC8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_45;
  }
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v23 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                     + 20);
        v24 = &v8[v23];
        v25 = &v9[v23];
        v26 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_27;
      case 1u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v32 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v33 = &v8[v32];
        v34 = &v9[v32];
        v35 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_27;
      case 2u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v8[8] = v9[8];
        v36 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v37 = &v8[v36];
        v38 = &v9[v36];
        v39 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        goto LABEL_27;
      case 3u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v8[8] = v9[8];
        v40 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v41 = &v8[v40];
        v42 = &v9[v40];
        v43 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        goto LABEL_27;
      case 4u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v44 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v45 = &v8[v44];
        v46 = &v9[v44];
        v47 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        goto LABEL_27;
      case 5u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v48 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v49 = &v8[v48];
        v50 = &v9[v48];
        v51 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v13);
  }
  v52 = *(int *)(v10 + 20);
  v53 = &v8[v52];
  v54 = &v9[v52];
  v55 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_45:
  v100 = *(int *)(a3 + 24);
  v101 = (char *)a1 + v100;
  v102 = (char *)a2 + v100;
  v103 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 40))(v101, v102, v103);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EF4674()
{
  __swift_get_extra_inhabitant_index_23Tm();
}

void __swift_get_extra_inhabitant_index_23Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_80_2();
  if (v5)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_303_0(v1, v2, v3, v4);
    OUTLINED_FUNCTION_24_6();
    if (v5)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_217_0();
    }
    v7 = OUTLINED_FUNCTION_94_1(v6);
    OUTLINED_FUNCTION_265(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EF46DC()
{
  __swift_store_extra_inhabitant_index_24Tm();
}

void __swift_store_extra_inhabitant_index_24Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_43_5();
  if (v5)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_310_0(v0, v1, v2, v3, v4);
    OUTLINED_FUNCTION_32_0();
    if (v5)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_225_0();
    }
    v7 = OUTLINED_FUNCTION_44_5(v6);
    OUTLINED_FUNCTION_264(v7, v8, v9, v10);
  }
}

void sub_248EF4734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F0ABC8(a1, a2, a3, (uint64_t)&unk_2490F6130, &qword_254475FD0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

_BYTE *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_BYTE *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v10 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                       + 20);
          v11 = &a1[v10];
          v12 = &a2[v10];
          v13 = sub_2490E7ABC();
          v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v11, v12, v13);
          goto LABEL_13;
        case 1u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v15 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                       + 20);
          v16 = &a1[v15];
          v17 = &a2[v15];
          v18 = sub_2490E7ABC();
          v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v16, v17, v18);
          goto LABEL_13;
        case 2u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[8] = a2[8];
          v20 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                       + 24);
          v21 = &a1[v20];
          v22 = &a2[v20];
          v23 = sub_2490E7ABC();
          v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          goto LABEL_13;
        case 3u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[8] = a2[8];
          v25 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                       + 24);
          v26 = &a1[v25];
          v27 = &a2[v25];
          v28 = sub_2490E7ABC();
          v29 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v29(v26, v27, v28);
          goto LABEL_13;
        case 4u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v30 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                       + 20);
          v31 = &a1[v30];
          v32 = &a2[v30];
          v33 = sub_2490E7ABC();
          v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v31, v32, v33);
          goto LABEL_13;
        case 5u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v35 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                       + 20);
          v36 = &a1[v35];
          v37 = &a2[v35];
          v38 = sub_2490E7ABC();
          v39 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v39(v36, v37, v38);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v40 = *(int *)(a3 + 20);
    v41 = &a1[v40];
    v42 = &a2[v40];
    v43 = sub_2490E7ABC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t DoesNotContain;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0);
        goto LABEL_10;
      case 1u:
        swift_bridgeObjectRelease();
        DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0);
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0);
        goto LABEL_7;
      case 3u:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0);
LABEL_7:
        v7 = *(int *)(v6 + 24);
        goto LABEL_11;
      case 4u:
        swift_bridgeObjectRelease();
        DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0);
        goto LABEL_10;
      case 5u:
        swift_bridgeObjectRelease();
        DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0);
LABEL_10:
        v7 = *(int *)(DoesNotContain + 20);
LABEL_11:
        v8 = a1 + v7;
        v9 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        break;
      default:
        break;
    }
  }
  v10 = a1 + *(int *)(a2 + 20);
  v11 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_BYTE *initializeWithCopy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  void (*v37)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                    + 20);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_2490E7ABC();
        v12 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        goto LABEL_11;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = sub_2490E7ABC();
        v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        goto LABEL_11;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v18 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = sub_2490E7ABC();
        v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        goto LABEL_11;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v23 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = sub_2490E7ABC();
        v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        goto LABEL_11;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v28 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_2490E7ABC();
        v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        goto LABEL_11;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v33 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = sub_2490E7ABC();
        v37 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v34, v35, v36);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v38 = *(int *)(a3 + 20);
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  return a1;
}

_BYTE *assignWithCopy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  void (*v44)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  void (*v54)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  void (*v59)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  void (*v64)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  void (*v69)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v9 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                      + 20);
          v10 = &a1[v9];
          v11 = &a2[v9];
          v12 = sub_2490E7ABC();
          v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          v13(v10, v11, v12);
          goto LABEL_18;
        case 1u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v20 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                       + 20);
          v21 = &a1[v20];
          v22 = &a2[v20];
          v23 = sub_2490E7ABC();
          v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          goto LABEL_18;
        case 2u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[8] = a2[8];
          v25 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                       + 24);
          v26 = &a1[v25];
          v27 = &a2[v25];
          v28 = sub_2490E7ABC();
          v29 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v29(v26, v27, v28);
          goto LABEL_18;
        case 3u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[8] = a2[8];
          v30 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                       + 24);
          v31 = &a1[v30];
          v32 = &a2[v30];
          v33 = sub_2490E7ABC();
          v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v31, v32, v33);
          goto LABEL_18;
        case 4u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v35 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                       + 20);
          v36 = &a1[v35];
          v37 = &a2[v35];
          v38 = sub_2490E7ABC();
          v39 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v39(v36, v37, v38);
          goto LABEL_18;
        case 5u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v40 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                       + 20);
          v41 = &a1[v40];
          v42 = &a2[v40];
          v43 = sub_2490E7ABC();
          v44 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          v44(v41, v42, v43);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_27;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
LABEL_7:
    v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475F10) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    goto LABEL_27;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v15 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                     + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_2490E7ABC();
        v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v45 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v46 = &a1[v45];
        v47 = &a2[v45];
        v48 = sub_2490E7ABC();
        v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        v49(v46, v47, v48);
        break;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v50 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = sub_2490E7ABC();
        v54 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        break;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v55 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v56 = &a1[v55];
        v57 = &a2[v55];
        v58 = sub_2490E7ABC();
        v59 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v56, v57, v58);
        break;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v60 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v61 = &a1[v60];
        v62 = &a2[v60];
        v63 = sub_2490E7ABC();
        v64 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v64(v61, v62, v63);
        break;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v65 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v66 = &a1[v65];
        v67 = &a2[v65];
        v68 = sub_2490E7ABC();
        v69 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
        swift_bridgeObjectRetain();
        v69(v66, v67, v68);
        break;
      default:
        v14 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  v70 = *(int *)(a3 + 20);
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v71, v72, v73);
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475F10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                    + 20);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        goto LABEL_11;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v12 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        goto LABEL_11;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v16 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        goto LABEL_11;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v20 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v21 = &a1[v20];
        v22 = &a2[v20];
        v23 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        goto LABEL_11;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v24 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        goto LABEL_11;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v28 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v32 = *(int *)(a3 + 20);
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v9 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                      + 20);
          v10 = &a1[v9];
          v11 = &a2[v9];
          v12 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
          goto LABEL_18;
        case 1u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v18 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                       + 20);
          v19 = &a1[v18];
          v20 = &a2[v18];
          v21 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          goto LABEL_18;
        case 2u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[8] = a2[8];
          v22 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                       + 24);
          v23 = &a1[v22];
          v24 = &a2[v22];
          v25 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
          goto LABEL_18;
        case 3u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          a1[8] = a2[8];
          v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                       + 24);
          v27 = &a1[v26];
          v28 = &a2[v26];
          v29 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
          goto LABEL_18;
        case 4u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v30 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                       + 20);
          v31 = &a1[v30];
          v32 = &a2[v30];
          v33 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
          goto LABEL_18;
        case 5u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v34 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                       + 20);
          v35 = &a1[v34];
          v36 = &a2[v34];
          v37 = sub_2490E7ABC();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_27;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
LABEL_7:
    v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475F10) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v13 + 64));
    goto LABEL_27;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v14 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                     + 20);
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v38 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        break;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v42 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v43 = &a1[v42];
        v44 = &a2[v42];
        v45 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
        break;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v46 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v47 = &a1[v46];
        v48 = &a2[v46];
        v49 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        break;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v50 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        break;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v54 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v55 = &a1[v54];
        v56 = &a2[v54];
        v57 = sub_2490E7ABC();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        break;
      default:
        v13 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  v58 = *(int *)(a3 + 20);
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v59, v60, v61);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EF5D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475F10);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EF5D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475F10);
}

void sub_248EF5D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475F18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EF5DB8()
{
  sub_248EFB16C();
}

void _s7ToolKit26ToolKitProtoToolDefinitionV8Version1V9ParameterV12RelationshipV8RelationV11GreaterThanVwCP_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;

  v2 = OUTLINED_FUNCTION_588(a1, a2);
  if ((v4 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_414_0();
  }
  else
  {
    *((_BYTE *)v2 + 8) = *(_BYTE *)(v3 + 8);
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_207_1();
  }
  OUTLINED_FUNCTION_41();
}

uint64_t _s7ToolKit26ToolKitProtoToolDefinitionV8Version1V9ParameterV12RelationshipV8RelationV11GreaterThanVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_556();
  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

void _s7ToolKit26ToolKitProtoToolDefinitionV8Version1V9ParameterV12RelationshipV8RelationV11GreaterThanVwcp_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_588(a1, a2);
  *((_BYTE *)v2 + 8) = *(_BYTE *)(v3 + 8);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_207_1();
  OUTLINED_FUNCTION_41();
}

void _s7ToolKit26ToolKitProtoToolDefinitionV8Version1V9ParameterV12RelationshipV8RelationV11GreaterThanVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_379_0(a1, a2);
  OUTLINED_FUNCTION_37();
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(v3 + 8);
  v5 = v4 + *(int *)(v2 + 24);
  v6 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit26ToolKitProtoToolDefinitionV8Version1V9ParameterV12RelationshipV8RelationV11GreaterThanVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit26ToolKitProtoToolDefinitionV8Version1V9ParameterV12RelationshipV8RelationV11GreaterThanVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_378_0(a1, a2);
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(v3 + 8);
  v5 = v4 + *(int *)(v2 + 24);
  v6 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_214Tm()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*v0);
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 24));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_215Tm()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_380_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 24));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV26PersistentFileIdentifiableVwCP_0(_QWORD *a1, _QWORD *a2)
{
  int v2;

  OUTLINED_FUNCTION_588(a1, a2);
  if ((v2 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_414_0();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_207_1();
  }
  OUTLINED_FUNCTION_41();
}

uint64_t _s7ToolKit30ToolKitProtoSystemTypeProtocolV26PersistentFileIdentifiableVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_556();
  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV26PersistentFileIdentifiableVwcp_0(_QWORD *a1, _QWORD *a2)
{
  OUTLINED_FUNCTION_588(a1, a2);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_207_1();
  OUTLINED_FUNCTION_41();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV26PersistentFileIdentifiableVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_379_0(a1, a2);
  OUTLINED_FUNCTION_37();
  v4 = v3 + *(int *)(v2 + 20);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV26PersistentFileIdentifiableVwtk_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV26PersistentFileIdentifiableVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_378_0(a1, a2);
  v4 = v3 + *(int *)(v2 + 20);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_11Tm()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*v0);
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 20));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_12Tm()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_380_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 20));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

char *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                    + 20);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_2490E7ABC();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        goto LABEL_11;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = sub_2490E7ABC();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        goto LABEL_11;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v18 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = sub_2490E7ABC();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        goto LABEL_11;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v23 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = sub_2490E7ABC();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        goto LABEL_11;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v28 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_2490E7ABC();
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        goto LABEL_11;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v33 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = sub_2490E7ABC();
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v34, v35, v36);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(uint64_t a1)
{
  uint64_t result;
  uint64_t DoesNotContain;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0);
      goto LABEL_9;
    case 1:
      swift_bridgeObjectRelease();
      DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0);
      goto LABEL_9;
    case 2:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0);
      goto LABEL_6;
    case 3:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0);
LABEL_6:
      v5 = *(int *)(v4 + 24);
      goto LABEL_10;
    case 4:
      swift_bridgeObjectRelease();
      DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0);
      goto LABEL_9;
    case 5:
      swift_bridgeObjectRelease();
      DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0);
LABEL_9:
      v5 = *(int *)(DoesNotContain + 20);
LABEL_10:
      v6 = a1 + v5;
      v7 = sub_2490E7ABC();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                  + 20);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_2490E7ABC();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      goto LABEL_9;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                   + 20);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_2490E7ABC();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      goto LABEL_9;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v16 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                   + 24);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_2490E7ABC();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      goto LABEL_9;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v21 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                   + 24);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = sub_2490E7ABC();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      goto LABEL_9;
    case 4u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                   + 20);
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_2490E7ABC();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
      goto LABEL_9;
    case 5u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v31 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                   + 20);
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = sub_2490E7ABC();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v32, v33, v34);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                    + 20);
        v7 = &a1[v6];
        v8 = &a2[v6];
        v9 = sub_2490E7ABC();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_9;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v11 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_2490E7ABC();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        goto LABEL_9;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v16 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_2490E7ABC();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
        goto LABEL_9;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v21 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v22 = &a1[v21];
        v23 = &a2[v21];
        v24 = sub_2490E7ABC();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        goto LABEL_9;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v27 = &a1[v26];
        v28 = &a2[v26];
        v29 = sub_2490E7ABC();
        v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v27, v28, v29);
        goto LABEL_9;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v31 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v32 = &a1[v31];
        v33 = &a2[v31];
        v34 = sub_2490E7ABC();
        v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
        swift_bridgeObjectRetain();
        v35(v32, v33, v34);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                  + 20);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      goto LABEL_9;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v10 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                   + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_9;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v14 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                   + 24);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_9;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v18 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                   + 24);
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_9;
    case 4u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v22 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                   + 20);
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      goto LABEL_9;
    case 5u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                   + 20);
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0)
                    + 20);
        v7 = &a1[v6];
        v8 = &a2[v6];
        v9 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_9;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0)
                     + 20);
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_9;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v14 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0)
                     + 24);
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_9;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v18 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0)
                     + 24);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_9;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v22 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0)
                     + 20);
        v23 = &a1[v22];
        v24 = &a2[v22];
        v25 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        goto LABEL_9;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0)
                     + 20);
        v27 = &a1[v26];
        v28 = &a2[v26];
        v29 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_248EF7090()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

void _s7ToolKit29ToolKitProtoIdSearchPredicateVwCP_0()
{
  uint64_t *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136_2();
  OUTLINED_FUNCTION_147_1();
  if ((v2 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*v1);
  }
  else
  {
    v3 = v1[1];
    *v0 = *v1;
    v0[1] = v3;
    v0[2] = v1[2];
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_315_0();
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t _s7ToolKit29ToolKitProtoIdSearchPredicateVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_513_0();
  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

void _s7ToolKit29ToolKitProtoIdSearchPredicateVwcp_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136_2();
  v2 = OUTLINED_FUNCTION_569(v0, v1);
  v2[2] = *(_QWORD *)(v3 + 16);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_315_0();
  OUTLINED_FUNCTION_3_0();
}

void _s7ToolKit29ToolKitProtoIdSearchPredicateVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_187_0(a1, a2);
  OUTLINED_FUNCTION_37();
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_37();
  v5 = v4 + *(int *)(v2 + 24);
  v6 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit29ToolKitProtoIdSearchPredicateVwtk_0(__n128 *a1, __n128 *a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_568(a1, a2);
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit29ToolKitProtoIdSearchPredicateVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_244_0(a1, a2);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(v2 + 24);
  v6 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Category()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Category()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1.ToolIcon(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v29;
  char *v30;
  char *v31;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        v19 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                     + 24);
        v31 = (char *)a1 + v19;
        v20 = (char *)a2 + v19;
        v21 = sub_2490E7ABC();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22(v31, v20, v21);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v12 = a2[4];
        a1[3] = a2[3];
        a1[4] = v12;
        v13 = a2[6];
        a1[5] = a2[5];
        a1[6] = v13;
        v14 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v29 = (char *)a2 + v14;
        v30 = (char *)a1 + v14;
        v15 = sub_2490E7ABC();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16(v30, v29, v15);
      }
      else
      {
        v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v24 = *(int *)(a3 + 20);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1.ToolIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if (__swift_getEnumTagSinglePayload(a1, 1, v4))
    goto LABEL_9;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
LABEL_8:
      v7 = a1 + v6;
      v8 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      goto LABEL_8;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
LABEL_9:
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for ToolKitProtoToolDefinition.Version1.ToolIcon(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v27;
  char *v28;
  char *v29;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      v17 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v29 = (char *)a1 + v17;
      v18 = (char *)a2 + v17;
      v19 = sub_2490E7ABC();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v29, v18, v19);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v10 = a2[4];
      a1[3] = a2[3];
      a1[4] = v10;
      v11 = a2[6];
      a1[5] = a2[5];
      a1[6] = v11;
      v12 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      v27 = (char *)a2 + v12;
      v28 = (char *)a1 + v12;
      v13 = sub_2490E7ABC();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v28, v27, v13);
    }
    else
    {
      v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoToolDefinition.Version1.ToolIcon(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v33;
  char *v34;
  char *v35;
  char *v36;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v19 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                     + 24);
        v36 = (char *)a1 + v19;
        v20 = (char *)a2 + v19;
        v21 = sub_2490E7ABC();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22(v36, v20, v21);
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        if (EnumCaseMultiPayload == 1)
        {
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          a1[3] = a2[3];
          a1[4] = a2[4];
          a1[5] = a2[5];
          a1[6] = a2[6];
          v10 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v33 = (char *)a2 + v10;
          v34 = (char *)a1 + v10;
          v11 = sub_2490E7ABC();
          v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v12(v34, v33, v11);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_19;
    }
LABEL_8:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_19;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    v14 = swift_getEnumCaseMultiPayload();
    if (v14 == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v23 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_2490E7ABC();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      if (v14 == 1)
      {
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        v15 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v35 = (char *)a1 + v15;
        v16 = (char *)a2 + v15;
        v17 = sub_2490E7ABC();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18(v35, v16, v17);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  v28 = *(int *)(a3 + 20);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoToolDefinition.Version1.ToolIcon(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      v14 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_9;
      }
      *a1 = *a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v9 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    goto LABEL_10;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_10:
  v18 = *(int *)(a3 + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoToolDefinition.Version1.ToolIcon(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        v21 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                     + 24);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_17;
        }
        *a1 = *a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v10 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      v15 = swift_getEnumCaseMultiPayload();
      if (v15 == 2)
      {
        v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                     + 24);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      }
      else
      {
        if (v15 != 1)
        {
          v14 = *(_QWORD *)(v6 - 8);
          goto LABEL_9;
        }
        *a1 = *a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v16 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
  }
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475E40) - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v14 + 64));
LABEL_20:
  v30 = *(int *)(a3 + 20);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.ToolIcon()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EF80A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475E40);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.ToolIcon()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EF80B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475E40);
}

void sub_248EF80C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475E48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
}

void type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle()
{
  OUTLINED_FUNCTION_164();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v6;
    v7 = a2[6];
    v8 = *(int *)(a3 + 32);
    v9 = (uint64_t)a2 + v8;
    v10 = a1 + v8;
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v11 = sub_2490E7ABC();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 32);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v10 = sub_2490E7ABC();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EF8480()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 32));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EF84D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 32));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

uint64_t sub_248EF8514()
{
  return sub_248EF8530();
}

uint64_t sub_248EF8530()
{
  uint64_t result;
  unint64_t v1;

  result = OUTLINED_FUNCTION_265_1();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_322_0();
    return OUTLINED_FUNCTION_258_1();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      v17 = a2[3];
      a1[2] = a2[2];
      a1[3] = v17;
      v18 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2490E7ABC();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v8 = a2[4];
      a1[3] = a2[3];
      a1[4] = v8;
      v9 = a2[6];
      a1[5] = a2[5];
      a1[6] = v9;
      v10 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E7ABC();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
    }
    else
    {
      v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
LABEL_7:
      v4 = a1 + v3;
      v5 = sub_2490E7ABC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      goto LABEL_7;
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = a2[3];
    a1[2] = a2[2];
    a1[3] = v14;
    v15 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2490E7ABC();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = a2[4];
    a1[3] = a2[3];
    a1[4] = v6;
    v7 = a2[6];
    a1[5] = a2[5];
    a1[6] = v7;
    v8 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2490E7ABC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  else
  {
    v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v10 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E7ABC();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      if (EnumCaseMultiPayload == 1)
      {
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        v5 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v6 = (char *)a1 + v5;
        v7 = (char *)a2 + v5;
        v8 = sub_2490E7ABC();
        v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9(v6, v7, v8);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    v7 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v7 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_248EF8D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EF8D20(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset);
}

void sub_248EF8D20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  a4(319);
  if (v6 <= 0x3F)
  {
    a5(319);
    if (v7 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      OUTLINED_FUNCTION_258_1();
    }
  }
  OUTLINED_FUNCTION_293();
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV6CustomVwCP_0()
{
  uint64_t *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_136_2();
  OUTLINED_FUNCTION_147_1();
  if ((v2 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*v1);
  }
  else
  {
    v3 = v1[1];
    *v0 = *v1;
    v0[1] = v3;
    v4 = v1[3];
    v0[2] = v1[2];
    v0[3] = v4;
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_315_0();
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t _s7ToolKit26ToolKitProtoTypeIdentifierV6CustomVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_460_0();
  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV6CustomVwcp_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_136_2();
  v2 = OUTLINED_FUNCTION_569(v0, v1);
  v4 = *(_QWORD *)(v3 + 24);
  v2[2] = *(_QWORD *)(v3 + 16);
  v2[3] = v4;
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_315_0();
  OUTLINED_FUNCTION_3_0();
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV6CustomVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_187_0(a1, a2);
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_417_0();
  OUTLINED_FUNCTION_37();
  v4 = v3 + *(int *)(v2 + 24);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV6CustomVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_244_0(a1, a2);
  OUTLINED_FUNCTION_515_0();
  v4 = v3 + *(int *)(v2 + 24);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Deprecation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_3Tm()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 24));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinition.Version1.Deprecation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_4Tm()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 24));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

void sub_248EF8FD0()
{
  sub_248EFB16C();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoAppDefinition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[8];
    v12 = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v13 = *(int *)(a3 + 40);
    __dst = (_QWORD *)(a1 + v13);
    v14 = (uint64_t *)((char *)a2 + v13);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    v15 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v14[1];
      if (v18 == 1)
      {
        *(_OWORD *)__dst = *(_OWORD *)v14;
      }
      else
      {
        *__dst = *v14;
        __dst[1] = v18;
        swift_bridgeObjectRetain();
      }
      v19 = *(int *)(v15 + 20);
      v20 = (char *)__dst + v19;
      v21 = (char *)v14 + v19;
      v22 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v15);
    }
    v23 = *(int *)(a3 + 44);
    v24 = (char *)v4 + v23;
    v25 = (uint64_t)a2 + v23;
    v26 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoAppDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    if (*(_QWORD *)(v4 + 8) != 1)
      swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 44);
  v9 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for ToolKitProtoAppDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = *(int *)(a3 + 40);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  v14 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v13[1];
    if (v16 == 1)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      *v12 = *v13;
      v12[1] = v16;
      swift_bridgeObjectRetain();
    }
    v17 = *(int *)(v14 + 20);
    v18 = (char *)v12 + v17;
    v19 = (char *)v13 + v17;
    v20 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v21 = *(int *)(a3 + 44);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoAppDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(int *)(a3 + 40);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoAppDefinition.Device);
      goto LABEL_7;
    }
    v13 = v8[1];
    if (v7[1] == 1)
    {
      if (v13 != 1)
      {
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
LABEL_17:
        v18 = *(int *)(v9 + 20);
        v19 = (char *)v7 + v18;
        v20 = (char *)v8 + v18;
        v21 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
        goto LABEL_18;
      }
    }
    else
    {
      if (v13 != 1)
      {
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      sub_248E00F4C((uint64_t)v7);
    }
    *(_OWORD *)v7 = *(_OWORD *)v8;
    goto LABEL_17;
  }
  if (v11)
  {
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_18;
  }
  if (v8[1] == 1)
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
  }
  else
  {
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
  }
  v14 = *(int *)(v9 + 20);
  v15 = (char *)v7 + v14;
  v16 = (char *)v8 + v14;
  v17 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v22 = *(int *)(a3 + 44);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoAppDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(int *)(a3 + 40);
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  *(_OWORD *)(a1 + 64) = v8;
  v12 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v14 = *(int *)(v12 + 20);
    v15 = (char *)v10 + v14;
    v16 = (char *)v11 + v14;
    v17 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  v18 = *(int *)(a3 + 44);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoAppDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = *(int *)(a3 + 40);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    if (v16)
    {
      sub_248E25C30((uint64_t)v12, type metadata accessor for ToolKitProtoAppDefinition.Device);
      goto LABEL_6;
    }
    if (v12[1] != 1)
    {
      v27 = v13[1];
      if (v27 != 1)
      {
        *v12 = *v13;
        v12[1] = v27;
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_248E00F4C((uint64_t)v12);
    }
    *(_OWORD *)v12 = *(_OWORD *)v13;
LABEL_13:
    v28 = *(int *)(v14 + 20);
    v29 = (char *)v12 + v28;
    v30 = (char *)v13 + v28;
    v31 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
    goto LABEL_7;
  }
  if (v16)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v17 = *(int *)(v14 + 20);
  v18 = (char *)v12 + v17;
  v19 = (char *)v13 + v17;
  v20 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  v22 = *(int *)(a3 + 44);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAppDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EF99AC()
{
  __swift_get_extra_inhabitant_index_234Tm();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAppDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EF99C4()
{
  __swift_store_extra_inhabitant_index_235Tm();
}

void sub_248EF99D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_248E0EBD8(319, &qword_254475250, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition.Device);
  if (v0 <= 0x3F)
  {
    sub_2490E7ABC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for ToolKitProtoAppDefinition.Origin()
{
  OUTLINED_FUNCTION_164();
}

void assignWithCopy for ToolKitProtoAppDefinition.Device()
{
  sub_248EFA858();
}

void assignWithTake for ToolKitProtoAppDefinition.Device()
{
  sub_248EFA8F8();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoAppDefinition.Device()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoAppDefinition.Device()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EF9AD0()
{
  sub_248EFFD68();
}

_QWORD *sub_248EF9AE8(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for ToolKitProtoAppDefinition.ToolKitProtoDeviceKind()
{
  OUTLINED_FUNCTION_164();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoContainerDefinition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[8];
    v11 = *(int *)(a3 + 40);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v10;
    v14 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v13[1];
      if (v17 == 1)
      {
        *(_OWORD *)v12 = *(_OWORD *)v13;
      }
      else
      {
        *v12 = *v13;
        v12[1] = v17;
        swift_bridgeObjectRetain();
      }
      v18 = *(int *)(v14 + 20);
      v19 = (char *)v12 + v18;
      v20 = (char *)v13 + v18;
      v21 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    v22 = *(int *)(a3 + 44);
    v23 = (char *)v4 + v22;
    v24 = (uint64_t)a2 + v22;
    v25 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoContainerDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    if (*(_QWORD *)(v4 + 8) != 1)
      swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 44);
  v9 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for ToolKitProtoContainerDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(int *)(a3 + 40);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  v13 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v12[1];
    if (v15 == 1)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
    }
    else
    {
      *v11 = *v12;
      v11[1] = v15;
      swift_bridgeObjectRetain();
    }
    v16 = *(int *)(v13 + 20);
    v17 = (char *)v11 + v16;
    v18 = (char *)v12 + v16;
    v19 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v20 = *(int *)(a3 + 44);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoContainerDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoContainerDefinition.Device);
      goto LABEL_7;
    }
    v13 = v8[1];
    if (v7[1] == 1)
    {
      if (v13 != 1)
      {
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
LABEL_17:
        v18 = *(int *)(v9 + 20);
        v19 = (char *)v7 + v18;
        v20 = (char *)v8 + v18;
        v21 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
        goto LABEL_18;
      }
    }
    else
    {
      if (v13 != 1)
      {
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      sub_248E00F4C((uint64_t)v7);
    }
    *(_OWORD *)v7 = *(_OWORD *)v8;
    goto LABEL_17;
  }
  if (v11)
  {
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_18;
  }
  if (v8[1] == 1)
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
  }
  else
  {
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
  }
  v14 = *(int *)(v9 + 20);
  v15 = (char *)v7 + v14;
  v16 = (char *)v8 + v14;
  v17 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v22 = *(int *)(a3 + 44);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoContainerDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(int *)(a3 + 40);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v16 = *(int *)(a3 + 44);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for ToolKitProtoContainerDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 40);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (v15)
    {
      sub_248E25C30((uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition.Device);
      goto LABEL_6;
    }
    if (v11[1] != 1)
    {
      v26 = v12[1];
      if (v26 != 1)
      {
        *v11 = *v12;
        v11[1] = v26;
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_248E00F4C((uint64_t)v11);
    }
    *(_OWORD *)v11 = *(_OWORD *)v12;
LABEL_13:
    v27 = *(int *)(v13 + 20);
    v28 = (char *)v11 + v27;
    v29 = (char *)v12 + v27;
    v30 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
    goto LABEL_7;
  }
  if (v15)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v16 = *(int *)(v13 + 20);
  v17 = (char *)v11 + v16;
  v18 = (char *)v12 + v16;
  v19 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v21 = *(int *)(a3 + 44);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoContainerDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EFA470()
{
  __swift_get_extra_inhabitant_index_234Tm();
}

void __swift_get_extra_inhabitant_index_234Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_80_2();
  if (v5)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_303_0(v1, v2, v3, v4);
    OUTLINED_FUNCTION_24_6();
    if (v5)
    {
      OUTLINED_FUNCTION_426_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_600();
    }
    v7 = OUTLINED_FUNCTION_94_1(v6);
    OUTLINED_FUNCTION_265(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoContainerDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EFA4D8()
{
  __swift_store_extra_inhabitant_index_235Tm();
}

void __swift_store_extra_inhabitant_index_235Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_43_5();
  if (v5)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_310_0(v0, v1, v2, v3, v4);
    OUTLINED_FUNCTION_32_0();
    if (v5)
    {
      OUTLINED_FUNCTION_443_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_624();
    }
    v7 = OUTLINED_FUNCTION_44_5(v6);
    OUTLINED_FUNCTION_264(v7, v8, v9, v10);
  }
}

void sub_248EFA530()
{
  unint64_t v0;
  unint64_t v1;

  sub_248E0EBD8(319, &qword_254475888, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition.Device);
  if (v0 <= 0x3F)
  {
    sub_2490E7ABC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s7ToolKit22ToolKitProtoTypedValueV14PrimitiveValueV7DecimalV4SignOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248EFA63C + 4 * byte_2490F3A53[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_177_0_4 + 4 * byte_2490F3A4E[v4]))();
}

uint64_t sub_248EFA674(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248EFA67CLL);
  return result;
}

_BYTE *sub_248EFA684(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x248EFA68CLL);
  return OUTLINED_FUNCTION_176_0((_BYTE *)a1, a2 + 2);
}

void type metadata accessor for ToolKitProtoContainerDefinition.Origin()
{
  OUTLINED_FUNCTION_164();
}

uint64_t _s7ToolKit30ToolKitProtoRestrictionContextV17DateExpressibleAsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_248EFA6F4 + 4 * byte_2490F3A5D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_177_0_5 + 4 * byte_2490F3A58[v4]))();
}

uint64_t sub_248EFA72C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248EFA734);
  return result;
}

_BYTE *sub_248EFA73C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x248EFA744);
  return OUTLINED_FUNCTION_176_0((_BYTE *)a1, a2 + 3);
}

void type metadata accessor for ToolKitProtoContainerDefinition.TypeEnum()
{
  OUTLINED_FUNCTION_164();
}

void _s7ToolKit31ToolKitProtoContainerDefinitionV6DeviceVwCP_0(uint64_t a1, uint64_t *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_147_1();
  if ((v3 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*a2);
  }
  else
  {
    v4 = a2[1];
    if (v4 == 1)
      OUTLINED_FUNCTION_561();
    else
      OUTLINED_FUNCTION_602(v4);
    v5 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_25_7(v5);
  }
  OUTLINED_FUNCTION_93();
}

uint64_t _s7ToolKit31ToolKitProtoContainerDefinitionV6DeviceVwxx_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (*(_QWORD *)(a1 + 8) != 1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_63();
  v1 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v1, v2, v3);
}

void _s7ToolKit31ToolKitProtoContainerDefinitionV6DeviceVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_197_0();
  v1 = *(_QWORD *)(v0 + 8);
  if (v1 == 1)
    OUTLINED_FUNCTION_561();
  else
    OUTLINED_FUNCTION_602(v1);
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_25_7(v2);
  OUTLINED_FUNCTION_93();
}

void assignWithCopy for ToolKitProtoContainerDefinition.Device()
{
  sub_248EFA858();
}

void sub_248EFA858()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_197_0();
  v6 = *(_QWORD *)(v3 + 8);
  if (*(_QWORD *)(v2 + 8) != 1)
  {
    if (v6 != 1)
    {
      *v0 = *v1;
      OUTLINED_FUNCTION_435_0(v1[1]);
      OUTLINED_FUNCTION_37();
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_551(v2, v3, v4, v5);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    OUTLINED_FUNCTION_561();
    goto LABEL_8;
  }
  *v0 = *v1;
  OUTLINED_FUNCTION_435_0(v1[1]);
LABEL_8:
  v7 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24));
  OUTLINED_FUNCTION_93();
}

void assignWithTake for ToolKitProtoContainerDefinition.Device()
{
  sub_248EFA8F8();
}

void sub_248EFA8F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_197_0();
  v6 = *(_QWORD *)(v5 + 8);
  if (v6 != 1)
  {
    v7 = v1[1];
    if (v7 != 1)
    {
      *v0 = *v1;
      v0[1] = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_551(v6, v2, v3, v4);
  }
  OUTLINED_FUNCTION_561();
LABEL_6:
  v8 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoContainerDefinition.Device()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_236Tm(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 2147483645)
  {
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(a3 + 20));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoContainerDefinition.Device()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_237Tm()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_262_1();
  if (v3 == 2147483645)
  {
    *(_QWORD *)(v1 + 8) = (v0 + 1);
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_63();
    v5 = OUTLINED_FUNCTION_44_5(*(int *)(v4 + 20));
    OUTLINED_FUNCTION_264(v5, v6, v7, v8);
  }
}

void _s7ToolKit31ToolKitProtoContainerDefinitionV22ToolKitProtoDeviceKindOwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  OUTLINED_FUNCTION_435_0(a2[1]);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_1();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoIndexingEventType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoIndexingEventType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for ToolKitProtoContainerDefinition.ToolKitProtoDeviceKind()
{
  OUTLINED_FUNCTION_164();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoTypeDisplayRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    v10 = sub_2490E7ABC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoTypeDisplayRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ToolKitProtoTypeDisplayRepresentation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2490E7ABC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoTypeDisplayRepresentation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoTypeDisplayRepresentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoTypeDisplayRepresentation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoTypeDisplayRepresentation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoTypeDisplayRepresentation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EFAEA0()
{
  sub_248F0273C();
}

void _s7ToolKit27ToolKitProtoPluginModelDataVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  void (*v3)(char *, char *, uint64_t);
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  OUTLINED_FUNCTION_147_1();
  if ((v6 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*a2);
  }
  else
  {
    v7 = v5;
    v8 = *a2;
    v9 = a2[1];
    OUTLINED_FUNCTION_131_2(*a2);
    *v2 = v8;
    v2[1] = v9;
    v10 = a2[3];
    v2[2] = a2[2];
    v2[3] = v10;
    v11 = *(int *)(v7 + 24);
    v12 = (char *)v2 + v11;
    v13 = (char *)a2 + v11;
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_485_0();
    v3(v12, v13, v9);
  }
  OUTLINED_FUNCTION_41();
}

uint64_t _s7ToolKit27ToolKitProtoPluginModelDataVwxx_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_486_0(a1);
  OUTLINED_FUNCTION_460_0();
  OUTLINED_FUNCTION_63();
  v1 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v1, v2, v3);
}

void _s7ToolKit27ToolKitProtoPluginModelDataVwcp_0(uint64_t *a1, uint64_t *a2)
{
  void (*v2)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a2;
  v6 = a2[1];
  OUTLINED_FUNCTION_131_2(*a2);
  *a1 = v5;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_485_0();
  v8 = OUTLINED_FUNCTION_108();
  v2(v8);
  OUTLINED_FUNCTION_41();
}

void _s7ToolKit27ToolKitProtoPluginModelDataVwca_0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_131_2(*a2);
  OUTLINED_FUNCTION_611();
  OUTLINED_FUNCTION_417_0();
  OUTLINED_FUNCTION_37();
  v5 = a1 + *(int *)(a3 + 24);
  v6 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  OUTLINED_FUNCTION_41();
}

void _s7ToolKit26ToolKitProtoTypeIdentifierV6CustomVwtk_0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  uint64_t v3;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  v3 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit27ToolKitProtoPluginModelDataVwta_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_351_0(a1, a2);
  OUTLINED_FUNCTION_515_0();
  v4 = v3 + *(int *)(v2 + 24);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoPluginModelData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_71Tm()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 24));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 24));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoPluginModelData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_72Tm()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_43_5();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_63();
    v5 = OUTLINED_FUNCTION_44_5(*(int *)(v4 + 24));
    OUTLINED_FUNCTION_264(v5, v6, v7, v8);
  }
}

void sub_248EFB16C()
{
  unint64_t v0;

  OUTLINED_FUNCTION_265_1();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_181_1();
    OUTLINED_FUNCTION_258_1();
  }
  OUTLINED_FUNCTION_293();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  _OWORD *v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v107;
  char *v108;
  char *v109;
  char *v110;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = a3[6];
    v9 = (unint64_t *)((char *)a1 + v8);
    v10 = (unint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A60);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475930);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v17 = *v10;
        v18 = v10[1];
        if (EnumCaseMultiPayload == 1)
        {
          *v9 = v17;
          v9[1] = v18;
          v19 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
          v107 = (char *)v10 + v19;
          v109 = (char *)v9 + v19;
          v20 = sub_2490E7ABC();
          v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v109, v107, v20);
        }
        else
        {
          sub_248D9F5CC(*v10, v10[1]);
          *v9 = v17;
          v9[1] = v18;
          v22 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v23 = (char *)v9 + v22;
          v24 = (char *)v10 + v22;
          v25 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
      }
      v26 = *(int *)(v11 + 20);
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      v29 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v30 = a3[7];
    v31 = (unint64_t *)((char *)v4 + v30);
    v32 = (unint64_t *)((char *)a2 + v30);
    v33 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A08);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v35))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475910);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v37 = swift_getEnumCaseMultiPayload();
        v38 = *v32;
        v39 = v32[1];
        if (v37 == 1)
        {
          *v31 = v38;
          v31[1] = v39;
          v40 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
          v108 = (char *)v32 + v40;
          v110 = (char *)v31 + v40;
          v41 = sub_2490E7ABC();
          v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v110, v108, v41);
        }
        else
        {
          sub_248D9F5CC(*v32, v32[1]);
          *v31 = v38;
          v31[1] = v39;
          v43 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v44 = (char *)v31 + v43;
          v45 = (char *)v32 + v43;
          v46 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v35);
      }
      v47 = *(int *)(v33 + 20);
      v48 = (char *)v31 + v47;
      v49 = (char *)v32 + v47;
      v50 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    }
    v51 = a3[8];
    v52 = (uint64_t *)((char *)v4 + v51);
    v53 = (uint64_t *)((char *)a2 + v51);
    v54 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544759D8);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      v56 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v56))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v58 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v58))
          {
            v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
            memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          }
          else
          {
            v66 = swift_getEnumCaseMultiPayload();
            if (v66 == 2)
            {
              v70 = v53[1];
              *v52 = *v53;
              v52[1] = v70;
              swift_bridgeObjectRetain();
            }
            else if (v66 == 1)
            {
              v67 = v53[1];
              *v52 = *v53;
              v52[1] = v67;
              v68 = v53 + 2;
              v69 = v53[3];
              swift_bridgeObjectRetain();
              if (v69 >> 60 == 15)
              {
                *((_OWORD *)v52 + 1) = *v68;
              }
              else
              {
                v73 = *(_QWORD *)v68;
                sub_248D9F5CC(v73, v69);
                v52[2] = v73;
                v52[3] = v69;
              }
              v74 = v53 + 4;
              v75 = v53[5];
              if (v75 >> 60 == 15)
              {
                *((_OWORD *)v52 + 2) = *(_OWORD *)v74;
              }
              else
              {
                v76 = *v74;
                sub_248D9F5CC(*v74, v53[5]);
                v52[4] = v76;
                v52[5] = v75;
              }
              v77 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
              v78 = (char *)v52 + v77;
              v79 = (char *)v53 + v77;
              v80 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
            }
            else
            {
              v72 = *v53;
              v71 = v53[1];
              sub_248D9F5CC(*v53, v71);
              *v52 = v72;
              v52[1] = v71;
            }
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v58);
          }
          v81 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
          v82 = (char *)v52 + v81;
          v83 = (char *)v53 + v81;
          v84 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
        }
        else
        {
          v60 = *v53;
          v61 = v53[1];
          sub_248D9F5CC(*v53, v61);
          *v52 = v60;
          v52[1] = v61;
          v62 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v63 = (char *)v52 + v62;
          v64 = (char *)v53 + v62;
          v65 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v56);
      }
      v85 = *(int *)(v54 + 20);
      v86 = (char *)v52 + v85;
      v87 = (char *)v53 + v85;
      v88 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
    }
    v89 = a3[9];
    v90 = (uint64_t *)((char *)v4 + v89);
    v91 = (uint64_t *)((char *)a2 + v89);
    v92 = type metadata accessor for ToolKitProtoPluginModelData(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v92))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475488);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      v94 = *v91;
      v95 = v91[1];
      sub_248D9F5CC(*v91, v95);
      *v90 = v94;
      v90[1] = v95;
      v96 = v91[3];
      v90[2] = v91[2];
      v90[3] = v96;
      v97 = *(int *)(v92 + 24);
      v98 = (char *)v90 + v97;
      v99 = (char *)v91 + v97;
      v100 = sub_2490E7ABC();
      v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
      swift_bridgeObjectRetain();
      v101(v98, v99, v100);
      __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v92);
    }
    v102 = a3[10];
    v103 = (char *)v4 + v102;
    v104 = (char *)a2 + v102;
    v105 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoDisplayRepresentation(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
    if (!__swift_getEnumTagSinglePayload(v4, 1, v6))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0);
      }
      else
      {
        sub_248D9E628(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
        v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
      }
      v8 = v4 + *(int *)(v7 + 20);
      v9 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + *(int *)(v5 + 20);
    v11 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[7];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
  {
    v14 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
    if (!__swift_getEnumTagSinglePayload(v12, 1, v14))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0);
      }
      else
      {
        sub_248D9E628(*(_QWORD *)v12, *(_QWORD *)(v12 + 8));
        v15 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
      }
      v16 = v12 + *(int *)(v15 + 20);
      v17 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    }
    v18 = v12 + *(int *)(v13 + 20);
    v19 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = (uint64_t *)(a1 + a2[8]);
  v21 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v22))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v23))
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 2:
              swift_bridgeObjectRelease();
              break;
            case 1:
              swift_bridgeObjectRelease();
              v37 = v20[3];
              if (v37 >> 60 != 15)
                sub_248D9E628(v20[2], v37);
              v38 = v20[5];
              if (v38 >> 60 != 15)
                sub_248D9E628(v20[4], v38);
              v39 = (char *)v20
                  + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
              v40 = sub_2490E7ABC();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
              break;
            case 0:
              sub_248D9E628(*v20, v20[1]);
              break;
          }
        }
        v24 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
      }
      else
      {
        sub_248D9E628(*v20, v20[1]);
        v24 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
      }
      v25 = (char *)v20 + *(int *)(v24 + 20);
      v26 = sub_2490E7ABC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
    }
    v27 = (char *)v20 + *(int *)(v21 + 20);
    v28 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  v29 = a1 + a2[9];
  v30 = type metadata accessor for ToolKitProtoPluginModelData(0);
  if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
  {
    sub_248D9E628(*(_QWORD *)v29, *(_QWORD *)(v29 + 8));
    swift_bridgeObjectRelease();
    v31 = v29 + *(int *)(v30 + 24);
    v32 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  }
  v33 = a1 + a2[10];
  v34 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
}

_QWORD *initializeWithCopy for ToolKitProtoDisplayRepresentation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  _OWORD *v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v105;
  char *v106;
  char *v107;
  char *v108;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A60);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475930);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v15 = *v9;
      v16 = v9[1];
      if (EnumCaseMultiPayload == 1)
      {
        *v8 = v15;
        v8[1] = v16;
        v17 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
        v105 = (char *)v9 + v17;
        v107 = (char *)v8 + v17;
        v18 = sub_2490E7ABC();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v107, v105, v18);
      }
      else
      {
        sub_248D9F5CC(*v9, v9[1]);
        *v8 = v15;
        v8[1] = v16;
        v20 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v21 = (char *)v8 + v20;
        v22 = (char *)v9 + v20;
        v23 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
    }
    v24 = *(int *)(v10 + 20);
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    v27 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v28 = a3[7];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A08);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475910);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = swift_getEnumCaseMultiPayload();
      v36 = *v30;
      v37 = v30[1];
      if (v35 == 1)
      {
        *v29 = v36;
        v29[1] = v37;
        v38 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
        v106 = (char *)v30 + v38;
        v108 = (char *)v29 + v38;
        v39 = sub_2490E7ABC();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v108, v106, v39);
      }
      else
      {
        sub_248D9F5CC(*v30, v30[1]);
        *v29 = v36;
        v29[1] = v37;
        v41 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v42 = (char *)v29 + v41;
        v43 = (char *)v30 + v41;
        v44 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v33);
    }
    v45 = *(int *)(v31 + 20);
    v46 = (char *)v29 + v45;
    v47 = (char *)v30 + v45;
    v48 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  v49 = a3[8];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  v52 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544759D8);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    v54 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v54))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v56 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v56))
        {
          v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          v64 = swift_getEnumCaseMultiPayload();
          if (v64 == 2)
          {
            v68 = v51[1];
            *v50 = *v51;
            v50[1] = v68;
            swift_bridgeObjectRetain();
          }
          else if (v64 == 1)
          {
            v65 = v51[1];
            *v50 = *v51;
            v50[1] = v65;
            v66 = v51 + 2;
            v67 = v51[3];
            swift_bridgeObjectRetain();
            if (v67 >> 60 == 15)
            {
              *((_OWORD *)v50 + 1) = *v66;
            }
            else
            {
              v71 = *(_QWORD *)v66;
              sub_248D9F5CC(v71, v67);
              v50[2] = v71;
              v50[3] = v67;
            }
            v72 = v51 + 4;
            v73 = v51[5];
            if (v73 >> 60 == 15)
            {
              *((_OWORD *)v50 + 2) = *(_OWORD *)v72;
            }
            else
            {
              v74 = *v72;
              sub_248D9F5CC(*v72, v51[5]);
              v50[4] = v74;
              v50[5] = v73;
            }
            v75 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
            v76 = (char *)v50 + v75;
            v77 = (char *)v51 + v75;
            v78 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
          }
          else
          {
            v70 = *v51;
            v69 = v51[1];
            sub_248D9F5CC(*v51, v69);
            *v50 = v70;
            v50[1] = v69;
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v56);
        }
        v79 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
        v80 = (char *)v50 + v79;
        v81 = (char *)v51 + v79;
        v82 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
      }
      else
      {
        v58 = *v51;
        v59 = v51[1];
        sub_248D9F5CC(*v51, v59);
        *v50 = v58;
        v50[1] = v59;
        v60 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v61 = (char *)v50 + v60;
        v62 = (char *)v51 + v60;
        v63 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v54);
    }
    v83 = *(int *)(v52 + 20);
    v84 = (char *)v50 + v83;
    v85 = (char *)v51 + v83;
    v86 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
    __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
  }
  v87 = a3[9];
  v88 = (_QWORD *)((char *)a1 + v87);
  v89 = (_QWORD *)((char *)a2 + v87);
  v90 = type metadata accessor for ToolKitProtoPluginModelData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
  {
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475488);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
  }
  else
  {
    v92 = *v89;
    v93 = v89[1];
    sub_248D9F5CC(*v89, v93);
    *v88 = v92;
    v88[1] = v93;
    v94 = v89[3];
    v88[2] = v89[2];
    v88[3] = v94;
    v95 = *(int *)(v90 + 24);
    v96 = (char *)v88 + v95;
    v97 = (char *)v89 + v95;
    v98 = sub_2490E7ABC();
    v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
    swift_bridgeObjectRetain();
    v99(v96, v97, v98);
    __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v90);
  }
  v100 = a3[10];
  v101 = (char *)a1 + v100;
  v102 = (char *)a2 + v100;
  v103 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoDisplayRepresentation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  unint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  int v139;
  _OWORD *v140;
  unint64_t v141;
  int v142;
  _OWORD *v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  int v169;
  _OWORD *v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t *v206;
  uint64_t v207;
  int v208;
  int v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  void (*v216)(char *, char *, uint64_t);
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
    v16 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v15);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v19 = *v8;
        if (EnumCaseMultiPayload == 1)
        {
          *v7 = v19;
          v7[1] = v8[1];
          v20 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
          v231 = (char *)v8 + v20;
          v237 = (char *)v7 + v20;
          v21 = sub_2490E7ABC();
          v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v22(v237, v231, v21);
        }
        else
        {
          v43 = v8[1];
          sub_248D9F5CC(*v8, v43);
          *v7 = v19;
          v7[1] = v43;
          v44 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v45 = (char *)v7 + v44;
          v46 = (char *)v8 + v44;
          v47 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v15);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
          v38 = swift_getEnumCaseMultiPayload();
          v39 = *v8;
          if (v38 == 1)
          {
            *v7 = v39;
            v7[1] = v8[1];
            v40 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
            v233 = (char *)v8 + v40;
            v239 = (char *)v7 + v40;
            v41 = sub_2490E7ABC();
            v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v42(v239, v233, v41);
          }
          else
          {
            v48 = v8[1];
            sub_248D9F5CC(*v8, v48);
            *v7 = v39;
            v7[1] = v48;
            v49 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
            v50 = (char *)v7 + v49;
            v51 = (char *)v8 + v49;
            v52 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475930);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_27:
    v53 = *(int *)(v9 + 20);
    v54 = (char *)v7 + v53;
    v55 = (char *)v8 + v53;
    v56 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
    goto LABEL_28;
  }
  if (v11)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A60);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_28;
  }
  v12 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475930);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v23 = swift_getEnumCaseMultiPayload();
    v24 = *v8;
    if (v23 == 1)
    {
      *v7 = v24;
      v7[1] = v8[1];
      v25 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
      v232 = (char *)v8 + v25;
      v238 = (char *)v7 + v25;
      v26 = sub_2490E7ABC();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v238, v232, v26);
    }
    else
    {
      v29 = v8[1];
      sub_248D9F5CC(*v8, v29);
      *v7 = v24;
      v7[1] = v29;
      v30 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v31 = (char *)v7 + v30;
      v32 = (char *)v8 + v30;
      v33 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v12);
  }
  v34 = *(int *)(v9 + 20);
  v35 = (char *)v7 + v34;
  v36 = (char *)v8 + v34;
  v37 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_28:
  v57 = a3[7];
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (_QWORD *)((char *)a2 + v57);
  v60 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v60);
  v62 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60);
  if (!v61)
  {
    if (v62)
    {
      sub_248E25C30((uint64_t)v58, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
      goto LABEL_34;
    }
    v66 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
    v67 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v66);
    v68 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v66);
    if (v67)
    {
      if (!v68)
      {
        v69 = swift_getEnumCaseMultiPayload();
        v70 = *v59;
        if (v69 == 1)
        {
          *v58 = v70;
          v58[1] = v59[1];
          v71 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
          v234 = (char *)v59 + v71;
          v240 = (char *)v58 + v71;
          v72 = sub_2490E7ABC();
          v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          v73(v240, v234, v72);
        }
        else
        {
          v94 = v59[1];
          sub_248D9F5CC(*v59, v94);
          *v58 = v70;
          v58[1] = v94;
          v95 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v96 = (char *)v58 + v95;
          v97 = (char *)v59 + v95;
          v98 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v66);
        goto LABEL_54;
      }
    }
    else
    {
      if (!v68)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v58, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
          v89 = swift_getEnumCaseMultiPayload();
          v90 = *v59;
          if (v89 == 1)
          {
            *v58 = v90;
            v58[1] = v59[1];
            v91 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
            v236 = (char *)v59 + v91;
            v242 = (char *)v58 + v91;
            v92 = sub_2490E7ABC();
            v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
            swift_bridgeObjectRetain();
            v93(v242, v236, v92);
          }
          else
          {
            v99 = v59[1];
            sub_248D9F5CC(*v59, v99);
            *v58 = v90;
            v58[1] = v99;
            v100 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
            v101 = (char *)v58 + v100;
            v102 = (char *)v59 + v100;
            v103 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_54;
      }
      sub_248E25C30((uint64_t)v58, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
    }
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475910);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
LABEL_54:
    v104 = *(int *)(v60 + 20);
    v105 = (char *)v58 + v104;
    v106 = (char *)v59 + v104;
    v107 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 24))(v105, v106, v107);
    goto LABEL_55;
  }
  if (v62)
  {
LABEL_34:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A08);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_55;
  }
  v63 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v63))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475910);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v74 = swift_getEnumCaseMultiPayload();
    v75 = *v59;
    if (v74 == 1)
    {
      *v58 = v75;
      v58[1] = v59[1];
      v76 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
      v235 = (char *)v59 + v76;
      v241 = (char *)v58 + v76;
      v77 = sub_2490E7ABC();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      v78(v241, v235, v77);
    }
    else
    {
      v80 = v59[1];
      sub_248D9F5CC(*v59, v80);
      *v58 = v75;
      v58[1] = v80;
      v81 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v82 = (char *)v58 + v81;
      v83 = (char *)v59 + v81;
      v84 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v63);
  }
  v85 = *(int *)(v60 + 20);
  v86 = (char *)v58 + v85;
  v87 = (char *)v59 + v85;
  v88 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
  __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
LABEL_55:
  v108 = a3[8];
  v109 = (_QWORD *)((char *)a1 + v108);
  v110 = (_QWORD *)((char *)a2 + v108);
  v111 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  v112 = __swift_getEnumTagSinglePayload((uint64_t)v109, 1, v111);
  v113 = __swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111);
  if (!v112)
  {
    if (v113)
    {
      sub_248E25C30((uint64_t)v109, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
      goto LABEL_61;
    }
    v117 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
    v118 = __swift_getEnumTagSinglePayload((uint64_t)v109, 1, v117);
    v119 = __swift_getEnumTagSinglePayload((uint64_t)v110, 1, v117);
    if (v118)
    {
      if (!v119)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v120 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v120))
          {
            v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            v142 = swift_getEnumCaseMultiPayload();
            if (v142 == 2)
            {
              *v109 = *v110;
              v109[1] = v110[1];
              swift_bridgeObjectRetain();
            }
            else if (v142 == 1)
            {
              *v109 = *v110;
              v109[1] = v110[1];
              v143 = v110 + 2;
              v144 = v110[3];
              swift_bridgeObjectRetain();
              if (v144 >> 60 == 15)
              {
                *((_OWORD *)v109 + 1) = *v143;
              }
              else
              {
                v174 = *(_QWORD *)v143;
                sub_248D9F5CC(v174, v144);
                v109[2] = v174;
                v109[3] = v144;
              }
              v175 = v110 + 4;
              v176 = v110[5];
              if (v176 >> 60 == 15)
              {
                *((_OWORD *)v109 + 2) = *(_OWORD *)v175;
              }
              else
              {
                v177 = *v175;
                sub_248D9F5CC(*v175, v110[5]);
                v109[4] = v177;
                v109[5] = v176;
              }
              v178 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
              v179 = (char *)v109 + v178;
              v180 = (char *)v110 + v178;
              v181 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v179, v180, v181);
            }
            else
            {
              v173 = *v110;
              v172 = v110[1];
              sub_248D9F5CC(*v110, v172);
              *v109 = v173;
              v109[1] = v172;
            }
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v120);
          }
          v182 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
          v183 = (char *)v109 + v182;
          v184 = (char *)v110 + v182;
          v185 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v183, v184, v185);
        }
        else
        {
          v133 = *v110;
          v134 = v110[1];
          sub_248D9F5CC(*v110, v134);
          *v109 = v133;
          v109[1] = v134;
          v135 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v136 = (char *)v109 + v135;
          v137 = (char *)v110 + v135;
          v138 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v136, v137, v138);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v117);
        goto LABEL_123;
      }
    }
    else
    {
      if (!v119)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v109, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v131 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v131))
            {
              v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
              memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
            }
            else
            {
              v169 = swift_getEnumCaseMultiPayload();
              if (v169 == 2)
              {
                *v109 = *v110;
                v109[1] = v110[1];
                swift_bridgeObjectRetain();
              }
              else if (v169 == 1)
              {
                *v109 = *v110;
                v109[1] = v110[1];
                v170 = v110 + 2;
                v171 = v110[3];
                swift_bridgeObjectRetain();
                if (v171 >> 60 == 15)
                {
                  *((_OWORD *)v109 + 1) = *v170;
                }
                else
                {
                  v188 = *(_QWORD *)v170;
                  sub_248D9F5CC(v188, v171);
                  v109[2] = v188;
                  v109[3] = v171;
                }
                v189 = v110 + 4;
                v190 = v110[5];
                if (v190 >> 60 == 15)
                {
                  *((_OWORD *)v109 + 2) = *(_OWORD *)v189;
                }
                else
                {
                  v191 = *v189;
                  sub_248D9F5CC(*v189, v110[5]);
                  v109[4] = v191;
                  v109[5] = v190;
                }
                v192 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0)
                              + 28);
                v193 = (char *)v109 + v192;
                v194 = (char *)v110 + v192;
                v195 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v193, v194, v195);
              }
              else
              {
                v187 = *v110;
                v186 = v110[1];
                sub_248D9F5CC(*v110, v186);
                *v109 = v187;
                v109[1] = v186;
              }
              swift_storeEnumTagMultiPayload();
              __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v131);
            }
            v196 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
            v197 = (char *)v109 + v196;
            v198 = (char *)v110 + v196;
            v199 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 16))(v197, v198, v199);
          }
          else
          {
            v145 = *v110;
            v146 = v110[1];
            sub_248D9F5CC(*v110, v146);
            *v109 = v145;
            v109[1] = v146;
            v147 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
            v148 = (char *)v109 + v147;
            v149 = (char *)v110 + v147;
            v150 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_123;
      }
      sub_248E25C30((uint64_t)v109, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    }
    v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
LABEL_123:
    v200 = *(int *)(v111 + 20);
    v201 = (char *)v109 + v200;
    v202 = (char *)v110 + v200;
    v203 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 24))(v201, v202, v203);
    goto LABEL_124;
  }
  if (v113)
  {
LABEL_61:
    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544759D8);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    goto LABEL_124;
  }
  v114 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v114))
  {
    v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v122 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v122))
      {
        v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        v139 = swift_getEnumCaseMultiPayload();
        if (v139 == 2)
        {
          *v109 = *v110;
          v109[1] = v110[1];
          swift_bridgeObjectRetain();
        }
        else if (v139 == 1)
        {
          *v109 = *v110;
          v109[1] = v110[1];
          v140 = v110 + 2;
          v141 = v110[3];
          swift_bridgeObjectRetain();
          if (v141 >> 60 == 15)
          {
            *((_OWORD *)v109 + 1) = *v140;
          }
          else
          {
            v153 = *(_QWORD *)v140;
            sub_248D9F5CC(v153, v141);
            v109[2] = v153;
            v109[3] = v141;
          }
          v154 = v110 + 4;
          v155 = v110[5];
          if (v155 >> 60 == 15)
          {
            *((_OWORD *)v109 + 2) = *(_OWORD *)v154;
          }
          else
          {
            v156 = *v154;
            sub_248D9F5CC(*v154, v110[5]);
            v109[4] = v156;
            v109[5] = v155;
          }
          v157 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v158 = (char *)v109 + v157;
          v159 = (char *)v110 + v157;
          v160 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v158, v159, v160);
        }
        else
        {
          v152 = *v110;
          v151 = v110[1];
          sub_248D9F5CC(*v110, v151);
          *v109 = v152;
          v109[1] = v151;
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v122);
      }
      v161 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v162 = (char *)v109 + v161;
      v163 = (char *)v110 + v161;
      v164 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v162, v163, v164);
    }
    else
    {
      v125 = *v110;
      v126 = v110[1];
      sub_248D9F5CC(*v110, v126);
      *v109 = v125;
      v109[1] = v126;
      v127 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v128 = (char *)v109 + v127;
      v129 = (char *)v110 + v127;
      v130 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v114);
  }
  v165 = *(int *)(v111 + 20);
  v166 = (char *)v109 + v165;
  v167 = (char *)v110 + v165;
  v168 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v166, v167, v168);
  __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v111);
LABEL_124:
  v204 = a3[9];
  v205 = (_QWORD *)((char *)a1 + v204);
  v206 = (_QWORD *)((char *)a2 + v204);
  v207 = type metadata accessor for ToolKitProtoPluginModelData(0);
  v208 = __swift_getEnumTagSinglePayload((uint64_t)v205, 1, v207);
  v209 = __swift_getEnumTagSinglePayload((uint64_t)v206, 1, v207);
  if (!v208)
  {
    if (!v209)
    {
      v223 = *v206;
      v224 = v206[1];
      sub_248D9F5CC(*v206, v224);
      v225 = *v205;
      v226 = v205[1];
      *v205 = v223;
      v205[1] = v224;
      sub_248D9E628(v225, v226);
      v205[2] = v206[2];
      v205[3] = v206[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v227 = *(int *)(v207 + 24);
      v228 = (char *)v205 + v227;
      v229 = (char *)v206 + v227;
      v230 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 24))(v228, v229, v230);
      goto LABEL_130;
    }
    sub_248E25C30((uint64_t)v205, type metadata accessor for ToolKitProtoPluginModelData);
    goto LABEL_129;
  }
  if (v209)
  {
LABEL_129:
    v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475488);
    memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
    goto LABEL_130;
  }
  v210 = *v206;
  v211 = v206[1];
  sub_248D9F5CC(*v206, v211);
  *v205 = v210;
  v205[1] = v211;
  v205[2] = v206[2];
  v205[3] = v206[3];
  v212 = *(int *)(v207 + 24);
  v213 = (char *)v205 + v212;
  v214 = (char *)v206 + v212;
  v215 = sub_2490E7ABC();
  v216 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16);
  swift_bridgeObjectRetain();
  v216(v213, v214, v215);
  __swift_storeEnumTagSinglePayload((uint64_t)v205, 0, 1, v207);
LABEL_130:
  v218 = a3[10];
  v219 = (char *)a1 + v218;
  v220 = (char *)a2 + v218;
  v221 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 24))(v219, v220, v221);
  return a1;
}

uint64_t initializeWithTake for ToolKitProtoDisplayRepresentation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A60);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475930);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      if (EnumCaseMultiPayload == 1)
        v14 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
      else
        v14 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
    }
    v18 = *(int *)(v9 + 20);
    v19 = (char *)v7 + v18;
    v20 = (char *)v8 + v18;
    v21 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v22 = a3[7];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  v25 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A08);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v27))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475910);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = swift_getEnumCaseMultiPayload();
      *v23 = *v24;
      if (v29 == 1)
        v30 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
      else
        v30 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v31 = (char *)v23 + v30;
      v32 = (char *)v24 + v30;
      v33 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v27);
    }
    v34 = *(int *)(v25 + 20);
    v35 = (char *)v23 + v34;
    v36 = (char *)v24 + v34;
    v37 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
  }
  v38 = a3[8];
  v39 = (_OWORD *)(a1 + v38);
  v40 = (_OWORD *)(a2 + v38);
  v41 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544759D8);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v43))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v45 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v45))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v51 = v40[1];
            *v39 = *v40;
            v39[1] = v51;
            v39[2] = v40[2];
            v52 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
            v53 = (char *)v39 + v52;
            v54 = (char *)v40 + v52;
            v55 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v45);
        }
        v56 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
        v57 = (char *)v39 + v56;
        v58 = (char *)v40 + v56;
        v59 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      }
      else
      {
        *v39 = *v40;
        v47 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v48 = (char *)v39 + v47;
        v49 = (char *)v40 + v47;
        v50 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v43);
    }
    v60 = *(int *)(v41 + 20);
    v61 = (char *)v39 + v60;
    v62 = (char *)v40 + v60;
    v63 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
    __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
  }
  v64 = a3[9];
  v65 = (_OWORD *)(a1 + v64);
  v66 = (_OWORD *)(a2 + v64);
  v67 = type metadata accessor for ToolKitProtoPluginModelData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475488);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    v69 = v66[1];
    *v65 = *v66;
    v65[1] = v69;
    v70 = *(int *)(v67 + 24);
    v71 = (char *)v65 + v70;
    v72 = (char *)v66 + v70;
    v73 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
    __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
  }
  v74 = a3[10];
  v75 = a1 + v74;
  v76 = a2 + v74;
  v77 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v75, v76, v77);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoDisplayRepresentation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  _OWORD *v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  _OWORD *v147;
  uint64_t v148;
  int v149;
  int v150;
  __int128 v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
      goto LABEL_7;
    }
    v16 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v16);
    v18 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v8 = *v9;
        if (EnumCaseMultiPayload == 1)
          v20 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
        else
          v20 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v21 = (char *)v8 + v20;
        v22 = (char *)v9 + v20;
        v23 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v16);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v18)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
          v34 = swift_getEnumCaseMultiPayload();
          *v8 = *v9;
          if (v34 == 1)
            v35 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
          else
            v35 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v36 = (char *)v8 + v35;
          v37 = (char *)v9 + v35;
          v38 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_248E25C30((uint64_t)v8, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475930);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_27:
    v39 = *(int *)(v10 + 20);
    v40 = (char *)v8 + v39;
    v41 = (char *)v9 + v39;
    v42 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
    goto LABEL_28;
  }
  if (v12)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A60);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_28;
  }
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475930);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v24 = swift_getEnumCaseMultiPayload();
    *v8 = *v9;
    if (v24 == 1)
      v25 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0) + 20);
    else
      v25 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
    v26 = (char *)v8 + v25;
    v27 = (char *)v9 + v25;
    v28 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v13);
  }
  v30 = *(int *)(v10 + 20);
  v31 = (char *)v8 + v30;
  v32 = (char *)v9 + v30;
  v33 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_28:
  v43 = a3[7];
  v44 = (_OWORD *)((char *)a1 + v43);
  v45 = (_OWORD *)((char *)a2 + v43);
  v46 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  v47 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v46);
  v48 = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46);
  if (!v47)
  {
    if (v48)
    {
      sub_248E25C30((uint64_t)v44, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
      goto LABEL_34;
    }
    v52 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
    v53 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v52);
    v54 = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v52);
    if (v53)
    {
      if (!v54)
      {
        v55 = swift_getEnumCaseMultiPayload();
        *v44 = *v45;
        if (v55 == 1)
          v56 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
        else
          v56 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v57 = (char *)v44 + v56;
        v58 = (char *)v45 + v56;
        v59 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v52);
        goto LABEL_54;
      }
    }
    else
    {
      if (!v54)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v44, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
          v70 = swift_getEnumCaseMultiPayload();
          *v44 = *v45;
          if (v70 == 1)
            v71 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
          else
            v71 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v72 = (char *)v44 + v71;
          v73 = (char *)v45 + v71;
          v74 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_54;
      }
      sub_248E25C30((uint64_t)v44, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
    }
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475910);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
LABEL_54:
    v75 = *(int *)(v46 + 20);
    v76 = (char *)v44 + v75;
    v77 = (char *)v45 + v75;
    v78 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
    goto LABEL_55;
  }
  if (v48)
  {
LABEL_34:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475A08);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_55;
  }
  v49 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v49))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475910);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v60 = swift_getEnumCaseMultiPayload();
    *v44 = *v45;
    if (v60 == 1)
      v61 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0) + 20);
    else
      v61 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
    v62 = (char *)v44 + v61;
    v63 = (char *)v45 + v61;
    v64 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v49);
  }
  v66 = *(int *)(v46 + 20);
  v67 = (char *)v44 + v66;
  v68 = (char *)v45 + v66;
  v69 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
  __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
LABEL_55:
  v79 = a3[8];
  v80 = (_OWORD *)((char *)a1 + v79);
  v81 = (_OWORD *)((char *)a2 + v79);
  v82 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  v83 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v82);
  v84 = __swift_getEnumTagSinglePayload((uint64_t)v81, 1, v82);
  if (!v83)
  {
    if (v84)
    {
      sub_248E25C30((uint64_t)v80, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
      goto LABEL_61;
    }
    v88 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
    v89 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v88);
    v90 = __swift_getEnumTagSinglePayload((uint64_t)v81, 1, v88);
    if (v89)
    {
      if (!v90)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v91 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v91))
          {
            v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
            memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v119 = v81[1];
              *v80 = *v81;
              v80[1] = v119;
              v80[2] = v81[2];
              v120 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
              v121 = (char *)v80 + v120;
              v122 = (char *)v81 + v120;
              v123 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v91);
          }
          v128 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
          v129 = (char *)v80 + v128;
          v130 = (char *)v81 + v128;
          v131 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v129, v130, v131);
        }
        else
        {
          *v80 = *v81;
          v102 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
          v103 = (char *)v80 + v102;
          v104 = (char *)v81 + v102;
          v105 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v88);
        goto LABEL_99;
      }
    }
    else
    {
      if (!v90)
      {
        if (a1 != a2)
        {
          sub_248E25C30((uint64_t)v80, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v100 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v100))
            {
              v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
              memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v132 = v81[1];
                *v80 = *v81;
                v80[1] = v132;
                v80[2] = v81[2];
                v133 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0)
                              + 28);
                v134 = (char *)v80 + v133;
                v135 = (char *)v81 + v133;
                v136 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v100);
            }
            v137 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
            v138 = (char *)v80 + v137;
            v139 = (char *)v81 + v137;
            v140 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
          }
          else
          {
            *v80 = *v81;
            v124 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
            v125 = (char *)v80 + v124;
            v126 = (char *)v81 + v124;
            v127 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_99;
      }
      sub_248E25C30((uint64_t)v80, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    }
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
LABEL_99:
    v141 = *(int *)(v82 + 20);
    v142 = (char *)v80 + v141;
    v143 = (char *)v81 + v141;
    v144 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 40))(v142, v143, v144);
    goto LABEL_100;
  }
  if (v84)
  {
LABEL_61:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544759D8);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_100;
  }
  v85 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v85))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v93 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v93))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v106 = v81[1];
          *v80 = *v81;
          v80[1] = v106;
          v80[2] = v81[2];
          v107 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v108 = (char *)v80 + v107;
          v109 = (char *)v81 + v107;
          v110 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v93);
      }
      v111 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v112 = (char *)v80 + v111;
      v113 = (char *)v81 + v111;
      v114 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v112, v113, v114);
    }
    else
    {
      *v80 = *v81;
      v96 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v97 = (char *)v80 + v96;
      v98 = (char *)v81 + v96;
      v99 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v85);
  }
  v115 = *(int *)(v82 + 20);
  v116 = (char *)v80 + v115;
  v117 = (char *)v81 + v115;
  v118 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
  __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v82);
LABEL_100:
  v145 = a3[9];
  v146 = (_QWORD *)((char *)a1 + v145);
  v147 = (_OWORD *)((char *)a2 + v145);
  v148 = type metadata accessor for ToolKitProtoPluginModelData(0);
  v149 = __swift_getEnumTagSinglePayload((uint64_t)v146, 1, v148);
  v150 = __swift_getEnumTagSinglePayload((uint64_t)v147, 1, v148);
  if (!v149)
  {
    if (!v150)
    {
      v162 = *v146;
      v163 = v146[1];
      *(_OWORD *)v146 = *v147;
      sub_248D9E628(v162, v163);
      v164 = *((_QWORD *)v147 + 3);
      v146[2] = *((_QWORD *)v147 + 2);
      v146[3] = v164;
      swift_bridgeObjectRelease();
      v165 = *(int *)(v148 + 24);
      v166 = (char *)v146 + v165;
      v167 = (char *)v147 + v165;
      v168 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 40))(v166, v167, v168);
      goto LABEL_106;
    }
    sub_248E25C30((uint64_t)v146, type metadata accessor for ToolKitProtoPluginModelData);
    goto LABEL_105;
  }
  if (v150)
  {
LABEL_105:
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475488);
    memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
    goto LABEL_106;
  }
  v151 = v147[1];
  *(_OWORD *)v146 = *v147;
  *((_OWORD *)v146 + 1) = v151;
  v152 = *(int *)(v148 + 24);
  v153 = (char *)v146 + v152;
  v154 = (char *)v147 + v152;
  v155 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v153, v154, v155);
  __swift_storeEnumTagSinglePayload((uint64_t)v146, 0, 1, v148);
LABEL_106:
  v157 = a3[10];
  v158 = (char *)a1 + v157;
  v159 = (char *)a2 + v157;
  v160 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 40))(v158, v159, v160);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248EFED9C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_80_2();
  if (v1)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475A60);
    OUTLINED_FUNCTION_24_6();
    if (v1)
    {
      OUTLINED_FUNCTION_217_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254475A08);
      OUTLINED_FUNCTION_24_6();
      if (v3)
      {
        OUTLINED_FUNCTION_266_1();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544759D8);
        OUTLINED_FUNCTION_24_6();
        if (v4)
        {
          OUTLINED_FUNCTION_536();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254475488);
          OUTLINED_FUNCTION_24_6();
          if (v5)
          {
            OUTLINED_FUNCTION_473_0();
          }
          else
          {
            OUTLINED_FUNCTION_63();
            OUTLINED_FUNCTION_426_0();
          }
        }
      }
    }
    v6 = OUTLINED_FUNCTION_94_1(v2);
    OUTLINED_FUNCTION_265(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248EFEE58()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_43_5();
  if (v0)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475A60);
    OUTLINED_FUNCTION_32_0();
    if (v0)
    {
      OUTLINED_FUNCTION_225_0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254475A08);
      OUTLINED_FUNCTION_32_0();
      if (v2)
      {
        OUTLINED_FUNCTION_277_1();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544759D8);
        OUTLINED_FUNCTION_32_0();
        if (v3)
        {
          OUTLINED_FUNCTION_567();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254475488);
          OUTLINED_FUNCTION_32_0();
          if (v4)
          {
            OUTLINED_FUNCTION_501_0();
          }
          else
          {
            OUTLINED_FUNCTION_63();
            OUTLINED_FUNCTION_443_0();
          }
        }
      }
    }
    v5 = OUTLINED_FUNCTION_44_5(v1);
    OUTLINED_FUNCTION_264(v5, v6, v7, v8);
  }
}

void sub_248EFEF04()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_248E0EBD8(319, &qword_254475A68, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
  if (v0 <= 0x3F)
  {
    sub_248E0EBD8(319, &qword_254475A10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
    if (v1 <= 0x3F)
    {
      sub_248E0EBD8(319, &qword_2544759E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
      if (v2 <= 0x3F)
      {
        sub_248E0EBD8(319, &qword_254475490, (void (*)(uint64_t))type metadata accessor for ToolKitProtoPluginModelData);
        if (v3 <= 0x3F)
        {
          sub_2490E7ABC();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void _s7ToolKit33ToolKitProtoDisplayRepresentationV7StorageVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_147_1();
  if ((v4 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*a2);
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    OUTLINED_FUNCTION_131_2(*a2);
    *v2 = v5;
    v2[1] = v6;
    v7 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_25_7(v7);
  }
  OUTLINED_FUNCTION_41();
}

uint64_t _s7ToolKit33ToolKitProtoDisplayRepresentationV7StorageVwxx_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_486_0(a1);
  OUTLINED_FUNCTION_63();
  v1 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v1, v2, v3);
}

void _s7ToolKit33ToolKitProtoDisplayRepresentationV7StorageVwcp_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a2;
  v6 = a2[1];
  OUTLINED_FUNCTION_131_2(*a2);
  *a1 = v5;
  a1[1] = v6;
  v7 = (uint64_t)a1 + *(int *)(a3 + 20);
  v8 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
  OUTLINED_FUNCTION_41();
}

void _s7ToolKit33ToolKitProtoDisplayRepresentationV7StorageVwca_0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_131_2(*a2);
  OUTLINED_FUNCTION_611();
  v5 = a1 + *(int *)(a3 + 20);
  v6 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  OUTLINED_FUNCTION_41();
}

void _s7ToolKit33ToolKitProtoDisplayRepresentationV7StorageVwta_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_351_0(a1, a2);
  v4 = v3 + *(int *)(v2 + 20);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Storage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_129Tm(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 12)
  {
    OUTLINED_FUNCTION_350_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(a3 + 20));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Storage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_130Tm()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_616();
  if (v2 == 12)
  {
    *v0 = 0;
    v0[1] = (unint64_t)(((-v1 >> 2) & 3) - 4 * v1) << 60;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_278_1();
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

void initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.Subtitle()
{
  sub_248EFF400();
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.Subtitle(uint64_t a1, uint64_t a2)
{
  return sub_248EFF520(a1, a2, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

void initializeWithCopy for ToolKitProtoDisplayRepresentation.Subtitle()
{
  sub_248EFF5C8();
}

void assignWithCopy for ToolKitProtoDisplayRepresentation.Subtitle()
{
  sub_248EFF6D0();
}

void initializeWithTake for ToolKitProtoDisplayRepresentation.Subtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EFF8A4(a1, a2, a3, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
}

void assignWithTake for ToolKitProtoDisplayRepresentation.Subtitle()
{
  sub_248EFF980();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Subtitle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EFF320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475930);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Subtitle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EFF338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475930);
}

void sub_248EFF344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475938, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Subtitle.Static()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Subtitle.Static()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind()
{
  sub_248EFFDB0();
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(uint64_t a1)
{
  return sub_248EFFE84(a1);
}

void initializeWithCopy for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind()
{
  sub_248EFFEE0();
}

void assignWithCopy for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind()
{
  sub_248EFFF8C();
}

void initializeWithTake for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind()
{
  sub_248F0005C();
}

void assignWithTake for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F00100(a1, a2, a3, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
}

void sub_248EFF3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EE7204(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

void initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.AltText()
{
  sub_248EFF400();
}

void sub_248EFF400()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  void (*v3)(_QWORD);
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_7_0();
  v2 = v1;
  OUTLINED_FUNCTION_147_1();
  if ((v5 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*v2);
  }
  else
  {
    v6 = v4;
    v3(0);
    if (OUTLINED_FUNCTION_93_1((uint64_t)v2))
    {
      v7 = OUTLINED_FUNCTION_493_0();
      OUTLINED_FUNCTION_98_1(v7);
    }
    else
    {
      OUTLINED_FUNCTION_253_1();
      OUTLINED_FUNCTION_636();
      if (v8)
      {
        v9 = v2[1];
        *v0 = v6;
        v0[1] = v9;
        v10 = *(int *)(OUTLINED_FUNCTION_405_0() + 20);
        v11 = (uint64_t)v0 + v10;
        v12 = (uint64_t)v2 + v10;
        OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_189();
        OUTLINED_FUNCTION_527_0(v11, v12);
      }
      else
      {
        v13 = v2[1];
        OUTLINED_FUNCTION_131_2(v6);
        *v0 = v6;
        v0[1] = v13;
        type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
        v14 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16));
      }
      OUTLINED_FUNCTION_326_0();
      OUTLINED_FUNCTION_101_2();
    }
    v15 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_25_7(v15);
  }
  OUTLINED_FUNCTION_3_1();
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.AltText(uint64_t a1, uint64_t a2)
{
  return sub_248EFF520(a1, a2, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_248EFF520(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  OUTLINED_FUNCTION_362_0(a1, a2, a3);
  if (!OUTLINED_FUNCTION_93_1(a1))
  {
    if (OUTLINED_FUNCTION_274_1() == 1)
    {
      OUTLINED_FUNCTION_560();
      a4(0);
    }
    else
    {
      sub_248D9E628(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      OUTLINED_FUNCTION_259_1();
    }
    v6 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_116_1(v6);
  }
  OUTLINED_FUNCTION_63();
  v7 = OUTLINED_FUNCTION_65_3();
  return v8(v7);
}

void initializeWithCopy for ToolKitProtoDisplayRepresentation.AltText()
{
  sub_248EFF5C8();
}

void sub_248EFF5C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_7_0();
  v3 = v2;
  OUTLINED_FUNCTION_241_1(v4, v5, v6, v7);
  if (OUTLINED_FUNCTION_93_1(v1))
  {
    v8 = OUTLINED_FUNCTION_493_0();
    OUTLINED_FUNCTION_98_1(v8);
  }
  else
  {
    OUTLINED_FUNCTION_253_1();
    OUTLINED_FUNCTION_636();
    if (v9)
    {
      v10 = *(_QWORD *)(v1 + 8);
      *v0 = v3;
      v0[1] = v10;
      v11 = *(int *)(OUTLINED_FUNCTION_405_0() + 20);
      v12 = (uint64_t)v0 + v11;
      v13 = v1 + v11;
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_189();
      OUTLINED_FUNCTION_527_0(v12, v13);
    }
    else
    {
      v14 = *(_QWORD *)(v1 + 8);
      OUTLINED_FUNCTION_131_2(v3);
      *v0 = v3;
      v0[1] = v14;
      type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
      v15 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16));
    }
    OUTLINED_FUNCTION_326_0();
    OUTLINED_FUNCTION_101_2();
  }
  v16 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_25_7(v16);
  OUTLINED_FUNCTION_3_1();
}

void assignWithCopy for ToolKitProtoDisplayRepresentation.AltText()
{
  sub_248EFF6D0();
}

void sub_248EFF6D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_7_0();
  v3 = v2;
  v8 = OUTLINED_FUNCTION_241_1(v4, v5, v6, v7);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v0, 1, v8);
  v10 = OUTLINED_FUNCTION_93_1(v1);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      OUTLINED_FUNCTION_253_1();
      OUTLINED_FUNCTION_636();
      if (v11)
      {
        *v0 = v3;
        v0[1] = *(_QWORD *)(v1 + 8);
        v12 = *(int *)(OUTLINED_FUNCTION_405_0() + 20);
        v13 = (uint64_t)v0 + v12;
        v14 = v1 + v12;
        OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_512_0();
        OUTLINED_FUNCTION_527_0(v13, v14);
      }
      else
      {
        v19 = *(_QWORD *)(v1 + 8);
        OUTLINED_FUNCTION_131_2(v3);
        *v0 = v3;
        v0[1] = v19;
        type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
        v20 = OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16));
      }
      OUTLINED_FUNCTION_326_0();
      OUTLINED_FUNCTION_101_2();
      goto LABEL_15;
    }
LABEL_8:
    v15 = OUTLINED_FUNCTION_493_0();
    OUTLINED_FUNCTION_98_1(v15);
    goto LABEL_15;
  }
  if (v10)
  {
    OUTLINED_FUNCTION_384_0();
    goto LABEL_8;
  }
  if (v0 != (uint64_t *)v1)
  {
    OUTLINED_FUNCTION_384_0();
    OUTLINED_FUNCTION_253_1();
    OUTLINED_FUNCTION_636();
    if (v11)
    {
      *v0 = v3;
      v0[1] = *(_QWORD *)(v1 + 8);
      v16 = *(int *)(OUTLINED_FUNCTION_405_0() + 20);
      v17 = (uint64_t)v0 + v16;
      v18 = v1 + v16;
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_512_0();
      OUTLINED_FUNCTION_527_0(v17, v18);
    }
    else
    {
      v21 = *(_QWORD *)(v1 + 8);
      OUTLINED_FUNCTION_131_2(v3);
      *v0 = v3;
      v0[1] = v21;
      type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
      v22 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_120_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16));
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v23 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24));
  OUTLINED_FUNCTION_3_1();
}

void initializeWithTake for ToolKitProtoDisplayRepresentation.AltText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EFF8A4(a1, a2, a3, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
}

void sub_248EFF8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  __n128 *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_241_1(a1, a2, a3, a4);
  if (OUTLINED_FUNCTION_93_1((uint64_t)v4))
  {
    v5 = OUTLINED_FUNCTION_493_0();
    OUTLINED_FUNCTION_98_1(v5);
  }
  else
  {
    OUTLINED_FUNCTION_253_1();
    OUTLINED_FUNCTION_514_0(*v4);
    if (v6)
      OUTLINED_FUNCTION_405_0();
    else
      type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
    v7 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_105_2(v7);
    OUTLINED_FUNCTION_326_0();
    OUTLINED_FUNCTION_101_2();
  }
  v8 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  OUTLINED_FUNCTION_41();
}

void assignWithTake for ToolKitProtoDisplayRepresentation.AltText()
{
  sub_248EFF980();
}

void sub_248EFF980()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_136_2();
  v6 = OUTLINED_FUNCTION_241_1(v2, v3, v4, v5);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v6);
  v8 = OUTLINED_FUNCTION_93_1((uint64_t)v1);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      OUTLINED_FUNCTION_253_1();
      OUTLINED_FUNCTION_514_0(*v1);
      if (v9)
        OUTLINED_FUNCTION_405_0();
      else
        type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
      v11 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_105_2(v11);
      OUTLINED_FUNCTION_326_0();
      OUTLINED_FUNCTION_101_2();
      goto LABEL_15;
    }
LABEL_8:
    v10 = OUTLINED_FUNCTION_493_0();
    OUTLINED_FUNCTION_98_1(v10);
    goto LABEL_15;
  }
  if (v8)
  {
    OUTLINED_FUNCTION_384_0();
    goto LABEL_8;
  }
  if ((__n128 *)v0 != v1)
  {
    OUTLINED_FUNCTION_384_0();
    OUTLINED_FUNCTION_253_1();
    OUTLINED_FUNCTION_514_0(*v1);
    if (v9)
      OUTLINED_FUNCTION_405_0();
    else
      type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
    v12 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_105_2(v12);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v13 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_31_5(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40));
  OUTLINED_FUNCTION_3_0();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.AltText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EFFAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475910);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.AltText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248EFFAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475910);
}

void sub_248EFFB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475918, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV21IntentUpdatableEntityVwCP_0()
{
  uint64_t *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;

  OUTLINED_FUNCTION_147_1();
  if ((v2 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*v1);
  }
  else
  {
    v3 = v1[1];
    *v0 = *v1;
    v0[1] = v3;
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_207_1();
  }
  OUTLINED_FUNCTION_41();
}

uint64_t _s7ToolKit30ToolKitProtoSystemTypeProtocolV21IntentUpdatableEntityVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_308();
  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV21IntentUpdatableEntityVwcp_0(_QWORD *a1, _QWORD *a2)
{
  OUTLINED_FUNCTION_569(a1, a2);
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_207_1();
  OUTLINED_FUNCTION_41();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV21IntentUpdatableEntityVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_187_0(a1, a2);
  OUTLINED_FUNCTION_37();
  v4 = v3 + *(int *)(v2 + 20);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV21IntentUpdatableEntityVwtk_0(_OWORD *a1, _OWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

void _s7ToolKit30ToolKitProtoSystemTypeProtocolV21IntentUpdatableEntityVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_244_0(a1, a2);
  v4 = v3 + *(int *)(v2 + 20);
  v5 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_57_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  OUTLINED_FUNCTION_93();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.AltText.Static()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_7Tm()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 20));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.AltText.Static()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_8Tm()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 20));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

void sub_248EFFD68()
{
  unint64_t v0;

  OUTLINED_FUNCTION_265_1();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_321();
    OUTLINED_FUNCTION_258_1();
  }
  OUTLINED_FUNCTION_390_0();
}

void initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind()
{
  sub_248EFFDB0();
}

void sub_248EFFDB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_136_2();
  v2 = v1;
  OUTLINED_FUNCTION_147_1();
  if ((v4 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_51_3(*v2);
  }
  else
  {
    v5 = v3;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = *v2;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = v2[1];
      *v0 = v7;
      v0[1] = v8;
      OUTLINED_FUNCTION_510_0();
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_484_0();
      OUTLINED_FUNCTION_564();
    }
    else
    {
      OUTLINED_FUNCTION_365_0();
      *v0 = v7;
      v0[1] = v5;
      v9 = (uint64_t)v0 + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v10 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_37_7(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
    }
    OUTLINED_FUNCTION_108();
    swift_storeEnumTagMultiPayload();
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(uint64_t a1)
{
  return sub_248EFFE84(a1);
}

uint64_t sub_248EFFE84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_560();
    OUTLINED_FUNCTION_407_0();
  }
  else
  {
    sub_248D9E628(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_259_1();
  }
  OUTLINED_FUNCTION_63();
  v2 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v2, v3, v4);
}

void initializeWithCopy for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind()
{
  sub_248EFFEE0();
}

void sub_248EFFEE0()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_136_2();
  v3 = OUTLINED_FUNCTION_387_0();
  v4 = *v1;
  if (v3 == 1)
  {
    v5 = v1[1];
    *v0 = v4;
    v0[1] = v5;
    OUTLINED_FUNCTION_510_0();
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_484_0();
    OUTLINED_FUNCTION_564();
  }
  else
  {
    OUTLINED_FUNCTION_365_0();
    *v0 = v4;
    v0[1] = v2;
    v6 = (uint64_t)v0 + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
    v7 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_37_7(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  }
  OUTLINED_FUNCTION_383_0();
  OUTLINED_FUNCTION_3_0();
}

void assignWithCopy for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind()
{
  sub_248EFFF8C();
}

void sub_248EFFF8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  _QWORD *v6;
  int v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_136_2();
  v6 = (_QWORD *)v2;
  if (v2 != v3)
  {
    OUTLINED_FUNCTION_452_0(v2, v3, v4, v5);
    v7 = OUTLINED_FUNCTION_40_5();
    v8 = *v0;
    if (v7 == 1)
    {
      *v6 = v8;
      v6[1] = v0[1];
      OUTLINED_FUNCTION_510_0();
      v9 = *(void (**)(uint64_t))(*(_QWORD *)(OUTLINED_FUNCTION_63() - 8) + 16);
      OUTLINED_FUNCTION_158();
      v10 = OUTLINED_FUNCTION_361();
      v9(v10);
    }
    else
    {
      OUTLINED_FUNCTION_365_0();
      *v6 = v8;
      v6[1] = v1;
      v11 = (uint64_t)v6 + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v12 = OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_37_7(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16));
    }
    OUTLINED_FUNCTION_383_0();
  }
  OUTLINED_FUNCTION_3_0();
}

void initializeWithTake for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind()
{
  sub_248F0005C();
}

void sub_248F0005C()
{
  uint64_t v0;
  __n128 *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_387_0();
  OUTLINED_FUNCTION_514_0(*v1);
  if (v2)
    v3 = v0 + *(int *)(OUTLINED_FUNCTION_510_0() + 20);
  else
    v3 = v0 + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
  v4 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_37_7(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_383_0();
  OUTLINED_FUNCTION_93();
}

void assignWithTake for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F00100(a1, a2, a3, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
}

void sub_248F00100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  __n128 *v4;
  char v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    OUTLINED_FUNCTION_452_0(a1, a2, a3, a4);
    OUTLINED_FUNCTION_40_5();
    OUTLINED_FUNCTION_514_0(*v4);
    if (v6)
      v7 = a1 + *(int *)(OUTLINED_FUNCTION_510_0() + 20);
    else
      v7 = a1 + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
    v8 = OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_37_7(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
    OUTLINED_FUNCTION_383_0();
  }
  OUTLINED_FUNCTION_93();
}

void sub_248F001A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EE7204(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.Image(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v10))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v22 = a2[1];
            *a1 = *a2;
            a1[1] = v22;
            swift_bridgeObjectRetain();
          }
          else if (EnumCaseMultiPayload == 1)
          {
            v19 = a2[1];
            *a1 = *a2;
            a1[1] = v19;
            v20 = a2 + 2;
            v21 = a2[3];
            swift_bridgeObjectRetain();
            if (v21 >> 60 == 15)
            {
              *((_OWORD *)a1 + 1) = *v20;
            }
            else
            {
              v25 = *(_QWORD *)v20;
              sub_248D9F5CC(v25, v21);
              a1[2] = v25;
              a1[3] = v21;
            }
            v26 = a2 + 4;
            v27 = a2[5];
            if (v27 >> 60 == 15)
            {
              *((_OWORD *)a1 + 2) = *(_OWORD *)v26;
            }
            else
            {
              v28 = *v26;
              sub_248D9F5CC(*v26, a2[5]);
              a1[4] = v28;
              a1[5] = v27;
            }
            v29 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
            v30 = (char *)a1 + v29;
            v31 = (char *)a2 + v29;
            v32 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
          }
          else
          {
            v23 = *a2;
            v24 = a2[1];
            sub_248D9F5CC(*a2, v24);
            *a1 = v23;
            a1[1] = v24;
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v10);
        }
        v33 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      }
      else
      {
        v12 = *a2;
        v13 = a2[1];
        sub_248D9F5CC(*a2, v13);
        *a1 = v12;
        a1[1] = v13;
        v14 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v37 = *(int *)(a3 + 20);
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.Image(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;

  v4 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 2:
            swift_bridgeObjectRelease();
            break;
          case 1:
            swift_bridgeObjectRelease();
            v13 = a1[3];
            if (v13 >> 60 != 15)
              sub_248D9E628(a1[2], v13);
            v14 = a1[5];
            if (v14 >> 60 != 15)
              sub_248D9E628(a1[4], v14);
            v15 = (char *)a1
                + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
            v16 = sub_2490E7ABC();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
            break;
          case 0:
            sub_248D9E628(*a1, a1[1]);
            break;
        }
      }
      v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
    }
    else
    {
      sub_248D9E628(*a1, a1[1]);
      v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
    }
    v7 = (char *)a1 + *(int *)(v6 + 20);
    v8 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = (char *)a1 + *(int *)(a2 + 20);
  v10 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for ToolKitProtoDisplayRepresentation.Image(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v8))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v20 = a2[1];
          *a1 = *a2;
          a1[1] = v20;
          swift_bridgeObjectRetain();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v17 = a2[1];
          *a1 = *a2;
          a1[1] = v17;
          v18 = a2 + 2;
          v19 = a2[3];
          swift_bridgeObjectRetain();
          if (v19 >> 60 == 15)
          {
            *((_OWORD *)a1 + 1) = *v18;
          }
          else
          {
            v23 = *(_QWORD *)v18;
            sub_248D9F5CC(v23, v19);
            a1[2] = v23;
            a1[3] = v19;
          }
          v24 = a2 + 4;
          v25 = a2[5];
          if (v25 >> 60 == 15)
          {
            *((_OWORD *)a1 + 2) = *(_OWORD *)v24;
          }
          else
          {
            v26 = *v24;
            sub_248D9F5CC(*v24, a2[5]);
            a1[4] = v26;
            a1[5] = v25;
          }
          v27 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v28 = (char *)a1 + v27;
          v29 = (char *)a2 + v27;
          v30 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        }
        else
        {
          v21 = *a2;
          v22 = a2[1];
          sub_248D9F5CC(*a2, v22);
          *a1 = v21;
          a1[1] = v22;
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v8);
      }
      v31 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      v10 = *a2;
      v11 = a2[1];
      sub_248D9F5CC(*a2, v11);
      *a1 = v10;
      a1[1] = v11;
      v12 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v35 = *(int *)(a3 + 20);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoDisplayRepresentation.Image(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  _OWORD *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  _OWORD *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v9 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
          }
          else if (EnumCaseMultiPayload == 1)
          {
            *a1 = *a2;
            a1[1] = a2[1];
            v21 = a2 + 2;
            v22 = a2[3];
            swift_bridgeObjectRetain();
            if (v22 >> 60 == 15)
            {
              *((_OWORD *)a1 + 1) = *v21;
            }
            else
            {
              v34 = *(_QWORD *)v21;
              sub_248D9F5CC(v34, v22);
              a1[2] = v34;
              a1[3] = v22;
            }
            v35 = a2 + 4;
            v36 = a2[5];
            if (v36 >> 60 == 15)
            {
              *((_OWORD *)a1 + 2) = *(_OWORD *)v35;
            }
            else
            {
              v37 = *v35;
              sub_248D9F5CC(*v35, a2[5]);
              a1[4] = v37;
              a1[5] = v36;
            }
            v38 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
            v39 = (char *)a1 + v38;
            v40 = (char *)a2 + v38;
            v41 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
          }
          else
          {
            v32 = *a2;
            v33 = a2[1];
            sub_248D9F5CC(*a2, v33);
            *a1 = v32;
            a1[1] = v33;
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
        }
        v42 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      }
      else
      {
        v14 = *a2;
        v15 = a2[1];
        sub_248D9F5CC(*a2, v15);
        *a1 = v14;
        a1[1] = v15;
        v16 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_43;
    }
LABEL_8:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_43;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v29 = swift_getEnumCaseMultiPayload();
        if (v29 == 2)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        else if (v29 == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          v30 = a2 + 2;
          v31 = a2[3];
          swift_bridgeObjectRetain();
          if (v31 >> 60 == 15)
          {
            *((_OWORD *)a1 + 1) = *v30;
          }
          else
          {
            v48 = *(_QWORD *)v30;
            sub_248D9F5CC(v48, v31);
            a1[2] = v48;
            a1[3] = v31;
          }
          v49 = a2 + 4;
          v50 = a2[5];
          if (v50 >> 60 == 15)
          {
            *((_OWORD *)a1 + 2) = *(_OWORD *)v49;
          }
          else
          {
            v51 = *v49;
            sub_248D9F5CC(*v49, a2[5]);
            a1[4] = v51;
            a1[5] = v50;
          }
          v52 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v53 = (char *)a1 + v52;
          v54 = (char *)a2 + v52;
          v55 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
        }
        else
        {
          v46 = *a2;
          v47 = a2[1];
          sub_248D9F5CC(*a2, v47);
          *a1 = v46;
          a1[1] = v47;
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v12);
      }
      v56 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    }
    else
    {
      v23 = *a2;
      v24 = a2[1];
      sub_248D9F5CC(*a2, v24);
      *a1 = v23;
      a1[1] = v24;
      v25 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_43:
  v60 = *(int *)(a3 + 20);
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoDisplayRepresentation.Image(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v8))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v14 = a2[1];
          *a1 = *a2;
          a1[1] = v14;
          a1[2] = a2[2];
          v15 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v16 = (char *)a1 + v15;
          v17 = (char *)a2 + v15;
          v18 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v8);
      }
      v19 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    }
    else
    {
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v23 = *(int *)(a3 + 20);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoDisplayRepresentation.Image(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v9 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v18 = a2[1];
            *a1 = *a2;
            a1[1] = v18;
            a1[2] = a2[2];
            v19 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
            v20 = (char *)a1 + v19;
            v21 = (char *)a2 + v19;
            v22 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          }
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
        }
        v27 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      }
      else
      {
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_27;
    }
LABEL_8:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475950);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_27;
  }
  if (v8)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v31 = a2[1];
          *a1 = *a2;
          a1[1] = v31;
          a1[2] = a2[2];
          v32 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v33 = (char *)a1 + v32;
          v34 = (char *)a2 + v32;
          v35 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v12);
      }
      v36 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    }
    else
    {
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  v40 = *(int *)(a3 + 20);
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Image()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248F014A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475950);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Image()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248F014B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475950);
}

void sub_248F014C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475958, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.Image.Static(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        v12 = a2 + 2;
        v13 = a2[3];
        swift_bridgeObjectRetain();
        if (v13 >> 60 == 15)
        {
          *((_OWORD *)a1 + 1) = *v12;
        }
        else
        {
          v17 = *(_QWORD *)v12;
          sub_248D9F5CC(v17, v13);
          a1[2] = v17;
          a1[3] = v13;
        }
        v18 = a2 + 4;
        v19 = a2[5];
        if (v19 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v18;
        }
        else
        {
          v20 = *v18;
          sub_248D9F5CC(*v18, a2[5]);
          a1[4] = v20;
          a1[5] = v19;
        }
        v21 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      }
      else
      {
        v15 = *a2;
        v16 = a2[1];
        sub_248D9F5CC(*a2, v16);
        *a1 = v15;
        a1[1] = v16;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v25 = *(int *)(a3 + 20);
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.Image.Static(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;

  v4 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        break;
      case 1:
        swift_bridgeObjectRelease();
        v9 = a1[3];
        if (v9 >> 60 != 15)
          sub_248D9E628(a1[2], v9);
        v10 = a1[5];
        if (v10 >> 60 != 15)
          sub_248D9E628(a1[4], v10);
        v11 = (char *)a1
            + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
        v12 = sub_2490E7ABC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        break;
      case 0:
        sub_248D9E628(*a1, a1[1]);
        break;
    }
  }
  v5 = (char *)a1 + *(int *)(a2 + 20);
  v6 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

_QWORD *initializeWithCopy for ToolKitProtoDisplayRepresentation.Image.Static(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2 + 2;
      v11 = a2[3];
      swift_bridgeObjectRetain();
      if (v11 >> 60 == 15)
      {
        *((_OWORD *)a1 + 1) = *v10;
      }
      else
      {
        v15 = *(_QWORD *)v10;
        sub_248D9F5CC(v15, v11);
        a1[2] = v15;
        a1[3] = v11;
      }
      v16 = a2 + 4;
      v17 = a2[5];
      if (v17 >> 60 == 15)
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v16;
      }
      else
      {
        v18 = *v16;
        sub_248D9F5CC(*v16, a2[5]);
        a1[4] = v18;
        a1[5] = v17;
      }
      v19 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      v13 = *a2;
      v14 = a2[1];
      sub_248D9F5CC(*a2, v14);
      *a1 = v13;
      a1[1] = v14;
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v23 = *(int *)(a3 + 20);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoDisplayRepresentation.Image.Static(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  _OWORD *v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  _OWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        v10 = a2 + 2;
        v11 = a2[3];
        swift_bridgeObjectRetain();
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 16) = *v10;
        }
        else
        {
          v18 = *(_QWORD *)v10;
          sub_248D9F5CC(v18, v11);
          *(_QWORD *)(a1 + 16) = v18;
          *(_QWORD *)(a1 + 24) = v11;
        }
        v19 = a2 + 4;
        v20 = a2[5];
        if (v20 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 32) = *(_OWORD *)v19;
        }
        else
        {
          v21 = *v19;
          sub_248D9F5CC(*v19, a2[5]);
          *(_QWORD *)(a1 + 32) = v21;
          *(_QWORD *)(a1 + 40) = v20;
        }
        v22 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
        v23 = a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_2490E7ABC();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      }
      else
      {
        v16 = *a2;
        v17 = a2[1];
        sub_248D9F5CC(*a2, v17);
        *(_QWORD *)a1 = v16;
        *(_QWORD *)(a1 + 8) = v17;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
      goto LABEL_31;
    }
LABEL_9:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
    memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_31;
  }
  if (v8)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
    goto LABEL_9;
  }
  if ((_QWORD *)a1 != a2)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
    v13 = swift_getEnumCaseMultiPayload();
    if (v13 == 2)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      swift_bridgeObjectRetain();
    }
    else if (v13 == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      v14 = a2 + 2;
      v15 = a2[3];
      swift_bridgeObjectRetain();
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 16) = *v14;
      }
      else
      {
        v28 = *(_QWORD *)v14;
        sub_248D9F5CC(v28, v15);
        *(_QWORD *)(a1 + 16) = v28;
        *(_QWORD *)(a1 + 24) = v15;
      }
      v29 = a2 + 4;
      v30 = a2[5];
      if (v30 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)v29;
      }
      else
      {
        v31 = *v29;
        sub_248D9F5CC(*v29, a2[5]);
        *(_QWORD *)(a1 + 32) = v31;
        *(_QWORD *)(a1 + 40) = v30;
      }
      v32 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
      v33 = a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_2490E7ABC();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      v26 = *a2;
      v27 = a2[1];
      sub_248D9F5CC(*a2, v27);
      *(_QWORD *)a1 = v26;
      *(_QWORD *)(a1 + 8) = v27;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_31:
  v36 = *(int *)(a3 + 20);
  v37 = a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_2490E7ABC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoDisplayRepresentation.Image.Static(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      a1[2] = a2[2];
      v9 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoDisplayRepresentation.Image.Static(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        a1[2] = a2[2];
        v16 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v14 = *(_QWORD *)(v6 - 8);
      goto LABEL_8;
    }
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
LABEL_7:
    v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475970) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    goto LABEL_14;
  }
  if (v8)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_14:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Image.Static()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248F02030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_254475970);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_472_0(a1, a2, a3, a4);
  OUTLINED_FUNCTION_24_6();
  if (v7)
  {
    v9 = OUTLINED_FUNCTION_474_0();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_63();
    v9 = v5 + *(int *)(v6 + 20);
  }
  return OUTLINED_FUNCTION_265(v9, v4, v8);
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Image.Static()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248F02088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_254475970);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_437_0(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_32_0();
  if (v5)
    OUTLINED_FUNCTION_502_0();
  else
    OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_82_1();
  return OUTLINED_FUNCTION_264(v6, v7, v8, v9);
}

void sub_248F020D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F020E8(a1, a2, a3, &qword_254475978, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
}

void sub_248F020E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_299_0(a1, a4, a5);
  if (v5 <= 0x3F)
  {
    OUTLINED_FUNCTION_265_1();
    if (v6 <= 0x3F)
    {
      OUTLINED_FUNCTION_321();
      OUTLINED_FUNCTION_258_1();
    }
  }
  OUTLINED_FUNCTION_390_0();
}

uint64_t initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2 + 2;
    v9 = a2[3];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v8;
    }
    else
    {
      v11 = *(_QWORD *)v8;
      sub_248D9F5CC(v11, v9);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v9;
    }
    v12 = a2 + 4;
    v13 = a2[5];
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    }
    else
    {
      v14 = *v12;
      sub_248D9F5CC(*v12, a2[5]);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v13;
    }
    v15 = *(int *)(a3 + 28);
    v16 = a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2490E7ABC();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1[3];
  if (v4 >> 60 != 15)
    sub_248D9E628(a1[2], v4);
  v5 = a1[5];
  if (v5 >> 60 != 15)
    sub_248D9E628(a1[4], v5);
  v6 = (char *)a1 + *(int *)(a2 + 28);
  v7 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_248D9F5CC(v9, v8);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v8;
  }
  v10 = a2 + 4;
  v11 = a2[5];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v10;
  }
  else
  {
    v12 = *v10;
    sub_248D9F5CC(*v10, a2[5]);
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v11;
  }
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2 + 2;
  v7 = a2[3];
  if (a1[3] >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_248D9F5CC(*v6, a2[3]);
      a1[2] = v8;
      a1[3] = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_248DB7A14((uint64_t)(a1 + 2));
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v9 = *v6;
  sub_248D9F5CC(*v6, a2[3]);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v9;
  a1[3] = v7;
  sub_248D9E628(v10, v11);
LABEL_8:
  v12 = a2 + 4;
  v13 = a2[5];
  if (a1[5] >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      v15 = *v12;
      sub_248D9F5CC(*v12, a2[5]);
      v16 = a1[4];
      v17 = a1[5];
      a1[4] = v15;
      a1[5] = v13;
      sub_248D9E628(v16, v17);
      goto LABEL_15;
    }
    sub_248DB7A14((uint64_t)(a1 + 4));
    goto LABEL_13;
  }
  if (v13 >> 60 == 15)
  {
LABEL_13:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v12;
    goto LABEL_15;
  }
  v14 = *v12;
  sub_248D9F5CC(*v12, a2[5]);
  a1[4] = v14;
  a1[5] = v13;
LABEL_15:
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

void _s7ToolKit33ToolKitProtoDisplayRepresentationV5ImageV6StaticV6SymbolVwtk_0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  uint64_t v3;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  v3 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_17_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_93();
}

_QWORD *assignWithTake for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2 + 2;
  v8 = a1[3];
  if (v8 >> 60 == 15)
    goto LABEL_4;
  v9 = a2[3];
  if (v9 >> 60 == 15)
  {
    sub_248DB7A14((uint64_t)(a1 + 2));
LABEL_4:
    *((_OWORD *)a1 + 1) = *v7;
    goto LABEL_6;
  }
  v10 = a1[2];
  a1[2] = *(_QWORD *)v7;
  a1[3] = v9;
  sub_248D9E628(v10, v8);
LABEL_6:
  v11 = a2 + 4;
  v12 = a1[5];
  if (v12 >> 60 != 15)
  {
    v13 = a2[5];
    if (v13 >> 60 != 15)
    {
      v14 = a1[4];
      a1[4] = *v11;
      a1[5] = v13;
      sub_248D9E628(v14, v12);
      goto LABEL_11;
    }
    sub_248DB7A14((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
LABEL_11:
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Image.Static.Symbol()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_39Tm()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_80_2();
  if (v2)
  {
    OUTLINED_FUNCTION_45_6(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v3 = v1;
    OUTLINED_FUNCTION_63();
    v4 = OUTLINED_FUNCTION_94_1(*(int *)(v3 + 28));
    OUTLINED_FUNCTION_265(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoDisplayRepresentation.Image.Static.Symbol()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_40Tm()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_43_5();
  if (v1)
  {
    OUTLINED_FUNCTION_230_1();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    v2 = v0;
    OUTLINED_FUNCTION_63();
    v3 = OUTLINED_FUNCTION_44_5(*(int *)(v2 + 28));
    OUTLINED_FUNCTION_264(v3, v4, v5, v6);
  }
}

void sub_248F02724()
{
  sub_248F0273C();
}

void sub_248F0273C()
{
  unint64_t v0;

  OUTLINED_FUNCTION_265_1();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_151_0();
    OUTLINED_FUNCTION_258_1();
  }
  OUTLINED_FUNCTION_293();
}

unint64_t initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(unint64_t a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v11;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2 + 2;
      v9 = a2[3];
      swift_bridgeObjectRetain();
      if (v9 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 16) = *v8;
      }
      else
      {
        v14 = *(_QWORD *)v8;
        sub_248D9F5CC(v14, v9);
        *(_QWORD *)(a1 + 16) = v14;
        *(_QWORD *)(a1 + 24) = v9;
      }
      v15 = a2 + 4;
      v16 = a2[5];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)v15;
      }
      else
      {
        v17 = *v15;
        sub_248D9F5CC(*v15, a2[5]);
        *(_QWORD *)(a1 + 32) = v17;
        *(_QWORD *)(a1 + 40) = v16;
      }
      v18 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
      v19 = a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2490E7ABC();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      v13 = *a2;
      v12 = a2[1];
      sub_248D9F5CC(v13, v12);
      *(_QWORD *)a1 = v13;
      *(_QWORD *)(a1 + 8) = v12;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return swift_bridgeObjectRelease();
    case 1:
      swift_bridgeObjectRelease();
      v3 = a1[3];
      if (v3 >> 60 != 15)
        sub_248D9E628(a1[2], v3);
      v4 = a1[5];
      if (v4 >> 60 != 15)
        sub_248D9E628(a1[4], v4);
      v5 = (char *)a1
         + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
      v6 = sub_2490E7ABC();
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    case 0:
      return sub_248D9E628(*a1, a1[1]);
  }
  return result;
}

uint64_t initializeWithCopy for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(uint64_t a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v8;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2 + 2;
    v7 = a2[3];
    swift_bridgeObjectRetain();
    if (v7 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      v11 = *(_QWORD *)v6;
      sub_248D9F5CC(v11, v7);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v7;
    }
    v12 = a2 + 4;
    v13 = a2[5];
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    }
    else
    {
      v14 = *v12;
      sub_248D9F5CC(*v12, a2[5]);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v13;
    }
    v15 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
    v16 = a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2490E7ABC();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    v10 = *a2;
    v9 = a2[1];
    sub_248D9F5CC(v10, v9);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v9;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(uint64_t a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  if ((_QWORD *)a1 != a2)
  {
    sub_248E25C30(a1, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      v5 = a2 + 2;
      v6 = a2[3];
      swift_bridgeObjectRetain();
      if (v6 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 16) = *v5;
      }
      else
      {
        v9 = *(_QWORD *)v5;
        sub_248D9F5CC(v9, v6);
        *(_QWORD *)(a1 + 16) = v9;
        *(_QWORD *)(a1 + 24) = v6;
      }
      v10 = a2 + 4;
      v11 = a2[5];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)v10;
      }
      else
      {
        v12 = *v10;
        sub_248D9F5CC(*v10, a2[5]);
        *(_QWORD *)(a1 + 32) = v12;
        *(_QWORD *)(a1 + 40) = v11;
      }
      v13 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
      v14 = a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2490E7ABC();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      v8 = *a2;
      v7 = a2[1];
      sub_248D9F5CC(v8, v7);
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      v7 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_248F02DDC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v19 = a2[1];
          *a1 = *a2;
          a1[1] = v19;
          swift_bridgeObjectRetain();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v16 = a2[1];
          *a1 = *a2;
          a1[1] = v16;
          v17 = a2 + 2;
          v18 = a2[3];
          swift_bridgeObjectRetain();
          if (v18 >> 60 == 15)
          {
            *((_OWORD *)a1 + 1) = *v17;
          }
          else
          {
            v22 = *(_QWORD *)v17;
            sub_248D9F5CC(v22, v18);
            a1[2] = v22;
            a1[3] = v18;
          }
          v23 = a2 + 4;
          v24 = a2[5];
          if (v24 >> 60 == 15)
          {
            *((_OWORD *)a1 + 2) = *(_OWORD *)v23;
          }
          else
          {
            v25 = *v23;
            sub_248D9F5CC(*v23, a2[5]);
            a1[4] = v25;
            a1[5] = v24;
          }
          v26 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        }
        else
        {
          v20 = *a2;
          v21 = a2[1];
          sub_248D9F5CC(*a2, v21);
          *a1 = v20;
          a1[1] = v21;
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      v30 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      v9 = *a2;
      v10 = a2[1];
      sub_248D9F5CC(*a2, v10);
      *a1 = v9;
      a1[1] = v10;
      v11 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v2))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          swift_bridgeObjectRelease();
          break;
        case 1:
          swift_bridgeObjectRelease();
          v8 = a1[3];
          if (v8 >> 60 != 15)
            sub_248D9E628(a1[2], v8);
          v9 = a1[5];
          if (v9 >> 60 != 15)
            sub_248D9E628(a1[4], v9);
          v10 = (char *)a1
              + *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v11 = sub_2490E7ABC();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          break;
        case 0:
          sub_248D9E628(*a1, a1[1]);
          break;
      }
    }
    v3 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
  }
  else
  {
    sub_248D9E628(*a1, a1[1]);
    v3 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
  }
  v4 = (char *)a1 + *(int *)(v3 + 20);
  v5 = sub_2490E7ABC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  _OWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        v14 = a2 + 2;
        v15 = a2[3];
        swift_bridgeObjectRetain();
        if (v15 >> 60 == 15)
        {
          *((_OWORD *)a1 + 1) = *v14;
        }
        else
        {
          v19 = *(_QWORD *)v14;
          sub_248D9F5CC(v19, v15);
          a1[2] = v19;
          a1[3] = v15;
        }
        v20 = a2 + 4;
        v21 = a2[5];
        if (v21 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v20;
        }
        else
        {
          v22 = *v20;
          sub_248D9F5CC(*v20, a2[5]);
          a1[4] = v22;
          a1[5] = v21;
        }
        v23 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      }
      else
      {
        v17 = *a2;
        v18 = a2[1];
        sub_248D9F5CC(*a2, v18);
        *a1 = v17;
        a1[1] = v18;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
    }
    v27 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    v6 = *a2;
    v7 = a2[1];
    sub_248D9F5CC(*a2, v7);
    *a1 = v6;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  _OWORD *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
      {
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          v13 = a2 + 2;
          v14 = a2[3];
          swift_bridgeObjectRetain();
          if (v14 >> 60 == 15)
          {
            *((_OWORD *)a1 + 1) = *v13;
          }
          else
          {
            v17 = *(_QWORD *)v13;
            sub_248D9F5CC(v17, v14);
            a1[2] = v17;
            a1[3] = v14;
          }
          v18 = a2 + 4;
          v19 = a2[5];
          if (v19 >> 60 == 15)
          {
            *((_OWORD *)a1 + 2) = *(_OWORD *)v18;
          }
          else
          {
            v20 = *v18;
            sub_248D9F5CC(*v18, a2[5]);
            a1[4] = v20;
            a1[5] = v19;
          }
          v21 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v22 = (char *)a1 + v21;
          v23 = (char *)a2 + v21;
          v24 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        }
        else
        {
          v15 = *a2;
          v16 = a2[1];
          sub_248D9F5CC(*a2, v16);
          *a1 = v15;
          a1[1] = v16;
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      }
      v25 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      v6 = *a2;
      v7 = a2[1];
      sub_248D9F5CC(*a2, v7);
      *a1 = v6;
      a1[1] = v7;
      v8 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        a1[2] = a2[2];
        v11 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
    }
    v15 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_248E25C30((uint64_t)a1, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
      {
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475970);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          a1[2] = a2[2];
          v11 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0) + 28);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      }
      v15 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_248F03A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248EE7204(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoCoercionDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = *v9;
      if ((~*v9 & 0xF000000000000007) != 0)
        swift_retain();
      *v8 = v13;
      v14 = *(int *)(v10 + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for ToolKitProtoCoercionDefinition(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_BYTE *initializeWithCopy for ToolKitProtoCoercionDefinition(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = *v8;
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_retain();
    *v7 = v11;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_BYTE *assignWithCopy for ToolKitProtoCoercionDefinition(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_8;
    }
    v23 = *v8;
    v24 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v24 != 0xF000000000000007)
      {
        *v7 = v23;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_248E42024((uint64_t)v7);
      v23 = *v8;
    }
    else if (v24 != 0xF000000000000007)
    {
      *v7 = v23;
      swift_retain();
LABEL_17:
      v25 = *(int *)(v9 + 20);
      v26 = (char *)v7 + v25;
      v27 = (char *)v8 + v25;
      v28 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
      goto LABEL_9;
    }
    *v7 = v23;
    goto LABEL_17;
  }
  if (v11)
  {
LABEL_8:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  v12 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v12;
  v13 = *(int *)(v9 + 20);
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_9:
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_BYTE *initializeWithTake for ToolKitProtoCoercionDefinition(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_BYTE *assignWithTake for ToolKitProtoCoercionDefinition(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      *v7 = *v8;
      v12 = *(int *)(v9 + 20);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  if (v11)
  {
    sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    goto LABEL_6;
  }
  v22 = *v8;
  if ((~*v7 & 0xF000000000000007) != 0)
  {
    if ((~v22 & 0xF000000000000007) != 0)
    {
      *v7 = v22;
      swift_release();
    }
    else
    {
      sub_248E42024((uint64_t)v7);
      *v7 = *v8;
    }
  }
  else
  {
    *v7 = v22;
  }
  v23 = *(int *)(v9 + 20);
  v24 = (char *)v7 + v23;
  v25 = (char *)v8 + v23;
  v26 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_2490E7ABC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoCoercionDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248F041FC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_617();
  if (v0)
  {
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    OUTLINED_FUNCTION_24_6();
    if (v0)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_217_0();
    }
    v2 = OUTLINED_FUNCTION_94_1(v1);
    OUTLINED_FUNCTION_265(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoCoercionDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248F0426C()
{
  char v0;
  _BYTE *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_453_0();
  if (v2)
  {
    *v1 = v0 + 1;
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    OUTLINED_FUNCTION_32_0();
    if (v2)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_225_0();
    }
    v4 = OUTLINED_FUNCTION_44_5(v3);
    OUTLINED_FUNCTION_264(v4, v5, v6, v7);
  }
}

void sub_248F042C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F0ABC8(a1, a2, a3, (uint64_t)&unk_2490F6570, &qword_254475220, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t _s7ToolKit30ToolKitProtoRuntimeRequirementV11DeviceStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_248F04330 + 4 * byte_2490F3A67[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_177_0_6 + 4 * byte_2490F3A62[v4]))();
}

uint64_t sub_248F04368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F04370);
  return result;
}

_BYTE *sub_248F04378(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F04380);
  return OUTLINED_FUNCTION_176_0((_BYTE *)a1, a2 + 1);
}

void type metadata accessor for ToolKitProtoCoercionDefinition.CoercionDirection()
{
  OUTLINED_FUNCTION_164();
}

uint64_t _s7ToolKit26ToolKitProtoTypeDefinitionVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_246();
  return OUTLINED_FUNCTION_23_2(v0, v1, v2, v3);
}

uint64_t _s7ToolKit26ToolKitProtoTypeDefinitionVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_63();
  v0 = OUTLINED_FUNCTION_65_3();
  return OUTLINED_FUNCTION_77_2(v0, v1, v2);
}

void _s7ToolKit26ToolKitProtoTypeDefinitionVwcp_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_400_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  OUTLINED_FUNCTION_1();
}

void _s7ToolKit26ToolKitProtoTypeDefinitionVwca_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_400_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  OUTLINED_FUNCTION_1();
}

void _s7ToolKit26ToolKitProtoTypeDefinitionVwtk_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_400_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  OUTLINED_FUNCTION_1();
}

void _s7ToolKit26ToolKitProtoTypeDefinitionVwta_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_400_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  OUTLINED_FUNCTION_1();
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinitionClosure()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinitionClosure()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ToolKitProtoToolDefinitionClosure(uint64_t a1)
{
  return sub_248DB43B0(a1, qword_2577E7028);
}

void sub_248F044E8()
{
  unint64_t v0;

  OUTLINED_FUNCTION_265_1();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_425_0();
    swift_initStructMetadata();
    OUTLINED_FUNCTION_258_1();
  }
  OUTLINED_FUNCTION_390_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitProtoToolDefinitionClosure.Version1(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int EnumCaseMultiPayload;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t, uint64_t);
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t *v185;
  uint64_t v186;
  void *v187;
  _QWORD *v188;
  char *v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  _QWORD *__dst;
  void *__dsta;
  _QWORD *__dstb;
  int *v196;
  void *v197;
  _QWORD *v198;
  _QWORD *v199;
  _QWORD *v200;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a3;
    v6 = a2;
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254476028);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v190 = v5;
      v191 = v6;
      v192 = v7;
      v13 = v10[1];
      *v9 = *v10;
      v9[1] = v13;
      v14 = (int *)v11;
      v15 = v10[3];
      v9[2] = v10[2];
      v9[3] = v15;
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
      v16 = v10[6];
      v9[5] = v10[5];
      v9[6] = v16;
      v17 = v10[8];
      v9[7] = v10[7];
      v9[8] = v17;
      v9[9] = v10[9];
      *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
      v18 = v9;
      v19 = v10;
      v20 = v10[11];
      v21 = v10[12];
      v18[11] = v20;
      v18[12] = v21;
      v186 = v19[14];
      v18[13] = v19[13];
      v18[14] = v186;
      v187 = (void *)v19[16];
      v18[15] = v19[15];
      v18[16] = v187;
      v196 = v14;
      v199 = v18;
      v22 = v14[19];
      __dst = (_QWORD *)((char *)v18 + v22);
      v200 = v19;
      v185 = (_QWORD *)((char *)v19 + v22);
      v23 = type metadata accessor for ToolKitProtoTypeInstance(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v185, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
        memcpy(__dst, v185, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v26 = *v185;
        if ((~*v185 & 0xF000000000000007) != 0)
          swift_retain();
        *__dst = v26;
        v27 = *(int *)(v23 + 20);
        v28 = (char *)__dst + v27;
        v29 = (char *)v185 + v27;
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v24);
      }
      v31 = v196;
      v32 = (uint64_t)v199;
      v33 = v200;
      v34 = v196[20];
      v35 = (_QWORD *)((char *)v199 + v34);
      v36 = (_QWORD *)((char *)v200 + v34);
      v37 = v36[1];
      *v35 = *v36;
      v35[1] = v37;
      v38 = v196[21];
      v39 = (_QWORD *)((char *)v199 + v38);
      v40 = (_QWORD *)((char *)v200 + v38);
      v41 = type metadata accessor for ToolKitProtoAppDefinition(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v43 = v40[1];
        *v39 = *v40;
        v39[1] = v43;
        v44 = v40[3];
        v39[2] = v40[2];
        v39[3] = v44;
        v45 = v40[5];
        v39[4] = v40[4];
        v39[5] = v45;
        v46 = v40[7];
        v39[6] = v40[6];
        v39[7] = v46;
        v47 = v40[9];
        v39[8] = v40[8];
        v39[9] = v47;
        *((_BYTE *)v39 + 80) = *((_BYTE *)v40 + 80);
        __dsta = (void *)v41;
        v48 = *(int *)(v41 + 40);
        v188 = (_QWORD *)((char *)v39 + v48);
        v49 = (_QWORD *)((char *)v40 + v48);
        v50 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        swift_bridgeObjectRetain();
        v51 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
          memcpy(v188, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          v53 = (uint64_t)__dsta;
          v31 = v196;
        }
        else
        {
          v54 = v49[1];
          if (v54 == 1)
          {
            *(_OWORD *)v188 = *(_OWORD *)v49;
          }
          else
          {
            *v188 = *v49;
            v188[1] = v54;
            swift_bridgeObjectRetain();
          }
          v53 = (uint64_t)__dsta;
          v31 = v196;
          v55 = *(int *)(v50 + 20);
          v56 = (char *)v188 + v55;
          v57 = (char *)v51 + v55;
          v58 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, v50);
        }
        v59 = *(int *)(v53 + 44);
        v60 = (char *)v39 + v59;
        v61 = (char *)v40 + v59;
        v62 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v53);
        v33 = v200;
      }
      v63 = v31[22];
      v64 = (_QWORD *)((char *)v199 + v63);
      v65 = (_QWORD *)((char *)v33 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      v67 = v31[23];
      v68 = (_QWORD *)((char *)v199 + v67);
      v69 = (_QWORD *)((char *)v33 + v67);
      v70 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        v72 = v69[1];
        *v68 = *v69;
        v68[1] = v72;
        v73 = v69[3];
        v68[2] = v69[2];
        v68[3] = v73;
        v74 = *(int *)(v70 + 24);
        v75 = (char *)v68 + v74;
        v76 = (char *)v69 + v74;
        v77 = sub_2490E7ABC();
        v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v79 = v76;
        v80 = v77;
        v31 = v196;
        v32 = (uint64_t)v199;
        v78(v75, v79, v80);
        __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
      }
      v81 = v31[24];
      v82 = (_QWORD *)(v32 + v81);
      v83 = (_QWORD *)((char *)v33 + v81);
      v84 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
      {
        v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        v86 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v86))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            v98 = v83[1];
            *v82 = *v83;
            v82[1] = v98;
            v99 = v83[3];
            v82[2] = v83[2];
            v82[3] = v99;
            v100 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                          + 24);
            v101 = (char *)v82 + v100;
            v102 = (char *)v83 + v100;
            v103 = sub_2490E7ABC();
            v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v105 = v103;
            v31 = v196;
            v104(v101, v102, v105);
            v32 = (uint64_t)v199;
          }
          else if (EnumCaseMultiPayload == 1)
          {
            v89 = v83[1];
            *v82 = *v83;
            v82[1] = v89;
            *((_BYTE *)v82 + 16) = *((_BYTE *)v83 + 16);
            v90 = v83[4];
            v82[3] = v83[3];
            v82[4] = v90;
            v91 = v83[6];
            v82[5] = v83[5];
            v82[6] = v91;
            v92 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                         + 32);
            v189 = (char *)v82 + v92;
            v93 = (char *)v83 + v92;
            v94 = sub_2490E7ABC();
            v95 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v96 = v93;
            v97 = v94;
            v31 = v196;
            v32 = (uint64_t)v199;
            v95(v189, v96, v97);
          }
          else
          {
            v106 = v83[1];
            *v82 = *v83;
            v82[1] = v106;
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v86);
        }
        v107 = *(int *)(v84 + 20);
        v108 = (char *)v82 + v107;
        v109 = (char *)v83 + v107;
        v110 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
        __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v84);
        v33 = v200;
      }
      v111 = v31[25];
      v112 = (_QWORD *)(v32 + v111);
      v113 = (_QWORD *)((char *)v33 + v111);
      v114 = type metadata accessor for ToolKitProtoContainerDefinition(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v114))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        v116 = v113[1];
        *v112 = *v113;
        v112[1] = v116;
        v117 = v113[3];
        v112[2] = v113[2];
        v112[3] = v117;
        *((_WORD *)v112 + 16) = *((_WORD *)v113 + 16);
        v118 = v113[6];
        v112[5] = v113[5];
        v112[6] = v118;
        v119 = v113[8];
        v112[7] = v113[7];
        v112[8] = v119;
        v120 = *(int *)(v114 + 40);
        __dstb = (_QWORD *)((char *)v112 + v120);
        v197 = (void *)v114;
        v121 = (_QWORD *)((char *)v113 + v120);
        v122 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v123 = v122;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v122))
        {
          v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
          memcpy(__dstb, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          v114 = (uint64_t)v197;
        }
        else
        {
          v125 = v121[1];
          if (v125 == 1)
          {
            *(_OWORD *)__dstb = *(_OWORD *)v121;
          }
          else
          {
            *__dstb = *v121;
            __dstb[1] = v125;
            swift_bridgeObjectRetain();
          }
          v114 = (uint64_t)v197;
          v126 = *(int *)(v123 + 20);
          v127 = (char *)__dstb + v126;
          v128 = (char *)v121 + v126;
          v129 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v127, v128, v129);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v123);
        }
        v130 = *(int *)(v114 + 44);
        v131 = (char *)v112 + v130;
        v132 = (char *)v113 + v130;
        v133 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v131, v132, v133);
        __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v114);
        v33 = v200;
      }
      v134 = v31[26];
      v135 = (_QWORD *)(v32 + v134);
      v136 = (_QWORD *)((char *)v33 + v134);
      if (__swift_getEnumTagSinglePayload((uint64_t)v33 + v134, 1, v114))
      {
        v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
        memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
      }
      else
      {
        v138 = v136[1];
        *v135 = *v136;
        v135[1] = v138;
        v139 = v136[3];
        v135[2] = v136[2];
        v135[3] = v139;
        *((_WORD *)v135 + 16) = *((_WORD *)v136 + 16);
        v140 = v136[6];
        v135[5] = v136[5];
        v135[6] = v140;
        v141 = v136[8];
        v135[7] = v136[7];
        v135[8] = v141;
        v142 = *(int *)(v114 + 40);
        v198 = (_QWORD *)((char *)v135 + v142);
        v143 = (_QWORD *)((char *)v136 + v142);
        v144 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        swift_bridgeObjectRetain();
        v145 = v143;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v143, 1, v144))
        {
          v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
          memcpy(v198, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
          v32 = (uint64_t)v199;
        }
        else
        {
          v147 = v143[1];
          if (v147 == 1)
          {
            *(_OWORD *)v198 = *(_OWORD *)v143;
          }
          else
          {
            *v198 = *v143;
            v198[1] = v147;
            swift_bridgeObjectRetain();
          }
          v32 = (uint64_t)v199;
          v148 = *(int *)(v144 + 20);
          v149 = (char *)v198 + v148;
          v150 = (char *)v145 + v148;
          v151 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
          __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v144);
        }
        v152 = *(int *)(v114 + 44);
        v153 = (char *)v135 + v152;
        v154 = (char *)v136 + v152;
        v155 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v153, v154, v155);
        __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v114);
        v33 = v200;
      }
      v156 = v31[27];
      v157 = (_QWORD *)(v32 + v156);
      v158 = (_QWORD *)((char *)v33 + v156);
      v159 = v158[1];
      *v157 = *v158;
      v157[1] = v159;
      v160 = v31[28];
      v161 = (_QWORD *)(v32 + v160);
      v162 = (_QWORD *)((char *)v33 + v160);
      v163 = v162[1];
      *v161 = *v162;
      v161[1] = v163;
      v164 = v31[29];
      v165 = (_QWORD *)(v32 + v164);
      v166 = (_QWORD *)((char *)v33 + v164);
      v167 = v166[1];
      *v165 = *v166;
      v165[1] = v167;
      v168 = v31[30];
      v169 = (_QWORD *)(v32 + v168);
      v170 = (_QWORD *)((char *)v33 + v168);
      v171 = v170[1];
      *v169 = *v170;
      v169[1] = v171;
      v172 = v31[31];
      v173 = v33;
      v174 = (uint64_t)v31;
      v175 = v32 + v172;
      v176 = v32;
      v177 = (uint64_t)v173 + v172;
      v178 = sub_2490E7ABC();
      v179 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v179(v175, v177, v178);
      __swift_storeEnumTagSinglePayload(v176, 0, 1, v174);
      v6 = v191;
      v7 = v192;
      v5 = v190;
    }
    v180 = *(int *)(v5 + 24);
    v181 = (char *)v7 + v180;
    v182 = (char *)v6 + v180;
    v183 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
  }
  return v7;
}

uint64_t destroy for ToolKitProtoToolDefinitionClosure.Version1(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  if (__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
    goto LABEL_37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(v4 + v5[19]);
  v7 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    if ((~*v6 & 0xF000000000000007) != 0)
      swift_release();
    v8 = (char *)v6 + *(int *)(v7 + 20);
    v9 = sub_2490E7ABC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  v10 = v4 + v5[21];
  v11 = type metadata accessor for ToolKitProtoAppDefinition(0);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 40);
    v13 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
    {
      if (*(_QWORD *)(v12 + 8) != 1)
        swift_bridgeObjectRelease();
      v14 = v12 + *(int *)(v13 + 20);
      v15 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
    v16 = v10 + *(int *)(v11 + 44);
    v17 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  swift_bridgeObjectRelease();
  v18 = v4 + v5[23];
  v19 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  if (!__swift_getEnumTagSinglePayload(v18, 1, v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v18 + *(int *)(v19 + 24);
    v21 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  v22 = v4 + v5[24];
  v23 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
  {
    v24 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    if (!__swift_getEnumTagSinglePayload(v22, 1, v24))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                     + 24);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (!EnumCaseMultiPayload)
            swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      }
      v27 = v22 + v26;
      v28 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    }
LABEL_23:
    v29 = v22 + *(int *)(v23 + 20);
    v30 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  }
  v31 = v4 + v5[25];
  v32 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  if (!__swift_getEnumTagSinglePayload(v31, 1, v32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v31 + *(int *)(v32 + 40);
    v34 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (!__swift_getEnumTagSinglePayload(v33, 1, v34))
    {
      if (*(_QWORD *)(v33 + 8) != 1)
        swift_bridgeObjectRelease();
      v35 = v33 + *(int *)(v34 + 20);
      v36 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
    }
    v37 = v31 + *(int *)(v32 + 44);
    v38 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  }
  v39 = v4 + v5[26];
  if (!__swift_getEnumTagSinglePayload(v39, 1, v32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v39 + *(int *)(v32 + 40);
    v41 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (!__swift_getEnumTagSinglePayload(v40, 1, v41))
    {
      if (*(_QWORD *)(v40 + 8) != 1)
        swift_bridgeObjectRelease();
      v42 = v40 + *(int *)(v41 + 20);
      v43 = sub_2490E7ABC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
    }
    v44 = v39 + *(int *)(v32 + 44);
    v45 = sub_2490E7ABC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46 = v4 + v5[31];
  v47 = sub_2490E7ABC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
LABEL_37:
  v48 = a1 + *(int *)(a2 + 24);
  v49 = sub_2490E7ABC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
}

_QWORD *initializeWithCopy for ToolKitProtoToolDefinitionClosure.Version1(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int EnumCaseMultiPayload;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  _QWORD *__dst;
  _QWORD *__dsta;
  _QWORD *v181;
  _QWORD *v182;
  int *v183;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254476028);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v176 = v3;
    v177 = v4;
    v178 = v5;
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    *((_BYTE *)v7 + 32) = *((_BYTE *)v8 + 32);
    v13 = v8[6];
    v7[5] = v8[5];
    v7[6] = v13;
    v14 = v8[8];
    v7[7] = v8[7];
    v7[8] = v14;
    v7[9] = v8[9];
    *((_BYTE *)v7 + 80) = *((_BYTE *)v8 + 80);
    v15 = v8[12];
    v7[11] = v8[11];
    v7[12] = v15;
    v173 = v8[14];
    v7[13] = v8[13];
    v7[14] = v173;
    v174 = v8[16];
    v7[15] = v8[15];
    v7[16] = v174;
    v182 = v8;
    v183 = v9;
    v16 = v9[19];
    v181 = v7;
    __dst = (_QWORD *)((char *)v7 + v16);
    v172 = (_QWORD *)((char *)v8 + v16);
    v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v172, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(__dst, v172, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = *v172;
      if ((~*v172 & 0xF000000000000007) != 0)
        swift_retain();
      *__dst = v19;
      v20 = *(int *)(v17 + 20);
      v21 = (char *)__dst + v20;
      v22 = (char *)v172 + v20;
      v23 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v17);
    }
    v25 = (uint64_t)v7;
    v24 = v182;
    v26 = v9[20];
    v27 = (_QWORD *)((char *)v7 + v26);
    v28 = (_QWORD *)((char *)v182 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = v9[21];
    v31 = (_QWORD *)((char *)v7 + v30);
    v32 = (_QWORD *)((char *)v182 + v30);
    v33 = type metadata accessor for ToolKitProtoAppDefinition(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = v32[1];
      *v31 = *v32;
      v31[1] = v35;
      v36 = v32[3];
      v31[2] = v32[2];
      v31[3] = v36;
      v37 = v32[5];
      v31[4] = v32[4];
      v31[5] = v37;
      v38 = v32[7];
      v31[6] = v32[6];
      v31[7] = v38;
      v39 = v32[9];
      v31[8] = v32[8];
      v31[9] = v39;
      *((_BYTE *)v31 + 80) = *((_BYTE *)v32 + 80);
      v40 = *(int *)(v33 + 40);
      __dsta = (_QWORD *)((char *)v31 + v40);
      v41 = (_QWORD *)((char *)v32 + v40);
      v42 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
        memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        v25 = (uint64_t)v181;
        v24 = v182;
        v9 = v183;
      }
      else
      {
        v44 = v41[1];
        if (v44 == 1)
        {
          *(_OWORD *)__dsta = *(_OWORD *)v41;
        }
        else
        {
          *__dsta = *v41;
          __dsta[1] = v44;
          swift_bridgeObjectRetain();
        }
        v25 = (uint64_t)v181;
        v24 = v182;
        v9 = v183;
        v45 = *(int *)(v42 + 20);
        v46 = (char *)__dsta + v45;
        v47 = (char *)v41 + v45;
        v48 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v42);
      }
      v49 = *(int *)(v33 + 44);
      v50 = (char *)v31 + v49;
      v51 = (char *)v32 + v49;
      v52 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    }
    v53 = v9[22];
    v54 = (_QWORD *)(v25 + v53);
    v55 = (_QWORD *)((char *)v24 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = v9[23];
    v58 = (_QWORD *)(v25 + v57);
    v59 = (_QWORD *)((char *)v24 + v57);
    v60 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v62 = v59[1];
      *v58 = *v59;
      v58[1] = v62;
      v63 = v59[3];
      v58[2] = v59[2];
      v58[3] = v63;
      v64 = *(int *)(v60 + 24);
      v65 = (char *)v58 + v64;
      v66 = (char *)v59 + v64;
      v67 = sub_2490E7ABC();
      v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
      swift_bridgeObjectRetain();
      v24 = v182;
      swift_bridgeObjectRetain();
      v69 = v66;
      v9 = v183;
      v68(v65, v69, v67);
      __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
    }
    v70 = v9[24];
    v71 = (_QWORD *)(v25 + v70);
    v72 = (_QWORD *)((char *)v24 + v70);
    v73 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      v75 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v75))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v86 = v72[1];
          *v71 = *v72;
          v71[1] = v86;
          v87 = v72[3];
          v71[2] = v72[2];
          v71[3] = v87;
          v88 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                       + 24);
          v89 = (char *)v71 + v88;
          v90 = (char *)v72 + v88;
          v91 = sub_2490E7ABC();
          v92 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v93 = v90;
          v24 = v182;
          v92(v89, v93, v91);
          v9 = v183;
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v78 = v72[1];
          *v71 = *v72;
          v71[1] = v78;
          *((_BYTE *)v71 + 16) = *((_BYTE *)v72 + 16);
          v79 = v72[4];
          v71[3] = v72[3];
          v71[4] = v79;
          v80 = v72[6];
          v71[5] = v72[5];
          v71[6] = v80;
          v81 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v175 = (char *)v71 + v81;
          v82 = (char *)v72 + v81;
          v83 = sub_2490E7ABC();
          v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v85 = v83;
          v9 = v183;
          v84(v175, v82, v85);
          v24 = v182;
        }
        else
        {
          v94 = v72[1];
          *v71 = *v72;
          v71[1] = v94;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v75);
      }
      v95 = *(int *)(v73 + 20);
      v96 = (char *)v71 + v95;
      v97 = (char *)v72 + v95;
      v98 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
      v25 = (uint64_t)v181;
    }
    v99 = v9[25];
    v100 = (_QWORD *)(v25 + v99);
    v101 = (_QWORD *)((char *)v24 + v99);
    v102 = type metadata accessor for ToolKitProtoContainerDefinition(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v102))
    {
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    }
    else
    {
      v104 = v101[1];
      *v100 = *v101;
      v100[1] = v104;
      v105 = v101[3];
      v100[2] = v101[2];
      v100[3] = v105;
      *((_WORD *)v100 + 16) = *((_WORD *)v101 + 16);
      v106 = v101[6];
      v100[5] = v101[5];
      v100[6] = v106;
      v107 = v101[8];
      v100[7] = v101[7];
      v100[8] = v107;
      v108 = *(int *)(v102 + 40);
      v109 = (_QWORD *)((char *)v100 + v108);
      v110 = (_QWORD *)((char *)v101 + v108);
      v111 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        v24 = v182;
        v9 = v183;
      }
      else
      {
        v113 = v110[1];
        if (v113 == 1)
        {
          *(_OWORD *)v109 = *(_OWORD *)v110;
        }
        else
        {
          *v109 = *v110;
          v109[1] = v113;
          swift_bridgeObjectRetain();
        }
        v24 = v182;
        v9 = v183;
        v114 = *(int *)(v111 + 20);
        v115 = (char *)v109 + v114;
        v116 = (char *)v110 + v114;
        v117 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16))(v115, v116, v117);
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v111);
      }
      v118 = *(int *)(v102 + 44);
      v119 = (char *)v100 + v118;
      v120 = (char *)v101 + v118;
      v121 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v119, v120, v121);
      __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v102);
      v25 = (uint64_t)v181;
    }
    v122 = v9[26];
    v123 = (_QWORD *)(v25 + v122);
    v124 = (_QWORD *)((char *)v24 + v122);
    if (__swift_getEnumTagSinglePayload((uint64_t)v24 + v122, 1, v102))
    {
      v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
      memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    }
    else
    {
      v126 = v124[1];
      *v123 = *v124;
      v123[1] = v126;
      v127 = v124[3];
      v123[2] = v124[2];
      v123[3] = v127;
      *((_WORD *)v123 + 16) = *((_WORD *)v124 + 16);
      v128 = v124[6];
      v123[5] = v124[5];
      v123[6] = v128;
      v129 = v124[8];
      v123[7] = v124[7];
      v123[8] = v129;
      v130 = *(int *)(v102 + 40);
      v131 = (_QWORD *)((char *)v123 + v130);
      v132 = (_QWORD *)((char *)v124 + v130);
      v133 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v133))
      {
        v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        v24 = v182;
        v9 = v183;
      }
      else
      {
        v135 = v132[1];
        if (v135 == 1)
        {
          *(_OWORD *)v131 = *(_OWORD *)v132;
        }
        else
        {
          *v131 = *v132;
          v131[1] = v135;
          swift_bridgeObjectRetain();
        }
        v24 = v182;
        v9 = v183;
        v136 = *(int *)(v133 + 20);
        v137 = (char *)v131 + v136;
        v138 = (char *)v132 + v136;
        v139 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v137, v138, v139);
        __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v133);
      }
      v140 = *(int *)(v102 + 44);
      v141 = (char *)v123 + v140;
      v142 = (char *)v124 + v140;
      v143 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
      __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v102);
      v25 = (uint64_t)v181;
    }
    v144 = v9[27];
    v145 = (_QWORD *)(v25 + v144);
    v146 = (_QWORD *)((char *)v24 + v144);
    v147 = v146[1];
    *v145 = *v146;
    v145[1] = v147;
    v148 = v9[28];
    v149 = (_QWORD *)(v25 + v148);
    v150 = (_QWORD *)((char *)v24 + v148);
    v151 = v150[1];
    *v149 = *v150;
    v149[1] = v151;
    v152 = v9[29];
    v153 = (_QWORD *)(v25 + v152);
    v154 = (_QWORD *)((char *)v24 + v152);
    v155 = v154[1];
    *v153 = *v154;
    v153[1] = v155;
    v156 = v9[30];
    v157 = (_QWORD *)(v25 + v156);
    v158 = (_QWORD *)((char *)v24 + v156);
    v159 = v24;
    v160 = v158[1];
    *v157 = *v158;
    v157[1] = v160;
    v161 = v9[31];
    v162 = v25 + v161;
    v163 = (uint64_t)v9;
    v164 = (uint64_t)v159 + v161;
    v165 = sub_2490E7ABC();
    v166 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v166(v162, v164, v165);
    __swift_storeEnumTagSinglePayload(v25, 0, 1, v163);
    v4 = v177;
    v5 = v178;
    v3 = v176;
  }
  v167 = *(int *)(v3 + 24);
  v168 = (char *)v5 + v167;
  v169 = (char *)v4 + v167;
  v170 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v168, v169, v170);
  return v5;
}

_QWORD *assignWithCopy for ToolKitProtoToolDefinitionClosure.Version1(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  _QWORD *v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  uint64_t v195;
  int v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(char *, char *, uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  _QWORD *v208;
  uint64_t v209;
  int v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  int v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  void (*v225)(void *, void *, uint64_t);
  void *v226;
  void *v227;
  uint64_t v228;
  int EnumCaseMultiPayload;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(void *, void *, uint64_t);
  void *v233;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  int v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(char *, char *, uint64_t);
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void (*v251)(char *, char *, uint64_t);
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  int v260;
  int v261;
  uint64_t v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  int v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _QWORD *v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  int v301;
  int v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  uint64_t v311;
  int v312;
  int v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  _QWORD *v339;
  _QWORD *v340;
  uint64_t v341;
  _QWORD *v342;
  _QWORD *v343;
  uint64_t v344;
  _QWORD *v345;
  _QWORD *v346;
  uint64_t v347;
  _QWORD *v348;
  _QWORD *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  char *v356;
  uint64_t v357;
  _QWORD *__dst;
  uint64_t *v360;
  char *v361;
  char *v362;
  char *v363;
  _QWORD *v364;
  char *v365;
  char *v366;
  char *v367;
  char *v368;
  char *v369;
  char *v370;
  char *v371;
  char *v372;
  _QWORD *v373;
  _QWORD *v374;
  char *v375;
  char *v376;
  char *v377;
  char *v378;
  _QWORD *v379;
  _QWORD *v380;
  _QWORD *v381;
  char *v382;
  char *v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  _QWORD *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  int *v401;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)v5 + v6;
  v8 = (uint64_t)v4 + v6;
  v9 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v9);
  v401 = (int *)v9;
  v11 = __swift_getEnumTagSinglePayload(v8, 1, v9);
  v399 = v8;
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30(v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      goto LABEL_7;
    }
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
    *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v7 + 32) = *(_BYTE *)(v8 + 32);
    *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 56) = *(_QWORD *)(v8 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 72) = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v7 + 80) = *(_BYTE *)(v8 + 80);
    *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 96) = *(_QWORD *)(v8 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 112) = *(_QWORD *)(v8 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 128) = *(_QWORD *)(v8 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = *(int *)(v9 + 76);
    v17 = (_QWORD *)(v7 + v16);
    v18 = (uint64_t *)(v8 + v16);
    v19 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
    v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
    if (v20)
    {
      if (!v21)
      {
        v22 = *v18;
        if ((~*v18 & 0xF000000000000007) != 0)
          swift_retain();
        *v17 = v22;
        v23 = *(int *)(v19 + 20);
        v24 = (char *)v17 + v23;
        v25 = (char *)v18 + v23;
        v26 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
LABEL_23:
        v45 = v399;
        v46 = v401[20];
        v47 = (_QWORD *)(v7 + v46);
        v48 = (_QWORD *)(v399 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v49 = v401[21];
        v50 = v7 + v49;
        v51 = v399 + v49;
        v52 = type metadata accessor for ToolKitProtoAppDefinition(0);
        v53 = __swift_getEnumTagSinglePayload(v50, 1, v52);
        v54 = __swift_getEnumTagSinglePayload(v51, 1, v52);
        v398 = v7;
        if (v53)
        {
          if (!v54)
          {
            v387 = a3;
            *(_QWORD *)v50 = *(_QWORD *)v51;
            *(_QWORD *)(v50 + 8) = *(_QWORD *)(v51 + 8);
            *(_QWORD *)(v50 + 16) = *(_QWORD *)(v51 + 16);
            *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
            *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
            *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
            *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
            *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
            *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
            *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
            *(_BYTE *)(v50 + 80) = *(_BYTE *)(v51 + 80);
            v55 = *(int *)(v52 + 40);
            v374 = (_QWORD *)(v50 + v55);
            v56 = (_QWORD *)(v51 + v55);
            v57 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
            {
              v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
              memcpy(v374, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
              v45 = v399;
              a3 = v387;
            }
            else
            {
              v366 = (char *)v56;
              if (v56[1] == 1)
              {
                *(_OWORD *)v374 = *(_OWORD *)v56;
              }
              else
              {
                *v374 = *v56;
                v374[1] = v56[1];
                swift_bridgeObjectRetain();
              }
              v45 = v399;
              a3 = v387;
              v163 = *(int *)(v57 + 20);
              v382 = (char *)v374 + v163;
              v388 = v57;
              v164 = &v366[v163];
              v165 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v382, v164, v165);
              __swift_storeEnumTagSinglePayload((uint64_t)v374, 0, 1, v388);
            }
            v166 = *(int *)(v52 + 44);
            v167 = v50 + v166;
            v168 = v51 + v166;
            v169 = sub_2490E7ABC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v167, v168, v169);
            __swift_storeEnumTagSinglePayload(v50, 0, 1, v52);
LABEL_99:
            v189 = v401[22];
            v190 = (_QWORD *)(v7 + v189);
            v191 = (_QWORD *)(v45 + v189);
            *v190 = *v191;
            v190[1] = v191[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v192 = v401[23];
            v193 = (_QWORD *)(v7 + v192);
            v194 = (_QWORD *)(v45 + v192);
            v195 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v196 = __swift_getEnumTagSinglePayload((uint64_t)v193, 1, v195);
            v197 = __swift_getEnumTagSinglePayload((uint64_t)v194, 1, v195);
            if (v196)
            {
              if (!v197)
              {
                *v193 = *v194;
                v193[1] = v194[1];
                v193[2] = v194[2];
                v193[3] = v194[3];
                v198 = *(int *)(v195 + 24);
                v383 = (char *)v194 + v198;
                v389 = (char *)v193 + v198;
                v199 = v7;
                v200 = sub_2490E7ABC();
                v201 = a3;
                v202 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v203 = v200;
                v7 = v199;
                v202(v389, v383, v203);
                a3 = v201;
                __swift_storeEnumTagSinglePayload((uint64_t)v193, 0, 1, v195);
                goto LABEL_105;
              }
            }
            else
            {
              if (!v197)
              {
                *v193 = *v194;
                v193[1] = v194[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v193[2] = v194[2];
                v193[3] = v194[3];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v215 = *(int *)(v195 + 24);
                v216 = (char *)v193 + v215;
                v217 = (char *)v194 + v215;
                v218 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 24))(v216, v217, v218);
LABEL_105:
                v205 = v399;
                v206 = v401[24];
                v207 = (_QWORD *)(v7 + v206);
                v208 = (_QWORD *)(v399 + v206);
                v209 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
                v210 = __swift_getEnumTagSinglePayload((uint64_t)v207, 1, v209);
                v211 = __swift_getEnumTagSinglePayload((uint64_t)v208, 1, v209);
                if (v210)
                {
                  if (!v211)
                  {
                    v212 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v212))
                    {
                      v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
                      memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
LABEL_128:
                      v239 = *(int *)(v209 + 20);
                      v240 = (char *)v207 + v239;
                      v241 = (char *)v208 + v239;
                      v242 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(v240, v241, v242);
                      __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v209);
LABEL_141:
                      v7 = v398;
LABEL_142:
                      v256 = v401[25];
                      v257 = v7 + v256;
                      v258 = v205 + v256;
                      v259 = type metadata accessor for ToolKitProtoContainerDefinition(0);
                      v260 = __swift_getEnumTagSinglePayload(v257, 1, v259);
                      v261 = __swift_getEnumTagSinglePayload(v258, 1, v259);
                      if (v260)
                      {
                        if (!v261)
                        {
                          v393 = a3;
                          *(_QWORD *)v257 = *(_QWORD *)v258;
                          *(_QWORD *)(v257 + 8) = *(_QWORD *)(v258 + 8);
                          *(_QWORD *)(v257 + 16) = *(_QWORD *)(v258 + 16);
                          *(_QWORD *)(v257 + 24) = *(_QWORD *)(v258 + 24);
                          *(_BYTE *)(v257 + 32) = *(_BYTE *)(v258 + 32);
                          *(_BYTE *)(v257 + 33) = *(_BYTE *)(v258 + 33);
                          *(_QWORD *)(v257 + 40) = *(_QWORD *)(v258 + 40);
                          *(_QWORD *)(v257 + 48) = *(_QWORD *)(v258 + 48);
                          *(_QWORD *)(v257 + 56) = *(_QWORD *)(v258 + 56);
                          *(_QWORD *)(v257 + 64) = *(_QWORD *)(v258 + 64);
                          v262 = *(int *)(v259 + 40);
                          v379 = (_QWORD *)(v257 + v262);
                          v263 = (_QWORD *)(v258 + v262);
                          v264 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          v265 = v264;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          if (__swift_getEnumTagSinglePayload((uint64_t)v263, 1, v264))
                          {
                            v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
                            memcpy(v379, v263, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
                            v205 = v399;
                            a3 = v393;
                          }
                          else
                          {
                            if (v263[1] == 1)
                            {
                              v274 = v263;
                              *(_OWORD *)v379 = *(_OWORD *)v263;
                            }
                            else
                            {
                              *v379 = *v263;
                              v274 = v263;
                              v379[1] = v263[1];
                              swift_bridgeObjectRetain();
                            }
                            v205 = v399;
                            a3 = v393;
                            v276 = *(int *)(v265 + 20);
                            v385 = (char *)v379 + v276;
                            v394 = v265;
                            v277 = (char *)v274 + v276;
                            v278 = sub_2490E7ABC();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 16))(v385, v277, v278);
                            __swift_storeEnumTagSinglePayload((uint64_t)v379, 0, 1, v394);
                          }
                          v279 = *(int *)(v259 + 44);
                          v280 = v257 + v279;
                          v281 = v258 + v279;
                          v282 = sub_2490E7ABC();
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v282 - 8) + 16))(v280, v281, v282);
                          __swift_storeEnumTagSinglePayload(v257, 0, 1, v259);
                          v7 = v398;
LABEL_172:
                          v298 = v401[26];
                          v299 = v7 + v298;
                          v300 = v205 + v298;
                          v301 = __swift_getEnumTagSinglePayload(v7 + v298, 1, v259);
                          v302 = __swift_getEnumTagSinglePayload(v300, 1, v259);
                          if (v301)
                          {
                            if (!v302)
                            {
                              *(_QWORD *)v299 = *(_QWORD *)v300;
                              *(_QWORD *)(v299 + 8) = *(_QWORD *)(v300 + 8);
                              *(_QWORD *)(v299 + 16) = *(_QWORD *)(v300 + 16);
                              *(_QWORD *)(v299 + 24) = *(_QWORD *)(v300 + 24);
                              *(_BYTE *)(v299 + 32) = *(_BYTE *)(v300 + 32);
                              *(_BYTE *)(v299 + 33) = *(_BYTE *)(v300 + 33);
                              *(_QWORD *)(v299 + 40) = *(_QWORD *)(v300 + 40);
                              *(_QWORD *)(v299 + 48) = *(_QWORD *)(v300 + 48);
                              *(_QWORD *)(v299 + 56) = *(_QWORD *)(v300 + 56);
                              *(_QWORD *)(v299 + 64) = *(_QWORD *)(v300 + 64);
                              v303 = *(int *)(v259 + 40);
                              v380 = (_QWORD *)(v299 + v303);
                              v395 = (_QWORD *)(v300 + v303);
                              v304 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v305 = v304;
                              swift_bridgeObjectRetain();
                              if (__swift_getEnumTagSinglePayload((uint64_t)v395, 1, v304))
                              {
                                v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
                                memcpy(v380, v395, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
                                v205 = v399;
                              }
                              else
                              {
                                if (v395[1] == 1)
                                {
                                  v314 = v395;
                                  *(_OWORD *)v380 = *(_OWORD *)v395;
                                }
                                else
                                {
                                  *v380 = *v395;
                                  v314 = v395;
                                  v380[1] = v395[1];
                                  swift_bridgeObjectRetain();
                                }
                                v205 = v399;
                                v316 = *(int *)(v305 + 20);
                                v396 = (char *)v380 + v316;
                                v400 = v305;
                                v317 = (char *)v314 + v316;
                                v318 = sub_2490E7ABC();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v318 - 8) + 16))(v396, v317, v318);
                                __swift_storeEnumTagSinglePayload((uint64_t)v380, 0, 1, v400);
                              }
                              v319 = *(int *)(v259 + 44);
                              v320 = v299 + v319;
                              v321 = v300 + v319;
                              v322 = sub_2490E7ABC();
                              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v320, v321, v322);
                              __swift_storeEnumTagSinglePayload(v299, 0, 1, v259);
                              v7 = v398;
                              goto LABEL_202;
                            }
                            goto LABEL_178;
                          }
                          if (v302)
                          {
                            sub_248E25C30(v299, type metadata accessor for ToolKitProtoContainerDefinition);
LABEL_178:
                            v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
                            memcpy((void *)v299, (const void *)v300, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
LABEL_202:
                            v338 = v401[27];
                            v339 = (_QWORD *)(v7 + v338);
                            v340 = (_QWORD *)(v205 + v338);
                            *v339 = *v340;
                            v339[1] = v340[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v341 = v401[28];
                            v342 = (_QWORD *)(v7 + v341);
                            v343 = (_QWORD *)(v205 + v341);
                            *v342 = *v343;
                            v342[1] = v343[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v344 = v401[29];
                            v345 = (_QWORD *)(v7 + v344);
                            v346 = (_QWORD *)(v205 + v344);
                            *v345 = *v346;
                            v345[1] = v346[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v347 = v401[30];
                            v348 = (_QWORD *)(v7 + v347);
                            v349 = (_QWORD *)(v205 + v347);
                            *v348 = *v349;
                            v348[1] = v349[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v350 = v401[31];
                            v351 = v7 + v350;
                            v352 = v205 + v350;
                            v353 = sub_2490E7ABC();
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v353 - 8) + 24))(v351, v352, v353);
                            goto LABEL_203;
                          }
                          *(_QWORD *)v299 = *(_QWORD *)v300;
                          *(_QWORD *)(v299 + 8) = *(_QWORD *)(v300 + 8);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(_QWORD *)(v299 + 16) = *(_QWORD *)(v300 + 16);
                          *(_QWORD *)(v299 + 24) = *(_QWORD *)(v300 + 24);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(_BYTE *)(v299 + 32) = *(_BYTE *)(v300 + 32);
                          *(_BYTE *)(v299 + 33) = *(_BYTE *)(v300 + 33);
                          *(_QWORD *)(v299 + 40) = *(_QWORD *)(v300 + 40);
                          *(_QWORD *)(v299 + 48) = *(_QWORD *)(v300 + 48);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(_QWORD *)(v299 + 56) = *(_QWORD *)(v300 + 56);
                          *(_QWORD *)(v299 + 64) = *(_QWORD *)(v300 + 64);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          v308 = *(int *)(v259 + 40);
                          v309 = (_QWORD *)(v299 + v308);
                          v310 = (_QWORD *)(v300 + v308);
                          v311 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                          v312 = __swift_getEnumTagSinglePayload((uint64_t)v309, 1, v311);
                          v313 = __swift_getEnumTagSinglePayload((uint64_t)v310, 1, v311);
                          if (v312)
                          {
                            if (!v313)
                            {
                              if (v310[1] == 1)
                              {
                                *(_OWORD *)v309 = *(_OWORD *)v310;
                              }
                              else
                              {
                                *v309 = *v310;
                                v309[1] = v310[1];
                                swift_bridgeObjectRetain();
                              }
                              v324 = v310;
                              v325 = *(int *)(v311 + 20);
                              v326 = (char *)v309 + v325;
                              v327 = (uint64_t)v309;
                              v328 = (char *)v324 + v325;
                              v329 = sub_2490E7ABC();
                              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v326, v328, v329);
                              __swift_storeEnumTagSinglePayload(v327, 0, 1, v311);
                              goto LABEL_201;
                            }
                            goto LABEL_187;
                          }
                          if (v313)
                          {
                            sub_248E25C30((uint64_t)v309, type metadata accessor for ToolKitProtoContainerDefinition.Device);
LABEL_187:
                            v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
                            memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
LABEL_201:
                            v334 = *(int *)(v259 + 44);
                            v335 = v299 + v334;
                            v336 = v300 + v334;
                            v337 = sub_2490E7ABC();
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v337 - 8) + 24))(v335, v336, v337);
                            v7 = v398;
                            v205 = v399;
                            goto LABEL_202;
                          }
                          v323 = v310[1];
                          if (v309[1] == 1)
                          {
                            if (v323 != 1)
                            {
                              *v309 = *v310;
                              v309[1] = v310[1];
                              swift_bridgeObjectRetain();
LABEL_200:
                              v330 = *(int *)(v311 + 20);
                              v331 = (char *)v309 + v330;
                              v332 = (char *)v310 + v330;
                              v333 = sub_2490E7ABC();
                              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v333 - 8) + 24))(v331, v332, v333);
                              goto LABEL_201;
                            }
                          }
                          else
                          {
                            if (v323 != 1)
                            {
                              *v309 = *v310;
                              v309[1] = v310[1];
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              goto LABEL_200;
                            }
                            sub_248E00F4C((uint64_t)v309);
                          }
                          *(_OWORD *)v309 = *(_OWORD *)v310;
                          goto LABEL_200;
                        }
LABEL_148:
                        v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
                        memcpy((void *)v257, (const void *)v258, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
                        goto LABEL_172;
                      }
                      if (v261)
                      {
                        sub_248E25C30(v257, type metadata accessor for ToolKitProtoContainerDefinition);
                        goto LABEL_148;
                      }
                      *(_QWORD *)v257 = *(_QWORD *)v258;
                      *(_QWORD *)(v257 + 8) = *(_QWORD *)(v258 + 8);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_QWORD *)(v257 + 16) = *(_QWORD *)(v258 + 16);
                      *(_QWORD *)(v257 + 24) = *(_QWORD *)(v258 + 24);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_BYTE *)(v257 + 32) = *(_BYTE *)(v258 + 32);
                      *(_BYTE *)(v257 + 33) = *(_BYTE *)(v258 + 33);
                      *(_QWORD *)(v257 + 40) = *(_QWORD *)(v258 + 40);
                      *(_QWORD *)(v257 + 48) = *(_QWORD *)(v258 + 48);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_QWORD *)(v257 + 56) = *(_QWORD *)(v258 + 56);
                      *(_QWORD *)(v257 + 64) = *(_QWORD *)(v258 + 64);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      v268 = *(int *)(v259 + 40);
                      v269 = (_QWORD *)(v257 + v268);
                      v270 = (_QWORD *)(v258 + v268);
                      v271 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                      v272 = __swift_getEnumTagSinglePayload((uint64_t)v269, 1, v271);
                      v273 = __swift_getEnumTagSinglePayload((uint64_t)v270, 1, v271);
                      if (v272)
                      {
                        if (!v273)
                        {
                          if (v270[1] == 1)
                          {
                            *(_OWORD *)v269 = *(_OWORD *)v270;
                          }
                          else
                          {
                            *v269 = *v270;
                            v269[1] = v270[1];
                            swift_bridgeObjectRetain();
                          }
                          v284 = v270;
                          v285 = *(int *)(v271 + 20);
                          v286 = (char *)v269 + v285;
                          v287 = (uint64_t)v269;
                          v288 = (char *)v284 + v285;
                          v289 = sub_2490E7ABC();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(v286, v288, v289);
                          __swift_storeEnumTagSinglePayload(v287, 0, 1, v271);
                          goto LABEL_171;
                        }
                        goto LABEL_157;
                      }
                      if (v273)
                      {
                        sub_248E25C30((uint64_t)v269, type metadata accessor for ToolKitProtoContainerDefinition.Device);
LABEL_157:
                        v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
                        memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
LABEL_171:
                        v294 = *(int *)(v259 + 44);
                        v295 = v257 + v294;
                        v296 = v258 + v294;
                        v297 = sub_2490E7ABC();
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v297 - 8) + 24))(v295, v296, v297);
                        v7 = v398;
                        v205 = v399;
                        goto LABEL_172;
                      }
                      v283 = v270[1];
                      if (v269[1] == 1)
                      {
                        if (v283 != 1)
                        {
                          *v269 = *v270;
                          v269[1] = v270[1];
                          swift_bridgeObjectRetain();
LABEL_170:
                          v290 = *(int *)(v271 + 20);
                          v291 = (char *)v269 + v290;
                          v292 = (char *)v270 + v290;
                          v293 = sub_2490E7ABC();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v293 - 8) + 24))(v291, v292, v293);
                          goto LABEL_171;
                        }
                      }
                      else
                      {
                        if (v283 != 1)
                        {
                          *v269 = *v270;
                          v269[1] = v270[1];
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          goto LABEL_170;
                        }
                        sub_248E00F4C((uint64_t)v269);
                      }
                      *(_OWORD *)v269 = *(_OWORD *)v270;
                      goto LABEL_170;
                    }
                    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                    if (EnumCaseMultiPayload == 2)
                    {
                      *v207 = *v208;
                      v207[1] = v208[1];
                      v207[2] = v208[2];
                      v207[3] = v208[3];
                      v237 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                                    + 24);
                      v370 = (char *)v208 + v237;
                      v375 = (char *)v207 + v237;
                      v238 = sub_2490E7ABC();
                      v391 = a3;
                      v232 = *(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v238 - 8) + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v234 = v370;
                      v233 = v375;
                      v235 = v238;
                    }
                    else
                    {
                      if (EnumCaseMultiPayload != 1)
                      {
                        *v207 = *v208;
                        v207[1] = v208[1];
                        swift_bridgeObjectRetain();
                        goto LABEL_127;
                      }
                      *v207 = *v208;
                      v207[1] = v208[1];
                      *((_BYTE *)v207 + 16) = *((_BYTE *)v208 + 16);
                      v207[3] = v208[3];
                      v207[4] = v208[4];
                      v207[5] = v208[5];
                      v207[6] = v208[6];
                      v230 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                    + 32);
                      v363 = (char *)v208 + v230;
                      v369 = (char *)v207 + v230;
                      v231 = sub_2490E7ABC();
                      v391 = a3;
                      v232 = *(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v231 - 8) + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v234 = v363;
                      v233 = v369;
                      v235 = v231;
                    }
                    v232(v233, v234, v235);
                    a3 = v391;
LABEL_127:
                    v205 = v399;
                    swift_storeEnumTagMultiPayload();
                    __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v212);
                    goto LABEL_128;
                  }
LABEL_111:
                  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
                  memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
                  goto LABEL_142;
                }
                if (v211)
                {
                  sub_248E25C30((uint64_t)v207, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
                  goto LABEL_111;
                }
                v219 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                v220 = __swift_getEnumTagSinglePayload((uint64_t)v207, 1, v219);
                v221 = __swift_getEnumTagSinglePayload((uint64_t)v208, 1, v219);
                if (v220)
                {
                  if (!v221)
                  {
                    v390 = a3;
                    v222 = swift_getEnumCaseMultiPayload();
                    if (v222 == 2)
                    {
                      *v207 = *v208;
                      v207[1] = v208[1];
                      v207[2] = v208[2];
                      v207[3] = v208[3];
                      v247 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                                    + 24);
                      v372 = (char *)v208 + v247;
                      v377 = (char *)v207 + v247;
                      v248 = sub_2490E7ABC();
                      v225 = *(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v248 - 8) + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v227 = v372;
                      v226 = v377;
                      v228 = v248;
                    }
                    else
                    {
                      if (v222 != 1)
                      {
                        *v207 = *v208;
                        v207[1] = v208[1];
                        swift_bridgeObjectRetain();
                        goto LABEL_136;
                      }
                      *v207 = *v208;
                      v207[1] = v208[1];
                      *((_BYTE *)v207 + 16) = *((_BYTE *)v208 + 16);
                      v207[3] = v208[3];
                      v207[4] = v208[4];
                      v207[5] = v208[5];
                      v207[6] = v208[6];
                      v223 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                    + 32);
                      v362 = (char *)v208 + v223;
                      v368 = (char *)v207 + v223;
                      v224 = sub_2490E7ABC();
                      v225 = *(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v224 - 8) + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v227 = v362;
                      v226 = v368;
                      v228 = v224;
                    }
                    v225(v226, v227, v228);
LABEL_136:
                    a3 = v390;
                    v205 = v399;
                    swift_storeEnumTagMultiPayload();
                    __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v219);
                    goto LABEL_140;
                  }
                }
                else
                {
                  if (!v221)
                  {
                    if (v5 != v4)
                    {
                      v392 = a3;
                      sub_248E25C30((uint64_t)v207, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
                      v243 = swift_getEnumCaseMultiPayload();
                      if (v243 == 2)
                      {
                        *v207 = *v208;
                        v207[1] = v208[1];
                        v207[2] = v208[2];
                        v207[3] = v208[3];
                        v249 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                                      + 24);
                        v378 = (char *)v208 + v249;
                        v384 = (char *)v207 + v249;
                        v250 = sub_2490E7ABC();
                        v251 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v250 - 8) + 16);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        v251(v384, v378, v250);
                      }
                      else
                      {
                        *v207 = *v208;
                        v207[1] = v208[1];
                        if (v243 == 1)
                        {
                          *((_BYTE *)v207 + 16) = *((_BYTE *)v208 + 16);
                          v207[3] = v208[3];
                          v207[4] = v208[4];
                          v207[5] = v208[5];
                          v207[6] = v208[6];
                          v244 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                        + 32);
                          v371 = (char *)v208 + v244;
                          v376 = (char *)v207 + v244;
                          v245 = sub_2490E7ABC();
                          v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 16);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          v246(v376, v371, v245);
                        }
                        else
                        {
                          swift_bridgeObjectRetain();
                        }
                      }
                      swift_storeEnumTagMultiPayload();
                      a3 = v392;
                      v205 = v399;
                    }
                    goto LABEL_140;
                  }
                  sub_248E25C30((uint64_t)v207, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
                }
                v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
                memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
LABEL_140:
                v252 = *(int *)(v209 + 20);
                v253 = (char *)v207 + v252;
                v254 = (char *)v208 + v252;
                v255 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 24))(v253, v254, v255);
                goto LABEL_141;
              }
              sub_248E25C30((uint64_t)v193, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
            }
            v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
            memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
            goto LABEL_105;
          }
LABEL_29:
          v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
          memcpy((void *)v50, (const void *)v51, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          goto LABEL_99;
        }
        if (v54)
        {
          sub_248E25C30(v50, type metadata accessor for ToolKitProtoAppDefinition);
          goto LABEL_29;
        }
        *(_QWORD *)v50 = *(_QWORD *)v51;
        *(_QWORD *)(v50 + 8) = *(_QWORD *)(v51 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v50 + 16) = *(_QWORD *)(v51 + 16);
        *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
        *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
        *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
        *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(v50 + 80) = *(_BYTE *)(v51 + 80);
        v62 = *(int *)(v52 + 40);
        v63 = (_QWORD *)(v50 + v62);
        v64 = (_QWORD *)(v51 + v62);
        v65 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        v66 = __swift_getEnumTagSinglePayload((uint64_t)v63, 1, v65);
        v67 = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65);
        if (v66)
        {
          if (!v67)
          {
            if (v64[1] == 1)
            {
              *(_OWORD *)v63 = *(_OWORD *)v64;
            }
            else
            {
              *v63 = *v64;
              v63[1] = v64[1];
              swift_bridgeObjectRetain();
            }
            v175 = v64;
            v176 = *(int *)(v65 + 20);
            v177 = (char *)v63 + v176;
            v178 = (uint64_t)v63;
            v179 = (char *)v175 + v176;
            v180 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v177, v179, v180);
            __swift_storeEnumTagSinglePayload(v178, 0, 1, v65);
            goto LABEL_98;
          }
          goto LABEL_82;
        }
        if (v67)
        {
          sub_248E25C30((uint64_t)v63, type metadata accessor for ToolKitProtoAppDefinition.Device);
LABEL_82:
          v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
LABEL_98:
          v185 = *(int *)(v52 + 44);
          v186 = v50 + v185;
          v187 = v51 + v185;
          v188 = sub_2490E7ABC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 24))(v186, v187, v188);
          v7 = v398;
          v45 = v399;
          goto LABEL_99;
        }
        v174 = v64[1];
        if (v63[1] == 1)
        {
          if (v174 != 1)
          {
            *v63 = *v64;
            v63[1] = v64[1];
            swift_bridgeObjectRetain();
LABEL_97:
            v181 = *(int *)(v65 + 20);
            v182 = (char *)v63 + v181;
            v183 = (char *)v64 + v181;
            v184 = sub_2490E7ABC();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 24))(v182, v183, v184);
            goto LABEL_98;
          }
        }
        else
        {
          if (v174 != 1)
          {
            *v63 = *v64;
            v63[1] = v64[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_97;
          }
          sub_248E00F4C((uint64_t)v63);
        }
        *(_OWORD *)v63 = *(_OWORD *)v64;
        goto LABEL_97;
      }
LABEL_22:
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      goto LABEL_23;
    }
    if (v21)
    {
      sub_248E25C30((uint64_t)v17, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_22;
    }
    v60 = *v18;
    v61 = *v18 & 0xF000000000000007;
    if ((~*v17 & 0xF000000000000007) != 0)
    {
      if (v61 != 0xF000000000000007)
      {
        *v17 = v60;
        swift_retain();
        swift_release();
        goto LABEL_87;
      }
      sub_248E42024((uint64_t)v17);
      v60 = *v18;
    }
    else if (v61 != 0xF000000000000007)
    {
      *v17 = v60;
      swift_retain();
LABEL_87:
      v170 = *(int *)(v19 + 20);
      v171 = (char *)v17 + v170;
      v172 = (char *)v18 + v170;
      v173 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 24))(v171, v172, v173);
      goto LABEL_23;
    }
    *v17 = v60;
    goto LABEL_87;
  }
  if (v11)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254476028);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_203;
  }
  v381 = v5;
  v386 = a3;
  v373 = v4;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_BYTE *)(v7 + 32) = *(_BYTE *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  *(_QWORD *)(v7 + 56) = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(v8 + 72);
  *(_BYTE *)(v7 + 80) = *(_BYTE *)(v8 + 80);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_QWORD *)(v7 + 128) = *(_QWORD *)(v8 + 128);
  v12 = *(int *)(v9 + 76);
  v397 = v7;
  __dst = (_QWORD *)(v7 + v12);
  v360 = (uint64_t *)(v8 + v12);
  v13 = type metadata accessor for ToolKitProtoTypeInstance(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v360, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(__dst, v360, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v27 = *v360;
    if ((~*v360 & 0xF000000000000007) != 0)
      swift_retain();
    *__dst = v27;
    v28 = *(int *)(v13 + 20);
    v29 = (char *)__dst + v28;
    v30 = (char *)v360 + v28;
    v31 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v13);
  }
  v32 = v401[20];
  v33 = (_QWORD *)(v7 + v32);
  v34 = (_QWORD *)(v8 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  v35 = v401[21];
  v36 = (_QWORD *)(v7 + v35);
  v37 = (_QWORD *)(v8 + v35);
  v38 = type metadata accessor for ToolKitProtoAppDefinition(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    *v36 = *v37;
    v36[1] = v37[1];
    v36[2] = v37[2];
    v36[3] = v37[3];
    v36[4] = v37[4];
    v36[5] = v37[5];
    v36[6] = v37[6];
    v36[7] = v37[7];
    v36[8] = v37[8];
    v36[9] = v37[9];
    *((_BYTE *)v36 + 80) = *((_BYTE *)v37 + 80);
    v40 = *(int *)(v38 + 40);
    v364 = (_QWORD *)((char *)v36 + v40);
    v41 = (_QWORD *)((char *)v37 + v40);
    v42 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
      memcpy(v364, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      if (v41[1] == 1)
      {
        *(_OWORD *)v364 = *(_OWORD *)v41;
      }
      else
      {
        *v364 = *v41;
        v364[1] = v41[1];
        swift_bridgeObjectRetain();
      }
      v68 = *(int *)(v42 + 20);
      v69 = (char *)v364 + v68;
      v70 = (char *)v41 + v68;
      v71 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
      __swift_storeEnumTagSinglePayload((uint64_t)v364, 0, 1, v42);
    }
    v72 = *(int *)(v38 + 44);
    v73 = (char *)v36 + v72;
    v74 = (char *)v37 + v72;
    v75 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
    v7 = v397;
  }
  v76 = v401[22];
  v77 = (_QWORD *)(v7 + v76);
  v78 = (_QWORD *)(v8 + v76);
  *v77 = *v78;
  v77[1] = v78[1];
  v79 = v401[23];
  v80 = v8;
  v81 = (_QWORD *)(v7 + v79);
  v82 = (_QWORD *)(v80 + v79);
  v83 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
  {
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    *v81 = *v82;
    v81[1] = v82[1];
    v81[2] = v82[2];
    v81[3] = v82[3];
    v85 = *(int *)(v83 + 24);
    v86 = (char *)v81 + v85;
    v87 = (char *)v82 + v85;
    v88 = sub_2490E7ABC();
    v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v89(v86, v87, v88);
    __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
  }
  v90 = v399;
  v91 = v401[24];
  v92 = (_QWORD *)(v7 + v91);
  v93 = (_QWORD *)(v399 + v91);
  v94 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v94))
  {
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    v96 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v96))
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      v98 = swift_getEnumCaseMultiPayload();
      if (v98 == 2)
      {
        *v92 = *v93;
        v92[1] = v93[1];
        v92[2] = v93[2];
        v92[3] = v93[3];
        v102 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                      + 24);
        v367 = (char *)v92 + v102;
        v103 = (char *)v93 + v102;
        v104 = sub_2490E7ABC();
        v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v105(v367, v103, v104);
      }
      else
      {
        *v92 = *v93;
        v92[1] = v93[1];
        if (v98 == 1)
        {
          *((_BYTE *)v92 + 16) = *((_BYTE *)v93 + 16);
          v92[3] = v93[3];
          v92[4] = v93[4];
          v92[5] = v93[5];
          v92[6] = v93[6];
          v99 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v361 = (char *)v93 + v99;
          v365 = (char *)v92 + v99;
          v100 = sub_2490E7ABC();
          v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v101(v365, v361, v100);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v96);
      v90 = v399;
    }
    v106 = *(int *)(v94 + 20);
    v107 = (char *)v92 + v106;
    v108 = (char *)v93 + v106;
    v109 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v107, v108, v109);
    __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v94);
    v7 = v397;
  }
  v110 = v401[25];
  v111 = (_QWORD *)(v7 + v110);
  v112 = (_QWORD *)(v90 + v110);
  v113 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v113))
  {
    v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
  }
  else
  {
    *v111 = *v112;
    v111[1] = v112[1];
    v111[2] = v112[2];
    v111[3] = v112[3];
    *((_BYTE *)v111 + 32) = *((_BYTE *)v112 + 32);
    *((_BYTE *)v111 + 33) = *((_BYTE *)v112 + 33);
    v111[5] = v112[5];
    v111[6] = v112[6];
    v111[7] = v112[7];
    v111[8] = v112[8];
    v115 = *(int *)(v113 + 40);
    v116 = (_QWORD *)((char *)v111 + v115);
    v117 = (_QWORD *)((char *)v112 + v115);
    v118 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v118))
    {
      v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    }
    else
    {
      if (v117[1] == 1)
      {
        *(_OWORD *)v116 = *(_OWORD *)v117;
      }
      else
      {
        *v116 = *v117;
        v116[1] = v117[1];
        swift_bridgeObjectRetain();
      }
      v120 = *(int *)(v118 + 20);
      v121 = (char *)v116 + v120;
      v122 = (char *)v117 + v120;
      v123 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
      __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v118);
    }
    v124 = *(int *)(v113 + 44);
    v125 = (char *)v111 + v124;
    v126 = (char *)v112 + v124;
    v127 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
    __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v113);
    v7 = v397;
    v90 = v399;
  }
  v128 = v401[26];
  v129 = (_QWORD *)(v7 + v128);
  v130 = (_QWORD *)(v90 + v128);
  if (__swift_getEnumTagSinglePayload(v90 + v128, 1, v113))
  {
    v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
  }
  else
  {
    *v129 = *v130;
    v129[1] = v130[1];
    v129[2] = v130[2];
    v129[3] = v130[3];
    *((_BYTE *)v129 + 32) = *((_BYTE *)v130 + 32);
    *((_BYTE *)v129 + 33) = *((_BYTE *)v130 + 33);
    v129[5] = v130[5];
    v129[6] = v130[6];
    v129[7] = v130[7];
    v129[8] = v130[8];
    v132 = *(int *)(v113 + 40);
    v133 = (_QWORD *)((char *)v129 + v132);
    v134 = (_QWORD *)((char *)v130 + v132);
    v135 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v134, 1, v135))
    {
      v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    }
    else
    {
      if (v134[1] == 1)
      {
        *(_OWORD *)v133 = *(_OWORD *)v134;
      }
      else
      {
        *v133 = *v134;
        v133[1] = v134[1];
        swift_bridgeObjectRetain();
      }
      v137 = *(int *)(v135 + 20);
      v138 = (char *)v133 + v137;
      v139 = (char *)v134 + v137;
      v140 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v138, v139, v140);
      __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v135);
    }
    v141 = *(int *)(v113 + 44);
    v142 = (char *)v129 + v141;
    v143 = (char *)v130 + v141;
    v144 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v142, v143, v144);
    __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v113);
    v7 = v397;
    v90 = v399;
  }
  v145 = v401[27];
  v146 = (_QWORD *)(v7 + v145);
  v147 = (_QWORD *)(v90 + v145);
  *v146 = *v147;
  v146[1] = v147[1];
  v148 = v401[28];
  v149 = (_QWORD *)(v7 + v148);
  v150 = (_QWORD *)(v90 + v148);
  *v149 = *v150;
  v149[1] = v150[1];
  v151 = v401[29];
  v152 = (_QWORD *)(v7 + v151);
  v153 = (_QWORD *)(v90 + v151);
  *v152 = *v153;
  v152[1] = v153[1];
  v154 = v401[30];
  v155 = (_QWORD *)(v7 + v154);
  v156 = (_QWORD *)(v90 + v154);
  *v155 = *v156;
  v155[1] = v156[1];
  v157 = v401[31];
  v158 = v7 + v157;
  v159 = v90 + v157;
  v160 = sub_2490E7ABC();
  v161 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v161(v158, v159, v160);
  __swift_storeEnumTagSinglePayload(v7, 0, 1, (uint64_t)v401);
  v4 = v373;
  v5 = v381;
  a3 = v386;
LABEL_203:
  v354 = *(int *)(a3 + 24);
  v355 = (char *)v5 + v354;
  v356 = (char *)v4 + v354;
  v357 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v357 - 8) + 24))(v355, v356, v357);
  return v5;
}

_QWORD *initializeWithTake for ToolKitProtoToolDefinitionClosure.Version1(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int EnumCaseMultiPayload;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  _OWORD *v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  _OWORD *v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  _QWORD *v119;

  v3 = a3;
  v4 = a2;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254476028);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_40;
  }
  v118 = v3;
  v119 = v4;
  v11 = v8[1];
  *v7 = *v8;
  v7[1] = v11;
  *((_BYTE *)v7 + 32) = *((_BYTE *)v8 + 32);
  *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
  *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
  *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
  *((_BYTE *)v7 + 80) = *((_BYTE *)v8 + 80);
  *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
  *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
  *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
  v12 = v9[19];
  v13 = (_QWORD *)((char *)v7 + v12);
  v14 = (_QWORD *)((char *)v8 + v12);
  v15 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(v15 + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    v20 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  *(_OWORD *)((char *)v7 + v9[20]) = *(_OWORD *)((char *)v8 + v9[20]);
  v21 = v9[21];
  v22 = (_OWORD *)((char *)v7 + v21);
  v23 = (_OWORD *)((char *)v8 + v21);
  v24 = type metadata accessor for ToolKitProtoAppDefinition(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = v23[1];
    *v22 = *v23;
    v22[1] = v26;
    v27 = v23[3];
    v22[2] = v23[2];
    v22[3] = v27;
    v22[4] = v23[4];
    *((_BYTE *)v22 + 80) = *((_BYTE *)v23 + 80);
    v28 = *(int *)(v24 + 40);
    v29 = (_OWORD *)((char *)v22 + v28);
    v30 = (_OWORD *)((char *)v23 + v28);
    v31 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      *v29 = *v30;
      v33 = *(int *)(v31 + 20);
      v115 = (char *)v29 + v33;
      v34 = (char *)v30 + v33;
      v35 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v115, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
    }
    v36 = *(int *)(v24 + 44);
    v37 = (char *)v22 + v36;
    v38 = (char *)v23 + v36;
    v39 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
  }
  *(_OWORD *)((char *)v7 + v9[22]) = *(_OWORD *)((char *)v8 + v9[22]);
  v40 = v9[23];
  v41 = (_OWORD *)((char *)v7 + v40);
  v42 = (_OWORD *)((char *)v8 + v40);
  v43 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = v42[1];
    *v41 = *v42;
    v41[1] = v45;
    v46 = *(int *)(v43 + 24);
    v47 = (char *)v41 + v46;
    v48 = (char *)v42 + v46;
    v49 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
  }
  v50 = v9[24];
  v51 = (_OWORD *)((char *)v7 + v50);
  v52 = (_OWORD *)((char *)v8 + v50);
  v53 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
  {
    v55 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v55))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
LABEL_26:
      v67 = *(int *)(v53 + 20);
      v68 = (char *)v51 + v67;
      v69 = (char *)v52 + v67;
      v70 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
      __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
      goto LABEL_27;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v62 = v52[1];
      *v51 = *v52;
      v51[1] = v62;
      v63 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v64 = (char *)v51 + v63;
      v65 = (char *)v52 + v63;
      v66 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        goto LABEL_25;
      }
      *v51 = *v52;
      *((_BYTE *)v51 + 16) = *((_BYTE *)v52 + 16);
      *(_OWORD *)((char *)v51 + 24) = *(_OWORD *)((char *)v52 + 24);
      *(_OWORD *)((char *)v51 + 40) = *(_OWORD *)((char *)v52 + 40);
      v58 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      v59 = (char *)v51 + v58;
      v60 = (char *)v52 + v58;
      v61 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
    }
    swift_storeEnumTagMultiPayload();
LABEL_25:
    __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v55);
    goto LABEL_26;
  }
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
  memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
LABEL_27:
  v71 = v9[25];
  v72 = (_OWORD *)((char *)v7 + v71);
  v73 = (_OWORD *)((char *)v8 + v71);
  v74 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    v76 = v73[1];
    *v72 = *v73;
    v72[1] = v76;
    *((_WORD *)v72 + 16) = *((_WORD *)v73 + 16);
    *(_OWORD *)((char *)v72 + 40) = *(_OWORD *)((char *)v73 + 40);
    *(_OWORD *)((char *)v72 + 56) = *(_OWORD *)((char *)v73 + 56);
    v77 = *(int *)(v74 + 40);
    v78 = (_OWORD *)((char *)v72 + v77);
    v79 = (_OWORD *)((char *)v73 + v77);
    v80 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v80))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      *v78 = *v79;
      v82 = *(int *)(v80 + 20);
      v116 = (char *)v78 + v82;
      v83 = (char *)v79 + v82;
      v84 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v116, v83, v84);
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v80);
    }
    v85 = *(int *)(v74 + 44);
    v86 = (char *)v72 + v85;
    v87 = (char *)v73 + v85;
    v88 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
    __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v74);
  }
  v89 = v9[26];
  v90 = (_OWORD *)((char *)v7 + v89);
  v91 = (_OWORD *)((char *)v8 + v89);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v89, 1, v74))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v93 = v91[1];
    *v90 = *v91;
    v90[1] = v93;
    *((_WORD *)v90 + 16) = *((_WORD *)v91 + 16);
    *(_OWORD *)((char *)v90 + 40) = *(_OWORD *)((char *)v91 + 40);
    *(_OWORD *)((char *)v90 + 56) = *(_OWORD *)((char *)v91 + 56);
    v94 = *(int *)(v74 + 40);
    v95 = (_OWORD *)((char *)v90 + v94);
    v96 = (_OWORD *)((char *)v91 + v94);
    v97 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      *v95 = *v96;
      v99 = *(int *)(v97 + 20);
      v117 = (char *)v95 + v99;
      v100 = (char *)v96 + v99;
      v101 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v117, v100, v101);
      __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v97);
    }
    v102 = *(int *)(v74 + 44);
    v103 = (char *)v90 + v102;
    v104 = (char *)v91 + v102;
    v105 = sub_2490E7ABC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
    __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v74);
  }
  *(_OWORD *)((char *)v7 + v9[27]) = *(_OWORD *)((char *)v8 + v9[27]);
  *(_OWORD *)((char *)v7 + v9[28]) = *(_OWORD *)((char *)v8 + v9[28]);
  *(_OWORD *)((char *)v7 + v9[29]) = *(_OWORD *)((char *)v8 + v9[29]);
  *(_OWORD *)((char *)v7 + v9[30]) = *(_OWORD *)((char *)v8 + v9[30]);
  v106 = v9[31];
  v107 = (char *)v7 + v106;
  v108 = (char *)v8 + v106;
  v109 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
  v3 = v118;
  v4 = v119;
LABEL_40:
  v110 = *(int *)(v3 + 24);
  v111 = (char *)a1 + v110;
  v112 = (char *)v4 + v110;
  v113 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoToolDefinitionClosure.Version1(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  int EnumTagSinglePayload;
  int v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  int v106;
  size_t v107;
  void *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  int v191;
  int v192;
  __int128 v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  int v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  int v216;
  int v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  int EnumCaseMultiPayload;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  __int128 v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  __int128 v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  int v260;
  int v261;
  __int128 v262;
  uint64_t v263;
  _OWORD *v264;
  _OWORD *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  int v277;
  size_t v278;
  void *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  _QWORD *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  int v305;
  __int128 v306;
  uint64_t v307;
  _OWORD *v308;
  _OWORD *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  int v321;
  size_t v322;
  void *v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  char *v371;
  uint64_t v372;
  char *v374;
  uint64_t v375;
  char *v376;
  char *v377;
  char *v378;
  uint64_t v379;
  char *v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  _QWORD *v384;

  v4 = a2;
  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)v4 + v6;
  v9 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_248E25C30((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      goto LABEL_7;
    }
    v383 = a3;
    v384 = v4;
    v19 = *((_QWORD *)v8 + 1);
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *((_QWORD *)v7 + 1) = v19;
    swift_bridgeObjectRelease();
    v20 = *((_QWORD *)v8 + 3);
    *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
    *((_QWORD *)v7 + 3) = v20;
    swift_bridgeObjectRelease();
    v7[32] = v8[32];
    *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
    swift_bridgeObjectRelease();
    v7[80] = v8[80];
    *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
    swift_bridgeObjectRelease();
    *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
    swift_bridgeObjectRelease();
    v21 = v9[19];
    v22 = &v7[v21];
    v23 = &v8[v21];
    v24 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
    v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
    if (v25)
    {
      if (!v26)
      {
        *(_QWORD *)v22 = *(_QWORD *)v23;
        v27 = *(int *)(v24 + 20);
        v28 = &v22[v27];
        v29 = &v23[v27];
        v30 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v26)
      {
        v96 = *(_QWORD *)v23;
        if ((~*(_QWORD *)v22 & 0xF000000000000007) != 0)
        {
          if ((~v96 & 0xF000000000000007) != 0)
          {
            *(_QWORD *)v22 = v96;
            swift_release();
          }
          else
          {
            sub_248E42024((uint64_t)v22);
            *(_QWORD *)v22 = *(_QWORD *)v23;
          }
        }
        else
        {
          *(_QWORD *)v22 = v96;
        }
        v164 = *(int *)(v24 + 20);
        v165 = &v22[v164];
        v166 = &v23[v164];
        v167 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 40))(v165, v166, v167);
LABEL_19:
        v48 = v9[20];
        v49 = &v7[v48];
        v50 = &v8[v48];
        v52 = *(_QWORD *)v50;
        v51 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = v52;
        *((_QWORD *)v49 + 1) = v51;
        swift_bridgeObjectRelease();
        v53 = v9[21];
        v54 = (uint64_t)&v7[v53];
        v55 = (uint64_t)&v8[v53];
        v56 = type metadata accessor for ToolKitProtoAppDefinition(0);
        v57 = __swift_getEnumTagSinglePayload(v54, 1, v56);
        v58 = __swift_getEnumTagSinglePayload(v55, 1, v56);
        if (v57)
        {
          if (!v58)
          {
            v59 = *(_OWORD *)(v55 + 16);
            *(_OWORD *)v54 = *(_OWORD *)v55;
            *(_OWORD *)(v54 + 16) = v59;
            v60 = *(_OWORD *)(v55 + 48);
            *(_OWORD *)(v54 + 32) = *(_OWORD *)(v55 + 32);
            *(_OWORD *)(v54 + 48) = v60;
            *(_OWORD *)(v54 + 64) = *(_OWORD *)(v55 + 64);
            *(_BYTE *)(v54 + 80) = *(_BYTE *)(v55 + 80);
            v61 = *(int *)(v56 + 40);
            v62 = (_OWORD *)(v54 + v61);
            v63 = (_OWORD *)(v55 + v61);
            v64 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
            {
              v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
              memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
            }
            else
            {
              *v62 = *v63;
              v109 = *(int *)(v64 + 20);
              v376 = (char *)v62 + v109;
              v110 = (char *)v63 + v109;
              v111 = sub_2490E7ABC();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v376, v110, v111);
              __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
            }
            v112 = *(int *)(v56 + 44);
            v113 = v54 + v112;
            v114 = v55 + v112;
            v115 = sub_2490E7ABC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
            __swift_storeEnumTagSinglePayload(v54, 0, 1, v56);
LABEL_78:
            v182 = v9[22];
            v183 = &v7[v182];
            v184 = &v8[v182];
            v186 = *(_QWORD *)v184;
            v185 = *((_QWORD *)v184 + 1);
            *(_QWORD *)v183 = v186;
            *((_QWORD *)v183 + 1) = v185;
            swift_bridgeObjectRelease();
            v187 = v9[23];
            v188 = &v7[v187];
            v189 = &v8[v187];
            v190 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v191 = __swift_getEnumTagSinglePayload((uint64_t)v188, 1, v190);
            v192 = __swift_getEnumTagSinglePayload((uint64_t)v189, 1, v190);
            if (v191)
            {
              if (!v192)
              {
                v193 = *((_OWORD *)v189 + 1);
                *(_OWORD *)v188 = *(_OWORD *)v189;
                *((_OWORD *)v188 + 1) = v193;
                v194 = *(int *)(v190 + 24);
                v195 = &v188[v194];
                v196 = &v189[v194];
                v197 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v195, v196, v197);
                __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, v190);
                goto LABEL_84;
              }
            }
            else
            {
              if (!v192)
              {
                v208 = *((_QWORD *)v189 + 1);
                *(_QWORD *)v188 = *(_QWORD *)v189;
                *((_QWORD *)v188 + 1) = v208;
                swift_bridgeObjectRelease();
                v209 = *((_QWORD *)v189 + 3);
                *((_QWORD *)v188 + 2) = *((_QWORD *)v189 + 2);
                *((_QWORD *)v188 + 3) = v209;
                swift_bridgeObjectRelease();
                v210 = *(int *)(v190 + 24);
                v211 = &v188[v210];
                v212 = &v189[v210];
                v213 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 40))(v211, v212, v213);
LABEL_84:
                v199 = v9[24];
                v200 = &v7[v199];
                v201 = &v8[v199];
                v202 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
                v203 = __swift_getEnumTagSinglePayload((uint64_t)v200, 1, v202);
                v204 = __swift_getEnumTagSinglePayload((uint64_t)v201, 1, v202);
                if (v203)
                {
                  if (!v204)
                  {
                    v205 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v201, 1, v205))
                    {
                      v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
                      memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
LABEL_108:
                      v233 = *(int *)(v202 + 20);
                      v234 = &v200[v233];
                      v235 = &v201[v233];
                      v236 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v234, v235, v236);
                      __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v202);
                      goto LABEL_120;
                    }
                    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                    if (EnumCaseMultiPayload == 2)
                    {
                      v228 = *((_OWORD *)v201 + 1);
                      *(_OWORD *)v200 = *(_OWORD *)v201;
                      *((_OWORD *)v200 + 1) = v228;
                      v229 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                                    + 24);
                      v230 = &v200[v229];
                      v231 = &v201[v229];
                      v232 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 32))(v230, v231, v232);
                    }
                    else
                    {
                      if (EnumCaseMultiPayload != 1)
                      {
                        memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
                        goto LABEL_107;
                      }
                      *(_OWORD *)v200 = *(_OWORD *)v201;
                      v200[16] = v201[16];
                      *(_OWORD *)(v200 + 24) = *(_OWORD *)(v201 + 24);
                      *(_OWORD *)(v200 + 40) = *(_OWORD *)(v201 + 40);
                      v223 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                    + 32);
                      v224 = &v200[v223];
                      v225 = &v201[v223];
                      v226 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v224, v225, v226);
                    }
                    swift_storeEnumTagMultiPayload();
LABEL_107:
                    __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v205);
                    goto LABEL_108;
                  }
LABEL_90:
                  v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
                  memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
                  goto LABEL_120;
                }
                if (v204)
                {
                  sub_248E25C30((uint64_t)v200, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
                  goto LABEL_90;
                }
                v214 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                v215 = __swift_getEnumTagSinglePayload((uint64_t)v200, 1, v214);
                v216 = __swift_getEnumTagSinglePayload((uint64_t)v201, 1, v214);
                if (v215)
                {
                  if (!v216)
                  {
                    v217 = swift_getEnumCaseMultiPayload();
                    if (v217 == 2)
                    {
                      v242 = *((_OWORD *)v201 + 1);
                      *(_OWORD *)v200 = *(_OWORD *)v201;
                      *((_OWORD *)v200 + 1) = v242;
                      v243 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                                    + 24);
                      v244 = &v200[v243];
                      v245 = &v201[v243];
                      v246 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 32))(v244, v245, v246);
                    }
                    else
                    {
                      if (v217 != 1)
                      {
                        memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
                        goto LABEL_116;
                      }
                      *(_OWORD *)v200 = *(_OWORD *)v201;
                      v200[16] = v201[16];
                      *(_OWORD *)(v200 + 24) = *(_OWORD *)(v201 + 24);
                      *(_OWORD *)(v200 + 40) = *(_OWORD *)(v201 + 40);
                      v218 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                    + 32);
                      v219 = &v200[v218];
                      v220 = &v201[v218];
                      v221 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 32))(v219, v220, v221);
                    }
                    swift_storeEnumTagMultiPayload();
LABEL_116:
                    __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v214);
                    goto LABEL_119;
                  }
                }
                else
                {
                  if (!v216)
                  {
                    if (a1 == v384)
                      goto LABEL_119;
                    sub_248E25C30((uint64_t)v200, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
                    v237 = swift_getEnumCaseMultiPayload();
                    if (v237 == 2)
                    {
                      v247 = *((_OWORD *)v201 + 1);
                      *(_OWORD *)v200 = *(_OWORD *)v201;
                      *((_OWORD *)v200 + 1) = v247;
                      v248 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0)
                                    + 24);
                      v249 = &v200[v248];
                      v250 = &v201[v248];
                      v251 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 32))(v249, v250, v251);
                    }
                    else
                    {
                      if (v237 != 1)
                      {
                        v227 = *(_QWORD *)(v214 - 8);
                        goto LABEL_103;
                      }
                      *(_OWORD *)v200 = *(_OWORD *)v201;
                      v200[16] = v201[16];
                      *(_OWORD *)(v200 + 24) = *(_OWORD *)(v201 + 24);
                      *(_OWORD *)(v200 + 40) = *(_OWORD *)(v201 + 40);
                      v238 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                    + 32);
                      v239 = &v200[v238];
                      v240 = &v201[v238];
                      v241 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 32))(v239, v240, v241);
                    }
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_119;
                  }
                  sub_248E25C30((uint64_t)v200, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
                }
                v227 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475E40) - 8);
LABEL_103:
                memcpy(v200, v201, *(_QWORD *)(v227 + 64));
LABEL_119:
                v252 = *(int *)(v202 + 20);
                v253 = &v200[v252];
                v254 = &v201[v252];
                v255 = sub_2490E7ABC();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 40))(v253, v254, v255);
LABEL_120:
                v256 = v9[25];
                v257 = (uint64_t)&v7[v256];
                v258 = (uint64_t)&v8[v256];
                v259 = type metadata accessor for ToolKitProtoContainerDefinition(0);
                v260 = __swift_getEnumTagSinglePayload(v257, 1, v259);
                v261 = __swift_getEnumTagSinglePayload(v258, 1, v259);
                if (v260)
                {
                  if (!v261)
                  {
                    v262 = *(_OWORD *)(v258 + 16);
                    *(_OWORD *)v257 = *(_OWORD *)v258;
                    *(_OWORD *)(v257 + 16) = v262;
                    *(_WORD *)(v257 + 32) = *(_WORD *)(v258 + 32);
                    *(_OWORD *)(v257 + 40) = *(_OWORD *)(v258 + 40);
                    *(_OWORD *)(v257 + 56) = *(_OWORD *)(v258 + 56);
                    v263 = *(int *)(v259 + 40);
                    v264 = (_OWORD *)(v257 + v263);
                    v265 = (_OWORD *)(v258 + v263);
                    v266 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                    if (__swift_getEnumTagSinglePayload((uint64_t)v265, 1, v266))
                    {
                      v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
                      memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
                    }
                    else
                    {
                      *v264 = *v265;
                      v280 = *(int *)(v266 + 20);
                      v380 = (char *)v264 + v280;
                      v281 = (char *)v265 + v280;
                      v282 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v380, v281, v282);
                      __swift_storeEnumTagSinglePayload((uint64_t)v264, 0, 1, v266);
                    }
                    v283 = *(int *)(v259 + 44);
                    v284 = v257 + v283;
                    v285 = v258 + v283;
                    v286 = sub_2490E7ABC();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v284, v285, v286);
                    __swift_storeEnumTagSinglePayload(v257, 0, 1, v259);
LABEL_143:
                    v301 = v9[26];
                    v302 = (uint64_t)&v7[v301];
                    v303 = (uint64_t)&v8[v301];
                    v304 = __swift_getEnumTagSinglePayload((uint64_t)&v7[v301], 1, v259);
                    v305 = __swift_getEnumTagSinglePayload(v303, 1, v259);
                    if (v304)
                    {
                      if (!v305)
                      {
                        v306 = *(_OWORD *)(v303 + 16);
                        *(_OWORD *)v302 = *(_OWORD *)v303;
                        *(_OWORD *)(v302 + 16) = v306;
                        *(_WORD *)(v302 + 32) = *(_WORD *)(v303 + 32);
                        *(_OWORD *)(v302 + 40) = *(_OWORD *)(v303 + 40);
                        *(_OWORD *)(v302 + 56) = *(_OWORD *)(v303 + 56);
                        v307 = *(int *)(v259 + 40);
                        v308 = (_OWORD *)(v302 + v307);
                        v309 = (_OWORD *)(v303 + v307);
                        v310 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                        if (__swift_getEnumTagSinglePayload((uint64_t)v309, 1, v310))
                        {
                          v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
                          memcpy(v308, v309, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
                        }
                        else
                        {
                          *v308 = *v309;
                          v324 = *(int *)(v310 + 20);
                          v382 = (char *)v308 + v324;
                          v325 = (char *)v309 + v324;
                          v326 = sub_2490E7ABC();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v326 - 8) + 32))(v382, v325, v326);
                          __swift_storeEnumTagSinglePayload((uint64_t)v308, 0, 1, v310);
                        }
                        v327 = *(int *)(v259 + 44);
                        v328 = v302 + v327;
                        v329 = v303 + v327;
                        v330 = sub_2490E7ABC();
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v330 - 8) + 32))(v328, v329, v330);
                        __swift_storeEnumTagSinglePayload(v302, 0, 1, v259);
                        goto LABEL_166;
                      }
                      goto LABEL_149;
                    }
                    if (v305)
                    {
                      sub_248E25C30(v302, type metadata accessor for ToolKitProtoContainerDefinition);
LABEL_149:
                      v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
                      memcpy((void *)v302, (const void *)v303, *(_QWORD *)(*(_QWORD *)(v312 - 8) + 64));
LABEL_166:
                      v345 = v9[27];
                      v346 = &v7[v345];
                      v347 = &v8[v345];
                      v349 = *(_QWORD *)v347;
                      v348 = *((_QWORD *)v347 + 1);
                      *(_QWORD *)v346 = v349;
                      *((_QWORD *)v346 + 1) = v348;
                      swift_bridgeObjectRelease();
                      v350 = v9[28];
                      v351 = &v7[v350];
                      v352 = &v8[v350];
                      v354 = *(_QWORD *)v352;
                      v353 = *((_QWORD *)v352 + 1);
                      *(_QWORD *)v351 = v354;
                      *((_QWORD *)v351 + 1) = v353;
                      swift_bridgeObjectRelease();
                      v355 = v9[29];
                      v356 = &v7[v355];
                      v357 = &v8[v355];
                      v359 = *(_QWORD *)v357;
                      v358 = *((_QWORD *)v357 + 1);
                      *(_QWORD *)v356 = v359;
                      *((_QWORD *)v356 + 1) = v358;
                      swift_bridgeObjectRelease();
                      v360 = v9[30];
                      v361 = &v7[v360];
                      v362 = &v8[v360];
                      v364 = *(_QWORD *)v362;
                      v363 = *((_QWORD *)v362 + 1);
                      *(_QWORD *)v361 = v364;
                      *((_QWORD *)v361 + 1) = v363;
                      swift_bridgeObjectRelease();
                      v365 = v9[31];
                      v366 = &v7[v365];
                      v367 = &v8[v365];
                      v368 = sub_2490E7ABC();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v368 - 8) + 40))(v366, v367, v368);
LABEL_167:
                      a3 = v383;
                      v4 = v384;
                      goto LABEL_168;
                    }
                    v313 = *(_QWORD *)(v303 + 8);
                    *(_QWORD *)v302 = *(_QWORD *)v303;
                    *(_QWORD *)(v302 + 8) = v313;
                    swift_bridgeObjectRelease();
                    v314 = *(_QWORD *)(v303 + 24);
                    *(_QWORD *)(v302 + 16) = *(_QWORD *)(v303 + 16);
                    *(_QWORD *)(v302 + 24) = v314;
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v302 + 32) = *(_WORD *)(v303 + 32);
                    v315 = *(_QWORD *)(v303 + 48);
                    *(_QWORD *)(v302 + 40) = *(_QWORD *)(v303 + 40);
                    *(_QWORD *)(v302 + 48) = v315;
                    swift_bridgeObjectRelease();
                    v316 = *(_QWORD *)(v303 + 64);
                    *(_QWORD *)(v302 + 56) = *(_QWORD *)(v303 + 56);
                    *(_QWORD *)(v302 + 64) = v316;
                    swift_bridgeObjectRelease();
                    v317 = *(int *)(v259 + 40);
                    v318 = v302 + v317;
                    v319 = (_QWORD *)(v303 + v317);
                    v320 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                    v381 = v318;
                    LODWORD(v318) = __swift_getEnumTagSinglePayload(v318, 1, v320);
                    v321 = __swift_getEnumTagSinglePayload((uint64_t)v319, 1, v320);
                    if ((_DWORD)v318)
                    {
                      if (!v321)
                      {
                        *(_OWORD *)v381 = *(_OWORD *)v319;
                        v331 = *(int *)(v320 + 20);
                        v332 = v381 + v331;
                        v333 = (char *)v319 + v331;
                        v334 = sub_2490E7ABC();
                        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 32))(v332, v333, v334);
                        __swift_storeEnumTagSinglePayload(v381, 0, 1, v320);
                        goto LABEL_165;
                      }
                      v322 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475880) - 8)
                                       + 64);
                      v323 = (void *)v381;
                    }
                    else
                    {
                      if (!v321)
                      {
                        if (*(_QWORD *)(v381 + 8) == 1)
                        {
                          v335 = v319;
                          *(_OWORD *)v381 = *(_OWORD *)v319;
                        }
                        else
                        {
                          v336 = v319[1];
                          if (v336 == 1)
                          {
                            sub_248E00F4C(v381);
                            v335 = v319;
                            *(_OWORD *)v381 = *(_OWORD *)v319;
                          }
                          else
                          {
                            *(_QWORD *)v381 = *v319;
                            *(_QWORD *)(v381 + 8) = v336;
                            swift_bridgeObjectRelease();
                            v335 = v319;
                          }
                        }
                        v337 = *(int *)(v320 + 20);
                        v338 = v381 + v337;
                        v339 = (char *)v335 + v337;
                        v340 = sub_2490E7ABC();
                        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v340 - 8) + 40))(v338, v339, v340);
                        goto LABEL_165;
                      }
                      sub_248E25C30(v381, type metadata accessor for ToolKitProtoContainerDefinition.Device);
                      v322 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475880) - 8)
                                       + 64);
                      v323 = (void *)v381;
                    }
                    memcpy(v323, v319, v322);
LABEL_165:
                    v341 = *(int *)(v259 + 44);
                    v342 = v302 + v341;
                    v343 = v303 + v341;
                    v344 = sub_2490E7ABC();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v344 - 8) + 40))(v342, v343, v344);
                    goto LABEL_166;
                  }
LABEL_126:
                  v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
                  memcpy((void *)v257, (const void *)v258, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
                  goto LABEL_143;
                }
                if (v261)
                {
                  sub_248E25C30(v257, type metadata accessor for ToolKitProtoContainerDefinition);
                  goto LABEL_126;
                }
                v269 = *(_QWORD *)(v258 + 8);
                *(_QWORD *)v257 = *(_QWORD *)v258;
                *(_QWORD *)(v257 + 8) = v269;
                swift_bridgeObjectRelease();
                v270 = *(_QWORD *)(v258 + 24);
                *(_QWORD *)(v257 + 16) = *(_QWORD *)(v258 + 16);
                *(_QWORD *)(v257 + 24) = v270;
                swift_bridgeObjectRelease();
                *(_WORD *)(v257 + 32) = *(_WORD *)(v258 + 32);
                v271 = *(_QWORD *)(v258 + 48);
                *(_QWORD *)(v257 + 40) = *(_QWORD *)(v258 + 40);
                *(_QWORD *)(v257 + 48) = v271;
                swift_bridgeObjectRelease();
                v272 = *(_QWORD *)(v258 + 64);
                *(_QWORD *)(v257 + 56) = *(_QWORD *)(v258 + 56);
                *(_QWORD *)(v257 + 64) = v272;
                swift_bridgeObjectRelease();
                v273 = *(int *)(v259 + 40);
                v274 = v257 + v273;
                v275 = (_QWORD *)(v258 + v273);
                v276 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                v379 = v274;
                LODWORD(v274) = __swift_getEnumTagSinglePayload(v274, 1, v276);
                v277 = __swift_getEnumTagSinglePayload((uint64_t)v275, 1, v276);
                if ((_DWORD)v274)
                {
                  if (!v277)
                  {
                    *(_OWORD *)v379 = *(_OWORD *)v275;
                    v287 = *(int *)(v276 + 20);
                    v288 = v379 + v287;
                    v289 = (char *)v275 + v287;
                    v290 = sub_2490E7ABC();
                    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v288, v289, v290);
                    __swift_storeEnumTagSinglePayload(v379, 0, 1, v276);
                    goto LABEL_142;
                  }
                  v278 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475880) - 8)
                                   + 64);
                  v279 = (void *)v379;
                }
                else
                {
                  if (!v277)
                  {
                    if (*(_QWORD *)(v379 + 8) == 1)
                    {
                      v291 = v275;
                      *(_OWORD *)v379 = *(_OWORD *)v275;
                    }
                    else
                    {
                      v292 = v275[1];
                      if (v292 == 1)
                      {
                        sub_248E00F4C(v379);
                        v291 = v275;
                        *(_OWORD *)v379 = *(_OWORD *)v275;
                      }
                      else
                      {
                        *(_QWORD *)v379 = *v275;
                        *(_QWORD *)(v379 + 8) = v292;
                        swift_bridgeObjectRelease();
                        v291 = v275;
                      }
                    }
                    v293 = *(int *)(v276 + 20);
                    v294 = v379 + v293;
                    v295 = (char *)v291 + v293;
                    v296 = sub_2490E7ABC();
                    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 40))(v294, v295, v296);
                    goto LABEL_142;
                  }
                  sub_248E25C30(v379, type metadata accessor for ToolKitProtoContainerDefinition.Device);
                  v278 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475880) - 8)
                                   + 64);
                  v279 = (void *)v379;
                }
                memcpy(v279, v275, v278);
LABEL_142:
                v297 = *(int *)(v259 + 44);
                v298 = v257 + v297;
                v299 = v258 + v297;
                v300 = sub_2490E7ABC();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v300 - 8) + 40))(v298, v299, v300);
                goto LABEL_143;
              }
              sub_248E25C30((uint64_t)v188, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
            }
            v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
            memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
            goto LABEL_84;
          }
LABEL_25:
          v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
          memcpy((void *)v54, (const void *)v55, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          goto LABEL_78;
        }
        if (v58)
        {
          sub_248E25C30(v54, type metadata accessor for ToolKitProtoAppDefinition);
          goto LABEL_25;
        }
        v97 = *(_QWORD *)(v55 + 8);
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *(_QWORD *)(v54 + 8) = v97;
        swift_bridgeObjectRelease();
        v98 = *(_QWORD *)(v55 + 24);
        *(_QWORD *)(v54 + 16) = *(_QWORD *)(v55 + 16);
        *(_QWORD *)(v54 + 24) = v98;
        swift_bridgeObjectRelease();
        v99 = *(_QWORD *)(v55 + 40);
        *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
        *(_QWORD *)(v54 + 40) = v99;
        swift_bridgeObjectRelease();
        v100 = *(_QWORD *)(v55 + 56);
        *(_QWORD *)(v54 + 48) = *(_QWORD *)(v55 + 48);
        *(_QWORD *)(v54 + 56) = v100;
        swift_bridgeObjectRelease();
        v101 = *(_QWORD *)(v55 + 72);
        *(_QWORD *)(v54 + 64) = *(_QWORD *)(v55 + 64);
        *(_QWORD *)(v54 + 72) = v101;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v54 + 80) = *(_BYTE *)(v55 + 80);
        v102 = *(int *)(v56 + 40);
        v103 = v54 + v102;
        v104 = (_QWORD *)(v55 + v102);
        v105 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        v375 = v103;
        LODWORD(v103) = __swift_getEnumTagSinglePayload(v103, 1, v105);
        v106 = __swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105);
        if ((_DWORD)v103)
        {
          if (!v106)
          {
            *(_OWORD *)v375 = *(_OWORD *)v104;
            v168 = *(int *)(v105 + 20);
            v169 = v375 + v168;
            v170 = (char *)v104 + v168;
            v171 = sub_2490E7ABC();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v169, v170, v171);
            __swift_storeEnumTagSinglePayload(v375, 0, 1, v105);
            goto LABEL_77;
          }
          v107 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475248) - 8) + 64);
          v108 = (void *)v375;
        }
        else
        {
          if (!v106)
          {
            if (*(_QWORD *)(v375 + 8) == 1)
            {
              v172 = v104;
              *(_OWORD *)v375 = *(_OWORD *)v104;
            }
            else
            {
              v173 = v104[1];
              if (v173 == 1)
              {
                sub_248E00F4C(v375);
                v172 = v104;
                *(_OWORD *)v375 = *(_OWORD *)v104;
              }
              else
              {
                *(_QWORD *)v375 = *v104;
                *(_QWORD *)(v375 + 8) = v173;
                swift_bridgeObjectRelease();
                v172 = v104;
              }
            }
            v174 = *(int *)(v105 + 20);
            v175 = v375 + v174;
            v176 = (char *)v172 + v174;
            v177 = sub_2490E7ABC();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 40))(v175, v176, v177);
            goto LABEL_77;
          }
          sub_248E25C30(v375, type metadata accessor for ToolKitProtoAppDefinition.Device);
          v107 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254475248) - 8) + 64);
          v108 = (void *)v375;
        }
        memcpy(v108, v104, v107);
LABEL_77:
        v178 = *(int *)(v56 + 44);
        v179 = v54 + v178;
        v180 = v55 + v178;
        v181 = sub_2490E7ABC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 40))(v179, v180, v181);
        goto LABEL_78;
      }
      sub_248E25C30((uint64_t)v22, type metadata accessor for ToolKitProtoTypeInstance);
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_19;
  }
  if (!v11)
  {
    v383 = a3;
    v12 = *((_OWORD *)v8 + 1);
    *(_OWORD *)v7 = *(_OWORD *)v8;
    *((_OWORD *)v7 + 1) = v12;
    v7[32] = v8[32];
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
    *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
    v7[80] = v8[80];
    *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
    *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
    *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
    v13 = v9[19];
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v384 = v4;
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475218);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v31 = *(int *)(v16 + 20);
      v32 = &v14[v31];
      v33 = &v15[v31];
      v34 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    *(_OWORD *)&v7[v9[20]] = *(_OWORD *)&v8[v9[20]];
    v35 = v9[21];
    v36 = &v7[v35];
    v37 = &v8[v35];
    v38 = type metadata accessor for ToolKitProtoAppDefinition(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475298);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      v41 = *((_OWORD *)v37 + 3);
      *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
      *((_OWORD *)v36 + 3) = v41;
      *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
      v36[80] = v37[80];
      v42 = *(int *)(v38 + 40);
      v43 = &v36[v42];
      v44 = &v37[v42];
      v45 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475248);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v43 = *(_OWORD *)v44;
        v67 = *(int *)(v45 + 20);
        v374 = &v43[v67];
        v68 = &v44[v67];
        v69 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v374, v68, v69);
        __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
      }
      v70 = *(int *)(v38 + 44);
      v71 = &v36[v70];
      v72 = &v37[v70];
      v73 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
    }
    *(_OWORD *)&v7[v9[22]] = *(_OWORD *)&v8[v9[22]];
    v74 = v9[23];
    v75 = &v7[v74];
    v76 = &v8[v74];
    v77 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E70);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      v79 = *((_OWORD *)v76 + 1);
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v79;
      v80 = *(int *)(v77 + 24);
      v81 = &v75[v80];
      v82 = &v76[v80];
      v83 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
      __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v77);
    }
    v84 = v9[24];
    v85 = &v7[v84];
    v86 = &v8[v84];
    v87 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
    {
      v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E00);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
LABEL_50:
      v125 = v9[25];
      v126 = &v7[v125];
      v127 = &v8[v125];
      v128 = type metadata accessor for ToolKitProtoContainerDefinition(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
      {
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      else
      {
        v130 = *((_OWORD *)v127 + 1);
        *(_OWORD *)v126 = *(_OWORD *)v127;
        *((_OWORD *)v126 + 1) = v130;
        *((_WORD *)v126 + 16) = *((_WORD *)v127 + 16);
        *(_OWORD *)(v126 + 40) = *(_OWORD *)(v127 + 40);
        *(_OWORD *)(v126 + 56) = *(_OWORD *)(v127 + 56);
        v131 = *(int *)(v128 + 40);
        v132 = &v126[v131];
        v133 = &v127[v131];
        v134 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v134))
        {
          v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
          memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v132 = *(_OWORD *)v133;
          v136 = *(int *)(v134 + 20);
          v377 = &v132[v136];
          v137 = &v133[v136];
          v138 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v377, v137, v138);
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v134);
        }
        v139 = *(int *)(v128 + 44);
        v140 = &v126[v139];
        v141 = &v127[v139];
        v142 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v140, v141, v142);
        __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
      }
      v143 = v9[26];
      v144 = &v7[v143];
      v145 = &v8[v143];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v8[v143], 1, v128))
      {
        v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544758F0);
        memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      }
      else
      {
        v147 = *((_OWORD *)v145 + 1);
        *(_OWORD *)v144 = *(_OWORD *)v145;
        *((_OWORD *)v144 + 1) = v147;
        *((_WORD *)v144 + 16) = *((_WORD *)v145 + 16);
        *(_OWORD *)(v144 + 40) = *(_OWORD *)(v145 + 40);
        *(_OWORD *)(v144 + 56) = *(_OWORD *)(v145 + 56);
        v148 = *(int *)(v128 + 40);
        v149 = &v144[v148];
        v150 = &v145[v148];
        v151 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v151))
        {
          v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475880);
          memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v149 = *(_OWORD *)v150;
          v153 = *(int *)(v151 + 20);
          v378 = &v149[v153];
          v154 = &v150[v153];
          v155 = sub_2490E7ABC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v378, v154, v155);
          __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v151);
        }
        v156 = *(int *)(v128 + 44);
        v157 = &v144[v156];
        v158 = &v145[v156];
        v159 = sub_2490E7ABC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
        __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, v128);
      }
      *(_OWORD *)&v7[v9[27]] = *(_OWORD *)&v8[v9[27]];
      *(_OWORD *)&v7[v9[28]] = *(_OWORD *)&v8[v9[28]];
      *(_OWORD *)&v7[v9[29]] = *(_OWORD *)&v8[v9[29]];
      *(_OWORD *)&v7[v9[30]] = *(_OWORD *)&v8[v9[30]];
      v160 = v9[31];
      v161 = &v7[v160];
      v162 = &v8[v160];
      v163 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v161, v162, v163);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
      goto LABEL_167;
    }
    v89 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v89))
    {
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254475E40);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
LABEL_49:
      v121 = *(int *)(v87 + 20);
      v122 = &v85[v121];
      v123 = &v86[v121];
      v124 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v122, v123, v124);
      __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
      goto LABEL_50;
    }
    v91 = swift_getEnumCaseMultiPayload();
    if (v91 == 2)
    {
      v116 = *((_OWORD *)v86 + 1);
      *(_OWORD *)v85 = *(_OWORD *)v86;
      *((_OWORD *)v85 + 1) = v116;
      v117 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset(0) + 24);
      v118 = &v85[v117];
      v119 = &v86[v117];
      v120 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
    }
    else
    {
      if (v91 != 1)
      {
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        goto LABEL_48;
      }
      *(_OWORD *)v85 = *(_OWORD *)v86;
      v85[16] = v86[16];
      *(_OWORD *)(v85 + 24) = *(_OWORD *)(v86 + 24);
      *(_OWORD *)(v85 + 40) = *(_OWORD *)(v86 + 40);
      v92 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
      v93 = &v85[v92];
      v94 = &v86[v92];
      v95 = sub_2490E7ABC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
    }
    swift_storeEnumTagMultiPayload();
LABEL_48:
    __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v89);
    goto LABEL_49;
  }
LABEL_7:
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254476028);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_168:
  v369 = *(int *)(a3 + 24);
  v370 = (char *)a1 + v369;
  v371 = (char *)v4 + v369;
  v372 = sub_2490E7ABC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v372 - 8) + 40))(v370, v371, v372);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoToolDefinitionClosure.Version1()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248F0AAE8()
{
  __swift_get_extra_inhabitant_index_61Tm();
}

void __swift_get_extra_inhabitant_index_61Tm()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_80_2();
  if (v5)
  {
    OUTLINED_FUNCTION_45_6(*v0);
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_303_0(v1, v2, v3, v4);
    OUTLINED_FUNCTION_24_6();
    if (v5)
    {
      OUTLINED_FUNCTION_304_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_217_0();
    }
    v7 = OUTLINED_FUNCTION_94_1(v6);
    OUTLINED_FUNCTION_265(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitProtoToolDefinitionClosure.Version1()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248F0AB50()
{
  __swift_store_extra_inhabitant_index_62Tm();
}

void __swift_store_extra_inhabitant_index_62Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_43_5();
  if (v5)
  {
    OUTLINED_FUNCTION_380_0();
    OUTLINED_FUNCTION_93();
  }
  else
  {
    OUTLINED_FUNCTION_310_0(v0, v1, v2, v3, v4);
    OUTLINED_FUNCTION_32_0();
    if (v5)
    {
      OUTLINED_FUNCTION_317_0();
    }
    else
    {
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_225_0();
    }
    v7 = OUTLINED_FUNCTION_44_5(v6);
    OUTLINED_FUNCTION_264(v7, v8, v9, v10);
  }
}

void sub_248F0ABA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F0ABC8(a1, a2, a3, MEMORY[0x24BEE0158] + 64, &qword_254476030, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

void sub_248F0ABC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_299_0(a1, a5, a6);
  if (v6 <= 0x3F)
  {
    OUTLINED_FUNCTION_183_0();
    if (v7 <= 0x3F)
    {
      OUTLINED_FUNCTION_181_1();
      OUTLINED_FUNCTION_258_1();
    }
  }
  OUTLINED_FUNCTION_293();
}

unint64_t sub_248F0AC18()
{
  unint64_t result;

  result = qword_254475500;
  if (!qword_254475500)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoCoercionDefinition.CoercionDirection, &type metadata for ToolKitProtoCoercionDefinition.CoercionDirection);
    atomic_store(result, (unint64_t *)&qword_254475500);
  }
  return result;
}

unint64_t sub_248F0AC54()
{
  unint64_t result;

  result = qword_2544758B0;
  if (!qword_2544758B0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoContainerDefinition.TypeEnum, &type metadata for ToolKitProtoContainerDefinition.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_2544758B0);
  }
  return result;
}

unint64_t sub_248F0AC90()
{
  unint64_t result;

  result = qword_254475890;
  if (!qword_254475890)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoContainerDefinition.Origin, &type metadata for ToolKitProtoContainerDefinition.Origin);
    atomic_store(result, (unint64_t *)&qword_254475890);
  }
  return result;
}

unint64_t sub_248F0ACCC()
{
  unint64_t result;

  result = qword_254475258;
  if (!qword_254475258)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoAppDefinition.Origin, &type metadata for ToolKitProtoAppDefinition.Origin);
    atomic_store(result, (unint64_t *)&qword_254475258);
  }
  return result;
}

unint64_t sub_248F0AD08()
{
  unint64_t result;

  result = qword_254470180;
  if (!qword_254470180)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle, &type metadata for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle);
    atomic_store(result, (unint64_t *)&qword_254470180);
  }
  return result;
}

unint64_t sub_248F0AD44()
{
  unint64_t result;

  result = qword_254475EE0;
  if (!qword_254475EE0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags, &type metadata for ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags);
    atomic_store(result, (unint64_t *)&qword_254475EE0);
  }
  return result;
}

unint64_t sub_248F0AD80()
{
  unint64_t result;

  result = qword_254475E80;
  if (!qword_254475E80)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.AuthenticationPolicy, &type metadata for ToolKitProtoToolDefinition.Version1.AuthenticationPolicy);
    atomic_store(result, (unint64_t *)&qword_254475E80);
  }
  return result;
}

unint64_t sub_248F0ADBC()
{
  unint64_t result;

  result = qword_2577E7060;
  if (!qword_2577E7060)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.VisibilityFlag, &type metadata for ToolKitProtoToolDefinition.Version1.VisibilityFlag);
    atomic_store(result, (unint64_t *)&qword_2577E7060);
  }
  return result;
}

unint64_t sub_248F0ADF8()
{
  unint64_t result;

  result = qword_254475EA0;
  if (!qword_254475EA0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Flag, &type metadata for ToolKitProtoToolDefinition.Version1.Flag);
    atomic_store(result, (unint64_t *)&qword_254475EA0);
  }
  return result;
}

unint64_t sub_248F0AE34()
{
  unint64_t result;

  result = qword_254475E10;
  if (!qword_254475E10)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolType, &type metadata for ToolKitProtoToolDefinition.Version1.ToolType);
    atomic_store(result, (unint64_t *)&qword_254475E10);
  }
  return result;
}

unint64_t sub_248F0AE70()
{
  unint64_t result;

  result = qword_2577E7068;
  if (!qword_2577E7068)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.DeviceCapabilityType, &type metadata for ToolKitProtoRuntimeRequirement.DeviceCapability.DeviceCapabilityType);
    atomic_store(result, (unint64_t *)&qword_2577E7068);
  }
  return result;
}

unint64_t sub_248F0AEAC()
{
  unint64_t result;

  result = qword_254470138;
  if (!qword_254470138)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceState, &type metadata for ToolKitProtoRuntimeRequirement.DeviceState);
    atomic_store(result, (unint64_t *)&qword_254470138);
  }
  return result;
}

unint64_t sub_248F0AEE8()
{
  unint64_t result;

  result = qword_2577E7070;
  if (!qword_2577E7070)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoQuery.SortOrder, &type metadata for ToolKitProtoQuery.SortOrder);
    atomic_store(result, (unint64_t *)&qword_2577E7070);
  }
  return result;
}

unint64_t sub_248F0AF24()
{
  unint64_t result;

  result = qword_2577E7078;
  if (!qword_2577E7078)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoCompoundPredicate.Operator, &type metadata for ToolKitProtoCompoundPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_2577E7078);
  }
  return result;
}

unint64_t sub_248F0AF60()
{
  unint64_t result;

  result = qword_2577E7080;
  if (!qword_2577E7080)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType);
    atomic_store(result, (unint64_t *)&qword_2577E7080);
  }
  return result;
}

unint64_t sub_248F0AF9C()
{
  unint64_t result;

  result = qword_2577E7088;
  if (!qword_2577E7088)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType);
    atomic_store(result, (unint64_t *)&qword_2577E7088);
  }
  return result;
}

unint64_t sub_248F0AFD8()
{
  unint64_t result;

  result = qword_2577E7090;
  if (!qword_2577E7090)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType);
    atomic_store(result, (unint64_t *)&qword_2577E7090);
  }
  return result;
}

unint64_t sub_248F0B014()
{
  unint64_t result;

  result = qword_2577E7098;
  if (!qword_2577E7098)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRestrictionContext.DateExpressibleAs, &type metadata for ToolKitProtoRestrictionContext.DateExpressibleAs);
    atomic_store(result, (unint64_t *)&qword_2577E7098);
  }
  return result;
}

unint64_t sub_248F0B050()
{
  unint64_t result;

  result = qword_254475560;
  if (!qword_254475560)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRestrictionContext.PersonReachableAs, &type metadata for ToolKitProtoRestrictionContext.PersonReachableAs);
    atomic_store(result, (unint64_t *)&qword_254475560);
  }
  return result;
}

unint64_t sub_248F0B08C()
{
  unint64_t result;

  result = qword_2577E70A0;
  if (!qword_2577E70A0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.CalendarIdentifier, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.CalendarIdentifier);
    atomic_store(result, (unint64_t *)&qword_2577E70A0);
  }
  return result;
}

unint64_t sub_248F0B0C8()
{
  unint64_t result;

  result = qword_2577E70A8;
  if (!qword_2577E70A8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod.TypeEnum, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_2577E70A8);
  }
  return result;
}

unint64_t sub_248F0B104()
{
  unint64_t result;

  result = qword_2577E70B0;
  if (!qword_2577E70B0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal.Sign, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.Decimal.Sign);
    atomic_store(result, (unint64_t *)&qword_2577E70B0);
  }
  return result;
}

unint64_t sub_248F0B140()
{
  unint64_t result;

  result = qword_2544752E8;
  if (!qword_2544752E8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Kind, &type metadata for ToolKitProtoTypeDefinition.Version1.Enumeration.Kind);
    atomic_store(result, (unint64_t *)&qword_2544752E8);
  }
  return result;
}

unint64_t sub_248F0B17C()
{
  unint64_t result;

  result = qword_254470108;
  if (!qword_254470108)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.RuntimeFlags, &type metadata for ToolKitProtoTypeDefinition.Version1.Entity.RuntimeFlags);
    atomic_store(result, (unint64_t *)&qword_254470108);
  }
  return result;
}

unint64_t sub_248F0B1B8()
{
  unint64_t result;

  result = qword_254470110;
  if (!qword_254470110)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Primitive.MeasurementUnitType, &type metadata for ToolKitProtoTypeIdentifier.Primitive.MeasurementUnitType);
    atomic_store(result, (unint64_t *)&qword_254470110);
  }
  return result;
}

unint64_t sub_248F0B1F4()
{
  unint64_t result;

  result = qword_254470120;
  if (!qword_254470120)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoRuntimePlatform, &type metadata for ToolKitProtoRuntimePlatform);
    atomic_store(result, (unint64_t *)&qword_254470120);
  }
  return result;
}

void *OUTLINED_FUNCTION_1_11(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *OUTLINED_FUNCTION_2_11@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(a1 + 64));
}

void *OUTLINED_FUNCTION_3_9(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *OUTLINED_FUNCTION_4_13@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(a1 + 64));
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_10(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_13_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(a12, a11, a1);
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_15_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_16_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_17_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_18_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_19_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v1, 1, a1);
  return __swift_getEnumTagSinglePayload(v2, 1, a1);
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_25_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_28_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

void *OUTLINED_FUNCTION_30_3(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_31_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void *OUTLINED_FUNCTION_34_6(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_35_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v1, 1, a1);
  return __swift_getEnumTagSinglePayload(v2, 1, a1);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_37_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_39_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_41_9()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_42_8()
{
  return sub_2490E7F60();
}

uint64_t OUTLINED_FUNCTION_44_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_45_6@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_46_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_47_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_49_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_50_6(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_51_3(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_52_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_54_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

void OUTLINED_FUNCTION_55_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_248E25C30(v2, a2);
}

uint64_t OUTLINED_FUNCTION_57_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_58_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_59_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 40))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_60_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_62_4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_65_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_67_4(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_69_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_75_3(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

void OUTLINED_FUNCTION_76_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_248E25C30(a1, v1);
}

uint64_t OUTLINED_FUNCTION_77_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_83_0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_85_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_89_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_248E25C30(a1, v1);
}

uint64_t OUTLINED_FUNCTION_90_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_91_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v10, a10, a1);
}

uint64_t OUTLINED_FUNCTION_92_2()
{
  uint64_t v0;
  unint64_t v1;

  return sub_248D9F5CC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_93_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_94_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

void OUTLINED_FUNCTION_97_1(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v2 + a1;
  *(_QWORD *)v4 = v3;
  *(_BYTE *)(v4 + 8) = v1 & 1;
}

void *OUTLINED_FUNCTION_98_1(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_102_1()
{
  uint64_t v0;
  unint64_t v1;

  return sub_248D9F5CC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_103_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
}

uint64_t OUTLINED_FUNCTION_105_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_106_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v12, a12, a1);
}

uint64_t OUTLINED_FUNCTION_107_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(a12, a10, a1);
}

uint64_t OUTLINED_FUNCTION_108_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 24))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_110_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_248E25C94(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_111_2()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

__n128 OUTLINED_FUNCTION_112_1@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[2] = *a1;
  return result;
}

__n128 OUTLINED_FUNCTION_114_2()
{
  __n128 *v0;
  __n128 *v1;
  __n128 result;

  result = *v1;
  *v0 = *v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248D9F5CC(v0, *(_QWORD *)(v1 + 8));
}

uint64_t OUTLINED_FUNCTION_116_1(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_117_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_118_2(uint64_t a1)
{
  unint64_t v1;

  return sub_248D9F5CC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_120_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_122_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_getEnumTagSinglePayload(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_125_2()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_126_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_128_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_129_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v1, 1, a1);
  return __swift_getEnumTagSinglePayload(v2, 1, a1);
}

uint64_t OUTLINED_FUNCTION_130_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(a11, a10, a1);
}

uint64_t OUTLINED_FUNCTION_131_2(uint64_t a1)
{
  unint64_t v1;

  return sub_248D9F5CC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_132_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  unint64_t v10;

  return sub_248D9F5CC(*a10, v10);
}

uint64_t OUTLINED_FUNCTION_133_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return __swift_storeEnumTagSinglePayload(v12, 0, 1, a12);
}

void OUTLINED_FUNCTION_134_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_248E25C30(v2, a2);
}

void OUTLINED_FUNCTION_137_2(__n128 a1)
{
  __n128 *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_138_2()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_142_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_143_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

void OUTLINED_FUNCTION_144_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = v1 + a1;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = v2;
}

void OUTLINED_FUNCTION_146_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_248E25C30(v2, a2);
}

uint64_t OUTLINED_FUNCTION_148_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_149_1@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v1;

  return sub_248D9F5CC(*a1, v1);
}

uint64_t OUTLINED_FUNCTION_150_2()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v0[1];
  *v1 = *v0;
  v1[1] = v2;
  v1[2] = v0[2];
  type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  return swift_initStructMetadata();
}

void *OUTLINED_FUNCTION_153_2(void *a1, uint64_t a2, size_t a3)
{
  const void *v3;

  return memcpy(a1, v3, a3);
}

void OUTLINED_FUNCTION_154_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E25C94(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_155_2()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_157_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_248E25C30(a1, v1);
}

uint64_t OUTLINED_FUNCTION_158_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_160_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_161_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_162_1()
{
  uint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  return __swift_getEnumTagSinglePayload(v0, 1, v2);
}

uint64_t OUTLINED_FUNCTION_163_2()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_164_1()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

__n128 OUTLINED_FUNCTION_165_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __n128 *a10)
{
  __n128 *v10;
  __n128 result;

  result = *a10;
  v10[1] = *a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_166_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_167_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>, uint64_t a3, uint64_t a4)
{
  return a2(a1, a4);
}

uint64_t OUTLINED_FUNCTION_168_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_169_2()
{
  return 0;
}

void OUTLINED_FUNCTION_172_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

void OUTLINED_FUNCTION_173_2(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_248E352C4(v2 + a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_174_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

void OUTLINED_FUNCTION_176_2(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_248E352F4(v3, v2 + a1, v1);
}

void OUTLINED_FUNCTION_178_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_179_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t OUTLINED_FUNCTION_180(uint64_t a1)
{
  unint64_t v1;

  return sub_248D9F5CC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_181_1()
{
  return swift_initStructMetadata();
}

uint64_t OUTLINED_FUNCTION_182_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_183_0()
{
  return sub_2490E7ABC();
}

void *OUTLINED_FUNCTION_184_1(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void OUTLINED_FUNCTION_186_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_187_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_189_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_190_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_191_0@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v1;

  return sub_248D9F5CC(*a1, v1);
}

uint64_t OUTLINED_FUNCTION_192_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_193_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_195_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t), uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return a10(a12, a11, v12);
}

uint64_t OUTLINED_FUNCTION_198_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v13, a13, a1);
}

uint64_t OUTLINED_FUNCTION_199_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v11, a11, a1);
}

uint64_t OUTLINED_FUNCTION_200_1()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_201_1()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_202_1()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_203_1()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_207_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_208_1()
{
  return swift_bridgeObjectRetain();
}

unint64_t OUTLINED_FUNCTION_209_1()
{
  return sub_248E25C54();
}

uint64_t OUTLINED_FUNCTION_210_1()
{
  return type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
}

uint64_t OUTLINED_FUNCTION_212_1()
{
  return sub_2490E7F60();
}

uint64_t OUTLINED_FUNCTION_214_0()
{
  uint64_t v0;

  return sub_248D9E628(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_218_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_219_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_220_1()
{
  return type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
}

uint64_t OUTLINED_FUNCTION_221_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void OUTLINED_FUNCTION_222_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E25C94(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_224_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, 1, a3);
}

uint64_t OUTLINED_FUNCTION_226_1()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_227_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  return v10(a10, a9, v11);
}

uint64_t OUTLINED_FUNCTION_228_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(int *)(v1 + 20);
  v4 = v0 + v3;
  v5 = v2 + v3;
  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  __swift_getEnumTagSinglePayload(v4, 1, v6);
  return __swift_getEnumTagSinglePayload(v5, 1, v6);
}

void OUTLINED_FUNCTION_230_1()
{
  int v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = (v0 - 1);
}

uint64_t OUTLINED_FUNCTION_235_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + a1;
  v3 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  return __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
}

uint64_t OUTLINED_FUNCTION_236_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + a1;
  v3 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  return __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
}

uint64_t OUTLINED_FUNCTION_237_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + a1;
  v3 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  return __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
}

uint64_t OUTLINED_FUNCTION_238_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t), uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return a10(a12, a11, v12);
}

uint64_t OUTLINED_FUNCTION_239_1()
{
  type metadata accessor for ToolKitProtoTypeIdentifier(0);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_240_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return __swift_storeEnumTagSinglePayload(v4, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_241_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_243_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_244_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_246_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_247_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

void OUTLINED_FUNCTION_248_1(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  sub_248E352F4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_249_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_251_1()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_252_1()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_253_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_254_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_255_1(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

uint64_t OUTLINED_FUNCTION_256_1(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return 0;
}

uint64_t OUTLINED_FUNCTION_257_1()
{
  return type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
}

uint64_t OUTLINED_FUNCTION_258_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_259_1()
{
  return type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
}

uint64_t OUTLINED_FUNCTION_260_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_261_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_264_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E25C94(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_265_1()
{
  return sub_2490E7ABC();
}

uint64_t OUTLINED_FUNCTION_267_1@<X0>(unint64_t a1@<X8>)
{
  int v1;

  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  v1 = a1 - 1;
  if (v1 < 0)
    v1 = -1;
  return (v1 + 1);
}

void OUTLINED_FUNCTION_268_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_248E352F4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_270_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_271_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_272_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  __swift_getEnumTagSinglePayload(v0, 1, v2);
  return __swift_getEnumTagSinglePayload(v1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_274_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_278_1()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_279_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return swift_bridgeObjectRetain();
}

__n128 OUTLINED_FUNCTION_280_1@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_281_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_282_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_283_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_285_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  return v11(a11, a10, v12);
}

void OUTLINED_FUNCTION_286_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_248E34CEC(v3, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
}

uint64_t OUTLINED_FUNCTION_287_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v9, a9, a1);
}

uint64_t OUTLINED_FUNCTION_288_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

void OUTLINED_FUNCTION_289_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_248E34CEC(v3, v4, a3);
}

void OUTLINED_FUNCTION_290_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_248DB939C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_291_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 24);
  v3 = type metadata accessor for ToolKitProtoTypeInstance(0);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

uint64_t OUTLINED_FUNCTION_293_1()
{
  return sub_2490E7F60();
}

uint64_t OUTLINED_FUNCTION_294_1()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_295_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248D9F5CC(v0, *(_QWORD *)(v1 + 8));
}

void OUTLINED_FUNCTION_299_0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_248E0EBD8(319, a2, a3);
}

void OUTLINED_FUNCTION_302_0()
{
  unint64_t *v0;
  int v1;
  uint64_t v2;

  v2 = (~v1 >> 3) & 0xF | (16 * (~v1 & 0x7F));
  *v0 = (v2 | (v2 << 57)) & 0xF000000000000007;
}

uint64_t OUTLINED_FUNCTION_303_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return __swift_instantiateConcreteTypeFromMangledName(a4);
}

uint64_t OUTLINED_FUNCTION_305_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_308()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_309_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_310_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_311_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_312_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  return v12(v11, a10, v10);
}

uint64_t OUTLINED_FUNCTION_313_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_314_0()
{
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

uint64_t OUTLINED_FUNCTION_315_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_318()
{
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

uint64_t OUTLINED_FUNCTION_321()
{
  return swift_initStructMetadata();
}

uint64_t OUTLINED_FUNCTION_322_0()
{
  return swift_initStructMetadata();
}

uint64_t OUTLINED_FUNCTION_325_0()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_326_0()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_327_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_328_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_329_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_330_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_331_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_332_0()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_333_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_334_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_335_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_336_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_337_0()
{
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

void OUTLINED_FUNCTION_338_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_339_0()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_340_0()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_341_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_342_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void OUTLINED_FUNCTION_343_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

void OUTLINED_FUNCTION_344_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E25C94(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_347_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_348_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_349_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_350_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8) >> 60;
  if (((4 * (_DWORD)v1) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v1) & 0xC | (v1 >> 2));
  else
    return 0;
}

uint64_t OUTLINED_FUNCTION_351_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  return sub_248D9E628(v4, v5);
}

uint64_t OUTLINED_FUNCTION_352_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_353_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_248D9F5CC(v2, a2);
}

uint64_t OUTLINED_FUNCTION_355_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = type metadata accessor for ToolKitProtoTypeInstance(0);
  return __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
}

uint64_t OUTLINED_FUNCTION_357_0()
{
  return type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
}

uint64_t OUTLINED_FUNCTION_358_0()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_359_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_361_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_362_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_363_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_364_0()
{
  uint64_t *v0;
  _OWORD *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v0;
  v3 = v0[1];
  *(_OWORD *)v0 = *v1;
  return sub_248D9E628(v2, v3);
}

uint64_t OUTLINED_FUNCTION_365_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248D9F5CC(v1, *(_QWORD *)(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_366_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_371_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_372_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_373_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_374_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_375(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_376_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_377_0()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_378_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_379_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_380_0()
{
  int v0;
  _QWORD *v1;

  *v1 = (v0 - 1);
}

void OUTLINED_FUNCTION_381_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352C4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_382_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_383_0()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_384_0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_248E25C30(v0, v1);
}

void OUTLINED_FUNCTION_385_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_386_0()
{
  return sub_2490E7F60();
}

uint64_t OUTLINED_FUNCTION_387_0()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_388_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_389_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v2;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_392(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_248E25C30(a1, v1);
}

uint64_t OUTLINED_FUNCTION_393_0()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_394_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

void OUTLINED_FUNCTION_395_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_396_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_398_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_399()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_400_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_402(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_403_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_404_0()
{
  return type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
}

uint64_t OUTLINED_FUNCTION_405_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_406_0()
{
  return type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
}

uint64_t OUTLINED_FUNCTION_407_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_408_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_409_0()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_410_0()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
}

void OUTLINED_FUNCTION_411_0(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = a1 & 1;
}

uint64_t OUTLINED_FUNCTION_414_0()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_415_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

void OUTLINED_FUNCTION_416_0(uint64_t a1@<X8>)
{
  char v1;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = v1;
}

uint64_t OUTLINED_FUNCTION_417_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v0 + 24);
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_418_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

void OUTLINED_FUNCTION_423_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_424_0()
{
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

uint64_t OUTLINED_FUNCTION_427_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_429_0()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_430_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_431_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_432_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  __swift_storeEnumTagSinglePayload(v4, 1, 1, a4);
  return 0;
}

uint64_t OUTLINED_FUNCTION_433_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[3];
  v0[2] = v1[2];
  v0[3] = v3;
  return type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0);
}

uint64_t OUTLINED_FUNCTION_434_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_435_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_436_0()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  v0[2] = v1[2];
}

uint64_t OUTLINED_FUNCTION_437_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_438_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_439_0()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  v0[1] = v1[1];
  v0[2] = v1[2];
}

uint64_t OUTLINED_FUNCTION_441_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_442_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_444_0()
{
  return type metadata accessor for ToolKitProtoTypedValue.DeferredValue(0);
}

uint64_t OUTLINED_FUNCTION_445_0()
{
  return type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity(0);
}

uint64_t OUTLINED_FUNCTION_446_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_447_0()
{
  return type metadata accessor for ToolKitProtoContainerDefinition(0);
}

uint64_t OUTLINED_FUNCTION_448_0()
{
  return type metadata accessor for ToolKitProtoTypedValue(0);
}

uint64_t OUTLINED_FUNCTION_449_0()
{
  return type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
}

uint64_t OUTLINED_FUNCTION_450_0()
{
  return type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration(0);
}

void OUTLINED_FUNCTION_452_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  sub_248E25C30(v4, a4);
}

void OUTLINED_FUNCTION_454_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_248E352F4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_455_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  *v1 = v0;
  v1[1] = v2;
  return sub_248D9E628(v3, v4);
}

uint64_t OUTLINED_FUNCTION_457_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = a2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_459_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  return v14(a13, a12, v13);
}

uint64_t OUTLINED_FUNCTION_460_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_469_0()
{
  return swift_getEnumCaseMultiPayload();
}

void *OUTLINED_FUNCTION_470_0(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *OUTLINED_FUNCTION_471_0(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_472_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return __swift_instantiateConcreteTypeFromMangledName(a4);
}

uint64_t OUTLINED_FUNCTION_474_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_475_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_248E25C30(a1, v1);
}

void OUTLINED_FUNCTION_476_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E25C94(a1, v3, a3);
}

unint64_t OUTLINED_FUNCTION_477_0()
{
  return sub_248E25C54();
}

uint64_t OUTLINED_FUNCTION_478_0()
{
  return type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
}

void OUTLINED_FUNCTION_479_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_248E352F4(v3, v4, a3);
}

void OUTLINED_FUNCTION_480_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_248E352F4(v3, v4, a3);
}

_BYTE *OUTLINED_FUNCTION_481_0(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void OUTLINED_FUNCTION_482_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_248E25C30(a1, v1);
}

uint64_t OUTLINED_FUNCTION_484_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_485_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_486_0(uint64_t a1)
{
  return sub_248D9E628(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t OUTLINED_FUNCTION_487_0()
{
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

void OUTLINED_FUNCTION_488_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

void OUTLINED_FUNCTION_489_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

void OUTLINED_FUNCTION_490_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

void OUTLINED_FUNCTION_491_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_248E25C30(v2, a2);
}

void OUTLINED_FUNCTION_492_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_248E25C30(v2, a2);
}

uint64_t OUTLINED_FUNCTION_493_0()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_497_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  return v12(v13, a11, v11);
}

uint64_t OUTLINED_FUNCTION_498_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_499_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_500_0(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return 0;
}

uint64_t OUTLINED_FUNCTION_502_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_503_0(uint64_t a1, uint64_t a2)
{
  return sub_248D9F5CC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t OUTLINED_FUNCTION_504_0()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_505_0()
{
  return type metadata accessor for ToolKitProtoQuery(0);
}

uint64_t OUTLINED_FUNCTION_506_0()
{
  return type metadata accessor for ToolKitProtoComparisonPredicate(0);
}

uint64_t OUTLINED_FUNCTION_507_0()
{
  return type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(0);
}

uint64_t OUTLINED_FUNCTION_508_0()
{
  return type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
}

uint64_t OUTLINED_FUNCTION_509_0()
{
  return type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod(0);
}

uint64_t OUTLINED_FUNCTION_510_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_511_0()
{
  return type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
}

uint64_t OUTLINED_FUNCTION_512_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_513_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_514_0(__n128 a1)
{
  __n128 *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_515_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_516_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_518_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  return v13(a13, a12, v14);
}

__n128 OUTLINED_FUNCTION_521_0()
{
  __n128 *v0;
  __n128 *v1;
  __n128 result;

  result = *v0;
  v1[1] = *v0;
  return result;
}

__n128 OUTLINED_FUNCTION_522_0()
{
  __n128 *v0;
  __n128 *v1;
  __n128 result;

  result = *v0;
  v1[1] = *v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_523_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_526_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_527_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_528_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  return v11(a11, a10, v12);
}

__n128 OUTLINED_FUNCTION_529_0()
{
  __n128 *v0;
  __n128 *v1;
  __n128 result;

  result = *v1;
  *v0 = *v1;
  v0[1].n128_u64[0] = v1[1].n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_530()
{
  void (*v0)(uint64_t);
  unint64_t *v1;

  sub_248E0EBD8(319, v1, v0);
}

void OUTLINED_FUNCTION_535_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_248E25C30(v2, a2);
}

uint64_t OUTLINED_FUNCTION_537_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_538_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_539_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_540_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248D9F5CC(v1, *(_QWORD *)(v0 + 8));
}

void OUTLINED_FUNCTION_541(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v11 + 16) = a10;
  *(_QWORD *)(v11 + 24) = v10;
}

void OUTLINED_FUNCTION_542(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

void OUTLINED_FUNCTION_543(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E34CEC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_544()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_545()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_546()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_548()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_549()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_550()
{
  return _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
}

uint64_t OUTLINED_FUNCTION_551(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;

  return a4(v4);
}

void OUTLINED_FUNCTION_552(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E34CEC(a1, a2, v2);
}

void OUTLINED_FUNCTION_553()
{
  sub_248DA3D60();
}

unint64_t OUTLINED_FUNCTION_554()
{
  return sub_248E25C54();
}

uint64_t OUTLINED_FUNCTION_555()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_556()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_558()
{
  __n128 *v0;
  __n128 *v1;
  __n128 result;

  result = *v1;
  *v0 = *v1;
  v0[1].n128_u64[0] = v1[1].n128_u64[0];
  return result;
}

unint64_t OUTLINED_FUNCTION_559()
{
  return sub_248E25C54();
}

uint64_t OUTLINED_FUNCTION_560()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_561()
{
  __n128 *v0;
  __n128 *v1;
  __n128 result;

  result = *v1;
  *v0 = *v1;
  return result;
}

void OUTLINED_FUNCTION_562()
{
  static ToolKitProtoTypeInstance.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_563(uint64_t a1)
{
  uint64_t v1;

  return static ToolKitProtoTypedValue.== infix(_:_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

__n128 OUTLINED_FUNCTION_568(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  return result;
}

_QWORD *OUTLINED_FUNCTION_569(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *result = *a2;
  result[1] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_570()
{
  return type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue(0);
}

uint64_t OUTLINED_FUNCTION_571()
{
  return type metadata accessor for ToolKitProtoAppDefinition(0);
}

uint64_t OUTLINED_FUNCTION_572()
{
  return type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
}

uint64_t OUTLINED_FUNCTION_573()
{
  return type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
}

uint64_t OUTLINED_FUNCTION_574()
{
  return type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount(0);
}

uint64_t OUTLINED_FUNCTION_575()
{
  return type metadata accessor for ToolKitProtoRestrictionContext.InSet(0);
}

uint64_t OUTLINED_FUNCTION_576()
{
  return type metadata accessor for ToolKitProtoComparisonPredicate.Template(0);
}

uint64_t OUTLINED_FUNCTION_577()
{
  return type metadata accessor for ToolKitProtoCoercionDefinition(0);
}

uint64_t OUTLINED_FUNCTION_578()
{
  return type metadata accessor for ToolKitProtoTypedValue.EnumerationValue(0);
}

uint64_t OUTLINED_FUNCTION_579()
{
  return type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
}

uint64_t OUTLINED_FUNCTION_580(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_582(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248E25C94(a1, a2, v2);
}

void OUTLINED_FUNCTION_583(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_585(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_248D9E628(*(_QWORD *)(v2 + 32), a2);
}

uint64_t OUTLINED_FUNCTION_586(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_248D9E628(*(_QWORD *)(v2 + 16), a2);
}

uint64_t OUTLINED_FUNCTION_587()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_588(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_589(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  return v13(a13, a12, v14);
}

void OUTLINED_FUNCTION_590()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
}

void OUTLINED_FUNCTION_591()
{
  uint64_t v0;

  *(_QWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0xE000000000000000;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_BYTE *)(v0 + 32) = 0;
}

void OUTLINED_FUNCTION_592(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_248E25C94(a1, *(_QWORD *)(v3 - 88), a3);
}

_QWORD *OUTLINED_FUNCTION_593(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  return v11(a11, a10, v12);
}

uint64_t OUTLINED_FUNCTION_595(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  return v12(a11, a10, v11);
}

void OUTLINED_FUNCTION_596(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_248E352F4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_597()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_598(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

void OUTLINED_FUNCTION_599()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
}

uint64_t OUTLINED_FUNCTION_602(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  *v1 = *v2;
  v1[1] = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_604()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v2 + 20) + 8) = v0;
}

uint64_t OUTLINED_FUNCTION_605()
{
  return type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar(0);
}

uint64_t OUTLINED_FUNCTION_606()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_607()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_608()
{
  uint64_t v0;
  unint64_t v1;

  return sub_248D9E628(v0, v1);
}

uint64_t OUTLINED_FUNCTION_611()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *v0;
  v4 = v0[1];
  *v0 = v1;
  v0[1] = v2;
  return sub_248D9E628(v3, v4);
}

_BYTE *OUTLINED_FUNCTION_612(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

void OUTLINED_FUNCTION_613()
{
  _QWORD **v0;
  _QWORD **v1;

  sub_248DA0BF8(*v1, *v0);
}

uint64_t OUTLINED_FUNCTION_614()
{
  return 0;
}

void OUTLINED_FUNCTION_618(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

void OUTLINED_FUNCTION_621(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_248E352F4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_622()
{
  uint64_t v0;
  unint64_t v1;

  return sub_248D9E628(v0, v1);
}

uint64_t OUTLINED_FUNCTION_623()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_625(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_626(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_627(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_628()
{
  return type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
}

uint64_t OUTLINED_FUNCTION_629()
{
  return type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0);
}

uint64_t OUTLINED_FUNCTION_630()
{
  return type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
}

uint64_t OUTLINED_FUNCTION_631()
{
  return type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0);
}

uint64_t OUTLINED_FUNCTION_632()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_633()
{
  unsigned __int8 *v0;
  unsigned int v1;

  v1 = *v0;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

uint64_t sub_248F0DB44@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 16) && (v4 = OUTLINED_FUNCTION_29_7(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v2 + 56);
    v8 = OUTLINED_FUNCTION_27_6();
    sub_248DB26E0(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for ConcreteResolvable);
    return OUTLINED_FUNCTION_264(a2, 0, 1, v8);
  }
  else
  {
    v10 = OUTLINED_FUNCTION_27_6();
    return OUTLINED_FUNCTION_264(a2, 1, 1, v10);
  }
}

void sub_248F0DBC8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = sub_248DFDCCC(a1);
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_37_8(v2);
  }
  OUTLINED_FUNCTION_1();
}

void sub_248F0DC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a3 + 16))
  {
    v3 = OUTLINED_FUNCTION_29_7();
    if ((v4 & 1) != 0)
      OUTLINED_FUNCTION_37_8(v3);
  }
  OUTLINED_FUNCTION_1();
}

void sub_248F0DC34(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_248DFDD70(a1), (v6 & 1) != 0))
  {
    OUTLINED_FUNCTION_14_9(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
    OUTLINED_FUNCTION_1();
  }
}

void sub_248F0DC7C(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a1 + 16) && (v4 = OUTLINED_FUNCTION_29_7(), (v5 & 1) != 0))
  {
    OUTLINED_FUNCTION_14_9(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)a2);
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
    OUTLINED_FUNCTION_1();
  }
}

void sub_248F0DCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_29_7();
    if ((v3 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_1();
}

void ToolInvocation.init(definition:parameterValuesByKey:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_10();
  v3 = v2;
  v5 = v4;
  v18 = v6;
  v7 = (int *)OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_17_0();
  v11 = v10 - v9;
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_99();
  sub_248DB26E0(v5, v1, type metadata accessor for ToolDefinition);
  v13 = v7[7];
  *(_BYTE *)(v11 + v13) = 6;
  _s7ToolKit0A8DatabaseC7VersionVAEycfC_0();
  v14 = v11 + v7[5];
  sub_248DB26E0(v1, v14, type metadata accessor for ToolDefinition);
  sub_248F0F290(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_61(v1);
    OUTLINED_FUNCTION_37();
    v16 = OUTLINED_FUNCTION_28_0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v11, v16);
    OUTLINED_FUNCTION_61(v14);
  }
  else
  {
    v17 = v15;
    sub_248DB270C(v1, type metadata accessor for ToolDefinition);
    OUTLINED_FUNCTION_37();
    *(_QWORD *)(v11 + v7[6]) = v17;
    *(_BYTE *)(v11 + v13) = 6;
    sub_248DB44D0(v11, v18, (uint64_t (*)(_QWORD))type metadata accessor for ToolInvocation);
  }
  sub_248DB270C(v5, type metadata accessor for ToolDefinition);
  OUTLINED_FUNCTION_1_1();
}

uint64_t static ToolInvocationError.== infix(_:_:)()
{
  return 1;
}

void ToolInvocationError.hash(into:)()
{
  sub_2490E88FC();
  OUTLINED_FUNCTION_1();
}

void ToolInvocationError.hashValue.getter()
{
  OUTLINED_FUNCTION_44();
  sub_2490E88FC();
  sub_2490E8920();
  OUTLINED_FUNCTION_35();
}

void sub_248F0DEA4()
{
  ToolInvocationError.hashValue.getter();
}

void sub_248F0DEB8()
{
  ToolInvocationError.hash(into:)();
}

uint64_t ToolInvocation.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void ToolInvocation.definition.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_4_14();
  sub_248DB26E0(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ToolDefinition);
  OUTLINED_FUNCTION_1();
}

uint64_t ToolInvocation.parameterValuesByKey.getter()
{
  OUTLINED_FUNCTION_4_14();
  return swift_bridgeObjectRetain();
}

void ToolInvocation.parameterValuesByKey.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_4_14() + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_93();
}

uint64_t (*ToolInvocation.parameterValuesByKey.modify())(_QWORD)
{
  OUTLINED_FUNCTION_4_14();
  return nullsub_1;
}

void ToolInvocation.options.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_4_14() + 28));
  OUTLINED_FUNCTION_1();
}

void ToolInvocation.options.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_4_14() + 28)) = v2;
  OUTLINED_FUNCTION_1();
}

uint64_t (*ToolInvocation.options.modify())(_QWORD)
{
  OUTLINED_FUNCTION_4_14();
  return nullsub_1;
}

void ToolInvocation.init(definition:parameterValuesByKey:options:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_10();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = *v7;
  v9 = (int *)OUTLINED_FUNCTION_4_14();
  v10 = v9[7];
  *(_BYTE *)(v6 + v10) = 6;
  _s7ToolKit0A8DatabaseC7VersionVAEycfC_0();
  v11 = v6 + v9[5];
  sub_248DB26E0(v4, v11, type metadata accessor for ToolDefinition);
  sub_248F0F290(v2);
  if (v0)
  {
    sub_248DB270C(v4, type metadata accessor for ToolDefinition);
    OUTLINED_FUNCTION_37();
    v13 = OUTLINED_FUNCTION_28_0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
    sub_248DB270C(v11, type metadata accessor for ToolDefinition);
  }
  else
  {
    v14 = v12;
    sub_248DB270C(v4, type metadata accessor for ToolDefinition);
    OUTLINED_FUNCTION_37();
    *(_QWORD *)(v6 + v9[6]) = v14;
    *(_BYTE *)(v6 + v10) = v8;
  }
  OUTLINED_FUNCTION_1_1();
}

uint64_t type metadata accessor for ToolInvocation()
{
  uint64_t result;

  result = qword_2577E7190;
  if (!qword_2577E7190)
    return swift_getSingletonMetadata();
  return result;
}

void ToolInvocation.init(localToolId:parameterValuesByKey:)()
{
  ToolInvocation.init(localToolId:parameterValuesByKey:options:)();
}

void ToolInvocation.init(localToolId:parameterValuesByKey:options:)()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[4];
  int v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_10();
  v2 = v1;
  v39 = v3;
  v40 = v4;
  v37 = v5;
  v38 = OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_17_0();
  v9 = v8 - v7;
  v10 = OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_5_0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v32[-v15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4818);
  OUTLINED_FUNCTION_5_0();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = &v32[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v22 = &v32[-v21];
  v23 = *v2;
  type metadata accessor for ToolDatabase();
  ToolDatabase.__allocating_init(readonly:)(0);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = v16;
    v36 = v20;
    v33 = v23;
    v34 = v14;
    v24 = v40;
    ToolDatabase.localTool(matching:locale:)();
    swift_bridgeObjectRelease();
    v25 = (uint64_t)v36;
    sub_248F0F720((uint64_t)v22, (uint64_t)v36);
    if (__swift_getEnumTagSinglePayload(v25, 1, v10) == 1)
    {
      OUTLINED_FUNCTION_169();
      sub_248DB939C(v25, &qword_2577E4818);
      sub_248F0F768();
      swift_allocError();
      swift_willThrow();
      OUTLINED_FUNCTION_22_3();
    }
    else
    {
      v26 = (uint64_t)v35;
      sub_248DB44D0(v25, (uint64_t)v35, type metadata accessor for ToolDefinition);
      v27 = (uint64_t)v34;
      sub_248DB26E0(v26, (uint64_t)v34, type metadata accessor for ToolDefinition);
      v28 = v9;
      v29 = v38;
      v41 = *(int *)(v38 + 28);
      *(_BYTE *)(v28 + v41) = 6;
      _s7ToolKit0A8DatabaseC7VersionVAEycfC_0();
      sub_248DB26E0(v27, v28 + *(int *)(v29 + 20), type metadata accessor for ToolDefinition);
      sub_248F0F290(v24);
      v31 = v30;
      OUTLINED_FUNCTION_61(v27);
      OUTLINED_FUNCTION_169();
      *(_QWORD *)(v28 + *(int *)(v29 + 24)) = v31;
      *(_BYTE *)(v28 + v41) = v33;
      sub_248DB44D0(v28, v37, (uint64_t (*)(_QWORD))type metadata accessor for ToolInvocation);
      OUTLINED_FUNCTION_22_3();
      sub_248DB270C((uint64_t)v35, type metadata accessor for ToolDefinition);
    }
    sub_248DB939C((uint64_t)v22, &qword_2577E4818);
  }
  OUTLINED_FUNCTION_1_1();
}

unint64_t ToolInvocation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E70C0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_99();
  v3 = OUTLINED_FUNCTION_4_14();
  v31 = v0;
  v4 = *(_QWORD *)(v0 + *(int *)(v3 + 20) + 40);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v30 = *(int *)(v3 + 24);
    OUTLINED_FUNCTION_124_0();
    v6 = v4 + 72;
    v7 = MEMORY[0x24BEE4AF8];
    v32 = v1;
    do
    {
      v8 = *(_QWORD *)(v6 - 32);
      v33 = *(_QWORD *)(v6 - 40);
      v9 = *(_QWORD *)(v31 + v30);
      v35 = *(_QWORD *)(v6 + 32);
      v34 = *(_QWORD *)(v6 + 40);
      if (*(_QWORD *)(v9 + 16))
      {
        swift_retain();
        OUTLINED_FUNCTION_124_0();
        OUTLINED_FUNCTION_70_2();
        OUTLINED_FUNCTION_189();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_21_10();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_70_2();
        v10 = v33;
        v11 = sub_248DFDC18();
        v12 = v8;
        if ((v13 & 1) != 0)
        {
          v14 = v11;
          v15 = *(_QWORD *)(v9 + 56);
          v16 = OUTLINED_FUNCTION_27_6();
          sub_248DB26E0(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v32, (uint64_t (*)(_QWORD))type metadata accessor for ConcreteResolvable);
          v17 = v32;
          v18 = 0;
          v19 = 1;
          v20 = v16;
        }
        else
        {
          OUTLINED_FUNCTION_27_6();
          v17 = OUTLINED_FUNCTION_40_6();
        }
        __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
        OUTLINED_FUNCTION_31_0();
      }
      else
      {
        type metadata accessor for ConcreteResolvable();
        v21 = OUTLINED_FUNCTION_40_6();
        __swift_storeEnumTagSinglePayload(v21, v22, v23, v24);
        swift_retain();
        OUTLINED_FUNCTION_124_0();
        OUTLINED_FUNCTION_70_2();
        OUTLINED_FUNCTION_189();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_21_10();
        swift_bridgeObjectRetain();
        v12 = v8;
        v10 = v33;
      }
      OUTLINED_FUNCTION_124_0();
      sub_2490E802C();
      sub_2490E8428();
      sub_2490E802C();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_41_10();
        v7 = v27;
      }
      v25 = *(_QWORD *)(v7 + 16);
      if (v25 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        OUTLINED_FUNCTION_41_10();
        v7 = v28;
      }
      *(_QWORD *)(v7 + 16) = v25 + 1;
      v26 = v7 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v10;
      *(_QWORD *)(v26 + 40) = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31_0();
      swift_bridgeObjectRelease();
      swift_release();
      sub_248E06264(v35, v34);
      swift_bridgeObjectRelease();
      sub_248DB939C(v32, &qword_2577E70C0);
      v6 += 104;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25447A658);
  sub_248DEBC3C();
  sub_2490E7F54();
  swift_bridgeObjectRelease();
  sub_2490E853C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_0();
  sub_248D9D9D8(&qword_254478540, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_2490E880C();
  sub_2490E802C();
  swift_bridgeObjectRelease();
  sub_2490E802C();
  OUTLINED_FUNCTION_158();
  sub_2490E802C();
  OUTLINED_FUNCTION_175();
  sub_2490E802C();
  sub_2490E802C();
  OUTLINED_FUNCTION_31_0();
  sub_2490E802C();
  return 0xD000000000000013;
}

void ToolInvocation.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = v1;
  OUTLINED_FUNCTION_28_0();
  sub_248D9D9D8(&qword_254470228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2490E7F48();
  v4 = OUTLINED_FUNCTION_4_14();
  ToolDefinition.hash(into:)(a1);
  v5 = *(_QWORD *)(v1 + *(int *)(v4 + 24));
  swift_bridgeObjectRetain();
  sub_248F0FC30(a1, v5);
  swift_bridgeObjectRelease();
  v6 = *(unsigned __int8 *)(v2 + *(int *)(v4 + 28));
  if (v6 == 6 || (OUTLINED_FUNCTION_38(), v6 == 5))
  {
    OUTLINED_FUNCTION_38();
  }
  else
  {
    OUTLINED_FUNCTION_38();
    sub_2490E88FC();
  }
  OUTLINED_FUNCTION_93();
}

void static ToolInvocation.== infix(_:_:)()
{
  char v0;

  if ((_s7ToolKit0A8DatabaseC7VersionV2eeoiySbAE_AEtFZ_0() & 1) != 0)
  {
    OUTLINED_FUNCTION_4_14();
    static ToolDefinition.== infix(_:_:)();
    if ((v0 & 1) != 0)
      sub_24903E114();
  }
  OUTLINED_FUNCTION_93();
}

uint64_t sub_248F0E9FC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6974696E69666564 && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_2490E883C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x8000000249131FD0 || (sub_2490E883C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v8 = sub_2490E883C();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_248F0EBB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248F0EBF0 + 4 * byte_2490F77E0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_248F0EBF0()
{
  return 0x6974696E69666564;
}

unint64_t sub_248F0EC0C()
{
  return 0xD000000000000014;
}

uint64_t sub_248F0EC28()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_248F0EC40()
{
  unsigned __int8 *v0;

  return sub_248F0EBB4(*v0);
}

uint64_t sub_248F0EC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F0E9FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F0EC6C()
{
  sub_248F10110();
  return sub_2490E8968();
}

uint64_t sub_248F0EC94()
{
  sub_248F10110();
  return sub_2490E8974();
}

uint64_t ToolInvocation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E70C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_17_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248F10110();
  sub_2490E895C();
  OUTLINED_FUNCTION_28_0();
  sub_248D9D9D8(&qword_254477BB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  OUTLINED_FUNCTION_16_6();
  if (!v1)
  {
    OUTLINED_FUNCTION_4_14();
    OUTLINED_FUNCTION_28_6();
    sub_248D9D9D8(&qword_2577E70D8, type metadata accessor for ToolDefinition, (uint64_t)&protocol conformance descriptor for ToolDefinition);
    OUTLINED_FUNCTION_16_6();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2577E70E0);
    sub_248F1014C();
    OUTLINED_FUNCTION_16_6();
    sub_248F101D0();
    sub_2490E8788();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

void ToolInvocation.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_44();
  ToolInvocation.hash(into:)((uint64_t)v0);
  sub_2490E8920();
  OUTLINED_FUNCTION_35();
}

void ToolInvocation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_10();
  v14 = v13;
  v23 = v15;
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_64();
  v25 = v17;
  v27 = OUTLINED_FUNCTION_28_0();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_64();
  v28 = v18;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7100);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_17_0();
  v19 = OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_99();
  v22 = *(int *)(v21 + 28);
  *(_BYTE *)(v12 + v22) = 6;
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_248F10110();
  sub_2490E8944();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    sub_248D9D9D8(&qword_254474F68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_2490E8728();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v12, v28, v27);
    sub_248D9D9D8(&qword_2577E7108, type metadata accessor for ToolDefinition, (uint64_t)&protocol conformance descriptor for ToolDefinition);
    sub_2490E8728();
    sub_248DB44D0(v25, v12 + *(int *)(v19 + 20), type metadata accessor for ToolDefinition);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2577E70E0);
    sub_248F1020C();
    sub_2490E8728();
    *(_QWORD *)(v12 + *(int *)(v19 + 24)) = v29;
    sub_248F10290();
    sub_2490E86E0();
    OUTLINED_FUNCTION_3_10();
    *(_BYTE *)(v12 + v22) = a11;
    sub_248DB26E0(v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for ToolInvocation);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    sub_248DB270C(v12, (uint64_t (*)(_QWORD))type metadata accessor for ToolInvocation);
  }
  OUTLINED_FUNCTION_1_1();
}

uint64_t sub_248F0F228()
{
  _BYTE v1[72];

  sub_2490E88F0();
  ToolInvocation.hash(into:)((uint64_t)v1);
  return sub_2490E8920();
}

void sub_248F0F260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[5];

  ToolInvocation.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4]);
}

uint64_t sub_248F0F274(_QWORD *a1)
{
  return ToolInvocation.encode(to:)(a1);
}

void sub_248F0F290(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE v35[16];
  _BYTE *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _BYTE v46[40];
  _BYTE v47[40];
  _BYTE v48[48];
  uint64_t v49;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E8930);
  MEMORY[0x24BDAC7A8](v2);
  v42 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v43 = type metadata accessor for TypedValue.ID(0);
  MEMORY[0x24BDAC7A8](v43);
  v36 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for ConcreteResolvable();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v45 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E71E8);
  v7 = sub_2490E8668();
  v8 = (_QWORD *)v7;
  v9 = 0;
  v44 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v37 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v39 = v7 + 64;
  if ((v12 & v10) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * i);
    v20 = *v19;
    v21 = v19[1];
    sub_248F12574(*(_QWORD *)(v44 + 56) + 40 * i, (uint64_t)v48);
    sub_248F12574((uint64_t)v48, (uint64_t)v47);
    sub_248F12574((uint64_t)v47, (uint64_t)v46);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2577E88E0);
    if (swift_dynamicCast())
    {
      v22 = v8;
      v23 = v49;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      *v45 = v23;
      v8 = v22;
      v24 = v45;
    }
    else
    {
      sub_248F12574((uint64_t)v47, (uint64_t)v46);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v33 = v42;
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 1, 1, v43);
        sub_248DB939C((uint64_t)v33, &qword_2577E8930);
        sub_248F125B8();
        swift_allocError();
        sub_248F12574((uint64_t)v47, v34);
        swift_willThrow();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
        swift_bridgeObjectRelease();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
        return;
      }
      v25 = v42;
      __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      v26 = (uint64_t)v25;
      v27 = v36;
      sub_248DB44D0(v26, (uint64_t)v36, type metadata accessor for TypedValue.ID);
      v28 = (uint64_t)v27;
      v24 = v45;
      sub_248DB44D0(v28, (uint64_t)v45, type metadata accessor for TypedValue.ID);
    }
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    *(_QWORD *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v29 = (_QWORD *)(v8[6] + 16 * i);
    *v29 = v20;
    v29[1] = v21;
    sub_248DB44D0((uint64_t)v24, v8[7] + *(_QWORD *)(v40 + 72) * i, (uint64_t (*)(_QWORD))type metadata accessor for ConcreteResolvable);
    v30 = v8[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v8[2] = v32;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_29;
    if (v16 >= v38)
      return;
    v17 = *(_QWORD *)(v37 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v38)
        return;
      v17 = *(_QWORD *)(v37 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v38)
          return;
        v17 = *(_QWORD *)(v37 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v13 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v38)
    return;
  v17 = *(_QWORD *)(v37 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v38)
      return;
    v17 = *(_QWORD *)(v37 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_248F0F720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_248F0F768()
{
  unint64_t result;

  result = qword_2577E70B8;
  if (!qword_2577E70B8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolInvocationError, &type metadata for ToolInvocationError);
    atomic_store(result, (unint64_t *)&qword_2577E70B8);
  }
  return result;
}

void sub_248F0F7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[10];

  OUTLINED_FUNCTION_1_12();
  v3 = 0;
  v4 = 0;
  if (!v2)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_29_1();
  while (1)
  {
    OUTLINED_FUNCTION_48_5();
    v9[8] = v8;
    v9[9] = v7;
    swift_retain();
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_175();
    TypedValue.hash(into:)(v9);
    swift_release();
    v3 ^= sub_2490E8920();
    if (v2)
      goto LABEL_2;
LABEL_3:
    v5 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v5 >= v1)
      goto LABEL_17;
    ++v4;
    if (!*(_QWORD *)(v0 + 8 * v5))
    {
      v4 = v5 + 1;
      if (v5 + 1 >= v1)
        goto LABEL_17;
      if (!*(_QWORD *)(v0 + 8 * v4))
        break;
    }
LABEL_14:
    OUTLINED_FUNCTION_5_12();
  }
  v6 = v5 + 2;
  if (v6 >= v1)
  {
LABEL_17:
    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_9_10();
    return;
  }
  if (*(_QWORD *)(v0 + 8 * v6))
  {
    v4 = v6;
    goto LABEL_14;
  }
  while (1)
  {
    v4 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v4 >= v1)
      goto LABEL_17;
    ++v6;
    if (*(_QWORD *)(v0 + 8 * v4))
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

void sub_248F0F8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_12();
  v3 = 0;
  v4 = 0;
  if (!v2)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_29_1();
  while (1)
  {
    OUTLINED_FUNCTION_48_5();
    OUTLINED_FUNCTION_158();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_175();
    sub_248DEB2A0();
    swift_bridgeObjectRelease();
    v3 ^= sub_2490E8920();
    if (v2)
      goto LABEL_2;
LABEL_3:
    v5 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v5 >= v1)
      goto LABEL_17;
    ++v4;
    if (!*(_QWORD *)(v0 + 8 * v5))
    {
      v4 = v5 + 1;
      if (v5 + 1 >= v1)
        goto LABEL_17;
      if (!*(_QWORD *)(v0 + 8 * v4))
        break;
    }
LABEL_14:
    OUTLINED_FUNCTION_5_12();
  }
  v6 = v5 + 2;
  if (v6 >= v1)
  {
LABEL_17:
    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_9_10();
    return;
  }
  if (*(_QWORD *)(v0 + 8 * v6))
  {
    v4 = v6;
    goto LABEL_14;
  }
  while (1)
  {
    v4 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v4 >= v1)
      goto LABEL_17;
    ++v6;
    if (*(_QWORD *)(v0 + 8 * v4))
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_248F0F9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;

  v2 = a2;
  v20 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v21 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  v19 = v2;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  OUTLINED_FUNCTION_29_1();
  while (1)
  {
    v12 = *(_QWORD *)(v2 + 56) + 24 * v9;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(unsigned __int8 *)(v12 + 16);
    swift_bridgeObjectRetain();
    sub_248F12524(v13, v14, v15);
    sub_2490E8014();
    swift_bridgeObjectRelease();
    if (v15 == 1)
    {
      LOBYTE(v15) = 1;
      sub_2490E88FC();
      sub_2490E88FC();
      v16 = *(_QWORD *)(v13 + 16);
      if (v16)
      {
        v17 = v7;
        v18 = v13 + 40;
        do
        {
          OUTLINED_FUNCTION_189();
          sub_2490E8014();
          swift_bridgeObjectRelease();
          v18 += 16;
          --v16;
        }
        while (v16);
        LOBYTE(v15) = 1;
        v7 = v17;
        v2 = v19;
      }
    }
    else
    {
      sub_2490E88FC();
      swift_bridgeObjectRetain();
      sub_2490E8014();
      sub_248F1254C(v13, v14, v15);
    }
    sub_248F1254C(v13, v14, v15);
    result = sub_2490E8920();
    v7 ^= result;
    if (v5)
      goto LABEL_4;
LABEL_5:
    v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v21)
      goto LABEL_26;
    ++v8;
    if (!*(_QWORD *)(v20 + 8 * v10))
    {
      v8 = v10 + 1;
      if (v10 + 1 >= v21)
        goto LABEL_26;
      if (!*(_QWORD *)(v20 + 8 * v8))
        break;
    }
LABEL_16:
    OUTLINED_FUNCTION_5_12();
  }
  v11 = v10 + 2;
  if (v11 >= v21)
  {
LABEL_26:
    OUTLINED_FUNCTION_38_2();
    return OUTLINED_FUNCTION_15_3();
  }
  if (*(_QWORD *)(v20 + 8 * v11))
  {
    v8 = v11;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v21)
      goto LABEL_26;
    ++v11;
    if (*(_QWORD *)(v20 + 8 * v8))
      goto LABEL_16;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_248F0FC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[4];
  uint64_t v64;

  v54 = type metadata accessor for TypedValue.ID(0);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for ConcreteResolvable();
  v56 = *(_QWORD *)(v59 - 8);
  v5 = MEMORY[0x24BDAC7A8](v59);
  v58 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v51 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E51A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v51 - v13;
  v15 = *(_QWORD *)(a2 + 64);
  v52 = a2 + 64;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v55 = (unint64_t)(v16 + 63) >> 6;
  v51 = v55 - 1;
  v57 = a2;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v60 = 0;
  while (1)
  {
    v61 = v20;
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v60 << 6);
      goto LABEL_6;
    }
    v28 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 < v55)
    {
      v29 = *(_QWORD *)(v52 + 8 * v28);
      if (v29)
        goto LABEL_10;
      v30 = v60 + 2;
      ++v60;
      if (v28 + 1 < v55)
      {
        v29 = *(_QWORD *)(v52 + 8 * v30);
        if (v29)
        {
          ++v28;
          goto LABEL_10;
        }
        v31 = v28 + 2;
        v60 = v28 + 1;
        if (v28 + 2 < v55)
          break;
      }
    }
LABEL_22:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5198);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v32);
    v18 = 0;
LABEL_23:
    sub_248E06FC4((uint64_t)v12, (uint64_t)v14);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5198);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v33) == 1)
    {
      swift_release();
      return sub_2490E88FC();
    }
    sub_248DB44D0((uint64_t)&v14[*(int *)(v33 + 48)], (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConcreteResolvable);
    v34 = *(_QWORD *)(a1 + 64);
    v35 = *(_OWORD *)(a1 + 16);
    v63[0] = *(_OWORD *)a1;
    v63[1] = v35;
    v36 = *(_OWORD *)(a1 + 48);
    v63[2] = *(_OWORD *)(a1 + 32);
    v63[3] = v36;
    v64 = v34;
    sub_2490E8014();
    swift_bridgeObjectRelease();
    v37 = v58;
    sub_248DB26E0((uint64_t)v8, (uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for ConcreteResolvable);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = v53;
      sub_248DB44D0((uint64_t)v37, v53, type metadata accessor for TypedValue.ID);
      sub_2490E88FC();
      sub_2490E6D18();
      sub_248D9D9D8(&qword_254470228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_2490E7F48();
      v39 = v54;
      v40 = (uint64_t *)(v38 + *(int *)(v54 + 20));
      v41 = *v40;
      v42 = v40[1];
      sub_248D9F5CC(*v40, v42);
      sub_2490E6C7C();
      sub_248D9E628(v41, v42);
      v62 = *(_QWORD *)(v38 + *(int *)(v39 + 24));
      TypeInstance.hash(into:)((uint64_t)v63, v43, v44, v45, v46, v47, v48, v49, v51, v52, v53, v54);
      sub_248DB270C(v38, type metadata accessor for TypedValue.ID);
    }
    else
    {
      v50 = *v37;
      sub_2490E88FC();
      v62 = v50;
      TypedValue.hash(into:)();
      swift_release();
    }
    sub_248DB270C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConcreteResolvable);
    result = sub_2490E8920();
    v20 = result ^ v61;
  }
  v29 = *(_QWORD *)(v52 + 8 * v31);
  if (v29)
  {
    v28 += 2;
LABEL_10:
    v18 = (v29 - 1) & v29;
    v22 = __clz(__rbit64(v29)) + (v28 << 6);
    v60 = v28;
LABEL_6:
    v23 = (uint64_t *)(*(_QWORD *)(v57 + 48) + 16 * v22);
    v25 = *v23;
    v24 = v23[1];
    v26 = *(_QWORD *)(v57 + 56) + *(_QWORD *)(v56 + 72) * v22;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5198);
    sub_248DB26E0(v26, (uint64_t)v12 + *(int *)(v27 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ConcreteResolvable);
    *v12 = v25;
    v12[1] = v24;
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v27);
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  while (1)
  {
    v28 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v28 >= v55)
    {
      v60 = v51;
      goto LABEL_22;
    }
    v29 = *(_QWORD *)(v52 + 8 * v28);
    ++v31;
    if (v29)
      goto LABEL_10;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_248F10110()
{
  unint64_t result;

  result = qword_2577E70D0;
  if (!qword_2577E70D0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F7AB4, &type metadata for ToolInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E70D0);
  }
  return result;
}

unint64_t sub_248F1014C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2577E70E8;
  if (!qword_2577E70E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2577E70E0);
    sub_248D9D9D8(&qword_2577E70F0, (uint64_t (*)(uint64_t))type metadata accessor for ConcreteResolvable, (uint64_t)&protocol conformance descriptor for ConcreteResolvable);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x2495AD758](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2577E70E8);
  }
  return result;
}

unint64_t sub_248F101D0()
{
  unint64_t result;

  result = qword_2577E70F8;
  if (!qword_2577E70F8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolInvocationOptions, &type metadata for ToolInvocationOptions);
    atomic_store(result, (unint64_t *)&qword_2577E70F8);
  }
  return result;
}

unint64_t sub_248F1020C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2577E7110;
  if (!qword_2577E7110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2577E70E0);
    sub_248D9D9D8(&qword_2577E7118, (uint64_t (*)(uint64_t))type metadata accessor for ConcreteResolvable, (uint64_t)&protocol conformance descriptor for ConcreteResolvable);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x2495AD758](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2577E7110);
  }
  return result;
}

unint64_t sub_248F10290()
{
  unint64_t result;

  result = qword_2577E7120;
  if (!qword_2577E7120)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolInvocationOptions, &type metadata for ToolInvocationOptions);
    atomic_store(result, (unint64_t *)&qword_2577E7120);
  }
  return result;
}

unint64_t sub_248F102D0()
{
  unint64_t result;

  result = qword_2577E7128;
  if (!qword_2577E7128)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolInvocationError, &type metadata for ToolInvocationError);
    atomic_store(result, (unint64_t *)&qword_2577E7128);
  }
  return result;
}

void sub_248F1030C()
{
  sub_248D9D9D8(&qword_2577E7130, (uint64_t (*)(uint64_t))type metadata accessor for ToolInvocation, (uint64_t)&protocol conformance descriptor for ToolInvocation);
}

uint64_t storeEnumTagSinglePayload for ToolInvocationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_248F10378 + 4 * byte_2490F77E4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_248F10398 + 4 * byte_2490F77E9[v4]))();
}

_BYTE *sub_248F10378(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_248F10398(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248F103A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248F103A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248F103B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248F103B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ToolInvocationError()
{
  return &type metadata for ToolInvocationError;
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolInvocation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v61;
  char *v62;
  char *__dst;
  uint64_t v64;
  _QWORD *v65;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2490E6D18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v61 = a1;
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    v12 = *(_QWORD *)((char *)a2 + v8 + 24);
    *((_QWORD *)v9 + 2) = *(_QWORD *)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 3) = v12;
    v9[32] = *((_BYTE *)a2 + v8 + 32);
    v13 = *(_QWORD *)((char *)a2 + v8 + 48);
    *((_QWORD *)v9 + 5) = *(_QWORD *)((char *)a2 + v8 + 40);
    *((_QWORD *)v9 + 6) = v13;
    *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
    *((_QWORD *)v9 + 9) = *(_QWORD *)((char *)a2 + v8 + 72);
    v14 = *(_QWORD *)((char *)a2 + v8 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v14)
    {
      *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 11) = v14;
      v15 = *((_QWORD *)v10 + 13);
      *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
      *((_QWORD *)v9 + 13) = v15;
      v16 = *((_QWORD *)v10 + 15);
      *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
      *((_QWORD *)v9 + 15) = v16;
      v17 = *((_QWORD *)v10 + 17);
      *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
      *((_QWORD *)v9 + 17) = v17;
      v18 = *((_QWORD *)v10 + 19);
      *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
      *((_QWORD *)v9 + 19) = v18;
      v19 = *((_QWORD *)v10 + 21);
      *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
      *((_QWORD *)v9 + 21) = v19;
      v9[176] = v10[176];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v9 + 80, v10 + 80, 0x61uLL);
    }
    v22 = *((_QWORD *)v10 + 24);
    *((_QWORD *)v9 + 23) = *((_QWORD *)v10 + 23);
    *((_QWORD *)v9 + 24) = v22;
    v23 = *((_QWORD *)v10 + 26);
    *((_QWORD *)v9 + 25) = *((_QWORD *)v10 + 25);
    *((_QWORD *)v9 + 26) = v23;
    v24 = *((_QWORD *)v10 + 28);
    *((_QWORD *)v9 + 27) = *((_QWORD *)v10 + 27);
    *((_QWORD *)v9 + 28) = v24;
    v9[232] = v10[232];
    v25 = *((_QWORD *)v10 + 31);
    *((_QWORD *)v9 + 30) = *((_QWORD *)v10 + 30);
    *((_QWORD *)v9 + 31) = v25;
    v26 = *((_QWORD *)v10 + 33);
    *((_QWORD *)v9 + 32) = *((_QWORD *)v10 + 32);
    *((_QWORD *)v9 + 33) = v26;
    v9[272] = v10[272];
    v27 = *((_QWORD *)v10 + 36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64 = a3;
    v65 = a2;
    if (v27)
    {
      *((_QWORD *)v9 + 35) = *((_QWORD *)v10 + 35);
      *((_QWORD *)v9 + 36) = v27;
      v28 = *((_QWORD *)v10 + 38);
      *((_QWORD *)v9 + 37) = *((_QWORD *)v10 + 37);
      *((_QWORD *)v9 + 38) = v28;
      v29 = *((_QWORD *)v10 + 40);
      *((_QWORD *)v9 + 39) = *((_QWORD *)v10 + 39);
      *((_QWORD *)v9 + 40) = v29;
      v9[328] = v10[328];
      v30 = *((_QWORD *)v10 + 43);
      *((_QWORD *)v9 + 42) = *((_QWORD *)v10 + 42);
      *((_QWORD *)v9 + 43) = v30;
      v31 = *((_QWORD *)v10 + 45);
      *((_QWORD *)v9 + 44) = *((_QWORD *)v10 + 44);
      *((_QWORD *)v9 + 45) = v31;
      v9[368] = v10[368];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v9 + 280, v10 + 280, 0x59uLL);
    }
    v32 = *((_QWORD *)v10 + 48);
    *((_QWORD *)v9 + 47) = *((_QWORD *)v10 + 47);
    *((_QWORD *)v9 + 48) = v32;
    v33 = *((_QWORD *)v10 + 50);
    *((_QWORD *)v9 + 49) = *((_QWORD *)v10 + 49);
    *((_QWORD *)v9 + 50) = v33;
    v34 = *((_QWORD *)v10 + 52);
    *((_QWORD *)v9 + 51) = *((_QWORD *)v10 + 51);
    *((_QWORD *)v9 + 52) = v34;
    v35 = *((_QWORD *)v10 + 54);
    *((_QWORD *)v9 + 53) = *((_QWORD *)v10 + 53);
    *((_QWORD *)v9 + 54) = v35;
    v36 = *((_QWORD *)v10 + 56);
    *((_QWORD *)v9 + 55) = *((_QWORD *)v10 + 55);
    *((_QWORD *)v9 + 56) = v36;
    *((_QWORD *)v9 + 57) = *((_QWORD *)v10 + 57);
    v37 = (int *)type metadata accessor for ToolDefinition(0);
    v38 = v37[16];
    v62 = &v10[v38];
    __dst = &v9[v38];
    v39 = type metadata accessor for ToolIcon(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v39))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4860);
      memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      v21 = v61;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v43 = *((_QWORD *)v62 + 1);
        *(_QWORD *)__dst = *(_QWORD *)v62;
        *((_QWORD *)__dst + 1) = v43;
        swift_bridgeObjectRetain();
        v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
        v45 = &__dst[v44];
        v46 = &v62[v44];
        v47 = sub_2490E6C1C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          v42 = *((_QWORD *)v62 + 1);
          *(_QWORD *)__dst = *(_QWORD *)v62;
          *((_QWORD *)__dst + 1) = v42;
          *((_WORD *)__dst + 8) = *((_WORD *)v62 + 8);
        }
        else
        {
          v48 = *((_QWORD *)v62 + 1);
          *(_QWORD *)__dst = *(_QWORD *)v62;
          *((_QWORD *)__dst + 1) = v48;
        }
        swift_bridgeObjectRetain();
      }
      v21 = v61;
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v39);
    }
    *(_QWORD *)&v9[v37[17]] = *(_QWORD *)&v10[v37[17]];
    *(_QWORD *)&v9[v37[18]] = *(_QWORD *)&v10[v37[18]];
    v49 = v37[19];
    v50 = &v9[v49];
    v51 = &v10[v49];
    v52 = *(_QWORD *)&v10[v49 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52)
    {
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v52;
      v53 = *((_QWORD *)v51 + 3);
      *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
      *((_QWORD *)v50 + 3) = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v54 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v54;
    }
    *(_QWORD *)&v9[v37[20]] = *(_QWORD *)&v10[v37[20]];
    *(_QWORD *)&v9[v37[21]] = *(_QWORD *)&v10[v37[21]];
    v9[v37[22]] = v10[v37[22]];
    *(_QWORD *)&v9[v37[23]] = *(_QWORD *)&v10[v37[23]];
    v55 = v37[24];
    v56 = &v9[v55];
    v57 = &v10[v55];
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    *(_QWORD *)&v9[v37[25]] = *(_QWORD *)&v10[v37[25]];
    *(_QWORD *)&v9[v37[26]] = *(_QWORD *)&v10[v37[26]];
    *(_QWORD *)&v9[v37[27]] = *(_QWORD *)&v10[v37[27]];
    v59 = *(int *)(v64 + 28);
    *(_QWORD *)((char *)v21 + *(int *)(v64 + 24)) = *(_QWORD *)((char *)v65 + *(int *)(v64 + 24));
    *((_BYTE *)v21 + v59) = *((_BYTE *)v65 + v59);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v21;
}

uint64_t destroy for ToolInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_2490E6D18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 288))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for ToolDefinition(0);
  v7 = v5 + *(int *)(v6 + 64);
  v8 = type metadata accessor for ToolIcon(0);
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      v10 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
      v11 = sub_2490E6C1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    }
    else if (EnumCaseMultiPayload <= 1)
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + *(int *)(v6 + 76) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ToolInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v58;
  _QWORD *__dst;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v6 = sub_2490E6D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v60 = a3;
  v61 = a2;
  v7 = *(int *)(a3 + 20);
  v62 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  v11 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(a2 + v7 + 32);
  v12 = *(_QWORD *)(a2 + v7 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 48) = v12;
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(a2 + v7 + 72);
  v13 = *(_QWORD *)(a2 + v7 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
    *(_QWORD *)(v8 + 88) = v13;
    v14 = *(_QWORD *)(v9 + 104);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = v14;
    v15 = *(_QWORD *)(v9 + 120);
    *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = v15;
    v16 = *(_QWORD *)(v9 + 136);
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    *(_QWORD *)(v8 + 136) = v16;
    v17 = *(_QWORD *)(v9 + 152);
    *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
    *(_QWORD *)(v8 + 152) = v17;
    v18 = *(_QWORD *)(v9 + 168);
    *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 + 160);
    *(_QWORD *)(v8 + 168) = v18;
    *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(v8 + 80), (const void *)(v9 + 80), 0x61uLL);
  }
  v19 = *(_QWORD *)(v9 + 192);
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 + 184);
  *(_QWORD *)(v8 + 192) = v19;
  v20 = *(_QWORD *)(v9 + 208);
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 + 200);
  *(_QWORD *)(v8 + 208) = v20;
  v21 = *(_QWORD *)(v9 + 224);
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v9 + 216);
  *(_QWORD *)(v8 + 224) = v21;
  *(_BYTE *)(v8 + 232) = *(_BYTE *)(v9 + 232);
  v22 = *(_QWORD *)(v9 + 248);
  *(_QWORD *)(v8 + 240) = *(_QWORD *)(v9 + 240);
  *(_QWORD *)(v8 + 248) = v22;
  v23 = *(_QWORD *)(v9 + 264);
  *(_QWORD *)(v8 + 256) = *(_QWORD *)(v9 + 256);
  *(_QWORD *)(v8 + 264) = v23;
  *(_BYTE *)(v8 + 272) = *(_BYTE *)(v9 + 272);
  v24 = *(_QWORD *)(v9 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24)
  {
    *(_QWORD *)(v8 + 280) = *(_QWORD *)(v9 + 280);
    *(_QWORD *)(v8 + 288) = v24;
    v25 = *(_QWORD *)(v9 + 304);
    *(_QWORD *)(v8 + 296) = *(_QWORD *)(v9 + 296);
    *(_QWORD *)(v8 + 304) = v25;
    v26 = *(_QWORD *)(v9 + 320);
    *(_QWORD *)(v8 + 312) = *(_QWORD *)(v9 + 312);
    *(_QWORD *)(v8 + 320) = v26;
    *(_BYTE *)(v8 + 328) = *(_BYTE *)(v9 + 328);
    v27 = *(_QWORD *)(v9 + 344);
    *(_QWORD *)(v8 + 336) = *(_QWORD *)(v9 + 336);
    *(_QWORD *)(v8 + 344) = v27;
    v28 = *(_QWORD *)(v9 + 360);
    *(_QWORD *)(v8 + 352) = *(_QWORD *)(v9 + 352);
    *(_QWORD *)(v8 + 360) = v28;
    *(_BYTE *)(v8 + 368) = *(_BYTE *)(v9 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(v8 + 280), (const void *)(v9 + 280), 0x59uLL);
  }
  v29 = *(_QWORD *)(v9 + 384);
  *(_QWORD *)(v8 + 376) = *(_QWORD *)(v9 + 376);
  *(_QWORD *)(v8 + 384) = v29;
  v30 = *(_QWORD *)(v9 + 400);
  *(_QWORD *)(v8 + 392) = *(_QWORD *)(v9 + 392);
  *(_QWORD *)(v8 + 400) = v30;
  v31 = *(_QWORD *)(v9 + 416);
  *(_QWORD *)(v8 + 408) = *(_QWORD *)(v9 + 408);
  *(_QWORD *)(v8 + 416) = v31;
  v32 = *(_QWORD *)(v9 + 432);
  *(_QWORD *)(v8 + 424) = *(_QWORD *)(v9 + 424);
  *(_QWORD *)(v8 + 432) = v32;
  v33 = *(_QWORD *)(v9 + 448);
  *(_QWORD *)(v8 + 440) = *(_QWORD *)(v9 + 440);
  *(_QWORD *)(v8 + 448) = v33;
  *(_QWORD *)(v8 + 456) = *(_QWORD *)(v9 + 456);
  v34 = (int *)type metadata accessor for ToolDefinition(0);
  v35 = v34[16];
  v58 = (_QWORD *)(v9 + v35);
  __dst = (_QWORD *)(v8 + v35);
  v36 = type metadata accessor for ToolIcon(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v36))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4860);
    memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v40 = v58[1];
      *__dst = *v58;
      __dst[1] = v40;
      swift_bridgeObjectRetain();
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
      v42 = (char *)__dst + v41;
      v43 = (char *)v58 + v41;
      v44 = sub_2490E6C1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v39 = v58[1];
        *__dst = *v58;
        __dst[1] = v39;
        *((_WORD *)__dst + 8) = *((_WORD *)v58 + 8);
      }
      else
      {
        v45 = v58[1];
        *__dst = *v58;
        __dst[1] = v45;
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v36);
  }
  *(_QWORD *)(v8 + v34[17]) = *(_QWORD *)(v9 + v34[17]);
  *(_QWORD *)(v8 + v34[18]) = *(_QWORD *)(v9 + v34[18]);
  v46 = v34[19];
  v47 = (_QWORD *)(v8 + v46);
  v48 = (_QWORD *)(v9 + v46);
  v49 = *(_QWORD *)(v9 + v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49)
  {
    *v47 = *v48;
    v47[1] = v49;
    v50 = v48[3];
    v47[2] = v48[2];
    v47[3] = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v51 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v51;
  }
  *(_QWORD *)(v8 + v34[20]) = *(_QWORD *)(v9 + v34[20]);
  *(_QWORD *)(v8 + v34[21]) = *(_QWORD *)(v9 + v34[21]);
  *(_BYTE *)(v8 + v34[22]) = *(_BYTE *)(v9 + v34[22]);
  *(_QWORD *)(v8 + v34[23]) = *(_QWORD *)(v9 + v34[23]);
  v52 = v34[24];
  v53 = (_QWORD *)(v8 + v52);
  v54 = (_QWORD *)(v9 + v52);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  *(_QWORD *)(v8 + v34[25]) = *(_QWORD *)(v9 + v34[25]);
  *(_QWORD *)(v8 + v34[26]) = *(_QWORD *)(v9 + v34[26]);
  *(_QWORD *)(v8 + v34[27]) = *(_QWORD *)(v9 + v34[27]);
  v56 = *(int *)(v60 + 28);
  *(_QWORD *)(v62 + *(int *)(v60 + 24)) = *(_QWORD *)(v61 + *(int *)(v60 + 24));
  *(_BYTE *)(v62 + v56) = *(_BYTE *)(v61 + v56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v62;
}

uint64_t assignWithCopy for ToolInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  int v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  int *v42;

  v6 = sub_2490E6D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 88);
  if (*(_QWORD *)(v8 + 88))
  {
    if (v10)
    {
      *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
      *(_QWORD *)(v8 + 136) = *(_QWORD *)(v9 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
      *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 + 160);
      *(_QWORD *)(v8 + 168) = *(_QWORD *)(v9 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
      goto LABEL_8;
    }
    sub_248E090A4(v8 + 80);
  }
  else if (v10)
  {
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
    *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
    *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    *(_QWORD *)(v8 + 136) = *(_QWORD *)(v9 + 136);
    *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
    *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
    *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 + 160);
    *(_QWORD *)(v8 + 168) = *(_QWORD *)(v9 + 168);
    *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy((void *)(v8 + 80), (const void *)(v9 + 80), 0x61uLL);
LABEL_8:
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 + 184);
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 + 200);
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v9 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v9 + 216);
  *(_QWORD *)(v8 + 224) = *(_QWORD *)(v9 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 232) = *(_BYTE *)(v9 + 232);
  *(_QWORD *)(v8 + 240) = *(_QWORD *)(v9 + 240);
  *(_QWORD *)(v8 + 248) = *(_QWORD *)(v9 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 256) = *(_QWORD *)(v9 + 256);
  *(_QWORD *)(v8 + 264) = *(_QWORD *)(v9 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 272) = *(_BYTE *)(v9 + 272);
  v11 = *(_QWORD *)(v9 + 288);
  if (*(_QWORD *)(v8 + 288))
  {
    if (v11)
    {
      *(_QWORD *)(v8 + 280) = *(_QWORD *)(v9 + 280);
      *(_QWORD *)(v8 + 288) = *(_QWORD *)(v9 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 296) = *(_QWORD *)(v9 + 296);
      *(_QWORD *)(v8 + 304) = *(_QWORD *)(v9 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 312) = *(_QWORD *)(v9 + 312);
      *(_QWORD *)(v8 + 320) = *(_QWORD *)(v9 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 328) = *(_BYTE *)(v9 + 328);
      *(_QWORD *)(v8 + 336) = *(_QWORD *)(v9 + 336);
      *(_QWORD *)(v8 + 344) = *(_QWORD *)(v9 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 352) = *(_QWORD *)(v9 + 352);
      *(_QWORD *)(v8 + 360) = *(_QWORD *)(v9 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 368) = *(_BYTE *)(v9 + 368);
      goto LABEL_15;
    }
    sub_248E090D8(v8 + 280);
  }
  else if (v11)
  {
    *(_QWORD *)(v8 + 280) = *(_QWORD *)(v9 + 280);
    *(_QWORD *)(v8 + 288) = *(_QWORD *)(v9 + 288);
    *(_QWORD *)(v8 + 296) = *(_QWORD *)(v9 + 296);
    *(_QWORD *)(v8 + 304) = *(_QWORD *)(v9 + 304);
    *(_QWORD *)(v8 + 312) = *(_QWORD *)(v9 + 312);
    *(_QWORD *)(v8 + 320) = *(_QWORD *)(v9 + 320);
    *(_BYTE *)(v8 + 328) = *(_BYTE *)(v9 + 328);
    *(_QWORD *)(v8 + 336) = *(_QWORD *)(v9 + 336);
    *(_QWORD *)(v8 + 344) = *(_QWORD *)(v9 + 344);
    *(_QWORD *)(v8 + 352) = *(_QWORD *)(v9 + 352);
    *(_QWORD *)(v8 + 360) = *(_QWORD *)(v9 + 360);
    *(_BYTE *)(v8 + 368) = *(_BYTE *)(v9 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  memcpy((void *)(v8 + 280), (const void *)(v9 + 280), 0x59uLL);
LABEL_15:
  *(_QWORD *)(v8 + 376) = *(_QWORD *)(v9 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 384) = *(_QWORD *)(v9 + 384);
  *(_QWORD *)(v8 + 392) = *(_QWORD *)(v9 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 400) = *(_QWORD *)(v9 + 400);
  *(_QWORD *)(v8 + 408) = *(_QWORD *)(v9 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 416) = *(_QWORD *)(v9 + 416);
  *(_QWORD *)(v8 + 424) = *(_QWORD *)(v9 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 432) = *(_QWORD *)(v9 + 432);
  *(_QWORD *)(v8 + 440) = *(_QWORD *)(v9 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 448) = *(_QWORD *)(v9 + 448);
  *(_QWORD *)(v8 + 456) = *(_QWORD *)(v9 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for ToolDefinition(0);
  v13 = v12[16];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = type metadata accessor for ToolIcon(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v14, 1, v16);
  v18 = __swift_getEnumTagSinglePayload(v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
        swift_bridgeObjectRetain();
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
        v42 = a3;
        v23 = v14 + v22;
        v24 = v15 + v22;
        v25 = sub_2490E6C1C();
        v26 = v23;
        a3 = v42;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v26, v24, v25);
      }
      else
      {
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
        if (EnumCaseMultiPayload == 1)
          *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload(v14, 0, 1, v16);
      goto LABEL_34;
    }
LABEL_22:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4860);
    memcpy((void *)v14, (const void *)v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_34;
  }
  if (v18)
  {
    sub_248DB270C(v14, type metadata accessor for ToolIcon);
    goto LABEL_22;
  }
  if (a1 != a2)
  {
    sub_248DB270C(v14, type metadata accessor for ToolIcon);
    v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
      swift_bridgeObjectRetain();
      v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
      v28 = v14 + v27;
      v29 = v15 + v27;
      v30 = sub_2490E6C1C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
      if (v21 == 1)
        *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_34:
  *(_QWORD *)(v8 + v12[17]) = *(_QWORD *)(v9 + v12[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[18]) = *(_QWORD *)(v9 + v12[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = v12[19];
  v32 = (_QWORD *)(v8 + v31);
  v33 = (_QWORD *)(v9 + v31);
  v34 = *(_QWORD *)(v8 + v31 + 8);
  v35 = *(_QWORD *)(v9 + v31 + 8);
  if (v34)
  {
    if (v35)
    {
      *v32 = *v33;
      v32[1] = v33[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v32[2] = v33[2];
      v32[3] = v33[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_248E0910C((uint64_t)v32);
      v36 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v36;
    }
  }
  else if (v35)
  {
    *v32 = *v33;
    v32[1] = v33[1];
    v32[2] = v33[2];
    v32[3] = v33[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *((_OWORD *)v33 + 1);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v37;
  }
  *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[21]) = *(_QWORD *)(v9 + v12[21]);
  *(_BYTE *)(v8 + v12[22]) = *(_BYTE *)(v9 + v12[22]);
  *(_QWORD *)(v8 + v12[23]) = *(_QWORD *)(v9 + v12[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v12[24];
  v39 = (_QWORD *)(v8 + v38);
  v40 = (_QWORD *)(v9 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[25]) = *(_QWORD *)(v9 + v12[25]);
  *(_QWORD *)(v8 + v12[26]) = *(_QWORD *)(v9 + v12[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v12[27]) = *(_QWORD *)(v9 + v12[27]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for ToolInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;

  v6 = sub_2490E6D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(a2 + v7 + 32);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + v7 + 64);
  memcpy((void *)(a1 + v7 + 80), (const void *)(a2 + v7 + 80), 0x61uLL);
  memcpy((void *)(v8 + 184), v9 + 23, 0x59uLL);
  memcpy((void *)(v8 + 280), v9 + 35, 0x59uLL);
  *(_QWORD *)(v8 + 376) = v9[47];
  memcpy((void *)(v8 + 384), v9 + 48, 0x50uLL);
  v11 = (int *)type metadata accessor for ToolDefinition(0);
  v12 = v11[16];
  v13 = (_OWORD *)(v8 + v12);
  v14 = (_OWORD *)((char *)v9 + v12);
  v15 = type metadata accessor for ToolIcon(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4860);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *v13 = *v14;
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = sub_2490E6C1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  *(_QWORD *)(v8 + v11[17]) = *(_QWORD *)((char *)v9 + v11[17]);
  *(_QWORD *)(v8 + v11[18]) = *(_QWORD *)((char *)v9 + v11[18]);
  v21 = v11[19];
  v22 = (_OWORD *)(v8 + v21);
  v23 = (_OWORD *)((char *)v9 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_QWORD *)(v8 + v11[20]) = *(_QWORD *)((char *)v9 + v11[20]);
  *(_QWORD *)(v8 + v11[21]) = *(_QWORD *)((char *)v9 + v11[21]);
  *(_BYTE *)(v8 + v11[22]) = *((_BYTE *)v9 + v11[22]);
  *(_QWORD *)(v8 + v11[23]) = *(_QWORD *)((char *)v9 + v11[23]);
  *(_OWORD *)(v8 + v11[24]) = *(_OWORD *)((char *)v9 + v11[24]);
  *(_QWORD *)(v8 + v11[25]) = *(_QWORD *)((char *)v9 + v11[25]);
  *(_QWORD *)(v8 + v11[26]) = *(_QWORD *)((char *)v9 + v11[26]);
  *(_QWORD *)(v8 + v11[27]) = *(_QWORD *)((char *)v9 + v11[27]);
  v25 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  return a1;
}

uint64_t assignWithTake for ToolInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  int EnumTagSinglePayload;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;

  v6 = sub_2490E6D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  swift_release();
  v12 = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = v12;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 88))
  {
    v13 = *(_QWORD *)(v9 + 88);
    if (v13)
    {
      *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 88) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v9 + 104);
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_QWORD *)(v8 + 104) = v14;
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v9 + 120);
      *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = v15;
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v9 + 136);
      *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
      *(_QWORD *)(v8 + 136) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v9 + 152);
      *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
      *(_QWORD *)(v8 + 152) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v9 + 168);
      *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 + 160);
      *(_QWORD *)(v8 + 168) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 176) = *(_BYTE *)(v9 + 176);
      goto LABEL_6;
    }
    sub_248E090A4(v8 + 80);
  }
  memcpy((void *)(v8 + 80), (const void *)(v9 + 80), 0x61uLL);
LABEL_6:
  v19 = *(_QWORD *)(v9 + 192);
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 + 184);
  *(_QWORD *)(v8 + 192) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v9 + 208);
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 + 200);
  *(_QWORD *)(v8 + 208) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v9 + 224);
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v9 + 216);
  *(_QWORD *)(v8 + 224) = v21;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 232) = *(_BYTE *)(v9 + 232);
  v22 = *(_QWORD *)(v9 + 248);
  *(_QWORD *)(v8 + 240) = *(_QWORD *)(v9 + 240);
  *(_QWORD *)(v8 + 248) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v9 + 264);
  *(_QWORD *)(v8 + 256) = *(_QWORD *)(v9 + 256);
  *(_QWORD *)(v8 + 264) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 272) = *(_BYTE *)(v9 + 272);
  if (*(_QWORD *)(v8 + 288))
  {
    v24 = *(_QWORD *)(v9 + 288);
    if (v24)
    {
      *(_QWORD *)(v8 + 280) = *(_QWORD *)(v9 + 280);
      *(_QWORD *)(v8 + 288) = v24;
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(v9 + 304);
      *(_QWORD *)(v8 + 296) = *(_QWORD *)(v9 + 296);
      *(_QWORD *)(v8 + 304) = v25;
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v9 + 320);
      *(_QWORD *)(v8 + 312) = *(_QWORD *)(v9 + 312);
      *(_QWORD *)(v8 + 320) = v26;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 328) = *(_BYTE *)(v9 + 328);
      v27 = *(_QWORD *)(v9 + 344);
      *(_QWORD *)(v8 + 336) = *(_QWORD *)(v9 + 336);
      *(_QWORD *)(v8 + 344) = v27;
      swift_bridgeObjectRelease();
      v28 = *(_QWORD *)(v9 + 360);
      *(_QWORD *)(v8 + 352) = *(_QWORD *)(v9 + 352);
      *(_QWORD *)(v8 + 360) = v28;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 368) = *(_BYTE *)(v9 + 368);
      goto LABEL_11;
    }
    sub_248E090D8(v8 + 280);
  }
  memcpy((void *)(v8 + 280), (const void *)(v9 + 280), 0x59uLL);
LABEL_11:
  *(_QWORD *)(v8 + 376) = *(_QWORD *)(v9 + 376);
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v9 + 392);
  *(_QWORD *)(v8 + 384) = *(_QWORD *)(v9 + 384);
  *(_QWORD *)(v8 + 392) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v9 + 408);
  *(_QWORD *)(v8 + 400) = *(_QWORD *)(v9 + 400);
  *(_QWORD *)(v8 + 408) = v30;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v9 + 424);
  *(_QWORD *)(v8 + 416) = *(_QWORD *)(v9 + 416);
  *(_QWORD *)(v8 + 424) = v31;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v9 + 440);
  *(_QWORD *)(v8 + 432) = *(_QWORD *)(v9 + 432);
  *(_QWORD *)(v8 + 440) = v32;
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(v9 + 456);
  *(_QWORD *)(v8 + 448) = *(_QWORD *)(v9 + 448);
  *(_QWORD *)(v8 + 456) = v33;
  swift_bridgeObjectRelease();
  v34 = (int *)type metadata accessor for ToolDefinition(0);
  v35 = v34[16];
  v36 = (_OWORD *)(v8 + v35);
  v37 = (_OWORD *)(v9 + v35);
  v38 = type metadata accessor for ToolIcon(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v38);
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38);
  if (!EnumTagSinglePayload)
  {
    if (!v40)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_248DB270C((uint64_t)v36, type metadata accessor for ToolIcon);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *v36 = *v37;
        v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
        v47 = (char *)v36 + v46;
        v48 = (char *)v37 + v46;
        v49 = sub_2490E6C1C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      v45 = *(_QWORD *)(v38 - 8);
LABEL_18:
      memcpy(v36, v37, *(_QWORD *)(v45 + 64));
      goto LABEL_24;
    }
    sub_248DB270C((uint64_t)v36, type metadata accessor for ToolIcon);
LABEL_17:
    v45 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E4860) - 8);
    goto LABEL_18;
  }
  if (v40)
    goto LABEL_17;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *v36 = *v37;
    v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E8920) + 48);
    v42 = (char *)v36 + v41;
    v43 = (char *)v37 + v41;
    v44 = sub_2490E6C1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
LABEL_24:
  *(_QWORD *)(v8 + v34[17]) = *(_QWORD *)(v9 + v34[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v34[18]) = *(_QWORD *)(v9 + v34[18]);
  swift_bridgeObjectRelease();
  v50 = v34[19];
  v51 = v8 + v50;
  v52 = v9 + v50;
  if (!*(_QWORD *)(v8 + v50 + 8))
  {
LABEL_28:
    v55 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 16) = v55;
    goto LABEL_29;
  }
  v53 = *(_QWORD *)(v52 + 8);
  if (!v53)
  {
    sub_248E0910C(v51);
    goto LABEL_28;
  }
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_QWORD *)(v51 + 8) = v53;
  swift_bridgeObjectRelease();
  v54 = *(_QWORD *)(v52 + 24);
  *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
  *(_QWORD *)(v51 + 24) = v54;
  swift_bridgeObjectRelease();
LABEL_29:
  *(_QWORD *)(v8 + v34[20]) = *(_QWORD *)(v9 + v34[20]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v34[21]) = *(_QWORD *)(v9 + v34[21]);
  *(_BYTE *)(v8 + v34[22]) = *(_BYTE *)(v9 + v34[22]);
  *(_QWORD *)(v8 + v34[23]) = *(_QWORD *)(v9 + v34[23]);
  swift_bridgeObjectRelease();
  v56 = v34[24];
  v57 = (_QWORD *)(v8 + v56);
  v58 = (uint64_t *)(v9 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v34[25]) = *(_QWORD *)(v9 + v34[25]);
  *(_QWORD *)(v8 + v34[26]) = *(_QWORD *)(v9 + v34[26]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v34[27]) = *(_QWORD *)(v9 + v34[27]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolInvocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248F12198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_28_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    __swift_getEnumTagSinglePayload(v8, a2, v7);
    return;
  }
  v9 = type metadata accessor for ToolDefinition(0);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_93();
}

uint64_t storeEnumTagSinglePayload for ToolInvocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248F12238(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_28_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
LABEL_5:
    OUTLINED_FUNCTION_264(v10, a2, a2, v9);
    return;
  }
  v11 = type metadata accessor for ToolDefinition(0);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  OUTLINED_FUNCTION_93();
}

uint64_t sub_248F122C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2490E6D18();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolDefinition(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ToolInvocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_248F123A8 + 4 * byte_2490F77F3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_248F123DC + 4 * byte_2490F77EE[v4]))();
}

uint64_t sub_248F123DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F123E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F123ECLL);
  return result;
}

uint64_t sub_248F123F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F12400);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_248F12404(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1240C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolInvocation.CodingKeys()
{
  return &type metadata for ToolInvocation.CodingKeys;
}

unint64_t sub_248F1242C()
{
  unint64_t result;

  result = qword_2577E71D0;
  if (!qword_2577E71D0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F7A8C, &type metadata for ToolInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E71D0);
  }
  return result;
}

unint64_t sub_248F1246C()
{
  unint64_t result;

  result = qword_2577E71D8;
  if (!qword_2577E71D8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F79FC, &type metadata for ToolInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E71D8);
  }
  return result;
}

unint64_t sub_248F124AC()
{
  unint64_t result;

  result = qword_2577E71E0;
  if (!qword_2577E71E0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F7A24, &type metadata for ToolInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E71E0);
  }
  return result;
}

uint64_t sub_248F124E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_248F12524(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3 || a3 == 2 || a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_248F1254C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3 || a3 == 2 || a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_248F12574(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_248F125B8()
{
  unint64_t result;

  result = qword_2577E71F0;
  if (!qword_2577E71F0)
  {
    result = MEMORY[0x2495AD758](&unk_24911B174, &type metadata for ConcreteResolvable.Error);
    atomic_store(result, (unint64_t *)&qword_2577E71F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_14()
{
  return type metadata accessor for ToolInvocation();
}

uint64_t OUTLINED_FUNCTION_14_9(uint64_t a1, uint64_t a2)
{
  return sub_248F124E8(a1, a2);
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return sub_2490E88FC();
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  return sub_2490E87D0();
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248E06234(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  return type metadata accessor for ConcreteResolvable();
}

uint64_t OUTLINED_FUNCTION_28_6()
{
  return type metadata accessor for ToolDefinition(0);
}

unint64_t OUTLINED_FUNCTION_29_7()
{
  return sub_248DFDC18();
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  return sub_2490E8014();
}

id OUTLINED_FUNCTION_37_8(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 + 56) + 8 * a1);
}

uint64_t OUTLINED_FUNCTION_40_6()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_41_10()
{
  sub_248DAFCC4();
}

__n128 OUTLINED_FUNCTION_48_5()
{
  __n128 *v0;

  return v0[2];
}

void AnyPredicate.init(predicate:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E71F8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_66_5();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_13_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7200);
  if ((OUTLINED_FUNCTION_18_4() & 1) != 0)
  {
    OUTLINED_FUNCTION_55_4(v2, 0);
    OUTLINED_FUNCTION_94_2();
    OUTLINED_FUNCTION_86_1(v2, (uint64_t)v8);
    OUTLINED_FUNCTION_86_1((uint64_t)v8, a2);
    OUTLINED_FUNCTION_6_14();
LABEL_16:
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_41();
    return;
  }
  OUTLINED_FUNCTION_55_4(v2, 1);
  sub_248DB939C(v2, &qword_2577E71F8);
  OUTLINED_FUNCTION_13_7();
  if ((OUTLINED_FUNCTION_5_13() & 1) != 0)
  {
    v9 = v16;
    v10 = v17;
    OUTLINED_FUNCTION_94_2();
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    OUTLINED_FUNCTION_6_14();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_13_7();
  if ((OUTLINED_FUNCTION_5_13() & 1) != 0)
  {
    v11 = v16;
    v12 = v17;
    OUTLINED_FUNCTION_94_2();
    *(_QWORD *)a2 = v11;
    *(_QWORD *)(a2 + 8) = v12;
    OUTLINED_FUNCTION_6_14();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_13_7();
  if ((OUTLINED_FUNCTION_5_13() & 1) != 0)
  {
    v13 = v16;
    v15 = v17;
    __swift_destroy_boxed_opaque_existential_1(a1);
    *(_QWORD *)a2 = v13;
    *(_OWORD *)(a2 + 8) = v15;
    OUTLINED_FUNCTION_6_14();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_13_7();
  if ((OUTLINED_FUNCTION_5_13() & 1) != 0)
  {
    v14 = v16;
    __swift_destroy_boxed_opaque_existential_1(a1);
    *(_QWORD *)a2 = v14;
    OUTLINED_FUNCTION_6_14();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_13_7();
  if ((OUTLINED_FUNCTION_5_13() & 1) != 0
    || (OUTLINED_FUNCTION_13_7(), (OUTLINED_FUNCTION_5_13() & 1) != 0)
    || (OUTLINED_FUNCTION_13_7(), (OUTLINED_FUNCTION_5_13() & 1) != 0))
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    OUTLINED_FUNCTION_6_14();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_60_4();
  __break(1u);
}

uint64_t type metadata accessor for AnyPredicate(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_254479160);
}

void sub_248F129CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  char *v3;

  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24();
  sub_248DB26E0(v0, v0, v2);
  v3 = (char *)sub_248F12A40 + 4 * byte_2490F7B10[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_248F12A40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;

  v0[3] = OUTLINED_FUNCTION_66_5();
  sub_248D9D9D8(&qword_2577E7660, type metadata accessor for ComparisonPredicate, (uint64_t)&protocol conformance descriptor for ComparisonPredicate);
  v0[4] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_38_6(v1, (uint64_t)boxed_opaque_existential_1);
}

uint64_t AnyPredicate.debugDescription.getter()
{
  _BYTE v1[40];
  uint64_t v2;
  unint64_t v3;

  v2 = 0;
  v3 = 0xE000000000000000;
  sub_248F129CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7200);
  sub_2490E8614();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  return v2;
}

void AnyPredicate.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_66_5();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_19_8();
  type metadata accessor for AnyPredicate(v2);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v3);
  sub_248DB26E0(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_248F12C60 + 4 * byte_2490F7B18[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_248F12C60()
{
  uint64_t v0;
  uint64_t v1;

  sub_248DB44D0(v1, v0, type metadata accessor for ComparisonPredicate);
  sub_2490E88FC();
  ComparisonPredicate.hash(into:)();
  sub_248DB270C(v0, type metadata accessor for ComparisonPredicate);
  OUTLINED_FUNCTION_41();
}

void static AnyPredicate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  OUTLINED_FUNCTION_66_5();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_64();
  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_34_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_101_3();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_100_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_102_2();
  MEMORY[0x24BDAC7A8](v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7208);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_17_0();
  v13 = v12 - v11;
  v15 = v13 + *(int *)(v14 + 48);
  sub_248DB26E0(a1, v13, type metadata accessor for AnyPredicate);
  sub_248DB26E0(a2, v15, type metadata accessor for AnyPredicate);
  v16 = (char *)sub_248F12EB8 + 4 * byte_2490F7B20[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_248F12EB8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_248DB26E0(v1, (uint64_t)v2, type metadata accessor for AnyPredicate);
  if (OUTLINED_FUNCTION_11_7())
  {
    sub_248DB270C((uint64_t)v2, type metadata accessor for ComparisonPredicate);
    sub_248DB939C(v1, &qword_2577E7208);
  }
  else
  {
    v4 = v0;
    v5 = *(__int128 **)(v3 - 88);
    OUTLINED_FUNCTION_74_3(v4);
    static ComparisonPredicate.== infix(_:_:)(v2, v5, v6, v7, v8, v9, v10, v11);
    sub_248DB270C((uint64_t)v5, type metadata accessor for ComparisonPredicate);
    sub_248DB270C((uint64_t)v2, type metadata accessor for ComparisonPredicate);
    OUTLINED_FUNCTION_25_3(v12, type metadata accessor for AnyPredicate);
  }
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_248F13154(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x73697261706D6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x646E756F706D6F63 && a2 == 0xE800000000000000;
    if (v6 || (sub_2490E883C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6553676E69727473 && a2 == 0xEC00000068637261;
      if (v7 || (sub_2490E883C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6863726165536469 && a2 == 0xE800000000000000;
        if (v8 || (sub_2490E883C() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6261686372616573 && a2 == 0xEE006D657449656CLL;
          if (v9 || (sub_2490E883C() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 7105633 && a2 == 0xE300000000000000;
            if (v10 || (sub_2490E883C() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x64696C6176 && a2 == 0xE500000000000000;
              if (v11 || (sub_2490E883C() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x6574736567677573 && a2 == 0xE900000000000064)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v13 = sub_2490E883C();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 7;
                else
                  return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_248F134BC()
{
  return 8;
}

uint64_t sub_248F134C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248F134FC + 4 * byte_2490F7B28[a1]))(0x73697261706D6F63, 0xEA00000000006E6FLL);
}

uint64_t sub_248F134FC()
{
  return 0x646E756F706D6F63;
}

uint64_t sub_248F13514()
{
  return 0x6553676E69727473;
}

uint64_t sub_248F13534()
{
  return 0x6863726165536469;
}

uint64_t sub_248F1354C()
{
  return 0x6261686372616573;
}

uint64_t sub_248F13570()
{
  return 7105633;
}

uint64_t sub_248F13580()
{
  return 0x64696C6176;
}

uint64_t sub_248F13594()
{
  return 0x6574736567677573;
}

uint64_t sub_248F135B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F155E0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_248F135D8()
{
  sub_248F161B4();
  return sub_2490E8968();
}

uint64_t sub_248F13600()
{
  sub_248F161B4();
  return sub_2490E8974();
}

uint64_t sub_248F1362C()
{
  unsigned __int8 *v0;

  return sub_248F134C4(*v0);
}

uint64_t sub_248F13634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F13154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F13658@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_248F134BC();
  *a1 = result;
  return result;
}

uint64_t sub_248F1367C()
{
  sub_248F160C4();
  return sub_2490E8968();
}

uint64_t sub_248F136A4()
{
  sub_248F160C4();
  return sub_2490E8974();
}

uint64_t sub_248F136CC()
{
  sub_248F163D0();
  return sub_2490E8968();
}

uint64_t sub_248F136F4()
{
  sub_248F163D0();
  return sub_2490E8974();
}

uint64_t sub_248F1371C()
{
  sub_248F16358();
  return sub_2490E8968();
}

uint64_t sub_248F13744()
{
  sub_248F16358();
  return sub_2490E8974();
}

uint64_t sub_248F1376C()
{
  sub_248F162A4();
  return sub_2490E8968();
}

uint64_t sub_248F13794()
{
  sub_248F162A4();
  return sub_2490E8974();
}

uint64_t sub_248F137BC()
{
  sub_248F1622C();
  return sub_2490E8968();
}

uint64_t sub_248F137E4()
{
  sub_248F1622C();
  return sub_2490E8974();
}

uint64_t sub_248F1380C()
{
  sub_248F162E0();
  return sub_2490E8968();
}

uint64_t sub_248F13834()
{
  sub_248F162E0();
  return sub_2490E8974();
}

uint64_t sub_248F1385C()
{
  sub_248F16100();
  return sub_2490E8968();
}

uint64_t sub_248F13884()
{
  sub_248F16100();
  return sub_2490E8974();
}

uint64_t sub_248F138AC()
{
  sub_248F1613C();
  return sub_2490E8968();
}

uint64_t sub_248F138D4()
{
  sub_248F1613C();
  return sub_2490E8974();
}

void AnyPredicate.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_10();
  a19 = v22;
  a20 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7210);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7218);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_98_0(v26, v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7220);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_56_4(v28, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7228);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_55_6(v30, v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7230);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_64();
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7238);
  OUTLINED_FUNCTION_47_5(v32, (uint64_t)&a17);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7240);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7248);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v35);
  type metadata accessor for ComparisonPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v36);
  v37 = OUTLINED_FUNCTION_19_8();
  type metadata accessor for AnyPredicate(v37);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7250);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_93_2();
  OUTLINED_FUNCTION_62_5();
  sub_248DB26E0(v20, v21, type metadata accessor for AnyPredicate);
  v40 = (char *)sub_248F13B80 + 4 * byte_2490F7B30[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_248F13B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_248DB44D0(v4, v0, type metadata accessor for ComparisonPredicate);
  *(_BYTE *)(v5 - 112) = 0;
  sub_248F163D0();
  OUTLINED_FUNCTION_43_6();
  sub_248D9D9D8(&qword_254470CB8, type metadata accessor for ComparisonPredicate, (uint64_t)&protocol conformance descriptor for ComparisonPredicate);
  v6 = *(_QWORD *)(v5 - 320);
  OUTLINED_FUNCTION_24_7();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 328) + 8))(v1, v6);
  sub_248DB270C(v0, type metadata accessor for ComparisonPredicate);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 144) + 8))(v3, v2);
  OUTLINED_FUNCTION_1_1();
}

void AnyPredicate.hashValue.getter()
{
  sub_248DA9EB4((void (*)(_BYTE *))AnyPredicate.hash(into:));
}

void AnyPredicate.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87[14];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  OUTLINED_FUNCTION_10();
  a19 = v24;
  a20 = v25;
  a10 = v21;
  v27 = v26;
  v101 = v28;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72C0);
  v100 = *(_QWORD *)(v92 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_98_0(v30, v87[0]);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72C8);
  OUTLINED_FUNCTION_47_5(v31, (uint64_t)&a18);
  v104 = v32;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_64();
  v97 = v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72D0);
  OUTLINED_FUNCTION_47_5(v35, (uint64_t)&a17);
  v99 = v36;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_64();
  v96 = v38;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72D8);
  OUTLINED_FUNCTION_47_5(v39, (uint64_t)&a16);
  v91 = v40;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_56_4(v42, v87[0]);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72E0);
  v89 = *(_QWORD *)(v90 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_64();
  v95 = v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72E8);
  OUTLINED_FUNCTION_47_5(v45, (uint64_t)&a12);
  v98 = v46;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_64();
  v94 = v48;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72F0);
  v87[13] = *(_QWORD *)(v88 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_55_6(v50, v87[0]);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E72F8);
  OUTLINED_FUNCTION_47_5(v51, (uint64_t)&a9);
  v87[11] = v52;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_64();
  v93 = v54;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7300);
  v103 = *(_QWORD *)(v105 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v55);
  v56 = OUTLINED_FUNCTION_56();
  v102 = type metadata accessor for AnyPredicate(v56);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v60);
  OUTLINED_FUNCTION_8_4();
  v62 = MEMORY[0x24BDAC7A8](v61);
  v64 = (char *)v87 - v63;
  MEMORY[0x24BDAC7A8](v62);
  OUTLINED_FUNCTION_100_1();
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_102_2();
  v67 = MEMORY[0x24BDAC7A8](v66);
  v69 = (char *)v87 - v68;
  MEMORY[0x24BDAC7A8](v67);
  v71 = (char *)v87 - v70;
  v106 = v27;
  OUTLINED_FUNCTION_93_2();
  v72 = a10;
  sub_2490E8944();
  if (!v72)
  {
    v87[5] = (uint64_t)v69;
    v87[2] = v23;
    v87[3] = v20;
    v87[4] = (uint64_t)v64;
    v87[6] = (uint64_t)v71;
    v73 = v105;
    v74 = sub_2490E874C();
    v75 = *(_QWORD *)(v74 + 16);
    if (v75)
    {
      a10 = v22;
      v87[1] = 0;
      v76 = *(unsigned __int8 *)(v74 + 32);
      sub_248DB8ABC(1, v75, v74, v74 + 32, 0, (2 * v75) | 1);
      v78 = v77;
      v80 = v79;
      swift_bridgeObjectRelease();
      if (v78 == v80 >> 1)
        __asm { BR              X9 }
      v73 = v105;
    }
    v81 = v102;
    sub_2490E8578();
    OUTLINED_FUNCTION_77();
    v83 = v82;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4070);
    *v83 = v81;
    sub_2490E86BC();
    v84 = OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_314(v84, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    OUTLINED_FUNCTION_15_4();
    v85 = OUTLINED_FUNCTION_72_2();
    v86(v85, v73);
  }
  __swift_destroy_boxed_opaque_existential_1(v106);
  OUTLINED_FUNCTION_1_1();
}

void sub_248F14410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_103_3();
  OUTLINED_FUNCTION_2_12();
  if (!v0)
  {
    sub_248F164FC();
    OUTLINED_FUNCTION_7_11();
    OUTLINED_FUNCTION_40_7();
    OUTLINED_FUNCTION_10_7(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 328) + 8));
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_8_10();
    v2 = *(_QWORD *)(v1 - 104);
    v3 = *(_QWORD *)(v1 - 416);
    *(_BYTE *)v3 = *(_BYTE *)(v1 - 112);
    *(_QWORD *)(v3 + 8) = v2;
    OUTLINED_FUNCTION_34_7();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x248F14838);
  }
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_72_2();
  JUMPOUT(0x248F143F4);
}

void sub_248F1449C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_2_12();
  if (!v0)
  {
    sub_248F164C0();
    OUTLINED_FUNCTION_7_11();
    OUTLINED_FUNCTION_41_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_12_11(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 144) + 8));
    v3 = *(_QWORD *)(v2 - 104);
    v4 = *(_QWORD **)(v2 - 408);
    *v4 = *(_QWORD *)(v2 - 112);
    v4[1] = v3;
    OUTLINED_FUNCTION_34_7();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x248F14838);
  }
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_72_2();
  JUMPOUT(0x248F143F4);
}

void sub_248F144F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_4_15();
  if (v0)
  {
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_72_2();
    JUMPOUT(0x248F143F4);
  }
  sub_248DBDD68();
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_41_11(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 304) + 8));
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_12_11(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 144) + 8));
  v2 = *(_QWORD *)(v1 - 400);
  *(_QWORD *)v2 = *(_QWORD *)(v1 - 112);
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(v1 - 104);
  OUTLINED_FUNCTION_34_7();
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x248F14838);
}

void sub_248F14534()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_2_12();
  if (!v0)
  {
    sub_248F16484();
    OUTLINED_FUNCTION_7_11();
    OUTLINED_FUNCTION_40_7();
    OUTLINED_FUNCTION_10_7(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 288) + 8));
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_8_10();
    **(_QWORD **)(v1 - 376) = *(_QWORD *)(v1 - 112);
    OUTLINED_FUNCTION_34_7();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x248F14838);
  }
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_72_2();
  JUMPOUT(0x248F143F4);
}

void sub_248F14594()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_84_3();
  OUTLINED_FUNCTION_2_12();
  if (!v0)
  {
    sub_248F16448();
    OUTLINED_FUNCTION_7_11();
    OUTLINED_FUNCTION_40_7();
    OUTLINED_FUNCTION_10_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_8_10();
    OUTLINED_FUNCTION_34_7();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x248F14838);
  }
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_72_2();
  JUMPOUT(0x248F143F4);
}

void sub_248F145E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_81_2();
  v3 = *(_QWORD *)(v2 - 200);
  OUTLINED_FUNCTION_4_15();
  if (!v0)
  {
    sub_248F1640C();
    sub_2490E8728();
    OUTLINED_FUNCTION_40_7();
    OUTLINED_FUNCTION_131(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_8_10();
    OUTLINED_FUNCTION_34_7();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x248F14838);
  }
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_72_2();
  JUMPOUT(0x248F143F4);
}

void sub_248F14658()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_2_12();
  if (v0)
    JUMPOUT(0x248F1467CLL);
  sub_248E23944();
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_10_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_34_7();
  JUMPOUT(0x248F14828);
}

void sub_248F1486C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248DA9EF8(a1, a2, a3, (void (*)(_BYTE *))AnyPredicate.hash(into:));
}

#error "248F14884: call analysis failed (funcsize=5)"

#error "248F14898: call analysis failed (funcsize=5)"

void Predicate.toAny()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7[5];

  v7[3] = a1;
  v7[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  AnyPredicate.init(predicate:)((uint64_t)v7, a3);
}

void AnyPredicateTemplate.init(predicateTemplate:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13[2];
  uint64_t v14;
  _BYTE v15[40];
  _BYTE v16[40];

  type metadata accessor for AnyPredicateTemplate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_43();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7328);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_29_8();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_17_0();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_76_3(v10, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7330);
  if ((OUTLINED_FUNCTION_18_4() & 1) != 0)
  {
    OUTLINED_FUNCTION_20_7(v2, 0);
    OUTLINED_FUNCTION_78_3();
    OUTLINED_FUNCTION_38_6(v2, v9);
    OUTLINED_FUNCTION_38_6(v9, a1);
    OUTLINED_FUNCTION_108();
LABEL_5:
    swift_storeEnumTagMultiPayload();
    return;
  }
  OUTLINED_FUNCTION_20_7(v2, 1);
  sub_248DB939C(v2, &qword_2577E7328);
  OUTLINED_FUNCTION_76_3(v11, (uint64_t)v16);
  v12 = OUTLINED_FUNCTION_18_4();
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_78_3();
    OUTLINED_FUNCTION_108();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_76_3(v12, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7200);
  if ((OUTLINED_FUNCTION_18_4() & 1) != 0)
  {
    sub_248E072C0(v13, (uint64_t)v16);
    sub_248F1654C((uint64_t)v16, (uint64_t)v15);
    AnyPredicate.init(predicate:)((uint64_t)v15, v1);
    OUTLINED_FUNCTION_78_3();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    swift_storeEnumTagMultiPayload();
    sub_248DB44D0(v1, a1, type metadata accessor for AnyPredicateTemplate);
  }
  else
  {
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_248DB939C((uint64_t)v13, &qword_2577E7338);
    OUTLINED_FUNCTION_60_4();
    __break(1u);
  }
}

uint64_t AnyPredicateTemplate.instantiate(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  unint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  ValueMetadata *v16;
  unint64_t v17;
  void (*v18)(uint64_t, ValueMetadata *, unint64_t);
  __int128 v20;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23[3];
  ValueMetadata *v24;
  unint64_t v25;

  v6 = v2;
  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_56();
  type metadata accessor for AnyPredicateTemplate(v10);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_72();
  sub_248DB26E0(v6, v5, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v24 = &type metadata for StringSearchPredicate.Template;
      v25 = sub_248F1658C();
    }
    else
    {
      sub_248DB44D0(v5, v4, type metadata accessor for AnyPredicate);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7330);
      swift_dynamicCast();
      sub_248E072C0(&v20, (uint64_t)v23);
    }
  }
  else
  {
    v24 = (ValueMetadata *)type metadata accessor for ComparisonPredicate.Template(0);
    sub_248D9D9D8(&qword_2577E7348, type metadata accessor for ComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ComparisonPredicate.Template);
    v25 = v14;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
    sub_248DB44D0(v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ComparisonPredicate.Template);
  }
  v16 = v24;
  v17 = v25;
  __swift_project_boxed_opaque_existential_1(v23, (uint64_t)v24);
  v18 = *(void (**)(uint64_t, ValueMetadata *, unint64_t))(v17 + 56);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  v18(a1, v16, v17);
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v20);
  }
  else
  {
    AnyPredicate.init(predicate:)((uint64_t)&v20, a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
}

uint64_t AnyPredicateTemplate.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v15;
  unint64_t v16;

  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_19_8();
  type metadata accessor for ComparisonPredicate.Template(v4);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnyPredicateTemplate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_32();
  sub_248DB26E0(v1, v2, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    OUTLINED_FUNCTION_74_3(v2);
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_2490E8614();
    v11 = v15;
    v12 = (uint64_t)v7;
    v13 = type metadata accessor for ComparisonPredicate.Template;
LABEL_6:
    sub_248DB270C(v12, v13);
    return v11;
  }
  if (EnumCaseMultiPayload != 1)
  {
    OUTLINED_FUNCTION_38_6(v2, v0);
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_2490E8614();
    v11 = v15;
    v12 = v0;
    v13 = type metadata accessor for AnyPredicate;
    goto LABEL_6;
  }
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_2490E8614();
  return v15;
}

void AnyPredicateTemplate.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[4];

  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_29_8();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnyPredicateTemplate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24();
  sub_248DB26E0(v1, v1, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      OUTLINED_FUNCTION_20();
      return;
    }
    OUTLINED_FUNCTION_38_6(v1, v2);
    OUTLINED_FUNCTION_20();
    AnyPredicate.hash(into:)();
    v30 = v2;
    v31 = type metadata accessor for AnyPredicate;
  }
  else
  {
    v12 = OUTLINED_FUNCTION_407();
    sub_248DB44D0(v12, v13, v14);
    OUTLINED_FUNCTION_20();
    v15 = *((_QWORD *)v8 + 4);
    swift_retain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_108();
    sub_2490E8014();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2490E8014();
    swift_bridgeObjectRelease();
    TypeInstance.hash(into:)(a1, v16, v17, v18, v19, v20, v21, v22, v40[0], v15, v40[2], v40[3]);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40[1] = *((_QWORD *)v8 + 5);
    ComparisonPredicate.Comparison.Template.hash(into:)();
    sub_2490E6D18();
    sub_248D9D9D8(&qword_254470228, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_2490E7F48();
    v23 = &v8[*(int *)(v5 + 28)];
    v24 = v23[32];
    if (v23[32])
    {
      OUTLINED_FUNCTION_20();
      v25 = OUTLINED_FUNCTION_22_6();
      if (v24 == 1)
        v29 = 1;
      else
        v29 = 2;
      sub_248DB8B68(v25, v26, v27, v28, v29);
      sub_2490E8014();
    }
    else
    {
      OUTLINED_FUNCTION_20();
      v32 = OUTLINED_FUNCTION_22_6();
      sub_248DB8B68(v32, v33, v34, v35, 0);
    }
    sub_2490E8014();
    v36 = OUTLINED_FUNCTION_22_6();
    sub_248DB8BAC(v36, v37, v38, v39, v24);
    v31 = type metadata accessor for ComparisonPredicate.Template;
    v30 = (uint64_t)v8;
  }
  sub_248DB270C(v30, v31);
}

void static AnyPredicateTemplate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24();
  type metadata accessor for ComparisonPredicate.Template(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (__int128 *)((char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for AnyPredicateTemplate(0);
  OUTLINED_FUNCTION_5_0();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (__int128 *)((char *)&v33 - v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7350);
  OUTLINED_FUNCTION_5_0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_248DB26E0(a1, (uint64_t)v18, type metadata accessor for AnyPredicateTemplate);
  sub_248DB26E0(a2, v19, type metadata accessor for AnyPredicateTemplate);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_248DB26E0((uint64_t)v18, (uint64_t)v14, type metadata accessor for AnyPredicateTemplate);
    if (!OUTLINED_FUNCTION_44_6())
    {
      OUTLINED_FUNCTION_86_1(v19, (uint64_t)v8);
      static ComparisonPredicate.Template.== infix(_:_:)(v14, v8, v27, v28, v29, v30, v31, v32);
      sub_248DB270C((uint64_t)v8, type metadata accessor for ComparisonPredicate.Template);
      v25 = (uint64_t)v14;
      v26 = type metadata accessor for ComparisonPredicate.Template;
      goto LABEL_13;
    }
    v21 = type metadata accessor for ComparisonPredicate.Template;
    v22 = (uint64_t)v14;
LABEL_10:
    sub_248DB270C(v22, v21);
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_248DB26E0((uint64_t)v18, (uint64_t)v12, type metadata accessor for AnyPredicateTemplate);
    if (OUTLINED_FUNCTION_44_6() == 2)
    {
      OUTLINED_FUNCTION_38_6(v19, v2);
      static AnyPredicate.== infix(_:_:)((uint64_t)v12, v2);
      v23 = OUTLINED_FUNCTION_407();
      sub_248DB270C(v23, v24);
      v25 = (uint64_t)v12;
      v26 = type metadata accessor for AnyPredicate;
LABEL_13:
      sub_248DB270C(v25, v26);
      sub_248DB270C((uint64_t)v18, type metadata accessor for AnyPredicateTemplate);
      goto LABEL_14;
    }
    v21 = type metadata accessor for AnyPredicate;
    v22 = (uint64_t)v12;
    goto LABEL_10;
  }
  if (OUTLINED_FUNCTION_44_6() != 1)
  {
LABEL_11:
    sub_248DB939C((uint64_t)v18, &qword_2577E7350);
    goto LABEL_14;
  }
  sub_248DB270C((uint64_t)v18, type metadata accessor for AnyPredicateTemplate);
LABEL_14:
  OUTLINED_FUNCTION_3_1();
}

uint64_t sub_248F153FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x73697261706D6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6553676E69727473 && a2 == 0xEC00000068637261;
    if (v6 || (sub_2490E883C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7461636964657270 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2490E883C();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_248F15578(char a1)
{
  if (!a1)
    return 0x73697261706D6F63;
  if (a1 == 1)
    return 0x6553676E69727473;
  return 0x7461636964657270;
}

uint64_t sub_248F155E0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2490E883C();
    OUTLINED_FUNCTION_31_0();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_248F15648()
{
  OUTLINED_FUNCTION_254();
  sub_2490E88FC();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_35();
}

uint64_t sub_248F15678()
{
  char *v0;

  return sub_248F15578(*v0);
}

uint64_t sub_248F15680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F153FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F156A4()
{
  sub_248F165C8();
  return sub_2490E8968();
}

uint64_t sub_248F156CC()
{
  sub_248F165C8();
  return sub_2490E8974();
}

uint64_t sub_248F156F4()
{
  sub_248F166B8();
  return sub_2490E8968();
}

uint64_t sub_248F1571C()
{
  sub_248F166B8();
  return sub_2490E8974();
}

uint64_t sub_248F15744()
{
  sub_248F16604();
  return sub_2490E8968();
}

uint64_t sub_248F1576C()
{
  sub_248F16604();
  return sub_2490E8974();
}

uint64_t sub_248F15794()
{
  sub_248F16640();
  return sub_2490E8968();
}

uint64_t sub_248F157BC()
{
  sub_248F16640();
  return sub_2490E8974();
}

void AnyPredicateTemplate.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_10();
  v33 = v0;
  v6 = v5;
  v32 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E7358) - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_330(v8, v26);
  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_136(v10, v27);
  v30 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2577E7360) - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_22();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7368);
  v28 = *(_QWORD *)(v12 - 8);
  v29 = v12;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_56();
  type metadata accessor for ComparisonPredicate.Template(v14);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_28_7();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_17_0();
  v19 = v18 - v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7370);
  v34 = *(_QWORD *)(v20 - 8);
  v35 = v20;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_32();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_248F165C8();
  OUTLINED_FUNCTION_62_5();
  sub_248DB26E0(v33, v19, type metadata accessor for AnyPredicateTemplate);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v23 = type metadata accessor for ComparisonPredicate.Template;
    OUTLINED_FUNCTION_268(v19, v3);
    sub_248F166B8();
    v24 = v35;
    OUTLINED_FUNCTION_26_5();
    sub_248D9D9D8(&qword_2544703F8, type metadata accessor for ComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ComparisonPredicate.Template);
    OUTLINED_FUNCTION_95_1();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v2, v29);
    v25 = v3;
LABEL_6:
    sub_248DB270C(v25, v23);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v1, v24);
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v23 = type metadata accessor for AnyPredicate;
    OUTLINED_FUNCTION_268(v19, v31);
    OUTLINED_FUNCTION_99_1();
    v24 = v35;
    OUTLINED_FUNCTION_26_5();
    sub_248D9D9D8(&qword_2577E7388, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_31_7(v32);
    v25 = v31;
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_26_5();
  sub_248F1667C();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_131(v4, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v1, v35);
LABEL_7:
  OUTLINED_FUNCTION_1_1();
}

void AnyPredicateTemplate.hashValue.getter()
{
  sub_248DA9EB4((void (*)(_BYTE *))AnyPredicateTemplate.hash(into:));
}

void AnyPredicateTemplate.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;

  OUTLINED_FUNCTION_10();
  v67 = v0;
  v5 = v4;
  v62 = v6;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E73A0);
  v58 = *(_QWORD *)(v61 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_64();
  v63 = v8;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E73A8);
  v57 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_330(v10, v49);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E73B0);
  v56 = *(_QWORD *)(v59 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_136(v12, v49);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E73B8);
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v14);
  v15 = OUTLINED_FUNCTION_28_7();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_34_4();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v49 - v19;
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_101_3();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v49 - v22;
  v24 = v5[3];
  v66 = v5;
  __swift_project_boxed_opaque_existential_1(v5, v24);
  sub_248F165C8();
  v25 = v67;
  sub_2490E8944();
  if (v25)
    goto LABEL_2;
  v51 = v20;
  v52 = v23;
  v53 = v3;
  v54 = v2;
  v55 = v15;
  v27 = v65;
  v67 = v1;
  v28 = sub_2490E874C();
  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
  {
    v26 = (uint64_t)v66;
LABEL_10:
    v37 = v64;
    v38 = v55;
    sub_2490E8578();
    OUTLINED_FUNCTION_77();
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4070);
    *v40 = v38;
    v41 = v67;
    sub_2490E86BC();
    v42 = OUTLINED_FUNCTION_27_7();
    OUTLINED_FUNCTION_314(v42, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    OUTLINED_FUNCTION_21_11();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v27);
    goto LABEL_11;
  }
  v50 = 0;
  v30 = v27;
  v31 = *(unsigned __int8 *)(v28 + 32);
  sub_248DB8ABC(1, v29, v28, v28 + 32, 0, (2 * v29) | 1);
  v33 = v32;
  v35 = v34;
  swift_bridgeObjectRelease();
  if (v33 != v35 >> 1)
  {
    v26 = (uint64_t)v66;
    v27 = v30;
    goto LABEL_10;
  }
  if (v31)
  {
    if (v31 == 1)
    {
      OUTLINED_FUNCTION_104_3();
      OUTLINED_FUNCTION_36_6();
      sub_248F166F4();
      OUTLINED_FUNCTION_79_2();
      v26 = (uint64_t)v66;
      v36 = v64;
      OUTLINED_FUNCTION_45_7();
      OUTLINED_FUNCTION_21_11();
      OUTLINED_FUNCTION_10_7(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
      v47 = (uint64_t)v51;
    }
    else
    {
      OUTLINED_FUNCTION_99_1();
      OUTLINED_FUNCTION_36_6();
      type metadata accessor for AnyPredicate(0);
      sub_248D9D9D8(&qword_2577E73C0, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
      sub_2490E8728();
      v26 = (uint64_t)v66;
      v46 = v64;
      OUTLINED_FUNCTION_46_4();
      OUTLINED_FUNCTION_21_11();
      OUTLINED_FUNCTION_10_7(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
      v47 = v54;
    }
    goto LABEL_16;
  }
  sub_248F166B8();
  v43 = v67;
  v44 = v50;
  sub_2490E86B0();
  if (!v44)
  {
    type metadata accessor for ComparisonPredicate.Template(0);
    sub_248D9D9D8(&qword_2544760E0, type metadata accessor for ComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ComparisonPredicate.Template);
    OUTLINED_FUNCTION_79_2();
    v26 = (uint64_t)v66;
    v45 = v64;
    OUTLINED_FUNCTION_42_9();
    OUTLINED_FUNCTION_21_11();
    OUTLINED_FUNCTION_131(v43, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
    v47 = v53;
LABEL_16:
    swift_storeEnumTagMultiPayload();
    v48 = (uint64_t)v52;
    OUTLINED_FUNCTION_268(v47, (uint64_t)v52);
    OUTLINED_FUNCTION_268(v48, v62);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_131(v43, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
LABEL_2:
  v26 = (uint64_t)v66;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1(v26);
  OUTLINED_FUNCTION_1_1();
}

uint64_t sub_248F16030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return AnyPredicateTemplate.instantiate(with:)(a1, a2);
}

void sub_248F16050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248DA9EF8(a1, a2, a3, (void (*)(_BYTE *))AnyPredicateTemplate.hash(into:));
}

void sub_248F1605C()
{
  AnyPredicateTemplate.init(from:)();
}

void sub_248F16070()
{
  AnyPredicateTemplate.encode(to:)();
}

unint64_t sub_248F16088()
{
  unint64_t result;

  result = qword_25446FFB0;
  if (!qword_25446FFB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25446FFB0);
  }
  return result;
}

unint64_t sub_248F160C4()
{
  unint64_t result;

  result = qword_2577E7258;
  if (!qword_2577E7258)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8C3C, &type metadata for AnyPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7258);
  }
  return result;
}

unint64_t sub_248F16100()
{
  unint64_t result;

  result = qword_2577E7260;
  if (!qword_2577E7260)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8BEC, &type metadata for AnyPredicate.SuggestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7260);
  }
  return result;
}

unint64_t sub_248F1613C()
{
  unint64_t result;

  result = qword_2577E7268;
  if (!qword_2577E7268)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8B9C, &type metadata for AnyPredicate.ValidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7268);
  }
  return result;
}

unint64_t sub_248F16178()
{
  unint64_t result;

  result = qword_2577E7270;
  if (!qword_2577E7270)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ValidPredicate, &type metadata for ValidPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7270);
  }
  return result;
}

unint64_t sub_248F161B4()
{
  unint64_t result;

  result = qword_2577E7278;
  if (!qword_2577E7278)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8B4C, &type metadata for AnyPredicate.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7278);
  }
  return result;
}

unint64_t sub_248F161F0()
{
  unint64_t result;

  result = qword_254470280;
  if (!qword_254470280)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for AllPredicate, &type metadata for AllPredicate);
    atomic_store(result, (unint64_t *)&qword_254470280);
  }
  return result;
}

unint64_t sub_248F1622C()
{
  unint64_t result;

  result = qword_2577E7280;
  if (!qword_2577E7280)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8AFC, &type metadata for AnyPredicate.SearchableItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7280);
  }
  return result;
}

unint64_t sub_248F16268()
{
  unint64_t result;

  result = qword_2577E7288;
  if (!qword_2577E7288)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for SearchableItemPredicate, &type metadata for SearchableItemPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7288);
  }
  return result;
}

unint64_t sub_248F162A4()
{
  unint64_t result;

  result = qword_2577E7290;
  if (!qword_2577E7290)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8AAC, &type metadata for AnyPredicate.IdSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7290);
  }
  return result;
}

unint64_t sub_248F162E0()
{
  unint64_t result;

  result = qword_2577E7298;
  if (!qword_2577E7298)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8A5C, &type metadata for AnyPredicate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7298);
  }
  return result;
}

unint64_t sub_248F1631C()
{
  unint64_t result;

  result = qword_2577E72A0;
  if (!qword_2577E72A0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for StringSearchPredicate, &type metadata for StringSearchPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E72A0);
  }
  return result;
}

unint64_t sub_248F16358()
{
  unint64_t result;

  result = qword_2577E72A8;
  if (!qword_2577E72A8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8A0C, &type metadata for AnyPredicate.CompoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E72A8);
  }
  return result;
}

unint64_t sub_248F16394()
{
  unint64_t result;

  result = qword_2577E72B0;
  if (!qword_2577E72B0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for CompoundPredicate, &type metadata for CompoundPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E72B0);
  }
  return result;
}

unint64_t sub_248F163D0()
{
  unint64_t result;

  result = qword_2577E72B8;
  if (!qword_2577E72B8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F89BC, &type metadata for AnyPredicate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E72B8);
  }
  return result;
}

unint64_t sub_248F1640C()
{
  unint64_t result;

  result = qword_2577E7308;
  if (!qword_2577E7308)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ValidPredicate, &type metadata for ValidPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7308);
  }
  return result;
}

unint64_t sub_248F16448()
{
  unint64_t result;

  result = qword_2544701C8;
  if (!qword_2544701C8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for AllPredicate, &type metadata for AllPredicate);
    atomic_store(result, (unint64_t *)&qword_2544701C8);
  }
  return result;
}

unint64_t sub_248F16484()
{
  unint64_t result;

  result = qword_2577E7310;
  if (!qword_2577E7310)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for SearchableItemPredicate, &type metadata for SearchableItemPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7310);
  }
  return result;
}

unint64_t sub_248F164C0()
{
  unint64_t result;

  result = qword_2577E7318;
  if (!qword_2577E7318)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for StringSearchPredicate, &type metadata for StringSearchPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7318);
  }
  return result;
}

unint64_t sub_248F164FC()
{
  unint64_t result;

  result = qword_2577E7320;
  if (!qword_2577E7320)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for CompoundPredicate, &type metadata for CompoundPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7320);
  }
  return result;
}

uint64_t type metadata accessor for AnyPredicateTemplate(uint64_t a1)
{
  return sub_248DB43B0(a1, qword_2577E74C0);
}

void sub_248F1654C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_248F1658C()
{
  unint64_t result;

  result = qword_2577E7340;
  if (!qword_2577E7340)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for StringSearchPredicate.Template, &type metadata for StringSearchPredicate.Template);
    atomic_store(result, (unint64_t *)&qword_2577E7340);
  }
  return result;
}

unint64_t sub_248F165C8()
{
  unint64_t result;

  result = qword_2577E7378;
  if (!qword_2577E7378)
  {
    result = MEMORY[0x2495AD758](&unk_2490F896C, &type metadata for AnyPredicateTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7378);
  }
  return result;
}

unint64_t sub_248F16604()
{
  unint64_t result;

  result = qword_2577E7380;
  if (!qword_2577E7380)
  {
    result = MEMORY[0x2495AD758](&unk_2490F891C, &type metadata for AnyPredicateTemplate.PredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7380);
  }
  return result;
}

unint64_t sub_248F16640()
{
  unint64_t result;

  result = qword_2577E7390;
  if (!qword_2577E7390)
  {
    result = MEMORY[0x2495AD758](&unk_2490F88CC, &type metadata for AnyPredicateTemplate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7390);
  }
  return result;
}

unint64_t sub_248F1667C()
{
  unint64_t result;

  result = qword_254470460;
  if (!qword_254470460)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for StringSearchPredicate.Template, &type metadata for StringSearchPredicate.Template);
    atomic_store(result, (unint64_t *)&qword_254470460);
  }
  return result;
}

unint64_t sub_248F166B8()
{
  unint64_t result;

  result = qword_2577E7398;
  if (!qword_2577E7398)
  {
    result = MEMORY[0x2495AD758](&unk_2490F887C, &type metadata for AnyPredicateTemplate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7398);
  }
  return result;
}

unint64_t sub_248F166F4()
{
  unint64_t result;

  result = qword_254476130;
  if (!qword_254476130)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for StringSearchPredicate.Template, &type metadata for StringSearchPredicate.Template);
    atomic_store(result, (unint64_t *)&qword_254476130);
  }
  return result;
}

void sub_248F16730(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_248D9D9D8(&qword_2577E73C8, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
  a1[1] = v2;
  sub_248D9D9D8(&qword_2577E73C0, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
  a1[2] = v3;
  sub_248D9D9D8(&qword_2577E7388, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
  a1[3] = v4;
  sub_248D9D9D8(&qword_2577E73D0, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
  a1[4] = v5;
}

void sub_248F167C4()
{
  sub_248D9D9D8(&qword_2577E73D8, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
}

void sub_248F167F0()
{
  sub_248D9D9D8(&qword_2577E73E0, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
}

void sub_248F1681C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_248D9D9D8(&qword_2577E7428, type metadata accessor for AnyPredicateTemplate, (uint64_t)&protocol conformance descriptor for AnyPredicateTemplate);
  a1[1] = v2;
  sub_248D9D9D8(&qword_2577E7430, type metadata accessor for AnyPredicateTemplate, (uint64_t)&protocol conformance descriptor for AnyPredicateTemplate);
  a1[2] = v3;
  sub_248D9D9D8(&qword_2577E7438, type metadata accessor for AnyPredicateTemplate, (uint64_t)&protocol conformance descriptor for AnyPredicateTemplate);
  a1[3] = v4;
  sub_248D9D9D8(&qword_2577E7440, type metadata accessor for AnyPredicateTemplate, (uint64_t)&protocol conformance descriptor for AnyPredicateTemplate);
  a1[4] = v5;
}

void sub_248F168B0()
{
  sub_248D9D9D8(&qword_2577E7448, type metadata accessor for AnyPredicateTemplate, (uint64_t)&protocol conformance descriptor for AnyPredicateTemplate);
}

char *initializeBufferWithCopyOfBuffer for AnyPredicate(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v23[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v7;
        v8 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v8;
        v9 = (uint64_t)a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        v10 = (unint64_t)a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_248F16ADC(v9, v10);
        *((_QWORD *)a1 + 5) = v9;
        *((_QWORD *)a1 + 6) = v10;
        v11 = type metadata accessor for ComparisonPredicate(0);
        v12 = *(int *)(v11 + 24);
        v13 = &a1[v12];
        v14 = (char *)a2 + v12;
        v15 = sub_2490E6D18();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
        v16 = *(int *)(v11 + 28);
        v17 = &a1[v16];
        v18 = (char *)a2 + v16;
        v19 = *(_QWORD *)v18;
        v20 = *((_QWORD *)v18 + 1);
        v21 = *((_QWORD *)v18 + 2);
        v22 = *((_QWORD *)v18 + 3);
        LOBYTE(v10) = v18[32];
        sub_248DB8B68(*(_QWORD *)v18, v20, v21, v22, v10);
        *(_QWORD *)v17 = v19;
        *((_QWORD *)v17 + 1) = v20;
        *((_QWORD *)v17 + 2) = v21;
        *((_QWORD *)v17 + 3) = v22;
        v17[32] = v10;
        goto LABEL_10;
      case 1u:
        *a1 = *(_BYTE *)a2;
        *((_QWORD *)a1 + 1) = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
        v24 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v24;
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 3u:
        v25 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v25;
        *((_QWORD *)a1 + 2) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 4u:
        v26 = *a2;
        *(_QWORD *)a1 = *a2;
        v27 = v26;
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_248F16ADC(uint64_t a1, unint64_t a2)
{
  unsigned int v2;
  uint64_t result;

  v2 = (a2 >> 57) & 8 | a2 & 7;
  if (v2 < 0xC)
    return swift_retain();
  if (v2 == 12)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

void destroy for AnyPredicate(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_248F16C28(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
      v2 = type metadata accessor for ComparisonPredicate(0);
      v3 = a1 + *(int *)(v2 + 24);
      v4 = sub_2490E6D18();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      v5 = a1 + *(int *)(v2 + 28);
      sub_248DB8BAC(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_BYTE *)(v5 + 32));
      break;
    case 1u:
    case 2u:
      goto LABEL_4;
    case 3u:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 4u:

      break;
    default:
      return;
  }
}

uint64_t sub_248F16C28(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  switch((a2 >> 57) & 8 | a2 & 7)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      goto LABEL_2;
    case 0xCuLL:
      swift_release();
LABEL_2:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for AnyPredicate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      v8 = a2[5];
      a1[4] = a2[4];
      v9 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_248F16ADC(v8, v9);
      a1[5] = v8;
      a1[6] = v9;
      v10 = type metadata accessor for ComparisonPredicate(0);
      v11 = *(int *)(v10 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      v15 = *(int *)(v10 + 28);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = *(_QWORD *)v17;
      v19 = *((_QWORD *)v17 + 1);
      v20 = *((_QWORD *)v17 + 2);
      v21 = *((_QWORD *)v17 + 3);
      LOBYTE(v9) = v17[32];
      sub_248DB8B68(*(_QWORD *)v17, v19, v20, v21, v9);
      *(_QWORD *)v16 = v18;
      *((_QWORD *)v16 + 1) = v19;
      *((_QWORD *)v16 + 2) = v20;
      *((_QWORD *)v16 + 3) = v21;
      v16[32] = v9;
      goto LABEL_8;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 2u:
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 3u:
      v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 4u:
      v24 = (void *)*a2;
      *a1 = *a2;
      v25 = v24;
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for AnyPredicate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  if (a1 != a2)
  {
    sub_248DB270C((uint64_t)a1, type metadata accessor for AnyPredicate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        v6 = a2[5];
        v7 = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_248F16ADC(v6, v7);
        a1[5] = v6;
        a1[6] = v7;
        v8 = type metadata accessor for ComparisonPredicate(0);
        v9 = *(int *)(v8 + 24);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_2490E6D18();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        v13 = *(int *)(v8 + 28);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = *(_QWORD *)v15;
        v17 = *((_QWORD *)v15 + 1);
        v18 = *((_QWORD *)v15 + 2);
        v19 = *((_QWORD *)v15 + 3);
        LOBYTE(v7) = v15[32];
        sub_248DB8B68(*(_QWORD *)v15, v17, v18, v19, v7);
        *(_QWORD *)v14 = v16;
        *((_QWORD *)v14 + 1) = v17;
        *((_QWORD *)v14 + 2) = v18;
        *((_QWORD *)v14 + 3) = v19;
        v14[32] = v7;
        goto LABEL_9;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        v20 = (void *)*a2;
        *a1 = *a2;
        v21 = v20;
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for AnyPredicate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    v7 = type metadata accessor for ComparisonPredicate(0);
    v8 = *(int *)(v7 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2490E6D18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    v12 = *(int *)(v7 + 28);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    v13[32] = v14[32];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for AnyPredicate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  if (a1 != a2)
  {
    sub_248DB270C((uint64_t)a1, type metadata accessor for AnyPredicate);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v7 = type metadata accessor for ComparisonPredicate(0);
      v8 = *(int *)(v7 + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      v12 = *(int *)(v7 + 28);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      v13[32] = v14[32];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_248F17248()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ComparisonPredicate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AnyPredicateTemplate(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v24 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v24[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v25 = type metadata accessor for AnyPredicate(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v26 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v26;
          v27 = a2[3];
          *((_QWORD *)a1 + 2) = a2[2];
          *((_QWORD *)a1 + 3) = v27;
          v28 = (uint64_t)a2[5];
          *((_QWORD *)a1 + 4) = a2[4];
          v29 = (unint64_t)a2[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_248F16ADC(v28, v29);
          *((_QWORD *)a1 + 5) = v28;
          *((_QWORD *)a1 + 6) = v29;
          v30 = type metadata accessor for ComparisonPredicate(0);
          v31 = *(int *)(v30 + 24);
          v32 = &a1[v31];
          v33 = (char *)a2 + v31;
          v34 = sub_2490E6D18();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
          v35 = *(int *)(v30 + 28);
          v36 = &a1[v35];
          v37 = (char *)a2 + v35;
          v38 = *(_QWORD *)v37;
          v39 = *((_QWORD *)v37 + 1);
          v40 = *((_QWORD *)v37 + 2);
          v41 = *((_QWORD *)v37 + 3);
          LOBYTE(v29) = v37[32];
          sub_248DB8B68(*(_QWORD *)v37, v39, v40, v41, v29);
          *(_QWORD *)v36 = v38;
          *((_QWORD *)v36 + 1) = v39;
          *((_QWORD *)v36 + 2) = v40;
          *((_QWORD *)v36 + 3) = v41;
          v36[32] = v29;
          goto LABEL_13;
        case 1u:
          *a1 = *(_BYTE *)a2;
          *((_QWORD *)a1 + 1) = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 2u:
          v42 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v42;
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 3u:
          v43 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v43;
          *((_QWORD *)a1 + 2) = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 4u:
          v44 = *a2;
          *(_QWORD *)a1 = *a2;
          v45 = v44;
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          break;
      }
      goto LABEL_14;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v8;
      v9 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v9;
      v10 = (unint64_t)a2[5];
      *((_QWORD *)a1 + 4) = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_248F175F4(v10);
      *((_QWORD *)a1 + 5) = v10;
      v11 = type metadata accessor for ComparisonPredicate.Template(0);
      v12 = *(int *)(v11 + 24);
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      v15 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = *(int *)(v11 + 28);
      v17 = &a1[v16];
      v18 = (char *)a2 + v16;
      v19 = *(_QWORD *)v18;
      v20 = *((_QWORD *)v18 + 1);
      v21 = *((_QWORD *)v18 + 2);
      v22 = *((_QWORD *)v18 + 3);
      v23 = v18[32];
      sub_248DB8B68(*(_QWORD *)v18, v20, v21, v22, v23);
      *(_QWORD *)v17 = v19;
      *((_QWORD *)v17 + 1) = v20;
      *((_QWORD *)v17 + 2) = v21;
      *((_QWORD *)v17 + 3) = v22;
      v17[32] = v23;
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

unint64_t sub_248F175F4(unint64_t result)
{
  if (((result >> 57) & 8 | result & 7) <= 0xC)
    return swift_retain();
  return result;
}

void destroy for AnyPredicateTemplate(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for AnyPredicate(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_248F16C28(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
        v3 = type metadata accessor for ComparisonPredicate(0);
        goto LABEL_4;
      case 1u:
      case 2u:
        goto LABEL_10;
      case 3u:
        swift_bridgeObjectRelease();
LABEL_10:
        swift_bridgeObjectRelease();
        break;
      case 4u:

        break;
      default:
        return;
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_248F1776C(*(_QWORD *)(a1 + 40));
    v3 = type metadata accessor for ComparisonPredicate.Template(0);
LABEL_4:
    v4 = v3;
    v5 = a1 + *(int *)(v3 + 24);
    v6 = sub_2490E6D18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = a1 + *(int *)(v4 + 28);
    sub_248DB8BAC(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_BYTE *)(v7 + 32));
  }
}

unint64_t sub_248F1776C(unint64_t result)
{
  if (((result >> 57) & 8 | result & 7) <= 0xC)
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for AnyPredicateTemplate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v23 = type metadata accessor for AnyPredicate(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v24 = a2[1];
        *a1 = *a2;
        a1[1] = v24;
        v25 = a2[3];
        a1[2] = a2[2];
        a1[3] = v25;
        v26 = a2[5];
        a1[4] = a2[4];
        v27 = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_248F16ADC(v26, v27);
        a1[5] = v26;
        a1[6] = v27;
        v28 = type metadata accessor for ComparisonPredicate(0);
        v29 = *(int *)(v28 + 24);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = sub_2490E6D18();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        v33 = *(int *)(v28 + 28);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = *(_QWORD *)v35;
        v37 = *((_QWORD *)v35 + 1);
        v38 = *((_QWORD *)v35 + 2);
        v39 = *((_QWORD *)v35 + 3);
        LOBYTE(v27) = v35[32];
        sub_248DB8B68(*(_QWORD *)v35, v37, v38, v39, v27);
        *(_QWORD *)v34 = v36;
        *((_QWORD *)v34 + 1) = v37;
        *((_QWORD *)v34 + 2) = v38;
        *((_QWORD *)v34 + 3) = v39;
        v34[32] = v27;
        goto LABEL_12;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 2u:
        v40 = a2[1];
        *a1 = *a2;
        a1[1] = v40;
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 3u:
        v41 = a2[1];
        *a1 = *a2;
        a1[1] = v41;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 4u:
        v42 = (void *)*a2;
        *a1 = *a2;
        v43 = v42;
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        break;
    }
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_248F175F4(v9);
    a1[5] = v9;
    v10 = type metadata accessor for ComparisonPredicate.Template(0);
    v11 = *(int *)(v10 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2490E6D18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = *(int *)(v10 + 28);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = *((_QWORD *)v17 + 1);
    v20 = *((_QWORD *)v17 + 2);
    v21 = *((_QWORD *)v17 + 3);
    v22 = v17[32];
    sub_248DB8B68(*(_QWORD *)v17, v19, v20, v21, v22);
    *(_QWORD *)v16 = v18;
    *((_QWORD *)v16 + 1) = v19;
    *((_QWORD *)v16 + 2) = v20;
    *((_QWORD *)v16 + 3) = v21;
    v16[32] = v22;
LABEL_13:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for AnyPredicateTemplate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;

  if (a1 != a2)
  {
    sub_248DB270C((uint64_t)a1, type metadata accessor for AnyPredicateTemplate);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v21 = type metadata accessor for AnyPredicate(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          v22 = a2[5];
          v23 = a2[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_248F16ADC(v22, v23);
          a1[5] = v22;
          a1[6] = v23;
          v24 = type metadata accessor for ComparisonPredicate(0);
          v25 = *(int *)(v24 + 24);
          v26 = (char *)a1 + v25;
          v27 = (char *)a2 + v25;
          v28 = sub_2490E6D18();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
          v29 = *(int *)(v24 + 28);
          v30 = (char *)a1 + v29;
          v31 = (char *)a2 + v29;
          v32 = *(_QWORD *)v31;
          v33 = *((_QWORD *)v31 + 1);
          v34 = *((_QWORD *)v31 + 2);
          v35 = *((_QWORD *)v31 + 3);
          LOBYTE(v23) = v31[32];
          sub_248DB8B68(*(_QWORD *)v31, v33, v34, v35, v23);
          *(_QWORD *)v30 = v32;
          *((_QWORD *)v30 + 1) = v33;
          *((_QWORD *)v30 + 2) = v34;
          *((_QWORD *)v30 + 3) = v35;
          v30[32] = v23;
          goto LABEL_13;
        case 1u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 3u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 4u:
          v36 = (void *)*a2;
          *a1 = *a2;
          v37 = v36;
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          break;
      }
      goto LABEL_14;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      v7 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_248F175F4(v7);
      a1[5] = v7;
      v8 = type metadata accessor for ComparisonPredicate.Template(0);
      v9 = *(int *)(v8 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = *(int *)(v8 + 28);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = *(_QWORD *)v15;
      v17 = *((_QWORD *)v15 + 1);
      v18 = *((_QWORD *)v15 + 2);
      v19 = *((_QWORD *)v15 + 3);
      v20 = v15[32];
      sub_248DB8B68(*(_QWORD *)v15, v17, v18, v19, v20);
      *(_QWORD *)v14 = v16;
      *((_QWORD *)v14 + 1) = v17;
      *((_QWORD *)v14 + 2) = v18;
      *((_QWORD *)v14 + 3) = v19;
      v14[32] = v20;
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for AnyPredicateTemplate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v18 = type metadata accessor for AnyPredicate(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v20 = type metadata accessor for ComparisonPredicate(0);
      v21 = *(int *)(v20 + 24);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      v25 = *(int *)(v20 + 28);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v28;
      v26[32] = v27[32];
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *((_QWORD *)a2 + 5);
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 5) = v8;
    v9 = type metadata accessor for ComparisonPredicate.Template(0);
    v10 = *(int *)(v9 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2490E6D18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    v14 = *(int *)(v9 + 28);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    v15[32] = v16[32];
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for AnyPredicateTemplate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;

  if (a1 != a2)
  {
    sub_248DB270C((uint64_t)a1, type metadata accessor for AnyPredicateTemplate);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = type metadata accessor for AnyPredicate(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v20 = type metadata accessor for ComparisonPredicate(0);
        v21 = *(int *)(v20 + 24);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_2490E6D18();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        v25 = *(int *)(v20 + 28);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v28;
        v26[32] = v27[32];
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v8;
      v9 = type metadata accessor for ComparisonPredicate.Template(0);
      v10 = *(int *)(v9 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = *(int *)(v9 + 28);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      v15[32] = v16[32];
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_248F1811C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ComparisonPredicate.Template(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for AnyPredicate(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnyPredicateTemplate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248F181F4 + 4 * byte_2490F7B7A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_248F18228 + 4 * byte_2490F7B75[v4]))();
}

uint64_t sub_248F18228(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F18230(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F18238);
  return result;
}

uint64_t sub_248F18244(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F1824CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_248F18250(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F18258(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyPredicateTemplate.CodingKeys()
{
  return &type metadata for AnyPredicateTemplate.CodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicateTemplate.ComparisonCodingKeys()
{
  return &type metadata for AnyPredicateTemplate.ComparisonCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicateTemplate.StringSearchCodingKeys()
{
  return &type metadata for AnyPredicateTemplate.StringSearchCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicateTemplate.PredicateCodingKeys()
{
  return &type metadata for AnyPredicateTemplate.PredicateCodingKeys;
}

uint64_t storeEnumTagSinglePayload for AnyPredicate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_248F182F4 + 4 * byte_2490F7B84[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_248F18328 + 4 * byte_2490F7B7F[v4]))();
}

uint64_t sub_248F18328(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F18330(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F18338);
  return result;
}

uint64_t sub_248F18344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F1834CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_248F18350(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F18358(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyPredicate.CodingKeys()
{
  return &type metadata for AnyPredicate.CodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicate.ComparisonCodingKeys()
{
  return &type metadata for AnyPredicate.ComparisonCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicate.CompoundCodingKeys()
{
  return &type metadata for AnyPredicate.CompoundCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicate.StringSearchCodingKeys()
{
  return &type metadata for AnyPredicate.StringSearchCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicate.IdSearchCodingKeys()
{
  return &type metadata for AnyPredicate.IdSearchCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicate.SearchableItemCodingKeys()
{
  return &type metadata for AnyPredicate.SearchableItemCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicate.AllCodingKeys()
{
  return &type metadata for AnyPredicate.AllCodingKeys;
}

ValueMetadata *type metadata accessor for AnyPredicate.ValidCodingKeys()
{
  return &type metadata for AnyPredicate.ValidCodingKeys;
}

uint64_t _s7ToolKit20AnyPredicateTemplateO20ComparisonCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_248F18424 + 4 * byte_2490F7B89[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_248F18444 + 4 * byte_2490F7B8E[v4]))();
}

_BYTE *sub_248F18424(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_248F18444(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248F1844C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248F18454(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248F1845C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248F18464(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AnyPredicate.SuggestedCodingKeys()
{
  return &type metadata for AnyPredicate.SuggestedCodingKeys;
}

unint64_t sub_248F18484()
{
  unint64_t result;

  result = qword_2577E74F8;
  if (!qword_2577E74F8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F7FB4, &type metadata for AnyPredicate.SuggestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E74F8);
  }
  return result;
}

unint64_t sub_248F184C4()
{
  unint64_t result;

  result = qword_2577E7500;
  if (!qword_2577E7500)
  {
    result = MEMORY[0x2495AD758](&unk_2490F806C, &type metadata for AnyPredicate.ValidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7500);
  }
  return result;
}

unint64_t sub_248F18504()
{
  unint64_t result;

  result = qword_2577E7508;
  if (!qword_2577E7508)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8124, &type metadata for AnyPredicate.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7508);
  }
  return result;
}

unint64_t sub_248F18544()
{
  unint64_t result;

  result = qword_2577E7510;
  if (!qword_2577E7510)
  {
    result = MEMORY[0x2495AD758](&unk_2490F81DC, &type metadata for AnyPredicate.SearchableItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7510);
  }
  return result;
}

unint64_t sub_248F18584()
{
  unint64_t result;

  result = qword_2577E7518;
  if (!qword_2577E7518)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8294, &type metadata for AnyPredicate.IdSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7518);
  }
  return result;
}

unint64_t sub_248F185C4()
{
  unint64_t result;

  result = qword_2577E7520;
  if (!qword_2577E7520)
  {
    result = MEMORY[0x2495AD758](&unk_2490F834C, &type metadata for AnyPredicate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7520);
  }
  return result;
}

unint64_t sub_248F18604()
{
  unint64_t result;

  result = qword_2577E7528;
  if (!qword_2577E7528)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8404, &type metadata for AnyPredicate.CompoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7528);
  }
  return result;
}

unint64_t sub_248F18644()
{
  unint64_t result;

  result = qword_2577E7530;
  if (!qword_2577E7530)
  {
    result = MEMORY[0x2495AD758](&unk_2490F84BC, &type metadata for AnyPredicate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7530);
  }
  return result;
}

unint64_t sub_248F18684()
{
  unint64_t result;

  result = qword_2577E7538;
  if (!qword_2577E7538)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8574, &type metadata for AnyPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7538);
  }
  return result;
}

unint64_t sub_248F186C4()
{
  unint64_t result;

  result = qword_2577E7540;
  if (!qword_2577E7540)
  {
    result = MEMORY[0x2495AD758](&unk_2490F862C, &type metadata for AnyPredicateTemplate.PredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7540);
  }
  return result;
}

unint64_t sub_248F18704()
{
  unint64_t result;

  result = qword_2577E7548;
  if (!qword_2577E7548)
  {
    result = MEMORY[0x2495AD758](&unk_2490F86E4, &type metadata for AnyPredicateTemplate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7548);
  }
  return result;
}

unint64_t sub_248F18744()
{
  unint64_t result;

  result = qword_2577E7550;
  if (!qword_2577E7550)
  {
    result = MEMORY[0x2495AD758](&unk_2490F879C, &type metadata for AnyPredicateTemplate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7550);
  }
  return result;
}

unint64_t sub_248F18784()
{
  unint64_t result;

  result = qword_2577E7558;
  if (!qword_2577E7558)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8854, &type metadata for AnyPredicateTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7558);
  }
  return result;
}

unint64_t sub_248F187C4()
{
  unint64_t result;

  result = qword_2577E7560;
  if (!qword_2577E7560)
  {
    result = MEMORY[0x2495AD758](&unk_2490F870C, &type metadata for AnyPredicateTemplate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7560);
  }
  return result;
}

unint64_t sub_248F18804()
{
  unint64_t result;

  result = qword_2577E7568;
  if (!qword_2577E7568)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8734, &type metadata for AnyPredicateTemplate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7568);
  }
  return result;
}

unint64_t sub_248F18844()
{
  unint64_t result;

  result = qword_2577E7570;
  if (!qword_2577E7570)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8654, &type metadata for AnyPredicateTemplate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7570);
  }
  return result;
}

unint64_t sub_248F18884()
{
  unint64_t result;

  result = qword_2577E7578;
  if (!qword_2577E7578)
  {
    result = MEMORY[0x2495AD758](&unk_2490F867C, &type metadata for AnyPredicateTemplate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7578);
  }
  return result;
}

unint64_t sub_248F188C4()
{
  unint64_t result;

  result = qword_2577E7580;
  if (!qword_2577E7580)
  {
    result = MEMORY[0x2495AD758](&unk_2490F859C, &type metadata for AnyPredicateTemplate.PredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7580);
  }
  return result;
}

unint64_t sub_248F18904()
{
  unint64_t result;

  result = qword_2577E7588;
  if (!qword_2577E7588)
  {
    result = MEMORY[0x2495AD758](&unk_2490F85C4, &type metadata for AnyPredicateTemplate.PredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7588);
  }
  return result;
}

unint64_t sub_248F18944()
{
  unint64_t result;

  result = qword_2577E7590;
  if (!qword_2577E7590)
  {
    result = MEMORY[0x2495AD758](&unk_2490F87C4, &type metadata for AnyPredicateTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7590);
  }
  return result;
}

unint64_t sub_248F18984()
{
  unint64_t result;

  result = qword_2577E7598;
  if (!qword_2577E7598)
  {
    result = MEMORY[0x2495AD758](&unk_2490F87EC, &type metadata for AnyPredicateTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7598);
  }
  return result;
}

unint64_t sub_248F189C4()
{
  unint64_t result;

  result = qword_2577E75A0;
  if (!qword_2577E75A0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F842C, &type metadata for AnyPredicate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75A0);
  }
  return result;
}

unint64_t sub_248F18A04()
{
  unint64_t result;

  result = qword_2577E75A8;
  if (!qword_2577E75A8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8454, &type metadata for AnyPredicate.ComparisonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75A8);
  }
  return result;
}

unint64_t sub_248F18A44()
{
  unint64_t result;

  result = qword_2577E75B0;
  if (!qword_2577E75B0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8374, &type metadata for AnyPredicate.CompoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75B0);
  }
  return result;
}

unint64_t sub_248F18A84()
{
  unint64_t result;

  result = qword_2577E75B8;
  if (!qword_2577E75B8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F839C, &type metadata for AnyPredicate.CompoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75B8);
  }
  return result;
}

unint64_t sub_248F18AC4()
{
  unint64_t result;

  result = qword_2577E75C0;
  if (!qword_2577E75C0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F82BC, &type metadata for AnyPredicate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75C0);
  }
  return result;
}

unint64_t sub_248F18B04()
{
  unint64_t result;

  result = qword_2577E75C8;
  if (!qword_2577E75C8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F82E4, &type metadata for AnyPredicate.StringSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75C8);
  }
  return result;
}

unint64_t sub_248F18B44()
{
  unint64_t result;

  result = qword_2577E75D0;
  if (!qword_2577E75D0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8204, &type metadata for AnyPredicate.IdSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75D0);
  }
  return result;
}

unint64_t sub_248F18B84()
{
  unint64_t result;

  result = qword_2577E75D8;
  if (!qword_2577E75D8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F822C, &type metadata for AnyPredicate.IdSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75D8);
  }
  return result;
}

unint64_t sub_248F18BC4()
{
  unint64_t result;

  result = qword_2577E75E0;
  if (!qword_2577E75E0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F814C, &type metadata for AnyPredicate.SearchableItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75E0);
  }
  return result;
}

unint64_t sub_248F18C04()
{
  unint64_t result;

  result = qword_2577E75E8;
  if (!qword_2577E75E8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8174, &type metadata for AnyPredicate.SearchableItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75E8);
  }
  return result;
}

unint64_t sub_248F18C44()
{
  unint64_t result;

  result = qword_2577E75F0;
  if (!qword_2577E75F0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8094, &type metadata for AnyPredicate.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75F0);
  }
  return result;
}

unint64_t sub_248F18C84()
{
  unint64_t result;

  result = qword_2577E75F8;
  if (!qword_2577E75F8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F80BC, &type metadata for AnyPredicate.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E75F8);
  }
  return result;
}

unint64_t sub_248F18CC4()
{
  unint64_t result;

  result = qword_2577E7600;
  if (!qword_2577E7600)
  {
    result = MEMORY[0x2495AD758](&unk_2490F7FDC, &type metadata for AnyPredicate.ValidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7600);
  }
  return result;
}

unint64_t sub_248F18D04()
{
  unint64_t result;

  result = qword_2577E7608;
  if (!qword_2577E7608)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8004, &type metadata for AnyPredicate.ValidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7608);
  }
  return result;
}

unint64_t sub_248F18D44()
{
  unint64_t result;

  result = qword_2577E7610;
  if (!qword_2577E7610)
  {
    result = MEMORY[0x2495AD758](&unk_2490F7F24, &type metadata for AnyPredicate.SuggestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7610);
  }
  return result;
}

unint64_t sub_248F18D84()
{
  unint64_t result;

  result = qword_2577E7618;
  if (!qword_2577E7618)
  {
    result = MEMORY[0x2495AD758](&unk_2490F7F4C, &type metadata for AnyPredicate.SuggestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7618);
  }
  return result;
}

unint64_t sub_248F18DC4()
{
  unint64_t result;

  result = qword_2577E7620;
  if (!qword_2577E7620)
  {
    result = MEMORY[0x2495AD758](&unk_2490F84E4, &type metadata for AnyPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7620);
  }
  return result;
}

unint64_t sub_248F18E04()
{
  unint64_t result;

  result = qword_2577E7628;
  if (!qword_2577E7628)
  {
    result = MEMORY[0x2495AD758](&unk_2490F850C, &type metadata for AnyPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7628);
  }
  return result;
}

unint64_t sub_248F18E40()
{
  unint64_t result;

  result = qword_2577E7630;
  if (!qword_2577E7630)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ValidPredicate, &type metadata for ValidPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7630);
  }
  return result;
}

unint64_t sub_248F18E7C()
{
  unint64_t result;

  result = qword_2577E7638;
  if (!qword_2577E7638)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for SuggestedPredicate, &type metadata for SuggestedPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7638);
  }
  return result;
}

unint64_t sub_248F18EB8()
{
  unint64_t result;

  result = qword_2577E7640;
  if (!qword_2577E7640)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for AllPredicate, &type metadata for AllPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7640);
  }
  return result;
}

unint64_t sub_248F18EF4()
{
  unint64_t result;

  result = qword_2577E7648;
  if (!qword_2577E7648)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for SearchableItemPredicate, &type metadata for SearchableItemPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7648);
  }
  return result;
}

unint64_t sub_248F18F30()
{
  unint64_t result;

  result = qword_2577E7650;
  if (!qword_2577E7650)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for StringSearchPredicate, &type metadata for StringSearchPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7650);
  }
  return result;
}

unint64_t sub_248F18F6C()
{
  unint64_t result;

  result = qword_2577E7658;
  if (!qword_2577E7658)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for CompoundPredicate, &type metadata for CompoundPredicate);
    atomic_store(result, (unint64_t *)&qword_2577E7658);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  return sub_2490E86B0();
}

uint64_t OUTLINED_FUNCTION_4_15()
{
  return sub_2490E86B0();
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  uint64_t v0;

  type metadata accessor for AnyPredicate(0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return sub_2490E8728();
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 72), *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_10_7@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_12_11@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 - 72), *(_QWORD *)(v1 - 128));
}

void OUTLINED_FUNCTION_13_7()
{
  uint64_t v0;
  uint64_t v1;

  sub_248F1654C(v0, v1 - 88);
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return sub_2490E8764();
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_19_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return sub_2490E87D0();
}

uint64_t OUTLINED_FUNCTION_24_7()
{
  return sub_2490E87D0();
}

uint64_t OUTLINED_FUNCTION_26_5()
{
  return sub_2490E8764();
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return sub_2490E856C();
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return type metadata accessor for AnyPredicateTemplate(0);
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  return type metadata accessor for ComparisonPredicate.Template(0);
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return sub_2490E8764();
}

uint64_t OUTLINED_FUNCTION_31_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  return sub_2490E86B0();
}

void OUTLINED_FUNCTION_38_6(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248DB44D0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_41_11@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_42_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_43_6()
{
  return sub_2490E8764();
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_47_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

void OUTLINED_FUNCTION_55_6(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_56_4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_60_4()
{
  return sub_2490E8650();
}

uint64_t OUTLINED_FUNCTION_62_5()
{
  return sub_2490E895C();
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return sub_2490E883C();
}

uint64_t OUTLINED_FUNCTION_66_5()
{
  return type metadata accessor for ComparisonPredicate(0);
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_74_3(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_248DB44D0(a1, v2, v1);
}

void OUTLINED_FUNCTION_76_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_248F1654C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_79_2()
{
  return sub_2490E8728();
}

unint64_t OUTLINED_FUNCTION_80_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 7;
  return sub_248F16100();
}

unint64_t OUTLINED_FUNCTION_81_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 6;
  return sub_248F1613C();
}

unint64_t OUTLINED_FUNCTION_84_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 5;
  return sub_248F161B4();
}

void OUTLINED_FUNCTION_86_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_248DB44D0(a1, a2, v2);
}

unint64_t OUTLINED_FUNCTION_90_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 4;
  return sub_248F1622C();
}

unint64_t OUTLINED_FUNCTION_93_2()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(v0, v1);
  return sub_248F160C4();
}

uint64_t OUTLINED_FUNCTION_94_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_95_1()
{
  return sub_2490E87D0();
}

unint64_t OUTLINED_FUNCTION_96_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 3;
  return sub_248F162A4();
}

unint64_t OUTLINED_FUNCTION_98_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 2;
  return sub_248F162E0();
}

unint64_t OUTLINED_FUNCTION_99_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_248F16604();
}

unint64_t OUTLINED_FUNCTION_103_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 1;
  return sub_248F16358();
}

unint64_t OUTLINED_FUNCTION_104_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_248F16640();
}

uint64_t sub_248F19398(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x6449776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 25705 && a2 == 0xE200000000000000;
    if (v6 || (sub_2490E883C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6974696E69666564 && a2 == 0xEA00000000006E6FLL;
      if (v7 || (sub_2490E883C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000249132290 || (sub_2490E883C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x8000000249131670 || (sub_2490E883C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000249131710)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = sub_2490E883C();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_248F195E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248F19614 + 4 * byte_2490F8CF8[a1]))(0x6449776F72, 0xE500000000000000);
}

uint64_t sub_248F19614()
{
  return 25705;
}

uint64_t sub_248F19620()
{
  return 0x6974696E69666564;
}

unint64_t sub_248F1963C()
{
  return 0xD000000000000010;
}

unint64_t sub_248F19658()
{
  return 0xD000000000000019;
}

void sub_248F19694(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E76A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_17_0();
  v6 = v5 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248F1B100();
  sub_2490E895C();
  sub_2490E87A0();
  if (!v7)
  {
    sub_248DEB0FC();
    OUTLINED_FUNCTION_8_11();
    sub_248F1B1B4();
    OUTLINED_FUNCTION_8_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25447A658);
    sub_248DEBF58(&qword_254470508, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    OUTLINED_FUNCTION_6_15();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254479D58);
    sub_248F1B1F0(&qword_2544704E8, (uint64_t (*)(void))sub_248F1B24C, MEMORY[0x24BEE12A0]);
    OUTLINED_FUNCTION_6_15();
    sub_2490E87DC();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  OUTLINED_FUNCTION_1_1();
}

void sub_248F199A0(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD v41[19];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _BYTE v58[7];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  _DWORD v63[3];
  _QWORD *v64;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7698);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_17_0();
  v9 = v8 - v7;
  v10 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_248F1B100();
  sub_2490E8944();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  }
  else
  {
    v39 = a2;
    LOBYTE(v42) = 0;
    v11 = sub_2490E86F8();
    v13 = v12;
    sub_248DEB63C();
    OUTLINED_FUNCTION_16_7();
    OUTLINED_FUNCTION_5_14();
    LOBYTE(v41[0]) = 2;
    v14 = sub_248F1B13C();
    swift_retain();
    OUTLINED_FUNCTION_5_14();
    if (v14)
    {
      OUTLINED_FUNCTION_4_16();
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
      OUTLINED_FUNCTION_175();
      swift_release();
    }
    else
    {
      v25 = v42;
      v30 = v42;
      v31 = v43;
      v32 = v44;
      v33 = v45;
      v29 = v47;
      v34 = v46;
      v35 = v49;
      v36 = v50;
      v37 = v51;
      v38 = v48;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25447A658);
      v28 = v54;
      v27 = v53;
      v26 = v52;
      v15 = OUTLINED_FUNCTION_12_12();
      sub_248E05FDC(v15, v16, v17, v18, v19, v47, v48, v20, v22, v23, v52, v53, v54);
      sub_248DEBF58(&qword_2544761E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
      OUTLINED_FUNCTION_7_12();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254479D58);
      LOBYTE(v41[0]) = 4;
      sub_248F1B1F0(&qword_2544761B8, (uint64_t (*)(void))sub_248F1B178, MEMORY[0x24BEE12D0]);
      OUTLINED_FUNCTION_16_7();
      OUTLINED_FUNCTION_7_12();
      v40 = v42;
      v62 = 5;
      swift_bridgeObjectRetain();
      v21 = v42;
      v24 = sub_2490E8734();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
      v41[0] = v11;
      v41[1] = v13;
      v41[2] = v42;
      v41[3] = v42;
      v41[4] = v43;
      v41[5] = v44;
      v41[6] = v45;
      v41[7] = v46;
      v41[8] = v47;
      v41[9] = v48;
      v41[10] = v49;
      v41[11] = v50;
      v41[12] = v51;
      v41[13] = v52;
      v41[14] = v53;
      LOBYTE(v41[15]) = v54;
      v41[16] = v42;
      v41[17] = v42;
      v41[18] = v24;
      sub_248E05F0C((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_248DC0FF0(v30, v31, v32, v33, v34, v29, v38, v35, v36, v37, v26, v27, v28);
      OUTLINED_FUNCTION_175();
      swift_release();
      memcpy(v39, v41, 0x98uLL);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
      v42 = v11;
      v43 = v13;
      v44 = v25;
      v45 = v30;
      v46 = v31;
      v47 = v32;
      v48 = v33;
      v49 = v34;
      v50 = v29;
      v51 = v38;
      v52 = v35;
      v53 = v36;
      v54 = v37;
      v55 = v26;
      v56 = v27;
      v57 = v28;
      *(_DWORD *)v58 = v63[0];
      *(_DWORD *)&v58[3] = *(_DWORD *)((char *)v63 + 3);
      v59 = v40;
      v60 = v21;
      v61 = v24;
      sub_248E06168((uint64_t)&v42);
    }
  }
  OUTLINED_FUNCTION_1_1();
}

uint64_t sub_248F19FA4()
{
  unsigned __int8 *v0;

  return sub_248F195E4(*v0);
}

uint64_t sub_248F19FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F19398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F19FD0()
{
  sub_248F1B100();
  return sub_2490E8968();
}

uint64_t sub_248F19FF8()
{
  sub_248F1B100();
  return sub_2490E8974();
}

void sub_248F1A020(_QWORD *a1@<X0>, void *a2@<X8>)
{
  sub_248F199A0(a1, a2);
}

void sub_248F1A034(_QWORD *a1)
{
  sub_248F19694(a1);
}

uint64_t sub_248F1A048()
{
  sub_248F1B048();
  return sub_2490E7198();
}

uint64_t sub_248F1A098()
{
  sub_248F1B00C();
  return sub_2490E7360();
}

uint64_t sub_248F1A0E8()
{
  sub_248F1B00C();
  return sub_2490E7354();
}

uint64_t sub_248F1A12C()
{
  sub_248F1B00C();
  return sub_2490E7348();
}

uint64_t sub_248F1A170()
{
  sub_248F1B084();
  return sub_2490E7144();
}

uint64_t sub_248F1A1B0()
{
  uint64_t v0;

  v0 = *(_QWORD *)aTypes_1;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_248F1A1E4(uint64_t a1)
{
  return sub_248F1A244(a1, qword_2577F00D8);
}

uint64_t sub_248F1A1F4(uint64_t a1)
{
  return sub_248F1A244(a1, qword_2577F00F0);
}

uint64_t sub_248F1A204(uint64_t a1)
{
  return sub_248F1A244(a1, qword_2577F0108);
}

uint64_t sub_248F1A214(uint64_t a1)
{
  return sub_248F1A244(a1, qword_2577F0120);
}

uint64_t sub_248F1A224(uint64_t a1)
{
  return sub_248F1A244(a1, qword_2577F0138);
}

uint64_t sub_248F1A234(uint64_t a1)
{
  return sub_248F1A244(a1, qword_2577F0150);
}

uint64_t sub_248F1A244(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2490E748C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_248F1B100();
  return sub_2490E74A4();
}

uint64_t sub_248F1A2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254477D30);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_17_0();
  v3 = v2 - v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5A70);
  __swift_allocate_value_buffer(v4, qword_2577F0168);
  __swift_project_value_buffer(v4, (uint64_t)qword_2577F0168);
  v5 = sub_2490E6E74();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v5);
  sub_248E20F48();
  sub_248DCE790();
  sub_2490E6F70();
  return sub_248F1B288(v3);
}

unint64_t String.init(typeIdentifier:)(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;

  v1 = *a1;
  v2 = (unint64_t)*a1 >> 62;
  if (!(_DWORD)v2)
    __asm { BR              X11 }
  if ((_DWORD)v2 == 1)
  {
    v3 = *(_QWORD *)(v1 + 16);
    switch(v3)
    {
      case 0uLL:
      case 3uLL:
      case 5uLL:
      case 9uLL:
      case 0xAuLL:
      case 0xDuLL:
        OUTLINED_FUNCTION_1_13();
        break;
      case 1uLL:
      case 0xFuLL:
        OUTLINED_FUNCTION_38_2();
        v3 = 0xD000000000000013;
        break;
      case 2uLL:
      case 4uLL:
      case 6uLL:
      case 0xEuLL:
        v3 = 0xD000000000000010;
        OUTLINED_FUNCTION_38_2();
        break;
      case 7uLL:
        OUTLINED_FUNCTION_38_2();
        OUTLINED_FUNCTION_10_8();
        break;
      case 8uLL:
        OUTLINED_FUNCTION_38_2();
        v3 = 0xD000000000000015;
        break;
      case 0xBuLL:
        OUTLINED_FUNCTION_38_2();
        v3 = 0xD000000000000011;
        break;
      case 0xCuLL:
        OUTLINED_FUNCTION_38_2();
        v3 = 0xD000000000000017;
        break;
      default:
        v5 = 0;
        sub_248DEF4E4(v3);
        swift_retain();
        sub_2490E853C();
        sub_2490E802C();
        sub_2490E8614();
        swift_release();
        sub_248DEF4F4(v3);
        goto LABEL_7;
    }
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_2490E802C();
    sub_2490E802C();
LABEL_7:
    swift_release();
    return v5;
  }
  return v3;
}

void sub_248F1AA34()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

void sub_248F1AA5C()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

void sub_248F1AA84()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

void sub_248F1AAA4()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

void sub_248F1AABC()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

void sub_248F1AAD0()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

void sub_248F1AAE4()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

void sub_248F1AB0C()
{
  OUTLINED_FUNCTION_0_8();
  JUMPOUT(0x248F1AA18);
}

uint64_t destroy for TypeRecord(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_248DC0FF0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TypeRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v19 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  v18 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 112);
  v12 = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_248E05FDC(v19, v17, v16, v5, v6, v7, v15, v18, v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v18;
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v11;
  *(_BYTE *)(a1 + 120) = v12;
  v13 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v13;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TypeRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a2 + 88);
  v26 = *(_QWORD *)(a2 + 96);
  v27 = *(_QWORD *)(a2 + 104);
  v28 = *(_QWORD *)(a2 + 112);
  v29 = *(_BYTE *)(a2 + 120);
  sub_248E05FDC(v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_OWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 104);
  v22 = *(_QWORD *)(a1 + 112);
  v23 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v25;
  *(_QWORD *)(a1 + 96) = v26;
  *(_QWORD *)(a1 + 104) = v27;
  *(_QWORD *)(a1 + 112) = v28;
  *(_BYTE *)(a1 + 120) = v29;
  sub_248DC0FF0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t assignWithTake for TypeRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  swift_release();
  v5 = *(_QWORD *)(a2 + 112);
  v6 = *(_BYTE *)(a2 + 120);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 88);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 112);
  v18 = *(_BYTE *)(a1 + 120);
  v19 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v19;
  v20 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v20;
  v21 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v21;
  *(_QWORD *)(a1 + 112) = v5;
  *(_BYTE *)(a1 + 120) = v6;
  sub_248DC0FF0(v7, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, v17, v18);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for TypeRecord(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 152))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TypeRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TypeRecord()
{
  return &type metadata for TypeRecord;
}

unint64_t sub_248F1AFD0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_248E20FC4();
  a1[2] = sub_248F1B00C();
  a1[3] = sub_248F1B048();
  result = sub_248F1B084();
  a1[4] = result;
  return result;
}

unint64_t sub_248F1B00C()
{
  unint64_t result;

  result = qword_2577E7678;
  if (!qword_2577E7678)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8F14, &type metadata for TypeRecord);
    atomic_store(result, (unint64_t *)&qword_2577E7678);
  }
  return result;
}

unint64_t sub_248F1B048()
{
  unint64_t result;

  result = qword_2577E7680;
  if (!qword_2577E7680)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8ED0, &type metadata for TypeRecord);
    atomic_store(result, (unint64_t *)&qword_2577E7680);
  }
  return result;
}

unint64_t sub_248F1B084()
{
  unint64_t result;

  result = qword_2577E7688;
  if (!qword_2577E7688)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8EA8, &type metadata for TypeRecord);
    atomic_store(result, (unint64_t *)&qword_2577E7688);
  }
  return result;
}

unint64_t sub_248F1B0C4()
{
  unint64_t result;

  result = qword_2577E7690;
  if (!qword_2577E7690)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8DF8, &type metadata for TypeRecord);
    atomic_store(result, (unint64_t *)&qword_2577E7690);
  }
  return result;
}

unint64_t sub_248F1B100()
{
  unint64_t result;

  result = qword_2577E76A0;
  if (!qword_2577E76A0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9018, &type metadata for TypeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E76A0);
  }
  return result;
}

unint64_t sub_248F1B13C()
{
  unint64_t result;

  result = qword_25447A070;
  if (!qword_25447A070)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for TypeDefinition, &type metadata for TypeDefinition);
    atomic_store(result, (unint64_t *)&qword_25447A070);
  }
  return result;
}

unint64_t sub_248F1B178()
{
  unint64_t result;

  result = qword_2544760C8;
  if (!qword_2544760C8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for SystemTypeProtocol.Identifier, &type metadata for SystemTypeProtocol.Identifier);
    atomic_store(result, (unint64_t *)&qword_2544760C8);
  }
  return result;
}

unint64_t sub_248F1B1B4()
{
  unint64_t result;

  result = qword_254479F00;
  if (!qword_254479F00)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for TypeDefinition, &type metadata for TypeDefinition);
    atomic_store(result, (unint64_t *)&qword_254479F00);
  }
  return result;
}

void sub_248F1B1F0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254479D58);
    v7 = a2();
    atomic_store(MEMORY[0x2495AD758](a3, v6, &v7), a1);
  }
  OUTLINED_FUNCTION_47_2();
}

unint64_t sub_248F1B24C()
{
  unint64_t result;

  result = qword_2544703D0;
  if (!qword_2544703D0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for SystemTypeProtocol.Identifier, &type metadata for SystemTypeProtocol.Identifier);
    atomic_store(result, (unint64_t *)&qword_2544703D0);
  }
  return result;
}

uint64_t sub_248F1B288(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254477D30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for TypeRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_248F1B314 + 4 * byte_2490F8D67[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_248F1B348 + 4 * byte_2490F8D62[v4]))();
}

uint64_t sub_248F1B348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1B350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F1B358);
  return result;
}

uint64_t sub_248F1B364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F1B36CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_248F1B370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1B378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TypeRecord.CodingKeys()
{
  return &type metadata for TypeRecord.CodingKeys;
}

unint64_t sub_248F1B398()
{
  unint64_t result;

  result = qword_2577E76B0;
  if (!qword_2577E76B0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8FF0, &type metadata for TypeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E76B0);
  }
  return result;
}

unint64_t sub_248F1B3D8()
{
  unint64_t result;

  result = qword_2577E76B8;
  if (!qword_2577E76B8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8F60, &type metadata for TypeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E76B8);
  }
  return result;
}

unint64_t sub_248F1B418()
{
  unint64_t result;

  result = qword_2577E76C0;
  if (!qword_2577E76C0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F8F88, &type metadata for TypeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E76C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_2_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t *v13;

  return sub_248DC0FF0(v13[11], v13[12], v13[13], v13[14], v13[15], v13[10], v13[19], v13[16], a9, a10, a11, a12, a13);
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return sub_2490E8728();
}

uint64_t OUTLINED_FUNCTION_6_15()
{
  return sub_2490E87D0();
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return sub_2490E8728();
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return sub_2490E87D0();
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_7()
{
  return swift_bridgeObjectRetain();
}

void sub_248F1B568()
{
  qword_2577F0180 = (uint64_t)&unk_2519E9EC8;
}

uint64_t *sub_248F1B57C()
{
  if (qword_2577E3370 != -1)
    swift_once();
  return &qword_2577F0180;
}

uint64_t sub_248F1B5BC()
{
  unint64_t v0;

  v0 = sub_2490E86A4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_248F1B604(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_248F1B63C + 4 * byte_2490F9068[a1]))(0xD000000000000014, 0x8000000249130F70);
}

uint64_t sub_248F1B63C(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_248F1B684()
{
  return 0x6974616C756D6973;
}

uint64_t storeEnumTagSinglePayload for ActionProvider(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_248F1B6EC + 4 * byte_2490F9073[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_248F1B720 + 4 * byte_2490F906E[v4]))();
}

uint64_t sub_248F1B720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1B728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F1B730);
  return result;
}

uint64_t sub_248F1B73C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F1B744);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_248F1B748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1B750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionProvider()
{
  return &type metadata for ActionProvider;
}

unint64_t sub_248F1B770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2577E76C8;
  if (!qword_2577E76C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2577E76D0);
    result = MEMORY[0x2495AD758](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2577E76C8);
  }
  return result;
}

void sub_248F1B7B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_248F8983C(*a1, *a2);
}

void sub_248F1B7C0()
{
  unsigned __int8 *v0;

  sub_248FE5A0C(*v0);
}

uint64_t sub_248F1B7C8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_248DD554C(a1, *v1);
}

void sub_248F1B7D0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_248FE5E0C(a1, *v1);
}

uint64_t sub_248F1B7D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_248F1B5BC();
  *a1 = result;
  return result;
}

uint64_t sub_248F1B804@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_248F1B604(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_248F1B82C@<X0>(_QWORD *a1@<X8>)
{
  sub_248F1B57C();
  *a1 = qword_2577F0180;
  return swift_bridgeObjectRetain();
}

unint64_t sub_248F1B85C()
{
  unint64_t result;

  result = qword_2577E76D8;
  if (!qword_2577E76D8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9138, &type metadata for ActionProvider);
    atomic_store(result, (unint64_t *)&qword_2577E76D8);
  }
  return result;
}

uint64_t IntentStateChange.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ToolKit::IntentStateChange __swiftcall IntentStateChange.init(rawValue:)(ToolKit::IntentStateChange rawValue)
{
  ToolKit::IntentStateChange *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static IntentStateChange.unknown.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_6_16(a1);
}

void static IntentStateChange.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static IntentStateChange.nonIdempotent.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_6_16(a1);
}

void static IntentStateChange.destructive.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_6_16(a1);
}

void static IntentStateChange.irrevocable.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_6_16(a1);
}

void IntentStateChange.init(from:)(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_6_16(a1);
}

ToolKit::IntentStateChange sub_248F1B920(Swift::Int *a1)
{
  return IntentStateChange.init(rawValue:)(*a1);
}

uint64_t sub_248F1B928()
{
  sub_248F1C8E8();
  return sub_2490E80F8();
}

uint64_t sub_248F1B984()
{
  sub_248F1C8E8();
  return sub_2490E80D4();
}

uint64_t sub_248F1B9D0()
{
  _QWORD *v0;

  return sub_248FE5A40(*v0);
}

void sub_248F1B9D8()
{
  sub_248DD5344();
}

uint64_t sub_248F1B9E0(uint64_t a1)
{
  _QWORD *v1;

  return sub_248FE5B7C(a1, *v1);
}

uint64_t sub_248F1B9EC(_QWORD *a1)
{
  _QWORD *v1;

  return sub_248F8BF70(*a1, *v1);
}

uint64_t sub_248F1B9F8(_QWORD *a1)
{
  _QWORD *v1;

  return sub_248FFC1A4(*a1, *v1);
}

uint64_t sub_248F1BA04(_QWORD *a1)
{
  _QWORD *v1;

  return sub_248F8BF80(*a1, *v1);
}

uint64_t sub_248F1BA10(_QWORD *a1)
{
  _QWORD *v1;

  return sub_248FFC1A8(*a1, *v1);
}

BOOL sub_248F1BA1C(_QWORD *a1, uint64_t *a2)
{
  return sub_248E15EF0(a1, *a2);
}

uint64_t sub_248F1BA24(_QWORD *a1)
{
  return sub_248FE6604(*a1);
}

uint64_t sub_248F1BA2C(_QWORD *a1)
{
  return sub_248FE6654(*a1);
}

uint64_t sub_248F1BA34(uint64_t *a1)
{
  return sub_248E15EF4(*a1);
}

uint64_t sub_248F1BA3C(_QWORD *a1)
{
  return j_j__OUTLINED_FUNCTION_12_20(*a1);
}

uint64_t sub_248F1BA44(_QWORD *a1)
{
  return sub_248FFC19C(*a1);
}

uint64_t sub_248F1BA4C(_QWORD *a1)
{
  _QWORD *v1;

  return sub_248FFC1B8(*a1, *v1);
}

uint64_t sub_248F1BA58(_QWORD *a1)
{
  _QWORD *v1;

  return sub_248F8BF74(*a1, *v1);
}

uint64_t sub_248F1BA64(_QWORD *a1)
{
  _QWORD *v1;

  return sub_248FFC1A0(*a1, *v1);
}

BOOL sub_248F1BA70()
{
  uint64_t *v0;

  return sub_24901E750(*v0);
}

uint64_t sub_248F1BA78()
{
  return sub_2490E84A0();
}

uint64_t sub_248F1BA90(_QWORD *a1)
{
  return sub_248FFC194(*a1);
}

ToolKit::IntentStateChange sub_248F1BA98@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  ToolKit::IntentStateChange result;

  result.rawValue = IntentStateChange.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_248F1BAC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentStateChange.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_248F1BAE4(uint64_t *a1, uint64_t *a2)
{
  return sub_248F89434(*a1, *a2);
}

void IntentSideEffect.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  unint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v4 = objc_msgSend(a1, sel_effect);
  if (v4 == (id)1)
  {
    v6 = objc_msgSend(a1, sel_changeEffect);

    v7 = 0;
    if (v6 == (id)-1)
      v5 = -1;
    else
      v5 = 0;
    if (v6 == (id)-1)
      v8 = -1;
    else
      v8 = 1;
    if ((v6 & 1) != 0 && v6 != (id)-1)
      v5 = v8;
    v10 = (v5 >> 8) & 1;
    if (((unsigned __int16)v6 & 0x100) == 0)
      LODWORD(v10) = 1;
    if (!(_DWORD)v10)
      v5 |= 0x100uLL;
    v11 = (v5 >> 9) & 1;
    if (((unsigned __int16)v6 & 0x200) == 0)
      LODWORD(v11) = 1;
    if (!(_DWORD)v11)
      v5 |= 0x200uLL;
    goto LABEL_27;
  }
  if (!v4)
  {

    v5 = 1;
LABEL_26:
    v7 = 1;
LABEL_27:
    *(_QWORD *)a2 = v5;
    *(_BYTE *)(a2 + 8) = v7;
    return;
  }
  if (v4 == (id)-1)
  {

    v5 = 0;
    goto LABEL_26;
  }
  sub_2490E8650();
  __break(1u);
}

uint64_t IntentSideEffect.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    sub_2490E88FC();
  return sub_2490E88FC();
}

uint64_t static IntentSideEffect.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

uint64_t sub_248F1BC94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701736302 && a2 == 0xE400000000000000;
    if (v6 || (sub_2490E883C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6168436574617473 && a2 == 0xEB0000000065676ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2490E883C();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_248F1BDE8(char a1)
{
  if (!a1)
    return 0x6E776F6E6B6E75;
  if (a1 == 1)
    return 1701736302;
  return 0x6168436574617473;
}

uint64_t sub_248F1BE40(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2490E883C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_248F1BEAC()
{
  char *v0;

  return sub_248F1BDE8(*v0);
}

uint64_t sub_248F1BEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F1BC94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F1BED8()
{
  sub_248F1C77C();
  return sub_2490E8968();
}

uint64_t sub_248F1BF00()
{
  sub_248F1C77C();
  return sub_2490E8974();
}

uint64_t sub_248F1BF28()
{
  sub_248F1C830();
  return sub_2490E8968();
}

uint64_t sub_248F1BF50()
{
  sub_248F1C830();
  return sub_2490E8974();
}

uint64_t sub_248F1BF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F1BE40(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_248F1BFA0()
{
  sub_248F1C7B8();
  return sub_2490E8968();
}

uint64_t sub_248F1BFC8()
{
  sub_248F1C7B8();
  return sub_2490E8974();
}

uint64_t sub_248F1BFF0()
{
  sub_248F1C86C();
  return sub_2490E8968();
}

uint64_t sub_248F1C018()
{
  sub_248F1C86C();
  return sub_2490E8974();
}

void IntentSideEffect.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544709F0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_64();
  v24 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544709E0);
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_64();
  v21 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544709E8);
  v19 = *(_QWORD *)(v10 - 8);
  v20 = v10;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544709D8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_32();
  v15 = *v2;
  v16 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248F1C77C();
  sub_2490E895C();
  if (v16 == 1)
  {
    if (v15)
    {
      OUTLINED_FUNCTION_12_13();
      v17 = v21;
      OUTLINED_FUNCTION_1_14();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v17, v23);
    }
    else
    {
      v28 = 0;
      sub_248F1C86C();
      OUTLINED_FUNCTION_1_14();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v20);
    }
    OUTLINED_FUNCTION_8_12();
  }
  else
  {
    OUTLINED_FUNCTION_11_8();
    v18 = v24;
    OUTLINED_FUNCTION_1_14();
    v27 = v15;
    sub_248F1C7F4();
    sub_2490E87D0();
    OUTLINED_FUNCTION_148(v18, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    OUTLINED_FUNCTION_8_12();
  }
  OUTLINED_FUNCTION_1_1();
}

uint64_t IntentSideEffect.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2490E88F0();
  if (v1 != 1)
    sub_2490E88FC();
  sub_2490E88FC();
  return sub_2490E8920();
}

void IntentSideEffect.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;

  v46 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544767C8);
  v41 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_64();
  v48 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544767B8);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_64();
  v47 = v8;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544767C0);
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544767B0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_32();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248F1C77C();
  v14 = v49;
  sub_2490E8944();
  if (v14)
    goto LABEL_11;
  v38 = v9;
  v39 = v11;
  v15 = v47;
  v40 = v13;
  v49 = a1;
  v16 = v2;
  v17 = sub_2490E874C();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v37 = 0;
    v19 = *(unsigned __int8 *)(v17 + 32);
    sub_248DB8ABC(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRelease();
    if (v21 == v23 >> 1)
    {
      if (!v19)
      {
        v51 = 0;
        sub_248F1C86C();
        v32 = v39;
        OUTLINED_FUNCTION_4_17();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v42);
        OUTLINED_FUNCTION_15_4();
        OUTLINED_FUNCTION_148(v21, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
        v24 = 0;
        goto LABEL_16;
      }
      if (v19 == 1)
      {
        OUTLINED_FUNCTION_12_13();
        OUTLINED_FUNCTION_4_17();
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v15, v45);
        OUTLINED_FUNCTION_15_4();
        OUTLINED_FUNCTION_148(v21, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
        v24 = 1;
LABEL_16:
        v34 = 1;
LABEL_17:
        v35 = v46;
        *v46 = v24;
        *((_BYTE *)v35 + 8) = v34;
        v31 = (uint64_t)v49;
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_11_8();
      v33 = v37;
      sub_2490E86B0();
      if (!v33)
      {
        sub_248F1C8A8();
        sub_2490E8728();
        v36 = v40;
        OUTLINED_FUNCTION_5_15();
        OUTLINED_FUNCTION_15_4();
        OUTLINED_FUNCTION_148(v2, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
        v34 = 0;
        v24 = v50;
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_15_4();
      v29 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8);
      v30 = v2;
      goto LABEL_10;
    }
    v16 = v2;
  }
  v25 = v40;
  v26 = sub_2490E8578();
  swift_allocError();
  v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4070);
  *v28 = &type metadata for IntentSideEffect;
  sub_2490E86BC();
  sub_2490E856C();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
  swift_willThrow();
  swift_unknownObjectRelease();
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
  v30 = v16;
LABEL_10:
  OUTLINED_FUNCTION_148(v30, v29);
  a1 = v49;
LABEL_11:
  v31 = (uint64_t)a1;
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1(v31);
  OUTLINED_FUNCTION_1_1();
}

void sub_248F1C6E4(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  IntentSideEffect.init(from:)(a1, a2);
}

void sub_248F1C6F8(_QWORD *a1)
{
  IntentSideEffect.encode(to:)(a1);
}

uint64_t sub_248F1C714()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2490E88F0();
  if (v1 != 1)
    sub_2490E88FC();
  sub_2490E88FC();
  return sub_2490E8920();
}

unint64_t sub_248F1C77C()
{
  unint64_t result;

  result = qword_254479570;
  if (!qword_254479570)
  {
    result = MEMORY[0x2495AD758](&unk_2490F97F8, &type metadata for IntentSideEffect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254479570);
  }
  return result;
}

unint64_t sub_248F1C7B8()
{
  unint64_t result;

  result = qword_2577E76E0;
  if (!qword_2577E76E0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F97A8, &type metadata for IntentSideEffect.StateChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E76E0);
  }
  return result;
}

unint64_t sub_248F1C7F4()
{
  unint64_t result;

  result = qword_2577E76E8;
  if (!qword_2577E76E8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for IntentStateChange, &type metadata for IntentStateChange);
    atomic_store(result, (unint64_t *)&qword_2577E76E8);
  }
  return result;
}

unint64_t sub_248F1C830()
{
  unint64_t result;

  result = qword_2577E76F0;
  if (!qword_2577E76F0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9758, &type metadata for IntentSideEffect.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E76F0);
  }
  return result;
}

unint64_t sub_248F1C86C()
{
  unint64_t result;

  result = qword_254479598;
  if (!qword_254479598)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9708, &type metadata for IntentSideEffect.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254479598);
  }
  return result;
}

unint64_t sub_248F1C8A8()
{
  unint64_t result;

  result = qword_2577E76F8;
  if (!qword_2577E76F8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for IntentStateChange, &type metadata for IntentStateChange);
    atomic_store(result, (unint64_t *)&qword_2577E76F8);
  }
  return result;
}

unint64_t sub_248F1C8E8()
{
  unint64_t result;

  result = qword_2577E7700;
  if (!qword_2577E7700)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for IntentStateChange, &type metadata for IntentStateChange);
    atomic_store(result, (unint64_t *)&qword_2577E7700);
  }
  return result;
}

unint64_t sub_248F1C928()
{
  unint64_t result;

  result = qword_2577E7708;
  if (!qword_2577E7708)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for IntentStateChange, &type metadata for IntentStateChange);
    atomic_store(result, (unint64_t *)&qword_2577E7708);
  }
  return result;
}

unint64_t sub_248F1C968()
{
  unint64_t result;

  result = qword_2577E7710;
  if (!qword_2577E7710)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for IntentStateChange, &type metadata for IntentStateChange);
    atomic_store(result, (unint64_t *)&qword_2577E7710);
  }
  return result;
}

unint64_t sub_248F1C9A8()
{
  unint64_t result;

  result = qword_2577E7718;
  if (!qword_2577E7718)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for IntentStateChange, &type metadata for IntentStateChange);
    atomic_store(result, (unint64_t *)&qword_2577E7718);
  }
  return result;
}

unint64_t sub_248F1C9E8()
{
  unint64_t result;

  result = qword_2577E7720;
  if (!qword_2577E7720)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for IntentSideEffect, &type metadata for IntentSideEffect);
    atomic_store(result, (unint64_t *)&qword_2577E7720);
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentStateChange()
{
  return &type metadata for IntentStateChange;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IntentSideEffect(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IntentSideEffect(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_248F1CA98(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_248F1CAB4(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for IntentSideEffect()
{
  return &type metadata for IntentSideEffect;
}

uint64_t storeEnumTagSinglePayload for IntentSideEffect.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248F1CB30 + 4 * byte_2490F9165[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_248F1CB64 + 4 * byte_2490F9160[v4]))();
}

uint64_t sub_248F1CB64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1CB6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F1CB74);
  return result;
}

uint64_t sub_248F1CB80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F1CB88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_248F1CB8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1CB94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntentSideEffect.CodingKeys()
{
  return &type metadata for IntentSideEffect.CodingKeys;
}

ValueMetadata *type metadata accessor for IntentSideEffect.UnknownCodingKeys()
{
  return &type metadata for IntentSideEffect.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for IntentSideEffect.NoneCodingKeys()
{
  return &type metadata for IntentSideEffect.NoneCodingKeys;
}

uint64_t storeEnumTagSinglePayload for IntentSideEffect.StateChangeCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_248F1CC10 + 4 * byte_2490F916A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_248F1CC30 + 4 * byte_2490F916F[v4]))();
}

_BYTE *sub_248F1CC10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_248F1CC30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248F1CC38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248F1CC40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248F1CC48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248F1CC50(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IntentSideEffect.StateChangeCodingKeys()
{
  return &type metadata for IntentSideEffect.StateChangeCodingKeys;
}

unint64_t sub_248F1CC70()
{
  unint64_t result;

  result = qword_2577E7728;
  if (!qword_2577E7728)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9588, &type metadata for IntentSideEffect.StateChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7728);
  }
  return result;
}

unint64_t sub_248F1CCB0()
{
  unint64_t result;

  result = qword_2577E7730;
  if (!qword_2577E7730)
  {
    result = MEMORY[0x2495AD758](&unk_2490F96E0, &type metadata for IntentSideEffect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7730);
  }
  return result;
}

unint64_t sub_248F1CCF0()
{
  unint64_t result;

  result = qword_2544795A8;
  if (!qword_2544795A8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9600, &type metadata for IntentSideEffect.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544795A8);
  }
  return result;
}

unint64_t sub_248F1CD30()
{
  unint64_t result;

  result = qword_2544795A0;
  if (!qword_2544795A0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9628, &type metadata for IntentSideEffect.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544795A0);
  }
  return result;
}

unint64_t sub_248F1CD70()
{
  unint64_t result;

  result = qword_254479590;
  if (!qword_254479590)
  {
    result = MEMORY[0x2495AD758](&unk_2490F95B0, &type metadata for IntentSideEffect.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254479590);
  }
  return result;
}

unint64_t sub_248F1CDB0()
{
  unint64_t result;

  result = qword_254479588;
  if (!qword_254479588)
  {
    result = MEMORY[0x2495AD758](&unk_2490F95D8, &type metadata for IntentSideEffect.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254479588);
  }
  return result;
}

unint64_t sub_248F1CDF0()
{
  unint64_t result;

  result = qword_2544795B8;
  if (!qword_2544795B8)
  {
    result = MEMORY[0x2495AD758](&unk_2490F94F8, &type metadata for IntentSideEffect.StateChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544795B8);
  }
  return result;
}

unint64_t sub_248F1CE30()
{
  unint64_t result;

  result = qword_2544795B0;
  if (!qword_2544795B0)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9520, &type metadata for IntentSideEffect.StateChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544795B0);
  }
  return result;
}

unint64_t sub_248F1CE70()
{
  unint64_t result;

  result = qword_254479580;
  if (!qword_254479580)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9650, &type metadata for IntentSideEffect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254479580);
  }
  return result;
}

unint64_t sub_248F1CEB0()
{
  unint64_t result;

  result = qword_254479578;
  if (!qword_254479578)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9678, &type metadata for IntentSideEffect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254479578);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return sub_2490E8764();
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return sub_2490E86B0();
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v0, v1);
}

void OUTLINED_FUNCTION_6_16(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

unint64_t OUTLINED_FUNCTION_11_8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_248F1C7B8();
}

unint64_t OUTLINED_FUNCTION_12_13()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_248F1C830();
}

void Query.predicate.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_248F1DA30(v1, a1, type metadata accessor for AnyPredicate);
}

uint64_t Query.sort.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_2_14() + 20));
}

uint64_t type metadata accessor for Query()
{
  uint64_t result;

  result = qword_254479D20;
  if (!qword_254479D20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Query.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_2_14() + 24));
}

uint64_t Query.init(predicate:sort:limit:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _BYTE v16[40];

  v9 = a2 & 1;
  OUTLINED_FUNCTION_7_13();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_17_0();
  v13 = v12 - v11;
  sub_248F12574(a1, (uint64_t)v16);
  AnyPredicate.init(predicate:)((uint64_t)v16, v13);
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_248DCF204(v13, a5);
  result = OUTLINED_FUNCTION_2_14();
  *(_BYTE *)(a5 + *(int *)(result + 20)) = v9;
  v15 = a5 + *(int *)(result + 24);
  *(_QWORD *)v15 = a3;
  *(_BYTE *)(v15 + 8) = a4 & 1;
  return result;
}

uint64_t Query.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD v5[7];
  uint64_t v6;
  unint64_t v7;

  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_2490E853C();
  v6 = 0;
  v7 = 0xE000000000000000;
  sub_2490E802C();
  v5[5] = 0;
  v5[6] = 0xE000000000000000;
  sub_248F129CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7200);
  OUTLINED_FUNCTION_6_17();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  sub_2490E802C();
  swift_bridgeObjectRelease();
  sub_2490E802C();
  v1 = OUTLINED_FUNCTION_2_14();
  LOBYTE(v5[0]) = *(_BYTE *)(v0 + *(int *)(v1 + 20));
  OUTLINED_FUNCTION_6_17();
  sub_2490E802C();
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 24));
  if (*((_BYTE *)v2 + 8))
    v3 = 0;
  else
    v3 = *v2;
  v5[0] = v3;
  sub_2490E880C();
  sub_2490E802C();
  swift_bridgeObjectRelease();
  sub_2490E802C();
  return v6;
}

void Query.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  AnyPredicate.hash(into:)();
  v1 = OUTLINED_FUNCTION_2_14();
  sub_2490E6E68();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 24) + 8) == 1)
  {
    sub_2490E8908();
  }
  else
  {
    sub_2490E8908();
    sub_2490E88FC();
  }
  OUTLINED_FUNCTION_93();
}

void static Query.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  static AnyPredicate.== infix(_:_:)(a1, a2);
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_14();
    sub_2490E6E5C();
  }
  OUTLINED_FUNCTION_93();
}

uint64_t sub_248F1D318(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
  if (v2 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1953656691 && a2 == 0xE400000000000000;
    if (v6 || (sub_2490E883C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2490E883C();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_248F1D458(char a1)
{
  if (!a1)
    return 0x7461636964657270;
  if (a1 == 1)
    return 1953656691;
  return 0x74696D696CLL;
}

uint64_t sub_248F1D4A8()
{
  char *v0;

  return sub_248F1D458(*v0);
}

uint64_t sub_248F1D4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F1D318(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F1D4D4()
{
  sub_248F1D6AC();
  return sub_2490E8968();
}

uint64_t sub_248F1D4FC()
{
  sub_248F1D6AC();
  return sub_2490E8974();
}

uint64_t Query.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7738);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_17_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248F1D6AC();
  sub_2490E895C();
  type metadata accessor for AnyPredicate(0);
  sub_248D9D9D8(&qword_2577E7388, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
  OUTLINED_FUNCTION_16_6();
  if (!v1)
  {
    type metadata accessor for Query();
    sub_248F1D6E8();
    OUTLINED_FUNCTION_16_6();
    sub_2490E877C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_248F1D6AC()
{
  unint64_t result;

  result = qword_2577E7740;
  if (!qword_2577E7740)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9A64, &type metadata for Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7740);
  }
  return result;
}

unint64_t sub_248F1D6E8()
{
  unint64_t result;

  result = qword_2577E7748;
  if (!qword_2577E7748)
  {
    result = MEMORY[0x2495AD758](MEMORY[0x24BDCF730], MEMORY[0x24BDCF728]);
    atomic_store(result, (unint64_t *)&qword_2577E7748);
  }
  return result;
}

uint64_t Query.hashValue.getter()
{
  sub_2490E88F0();
  Query.hash(into:)();
  return sub_2490E8920();
}

void Query.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  type metadata accessor for AnyPredicate(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_17_0();
  v16 = v5 - v4;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7750);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_17_0();
  v6 = type metadata accessor for Query();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_17_0();
  v10 = v9 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248F1D6AC();
  sub_2490E8944();
  if (v18)
  {
    OUTLINED_FUNCTION_10_9();
  }
  else
  {
    sub_248D9D9D8(&qword_2577E73C0, type metadata accessor for AnyPredicate, (uint64_t)&protocol conformance descriptor for AnyPredicate);
    sub_2490E8728();
    sub_248DCF204(v16, v10);
    sub_248F1D9F4();
    sub_2490E8728();
    *(_BYTE *)(v10 + *(int *)(v6 + 20)) = v19;
    v11 = sub_2490E86D4();
    v13 = v12;
    OUTLINED_FUNCTION_1_15();
    v14 = v10 + *(int *)(v6 + 24);
    *(_QWORD *)v14 = v11;
    *(_BYTE *)(v14 + 8) = v13 & 1;
    sub_248F1DA30(v10, a2, (uint64_t (*)(_QWORD))type metadata accessor for Query);
    OUTLINED_FUNCTION_10_9();
    sub_248E05C34(v10, (uint64_t (*)(_QWORD))type metadata accessor for Query);
  }
}

uint64_t sub_248F1D9BC()
{
  sub_2490E88F0();
  Query.hash(into:)();
  return sub_2490E8920();
}

unint64_t sub_248F1D9F4()
{
  unint64_t result;

  result = qword_2577E7758;
  if (!qword_2577E7758)
  {
    result = MEMORY[0x2495AD758](MEMORY[0x24BDCF748], MEMORY[0x24BDCF728]);
    atomic_store(result, (unint64_t *)&qword_2577E7758);
  }
  return result;
}

void sub_248F1DA30(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_1();
}

void sub_248F1DA70()
{
  sub_248D9D9D8(&qword_2577E7760, (uint64_t (*)(uint64_t))type metadata accessor for Query, (uint64_t)&protocol conformance descriptor for Query);
}

void sub_248F1DA9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Query.init(from:)(a1, a2);
}

uint64_t sub_248F1DAB0(_QWORD *a1)
{
  return Query.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for Query(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v25[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for AnyPredicate(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v8;
        v9 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v9;
        v10 = (uint64_t)a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        v11 = (unint64_t)a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_248F16ADC(v10, v11);
        *((_QWORD *)a1 + 5) = v10;
        *((_QWORD *)a1 + 6) = v11;
        v12 = type metadata accessor for ComparisonPredicate(0);
        v13 = *(int *)(v12 + 24);
        v14 = &a1[v13];
        v15 = (char *)a2 + v13;
        v16 = sub_2490E6D18();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        v17 = *(int *)(v12 + 28);
        v18 = &a1[v17];
        v19 = (char *)a2 + v17;
        v20 = *(_QWORD *)v19;
        v21 = *((_QWORD *)v19 + 1);
        v22 = *((_QWORD *)v19 + 2);
        v23 = *((_QWORD *)v19 + 3);
        v24 = v19[32];
        sub_248DB8B68(*(_QWORD *)v19, v21, v22, v23, v24);
        *(_QWORD *)v18 = v20;
        *((_QWORD *)v18 + 1) = v21;
        *((_QWORD *)v18 + 2) = v22;
        *((_QWORD *)v18 + 3) = v23;
        v18[32] = v24;
        goto LABEL_10;
      case 1u:
        *a1 = *(_BYTE *)a2;
        *((_QWORD *)a1 + 1) = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
        v26 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v26;
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 3u:
        v27 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v27;
        *((_QWORD *)a1 + 2) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 4u:
        v28 = *a2;
        *(_QWORD *)a1 = *a2;
        v29 = v28;
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v30 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v31 = &a1[v30];
    v32 = (char *)a2 + v30;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v32[8];
  }
  return a1;
}

void destroy for Query(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for AnyPredicate(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_248F16C28(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
      v2 = type metadata accessor for ComparisonPredicate(0);
      v3 = a1 + *(int *)(v2 + 24);
      v4 = sub_2490E6D18();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      v5 = a1 + *(int *)(v2 + 28);
      sub_248DB8BAC(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_BYTE *)(v5 + 32));
      break;
    case 1u:
    case 2u:
      goto LABEL_4;
    case 3u:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 4u:

      break;
    default:
      return;
  }
}

_QWORD *initializeWithCopy for Query(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v6 = type metadata accessor for AnyPredicate(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = a2[5];
      a1[4] = a2[4];
      v10 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_248F16ADC(v9, v10);
      a1[5] = v9;
      a1[6] = v10;
      v11 = type metadata accessor for ComparisonPredicate(0);
      v12 = *(int *)(v11 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = *(int *)(v11 + 28);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = *(_QWORD *)v18;
      v20 = *((_QWORD *)v18 + 1);
      v21 = *((_QWORD *)v18 + 2);
      v22 = *((_QWORD *)v18 + 3);
      v23 = v18[32];
      sub_248DB8B68(*(_QWORD *)v18, v20, v21, v22, v23);
      *(_QWORD *)v17 = v19;
      *((_QWORD *)v17 + 1) = v20;
      *((_QWORD *)v17 + 2) = v21;
      *((_QWORD *)v17 + 3) = v22;
      v17[32] = v23;
      goto LABEL_8;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 2u:
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 3u:
      v25 = a2[1];
      *a1 = *a2;
      a1[1] = v25;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 4u:
      v26 = (void *)*a2;
      *a1 = *a2;
      v27 = v26;
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v28 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  return a1;
}

_QWORD *assignWithCopy for Query(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_248E05C34((uint64_t)a1, type metadata accessor for AnyPredicate);
    v6 = type metadata accessor for AnyPredicate(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        v7 = a2[5];
        v8 = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_248F16ADC(v7, v8);
        a1[5] = v7;
        a1[6] = v8;
        v9 = type metadata accessor for ComparisonPredicate(0);
        v10 = *(int *)(v9 + 24);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2490E6D18();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        v14 = *(int *)(v9 + 28);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = *(_QWORD *)v16;
        v18 = *((_QWORD *)v16 + 1);
        v19 = *((_QWORD *)v16 + 2);
        v20 = *((_QWORD *)v16 + 3);
        v21 = v16[32];
        sub_248DB8B68(*(_QWORD *)v16, v18, v19, v20, v21);
        *(_QWORD *)v15 = v17;
        *((_QWORD *)v15 + 1) = v18;
        *((_QWORD *)v15 + 2) = v19;
        *((_QWORD *)v15 + 3) = v20;
        v15[32] = v21;
        goto LABEL_9;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        v22 = (void *)*a2;
        *a1 = *a2;
        v23 = v22;
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  return a1;
}

_OWORD *initializeWithTake for Query(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v6 = type metadata accessor for AnyPredicate(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    v8 = type metadata accessor for ComparisonPredicate(0);
    v9 = *(int *)(v8 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2490E6D18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    v13 = *(int *)(v8 + 28);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    v14[32] = v15[32];
    swift_storeEnumTagMultiPayload();
  }
  v17 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  return a1;
}

_OWORD *assignWithTake for Query(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;

  if (a1 != a2)
  {
    sub_248E05C34((uint64_t)a1, type metadata accessor for AnyPredicate);
    v6 = type metadata accessor for AnyPredicate(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v8 = type metadata accessor for ComparisonPredicate(0);
      v9 = *(int *)(v8 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2490E6D18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      v13 = *(int *)(v8 + 28);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      v14[32] = v15[32];
      swift_storeEnumTagMultiPayload();
    }
  }
  v17 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for Query()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_248F1E4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_7_13();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_93();
}

uint64_t storeEnumTagSinglePayload for Query()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_248F1E530(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_7_13();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
    OUTLINED_FUNCTION_93();
  }
}

uint64_t sub_248F1E598()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AnyPredicate(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Query.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248F1E660 + 4 * byte_2490F9866[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_248F1E694 + 4 * byte_2490F9861[v4]))();
}

uint64_t sub_248F1E694(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1E69C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248F1E6A4);
  return result;
}

uint64_t sub_248F1E6B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248F1E6B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_248F1E6BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248F1E6C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Query.CodingKeys()
{
  return &type metadata for Query.CodingKeys;
}

unint64_t sub_248F1E6E4()
{
  unint64_t result;

  result = qword_2577E7768;
  if (!qword_2577E7768)
  {
    result = MEMORY[0x2495AD758](&unk_2490F9A3C, &type metadata for Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7768);
  }
  return result;
}

unint64_t sub_248F1E724()
{
  unint64_t result;

  result = qword_2577E7770;
  if (!qword_2577E7770)
  {
    result = MEMORY[0x2495AD758](&unk_2490F99AC, &type metadata for Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7770);
  }
  return result;
}

unint64_t sub_248F1E764()
{
  unint64_t result;

  result = qword_2577E7778;
  if (!qword_2577E7778)
  {
    result = MEMORY[0x2495AD758](&unk_2490F99D4, &type metadata for Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7778);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_2_14()
{
  return type metadata accessor for Query();
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  return sub_2490E8614();
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  return type metadata accessor for AnyPredicate(0);
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

void sub_248F1E7D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  id v7;

  v7 = objc_msgSend(v3, sel_valueType);
  LNValueType.toTypeInstance(source:isOptional:)(a1, a2, (char)objc_msgSend(v3, sel_isOptional), a3);

}

uint64_t sub_248F1E860(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_248F1E884 + 4 * byte_2490F9AB4[a2 >> 62]))();
}

BOOL sub_248F1E884(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2) == 0;
}

unint64_t static ToolKitProtoLaunchServicesSnapshot.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(30);
}

uint64_t sub_248F1E8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E7780);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7780);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490EF520;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "stateByBundleIdentifier";
  *(_QWORD *)(v7 + 8) = 23;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "version";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoLaunchServicesSnapshot._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E3378, (uint64_t)qword_2577E7780, a1);
}

uint64_t ToolKitProtoLaunchServicesSnapshot.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2490E7B70();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      OUTLINED_FUNCTION_0_9();
      sub_248F1EB7C();
    }
    else if (result == 1)
    {
      OUTLINED_FUNCTION_0_9();
      sub_248F1EAAC();
    }
  }
  return result;
}

uint64_t sub_248F1EAAC()
{
  sub_2490E7A98();
  type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State(0);
  sub_248D9D9D8(&qword_2577E78E0, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
  sub_248D9D9D8(&qword_2577E78E8, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
  return sub_2490E7B64();
}

uint64_t sub_248F1EB7C()
{
  type metadata accessor for ToolKitProtoLaunchServicesSnapshot(0);
  type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version(0);
  sub_248D9D9D8(&qword_2577E7998, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
  return sub_2490E7C60();
}

void ToolKitProtoLaunchServicesSnapshot.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (sub_2490E7A98(),
        type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State(0),
        sub_248D9D9D8(&qword_2577E78E0, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State), sub_248D9D9D8(&qword_2577E78E8, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State), sub_2490E7CB4(), !v1))
  {
    sub_248F1ED54(v0);
    if (!v1)
    {
      type metadata accessor for ToolKitProtoLaunchServicesSnapshot(0);
      sub_2490E7AA4();
    }
  }
}

void sub_248F1ED54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5680);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot(0);
  sub_248F28914(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_2577E5680);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_2577E5680);
  }
  else
  {
    sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
    sub_248D9D9D8(&qword_2577E7998, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
    sub_2490E7D44();
    sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
  }
}

void static ToolKitProtoLaunchServicesSnapshot.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  _QWORD *v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  _QWORD *v50;
  BOOL v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  OUTLINED_FUNCTION_7_0();
  v1 = v0;
  v3 = v2;
  v4 = OUTLINED_FUNCTION_63();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_14_10(v6, v53);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v53 - v8;
  v64 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E78F0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_17_0();
  v17 = v16 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5680);
  OUTLINED_FUNCTION_5_0();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v53 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v53 - v25;
  v27 = v3;
  v28 = v1;
  sub_24903D324();
  if ((v29 & 1) != 0)
  {
    v56 = v12;
    v59 = v9;
    v60 = v21;
    v30 = v63;
    v31 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot(0);
    v32 = *(int *)(v31 + 20);
    v58 = v27;
    v33 = v31;
    OUTLINED_FUNCTION_92_3(v27 + v32, (uint64_t)v26);
    v57 = v33;
    v34 = *(int *)(v33 + 20);
    v35 = v28;
    OUTLINED_FUNCTION_92_3(v28 + v34, (uint64_t)v24);
    v36 = v17 + *(int *)(v13 + 48);
    OUTLINED_FUNCTION_92_3((uint64_t)v26, v17);
    OUTLINED_FUNCTION_92_3((uint64_t)v24, v36);
    v37 = v64;
    OUTLINED_FUNCTION_19(v17, 1, v64);
    v38 = v17;
    if (v47)
    {
      OUTLINED_FUNCTION_35_5((uint64_t)v24);
      OUTLINED_FUNCTION_35_5((uint64_t)v26);
      v39 = OUTLINED_FUNCTION_19(v36, 1, v37);
      if (v47)
      {
        v40 = v30;
        v54 = v35;
        OUTLINED_FUNCTION_529(v39, &qword_2577E5680);
        v41 = v62;
LABEL_7:
        v42 = v57;
        v43 = v61;
        v44 = (uint64_t)v59;
        OUTLINED_FUNCTION_537((uint64_t)v59, v58 + *(int *)(v57 + 24));
        OUTLINED_FUNCTION_537(v40, v54 + *(int *)(v42 + 24));
        sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_74();
        v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        v45(v40, v41);
        v45(v44, v41);
        goto LABEL_22;
      }
    }
    else
    {
      v55 = v26;
      v46 = v60;
      sub_248F28914(v17, (uint64_t)v60, &qword_2577E5680);
      OUTLINED_FUNCTION_19(v36, 1, v37);
      if (!v47)
      {
        v40 = v30;
        v50 = v56;
        sub_248E06294(v36, (uint64_t)v56, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
        v51 = *v46 == *v50 && v46[1] == v50[1];
        if ((v51 || (OUTLINED_FUNCTION_9_0() & 1) != 0) && v46[2] == v50[2])
        {
          v54 = v35;
          sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v41 = v62;
          v52 = OUTLINED_FUNCTION_74();
          sub_248DB270C((uint64_t)v50, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
          OUTLINED_FUNCTION_243((uint64_t)v24);
          OUTLINED_FUNCTION_243((uint64_t)v55);
          sub_248DB270C((uint64_t)v46, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
          OUTLINED_FUNCTION_243(v38);
          if ((v52 & 1) == 0)
            goto LABEL_22;
          goto LABEL_7;
        }
        sub_248DB270C((uint64_t)v50, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
        sub_248DB939C((uint64_t)v24, &qword_2577E5680);
        sub_248DB939C((uint64_t)v55, &qword_2577E5680);
        sub_248DB270C((uint64_t)v46, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
        v49 = v38;
        v48 = &qword_2577E5680;
LABEL_21:
        sub_248DB939C(v49, v48);
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_69_4((uint64_t)v24);
      OUTLINED_FUNCTION_69_4((uint64_t)v55);
      sub_248DB270C((uint64_t)v46, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version);
    }
    v48 = &qword_2577E78F0;
    v49 = v17;
    goto LABEL_21;
  }
LABEL_22:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoLaunchServicesSnapshot.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoLaunchServicesSnapshot, &qword_2577E78F8, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
}

unint64_t sub_248F1F308()
{
  static ToolKitProtoLaunchServicesSnapshot.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

uint64_t (*sub_248F1F330())()
{
  return nullsub_1;
}

uint64_t sub_248F1F344()
{
  return ToolKitProtoLaunchServicesSnapshot.decodeMessage<A>(decoder:)();
}

void sub_248F1F358()
{
  ToolKitProtoLaunchServicesSnapshot.traverse<A>(visitor:)();
}

uint64_t sub_248F1F370()
{
  sub_248D9D9D8(&qword_2577E7A68, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
  return sub_2490E7B4C();
}

uint64_t sub_248F1F3C8()
{
  sub_248D9D9D8(&qword_2577E7970, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
  return sub_2490E7C90();
}

uint64_t sub_248F1F40C()
{
  sub_248D9D9D8(&qword_2577E7970, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
  return sub_2490E7C9C();
}

void sub_248F1F464(uint64_t a1)
{
  sub_248F1FA18(a1, 0x65746174532ELL, 0xE600000000000000, qword_2577E7798, &qword_2577E7798[1]);
}

uint64_t static ToolKitProtoLaunchServicesSnapshot.State.protoMessageName.getter()
{
  return sub_248F1FA80(&qword_2577E3380, qword_2577E7798);
}

uint64_t sub_248F1F4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E77A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E77A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490EF520;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "bundleId";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "persistentIdentifier";
  *((_QWORD *)v11 + 1) = 20;
  v11[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoLaunchServicesSnapshot.State._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E3388, (uint64_t)qword_2577E77A8, a1);
}

uint64_t sub_248F1F610@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_2490E7D74();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

void ToolKitProtoLaunchServicesSnapshot.State.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_2490E7BD0();
      }
      else if (v1 == 1)
      {
        OUTLINED_FUNCTION_36_7();
      }
      v1 = OUTLINED_FUNCTION_26_6();
    }
  }
  OUTLINED_FUNCTION_393();
}

void ToolKitProtoLaunchServicesSnapshot.State.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_13_9();
  if (!v1 || (OUTLINED_FUNCTION_104_4(), sub_2490E7D20(), !v0))
  {
    v2 = OUTLINED_FUNCTION_114_1();
    if ((sub_248F1E860(v2, v3) & 1) != 0
      || (OUTLINED_FUNCTION_114_1(), OUTLINED_FUNCTION_104_4(), sub_2490E7CE4(), !v0))
    {
      type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State(0);
      OUTLINED_FUNCTION_22_7();
    }
  }
  OUTLINED_FUNCTION_34_1();
}

void static ToolKitProtoLaunchServicesSnapshot.State.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_215_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_19_9();
  v8 = v8 && v6 == v7;
  if ((v8 || (OUTLINED_FUNCTION_9_0() & 1) != 0)
    && (MEMORY[0x2495AB430](*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24)) & 1) != 0)
  {
    v9 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State(0);
    OUTLINED_FUNCTION_34_8(*(int *)(v9 + 24));
    OUTLINED_FUNCTION_33_7(*(int *)(v9 + 24));
    sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_51_4(v0);
    OUTLINED_FUNCTION_51_4(v1);
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t ToolKitProtoLaunchServicesSnapshot.State.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, &qword_2577E78E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
}

uint64_t sub_248F1F854(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_2490E88F0();
  a1(0);
  sub_248D9D9D8(a2, a1, a3);
  sub_2490E7F48();
  return sub_2490E8920();
}

void sub_248F1F8E0()
{
  ToolKitProtoLaunchServicesSnapshot.State.decodeMessage<A>(decoder:)();
}

void sub_248F1F8F4()
{
  ToolKitProtoLaunchServicesSnapshot.State.traverse<A>(visitor:)();
}

uint64_t sub_248F1F908()
{
  sub_248D9D9D8(&qword_2577E7A60, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
  return sub_2490E7B4C();
}

uint64_t sub_248F1F95C()
{
  sub_248D9D9D8(&qword_2577E78E0, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
  return sub_2490E7C90();
}

uint64_t sub_248F1F9A0()
{
  sub_248D9D9D8(&qword_2577E78E0, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
  return sub_2490E7C9C();
}

void sub_248F1F9F4(uint64_t a1)
{
  sub_248F1FA18(a1, 0x6E6F69737265562ELL, 0xE800000000000000, qword_2577E77C0, &qword_2577E77C0[1]);
}

void sub_248F1FA18(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_67_5();
  *a4 = v7;
  *a5 = v8;
  OUTLINED_FUNCTION_47_2();
}

uint64_t static ToolKitProtoLaunchServicesSnapshot.Version.protoMessageName.getter()
{
  return sub_248F1FA80(&qword_2577E3390, qword_2577E77C0);
}

uint64_t sub_248F1FA80(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_248F1FAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E77D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E77D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490EF520;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "uuid";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "sequenceNumber";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoLaunchServicesSnapshot.Version._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E3398, (uint64_t)qword_2577E77D0, a1);
}

void ToolKitProtoLaunchServicesSnapshot.Version.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F23900(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE5C0D8]);
}

void ToolKitProtoLaunchServicesSnapshot.Version.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_16();
  if (!v3 || (OUTLINED_FUNCTION_18_5(), (v0 = v1) == 0))
  {
    if (!*(_QWORD *)(v2 + 16) || (OUTLINED_FUNCTION_9_11(), sub_2490E7CFC(), !v0))
    {
      type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version(0);
      OUTLINED_FUNCTION_17_8();
    }
  }
  OUTLINED_FUNCTION_64_2();
}

void static ToolKitProtoLaunchServicesSnapshot.Version.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_215_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_19_9();
  v8 = v8 && v6 == v7;
  if ((v8 || (OUTLINED_FUNCTION_9_0() & 1) != 0) && *(_QWORD *)(v3 + 16) == *(_QWORD *)(v2 + 16))
  {
    v9 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version(0);
    OUTLINED_FUNCTION_34_8(*(int *)(v9 + 24));
    OUTLINED_FUNCTION_33_7(*(int *)(v9 + 24));
    sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_51_4(v0);
    OUTLINED_FUNCTION_51_4(v1);
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t ToolKitProtoLaunchServicesSnapshot.Version.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, &qword_2577E7900, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
}

void sub_248F1FDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ToolKitProtoLaunchServicesSnapshot.Version.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_248F1FDD4()
{
  ToolKitProtoLaunchServicesSnapshot.Version.traverse<A>(visitor:)();
}

uint64_t sub_248F1FDE8()
{
  sub_248D9D9D8(&qword_2577E7A58, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
  return sub_2490E7B4C();
}

uint64_t sub_248F1FE3C()
{
  sub_248D9D9D8(&qword_2577E7998, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
  return sub_2490E7C90();
}

uint64_t sub_248F1FE80()
{
  sub_248D9D9D8(&qword_2577E7998, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
  return sub_2490E7C9C();
}

unint64_t static ToolKitProtoChangeset.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(17);
}

uint64_t sub_248F1FEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E77E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E77E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FABD0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 3;
  *(_QWORD *)v7 = "full";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 4;
  *(_QWORD *)v11 = "partial";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 5;
  *(_QWORD *)v13 = "noneVariant";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoChangeset._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33A0, (uint64_t)qword_2577E77E8, a1);
}

void ToolKitProtoChangeset.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        goto LABEL_2;
      if (v1 == 5)
        break;
      if (v1 != 4)
      {
        if (v1 != 3)
          goto LABEL_11;
        OUTLINED_FUNCTION_64_6();
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_9_11();
      sub_248F2012C(v3, v4, v5, v6);
LABEL_11:
      v1 = OUTLINED_FUNCTION_26_6();
    }
    OUTLINED_FUNCTION_63_4();
LABEL_9:
    sub_248F20514();
    goto LABEL_11;
  }
LABEL_2:
  OUTLINED_FUNCTION_47_3();
}

void sub_248F2012C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for ToolKitProtoChangeset.Partial(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254477660);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoChangesetKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AB8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_248F28914(a1, (uint64_t)v12, &qword_254477660);
  v30 = v13;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_248DB939C((uint64_t)v12, &qword_254477660);
  }
  else
  {
    sub_248E06294((uint64_t)v12, (uint64_t)v18, type metadata accessor for ToolKitProtoChangesetKind);
    sub_248E06294((uint64_t)v18, (uint64_t)v16, type metadata accessor for ToolKitProtoChangesetKind);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 2, v5))
    {
      sub_248DB270C((uint64_t)v16, type metadata accessor for ToolKitProtoChangesetKind);
    }
    else
    {
      sub_248DB939C((uint64_t)v24, &qword_2577E7AB8);
      sub_248E06294((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitProtoChangeset.Partial);
      sub_248E06294((uint64_t)v9, (uint64_t)v24, type metadata accessor for ToolKitProtoChangeset.Partial);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v25 = v34;
  sub_248D9D9D8(&qword_2577E79C8, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
  sub_2490E7C60();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_10:
    sub_248DB939C(v26, &qword_2577E7AB8);
    return;
  }
  sub_248F28914((uint64_t)v24, (uint64_t)v22, &qword_2577E7AB8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v24, &qword_2577E7AB8);
    v26 = (uint64_t)v22;
    goto LABEL_10;
  }
  v27 = v33;
  sub_248E06294((uint64_t)v22, v33, type metadata accessor for ToolKitProtoChangeset.Partial);
  if (EnumTagSinglePayload != 1)
    sub_2490E7B7C();
  sub_248DB939C((uint64_t)v24, &qword_2577E7AB8);
  v28 = v31;
  sub_248DB939C(v31, &qword_254477660);
  sub_248E06294(v27, v28, type metadata accessor for ToolKitProtoChangeset.Partial);
  __swift_storeEnumTagSinglePayload(v28, 0, 2, v5);
  __swift_storeEnumTagSinglePayload(v28, 0, 1, v30);
}

void sub_248F20514()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t (*v3)(_QWORD);
  uint64_t *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  int v17;
  uint64_t *v18;
  uint64_t v19;
  int EnumTagSinglePayload;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  unsigned int v23;
  uint64_t (*v24)(_QWORD);
  uint64_t *v25;
  uint64_t v26;

  OUTLINED_FUNCTION_10();
  v23 = v2;
  v22 = v3;
  v24 = v5;
  v25 = v4;
  v26 = v6;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_17_0();
  v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_215_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - v13;
  v15 = sub_2490E7A2C();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v15);
  sub_248D9D9D8(&qword_254474F88, v16, MEMORY[0x24BE5B938]);
  sub_2490E7BAC();
  if (v1
    || (sub_248F28914((uint64_t)v14, v0, &qword_2577E7AA8),
        v17 = __swift_getEnumTagSinglePayload(v0, 1, v15),
        sub_248DB939C(v0, &qword_2577E7AA8),
        v17 == 1))
  {
    sub_248DB939C((uint64_t)v14, &qword_2577E7AA8);
  }
  else
  {
    v18 = v25;
    sub_248F28914(v26, v10, v25);
    v19 = v24(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v10, 1, v19);
    sub_248DB939C(v10, v18);
    if (EnumTagSinglePayload != 1)
      sub_2490E7B7C();
    sub_248DB939C((uint64_t)v14, &qword_2577E7AA8);
    sub_248DB939C(v26, v25);
    v21 = v22(0);
    __swift_storeEnumTagSinglePayload(v26, v23, 2, v21);
    __swift_storeEnumTagSinglePayload(v26, 0, 1, v19);
  }
  OUTLINED_FUNCTION_1_1();
}

void ToolKitProtoChangeset.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_27_8(v3, v11);
  v4 = type metadata accessor for ToolKitProtoChangesetKind(0);
  OUTLINED_FUNCTION_90_3(v1, v5, v4);
  if (v6)
    goto LABEL_9;
  v7 = type metadata accessor for ToolKitProtoChangeset.Partial(0);
  v8 = OUTLINED_FUNCTION_82_2(v7);
  if (!v8)
  {
    v9 = OUTLINED_FUNCTION_7_14();
    sub_248F20808(v9);
    OUTLINED_FUNCTION_476(v10, type metadata accessor for ToolKitProtoChangesetKind);
    if (v0)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_98_3();
    OUTLINED_FUNCTION_38_7();
    goto LABEL_10;
  }
  if (v8 == 1)
  {
    OUTLINED_FUNCTION_79_3();
    sub_248F21664();
  }
  else
  {
    OUTLINED_FUNCTION_7_14();
    sub_248F21714();
  }
  if (!v0)
    goto LABEL_9;
LABEL_10:
  OUTLINED_FUNCTION_34_1();
}

void sub_248F20808(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254477660);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoChangeset.Partial(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248F28914(a1, (uint64_t)v4, &qword_254477660);
  v8 = type metadata accessor for ToolKitProtoChangesetKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_254477660);
  }
  else
  {
    if (!__swift_getEnumTagSinglePayload((uint64_t)v4, 2, v5))
    {
      sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoChangeset.Partial);
      sub_248D9D9D8(&qword_2577E79C8, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
      sub_2490E7D44();
      sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoChangeset.Partial);
      return;
    }
    sub_248DB270C((uint64_t)v4, type metadata accessor for ToolKitProtoChangesetKind);
  }
  __break(1u);
}

void static ToolKitProtoChangeset.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_7_0();
  v5 = v4;
  v39 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_14_10(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = OUTLINED_FUNCTION_45_8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for ToolKitProtoChangesetKind(v17);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_99();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7908);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_337();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_175_1();
  v24 = MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_31_8(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  OUTLINED_FUNCTION_42_10(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  OUTLINED_FUNCTION_42_10(v3, v1);
  OUTLINED_FUNCTION_42_10(v0, v32);
  v33 = OUTLINED_FUNCTION_8_13(v1);
  if (v36)
  {
    OUTLINED_FUNCTION_243(v0);
    OUTLINED_FUNCTION_243(v3);
    v35 = OUTLINED_FUNCTION_8_13(v32);
    if (v36)
    {
      OUTLINED_FUNCTION_529(v35, &qword_254477660);
LABEL_11:
      v38 = type metadata accessor for ToolKitProtoChangeset(0);
      OUTLINED_FUNCTION_23_11(v38);
      OUTLINED_FUNCTION_48_6();
      sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_52_7(v1);
      OUTLINED_FUNCTION_52_7(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_61_7(v33, v34, &qword_254477660);
  OUTLINED_FUNCTION_8_13(v32);
  if (v36)
  {
    OUTLINED_FUNCTION_243(v0);
    OUTLINED_FUNCTION_243(v3);
    OUTLINED_FUNCTION_167(v37, type metadata accessor for ToolKitProtoChangesetKind);
LABEL_9:
    OUTLINED_FUNCTION_529(v35, &qword_2577E7908);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_62_6();
  OUTLINED_FUNCTION_71_3();
  static ToolKitProtoChangesetKind.== infix(_:_:)();
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_35_5(v0);
  OUTLINED_FUNCTION_35_5(v3);
  OUTLINED_FUNCTION_16(v2);
  OUTLINED_FUNCTION_35_5(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoChangeset.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoChangeset, &qword_2577E7910, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
}

unint64_t sub_248F20BEC()
{
  static ToolKitProtoChangeset.protoMessageName.getter();
  return 0xD000000000000011;
}

uint64_t (*sub_248F20C10())()
{
  return nullsub_1;
}

void sub_248F20C24()
{
  ToolKitProtoChangeset.decodeMessage<A>(decoder:)();
}

void sub_248F20C38()
{
  ToolKitProtoChangeset.traverse<A>(visitor:)();
}

uint64_t sub_248F20C4C()
{
  sub_248D9D9D8(&qword_2577E7A50, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
  return sub_2490E7B4C();
}

uint64_t sub_248F20CA0()
{
  sub_248D9D9D8(&qword_254477618, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
  return sub_2490E7C90();
}

uint64_t sub_248F20CE4()
{
  sub_248D9D9D8(&qword_254477618, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
  return sub_2490E7C9C();
}

void sub_248F20D38(uint64_t a1)
{
  sub_248F20D64(a1, 0x616E65766F72502ELL, 0xEB0000000065636ELL, qword_2577E7800, &qword_2577E7800[1]);
}

void sub_248F20D64(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_67_5();
  *a4 = v7;
  *a5 = v8;
  OUTLINED_FUNCTION_47_2();
}

uint64_t static ToolKitProtoChangeset.Provenance.protoMessageName.getter()
{
  return sub_248F1FA80(&qword_2577E33A8, qword_2577E7800);
}

uint64_t sub_248F20DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E7810);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7810);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FABD0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "LaunchServicesSnapshot";
  *(_QWORD *)(v7 + 8) = 22;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "appIntentsDatabaseChanged";
  *((_QWORD *)v11 + 1) = 25;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "appProtectionChanged";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoChangeset.Provenance._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33B0, (uint64_t)qword_2577E7810, a1);
}

void ToolKitProtoChangeset.Provenance.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        goto LABEL_2;
      if (v1 == 3)
        break;
      if (v1 == 2)
      {
        OUTLINED_FUNCTION_64_6();
        goto LABEL_10;
      }
      if (v1 == 1)
      {
        OUTLINED_FUNCTION_9_11();
        sub_248F21004(v3, v4, v5, v6);
      }
LABEL_11:
      v1 = OUTLINED_FUNCTION_26_6();
    }
    OUTLINED_FUNCTION_63_4();
LABEL_10:
    sub_248F20514();
    goto LABEL_11;
  }
LABEL_2:
  OUTLINED_FUNCTION_47_3();
}

void sub_248F21004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4400);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AB0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_248F28914(a1, (uint64_t)v12, &qword_2577E4400);
  v30 = v13;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_248DB939C((uint64_t)v12, &qword_2577E4400);
  }
  else
  {
    sub_248E06294((uint64_t)v12, (uint64_t)v18, type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind);
    sub_248E06294((uint64_t)v18, (uint64_t)v16, type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 2, v5))
    {
      sub_248DB270C((uint64_t)v16, type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind);
    }
    else
    {
      sub_248DB939C((uint64_t)v24, &qword_2577E7AB0);
      sub_248E06294((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitProtoLaunchServicesSnapshot);
      sub_248E06294((uint64_t)v9, (uint64_t)v24, type metadata accessor for ToolKitProtoLaunchServicesSnapshot);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v25 = v34;
  sub_248D9D9D8(&qword_2577E7970, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
  sub_2490E7C60();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_10:
    sub_248DB939C(v26, &qword_2577E7AB0);
    return;
  }
  sub_248F28914((uint64_t)v24, (uint64_t)v22, &qword_2577E7AB0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v24, &qword_2577E7AB0);
    v26 = (uint64_t)v22;
    goto LABEL_10;
  }
  v27 = v33;
  sub_248E06294((uint64_t)v22, v33, type metadata accessor for ToolKitProtoLaunchServicesSnapshot);
  if (EnumTagSinglePayload != 1)
    sub_2490E7B7C();
  sub_248DB939C((uint64_t)v24, &qword_2577E7AB0);
  v28 = v31;
  sub_248DB939C(v31, &qword_2577E4400);
  sub_248E06294(v27, v28, type metadata accessor for ToolKitProtoLaunchServicesSnapshot);
  __swift_storeEnumTagSinglePayload(v28, 0, 2, v5);
  __swift_storeEnumTagSinglePayload(v28, 0, 1, v30);
}

void ToolKitProtoChangeset.Provenance.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_27_8(v3, v11);
  v4 = type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind(0);
  OUTLINED_FUNCTION_90_3(v1, v5, v4);
  if (v6)
    goto LABEL_9;
  v7 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot(0);
  v8 = OUTLINED_FUNCTION_82_2(v7);
  if (!v8)
  {
    v9 = OUTLINED_FUNCTION_7_14();
    sub_248F214D0(v9);
    OUTLINED_FUNCTION_476(v10, type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind);
    if (v0)
      goto LABEL_10;
LABEL_9:
    type metadata accessor for ToolKitProtoChangeset.Provenance(0);
    OUTLINED_FUNCTION_38_7();
    goto LABEL_10;
  }
  if (v8 == 1)
  {
    OUTLINED_FUNCTION_7_14();
    sub_248F21664();
  }
  else
  {
    OUTLINED_FUNCTION_79_3();
    sub_248F21714();
  }
  if (!v0)
    goto LABEL_9;
LABEL_10:
  OUTLINED_FUNCTION_34_1();
}

void sub_248F214D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4400);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoLaunchServicesSnapshot(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248F28914(a1, (uint64_t)v4, &qword_2577E4400);
  v8 = type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_2577E4400);
  }
  else
  {
    if (!__swift_getEnumTagSinglePayload((uint64_t)v4, 2, v5))
    {
      sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoLaunchServicesSnapshot);
      sub_248D9D9D8(&qword_2577E7970, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
      sub_2490E7D44();
      sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoLaunchServicesSnapshot);
      return;
    }
    sub_248DB270C((uint64_t)v4, type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind);
  }
  __break(1u);
}

void sub_248F21664()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_53_4(v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_96_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_56_5(v13, v18);
  v14 = OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_90_3(v0, v15, v14);
  if (v16)
  {
    OUTLINED_FUNCTION_105_4();
  }
  else
  {
    v17 = v2(0);
    OUTLINED_FUNCTION_68_5(v17);
    if (v1 == 1)
    {
      MEMORY[0x2495AC1F8]();
      sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      OUTLINED_FUNCTION_58_7();
      OUTLINED_FUNCTION_78_4();
      OUTLINED_FUNCTION_1_1();
      return;
    }
  }
  __break(1u);
}

void sub_248F21714()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_53_4(v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_96_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_56_5(v13, v18);
  v14 = OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_90_3(v0, v15, v14);
  if (v16)
  {
    OUTLINED_FUNCTION_105_4();
  }
  else
  {
    v17 = v2(0);
    OUTLINED_FUNCTION_68_5(v17);
    if (v1 == 2)
    {
      MEMORY[0x2495AC1F8]();
      sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      OUTLINED_FUNCTION_58_7();
      OUTLINED_FUNCTION_78_4();
      OUTLINED_FUNCTION_1_1();
      return;
    }
  }
  __break(1u);
}

void static ToolKitProtoChangeset.Provenance.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_7_0();
  v5 = v4;
  v39 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_14_10(v7, v39);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = OUTLINED_FUNCTION_45_8(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind(v17);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_99();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4408);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_337();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_175_1();
  v24 = MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_31_8(v24, v25, v26, v27, v28, v29, v30, v31, v41);
  OUTLINED_FUNCTION_42_10(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  OUTLINED_FUNCTION_42_10(v3, v1);
  OUTLINED_FUNCTION_42_10(v0, v32);
  v33 = OUTLINED_FUNCTION_8_13(v1);
  if (v36)
  {
    OUTLINED_FUNCTION_243(v0);
    OUTLINED_FUNCTION_243(v3);
    v35 = OUTLINED_FUNCTION_8_13(v32);
    if (v36)
    {
      OUTLINED_FUNCTION_529(v35, &qword_2577E4400);
LABEL_11:
      v38 = type metadata accessor for ToolKitProtoChangeset.Provenance(0);
      OUTLINED_FUNCTION_23_11(v38);
      OUTLINED_FUNCTION_48_6();
      sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_52_7(v1);
      OUTLINED_FUNCTION_52_7(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_61_7(v33, v34, &qword_2577E4400);
  OUTLINED_FUNCTION_8_13(v32);
  if (v36)
  {
    OUTLINED_FUNCTION_243(v0);
    OUTLINED_FUNCTION_243(v3);
    OUTLINED_FUNCTION_167(v37, type metadata accessor for ToolKitProtoChangeset.ToolKitProtoProvenanceKind);
LABEL_9:
    OUTLINED_FUNCTION_529(v35, &qword_2577E4408);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_62_6();
  OUTLINED_FUNCTION_71_3();
  static ToolKitProtoChangeset.ToolKitProtoProvenanceKind.== infix(_:_:)();
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_35_5(v0);
  OUTLINED_FUNCTION_35_5(v3);
  OUTLINED_FUNCTION_16(v2);
  OUTLINED_FUNCTION_35_5(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoChangeset.Provenance.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoChangeset.Provenance, &qword_2577E7918, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
}

void sub_248F21A20()
{
  ToolKitProtoChangeset.Provenance.decodeMessage<A>(decoder:)();
}

void sub_248F21A34()
{
  ToolKitProtoChangeset.Provenance.traverse<A>(visitor:)();
}

uint64_t sub_248F21A48()
{
  sub_248D9D9D8(&qword_2577E7A48, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
  return sub_2490E7B4C();
}

uint64_t sub_248F21A9C()
{
  sub_248D9D9D8(&qword_2577E56B0, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
  return sub_2490E7C90();
}

uint64_t sub_248F21AE0()
{
  sub_248D9D9D8(&qword_2577E56B0, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
  return sub_2490E7C9C();
}

void sub_248F21B34(uint64_t a1)
{
  sub_248F20D64(a1, 0x6C6169747261502ELL, 0xE800000000000000, qword_2577E7828, &qword_2577E7828[1]);
}

uint64_t static ToolKitProtoChangeset.Partial.protoMessageName.getter()
{
  return sub_248F1FA80(&qword_2577E33B8, qword_2577E7828);
}

uint64_t sub_248F21B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E7838);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7838);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FABD0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "updated";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "removed";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "provenance";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoChangeset.Partial._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33C0, (uint64_t)qword_2577E7838, a1);
}

void ToolKitProtoChangeset.Partial.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
      {
        OUTLINED_FUNCTION_0_9();
        sub_248F21D94();
      }
      else if (v1 == 2 || v1 == 1)
      {
        OUTLINED_FUNCTION_94_3();
      }
      v1 = OUTLINED_FUNCTION_26_6();
    }
  }
  OUTLINED_FUNCTION_393();
}

uint64_t sub_248F21D94()
{
  type metadata accessor for ToolKitProtoChangeset.Provenance(0);
  sub_248D9D9D8(&qword_2577E56B0, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
  return sub_2490E7C54();
}

void ToolKitProtoChangeset.Partial.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_89_2();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16) || (OUTLINED_FUNCTION_50_7(), (v0 = v2) == 0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v3 + 8) + 16) || (OUTLINED_FUNCTION_50_7(), (v0 = v2) == 0))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16)
        || (type metadata accessor for ToolKitProtoChangeset.Provenance(0),
            sub_248D9D9D8(&qword_2577E56B0, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance), sub_2490E7D38(), !v0))
      {
        type metadata accessor for ToolKitProtoChangeset.Partial(0);
        OUTLINED_FUNCTION_22_7();
      }
    }
  }
  OUTLINED_FUNCTION_34_1();
}

void static ToolKitProtoChangeset.Partial.== infix(_:_:)()
{
  char *v0;
  uint64_t v1;
  _QWORD **v2;
  _QWORD **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_215_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - v7;
  sub_248DA0BF8(*v3, *v2);
  if ((v9 & 1) != 0)
  {
    sub_248DA0BF8(v3[1], v2[1]);
    if ((v10 & 1) != 0)
    {
      sub_248DA4F20();
      if ((v11 & 1) != 0)
      {
        v12 = type metadata accessor for ToolKitProtoChangeset.Partial(0);
        OUTLINED_FUNCTION_34_8(*(int *)(v12 + 28));
        OUTLINED_FUNCTION_33_7(*(int *)(v12 + 28));
        sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_24_8();
        v13 = *(void (**)(char *, uint64_t))(v4 + 8);
        v13(v0, v1);
        v13(v8, v1);
      }
    }
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t ToolKitProtoChangeset.Partial.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoChangeset.Partial, &qword_2577E7920, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
}

uint64_t (*sub_248F22010())()
{
  return nullsub_1;
}

void sub_248F22024()
{
  ToolKitProtoChangeset.Partial.decodeMessage<A>(decoder:)();
}

void sub_248F22038()
{
  ToolKitProtoChangeset.Partial.traverse<A>(visitor:)();
}

uint64_t sub_248F2204C()
{
  sub_248D9D9D8(&qword_2577E7A40, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
  return sub_2490E7B4C();
}

uint64_t sub_248F220A0()
{
  sub_248D9D9D8(&qword_2577E79C8, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
  return sub_2490E7C90();
}

uint64_t sub_248F220E4()
{
  sub_248D9D9D8(&qword_2577E79C8, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
  return sub_2490E7C9C();
}

unint64_t static ToolKitProtoIndexingReason.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(22);
}

uint64_t sub_248F22150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E7850);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7850);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FABE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "id";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "requestedChangeset";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "manual";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "firstUnlock";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "schedulerBooted";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "appProtectionStateChanged";
  *((_QWORD *)v19 + 1) = 25;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "appIntentsDatabaseChanged";
  *((_QWORD *)v21 + 1) = 25;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "launchServicesDatabaseChanged";
  *((_QWORD *)v23 + 1) = 29;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "languagesChanged";
  *((_QWORD *)v25 + 1) = 16;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "siriLanguagesChanged";
  *((_QWORD *)v27 + 1) = 20;
  v27[16] = 2;
  v10();
  v28 = (_QWORD *)(v6 + 10 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "shortcutsAppLaunched";
  *((_QWORD *)v29 + 1) = 20;
  v29[16] = 2;
  v10();
  v30 = (_QWORD *)(v6 + 11 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "deferredFull";
  *((_QWORD *)v31 + 1) = 12;
  v31[16] = 2;
  v10();
  v32 = (_QWORD *)(v6 + 12 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "deferredDelta";
  *((_QWORD *)v33 + 1) = 13;
  v33[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoIndexingReason._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33C8, (uint64_t)qword_2577E7850, a1);
}

#error "248F22604: call analysis failed (funcsize=68)"

uint64_t sub_248F22618()
{
  return sub_2490E7B94();
}

void sub_248F2269C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  int EnumTagSinglePayload;

  OUTLINED_FUNCTION_10();
  a20 = v23;
  a21 = v24;
  a11 = v25;
  v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_337();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - v30;
  v32 = sub_2490E7A2C();
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 1, 1, v32);
  sub_248D9D9D8(&qword_254474F88, v33, MEMORY[0x24BE5B938]);
  sub_2490E7BAC();
  if (v21
    || (sub_248F28914((uint64_t)v31, v22, &qword_2577E7AA8),
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v22, 1, v32),
        sub_248DB939C(v22, &qword_2577E7AA8),
        EnumTagSinglePayload == 1))
  {
    sub_248DB939C((uint64_t)v31, &qword_2577E7AA8);
  }
  else
  {
    if (*(_BYTE *)(v27 + 16) != 12)
    {
      OUTLINED_FUNCTION_373();
      sub_2490E7B7C();
    }
    sub_248DB939C((uint64_t)v31, &qword_2577E7AA8);
    *(_BYTE *)(v27 + 16) = a11;
  }
  OUTLINED_FUNCTION_1_1();
}

void ToolKitProtoIndexingReason.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_13_9();
  if (!v2 || (sub_2490E7D20(), !v1))
  {
    OUTLINED_FUNCTION_3_11();
    sub_248F23F60();
    if (!v1)
    {
      switch(*(_BYTE *)(v0 + 16))
      {
        case 2:
          v3 = OUTLINED_FUNCTION_3_11();
          sub_248F22988(v3);
          break;
        case 3:
          v5 = OUTLINED_FUNCTION_3_11();
          sub_248F22A74(v5);
          break;
        case 4:
          v6 = OUTLINED_FUNCTION_3_11();
          sub_248F22B60(v6);
          break;
        case 5:
          v7 = OUTLINED_FUNCTION_3_11();
          sub_248F22C4C(v7);
          break;
        case 6:
          v8 = OUTLINED_FUNCTION_3_11();
          sub_248F22D38(v8);
          break;
        case 7:
          v9 = OUTLINED_FUNCTION_3_11();
          sub_248F22E24(v9);
          break;
        case 8:
          v10 = OUTLINED_FUNCTION_3_11();
          sub_248F22F10(v10);
          break;
        case 9:
          v11 = OUTLINED_FUNCTION_3_11();
          sub_248F22FFC(v11);
          break;
        case 0xA:
          v12 = OUTLINED_FUNCTION_3_11();
          sub_248F230E8(v12);
          break;
        case 0xB:
          v13 = OUTLINED_FUNCTION_3_11();
          sub_248F231D4(v13);
          break;
        case 0xC:
          break;
        default:
          v4 = OUTLINED_FUNCTION_3_11();
          sub_248F2294C(v4);
          break;
      }
      type metadata accessor for ToolKitProtoIndexingReason(0);
      sub_2490E7AA4();
    }
  }
  OUTLINED_FUNCTION_64_2();
}

uint64_t sub_248F2294C(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 16) - 2 >= 0xB)
    return sub_2490E7CCC();
  __break(1u);
  return result;
}

uint64_t sub_248F22988(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 2)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F22A74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 3)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F22B60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 4)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F22C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 5)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F22D38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 6)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F22E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 7)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F22F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 8)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F22FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 9)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F230E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 10)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F231D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 11)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static ToolKitProtoIndexingReason.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  int v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unsigned __int8 v48;

  OUTLINED_FUNCTION_7_0();
  v5 = OUTLINED_FUNCTION_15_5();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_261();
  v43 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v42 = (uint64_t)&v40 - v9;
  v10 = type metadata accessor for ToolKitProtoChangeset(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_17_0();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7928);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254477638);
  OUTLINED_FUNCTION_5_0();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_323_0();
  MEMORY[0x24BDAC7A8](v21);
  v22 = OUTLINED_FUNCTION_107_2();
  v46 = v3;
  v24 = v22 == *v2 && v23 == v2[1];
  if (!v24 && (OUTLINED_FUNCTION_9_0() & 1) == 0)
    goto LABEL_15;
  v25 = v2;
  v26 = type metadata accessor for ToolKitProtoIndexingReason(0);
  OUTLINED_FUNCTION_87_2(v46 + *(int *)(v26 + 24), v0);
  v41 = v26;
  OUTLINED_FUNCTION_87_2((uint64_t)v25 + *(int *)(v26 + 24), v1);
  v27 = OUTLINED_FUNCTION_106_1();
  OUTLINED_FUNCTION_87_2(v27, v28);
  OUTLINED_FUNCTION_87_2(v1, v15);
  OUTLINED_FUNCTION_19(v4, 1, v10);
  if (!v24)
  {
    sub_248F28914(v4, (uint64_t)v20, &qword_254477638);
    OUTLINED_FUNCTION_19(v15, 1, v10);
    if (!v30)
    {
      sub_248E06294(v15, v14, type metadata accessor for ToolKitProtoChangeset);
      static ToolKitProtoChangeset.== infix(_:_:)();
      v32 = v31;
      OUTLINED_FUNCTION_88_2(v14);
      OUTLINED_FUNCTION_57_5(v1);
      OUTLINED_FUNCTION_57_5(v0);
      OUTLINED_FUNCTION_88_2((uint64_t)v20);
      OUTLINED_FUNCTION_57_5(v4);
      if ((v32 & 1) == 0)
        goto LABEL_15;
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_69_4(v1);
    OUTLINED_FUNCTION_69_4(v0);
    sub_248DB270C((uint64_t)v20, type metadata accessor for ToolKitProtoChangeset);
LABEL_14:
    OUTLINED_FUNCTION_529(v29, &qword_2577E7928);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_35_5(v1);
  OUTLINED_FUNCTION_35_5(v0);
  v29 = OUTLINED_FUNCTION_19(v15, 1, v10);
  if (!v24)
    goto LABEL_14;
  OUTLINED_FUNCTION_529(v29, &qword_254477638);
LABEL_17:
  v33 = *(unsigned __int8 *)(v46 + 16);
  v34 = *((unsigned __int8 *)v25 + 16);
  v48 = *((_BYTE *)v25 + 16);
  if (v33 == 12)
  {
    if (v34 == 12)
    {
LABEL_22:
      v35 = v25;
      v36 = v41;
      v37 = v42;
      OUTLINED_FUNCTION_537(v42, v46 + *(int *)(v41 + 28));
      v38 = (uint64_t)v35 + *(int *)(v36 + 28);
      v39 = v43;
      OUTLINED_FUNCTION_537(v43, v38);
      sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_52_7(v39);
      OUTLINED_FUNCTION_52_7(v37);
    }
  }
  else
  {
    v47 = v33;
    if (v34 != 12 && (static ToolKitProtoTriggerKind.== infix(_:_:)(&v47, &v48) & 1) != 0)
      goto LABEL_22;
  }
LABEL_15:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoIndexingReason.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoIndexingReason, &qword_2577E7930, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
}

unint64_t sub_248F2362C()
{
  static ToolKitProtoIndexingReason.protoMessageName.getter();
  return 0xD000000000000016;
}

uint64_t sub_248F23650()
{
  return ToolKitProtoIndexingReason.decodeMessage<A>(decoder:)();
}

void sub_248F23664()
{
  ToolKitProtoIndexingReason.traverse<A>(visitor:)();
}

uint64_t sub_248F23678()
{
  sub_248D9D9D8(&qword_2577E7A38, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
  return sub_2490E7B4C();
}

uint64_t sub_248F236CC()
{
  sub_248D9D9D8(&qword_254477680, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
  return sub_2490E7C90();
}

uint64_t sub_248F23710()
{
  sub_248D9D9D8(&qword_254477680, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
  return sub_2490E7C9C();
}

unint64_t static ToolKitProtoIndexingRequest.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(23);
}

uint64_t sub_248F2377C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E7868);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7868);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490EF520;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "id";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "reasonIds";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoIndexingRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33D0, (uint64_t)qword_2577E7868, a1);
}

void ToolKitProtoIndexingRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248F23900(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE5C0E8]);
}

void sub_248F23900(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v6 = sub_2490E7B70();
  if (!v4)
  {
    while ((v7 & 1) == 0)
    {
      if (v6 == 2)
      {
        v8 = OUTLINED_FUNCTION_373();
        a4(v8);
      }
      else if (v6 == 1)
      {
        sub_2490E7C3C();
      }
      v6 = sub_2490E7B70();
    }
  }
  OUTLINED_FUNCTION_64_2();
}

void ToolKitProtoIndexingRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_16();
  if (!v2 || (OUTLINED_FUNCTION_18_5(), !v0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16) || (OUTLINED_FUNCTION_50_7(), !v0))
    {
      type metadata accessor for ToolKitProtoIndexingRequest(0);
      OUTLINED_FUNCTION_17_8();
    }
  }
  OUTLINED_FUNCTION_64_2();
}

void static ToolKitProtoIndexingRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_215_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_19_9();
  v6 = v6 && v4 == v5;
  if (v6 || (OUTLINED_FUNCTION_9_0() & 1) != 0)
  {
    OUTLINED_FUNCTION_97_2();
    if ((v7 & 1) != 0)
    {
      v8 = type metadata accessor for ToolKitProtoIndexingRequest(0);
      OUTLINED_FUNCTION_34_8(*(int *)(v8 + 24));
      OUTLINED_FUNCTION_33_7(*(int *)(v8 + 24));
      sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_24_8();
      OUTLINED_FUNCTION_51_4(v0);
      OUTLINED_FUNCTION_51_4(v1);
    }
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t ToolKitProtoIndexingRequest.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoIndexingRequest, &qword_2577E7938, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
}

unint64_t sub_248F23AE4()
{
  static ToolKitProtoIndexingRequest.protoMessageName.getter();
  return 0xD000000000000017;
}

void sub_248F23B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ToolKitProtoIndexingRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_248F23B1C()
{
  ToolKitProtoIndexingRequest.traverse<A>(visitor:)();
}

uint64_t sub_248F23B30()
{
  sub_248D9D9D8(&qword_2577E7A30, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
  return sub_2490E7B4C();
}

uint64_t sub_248F23B84()
{
  sub_248D9D9D8(&qword_2544776A0, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
  return sub_2490E7C90();
}

uint64_t sub_248F23BC8()
{
  sub_248D9D9D8(&qword_2544776A0, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
  return sub_2490E7C9C();
}

unint64_t static ToolKitProtoIndexingPolicyResolution.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(32);
}

uint64_t sub_248F23C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E7880);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7880);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FABD0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "requestId";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "resolvedChangeset";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "decisionMetadata";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoIndexingPolicyResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33D8, (uint64_t)qword_2577E7880, a1);
}

void ToolKitProtoIndexingPolicyResolution.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          OUTLINED_FUNCTION_94_3();
          break;
        case 2:
          v3 = OUTLINED_FUNCTION_0_9();
          sub_248F23E5C(v3, v4, v5, v6, (void (*)(_QWORD))type metadata accessor for ToolKitProtoIndexingPolicyResolution);
          break;
        case 1:
          OUTLINED_FUNCTION_36_7();
          break;
      }
      v1 = OUTLINED_FUNCTION_26_6();
    }
  }
  OUTLINED_FUNCTION_64_2();
}

void sub_248F23E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  a5(0);
  OUTLINED_FUNCTION_98_3();
  sub_248D9D9D8(&qword_254477618, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
  sub_2490E7C60();
  OUTLINED_FUNCTION_64_2();
}

void ToolKitProtoIndexingPolicyResolution.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_16();
  if (!v2 || (OUTLINED_FUNCTION_18_5(), !v0))
  {
    OUTLINED_FUNCTION_12_14();
    sub_248F23F60();
    if (!v0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
        OUTLINED_FUNCTION_50_7();
      type metadata accessor for ToolKitProtoIndexingPolicyResolution(0);
      OUTLINED_FUNCTION_17_8();
    }
  }
  OUTLINED_FUNCTION_64_2();
}

void sub_248F23F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_10();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254477638);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_99();
  v5 = OUTLINED_FUNCTION_98_3();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v7 = OUTLINED_FUNCTION_99_2();
  sub_248F28914(v3 + *(int *)(v7 + 24), v1, &qword_254477638);
  if (__swift_getEnumTagSinglePayload(v1, 1, v5) == 1)
  {
    sub_248DB939C(v1, &qword_254477638);
  }
  else
  {
    sub_248E06294(v1, v0, type metadata accessor for ToolKitProtoChangeset);
    sub_248D9D9D8(&qword_254477618, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
    sub_2490E7D44();
    sub_248DB270C(v0, type metadata accessor for ToolKitProtoChangeset);
  }
  OUTLINED_FUNCTION_1_1();
}

void static ToolKitProtoIndexingPolicyResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_261();
  v41 = v7;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = OUTLINED_FUNCTION_45_8(v9, v10, v11, v12, v13, v14, v15, v16, v39);
  type metadata accessor for ToolKitProtoChangeset(v17);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_17_0();
  v42 = v20 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7928);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254477638);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_337();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_323_0();
  MEMORY[0x24BDAC7A8](v25);
  v27 = OUTLINED_FUNCTION_107_2() == *v2 && v26 == v2[1];
  if (!v27 && (OUTLINED_FUNCTION_9_0() & 1) == 0)
    goto LABEL_18;
  v28 = type metadata accessor for ToolKitProtoIndexingPolicyResolution(0);
  OUTLINED_FUNCTION_83_1(v3 + *(int *)(v28 + 24), v0);
  OUTLINED_FUNCTION_83_1((uint64_t)v2 + *(int *)(v28 + 24), v1);
  v29 = OUTLINED_FUNCTION_106_1();
  OUTLINED_FUNCTION_83_1(v29, v30);
  OUTLINED_FUNCTION_83_1(v1, v21);
  v31 = OUTLINED_FUNCTION_8_13(v4);
  if (!v27)
  {
    OUTLINED_FUNCTION_61_7(v31, v32, &qword_254477638);
    OUTLINED_FUNCTION_8_13(v21);
    if (!v34)
    {
      sub_248E06294(v21, v42, type metadata accessor for ToolKitProtoChangeset);
      OUTLINED_FUNCTION_71_3();
      static ToolKitProtoChangeset.== infix(_:_:)();
      v37 = v36;
      OUTLINED_FUNCTION_88_2(v42);
      OUTLINED_FUNCTION_57_5(v1);
      OUTLINED_FUNCTION_57_5(v0);
      OUTLINED_FUNCTION_88_2(v5);
      OUTLINED_FUNCTION_57_5(v4);
      if ((v37 & 1) == 0)
        goto LABEL_18;
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_69_4(v1);
    OUTLINED_FUNCTION_69_4(v0);
    OUTLINED_FUNCTION_167(v35, type metadata accessor for ToolKitProtoChangeset);
LABEL_14:
    OUTLINED_FUNCTION_529(v33, &qword_2577E7928);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_57_5(v1);
  OUTLINED_FUNCTION_57_5(v0);
  v33 = OUTLINED_FUNCTION_8_13(v21);
  if (!v27)
    goto LABEL_14;
  OUTLINED_FUNCTION_529(v33, &qword_254477638);
LABEL_16:
  OUTLINED_FUNCTION_97_2();
  if ((v38 & 1) != 0)
  {
    OUTLINED_FUNCTION_537(v40, v3 + *(int *)(v28 + 28));
    OUTLINED_FUNCTION_537(v41, (uint64_t)v2 + *(int *)(v28 + 28));
    sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_52_7(v41);
    OUTLINED_FUNCTION_52_7(v40);
  }
LABEL_18:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoIndexingPolicyResolution.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoIndexingPolicyResolution, &qword_2577E7940, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
}

unint64_t sub_248F24360()
{
  static ToolKitProtoIndexingPolicyResolution.protoMessageName.getter();
  return 0xD000000000000020;
}

void sub_248F24384()
{
  ToolKitProtoIndexingPolicyResolution.decodeMessage<A>(decoder:)();
}

void sub_248F24398()
{
  ToolKitProtoIndexingPolicyResolution.traverse<A>(visitor:)();
}

uint64_t sub_248F243AC()
{
  sub_248D9D9D8(&qword_2577E7A28, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
  return sub_2490E7B4C();
}

uint64_t sub_248F24400()
{
  sub_248D9D9D8(&qword_254477700, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
  return sub_2490E7C90();
}

uint64_t sub_248F24444()
{
  sub_248D9D9D8(&qword_254477700, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
  return sub_2490E7C9C();
}

unint64_t static ToolKitProtoIndexingEvent.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(21);
}

uint64_t sub_248F244B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E7898);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7898);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FABF0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "requestId";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "tool";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "type";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "success";
  *((_QWORD *)v15 + 1) = 7;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "failure";
  *((_QWORD *)v17 + 1) = 7;
  v17[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoIndexingEvent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33E0, (uint64_t)qword_2577E7898, a1);
}

void ToolKitProtoIndexingEvent.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_36_7();
          break;
        case 2:
        case 3:
          OUTLINED_FUNCTION_0_9();
          sub_248F24758();
          break;
        case 5:
          v3 = OUTLINED_FUNCTION_0_9();
          sub_248F24824(v3, v4);
          break;
        case 6:
          v5 = OUTLINED_FUNCTION_0_9();
          sub_248F249C8(v5, v6);
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_26_6();
    }
  }
  OUTLINED_FUNCTION_393();
}

uint64_t sub_248F24758()
{
  uint64_t v0;
  uint64_t result;

  result = sub_2490E7C30();
  if (v0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_248F24824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  int EnumTagSinglePayload;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v15 - v8;
  v10 = sub_2490E7A2C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
  sub_248D9D9D8(&qword_254474F88, v11, MEMORY[0x24BE5B938]);
  sub_2490E7BAC();
  if (v2
    || (sub_248F28914((uint64_t)v9, (uint64_t)v7, &qword_2577E7AA8),
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10),
        sub_248DB939C((uint64_t)v7, &qword_2577E7AA8),
        EnumTagSinglePayload == 1))
  {
    sub_248DB939C((uint64_t)v9, &qword_2577E7AA8);
  }
  else
  {
    if (*(_QWORD *)(a2 + 48) != 1)
      sub_2490E7B7C();
    sub_248DB939C((uint64_t)v9, &qword_2577E7AA8);
    v13 = *(_QWORD *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a2 + 40) = 0;
    *(_QWORD *)(a2 + 48) = 0;
    sub_248E23594(v13, v14);
  }
}

uint64_t sub_248F249C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2490E7C30();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v7)
  {
    if (*(_QWORD *)(a2 + 48) == 1)
    {
      v5 = 1;
    }
    else
    {
      sub_2490E7B7C();
      v5 = *(_QWORD *)(a2 + 48);
    }
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a2 + 40) = 0;
    *(_QWORD *)(a2 + 48) = v7;
    return sub_248E23594(v6, v5);
  }
  return result;
}

void ToolKitProtoIndexingEvent.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_5_16();
  if (!v2 || (OUTLINED_FUNCTION_18_5(), !v0))
  {
    if (*(unsigned __int8 *)(v1 + 32) == 255)
      goto LABEL_8;
    v3 = OUTLINED_FUNCTION_12_14();
    if ((v4 & 1) != 0)
      sub_248F24B64(v3);
    else
      sub_248F24B28(v3);
    if (!v0)
    {
LABEL_8:
      v5 = *(_QWORD *)(v1 + 48);
      if (v5)
      {
        if (v5 == 1)
        {
LABEL_13:
          type metadata accessor for ToolKitProtoIndexingEvent(0);
          OUTLINED_FUNCTION_17_8();
          goto LABEL_14;
        }
        v6 = OUTLINED_FUNCTION_12_14();
        sub_248F24C94(v6);
      }
      else
      {
        v7 = OUTLINED_FUNCTION_12_14();
        sub_248F24BAC(v7);
      }
      if (!v0)
        goto LABEL_13;
    }
  }
LABEL_14:
  OUTLINED_FUNCTION_64_2();
}

uint64_t sub_248F24B28(uint64_t result)
{
  if ((*(_BYTE *)(result + 32) & 1) == 0)
    return sub_2490E7D20();
  __break(1u);
  return result;
}

uint64_t sub_248F24B64(uint64_t result)
{
  int v1;

  v1 = *(unsigned __int8 *)(result + 32);
  if (v1 != 255 && (v1 & 1) != 0)
    return sub_2490E7D20();
  __break(1u);
  return result;
}

uint64_t sub_248F24BAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 48))
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_248F24C94(uint64_t result)
{
  if (*(_QWORD *)(result + 48) >= 2uLL)
    return sub_2490E7D20();
  __break(1u);
  return result;
}

void static ToolKitProtoIndexingEvent.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_14_10(v4, v28);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_19_9();
  v8 = v8 && v6 == v7;
  if (!v8 && (OUTLINED_FUNCTION_9_0() & 1) == 0)
    goto LABEL_31;
  v10 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v11 = *(unsigned __int8 *)(v2 + 32);
  v13 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v14 = *(unsigned __int8 *)(v1 + 32);
  if (v11 == 255)
  {
    if (v14 == 255)
      goto LABEL_26;
    goto LABEL_16;
  }
  if (v14 == 255)
  {
LABEL_16:
    v16 = OUTLINED_FUNCTION_28_8();
    sub_248DB8B50(v16, v17, v11);
    sub_248DB8B50(v13, v12, v14);
    goto LABEL_31;
  }
  if ((v11 & 1) != 0)
  {
    if ((v14 & 1) != 0)
    {
      if (v10 != v13 || v9 != v12)
        goto LABEL_23;
      goto LABEL_25;
    }
  }
  else if ((v14 & 1) == 0)
  {
    if (v10 != v13 || v9 != v12)
    {
LABEL_23:
      v29 = OUTLINED_FUNCTION_9_0();
      OUTLINED_FUNCTION_28_8();
      sub_248DB8CEC();
      OUTLINED_FUNCTION_71_3();
      sub_248DB8CEC();
      if ((v29 & 1) == 0)
        goto LABEL_31;
LABEL_26:
      v20 = *(_QWORD *)(v2 + 40);
      v19 = *(_QWORD *)(v2 + 48);
      v22 = *(_QWORD *)(v1 + 40);
      v21 = *(_QWORD *)(v1 + 48);
      if (v19 == 1)
      {
        if (v21 == 1)
        {
LABEL_28:
          v23 = type metadata accessor for ToolKitProtoIndexingEvent(0);
          OUTLINED_FUNCTION_43_7(v0, v2 + *(int *)(v23 + 28));
          OUTLINED_FUNCTION_43_7(v30, v1 + *(int *)(v23 + 28));
          sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          OUTLINED_FUNCTION_74();
          OUTLINED_FUNCTION_51_4(v30);
          OUTLINED_FUNCTION_51_4(v0);
          goto LABEL_31;
        }
      }
      else if (v21 != 1)
      {
        if (v19)
        {
          if (v21)
          {
            if (v20 == v22 && v19 == v21)
            {
              sub_248E35210(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
              sub_248E35210(v20, v19);
              OUTLINED_FUNCTION_31_0();
              swift_bridgeObjectRelease();
            }
            else
            {
              v27 = OUTLINED_FUNCTION_9_0();
              OUTLINED_FUNCTION_54_6();
              OUTLINED_FUNCTION_31_0();
              swift_bridgeObjectRelease();
              if ((v27 & 1) == 0)
                goto LABEL_31;
            }
            goto LABEL_28;
          }
        }
        else if (!v21)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_28;
        }
        OUTLINED_FUNCTION_54_6();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_31_0();
        goto LABEL_31;
      }
      OUTLINED_FUNCTION_54_6();
      v24 = OUTLINED_FUNCTION_373();
      sub_248E23594(v24, v25);
      sub_248E23594(v22, v21);
      goto LABEL_31;
    }
LABEL_25:
    sub_248DB8B38(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v1 + 32));
    OUTLINED_FUNCTION_85_3();
    OUTLINED_FUNCTION_84_4();
    OUTLINED_FUNCTION_84_4();
    goto LABEL_26;
  }
  sub_248DB8B38(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_373();
  sub_248DB8CEC();
  OUTLINED_FUNCTION_71_3();
  sub_248DB8CEC();
LABEL_31:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoIndexingEvent.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoIndexingEvent, &qword_2577E7948, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
}

unint64_t sub_248F24FE8()
{
  static ToolKitProtoIndexingEvent.protoMessageName.getter();
  return 0xD000000000000015;
}

void sub_248F2500C()
{
  ToolKitProtoIndexingEvent.decodeMessage<A>(decoder:)();
}

void sub_248F25020()
{
  ToolKitProtoIndexingEvent.traverse<A>(visitor:)();
}

uint64_t sub_248F25034()
{
  sub_248D9D9D8(&qword_2577E7A20, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
  return sub_2490E7B4C();
}

uint64_t sub_248F25088()
{
  sub_248D9D9D8(&qword_2577E5B28, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
  return sub_2490E7C90();
}

uint64_t sub_248F250CC()
{
  sub_248D9D9D8(&qword_2577E5B28, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
  return sub_2490E7C9C();
}

unint64_t static ToolKitProtoIndexingResponse.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(24);
}

uint64_t sub_248F25138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E78B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E78B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FAC00;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "requestId";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "updated";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "skipped";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "failed";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoIndexingResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33E8, (uint64_t)qword_2577E78B0, a1);
}

void ToolKitProtoIndexingResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_36_7();
          break;
        case 2:
          v3 = OUTLINED_FUNCTION_0_9();
          sub_248F2539C(v3, v4);
          break;
        case 3:
          v5 = OUTLINED_FUNCTION_0_9();
          sub_248F25540(v5, v6);
          break;
        case 4:
          v7 = OUTLINED_FUNCTION_0_9();
          sub_248F256E8(v7, v8);
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_26_6();
    }
  }
  OUTLINED_FUNCTION_393();
}

void sub_248F2539C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  int EnumTagSinglePayload;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v15 - v8;
  v10 = sub_2490E7A2C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
  sub_248D9D9D8(&qword_254474F88, v11, MEMORY[0x24BE5B938]);
  sub_2490E7BAC();
  if (v2
    || (sub_248F28914((uint64_t)v9, (uint64_t)v7, &qword_2577E7AA8),
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10),
        sub_248DB939C((uint64_t)v7, &qword_2577E7AA8),
        EnumTagSinglePayload == 1))
  {
    sub_248DB939C((uint64_t)v9, &qword_2577E7AA8);
  }
  else
  {
    if (*(_QWORD *)(a2 + 24) != 2)
      sub_2490E7B7C();
    sub_248DB939C((uint64_t)v9, &qword_2577E7AA8);
    v13 = *(_QWORD *)(a2 + 16);
    v14 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    sub_248E23540(v13, v14);
  }
}

void sub_248F25540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  int EnumTagSinglePayload;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v15 - v8;
  v10 = sub_2490E7A2C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
  sub_248D9D9D8(&qword_254474F88, v11, MEMORY[0x24BE5B938]);
  sub_2490E7BAC();
  if (v2
    || (sub_248F28914((uint64_t)v9, (uint64_t)v7, &qword_2577E7AA8),
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10),
        sub_248DB939C((uint64_t)v7, &qword_2577E7AA8),
        EnumTagSinglePayload == 1))
  {
    sub_248DB939C((uint64_t)v9, &qword_2577E7AA8);
  }
  else
  {
    if (*(_QWORD *)(a2 + 24) != 2)
      sub_2490E7B7C();
    sub_248DB939C((uint64_t)v9, &qword_2577E7AA8);
    v13 = *(_QWORD *)(a2 + 16);
    v14 = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a2 + 16) = xmmword_2490F2C20;
    sub_248E23540(v13, v14);
  }
}

uint64_t sub_248F256E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2490E7C30();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v7)
  {
    if (*(_QWORD *)(a2 + 24) == 2)
    {
      v5 = 2;
    }
    else
    {
      sub_2490E7B7C();
      v5 = *(_QWORD *)(a2 + 24);
    }
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = v7;
    return sub_248E23540(v6, v5);
  }
  return result;
}

void ToolKitProtoIndexingResponse.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_5_16();
  if (!v2 || (OUTLINED_FUNCTION_18_5(), !v0))
  {
    v3 = *(_QWORD *)(v1 + 24);
    if (v3)
    {
      if (v3 == 1)
      {
        v6 = OUTLINED_FUNCTION_12_14();
        sub_248F2591C(v6);
      }
      else
      {
        if (v3 == 2)
        {
LABEL_10:
          type metadata accessor for ToolKitProtoIndexingResponse(0);
          OUTLINED_FUNCTION_17_8();
          goto LABEL_11;
        }
        v4 = OUTLINED_FUNCTION_12_14();
        sub_248F25A08(v4);
      }
    }
    else
    {
      v5 = OUTLINED_FUNCTION_12_14();
      sub_248F25834(v5);
    }
    if (!v0)
      goto LABEL_10;
  }
LABEL_11:
  OUTLINED_FUNCTION_64_2();
}

uint64_t sub_248F25834(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 24))
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_248F2591C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2490E7A2C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    MEMORY[0x2495AC1F8](result);
    sub_248D9D9D8(&qword_254474F88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2490E7CD8();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_248F25A08(uint64_t result)
{
  if (*(_QWORD *)(result + 24) >= 3uLL)
    return sub_2490E7D20();
  __break(1u);
  return result;
}

void static ToolKitProtoIndexingResponse.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  char v19;

  OUTLINED_FUNCTION_7_0();
  v4 = OUTLINED_FUNCTION_15_5();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_215_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_19_9();
  v8 = v8 && v6 == v7;
  if (v8 || (OUTLINED_FUNCTION_9_0() & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(_QWORD *)(v3 + 24);
    v11 = *(_QWORD *)(v2 + 16);
    v12 = *(_QWORD *)(v2 + 24);
    if (v10 == 2)
    {
      if (v12 == 2)
        goto LABEL_27;
      goto LABEL_10;
    }
    if (v12 == 2)
    {
LABEL_10:
      sub_248F280C4(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
      sub_248F280C4(v9, v10);
      v13 = OUTLINED_FUNCTION_114_1();
      sub_248E23540(v13, v14);
      sub_248E23540(v11, v12);
      goto LABEL_28;
    }
    if (v10)
    {
      if (v10 == 1)
      {
        if (v12 == 1)
        {
          sub_248E23550(*(_QWORD *)(v3 + 16), 1uLL);
          v15 = v11;
          v16 = 1;
LABEL_26:
          sub_248E23550(v15, v16);
LABEL_27:
          v18 = type metadata accessor for ToolKitProtoIndexingResponse(0);
          OUTLINED_FUNCTION_43_7(v1, v3 + *(int *)(v18 + 24));
          OUTLINED_FUNCTION_33_7(*(int *)(v18 + 24));
          sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          OUTLINED_FUNCTION_24_8();
          OUTLINED_FUNCTION_51_4(v0);
          OUTLINED_FUNCTION_51_4(v1);
          goto LABEL_28;
        }
      }
      else if (v12 >= 2)
      {
        if (v9 != v11 || v10 != v12)
        {
          v19 = OUTLINED_FUNCTION_9_0();
          OUTLINED_FUNCTION_49_6();
          if ((v19 & 1) == 0)
            goto LABEL_28;
          goto LABEL_27;
        }
        sub_248F280C4(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
        sub_248F280C4(v9, v10);
        sub_248E23550(v9, v10);
        v15 = OUTLINED_FUNCTION_114_1();
        goto LABEL_26;
      }
    }
    else if (!v12)
    {
      sub_248E23550(*(_QWORD *)(v3 + 16), 0);
      v15 = v11;
      v16 = 0;
      goto LABEL_26;
    }
    OUTLINED_FUNCTION_49_6();
  }
LABEL_28:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoIndexingResponse.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoIndexingResponse, &qword_2577E7950, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
}

unint64_t sub_248F25C44()
{
  static ToolKitProtoIndexingResponse.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_248F25C68()
{
  ToolKitProtoIndexingResponse.decodeMessage<A>(decoder:)();
}

void sub_248F25C7C()
{
  ToolKitProtoIndexingResponse.traverse<A>(visitor:)();
}

uint64_t sub_248F25C90()
{
  sub_248D9D9D8(&qword_2577E7A18, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
  return sub_2490E7B4C();
}

uint64_t sub_248F25CE4()
{
  sub_248D9D9D8(&qword_2544776C0, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
  return sub_2490E7C90();
}

uint64_t sub_248F25D28()
{
  sub_248D9D9D8(&qword_2544776C0, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
  return sub_2490E7C9C();
}

unint64_t static ToolKitProtoIndexingLogEntry.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_60_5(24);
}

uint64_t sub_248F25D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = sub_2490E7D74();
  __swift_allocate_value_buffer(v0, qword_2577E78C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E78C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A98);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2490FABF0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "reason";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2490E7D50();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "request";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "policyResolution";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "indexingEvent";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "response";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  return sub_2490E7D5C();
}

uint64_t static ToolKitProtoIndexingLogEntry._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248F1F610(&qword_2577E33F0, (uint64_t)qword_2577E78C8, a1);
}

void ToolKitProtoIndexingLogEntry.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = OUTLINED_FUNCTION_2_15();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_9_11();
          sub_248F26070(v3, v4, v5, v6);
          break;
        case 2:
          OUTLINED_FUNCTION_9_11();
          sub_248F26458(v7, v8, v9, v10);
          break;
        case 3:
          OUTLINED_FUNCTION_9_11();
          sub_248F26844(v11, v12, v13, v14);
          break;
        case 4:
          OUTLINED_FUNCTION_9_11();
          sub_248F26C30(v15, v16, v17, v18);
          break;
        case 5:
          OUTLINED_FUNCTION_9_11();
          sub_248F2701C(v19, v20, v21, v22);
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_26_6();
    }
  }
  OUTLINED_FUNCTION_393();
}

void sub_248F26070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ToolKitProtoIndexingReason(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A70);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_248F28914(a1, (uint64_t)v12, &qword_2544776F0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_248DB939C((uint64_t)v12, &qword_2544776F0);
    v25 = v13;
  }
  else
  {
    sub_248E06294((uint64_t)v12, (uint64_t)v18, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    sub_248E06294((uint64_t)v18, (uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_248DB270C((uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    }
    else
    {
      sub_248DB939C((uint64_t)v24, &qword_2577E7A70);
      sub_248E06294((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitProtoIndexingReason);
      sub_248E06294((uint64_t)v9, (uint64_t)v24, type metadata accessor for ToolKitProtoIndexingReason);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_248D9D9D8(&qword_254477680, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
  sub_2490E7C60();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_248DB939C(v27, &qword_2577E7A70);
    return;
  }
  sub_248F28914((uint64_t)v24, (uint64_t)v22, &qword_2577E7A70);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v24, &qword_2577E7A70);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_248E06294((uint64_t)v22, v32, type metadata accessor for ToolKitProtoIndexingReason);
  if (EnumTagSinglePayload != 1)
    sub_2490E7B7C();
  sub_248DB939C((uint64_t)v24, &qword_2577E7A70);
  v29 = v30;
  sub_248DB939C(v30, &qword_2544776F0);
  sub_248E06294(v28, v29, type metadata accessor for ToolKitProtoIndexingReason);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_248F26458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ToolKitProtoIndexingRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A78);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_248F28914(a1, (uint64_t)v12, &qword_2544776F0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_248DB939C((uint64_t)v12, &qword_2544776F0);
    v25 = v13;
  }
  else
  {
    sub_248E06294((uint64_t)v12, (uint64_t)v18, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    sub_248E06294((uint64_t)v18, (uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_248DB939C((uint64_t)v24, &qword_2577E7A78);
      sub_248E06294((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitProtoIndexingRequest);
      sub_248E06294((uint64_t)v9, (uint64_t)v24, type metadata accessor for ToolKitProtoIndexingRequest);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_248DB270C((uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    }
  }
  v26 = v33;
  sub_248D9D9D8(&qword_2544776A0, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
  sub_2490E7C60();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_248DB939C(v27, &qword_2577E7A78);
    return;
  }
  sub_248F28914((uint64_t)v24, (uint64_t)v22, &qword_2577E7A78);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v24, &qword_2577E7A78);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_248E06294((uint64_t)v22, v32, type metadata accessor for ToolKitProtoIndexingRequest);
  if (EnumTagSinglePayload != 1)
    sub_2490E7B7C();
  sub_248DB939C((uint64_t)v24, &qword_2577E7A78);
  v29 = v30;
  sub_248DB939C(v30, &qword_2544776F0);
  sub_248E06294(v28, v29, type metadata accessor for ToolKitProtoIndexingRequest);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_248F26844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ToolKitProtoIndexingPolicyResolution(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A80);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_248F28914(a1, (uint64_t)v12, &qword_2544776F0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_248DB939C((uint64_t)v12, &qword_2544776F0);
    v25 = v13;
  }
  else
  {
    sub_248E06294((uint64_t)v12, (uint64_t)v18, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    sub_248E06294((uint64_t)v18, (uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_248DB939C((uint64_t)v24, &qword_2577E7A80);
      sub_248E06294((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitProtoIndexingPolicyResolution);
      sub_248E06294((uint64_t)v9, (uint64_t)v24, type metadata accessor for ToolKitProtoIndexingPolicyResolution);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_248DB270C((uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    }
  }
  v26 = v33;
  sub_248D9D9D8(&qword_254477700, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
  sub_2490E7C60();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_248DB939C(v27, &qword_2577E7A80);
    return;
  }
  sub_248F28914((uint64_t)v24, (uint64_t)v22, &qword_2577E7A80);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v24, &qword_2577E7A80);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_248E06294((uint64_t)v22, v32, type metadata accessor for ToolKitProtoIndexingPolicyResolution);
  if (EnumTagSinglePayload != 1)
    sub_2490E7B7C();
  sub_248DB939C((uint64_t)v24, &qword_2577E7A80);
  v29 = v30;
  sub_248DB939C(v30, &qword_2544776F0);
  sub_248E06294(v28, v29, type metadata accessor for ToolKitProtoIndexingPolicyResolution);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_248F26C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ToolKitProtoIndexingEvent(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A88);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_248F28914(a1, (uint64_t)v12, &qword_2544776F0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_248DB939C((uint64_t)v12, &qword_2544776F0);
    v25 = v13;
  }
  else
  {
    sub_248E06294((uint64_t)v12, (uint64_t)v18, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    sub_248E06294((uint64_t)v18, (uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_248DB939C((uint64_t)v24, &qword_2577E7A88);
      sub_248E06294((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitProtoIndexingEvent);
      sub_248E06294((uint64_t)v9, (uint64_t)v24, type metadata accessor for ToolKitProtoIndexingEvent);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_248DB270C((uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    }
  }
  v26 = v33;
  sub_248D9D9D8(&qword_2577E5B28, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
  sub_2490E7C60();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_248DB939C(v27, &qword_2577E7A88);
    return;
  }
  sub_248F28914((uint64_t)v24, (uint64_t)v22, &qword_2577E7A88);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v24, &qword_2577E7A88);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_248E06294((uint64_t)v22, v32, type metadata accessor for ToolKitProtoIndexingEvent);
  if (EnumTagSinglePayload != 1)
    sub_2490E7B7C();
  sub_248DB939C((uint64_t)v24, &qword_2577E7A88);
  v29 = v30;
  sub_248DB939C(v30, &qword_2544776F0);
  sub_248E06294(v28, v29, type metadata accessor for ToolKitProtoIndexingEvent);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_248F2701C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ToolKitProtoIndexingResponse(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7A90);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_248F28914(a1, (uint64_t)v12, &qword_2544776F0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_248DB939C((uint64_t)v12, &qword_2544776F0);
    v25 = v13;
  }
  else
  {
    sub_248E06294((uint64_t)v12, (uint64_t)v18, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    sub_248E06294((uint64_t)v18, (uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_248DB939C((uint64_t)v24, &qword_2577E7A90);
      sub_248E06294((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitProtoIndexingResponse);
      sub_248E06294((uint64_t)v9, (uint64_t)v24, type metadata accessor for ToolKitProtoIndexingResponse);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_248DB270C((uint64_t)v16, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
    }
  }
  v26 = v33;
  sub_248D9D9D8(&qword_2544776C0, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
  sub_2490E7C60();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_248DB939C(v27, &qword_2577E7A90);
    return;
  }
  sub_248F28914((uint64_t)v24, (uint64_t)v22, &qword_2577E7A90);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_248DB939C((uint64_t)v24, &qword_2577E7A90);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_248E06294((uint64_t)v22, v32, type metadata accessor for ToolKitProtoIndexingResponse);
  if (EnumTagSinglePayload != 1)
    sub_2490E7B7C();
  sub_248DB939C((uint64_t)v24, &qword_2577E7A90);
  v29 = v30;
  sub_248DB939C(v30, &qword_2544776F0);
  sub_248E06294(v28, v29, type metadata accessor for ToolKitProtoIndexingResponse);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void ToolKitProtoIndexingLogEntry.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_27_8(v2, v5);
  v3 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  if (__swift_getEnumTagSinglePayload(v0, 1, v3) != 1)
  {
    OUTLINED_FUNCTION_114_1();
    v4 = (char *)&loc_248F2748C + 4 * byte_2490F9ADF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ToolKitProtoIndexingLogEntry(0);
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_34_1();
}

void sub_248F274F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoIndexingReason(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248F28914(a1, (uint64_t)v4, &qword_2544776F0);
  v8 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_2544776F0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoIndexingReason);
      sub_248D9D9D8(&qword_254477680, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
      sub_2490E7D44();
      sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoIndexingReason);
      return;
    }
    sub_248DB270C((uint64_t)v4, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
  }
  __break(1u);
}

void sub_248F2768C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoIndexingRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248F28914(a1, (uint64_t)v4, &qword_2544776F0);
  v8 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_2544776F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoIndexingRequest);
      sub_248D9D9D8(&qword_2544776A0, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
      sub_2490E7D44();
      sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoIndexingRequest);
      return;
    }
    sub_248DB270C((uint64_t)v4, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
  }
  __break(1u);
}

void sub_248F27824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoIndexingPolicyResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248F28914(a1, (uint64_t)v4, &qword_2544776F0);
  v8 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_2544776F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoIndexingPolicyResolution);
      sub_248D9D9D8(&qword_254477700, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
      sub_2490E7D44();
      sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoIndexingPolicyResolution);
      return;
    }
    sub_248DB270C((uint64_t)v4, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
  }
  __break(1u);
}

void sub_248F279BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoIndexingEvent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248F28914(a1, (uint64_t)v4, &qword_2544776F0);
  v8 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_2544776F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoIndexingEvent);
      sub_248D9D9D8(&qword_2577E5B28, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
      sub_2490E7D44();
      sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoIndexingEvent);
      return;
    }
    sub_248DB270C((uint64_t)v4, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
  }
  __break(1u);
}

void sub_248F27B54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544776F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoIndexingResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248F28914(a1, (uint64_t)v4, &qword_2544776F0);
  v8 = type metadata accessor for ToolKitProtoIndexingLogEntryKind(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_248DB939C((uint64_t)v4, &qword_2544776F0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_248E06294((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoIndexingResponse);
      sub_248D9D9D8(&qword_2544776C0, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
      sub_2490E7D44();
      sub_248DB270C((uint64_t)v7, type metadata accessor for ToolKitProtoIndexingResponse);
      return;
    }
    sub_248DB270C((uint64_t)v4, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
  }
  __break(1u);
}

void static ToolKitProtoIndexingLogEntry.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_7_0();
  v5 = v4;
  v41 = OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_14_10(v7, v41);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = OUTLINED_FUNCTION_45_8(v9, v10, v11, v12, v13, v14, v15, v16, v42);
  type metadata accessor for ToolKitProtoIndexingLogEntryKind(v17);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_99();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7958);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_511();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_337();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_175_1();
  v24 = MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_31_8(v24, v25, v26, v27, v28, v29, v30, v31, v43);
  OUTLINED_FUNCTION_42_10(v5, v0);
  v32 = v1 + *(int *)(v19 + 48);
  OUTLINED_FUNCTION_42_10(v3, v1);
  OUTLINED_FUNCTION_42_10(v0, v32);
  v33 = OUTLINED_FUNCTION_8_13(v1);
  if (v36)
  {
    OUTLINED_FUNCTION_243(v0);
    OUTLINED_FUNCTION_243(v3);
    v35 = OUTLINED_FUNCTION_8_13(v32);
    if (v36)
    {
      OUTLINED_FUNCTION_529(v35, &qword_2544776F0);
LABEL_11:
      v40 = type metadata accessor for ToolKitProtoIndexingLogEntry(0);
      OUTLINED_FUNCTION_23_11(v40);
      OUTLINED_FUNCTION_48_6();
      sub_248D9D9D8((unint64_t *)&qword_2577E4388, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_52_7(v1);
      OUTLINED_FUNCTION_52_7(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_61_7(v33, v34, &qword_2544776F0);
  OUTLINED_FUNCTION_8_13(v32);
  if (v36)
  {
    OUTLINED_FUNCTION_243(v0);
    OUTLINED_FUNCTION_243(v3);
    OUTLINED_FUNCTION_167(v37, type metadata accessor for ToolKitProtoIndexingLogEntryKind);
LABEL_9:
    OUTLINED_FUNCTION_529(v35, &qword_2577E7958);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_62_6();
  v38 = OUTLINED_FUNCTION_71_3();
  static ToolKitProtoIndexingLogEntryKind.== infix(_:_:)(v38, v39);
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_35_5(v0);
  OUTLINED_FUNCTION_35_5(v3);
  OUTLINED_FUNCTION_16(v2);
  OUTLINED_FUNCTION_35_5(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  OUTLINED_FUNCTION_3_1();
}

uint64_t ToolKitProtoIndexingLogEntry.hashValue.getter()
{
  return sub_248F1F854(type metadata accessor for ToolKitProtoIndexingLogEntry, &qword_2577E7960, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
}

unint64_t sub_248F27F3C()
{
  static ToolKitProtoIndexingLogEntry.protoMessageName.getter();
  return 0xD000000000000018;
}

void sub_248F27F60()
{
  ToolKitProtoIndexingLogEntry.decodeMessage<A>(decoder:)();
}

void sub_248F27F74()
{
  ToolKitProtoIndexingLogEntry.traverse<A>(visitor:)();
}

uint64_t sub_248F27F88()
{
  sub_248D9D9D8(&qword_2577E7A10, type metadata accessor for ToolKitProtoIndexingLogEntry, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
  return sub_2490E7B4C();
}

uint64_t sub_248F27FDC()
{
  sub_248D9D9D8((unint64_t *)&qword_254476F08, type metadata accessor for ToolKitProtoIndexingLogEntry, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
  return sub_2490E7C90();
}

uint64_t sub_248F28020()
{
  sub_248D9D9D8((unint64_t *)&qword_254476F08, type metadata accessor for ToolKitProtoIndexingLogEntry, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
  return sub_2490E7C9C();
}

uint64_t sub_248F28070()
{
  sub_2490E88F0();
  sub_2490E7F48();
  return sub_2490E8920();
}

uint64_t sub_248F280C4(uint64_t a1, unint64_t a2)
{
  if (a2 != 2)
    return sub_248E11F4C(a1, a2);
  return a1;
}

void sub_248F280D4()
{
  sub_248D9D9D8(&qword_2577E7968, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
}

void sub_248F28100()
{
  sub_248D9D9D8(&qword_2577E7970, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
}

void sub_248F2812C()
{
  sub_248D9D9D8(&qword_2577E78F8, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
}

void sub_248F28158()
{
  sub_248D9D9D8(&qword_2577E7978, type metadata accessor for ToolKitProtoLaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot);
}

void sub_248F28184()
{
  sub_248D9D9D8(&qword_2577E7980, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
}

void sub_248F281B0()
{
  sub_248D9D9D8(&qword_2577E78E0, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
}

void sub_248F281DC()
{
  sub_248D9D9D8(&qword_2577E78E8, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
}

void sub_248F28208()
{
  sub_248D9D9D8(&qword_2577E7988, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.State, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.State);
}

void sub_248F28234()
{
  sub_248D9D9D8(&qword_2577E7990, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
}

void sub_248F28260()
{
  sub_248D9D9D8(&qword_2577E7998, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
}

void sub_248F2828C()
{
  sub_248D9D9D8(&qword_2577E7900, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
}

void sub_248F282B8()
{
  sub_248D9D9D8(&qword_2577E79A0, type metadata accessor for ToolKitProtoLaunchServicesSnapshot.Version, (uint64_t)&protocol conformance descriptor for ToolKitProtoLaunchServicesSnapshot.Version);
}

void sub_248F282E4()
{
  sub_248D9D9D8(&qword_254477620, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
}

void sub_248F28310()
{
  sub_248D9D9D8(&qword_254477618, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
}

void sub_248F2833C()
{
  sub_248D9D9D8(&qword_2577E7910, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
}

void sub_248F28368()
{
  sub_248D9D9D8(&qword_2577E79A8, type metadata accessor for ToolKitProtoChangeset, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset);
}

void sub_248F28394()
{
  sub_248D9D9D8(&qword_2577E79B0, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
}

void sub_248F283C0()
{
  sub_248D9D9D8(&qword_2577E56B0, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
}

void sub_248F283EC()
{
  sub_248D9D9D8(&qword_2577E7918, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
}

void sub_248F28418()
{
  sub_248D9D9D8(&qword_2577E79B8, type metadata accessor for ToolKitProtoChangeset.Provenance, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Provenance);
}

void sub_248F28444()
{
  sub_248D9D9D8(&qword_2577E79C0, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
}

void sub_248F28470()
{
  sub_248D9D9D8(&qword_2577E79C8, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
}

void sub_248F2849C()
{
  sub_248D9D9D8(&qword_2577E7920, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
}

void sub_248F284C8()
{
  sub_248D9D9D8(&qword_2577E79D0, type metadata accessor for ToolKitProtoChangeset.Partial, (uint64_t)&protocol conformance descriptor for ToolKitProtoChangeset.Partial);
}

void sub_248F284F4()
{
  sub_248D9D9D8(&qword_254477688, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
}

void sub_248F28520()
{
  sub_248D9D9D8(&qword_254477680, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
}

void sub_248F2854C()
{
  sub_248D9D9D8(&qword_2577E7930, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
}

void sub_248F28578()
{
  sub_248D9D9D8(&qword_2577E79D8, type metadata accessor for ToolKitProtoIndexingReason, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingReason);
}

void sub_248F285A4()
{
  sub_248D9D9D8(&qword_2544776A8, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
}

void sub_248F285D0()
{
  sub_248D9D9D8(&qword_2544776A0, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
}

void sub_248F285FC()
{
  sub_248D9D9D8(&qword_2577E7938, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
}

void sub_248F28628()
{
  sub_248D9D9D8(&qword_2577E79E0, type metadata accessor for ToolKitProtoIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingRequest);
}

void sub_248F28654()
{
  sub_248D9D9D8(&qword_254477708, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
}

void sub_248F28680()
{
  sub_248D9D9D8(&qword_254477700, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
}

void sub_248F286AC()
{
  sub_248D9D9D8(&qword_2577E7940, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
}

void sub_248F286D8()
{
  sub_248D9D9D8(&qword_2577E79E8, type metadata accessor for ToolKitProtoIndexingPolicyResolution, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingPolicyResolution);
}

void sub_248F28704()
{
  sub_248D9D9D8(&qword_2577E79F0, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
}

void sub_248F28730()
{
  sub_248D9D9D8(&qword_2577E5B28, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
}

void sub_248F2875C()
{
  sub_248D9D9D8(&qword_2577E7948, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
}

void sub_248F28788()
{
  sub_248D9D9D8(&qword_2577E79F8, type metadata accessor for ToolKitProtoIndexingEvent, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingEvent);
}

void sub_248F287B4()
{
  sub_248D9D9D8(&qword_2544776C8, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
}

void sub_248F287E0()
{
  sub_248D9D9D8(&qword_2544776C0, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
}

void sub_248F2880C()
{
  sub_248D9D9D8(&qword_2577E7950, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
}

void sub_248F28838()
{
  sub_248D9D9D8(&qword_2577E7A00, type metadata accessor for ToolKitProtoIndexingResponse, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingResponse);
}

void sub_248F28864()
{
  sub_248D9D9D8(&qword_254476F10, type metadata accessor for ToolKitProtoIndexingLogEntry, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
}

void sub_248F28890()
{
  sub_248D9D9D8((unint64_t *)&qword_254476F08, type metadata accessor for ToolKitProtoIndexingLogEntry, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
}

void sub_248F288BC()
{
  sub_248D9D9D8(&qword_2577E7960, type metadata accessor for ToolKitProtoIndexingLogEntry, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
}

void sub_248F288E8()
{
  sub_248D9D9D8(&qword_2577E7A08, type metadata accessor for ToolKitProtoIndexingLogEntry, (uint64_t)&protocol conformance descriptor for ToolKitProtoIndexingLogEntry);
}

void sub_248F28914(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_201(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_1();
}

uint64_t OUTLINED_FUNCTION_0_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  return sub_2490E7B70();
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_7_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_13(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_9()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void OUTLINED_FUNCTION_14_10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_15_5()
{
  return sub_2490E7ABC();
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return sub_2490E7AA4();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return sub_2490E7D20();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return sub_2490E7AA4();
}

uint64_t OUTLINED_FUNCTION_23_11(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 - 88) + 16))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 120) + *(int *)(a1 + 20), *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  return sub_2490E7F60();
}

uint64_t OUTLINED_FUNCTION_26_6()
{
  return sub_2490E7B70();
}

void OUTLINED_FUNCTION_27_8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;

  sub_248F28914(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_28_8()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  sub_248DB8B38(v4, v3, v0);
  sub_248DB8B38(v2, v1, v5);
  return v2;
}

void OUTLINED_FUNCTION_31_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v12 - 120) = v11;
  sub_248F28914(v11, (uint64_t)&a9 - v9, v10);
}

uint64_t OUTLINED_FUNCTION_33_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v1, v3 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_34_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3 + a1, v1);
}

void OUTLINED_FUNCTION_35_5(uint64_t a1)
{
  uint64_t *v1;

  sub_248DB939C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return sub_2490E7C3C();
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return sub_2490E7AA4();
}

void OUTLINED_FUNCTION_42_10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_248F28914(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_43_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_45_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 112) = (char *)&a9 - v9;
  return 0;
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _QWORD, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 96), *(_QWORD *)(v3 - 104) + *(int *)(v0 + 20), v1);
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_248F280C4(v0, v3);
  sub_248F280C4(v1, v2);
  sub_248E23550(v1, v2);
  return sub_248E23550(v0, v3);
}

uint64_t OUTLINED_FUNCTION_50_7()
{
  return sub_2490E7D08();
}

uint64_t OUTLINED_FUNCTION_51_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_52_7(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_53_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 96) = a8;
  *(_QWORD *)(v9 - 88) = v8;
  *(_QWORD *)(v9 - 72) = a4;
  *(_QWORD *)(v9 - 104) = a3;
  return sub_2490E7A2C();
}

uint64_t OUTLINED_FUNCTION_54_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_248E35210(v3, v0);
  return sub_248E35210(v2, v1);
}

void OUTLINED_FUNCTION_56_5(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  sub_248F28914(v3, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
}

void OUTLINED_FUNCTION_57_5(uint64_t a1)
{
  uint64_t *v1;

  sub_248DB939C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_58_7()
{
  return sub_2490E7CD8();
}

unint64_t OUTLINED_FUNCTION_60_5(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_61_7(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_248F28914(v3, v4, a3);
}

void OUTLINED_FUNCTION_62_6()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_248E06294(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64_6()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_65_4()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_248DB270C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_66_6()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_67_5()
{
  return sub_2490E802C();
}

void OUTLINED_FUNCTION_68_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  __swift_getEnumTagSinglePayload(v1, 2, a1);
  sub_248DB270C(v1, v2);
}

void OUTLINED_FUNCTION_69_4(uint64_t a1)
{
  uint64_t *v1;

  sub_248DB939C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_78_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_79_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_2(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 2, a1);
}

void OUTLINED_FUNCTION_83_1(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_248F28914(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_84_4()
{
  return sub_248DB8CEC();
}

uint64_t OUTLINED_FUNCTION_85_3()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_248DB8B38(v1, v0, v2);
}

void OUTLINED_FUNCTION_87_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_248F28914(a1, a2, v2);
}

void OUTLINED_FUNCTION_88_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_248DB270C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_90_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, 1, a3);
}

void OUTLINED_FUNCTION_92_3(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_248F28914(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  return sub_2490E7C0C();
}

void OUTLINED_FUNCTION_97_2()
{
  uint64_t v0;
  uint64_t v1;

  sub_248DA0BF8(*(_QWORD **)(v1 + 16), *(_QWORD **)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_98_3()
{
  return type metadata accessor for ToolKitProtoChangeset(0);
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void OUTLINED_FUNCTION_105_4()
{
  uint64_t v0;
  uint64_t *v1;

  sub_248DB939C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_106_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_107_2()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void SystemTypeProtocol.init(protobuf:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  _QWORD v29[9];
  uint64_t v30;

  v29[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E4B58);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_64();
  v29[4] = v5;
  OUTLINED_FUNCTION_231();
  v30 = sub_2490E7DA4();
  v29[8] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_178();
  v29[7] = v6 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v29[3] = (char *)v29 - v9;
  v10 = OUTLINED_FUNCTION_231();
  type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable(v10);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_64();
  v29[2] = v12;
  v13 = OUTLINED_FUNCTION_231();
  type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity(v13);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_17_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_17_0();
  type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_32();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475B60);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v17);
  v18 = OUTLINED_FUNCTION_4_18();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_178();
  v22 = v20 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v29 - v24;
  sub_248DB8E50(a1, v2, &qword_254475B60);
  if (__swift_getEnumTagSinglePayload(v2, 1, v18) != 1)
  {
    sub_248E06294(v2, (uint64_t)v25, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
    sub_248F29694((uint64_t)v25, v22);
    v28 = (char *)&loc_248F291C4 + 4 * byte_2490FAC10[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_248DB939C(v2, &qword_254475B60);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7AC0);
  sub_248F29650();
  swift_allocError();
  *v27 = v18;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v27, *MEMORY[0x24BEC1230], v26);
  swift_willThrow();
  sub_248DB270C(a1, type metadata accessor for ToolKitProtoSystemTypeProtocol);
  OUTLINED_FUNCTION_1_1();
}

unint64_t sub_248F29650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2577E7AC8;
  if (!qword_2577E7AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2577E7AC0);
    result = MEMORY[0x2495AD758](MEMORY[0x24BEC1240], v1);
    atomic_store(result, (unint64_t *)&qword_2577E7AC8);
  }
  return result;
}

uint64_t sub_248F29694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolKitProtoSystemTypeProtocolKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void SystemTypeProtocol.protobuf(useCase:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = a1;
  v11[3] = type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_64();
  v11[4] = v3;
  v4 = OUTLINED_FUNCTION_231();
  v11[2] = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(v4);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_17_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475AF0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_32();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254475BC0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_18();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_178();
  MEMORY[0x24BDAC7A8](v9);
  v11[5] = (char *)v11 - v10;
  __asm { BR              X10 }
}

void sub_248F297F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v10 - 144) = a1;
  *(_QWORD *)(v10 - 136) = a2;
  type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  OUTLINED_FUNCTION_87();
  _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
  *v4 = v5;
  v4[1] = v9;
  v4[2] = v8;
  OUTLINED_FUNCTION_24_1((uint64_t)v4, 0);
  v11 = (uint64_t)v6 + *(int *)(*(_QWORD *)(v10 - 128) + 20);
  OUTLINED_FUNCTION_24_1(v11, 1);
  _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
  *v6 = *(_QWORD *)(v10 - 144);
  v6[1] = v3;
  sub_248DF772C((uint64_t)v4, v11, &qword_254475AF0);
  sub_248E06294((uint64_t)v6, v2, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  OUTLINED_FUNCTION_2_3(v2, 0);
  v12 = *(_QWORD *)(v10 - 112);
  OUTLINED_FUNCTION_2_3(v12, 1);
  _s7ToolKit0aB19ProtoTypeDefinitionVACycfC_0();
  sub_248DF772C(v2, v12, &qword_254475BC0);
  sub_248E06294(v12, v7, type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
  v13 = swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_15_6(v13, v14, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
  v15 = type metadata accessor for ToolKitProtoSystemTypeProtocol(0);
  MEMORY[0x24BDAC7A8](v15);
  sub_248F29BE4();
  v16 = sub_2490E7CA8();
  OUTLINED_FUNCTION_476(v16, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
  OUTLINED_FUNCTION_1_1();
}

uint64_t sub_248F29B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_248DB939C(a1, &qword_254475B60);
  sub_248F29694(a2, a1);
  v4 = type metadata accessor for ToolKitProtoSystemTypeProtocolKind(0);
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v4);
}

void sub_248F29BA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  SystemTypeProtocol.init(protobuf:)(a1, a2);
}

void sub_248F29BB8(uint64_t a1@<X8>)
{
  SystemTypeProtocol.protobuf(useCase:)(a1);
}

uint64_t sub_248F29BCC(uint64_t a1)
{
  uint64_t v1;

  return sub_248F29B40(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_248F29BE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254475760;
  if (!qword_254475760)
  {
    v1 = type metadata accessor for ToolKitProtoSystemTypeProtocol(255);
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol, v1);
    atomic_store(result, (unint64_t *)&qword_254475760);
  }
  return result;
}

double OUTLINED_FUNCTION_0_10()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return type metadata accessor for ToolKitProtoSystemTypeProtocolKind(0);
}

double OUTLINED_FUNCTION_10_10()
{
  return 0.0;
}

void OUTLINED_FUNCTION_15_6(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_248E06294(v3, *(_QWORD *)(v4 - 104), a3);
}

uint64_t OUTLINED_FUNCTION_16_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_248DB0074(a1, a2, 1, v2);
}

uint64_t sub_248F29C84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v19 = MEMORY[0x24BEE4AF8];
  sub_248DBC4DC();
  v2 = v19;
  result = sub_248F83010(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
      goto LABEL_14;
    v18 = v9;
    ParameterRelationshipDefinition.Relation.debugDescription.getter();
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD *)(v19 + 16);
    if (v14 >= *(_QWORD *)(v19 + 24) >> 1)
      sub_248DBC4DC();
    *(_QWORD *)(v19 + 16) = v14 + 1;
    v15 = v19 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v13;
    result = sub_248E04598(v5, v7, v18 & 1, a1);
    v5 = result;
    v7 = v16;
    v9 = v17 & 1;
    if (!--v1)
    {
      sub_248DEF414(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_248F29E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_248DBC4DC();
    v2 = v11;
    v4 = a1 + 48;
    do
    {
      v5 = ToolInvocationSignature.debugDescription.getter();
      v7 = v6;
      v8 = *(_QWORD *)(v11 + 16);
      if (v8 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_248DBC4DC();
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_248F29F04()
{
  uint64_t v0;

  v0 = sub_2490E7E64();
  __swift_allocate_value_buffer(v0, qword_2577E7AD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2577E7AD0);
  return sub_2490E7E58();
}

uint64_t ToolSummaryComponent.hash(into:)()
{
  sub_2490E88FC();
  return sub_2490E8014();
}

uint64_t static ToolSummaryComponent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) != 0)
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        v7 = sub_2490E883C();
        goto LABEL_17;
      }
LABEL_16:
      v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5)
      goto LABEL_15;
    goto LABEL_16;
  }
  v7 = 0;
LABEL_17:
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_31();
  sub_248DB8CEC();
  sub_248DB8CEC();
  return v7 & 1;
}

void ToolSummaryComponent.hashValue.getter()
{
  OUTLINED_FUNCTION_44();
  sub_2490E88FC();
  sub_2490E8014();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_413();
}

uint64_t sub_248F2A0FC()
{
  sub_2490E88F0();
  sub_2490E88FC();
  sub_2490E8014();
  return sub_2490E8920();
}

uint64_t ToolSummaryString.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  result = sub_2490E88FC();
  if (v2)
  {
    OUTLINED_FUNCTION_124_0();
    v4 = v1 + 48;
    do
    {
      v4 += 24;
      sub_2490E88FC();
      swift_bridgeObjectRetain();
      sub_2490E8014();
      sub_248DB8CEC();
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static ToolSummaryString.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_248DA54AC(*a1, *a2);
}

uint64_t ToolSummaryString.hashValue.getter()
{
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_124_0();
  sub_248DB421C();
  OUTLINED_FUNCTION_31_0();
  return OUTLINED_FUNCTION_62();
}

uint64_t sub_248F2A268()
{
  sub_2490E88F0();
  swift_bridgeObjectRetain();
  sub_248DB421C();
  swift_bridgeObjectRelease();
  return sub_2490E8920();
}

void ToolInvocationSignature.visibleParameterKeys.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_1();
}

uint64_t (*ToolInvocationSignature.visibleParameterKeys.modify())()
{
  return nullsub_1;
}

uint64_t ToolInvocationSignature.invisibleParameterKeys.getter()
{
  return swift_bridgeObjectRetain();
}

void ToolInvocationSignature.invisibleParameterKeys.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_1();
}

uint64_t (*ToolInvocationSignature.invisibleParameterKeys.modify())()
{
  return nullsub_1;
}

uint64_t ToolInvocationSignature.valueConstraints.getter()
{
  return swift_bridgeObjectRetain();
}

void ToolInvocationSignature.valueConstraints.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_1();
}

uint64_t (*ToolInvocationSignature.valueConstraints.modify())()
{
  return nullsub_1;
}

uint64_t ToolInvocationSignature.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  OUTLINED_FUNCTION_76();
  sub_248DEB4B8(a1, v3);
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_87();
  sub_248DEB4B8(a1, v4);
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_52();
  sub_248F0F8BC();
  return swift_bridgeObjectRelease();
}

void static ToolInvocationSignature.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = a1[1];
  v3 = a2[1];
  sub_248DD034C(*a1, *a2);
  if ((v4 & 1) != 0)
  {
    sub_248DD034C(v2, v3);
    if ((v5 & 1) != 0)
      sub_24903DC48();
  }
}

void ToolInvocationSignature.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[72];

  v1 = *v0;
  v2 = v0[1];
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_124_0();
  sub_248DEB4B8((uint64_t)v3, v1);
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_76();
  sub_248DEB4B8((uint64_t)v3, v2);
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_52();
  sub_248F0F8BC();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_413();
}

uint64_t sub_248F2A4B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_2490E88F0();
  swift_bridgeObjectRetain();
  sub_248DEB4B8((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_248DEB4B8((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_248F0F8BC();
  swift_bridgeObjectRelease();
  return sub_2490E8920();
}

uint64_t ToolInvocationSignature.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;

  v1 = *v0;
  v2 = v0[2];
  OUTLINED_FUNCTION_203();
  sub_248DFE964(v1);
  v4 = v3;
  OUTLINED_FUNCTION_31_0();
  v22 = v4;
  sub_248F2CF64(&v22);
  OUTLINED_FUNCTION_31_0();
  v5 = v22;
  v6 = *(_QWORD *)(v22 + 16);
  if (v6)
  {
    swift_retain();
    v7 = (unint64_t *)(v5 + 40);
    v8 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(v2 + 16))
      {
        v9 = *(v7 - 1);
        v10 = *v7;
        OUTLINED_FUNCTION_70_2();
        v11 = sub_248DFDC18();
        if ((v12 & 1) != 0 && (v13 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v11), *(_QWORD *)(v13 + 16)))
        {
          v22 = v9;
          v23 = v10;
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_31_9();
          sub_248F29C84(v13);
          OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_129();
          sub_248E211A0((unint64_t *)&qword_25447A670, &qword_25447A658, MEMORY[0x24BEE12B0]);
          sub_2490E7F54();
          swift_bridgeObjectRelease();
          sub_2490E802C();
          OUTLINED_FUNCTION_105();
          v14 = v22;
          v15 = v23;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_19_10();
            sub_248DAFCC4();
            v8 = v18;
          }
          v16 = *(_QWORD *)(v8 + 16);
          if (v16 >= *(_QWORD *)(v8 + 24) >> 1)
          {
            sub_248DAFCC4();
            v8 = v19;
          }
          *(_QWORD *)(v8 + 16) = v16 + 1;
          v17 = v8 + 16 * v16;
          *(_QWORD *)(v17 + 32) = v14;
          *(_QWORD *)(v17 + 40) = v15;
        }
        else
        {
          OUTLINED_FUNCTION_9();
        }
      }
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_release();
  }
  v22 = 0x2867697369;
  v23 = 0xE500000000000000;
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_30_5((unint64_t *)&qword_25447A670, v20, MEMORY[0x24BEE12B0]);
  OUTLINED_FUNCTION_28_9();
  swift_release();
  sub_2490E802C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_31_0();
  sub_2490E802C();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_31_9();
  return v22;
}

uint64_t sub_248F2A814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t i;
  unsigned __int8 *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  uint64_t v88;
  os_log_type_t v89;
  uint64_t v90;
  __int128 v91;
  uint8_t *v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  _BYTE v97[24];
  __int128 v98;
  uint64_t v99;
  uint64_t v100;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E43C8);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2490EC6A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B00);
  v3 = MEMORY[0x24BEE4AF8];
  v4 = sub_2490E7EF4();
  v5 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v2 + 32) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 48) = v4;
  v100 = v2;
  v75 = *(_QWORD *)(a1 + 16);
  if (v75)
  {
    OUTLINED_FUNCTION_124_0();
    for (i = 0; i != v75; ++i)
    {
      v82 = *(_QWORD *)(v2 + 16);
      if (v82)
      {
        v6 = (uint64_t *)(a1 + 32 + 104 * i);
        v7 = v6[1];
        v84 = *v6;
        v8 = v6[8];
        v76 = v6[9];
        v9 = v6[10];
        v80 = v2 + 32;
        v81 = *(_QWORD *)(v8 + 16);
        swift_retain();
        swift_bridgeObjectRetain();
        v85 = v7;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_70_2();
        OUTLINED_FUNCTION_124_0();
        v74 = v9;
        sub_248E06234(v76, v9);
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_52();
        v10 = 0;
        v78 = (unsigned __int8 *)(v8 + 56);
        v86 = MEMORY[0x24BEE4AF8];
        v79 = v2;
        while (v10 < *(_QWORD *)(v2 + 16))
        {
          v83 = v10;
          v11 = (uint64_t *)(v80 + 24 * v10);
          v12 = *v11;
          v13 = v11[1];
          v14 = v11[2];
          *(_QWORD *)&v98 = *v11;
          *((_QWORD *)&v98 + 1) = v13;
          v99 = v14;
          OUTLINED_FUNCTION_203();
          OUTLINED_FUNCTION_203();
          OUTLINED_FUNCTION_203();
          OUTLINED_FUNCTION_124_0();
          sub_248DDD558(v97, v84, v85);
          swift_bridgeObjectRelease();
          if (v81)
          {
            swift_bridgeObjectRetain();
            v88 = v13;
            v90 = v12;
            v16 = *(_QWORD *)(v8 + 32);
            v15 = *((_QWORD *)v78 - 2);
            v17 = *((_QWORD *)v78 - 1);
            v18 = *v78;
            OUTLINED_FUNCTION_70_2();
            OUTLINED_FUNCTION_8_14();
            OUTLINED_FUNCTION_70_2();
            sub_248DDD558(v97, v16, v15);
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_70_2();
            sub_2490D4D74(v16, v15);
            OUTLINED_FUNCTION_9();
            OUTLINED_FUNCTION_4();
            OUTLINED_FUNCTION_70_2();
            OUTLINED_FUNCTION_8_14();
            OUTLINED_FUNCTION_17_9(0);
            v19 = v99;
            swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v97 = v19;
            v20 = OUTLINED_FUNCTION_7_15();
            if (!__OFADD__(*(_QWORD *)(v19 + 16), (v21 & 1) == 0))
            {
              v22 = v20;
              v23 = v21;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B08);
              v24 = sub_2490E8620();
              v25 = *(_QWORD *)v97;
              if ((v24 & 1) != 0)
              {
                v26 = OUTLINED_FUNCTION_7_15();
                if ((v23 & 1) != (v27 & 1))
                {
                  sub_2490E889C();
                  __break(1u);
                  JUMPOUT(0x248F2B4A8);
                }
                v22 = v26;
              }
              v99 = v25;
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_52();
              if ((v23 & 1) == 0)
              {
                sub_248F68C5C(v22, v16, v15, MEMORY[0x24BEE4B08], v25);
                OUTLINED_FUNCTION_70_2();
              }
              OUTLINED_FUNCTION_4();
              sub_248DDD698((uint64_t)v97, v17, v18);
              sub_248DB8C50(*(uint64_t *)v97, v97[8]);
              OUTLINED_FUNCTION_9();
              *(_QWORD *)v97 = v90;
              *(_QWORD *)&v97[8] = v88;
              *(_QWORD *)&v97[16] = v14;
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_52();
              OUTLINED_FUNCTION_87();
              OUTLINED_FUNCTION_87();
              sub_248DDD558(&v95, v84, v85);
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_87();
              sub_2490D4D74(v84, v85);
              OUTLINED_FUNCTION_37();
              OUTLINED_FUNCTION_4();
              __asm { BR              X8 }
            }
            __break(1u);
            JUMPOUT(0x248F2B1A8);
          }
          OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_175();
          swift_bridgeObjectRelease();
          v95 = v98;
          v96 = v99;
          sub_248F2B4D4((uint64_t *)&v95, v97);
          OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_4();
          OUTLINED_FUNCTION_31_0();
          v28 = *(_QWORD *)v97;
          if (*(_QWORD *)v97)
          {
            v93 = *(_OWORD *)&v97[8];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_19_10();
              sub_248DB020C();
              v86 = v32;
            }
            v30 = *(_QWORD *)(v86 + 16);
            v29 = *(_QWORD *)(v86 + 24);
            if (v30 >= v29 >> 1)
            {
              OUTLINED_FUNCTION_26_7(v29);
              sub_248DB020C();
              v86 = v33;
            }
            *(_QWORD *)(v86 + 16) = v30 + 1;
            v31 = v86 + 24 * v30;
            *(_QWORD *)(v31 + 32) = v28;
            *(_OWORD *)(v31 + 40) = v93;
          }
          v10 = v83 + 1;
          v2 = v79;
          if (v83 + 1 == v82)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4();
            sub_248E06264(v76, v74);
            swift_bridgeObjectRelease();
            v2 = v86;
            goto LABEL_23;
          }
        }
        __break(1u);
        goto LABEL_48;
      }
      v2 = MEMORY[0x24BEE4AF8];
LABEL_23:
      swift_bridgeObjectRelease();
      v100 = v2;
    }
    swift_bridgeObjectRelease();
    v34 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)&v93 = 0;
    if (v34)
    {
      v3 = MEMORY[0x24BEE4AF8];
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_4();
    v36 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v34 = 1;
    *(_QWORD *)&v93 = 0;
LABEL_27:
    *(_QWORD *)&v95 = v3;
    OUTLINED_FUNCTION_52();
    v35 = v2;
    sub_248DBC8C4();
    v36 = v95;
    v37 = (_QWORD *)(v35 + 48);
    do
    {
      v38 = *v37;
      *(_OWORD *)v97 = *((_OWORD *)v37 - 1);
      *(_QWORD *)&v97[16] = v38;
      sub_248F2C2EC((uint64_t *)v97, &v98);
      v39 = v98;
      v40 = v99;
      *(_QWORD *)&v95 = v36;
      v41 = *(_QWORD *)(v36 + 16);
      if (v41 >= *(_QWORD *)(v36 + 24) >> 1)
      {
        v91 = v98;
        sub_248DBC8C4();
        v39 = v91;
        v36 = v95;
      }
      *(_QWORD *)(v36 + 16) = v41 + 1;
      v42 = v36 + 24 * v41;
      *(_OWORD *)(v42 + 32) = v39;
      *(_QWORD *)(v42 + 48) = v40;
      v37 += 3;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease_n();
  }
  v100 = v36;
  if (qword_2577E33F8 != -1)
LABEL_48:
    swift_once();
  v43 = sub_2490E7E64();
  __swift_project_value_buffer(v43, (uint64_t)qword_2577E7AD0);
  v44 = sub_2490E7E4C();
  v45 = sub_2490E82C0();
  if (os_log_type_enabled(v44, v45))
  {
    v89 = v45;
    v46 = (uint8_t *)OUTLINED_FUNCTION_11();
    *(_QWORD *)&v95 = OUTLINED_FUNCTION_11();
    v92 = v46;
    *(_DWORD *)v46 = 136315138;
    swift_beginAccess();
    v47 = v100;
    v48 = *(_QWORD *)(v100 + 16);
    v49 = MEMORY[0x24BEE4AF8];
    if (v48)
    {
      v87 = v44;
      v94 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_70_2();
      sub_248DBC4DC();
      v49 = v94;
      v50 = (_QWORD *)(v47 + 48);
      do
      {
        v51 = *v50;
        v98 = *((_OWORD *)v50 - 1);
        v99 = v51;
        v52 = ToolInvocationSignature.debugDescription.getter();
        v54 = v53;
        v55 = *(_QWORD *)(v94 + 16);
        if (v55 >= *(_QWORD *)(v94 + 24) >> 1)
          sub_248DBC4DC();
        *(_QWORD *)(v94 + 16) = v55 + 1;
        v56 = v94 + 16 * v55;
        *(_QWORD *)(v56 + 32) = v52;
        *(_QWORD *)(v56 + 40) = v54;
        v50 += 3;
        --v48;
      }
      while (v48);
      OUTLINED_FUNCTION_9();
      v44 = v87;
    }
    *(_QWORD *)&v98 = v49;
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_30_5((unint64_t *)&qword_25447A670, v57, MEMORY[0x24BEE12B0]);
    v58 = sub_2490E7F54();
    v60 = v59;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v98 = sub_2490BDDBC(v58, v60, (uint64_t *)&v95);
    sub_2490E8440();
    OUTLINED_FUNCTION_176();
    _os_log_impl(&dword_248D9A000, v44, v89, "initial signatures: %s", v92, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4_3();
  }

  swift_beginAccess();
  v61 = OUTLINED_FUNCTION_124_0();
  v62 = sub_248F2C538(v61);
  OUTLINED_FUNCTION_31_0();
  v100 = v62;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_203();
  v63 = sub_2490E7E4C();
  v64 = sub_2490E82C0();
  if (os_log_type_enabled(v63, v64))
  {
    v66 = (uint8_t *)OUTLINED_FUNCTION_11();
    *(_QWORD *)&v95 = OUTLINED_FUNCTION_11();
    *(_DWORD *)v66 = 136315138;
    v67 = swift_bridgeObjectRetain();
    sub_248F29E14(v67);
    OUTLINED_FUNCTION_175();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_30_5((unint64_t *)&qword_25447A670, v68, MEMORY[0x24BEE12B0]);
    v69 = sub_2490E7F54();
    v71 = v70;
    OUTLINED_FUNCTION_25();
    sub_2490BDDBC(v69, v71, (uint64_t *)&v95);
    sub_2490E8440();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_105();
    _os_log_impl(&dword_248D9A000, v63, v64, "merged signatures: %s", v66, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4_3();
  }

  OUTLINED_FUNCTION_24_9();
  v72 = v100;
  OUTLINED_FUNCTION_17_9(0);
  OUTLINED_FUNCTION_17_9(v93);
  return v72;
}

void sub_248F2B4C4(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4B08];
}

void sub_248F2B4D4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i;
  uint64_t v52;
  char v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t isStackAllocationSafe;
  unint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  int64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  unint64_t v79;
  char v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int64_t v90;
  int64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  _BOOL4 v104;
  _QWORD *v105;
  uint8_t *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  uint64_t v123;
  int64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned __int8 v135;
  uint64_t v136;

  v118 = a2;
  v136 = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *(_QWORD *)(v4 + 64);
  v121 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & v5;
  v122 = (unint64_t)(v6 + 63) >> 6;
  v120 = v2;
  swift_bridgeObjectRetain();
  v119 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v9 = 0;
  v123 = v4;
  if (!v8)
    goto LABEL_6;
LABEL_5:
  v10 = __clz(__rbit64(v8));
  v11 = (v8 - 1) & v8;
  v12 = v10 | (v9 << 6);
  while (2)
  {
    v16 = *(_QWORD *)(v123 + 56);
    v17 = (uint64_t *)(*(_QWORD *)(v123 + 48) + 16 * v12);
    v18 = *v17;
    v127 = v17[1];
    v128 = v18;
    v19 = *(_QWORD *)(v16 + 8 * v12);
    v133 = v19;
    v20 = *(_QWORD *)(v19 + 16);
    v126 = v11;
    if (v20
      && (sub_2490E88F0(),
          sub_2490E88FC(),
          v21 = sub_2490E8920(),
          v22 = -1 << *(_BYTE *)(v19 + 32),
          v23 = v21 & ~v22,
          v24 = v19 + 56,
          ((*(_QWORD *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0))
    {
      v25 = ~v22;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      while (1)
      {
        v26 = *(_QWORD *)(v19 + 48) + 16 * v23;
        v27 = *(_QWORD *)v26;
        v28 = *(unsigned __int8 *)(v26 + 8);
        v29 = *(_QWORD *)v26 | v28 ^ 0xC0;
        if (v28 >= 0xC0 && v29 != 0)
          break;
        sub_248DB8C3C(v27, v28);
        sub_248DB8C50(v27, v28);
        sub_248DB8C50(1, 0xC0u);
        v23 = (v23 + 1) & v25;
        if (((*(_QWORD *)(v24 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          goto LABEL_28;
      }
      sub_248DB8C50(v27, v28);
      sub_248DB8C50(1, 0xC0u);
      v87 = 1 << *(_BYTE *)(v19 + 32);
      if (v87 < 64)
        v88 = ~(-1 << v87);
      else
        v88 = -1;
      v89 = v88 & *(_QWORD *)(v19 + 56);
      v90 = (unint64_t)(v87 + 63) >> 6;
      swift_bridgeObjectRetain();
      v91 = 0;
      if (v89)
      {
LABEL_103:
        v92 = __clz(__rbit64(v89));
        v89 &= v89 - 1;
        v93 = v92 | (v91 << 6);
        goto LABEL_119;
      }
      while (1)
      {
        v13 = __OFADD__(v91++, 1);
        if (v13)
          goto LABEL_149;
        if (v91 >= v90)
          break;
        v94 = *(_QWORD *)(v24 + 8 * v91);
        if (!v94)
        {
          v95 = v91 + 1;
          if (v91 + 1 >= v90)
            break;
          v94 = *(_QWORD *)(v24 + 8 * v95);
          if (!v94)
          {
            v95 = v91 + 2;
            if (v91 + 2 >= v90)
              break;
            v94 = *(_QWORD *)(v24 + 8 * v95);
            if (!v94)
            {
              v95 = v91 + 3;
              if (v91 + 3 >= v90)
                break;
              v94 = *(_QWORD *)(v24 + 8 * v95);
              if (!v94)
              {
                v95 = v91 + 4;
                if (v91 + 4 >= v90)
                  break;
                v94 = *(_QWORD *)(v24 + 8 * v95);
                if (!v94)
                {
                  v95 = v91 + 5;
                  if (v91 + 5 >= v90)
                    break;
                  v94 = *(_QWORD *)(v24 + 8 * v95);
                  if (!v94)
                  {
                    while (1)
                    {
                      v91 = v95 + 1;
                      if (__OFADD__(v95, 1))
                      {
                        __break(1u);
LABEL_155:
                        swift_once();
LABEL_140:
                        v109 = sub_2490E7E64();
                        __swift_project_value_buffer(v109, (uint64_t)qword_2577E7AD0);
                        swift_bridgeObjectRetain();
                        v110 = sub_2490E7E4C();
                        v111 = sub_2490E82C0();
                        if (os_log_type_enabled(v110, v111))
                        {
                          v112 = (uint8_t *)swift_slowAlloc();
                          v113 = swift_slowAlloc();
                          v134 = v113;
                          *(_DWORD *)v112 = 136315138;
                          sub_248F2E3E4();
                          swift_bridgeObjectRetain();
                          v114 = sub_2490E8218();
                          v116 = v115;
                          swift_bridgeObjectRelease();
                          v130 = sub_2490BDDBC(v114, v116, &v134);
                          sub_2490E8440();
                          swift_bridgeObjectRelease_n();
                          swift_bridgeObjectRelease();
                          _os_log_impl(&dword_248D9A000, v110, v111, "Signature invalid: equality check constraints in conflict: %s", v112, 0xCu);
                          swift_arrayDestroy();
                          MEMORY[0x2495AD83C](v113, -1, -1);
                          MEMORY[0x2495AD83C](v112, -1, -1);
                          swift_bridgeObjectRelease();
                          swift_release();
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          swift_release();
                          swift_bridgeObjectRelease_n();
                        }

                        v117 = v118;
                        *v118 = 0;
                        v117[1] = 0;
                        v117[2] = 0;
                        return;
                      }
                      if (v91 >= v90)
                        goto LABEL_133;
                      v94 = *(_QWORD *)(v24 + 8 * v91);
                      ++v95;
                      if (v94)
                        goto LABEL_118;
                    }
                  }
                }
              }
            }
          }
          v91 = v95;
        }
LABEL_118:
        v89 = (v94 - 1) & v94;
        v93 = __clz(__rbit64(v94)) + (v91 << 6);
LABEL_119:
        v96 = *(_QWORD *)(v19 + 48) + 16 * v93;
        v97 = *(_QWORD *)v96;
        v98 = *(unsigned __int8 *)(v96 + 8);
        v99 = *(_QWORD *)v96 | v98 ^ 0xC0;
        if (v98 < 0xC0 || v99 == 0)
        {
          sub_248DB8C3C(v97, v98);
          sub_248DB8C50(v97, v98);
          sub_248DB8C50(1, 0xC0u);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          if (qword_2577E33F8 != -1)
            goto LABEL_153;
          goto LABEL_135;
        }
        sub_248DB8C50(v97, v98);
        sub_248DB8C50(1, 0xC0u);
        if (v89)
          goto LABEL_103;
      }
LABEL_133:
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
    }
LABEL_28:
    v124 = v9;
    v125 = v4;
    v132 = MEMORY[0x24BEE4B08];
    v31 = v19 + 56;
    v32 = 1 << *(_BYTE *)(v19 + 32);
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v34 = v33 & *(_QWORD *)(v19 + 56);
    v35 = (unint64_t)(v32 + 63) >> 6;
    swift_bridgeObjectRetain();
    v36 = 0;
    v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (v34)
    {
      v38 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v39 = v38 | (v36 << 6);
LABEL_45:
      v42 = *(_QWORD *)(v19 + 48) + 16 * v39;
      v43 = *(_QWORD *)v42;
      v44 = *(unsigned __int8 *)(v42 + 8);
      if (v44 <= 0x1F)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_248DB0178();
          v37 = v47;
        }
        v46 = v37[2];
        if (v46 >= v37[3] >> 1)
        {
          sub_248DB0178();
          v37 = v48;
        }
        v37[2] = v46 + 1;
        v37[v46 + 4] = v43;
      }
      else if ((v44 & 0xE0) == 0x20)
      {
        v45 = swift_bridgeObjectRetain();
        sub_248F2CC6C(v45);
      }
    }
    v13 = __OFADD__(v36++, 1);
    if (v13)
    {
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    if (v36 >= v35)
      goto LABEL_57;
    v40 = *(_QWORD *)(v31 + 8 * v36);
    if (v40)
    {
LABEL_44:
      v34 = (v40 - 1) & v40;
      v39 = __clz(__rbit64(v40)) + (v36 << 6);
      goto LABEL_45;
    }
    v41 = v36 + 1;
    if (v36 + 1 >= v35)
      goto LABEL_57;
    v40 = *(_QWORD *)(v31 + 8 * v41);
    if (v40)
      goto LABEL_43;
    v41 = v36 + 2;
    if (v36 + 2 >= v35)
      goto LABEL_57;
    v40 = *(_QWORD *)(v31 + 8 * v41);
    if (v40)
      goto LABEL_43;
    v41 = v36 + 3;
    if (v36 + 3 >= v35)
    {
LABEL_57:
      swift_release();
      v49 = v37[2];
      v129 = v37;
      if (v49)
      {
        v50 = v37[4];
        v131 = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        for (i = 0; i != v49; ++i)
        {
          v52 = v129[i + 4];
          v53 = *(_BYTE *)(v50 + 32);
          v54 = v53 & 0x3F;
          v55 = (unint64_t)((1 << v53) + 63) >> 6;
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v54 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x24BDAC7A8](isStackAllocationSafe);
            v57 = (unint64_t *)((char *)&v118 - ((8 * v55 + 15) & 0x3FFFFFFFFFFFFFF0));
            sub_248DE1780(0, v55, v57);
            sub_248F2DC70(v57, v55, v50, v52);
            v59 = v58;
            swift_bridgeObjectRelease();
            v50 = v59;
          }
          else
          {
            v60 = (unint64_t *)swift_slowAlloc();
            sub_248DE1780(0, v55, v60);
            sub_248F2DC70(v60, v55, v50, v52);
            v62 = v61;
            swift_bridgeObjectRelease();
            MEMORY[0x2495AD83C](v60, -1, -1);
            v50 = v62;
          }
          swift_bridgeObjectRelease();
          v131 = v50;
        }
        swift_bridgeObjectRelease();
        v63 = v132 + 56;
        v64 = 1 << *(_BYTE *)(v132 + 32);
        if (v64 < 64)
          v65 = ~(-1 << v64);
        else
          v65 = -1;
        v66 = v65 & *(_QWORD *)(v132 + 56);
        v67 = (unint64_t)(v64 + 63) >> 6;
        swift_bridgeObjectRetain();
        v68 = 0;
        if (v66)
        {
LABEL_68:
          v66 &= v66 - 1;
          goto LABEL_80;
        }
        while (1)
        {
          v13 = __OFADD__(v68++, 1);
          if (v13)
            goto LABEL_145;
          if (v68 >= v67)
            goto LABEL_86;
          v69 = *(_QWORD *)(v63 + 8 * v68);
          if (!v69)
          {
            v70 = v68 + 1;
            if (v68 + 1 >= v67)
              goto LABEL_86;
            v69 = *(_QWORD *)(v63 + 8 * v70);
            if (!v69)
            {
              v70 = v68 + 2;
              if (v68 + 2 >= v67)
                goto LABEL_86;
              v69 = *(_QWORD *)(v63 + 8 * v70);
              if (!v69)
              {
                v70 = v68 + 3;
                if (v68 + 3 >= v67)
                {
LABEL_86:
                  swift_release();
                  v71 = swift_bridgeObjectRetain();
                  v72 = sub_248F2D994(v71);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v133 = v72;
                  v73 = v131;
                  v74 = v125;
                  if (*(_QWORD *)(v131 + 16))
                  {
                    swift_bridgeObjectRelease();
                    sub_248DDD698((uint64_t)&v134, v73, 0);
                    sub_248DB8C50(v134, v135);
                    goto LABEL_89;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (qword_2577E33F8 != -1)
                    goto LABEL_155;
                  goto LABEL_140;
                }
                v69 = *(_QWORD *)(v63 + 8 * v70);
                if (!v69)
                {
                  while (1)
                  {
                    v68 = v70 + 1;
                    if (__OFADD__(v70, 1))
                      goto LABEL_147;
                    if (v68 >= v67)
                      goto LABEL_86;
                    v69 = *(_QWORD *)(v63 + 8 * v68);
                    ++v70;
                    if (v69)
                      goto LABEL_79;
                  }
                }
              }
            }
            v68 = v70;
          }
LABEL_79:
          v66 = (v69 - 1) & v69;
LABEL_80:
          swift_retain();
          sub_2490D4C5C(&v134);
          sub_248DB8E38(v134);
          swift_release();
          if (v66)
            goto LABEL_68;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v74 = v125;
LABEL_89:
      v75 = v133;
      swift_isUniquelyReferenced_nonNull_native();
      v134 = v74;
      v76 = v127;
      v77 = sub_248DFDC18();
      if (__OFADD__(*(_QWORD *)(v74 + 16), (v78 & 1) == 0))
        goto LABEL_148;
      v79 = v77;
      v80 = v78;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B08);
      if ((sub_2490E8620() & 1) != 0)
      {
        v81 = sub_248DFDC18();
        if ((v80 & 1) != (v82 & 1))
        {
          sub_2490E889C();
          __break(1u);
          return;
        }
        v79 = v81;
      }
      v4 = v134;
      if ((v80 & 1) != 0)
      {
        v83 = *(_QWORD *)(v134 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v83 + 8 * v79) = v75;
      }
      else
      {
        *(_QWORD *)(v134 + 8 * (v79 >> 6) + 64) |= 1 << v79;
        v84 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v79);
        *v84 = v128;
        v84[1] = v76;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v79) = v75;
        v85 = *(_QWORD *)(v4 + 16);
        v13 = __OFADD__(v85, 1);
        v86 = v85 + 1;
        if (v13)
          goto LABEL_150;
        *(_QWORD *)(v4 + 16) = v86;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v124;
      v8 = v126;
      if (!v126)
      {
LABEL_6:
        v13 = __OFADD__(v9++, 1);
        if (v13)
          goto LABEL_151;
        if (v9 < v122)
        {
          v14 = *(_QWORD *)(v121 + 8 * v9);
          if (v14)
            goto LABEL_16;
          v15 = v9 + 1;
          if (v9 + 1 < v122)
          {
            v14 = *(_QWORD *)(v121 + 8 * v15);
            if (v14)
              goto LABEL_15;
            v15 = v9 + 2;
            if (v9 + 2 < v122)
            {
              v14 = *(_QWORD *)(v121 + 8 * v15);
              if (v14)
                goto LABEL_15;
              v15 = v9 + 3;
              if (v9 + 3 < v122)
              {
                v14 = *(_QWORD *)(v121 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    v9 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_152;
                    if (v9 >= v122)
                      goto LABEL_138;
                    v14 = *(_QWORD *)(v121 + 8 * v9);
                    ++v15;
                    if (v14)
                      goto LABEL_16;
                  }
                }
LABEL_15:
                v9 = v15;
LABEL_16:
                v11 = (v14 - 1) & v14;
                v12 = __clz(__rbit64(v14)) + (v9 << 6);
                continue;
              }
            }
          }
        }
LABEL_138:
        swift_release();
        v107 = v118;
        v108 = v119;
        *v118 = v120;
        v107[1] = v108;
        v107[2] = v4;
        return;
      }
      goto LABEL_5;
    }
    break;
  }
  v40 = *(_QWORD *)(v31 + 8 * v41);
  if (v40)
  {
LABEL_43:
    v36 = v41;
    goto LABEL_44;
  }
  while (1)
  {
    v36 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v36 >= v35)
      goto LABEL_57;
    v40 = *(_QWORD *)(v31 + 8 * v36);
    ++v41;
    if (v40)
      goto LABEL_44;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  swift_once();
LABEL_135:
  v101 = sub_2490E7E64();
  __swift_project_value_buffer(v101, (uint64_t)qword_2577E7AD0);
  v102 = sub_2490E7E4C();
  v103 = sub_2490E82C0();
  v104 = os_log_type_enabled(v102, v103);
  v105 = v118;
  if (v104)
  {
    v106 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v106 = 0;
    _os_log_impl(&dword_248D9A000, v102, v103, "Signature invalid: isNone but contains other constraints", v106, 2u);
    MEMORY[0x2495AD83C](v106, -1, -1);
  }
  swift_release();

  *v105 = 0;
  v105[1] = 0;
  v105[2] = 0;
}

uint64_t sub_248F2C2EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  char v14;
  char v15;
  uint64_t v16;

  v2 = a1[1];
  v3 = a1[2];
  v4 = v2 + 56;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v16 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_20;
    }
    v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v10;
    if (!v12)
    {
      v10 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v10);
      if (!v12)
      {
        v10 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v10);
        if (!v12)
          break;
      }
    }
LABEL_19:
    v7 = (v12 - 1) & v12;
LABEL_20:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_248DFDC18();
    v15 = v14;
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B08);
      sub_2490E8620();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B00);
      sub_2490E8638();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
  }
  v13 = v11 + 3;
  if (v13 >= v8)
  {
LABEL_23:
    result = swift_release();
    *a2 = v16;
    a2[1] = v2;
    a2[2] = v3;
    return result;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v10 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v10);
    ++v13;
    if (v12)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_248F2C538(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *@<X8>);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  void (*v60)(_QWORD *@<X8>);
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  unint64_t v73;
  uint64_t v74;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E5A50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B10);
  sub_248E211A0(&qword_2577E7B18, &qword_2577E5A50, MEMORY[0x24BEE1708]);
  v2 = sub_2490E7EF4();
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = (_QWORD *)(a1 + 48);
    do
    {
      v72 = *((_OWORD *)v5 - 1);
      v6 = *v5;
      v7 = *(v5 - 2);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_248F2E3D4((uint64_t)v4);
      swift_isUniquelyReferenced_nonNull_native();
      v74 = v2;
      v8 = sub_248DFDD2C();
      if (__OFADD__(*(_QWORD *)(v2 + 16), (v9 & 1) == 0))
        goto LABEL_75;
      v10 = v8;
      v11 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B20);
      if ((sub_2490E8620() & 1) != 0)
      {
        v12 = sub_248DFDD2C();
        if ((v11 & 1) != (v13 & 1))
          goto LABEL_80;
        v10 = v12;
      }
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        *(_QWORD *)(v2 + 8 * (v10 >> 6) + 64) |= 1 << v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10) = v7;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10) = MEMORY[0x24BEE4AF8];
        v14 = *(_QWORD *)(v2 + 16);
        v15 = v14 + 1;
        v16 = __OFADD__(v14, 1);
        swift_bridgeObjectRetain();
        if (v16)
          goto LABEL_76;
        *(_QWORD *)(v74 + 16) = v15;
      }
      swift_bridgeObjectRetain();
      v17 = *(_QWORD *)(v74 + 56);
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v17 + 8 * v10);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v17 + 8 * v10) = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_248DB020C();
        v18 = v22;
        *(_QWORD *)(v17 + 8 * v10) = v22;
      }
      v20 = *(_QWORD *)(v18 + 16);
      if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_248DB020C();
        v18 = v23;
        *(_QWORD *)(v17 + 8 * v10) = v23;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      v21 = v18 + 24 * v20;
      *(_OWORD *)(v21 + 32) = v72;
      *(_QWORD *)(v21 + 48) = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v5 += 3;
      v4 = sub_248F2CF54;
      --v3;
      v2 = v74;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v60 = sub_248F2CF54;
  }
  else
  {
    v60 = 0;
  }
  v24 = 0;
  v61 = v2 + 64;
  v25 = 1 << *(_BYTE *)(v2 + 32);
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v27 = v26 & *(_QWORD *)(v2 + 64);
  v62 = (unint64_t)(v25 + 63) >> 6;
  v67 = MEMORY[0x24BEE4AF8];
  v68 = v2;
  if (!v27)
    goto LABEL_25;
  while (2)
  {
    v28 = __clz(__rbit64(v27));
    v29 = (v27 - 1) & v27;
    v30 = v28 | (v24 << 6);
LABEL_39:
    v34 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v30);
    if (!*(_QWORD *)(v34 + 16))
    {
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    v63 = v29;
    v64 = v24;
    v35 = *(_QWORD *)(v2 + 48);
    v36 = *(_QWORD *)(v34 + 40);
    v66 = *(_QWORD *)(v35 + 8 * v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65 = v36;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B00);
    v37 = sub_2490E7EF4();
    v71 = *(_QWORD *)(v34 + 16);
    if (!v71)
      goto LABEL_65;
    v38 = 0;
    v69 = v34;
    v70 = v34 + 32;
    while (2)
    {
      if (v38 >= *(_QWORD *)(v34 + 16))
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      v39 = *(_QWORD *)(v70 + 24 * v38 + 16);
      v73 = v38 + 1;
      v40 = v39 + 64;
      v41 = 1 << *(_BYTE *)(v39 + 32);
      if (v41 < 64)
        v42 = ~(-1 << v41);
      else
        v42 = -1;
      v43 = v42 & *(_QWORD *)(v39 + 64);
      v44 = (unint64_t)(v41 + 63) >> 6;
      swift_bridgeObjectRetain();
      v45 = 0;
      if (v43)
      {
LABEL_47:
        v46 = __clz(__rbit64(v43));
        v43 &= v43 - 1;
        v47 = v46 | (v45 << 6);
        goto LABEL_62;
      }
      while (1)
      {
        v48 = v45 + 1;
        if (__OFADD__(v45, 1))
        {
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        if (v48 >= v44)
          goto LABEL_64;
        v49 = *(_QWORD *)(v40 + 8 * v48);
        ++v45;
        if (!v49)
        {
          v45 = v48 + 1;
          if (v48 + 1 >= v44)
            goto LABEL_64;
          v49 = *(_QWORD *)(v40 + 8 * v45);
          if (!v49)
          {
            v45 = v48 + 2;
            if (v48 + 2 >= v44)
              goto LABEL_64;
            v49 = *(_QWORD *)(v40 + 8 * v45);
            if (!v49)
              break;
          }
        }
LABEL_61:
        v43 = (v49 - 1) & v49;
        v47 = __clz(__rbit64(v49)) + (v45 << 6);
LABEL_62:
        v51 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * v47);
        v53 = *v51;
        v52 = v51[1];
        v54 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v47);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_248F0DBC4(v53, v52, v37);
        sub_248F2CDD8(v54);
        swift_isUniquelyReferenced_nonNull_native();
        sub_248F68A2C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v43)
          goto LABEL_47;
      }
      v50 = v48 + 3;
      if (v50 < v44)
      {
        v49 = *(_QWORD *)(v40 + 8 * v50);
        if (!v49)
        {
          while (1)
          {
            v45 = v50 + 1;
            if (__OFADD__(v50, 1))
              goto LABEL_72;
            if (v45 >= v44)
              goto LABEL_64;
            v49 = *(_QWORD *)(v40 + 8 * v45);
            ++v50;
            if (v49)
              goto LABEL_61;
          }
        }
        v45 = v50;
        goto LABEL_61;
      }
LABEL_64:
      swift_release();
      v38 = v73;
      v34 = v69;
      if (v73 != v71)
        continue;
      break;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_248DB020C();
      v67 = v57;
    }
    v55 = *(_QWORD *)(v67 + 16);
    if (v55 >= *(_QWORD *)(v67 + 24) >> 1)
    {
      sub_248DB020C();
      v67 = v58;
    }
    *(_QWORD *)(v67 + 16) = v55 + 1;
    v56 = (_QWORD *)(v67 + 24 * v55);
    v56[4] = v66;
    v56[5] = v65;
    v56[6] = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v68;
    v27 = v63;
    v24 = v64;
    if (v63)
      continue;
    break;
  }
LABEL_25:
  v31 = v24 + 1;
  if (__OFADD__(v24, 1))
    goto LABEL_78;
  if (v31 >= v62)
    goto LABEL_73;
  v32 = *(_QWORD *)(v61 + 8 * v31);
  ++v24;
  if (v32)
    goto LABEL_38;
  v24 = v31 + 1;
  if (v31 + 1 >= v62)
    goto LABEL_73;
  v32 = *(_QWORD *)(v61 + 8 * v24);
  if (v32)
    goto LABEL_38;
  v24 = v31 + 2;
  if (v31 + 2 >= v62)
    goto LABEL_73;
  v32 = *(_QWORD *)(v61 + 8 * v24);
  if (v32)
    goto LABEL_38;
  v33 = v31 + 3;
  if (v33 >= v62)
  {
LABEL_73:
    swift_release();
    sub_248F2E3D4((uint64_t)v60);
    return v67;
  }
  else
  {
    v32 = *(_QWORD *)(v61 + 8 * v33);
    if (v32)
    {
      v24 = v33;
LABEL_38:
      v29 = (v32 - 1) & v32;
      v30 = __clz(__rbit64(v32)) + (v24 << 6);
      goto LABEL_39;
    }
    while (1)
    {
      v24 = v33 + 1;
      if (__OFADD__(v33, 1))
        break;
      if (v24 >= v62)
        goto LABEL_73;
      v32 = *(_QWORD *)(v61 + 8 * v24);
      ++v33;
      if (v32)
        goto LABEL_38;
    }
LABEL_79:
    __break(1u);
LABEL_80:
    result = sub_2490E889C();
    __break(1u);
  }
  return result;
}

uint64_t sub_248F2CC6C(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v2 << 6); ; i = __clz(__rbit64(v11)) + (v2 << 6))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * i);
    swift_retain();
    sub_248DDD978(&v14, v13);
    result = swift_release();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_248F2CDD8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unsigned __int8 v17;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v2 << 6); ; i = __clz(__rbit64(v11)) + (v2 << 6))
  {
    v13 = *(_QWORD *)(v1 + 48) + 16 * i;
    v14 = *(_QWORD *)v13;
    v15 = *(_BYTE *)(v13 + 8);
    sub_248DB8C3C(*(_QWORD *)v13, v15);
    sub_248DDD698((uint64_t)&v16, v14, v15);
    result = sub_248DB8C50(v16, v17);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_248F2CF54(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

void sub_248F2CF64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_248F2E420();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_248F2CFCC(v5);
  *a1 = v2;
}

void sub_248F2CFCC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;

  v3 = a1[1];
  v4 = sub_2490E8800();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_248F2D630(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_248DBC3A0(v3 / 2);
  v101 = v6;
  v102 = v3;
  v103 = v7;
  v99 = a1;
  if (v3 <= 0)
  {
    v104 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
    if (v33 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v101 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v90 = *v99;
    while (1)
    {
      v91 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v90)
        goto LABEL_153;
      v92 = v104;
      v93 = *(_QWORD *)(v104 + 32 + 16 * v91);
      v94 = *(_QWORD *)(v104 + 32 + 16 * (v33 - 1) + 8);
      sub_248F2D6F4((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(_QWORD *)(v104 + 32 + 16 * (v33 - 1))), v90 + 16 * v94, v103);
      if (v1)
        goto LABEL_106;
      if (v94 < v93)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_248F2D980(v104);
        v92 = v97;
      }
      if (v91 >= *(_QWORD *)(v92 + 16))
        goto LABEL_140;
      v95 = (_QWORD *)(v92 + 32 + 16 * v91);
      *v95 = v93;
      v95[1] = v94;
      v96 = *(_QWORD *)(v92 + 16);
      if (v33 > v96)
        goto LABEL_141;
      memmove((void *)(v92 + 32 + 16 * (v33 - 1)), (const void *)(v92 + 32 + 16 * v33), 16 * (v96 - v33));
      v104 = v92;
      *(_QWORD *)(v92 + 16) = v96 - 1;
      v33 = v96 - 1;
      v3 = v102;
      if (v96 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v100 = v5;
  v8 = 0;
  v9 = *a1;
  v98 = *a1 + 8;
  v104 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v10 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v11 = (uint64_t *)(v9 + 16 * v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(v9 + 16 * v10);
    if (v12 == *v14 && v13 == v14[1])
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v3)
        goto LABEL_31;
      v16 = 0;
LABEL_13:
      v18 = (_QWORD *)(v98 + 16 * v17);
      do
      {
        v19 = (_QWORD *)(v9 + 16 * v8);
        if (*(v18 - 1) == *v19 && *v18 == v19[1])
        {
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v16 ^ sub_2490E883C()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v18 += 2;
        v21 = v17 + 1;
        v8 = v17;
        v17 = v21;
      }
      while (v21 < v3);
      v17 = v21;
      goto LABEL_23;
    }
    v16 = sub_2490E883C();
    v17 = v10 + 2;
    if (v10 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v8 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v17 < v10)
      goto LABEL_148;
    if (v10 < v17)
    {
      v22 = 16 * v17;
      v23 = 16 * v10;
      v24 = v17;
      v25 = v10;
      do
      {
        if (v25 != --v24)
        {
          if (!v9)
            goto LABEL_152;
          v26 = v9 + v22;
          v27 = *(_QWORD *)(v9 + v23);
          v28 = *(_QWORD *)(v9 + v23 + 8);
          *(_OWORD *)(v9 + v23) = *(_OWORD *)(v9 + v22 - 16);
          *(_QWORD *)(v26 - 16) = v27;
          *(_QWORD *)(v26 - 8) = v28;
        }
        ++v25;
        v22 -= 16;
        v23 += 16;
      }
      while (v25 < v24);
    }
LABEL_31:
    v8 = v17;
LABEL_32:
    if (v8 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v8, v10))
      goto LABEL_143;
    if (v8 - v10 >= v100)
      goto LABEL_41;
    if (__OFADD__(v10, v100))
      goto LABEL_146;
    if (v10 + v100 >= v3)
      v29 = v3;
    else
      v29 = v10 + v100;
    if (v29 < v10)
      goto LABEL_147;
    if (v8 == v29)
    {
LABEL_41:
      v30 = v104;
    }
    else
    {
      v81 = (_QWORD *)(v9 + 16 * v8);
      v30 = v104;
      do
      {
        v82 = (uint64_t *)(v9 + 16 * v8);
        v83 = *v82;
        v84 = v82[1];
        v85 = v10;
        v86 = v81;
        do
        {
          v87 = v83 == *(v86 - 2) && v84 == *(v86 - 1);
          if (v87 || (sub_2490E883C() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_150;
          v83 = *v86;
          v84 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v84;
          *(v86 - 2) = v83;
          v86 -= 2;
          ++v85;
        }
        while (v8 != v85);
        ++v8;
        v81 += 2;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_248F2D898(0, *(_QWORD *)(v30 + 16) + 1, 1, (char *)v30);
      v30 = v88;
    }
    v32 = *(_QWORD *)(v30 + 16);
    v31 = *(_QWORD *)(v30 + 24);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
    {
      sub_248F2D898(v31 > 1, v32 + 1, 1, (char *)v30);
      v30 = v89;
    }
    *(_QWORD *)(v30 + 16) = v33;
    v34 = v30 + 32;
    v35 = (uint64_t *)(v30 + 32 + 16 * v32);
    *v35 = v10;
    v35[1] = v8;
    v104 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_90:
    v3 = v102;
    if (v8 >= v102)
      goto LABEL_110;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = v34 + 16 * v33;
      v42 = *(_QWORD *)(v41 - 64);
      v43 = *(_QWORD *)(v41 - 56);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_127;
      v46 = *(_QWORD *)(v41 - 48);
      v45 = *(_QWORD *)(v41 - 40);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_128;
      v48 = v33 - 2;
      v49 = (uint64_t *)(v34 + 16 * (v33 - 2));
      v51 = *v49;
      v50 = v49[1];
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_129;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_131;
      if (v53 >= v44)
      {
        v71 = (uint64_t *)(v34 + 16 * v36);
        v73 = *v71;
        v72 = v71[1];
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_137;
        v64 = v39 < v74;
        goto LABEL_79;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *(_QWORD *)(v30 + 32);
        v66 = *(_QWORD *)(v30 + 40);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_73;
      }
      v38 = *(_QWORD *)(v30 + 32);
      v37 = *(_QWORD *)(v30 + 40);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_130;
    v48 = v33 - 2;
    v54 = (uint64_t *)(v34 + 16 * (v33 - 2));
    v56 = *v54;
    v55 = v54[1];
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_132;
    v60 = (uint64_t *)(v34 + 16 * v36);
    v62 = *v60;
    v61 = v60[1];
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_134;
    if (__OFADD__(v58, v63))
      goto LABEL_136;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_79:
      if (v64)
        v36 = v48;
      goto LABEL_81;
    }
LABEL_73:
    if ((v59 & 1) != 0)
      goto LABEL_133;
    v67 = (uint64_t *)(v34 + 16 * v36);
    v69 = *v67;
    v68 = v67[1];
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_135;
    if (v70 < v58)
      goto LABEL_90;
LABEL_81:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v76 = (uint64_t *)(v34 + 16 * v75);
    v77 = *v76;
    v78 = (_QWORD *)(v34 + 16 * v36);
    v79 = v78[1];
    sub_248F2D6F4((char *)(v9 + 16 * *v76), (char *)(v9 + 16 * *v78), v9 + 16 * v79, v103);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_124;
    if (v36 > *(_QWORD *)(v104 + 16))
      goto LABEL_125;
    *v76 = v77;
    *(_QWORD *)(v34 + 16 * v75 + 8) = v79;
    v80 = *(_QWORD *)(v104 + 16);
    if (v36 >= v80)
      goto LABEL_126;
    v30 = v104;
    v33 = v80 - 1;
    memmove((void *)(v34 + 16 * v36), v78 + 2, 16 * (v80 - 1 - v36));
    *(_QWORD *)(v104 + 16) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v102 < -1)
    goto LABEL_145;
  *(_QWORD *)(v101 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_248F2D630(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_2490E883C();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_248F2D6F4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_248DB1854(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_2490E883C() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  sub_248DB1854(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_2490E883C() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_248DB1854(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

void sub_248F2D898(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_93();
}

void sub_248F2D980(uint64_t a1)
{
  sub_248F2D898(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_248F2D994(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_248DE1780(0, v4, v5);
    sub_248F2DAFC(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (unint64_t *)swift_slowAlloc();
    sub_248DE1780(0, v4, v8);
    sub_248F2DAFC(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x2495AD83C](v8, -1, -1);
  }
  return v7;
}

void sub_248F2DAFC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + 16 * v14 + 8) >= 0x40u)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_2490D4554(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_248F2DC70(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;

  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v7 = 0;
    v38 = a4 + 56;
    v8 = 1 << *(_BYTE *)(a4 + 32);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(a4 + 56);
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = a3 + 56;
    do
    {
      while (1)
      {
        if (v10)
        {
          v10 &= v10 - 1;
        }
        else
        {
          v12 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
LABEL_62:
            __break(1u);
            goto LABEL_63;
          }
          if (v12 >= v40)
            goto LABEL_58;
          v13 = *(_QWORD *)(v38 + 8 * v12);
          ++v7;
          if (!v13)
          {
            v7 = v12 + 1;
            if (v12 + 1 >= v40)
              goto LABEL_58;
            v13 = *(_QWORD *)(v38 + 8 * v7);
            if (!v13)
            {
              v7 = v12 + 2;
              if (v12 + 2 >= v40)
                goto LABEL_58;
              v13 = *(_QWORD *)(v38 + 8 * v7);
              if (!v13)
              {
                v14 = v12 + 3;
                if (v14 >= v40)
                {
LABEL_58:
                  v35 = a2;
LABEL_60:
                  swift_retain();
                  sub_2490D4818(a1, v35, v6, a3);
                  return;
                }
                v13 = *(_QWORD *)(v38 + 8 * v14);
                if (!v13)
                {
                  while (1)
                  {
                    v7 = v14 + 1;
                    if (__OFADD__(v14, 1))
                      break;
                    if (v7 >= v40)
                      goto LABEL_58;
                    v13 = *(_QWORD *)(v38 + 8 * v7);
                    ++v14;
                    if (v13)
                      goto LABEL_21;
                  }
LABEL_63:
                  __break(1u);
                  goto LABEL_64;
                }
                v7 = v14;
              }
            }
          }
LABEL_21:
          v10 = (v13 - 1) & v13;
        }
        sub_2490E88F0();
        swift_retain();
        TypedValue.hash(into:)();
        v15 = sub_2490E8920();
        v16 = -1 << *(_BYTE *)(a3 + 32);
        v17 = v15 & ~v16;
        if (((*(_QWORD *)(v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
          break;
LABEL_26:
        swift_release();
      }
      v18 = ~v16;
      while (1)
      {
        static TypedValue.== infix(_:_:)();
        if ((v19 & 1) != 0)
          break;
        v17 = (v17 + 1) & v18;
        if (((*(_QWORD *)(v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          goto LABEL_26;
      }
      swift_release();
      *(unint64_t *)((char *)a1 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v20 = __OFADD__(v6++, 1);
    }
    while (!v20);
    __break(1u);
  }
  v21 = 0;
  v37 = 0;
  v39 = a3 + 56;
  v22 = 1 << *(_BYTE *)(a3 + 32);
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  v24 = v23 & *(_QWORD *)(a3 + 56);
  v41 = (unint64_t)(v22 + 63) >> 6;
  v25 = a4 + 56;
  while (v24)
  {
    v26 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v6 = v26 | (v21 << 6);
LABEL_50:
    sub_2490E88F0();
    swift_retain();
    TypedValue.hash(into:)();
    v30 = sub_2490E8920();
    v31 = -1 << *(_BYTE *)(a4 + 32);
    v32 = v30 & ~v31;
    if (((*(_QWORD *)(v25 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
    {
      v33 = ~v31;
      while (1)
      {
        static TypedValue.== infix(_:_:)();
        if ((v34 & 1) != 0)
          break;
        v32 = (v32 + 1) & v33;
        if (((*(_QWORD *)(v25 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
          goto LABEL_54;
      }
      swift_release();
      *(unint64_t *)((char *)a1 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v6;
      v20 = __OFADD__(v37++, 1);
      if (v20)
      {
        __break(1u);
        goto LABEL_58;
      }
    }
    else
    {
LABEL_54:
      swift_release();
    }
  }
  v27 = v21 + 1;
  if (__OFADD__(v21, 1))
    goto LABEL_62;
  if (v27 >= v41)
  {
LABEL_59:
    v35 = a2;
    v6 = v37;
    goto LABEL_60;
  }
  v28 = *(_QWORD *)(v39 + 8 * v27);
  ++v21;
  if (v28)
    goto LABEL_49;
  v21 = v27 + 1;
  if (v27 + 1 >= v41)
    goto LABEL_59;
  v28 = *(_QWORD *)(v39 + 8 * v21);
  if (v28)
    goto LABEL_49;
  v21 = v27 + 2;
  if (v27 + 2 >= v41)
    goto LABEL_59;
  v28 = *(_QWORD *)(v39 + 8 * v21);
  if (v28)
  {
LABEL_49:
    v24 = (v28 - 1) & v28;
    v6 = __clz(__rbit64(v28)) + (v21 << 6);
    goto LABEL_50;
  }
  v29 = v27 + 3;
  if (v29 >= v41)
    goto LABEL_59;
  v28 = *(_QWORD *)(v39 + 8 * v29);
  if (v28)
  {
    v21 = v29;
    goto LABEL_49;
  }
  while (1)
  {
    v21 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v21 >= v41)
      goto LABEL_59;
    v28 = *(_QWORD *)(v39 + 8 * v21);
    ++v29;
    if (v28)
      goto LABEL_49;
  }
LABEL_64:
  __break(1u);
}

unint64_t sub_248F2E100()
{
  unint64_t result;

  result = qword_2577E7AE8;
  if (!qword_2577E7AE8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolSummaryComponent, &type metadata for ToolSummaryComponent);
    atomic_store(result, (unint64_t *)&qword_2577E7AE8);
  }
  return result;
}

unint64_t sub_248F2E140()
{
  unint64_t result;

  result = qword_2577E7AF0;
  if (!qword_2577E7AF0)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolSummaryString, &type metadata for ToolSummaryString);
    atomic_store(result, (unint64_t *)&qword_2577E7AF0);
  }
  return result;
}

unint64_t sub_248F2E180()
{
  unint64_t result;

  result = qword_2577E7AF8;
  if (!qword_2577E7AF8)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ToolInvocationSignature, &type metadata for ToolInvocationSignature);
    atomic_store(result, (unint64_t *)&qword_2577E7AF8);
  }
  return result;
}

void sub_248F2E1C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  OUTLINED_FUNCTION_31();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_93();
}

void type metadata accessor for ToolSummaryComponent()
{
  OUTLINED_FUNCTION_164();
}

void type metadata accessor for ToolSummaryString()
{
  OUTLINED_FUNCTION_164();
}

uint64_t destroy for ToolInvocationSignature()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s7ToolKit23ToolInvocationSignatureVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_93();
}

_QWORD *assignWithCopy for ToolInvocationSignature(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ToolInvocationSignature(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolInvocationSignature(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolInvocationSignature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ToolInvocationSignature()
{
  OUTLINED_FUNCTION_164();
}

uint64_t sub_248F2E3D4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_248F2E3E4()
{
  unint64_t result;

  result = qword_2577E7B28;
  if (!qword_2577E7B28)
  {
    result = MEMORY[0x2495AD758](&protocol conformance descriptor for ParameterRelationshipDefinition.Relation, &type metadata for ParameterRelationshipDefinition.Relation);
    atomic_store(result, (unint64_t *)&qword_2577E7B28);
  }
  return result;
}

void sub_248F2E420()
{
  sub_248DBCFE0();
}

void sub_248F2E434()
{
  sub_248DBCFFC();
}

void sub_248F2E448()
{
  sub_248DBD020();
}

void sub_248F2E45C()
{
  sub_248DBD03C();
}

unint64_t OUTLINED_FUNCTION_7_15()
{
  return sub_248DFDC18();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  unsigned __int8 v0;
  uint64_t v1;

  return sub_248DB8C3C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_9()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_9(uint64_t result)
{
  return sub_248F2E3D4(result);
}

uint64_t OUTLINED_FUNCTION_19_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  return swift_bridgeObjectRelease_n();
}

BOOL OUTLINED_FUNCTION_26_7@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  return sub_2490E7F54();
}

uint64_t OUTLINED_FUNCTION_30_5(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_248E211A0(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_31_9()
{
  return sub_2490E802C();
}

uint64_t sub_248F2E4E4(uint64_t a1)
{
  return sub_248F2E51C(a1, MEMORY[0x24BDCCA48], MEMORY[0x24BDCCA40], &qword_2577E7B38);
}

uint64_t sub_248F2E500(uint64_t a1)
{
  return sub_248F2E51C(a1, (void (*)(_QWORD))MEMORY[0x24BDCCA90], MEMORY[0x24BDCCA88], &qword_2577E7B40);
}

uint64_t sub_248F2E51C(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t result;

  a2(0);
  swift_allocObject();
  result = a3();
  *a4 = result;
  return result;
}

uint64_t WFEncodedTypedValue.decode()()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  if (qword_2577E3400 != -1)
    swift_once();
  v1 = objc_msgSend(v0, sel_data);
  v2 = sub_2490E6C70();
  v4 = v3;

  sub_248DEB75C();
  sub_2490E6B08();
  return sub_248D9E628(v2, v4);
}

id TypedValue.encode()()
{
  uint64_t v0;
  id result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if (qword_2577E3408 != -1)
    swift_once();
  sub_248DEB1EC();
  result = (id)sub_2490E6B14();
  if (!v0)
  {
    v3 = (uint64_t)result;
    v4 = v2;
    sub_248F2E6DC();
    return sub_248E01394(v3, v4);
  }
  return result;
}

unint64_t sub_248F2E6DC()
{
  unint64_t result;

  result = qword_2577E7B48;
  if (!qword_2577E7B48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2577E7B48);
  }
  return result;
}

void NSUnit.toolkitUnitType.getter()
{
  void *v0;

  swift_getObjectType();
  v0 = (void *)objc_opt_self();
  if (objc_msgSend(v0, sel_unitTypeForUnitClass_, swift_getObjCClassFromMetadata()))
  {
    OUTLINED_FUNCTION_4_19();
    OUTLINED_FUNCTION_6_18();
  }
  OUTLINED_FUNCTION_1();
}

uint64_t WFMeasurementUnitType.toolkitUnitType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v24;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v32;
  uint64_t v34;
  uint64_t v36;
  uint64_t v38;
  uint64_t v40;
  uint64_t v42;
  uint64_t v44;
  uint64_t v46;

  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v2)
  {
    v4 = 0;
LABEL_13:
    swift_bridgeObjectRelease_n();
    return v4;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  v4 = 0;
  if ((v1 & 1) != 0)
    return v4;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v5)
  {
    v4 = 1;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 1;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v8)
  {
    v4 = 2;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 2;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v10)
  {
    v4 = 3;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 3;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v12)
  {
    v4 = 4;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 4;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v14)
  {
    v4 = 5;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 5;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v16)
  {
    v4 = 6;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 6;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v18)
  {
    v4 = 7;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 7;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v20)
  {
    v4 = 8;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 8;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v22)
  {
    v4 = 9;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 9;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v24)
  {
    v4 = 10;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 10;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v26)
  {
    v4 = 11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 11;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v28)
  {
    v4 = 12;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 12;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v30)
  {
    v4 = 13;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 13;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v32)
  {
    v4 = 14;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 14;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v34)
  {
    v4 = 15;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 15;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v36)
  {
    v4 = 16;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 16;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v38)
  {
    v4 = 17;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 17;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v40)
  {
    v4 = 18;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 18;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v42)
  {
    v4 = 19;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 19;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v44)
  {
    v4 = 20;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 20;
  sub_2490E7F90();
  if (v1 == OUTLINED_FUNCTION_1_16() && v0 == v46)
  {
    v4 = 21;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_25();
  if ((v1 & 1) != 0)
    return 21;
  sub_2490E853C();
  sub_2490E802C();
  type metadata accessor for WFMeasurementUnitType(0);
  sub_2490E8614();
  result = sub_2490E8650();
  __break(1u);
  return result;
}

uint64_t sub_248F2EDD8()
{
  return WFMeasurementUnitType.toolkitUnitType.getter();
}

void LNMeasurementUnitType.toolkitUnitType.getter(uint64_t a1)
{
  if (objc_msgSend((id)objc_opt_self(), sel_unitTypeFromLinkMeasurementUnitType_, a1))
  {
    OUTLINED_FUNCTION_4_19();
    OUTLINED_FUNCTION_6_18();
  }
  OUTLINED_FUNCTION_1();
}

void sub_248F2EE34()
{
  uint64_t *v0;

  LNMeasurementUnitType.toolkitUnitType.getter(*v0);
}

void INIntentSlotDescription.toolkitUnitType.getter()
{
  void *v0;

  if (objc_msgSend((id)objc_opt_self(), sel_unitTypeFromIntentSlotValueType_, objc_msgSend(v0, sel_valueType)))
  {
    OUTLINED_FUNCTION_4_19();
    OUTLINED_FUNCTION_6_18();
  }
  OUTLINED_FUNCTION_1();
}

void sub_248F2EEA4()
{
  INIntentSlotDescription.toolkitUnitType.getter();
}

void sub_248F2EEC4()
{
  NSUnit.toolkitUnitType.getter();
}

uint64_t dispatch thunk of MeasurementUnitTypeProvider.toolkitUnitType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t OUTLINED_FUNCTION_0_11()
{
  return sub_2490E883C();
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return sub_2490E7F90();
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return WFMeasurementUnitType.toolkitUnitType.getter();
}

void OUTLINED_FUNCTION_6_18()
{
  void *v0;

}

uint64_t TypedValue.typeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_136_2();
  v0 = OUTLINED_FUNCTION_117_2();
  type metadata accessor for TypedValue.EntityIdentifierValue(v0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_332();
  type metadata accessor for TypedValue.QueryValue(v2);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for TypedValue.EntityValue(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_78();
  type metadata accessor for TypedValue.EnumerationValue(v5);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v6);
  type metadata accessor for TypedValue.PrimitiveValue(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_288_1();
  return ((uint64_t (*)(uint64_t))((char *)sub_248F2F008 + 4 * byte_2490FAF00[v9]))(v8);
}

uint64_t sub_248F2F008(uint64_t a1)
{
  _QWORD *v1;

  *v1 = *(_QWORD *)(a1 + 16);
  return swift_retain();
}

#error "248F2F068: call analysis failed (funcsize=21)"

uint64_t type metadata accessor for TypedValue.EntityIdentifierValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_25447A400);
}

uint64_t type metadata accessor for TypedValue.QueryValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_254479038);
}

uint64_t type metadata accessor for TypedValue.EntityValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_25447AE80);
}

uint64_t type metadata accessor for TypedValue.EnumerationValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_254479028);
}

uint64_t type metadata accessor for TypedValue.PrimitiveValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_25447A570);
}

uint64_t sub_248F2F188()
{
  return swift_deallocObject();
}

uint64_t sub_248F2F198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_248DBC4DC();
    v2 = v11;
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      v5 = TypedValue.debugDescription.getter();
      v7 = v6;
      v8 = *(_QWORD *)(v11 + 16);
      if (v8 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_248DBC4DC();
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void TypedValue.ID.serializedVariable.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for TypedValue.ID(0);
  OUTLINED_FUNCTION_380_1(*(_QWORD *)(v0 + *(int *)(v1 + 20)));
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_1();
}

uint64_t TypedValue.ID.typeInstance.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_117_2();
  *v0 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TypedValue.ID(v2) + 24));
  return swift_retain();
}

uint64_t TypedValue.ID.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_313_1();
  sub_248F2FC1C((uint64_t)&qword_254470228);
  OUTLINED_FUNCTION_146_0();
  sub_2490E7F48();
  v2 = type metadata accessor for TypedValue.ID(0);
  v3 = OUTLINED_FUNCTION_360();
  sub_248D9F5CC(v3, v4);
  sub_2490E6C7C();
  v5 = OUTLINED_FUNCTION_360();
  sub_248D9E628(v5, v6);
  return TypeInstance.hash(into:)(v0, v7, v8, v9, v10, v11, v12, v13, v15, *(_QWORD *)(v1 + *(int *)(v2 + 24)), v16, v17);
}

#error "248F2F3EC: call analysis failed (funcsize=29)"

uint64_t sub_248F2F404(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002491327D0 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736E4965707974 && a2 == 0xEC00000065636E61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_2490E883C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_248F2F570(char a1)
{
  if (!a1)
    return 0x696669746E656469;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0x74736E4965707974;
}

uint64_t sub_248F2F5D8()
{
  char *v0;

  return sub_248F2F570(*v0);
}

uint64_t sub_248F2F5E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F2F404(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F2F604()
{
  sub_248F2FBE0();
  return sub_2490E8968();
}

uint64_t sub_248F2F62C()
{
  sub_248F2FBE0();
  return sub_2490E8974();
}

void TypedValue.ID.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_116_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B50);
  OUTLINED_FUNCTION_34_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_44_7();
  sub_248F2FBE0();
  OUTLINED_FUNCTION_18_6();
  sub_2490E6D18();
  sub_248F2FC1C((uint64_t)&qword_254477BB8);
  OUTLINED_FUNCTION_16_6();
  if (!v0)
  {
    type metadata accessor for TypedValue.ID(0);
    sub_248DB28CC();
    OUTLINED_FUNCTION_16_6();
    sub_248DCE12C();
    OUTLINED_FUNCTION_16_6();
  }
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_231_2();
  OUTLINED_FUNCTION_34_1();
}

void TypedValue.ID.hashValue.getter()
{
  sub_248DA9EB4((void (*)(_BYTE *))TypedValue.ID.hash(into:));
}

void TypedValue.ID.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  OUTLINED_FUNCTION_10();
  v4 = v3;
  v12 = v5;
  v14 = sub_2490E6D18();
  OUTLINED_FUNCTION_230();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_170_2(v7, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B60);
  OUTLINED_FUNCTION_216_0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_137();
  v10 = type metadata accessor for TypedValue.ID(v9);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_32();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_248F2FBE0();
  OUTLINED_FUNCTION_439_1();
  if (v0)
  {
    OUTLINED_FUNCTION_227_2();
  }
  else
  {
    LOBYTE(v16) = 0;
    sub_248F2FC1C((uint64_t)&qword_254474F68);
    OUTLINED_FUNCTION_156_1();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v15, v14);
    OUTLINED_FUNCTION_260();
    sub_248DB2908();
    OUTLINED_FUNCTION_156_1();
    *(_OWORD *)(v2 + *(int *)(v10 + 20)) = v16;
    sub_248DCDE5C();
    sub_2490E8728();
    OUTLINED_FUNCTION_295_1();
    *(_QWORD *)(v2 + *(int *)(v10 + 24)) = v16;
    OUTLINED_FUNCTION_34(v2, v13);
    OUTLINED_FUNCTION_227_2();
    OUTLINED_FUNCTION_69(v2);
  }
  OUTLINED_FUNCTION_1_1();
}

void sub_248F2F9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248DA9EF8(a1, a2, a3, (void (*)(_BYTE *))TypedValue.ID.hash(into:));
}

void sub_248F2F9EC()
{
  TypedValue.ID.init(from:)();
}

void sub_248F2FA00()
{
  TypedValue.ID.encode(to:)();
}

uint64_t sub_248F2FA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_136_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254477958);
  OUTLINED_FUNCTION_233();
  MEMORY[0x24BDAC7A8](v11);
  type metadata accessor for TypedValue.PrimitiveValue(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_495_0(v10, v13, v14);
  v15 = OUTLINED_FUNCTION_73_4();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_248F2FABC + 4 * byte_2490FAF08[v15]))(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

void sub_248F2FABC()
{
  _BYTE *v0;

  *v0 = 24;
  OUTLINED_FUNCTION_3_0();
}

uint64_t type metadata accessor for TypedValue.ID(uint64_t a1)
{
  return sub_248DB43B0(a1, qword_2577E8108);
}

unint64_t sub_248F2FBE0()
{
  unint64_t result;

  result = qword_2577E7B58;
  if (!qword_2577E7B58)
  {
    result = MEMORY[0x2495AD758](&unk_2490FFA3C, &type metadata for TypedValue.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7B58);
  }
  return result;
}

void sub_248F2FC1C(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_539(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_62_0();
  }
  OUTLINED_FUNCTION_1();
}

void TypedValue.PrimitiveValue.AppValue.bundleIdentifier.getter()
{
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_1();
}

uint64_t TypedValue.PrimitiveValue.AppValue.displayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_117_2();
  v2 = type metadata accessor for TypedValue.PrimitiveValue.AppValue(v1);
  v3 = OUTLINED_FUNCTION_477_1(v2);
  return OUTLINED_FUNCTION_191_1(v3, v0);
}

uint64_t type metadata accessor for TypedValue.PrimitiveValue.AppValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_254479068);
}

uint64_t sub_248F2FCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TypedValue.PrimitiveValue.AppValue.init(bundleIdentifier:displayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for TypedValue.PrimitiveValue.AppValue(0);
  return OUTLINED_FUNCTION_125_3(a3, (uint64_t)a4 + *(int *)(v6 + 20));
}

void static TypedValue.PrimitiveValue.AppValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  OUTLINED_FUNCTION_7_0();
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25446FF80);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_71();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_58();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_109_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_118();
  v14 = *v7 == *v5 && v7[1] == v5[1];
  if (v14 || (OUTLINED_FUNCTION_9_0(), OUTLINED_FUNCTION_345_1(), (v15 & 1) != 0))
  {
    v16 = OUTLINED_FUNCTION_398_1();
    OUTLINED_FUNCTION_223_1(*(int *)(v16 + 20));
    OUTLINED_FUNCTION_222_2(*(int *)(v16 + 20));
    OUTLINED_FUNCTION_154_3();
    OUTLINED_FUNCTION_217_1(v3);
    OUTLINED_FUNCTION_19(v0, 1, v8);
    if (!v14)
    {
      OUTLINED_FUNCTION_239_2();
      OUTLINED_FUNCTION_19((uint64_t)v5, 1, v8);
      if (!v18)
      {
        OUTLINED_FUNCTION_164_2();
        OUTLINED_FUNCTION_244_1();
        OUTLINED_FUNCTION_153_3();
        OUTLINED_FUNCTION_74_4(v3);
        OUTLINED_FUNCTION_74_4(v2);
        OUTLINED_FUNCTION_69(v1);
        OUTLINED_FUNCTION_74_4(v0);
        goto LABEL_15;
      }
      OUTLINED_FUNCTION_69_4(v3);
      OUTLINED_FUNCTION_69_4(v2);
      OUTLINED_FUNCTION_364(v19, type metadata accessor for DisplayRepresentation);
LABEL_14:
      OUTLINED_FUNCTION_290_0(v17, &qword_25446FF80);
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_74_4(v3);
    OUTLINED_FUNCTION_74_4(v2);
    v17 = OUTLINED_FUNCTION_19((uint64_t)v5, 1, v8);
    if (!v14)
      goto LABEL_14;
    OUTLINED_FUNCTION_290_0(v17, &qword_254479C20);
  }
LABEL_15:
  OUTLINED_FUNCTION_3_1();
}

void TypedValue.PrimitiveValue.AppValue.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_136_2();
  v1 = OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_71();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_248_2();
  OUTLINED_FUNCTION_2();
  v4 = type metadata accessor for TypedValue.PrimitiveValue.AppValue(0);
  v5 = OUTLINED_FUNCTION_477_1(v4);
  OUTLINED_FUNCTION_245_1(v5);
  OUTLINED_FUNCTION_19(v0, 1, v1);
  if (v6)
  {
    sub_2490E8908();
  }
  else
  {
    OUTLINED_FUNCTION_301_0(v0);
    sub_2490E8908();
    OUTLINED_FUNCTION_413_1();
    OUTLINED_FUNCTION_314_1();
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t sub_248F2FFC8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000249131360 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002491327F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2490E883C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_248F300B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000010;
}

unint64_t sub_248F300F0()
{
  char *v0;

  return sub_248F300B0(*v0);
}

uint64_t sub_248F300F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F2FFC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F3011C()
{
  sub_248F3024C();
  return sub_2490E8968();
}

uint64_t sub_248F30144()
{
  sub_248F3024C();
  return sub_2490E8974();
}

void TypedValue.PrimitiveValue.AppValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_116_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B68);
  OUTLINED_FUNCTION_34_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_44_7();
  sub_248F3024C();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_7();
  if (!v0)
  {
    type metadata accessor for TypedValue.PrimitiveValue.AppValue(0);
    OUTLINED_FUNCTION_361_1();
    OUTLINED_FUNCTION_258();
    sub_248F2FC1C((uint64_t)&unk_25446FF78);
    OUTLINED_FUNCTION_145_3();
  }
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_231_2();
  OUTLINED_FUNCTION_34_1();
}

unint64_t sub_248F3024C()
{
  unint64_t result;

  result = qword_2577E7B70;
  if (!qword_2577E7B70)
  {
    result = MEMORY[0x2495AD758](&unk_2490FF9EC, &type metadata for TypedValue.PrimitiveValue.AppValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7B70);
  }
  return result;
}

void TypedValue.PrimitiveValue.AppValue.hashValue.getter()
{
  sub_248DA9EB4((void (*)(_BYTE *))TypedValue.PrimitiveValue.AppValue.hash(into:));
}

void TypedValue.PrimitiveValue.AppValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_10();
  v5 = v4;
  v14 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_64();
  v15 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B78);
  OUTLINED_FUNCTION_233();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_137();
  v11 = type metadata accessor for TypedValue.PrimitiveValue.AppValue(v10);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_214_1(v5);
  sub_248F3024C();
  OUTLINED_FUNCTION_406_1();
  if (v0)
  {
    OUTLINED_FUNCTION_227_2();
  }
  else
  {
    *v2 = sub_2490E86F8();
    v2[1] = v13;
    OUTLINED_FUNCTION_258();
    OUTLINED_FUNCTION_361_1();
    sub_248F2FC1C((uint64_t)&unk_254476120);
    OUTLINED_FUNCTION_462_1();
    OUTLINED_FUNCTION_87_3(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_248E05C6C(v15, (uint64_t)v2 + *(int *)(v11 + 20));
    OUTLINED_FUNCTION_34((uint64_t)v2, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    OUTLINED_FUNCTION_69((uint64_t)v2);
  }
  OUTLINED_FUNCTION_363_1();
  OUTLINED_FUNCTION_1_1();
}

void sub_248F30458()
{
  TypedValue.PrimitiveValue.AppValue.init(from:)();
}

void sub_248F3046C()
{
  TypedValue.PrimitiveValue.AppValue.encode(to:)();
}

void sub_248F3048C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248DA9EF8(a1, a2, a3, (void (*)(_BYTE *))TypedValue.PrimitiveValue.AppValue.hash(into:));
}

id TypedValue.PrimitiveValue.PlacemarkValue.placemark.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue(0) + 20));
}

uint64_t type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_254479088);
}

void TypedValue.PrimitiveValue.PlacemarkValue.init(placemark:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_248F30A1C(a1, type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue, a2);
}

uint64_t TypedValue.PrimitiveValue.PlacemarkValue.init(codablePlacemark:displayRepresentation:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue(0) + 20)) = v2;
  v3 = OUTLINED_FUNCTION_108();
  return OUTLINED_FUNCTION_250_1(v3, v4);
}

void static TypedValue.PrimitiveValue.PlacemarkValue.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_248F33AF4(a1, a2, (uint64_t)type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void TypedValue.PrimitiveValue.PlacemarkValue.hash(into:)(uint64_t a1)
{
  sub_248F33D5C(a1, type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue);
}

uint64_t sub_248F30528(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000002491327F0 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249132810)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2490E883C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_248F30614(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0xD000000000000015;
}

unint64_t sub_248F30654()
{
  char *v0;

  return sub_248F30614(*v0);
}

uint64_t sub_248F3065C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F30528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F30680()
{
  sub_248F307C4();
  return sub_2490E8968();
}

uint64_t sub_248F306A8()
{
  sub_248F307C4();
  return sub_2490E8974();
}

void TypedValue.PrimitiveValue.PlacemarkValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_116_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7B80);
  OUTLINED_FUNCTION_34_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_44_7();
  sub_248F307C4();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_258();
  sub_248F2FC1C((uint64_t)&unk_25446FF78);
  OUTLINED_FUNCTION_104_5();
  if (!v0)
  {
    v2 = type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue(0);
    OUTLINED_FUNCTION_208_2(v2);
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_242_1((uint64_t)&unk_2577E7B98);
    OUTLINED_FUNCTION_16_6();
  }
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_231_2();
  OUTLINED_FUNCTION_34_1();
}

unint64_t sub_248F307C4()
{
  unint64_t result;

  result = qword_2577E7B88;
  if (!qword_2577E7B88)
  {
    result = MEMORY[0x2495AD758](&unk_2490FF99C, &type metadata for TypedValue.PrimitiveValue.PlacemarkValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7B88);
  }
  return result;
}

void TypedValue.PrimitiveValue.PlacemarkValue.hashValue.getter()
{
  sub_248DA9EB4((void (*)(_BYTE *))TypedValue.PrimitiveValue.PlacemarkValue.hash(into:));
}

void TypedValue.PrimitiveValue.PlacemarkValue.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_350_1(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_174_3(v6, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7BA0);
  OUTLINED_FUNCTION_227();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_333();
  v9 = type metadata accessor for TypedValue.PrimitiveValue.PlacemarkValue(v8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_214_1(v0);
  sub_248F307C4();
  OUTLINED_FUNCTION_150_3();
  if (v1)
  {
    OUTLINED_FUNCTION_410();
  }
  else
  {
    OUTLINED_FUNCTION_258();
    sub_248F2FC1C((uint64_t)&unk_254476120);
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_220_2();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_361_1();
    OUTLINED_FUNCTION_242_1((uint64_t)&unk_2577E7BA8);
    OUTLINED_FUNCTION_89_3();
    OUTLINED_FUNCTION_148(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_289_2();
    OUTLINED_FUNCTION_34(v9, v12);
    OUTLINED_FUNCTION_144_2((uint64_t)v0);
  }
  OUTLINED_FUNCTION_379();
  OUTLINED_FUNCTION_1_1();
}

void sub_248F3099C()
{
  TypedValue.PrimitiveValue.PlacemarkValue.init(from:)();
}

void sub_248F309B0()
{
  TypedValue.PrimitiveValue.PlacemarkValue.encode(to:)();
}

void sub_248F309D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248DA9EF8(a1, a2, a3, (void (*)(_BYTE *))TypedValue.PrimitiveValue.PlacemarkValue.hash(into:));
}

id TypedValue.PrimitiveValue.PersonValue.person.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for TypedValue.PrimitiveValue.PersonValue(0) + 20));
}

uint64_t type metadata accessor for TypedValue.PrimitiveValue.PersonValue(uint64_t a1)
{
  return sub_248DB43B0(a1, qword_25447AF40);
}

void TypedValue.PrimitiveValue.PersonValue.init(person:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_248F30A1C(a1, type metadata accessor for TypedValue.PrimitiveValue.PersonValue, a2);
}

void sub_248F30A1C(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_188(a3, v7, v8, v6);
  *(_QWORD *)(a3 + *(int *)(a2(0) + 20)) = a1;
  OUTLINED_FUNCTION_93();
}

uint64_t TypedValue.PrimitiveValue.PersonValue.init(person:displayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a2 + *(int *)(type metadata accessor for TypedValue.PrimitiveValue.PersonValue(0) + 20)) = a1;
  v2 = OUTLINED_FUNCTION_146_0();
  return OUTLINED_FUNCTION_250_1(v2, v3);
}

void static TypedValue.PrimitiveValue.PersonValue.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_248F33AF4(a1, a2, (uint64_t)type metadata accessor for TypedValue.PrimitiveValue.PersonValue, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void TypedValue.PrimitiveValue.PersonValue.hash(into:)(uint64_t a1)
{
  sub_248F33D5C(a1, type metadata accessor for TypedValue.PrimitiveValue.PersonValue);
}

uint64_t sub_248F30AB0(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000015 && a2 == 0x80000002491327F0 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50656C6261646F63 && a2 == 0xED00006E6F737265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2490E883C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_248F30BBC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x50656C6261646F63;
  else
    return 0xD000000000000015;
}

uint64_t sub_248F30C04()
{
  char *v0;

  return sub_248F30BBC(*v0);
}

uint64_t sub_248F30C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248F30AB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248F30C30()
{
  sub_248F30D74();
  return sub_2490E8968();
}

uint64_t sub_248F30C58()
{
  sub_248F30D74();
  return sub_2490E8974();
}

void TypedValue.PrimitiveValue.PersonValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_116_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7BB0);
  OUTLINED_FUNCTION_34_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_44_7();
  sub_248F30D74();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_258();
  sub_248F2FC1C((uint64_t)&unk_25446FF78);
  OUTLINED_FUNCTION_104_5();
  if (!v0)
  {
    v2 = type metadata accessor for TypedValue.PrimitiveValue.PersonValue(0);
    OUTLINED_FUNCTION_208_2(v2);
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_242_1((uint64_t)&unk_2577E7BC8);
    OUTLINED_FUNCTION_16_6();
  }
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_231_2();
  OUTLINED_FUNCTION_34_1();
}

unint64_t sub_248F30D74()
{
  unint64_t result;

  result = qword_2577E7BB8;
  if (!qword_2577E7BB8)
  {
    result = MEMORY[0x2495AD758](&unk_2490FF94C, &type metadata for TypedValue.PrimitiveValue.PersonValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577E7BB8);
  }
  return result;
}

void TypedValue.PrimitiveValue.PersonValue.hashValue.getter()
{
  sub_248DA9EB4((void (*)(_BYTE *))TypedValue.PrimitiveValue.PersonValue.hash(into:));
}

void TypedValue.PrimitiveValue.PersonValue.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_350_1(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_174_3(v6, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2577E7BD0);
  OUTLINED_FUNCTION_227();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_333();
  v9 = type metadata accessor for TypedValue.PrimitiveValue.PersonValue(v8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_214_1(v0);
  sub_248F30D74();
  OUTLINED_FUNCTION_150_3();
  if (v1)
  {
    OUTLINED_FUNCTION_410();
  }
  else
  {
    OUTLINED_FUNCTION_258();
    sub_248F2FC1C((uint64_t)&unk_254476120);
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_220_2();
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_361_1();
    OUTLINED_FUNCTION_242_1((uint64_t)&unk_2577E7BD8);
    OUTLINED_FUNCTION_89_3();
    OUTLINED_FUNCTION_148(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_289_2();
    OUTLINED_FUNCTION_34(v9, v12);
    OUTLINED_FUNCTION_144_2((uint64_t)v0);
  }
  OUTLINED_FUNCTION_379();
  OUTLINED_FUNCTION_1_1();
}

void sub_248F30F4C()
{
  TypedValue.PrimitiveValue.PersonValue.init(from:)();
}

void sub_248F30F60()
{
  TypedValue.PrimitiveValue.PersonValue.encode(to:)();
}

void sub_248F30F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248DA9EF8(a1, a2, a3, (void (*)(_BYTE *))TypedValue.PrimitiveValue.PersonValue.hash(into:));
}

uint64_t TypedValue.PrimitiveValue.CurrencyAmountValue.amount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void TypedValue.PrimitiveValue.CurrencyAmountValue.currencyIdentifier.getter()
{
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_1();
}

uint64_t TypedValue.PrimitiveValue.CurrencyAmountValue.displayRepresentation.getter()
{
  return sub_248F32F10();
}

uint64_t type metadata accessor for TypedValue.PrimitiveValue.CurrencyAmountValue(uint64_t a1)
{
  return sub_248DB43B0(a1, (uint64_t *)&unk_254479058);
}

uint64_t TypedValue.PrimitiveValue.CurrencyAmountValue.init(amount:currencyIdentifier:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __int16 v6;
  __int16 v7;
  int v8;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unsigned int v20;

  v6 = a3;
  v7 = a2;
  v8 = a1;
  v10 = HIDWORD(a1);
  v11 = HIWORD(a1);
  v12 = a2 >> 16;
  v13 = HIDWORD(a2);
  v14 = HIWORD(a2);
  v20 = HIWORD(a3);
  v15 = a6 + *(int *)(type metadata accessor for TypedValue.PrimitiveValue.CurrencyAmountValue(0) + 24);
  v16 = OUTLINED_FUNCTION_258();
  result = OUTLINED_FUNCTION_188(v15, v17, v18, v16);
  *(_DWORD *)a6 = v8;
  *(_WORD *)(a6 + 4) = v10;
  *(_WORD *)(a6 + 6) = v11;
  *(_WORD *)(a6 + 8) = v7;
  *(_WORD *)(a6 + 10) = v12;
  *(_WORD *)(a6 + 12) = v13;
  *(_WORD *)(a6 + 14) = v14;
  *(_WORD *)(a6 + 16) = v6;
  *(_WORD *)(a6 + 18) = v20;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

uint64_t TypedValue.PrimitiveValue.CurrencyAmountValue.init(amount:currencyIdentifier:displayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_DWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  type metadata accessor for TypedValue.PrimitiveValue.CurrencyAmountValue(0);
  v6 = OUTLINED_FUNCTION_371_1();
  return OUTLINED_FUNCTION_125_3(v6, v7);
}

void static TypedValue.PrimitiveValue.CurrencyAmountValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  OUTLINED_FUNCTION_7_0();
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25446FF80);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_71();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_58();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_109_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_118();
  if ((MEMORY[0x2495ACBAC](*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(unsigned int *)(v7 + 16), *(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(unsigned int *)(v5 + 16)) & 1) != 0)
  {
    v14 = *(_QWORD *)(v7 + 24) == *(_QWORD *)(v5 + 24) && *(_QWORD *)(v7 + 32) == *(_QWORD *)(v5 + 32);
    if (v14 || (OUTLINED_FUNCTION_9_0(), OUTLINED_FUNCTION_345_1(), (v15 & 1) != 0))
    {
      v16 = OUTLINED_FUNCTION_400_1();
      OUTLINED_FUNCTION_223_1(*(int *)(v16 + 24));
      OUTLINED_FUNCTION_222_2(*(int *)(v16 + 24));
      OUTLINED_FUNCTION_154_3();
      OUTLINED_FUNCTION_217_1(v3);
      OUTLINED_FUNCTION_19(v0, 1, v8);
      if (!v14)
      {
        OUTLINED_FUNCTION_239_2();
        OUTLINED_FUNCTION_19(v5, 1, v8);
        if (!v18)
        {
          OUTLINED_FUNCTION_164_2();
          OUTLINED_FUNCTION_244_1();
          OUTLINED_FUNCTION_153_3();
          OUTLINED_FUNCTION_74_4(v3);
          OUTLINED_FUNCTION_74_4(v2);
          OUTLINED_FUNCTION_69(v1);
          OUTLINED_FUNCTION_74_4(v0);
          goto LABEL_16;
        }
        OUTLINED_FUNCTION_69_4(v3);
        OUTLINED_FUNCTION_69_4(v2);
        OUTLINED_FUNCTION_364(v19, type metadata accessor for DisplayRepresentation);
LABEL_15:
        OUTLINED_FUNCTION_290_0(v17, &qword_25446FF80);
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_74_4(v3);
      OUTLINED_FUNCTION_74_4(v2);
      v17 = OUTLINED_FUNCTION_19(v5, 1, v8);
      if (!v14)
        goto LABEL_15;
      OUTLINED_FUNCTION_290_0(v17, &qword_254479C20);
    }
  }
LABEL_16:
  OUTLINED_FUNCTION_3_1();
}

void TypedValue.PrimitiveValue.CurrencyAmountValue.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_136_2();
  v2 = OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_71();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254479C20);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_32();
  sub_2490E83E0();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_248_2();
  OUTLINED_FUNCTION_2();
  v5 = type metadata accessor for TypedValue.PrimitiveValue.CurrencyAmountValue(0);
  sub_248F2FCA4(v0 + *(int *)(v5 + 24), v1);
  OUTLINED_FUNCTION_19(v1, 1, v2);
  if (v6)
  {
    OUTLINED_FUNCTION_206_1();
  }
  else
  {
    OUTLINED_FUNCTION_301_0(v1);
    OUTLINED_FUNCTION_206_1();
    OUTLINED_FUNCTION_413_1();
    OUTLINED_FUNCTION_314_1();
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t sub_248F313D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F6D61 && a2 == 0xE600000000000000;
  if (v2 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249132830 || (sub_2490E883C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002491327F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2490E883C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

